(function (root, factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', 'kotlin', 'korag-js', 'korio-js', 'korim-js', 'korge-js', 'korma-js', 'klock-js'], factory);
  else if (typeof exports === 'object')
    factory(module.exports, require('kotlin'), require('korag-js'), require('korio-js'), require('korim-js'), require('korge-js'), require('korma-js'), require('klock-js'));
  else {
    if (typeof kotlin === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'kotlin' was not found. Please, check whether 'kotlin' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['korag-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'korag-js' was not found. Please, check whether 'korag-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['korio-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'korio-js' was not found. Please, check whether 'korio-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['korim-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'korim-js' was not found. Please, check whether 'korim-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['korge-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'korge-js' was not found. Please, check whether 'korge-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['korma-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'korma-js' was not found. Please, check whether 'korma-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['klock-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'klock-js' was not found. Please, check whether 'klock-js' is loaded prior to 'kpspemu'.");
    }
    root.kpspemu = factory(typeof kpspemu === 'undefined' ? {} : kpspemu, kotlin, this['korag-js'], this['korio-js'], this['korim-js'], this['korge-js'], this['korma-js'], this['klock-js']);
  }
}(this, function (_, Kotlin, $module$korag_js, $module$korio_js, $module$korim_js, $module$korge_js, $module$korma_js, $module$klock_js) {
  'use strict';
  var $$importsForInline$$ = _.$$importsForInline$$ || (_.$$importsForInline$$ = {});
  var Kind_OBJECT = Kotlin.Kind.OBJECT;
  var Kind_CLASS = Kotlin.Kind.CLASS;
  var Unit = Kotlin.kotlin.Unit;
  var AG$Blending = $module$korag_js.com.soywiz.korag.AG.Blending;
  var ensureNotNull = Kotlin.ensureNotNull;
  var toList = Kotlin.kotlin.collections.toList_i2lc79$;
  var openSync = $module$korio_js.com.soywiz.korio.stream.openSync_m1iwyb$;
  var toString = Kotlin.toString;
  var AG$CompareMode = $module$korag_js.com.soywiz.korag.AG.CompareMode;
  var color = $module$korim_js.com.soywiz.korim.color;
  var to = Kotlin.kotlin.to_ujzrz7$;
  var mapOf = Kotlin.kotlin.collections.mapOf_x2b85n$;
  var VarType = $module$korag_js.com.soywiz.korag.shader.VarType;
  var listOf = Kotlin.kotlin.collections.listOf_i5x0yv$;
  var Attribute = $module$korag_js.com.soywiz.korag.shader.Attribute;
  var Varying = $module$korag_js.com.soywiz.korag.shader.Varying;
  var filterNotNull = Kotlin.kotlin.collections.filterNotNull_m3lr2h$;
  var VertexLayout = $module$korag_js.com.soywiz.korag.shader.VertexLayout;
  var VertexShader = $module$korag_js.com.soywiz.korag.shader.VertexShader_8zzl3$;
  var FragmentShader = $module$korag_js.com.soywiz.korag.shader.FragmentShader_8zzl3$;
  var Program = $module$korag_js.com.soywiz.korag.shader.Program;
  var Bitmap32 = $module$korim_js.com.soywiz.korim.bitmap.Bitmap32;
  var AG$RenderState = $module$korag_js.com.soywiz.korag.AG.RenderState;
  var Uniform = $module$korag_js.com.soywiz.korag.shader.Uniform;
  var LinkedHashMap_init = Kotlin.kotlin.collections.LinkedHashMap_init_q3lmfv$;
  var AG$DrawType = $module$korag_js.com.soywiz.korag.AG.DrawType;
  var equals = Kotlin.equals;
  var StringBuilder = Kotlin.kotlin.text.StringBuilder;
  var Kind_INTERFACE = Kotlin.Kind.INTERFACE;
  var korge = $module$korge_js.com.soywiz.korge;
  var AsyncInjector = $module$korio_js.com.soywiz.korio.inject.AsyncInjector;
  var getKClass = Kotlin.getKClass;
  var Browser = $module$korge_js.com.soywiz.korge.service.Browser;
  var CoroutineImpl = Kotlin.kotlin.coroutines.experimental.CoroutineImpl;
  var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.experimental.intrinsics.COROUTINE_SUSPENDED;
  var SizeInt = $module$korma_js.com.soywiz.korma.geom.SizeInt;
  var Module = $module$korge_js.com.soywiz.korge.scene.Module;
  var throwUPAE = Kotlin.throwUPAE;
  var PropertyMetadata = Kotlin.PropertyMetadata;
  var println = Kotlin.kotlin.io.println_s8jyv4$;
  var vfs = $module$korio_js.com.soywiz.korio.vfs;
  var util = $module$korio_js.com.soywiz.korio.util;
  var printStackTrace = $module$korio_js.com.soywiz.korio.lang.printStackTrace_dbl4o4$;
  var Throwable = Error;
  var text = $module$korge_js.com.soywiz.korge.view.text_ae47yq$;
  var plusAssign = $module$korge_js.com.soywiz.korge.view.plusAssign_5hnngd$;
  var setText = $module$korge_js.com.soywiz.korge.view.setText_4h3qbs$;
  var View = $module$korge_js.com.soywiz.korge.view.View;
  var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
  var tween = $module$korge_js.com.soywiz.korge.tween.tween_wrai67$;
  var sleep = $module$korge_js.com.soywiz.korge.scene.sleep_hnjj7n$;
  var Scene = $module$korge_js.com.soywiz.korge.scene.Scene;
  var texture = $module$korge_js.com.soywiz.korge.view.texture_q2u7nr$;
  var lazy = Kotlin.kotlin.lazy_klfg04$;
  var BitmapFont = $module$korge_js.com.soywiz.korge.bitmapfont.BitmapFont;
  var font = $module$korim_js.com.soywiz.korim.font;
  var AsyncThread = $module$korio_js.com.soywiz.korio.async.AsyncThread;
  var IsoVfs = $module$korio_js.com.soywiz.korio.vfs.IsoVfs_phxig4$;
  var invalidOp = $module$korio_js.com.soywiz.korio.error.invalidOp_61zpoe$;
  var Exception = Kotlin.kotlin.Exception;
  var extract = $module$korio_js.com.soywiz.korio.util.extract_e4yvb3$;
  var insert = $module$korio_js.com.soywiz.korio.util.insert_4684dr$;
  var extract_0 = $module$korio_js.com.soywiz.korio.util.extract_dqglrj$;
  var insert_0 = $module$korio_js.com.soywiz.korio.util.insert_kvkj6u$;
  var Extra = $module$korio_js.com.soywiz.korio.util.Extra;
  var Extra$Mixin = $module$korio_js.com.soywiz.korio.util.Extra.Mixin;
  var KorioNative$FastMemory = $module$korio_js.com.soywiz.korio.KorioNative.FastMemory;
  var defineInlineFunction = Kotlin.defineInlineFunction;
  var wrapFunction = Kotlin.wrapFunction;
  var format = $module$korio_js.com.soywiz.korio.lang.format_e33kwl$;
  var toMap = Kotlin.kotlin.collections.toMap_6hr0sd$;
  var mapOf_0 = Kotlin.kotlin.collections.mapOf_qfcya0$;
  var split = Kotlin.kotlin.text.split_o64adg$;
  var Regex = Kotlin.kotlin.text.Regex_61zpoe$;
  var iterator = Kotlin.kotlin.text.iterator_gw00vp$;
  var unboxChar = Kotlin.unboxChar;
  var replace = Kotlin.kotlin.text.replace_r2fvfm$;
  var IndexOutOfBoundsException = Kotlin.kotlin.IndexOutOfBoundsException;
  var lang = $module$korio_js.com.soywiz.korio.lang;
  var udiv = $module$korio_js.com.soywiz.korio.util.udiv_dqglrj$;
  var urem = $module$korio_js.com.soywiz.korio.util.urem_dqglrj$;
  var numberToInt = Kotlin.numberToInt;
  var isNaN_0 = Kotlin.kotlin.isNaN_81szk$;
  var isInfinite = Kotlin.kotlin.isInfinite_81szk$;
  var Enum = Kotlin.kotlin.Enum;
  var throwISE = Kotlin.throwISE;
  var Signal = $module$korio_js.com.soywiz.korio.async.Signal;
  var readS32_le = $module$korio_js.com.soywiz.korio.stream.readS32_le_yjldv$;
  var readIntArray_le = $module$korio_js.com.soywiz.korio.stream.readIntArray_le_a0g59h$;
  var toList_0 = Kotlin.kotlin.collections.toList_tmsbgo$;
  var listOf_0 = Kotlin.kotlin.collections.listOf_mh5how$;
  var plus = Kotlin.kotlin.collections.plus_mydzjv$;
  var until = Kotlin.kotlin.ranges.until_dqglrj$;
  var sliceWithBounds = $module$korio_js.com.soywiz.korio.stream.sliceWithBounds_i9mzv9$;
  var zip = Kotlin.kotlin.collections.zip_45mdf7$;
  var readS32_le_0 = $module$korio_js.com.soywiz.korio.stream.readS32_le_p2awyq$;
  var readU16_le = $module$korio_js.com.soywiz.korio.stream.readU16_le_p2awyq$;
  var readU8 = $module$korio_js.com.soywiz.korio.stream.readU8_p2awyq$;
  var sliceWithStart = $module$korio_js.com.soywiz.korio.stream.sliceWithStart_gezhyr$;
  var readStringz = $module$korio_js.com.soywiz.korio.stream.readStringz_4zsegu$;
  var sliceWithSize = $module$korio_js.com.soywiz.korio.stream.sliceWithSize_1r8368$;
  var readSlice = $module$korio_js.com.soywiz.korio.stream.readSlice_gezhyr$;
  var lmapOf = $module$korio_js.com.soywiz.korio.ds.lmapOf_qfcya0$;
  var sliceWithSize_0 = $module$korio_js.com.soywiz.korio.stream.sliceWithSize_acdave$;
  var readStringz_0 = $module$korio_js.com.soywiz.korio.stream.readStringz_6ey4ts$;
  var readUByteArray = $module$korio_js.com.soywiz.korio.stream.readUByteArray_xpzb7k$;
  var readS16_le = $module$korio_js.com.soywiz.korio.stream.readS16_le_p2awyq$;
  var toByteArray = $module$korio_js.com.soywiz.korio.lang.toByteArray_7jlb4b$;
  var toIntArray = Kotlin.kotlin.collections.toIntArray_fx3nzu$;
  var last = Kotlin.kotlin.collections.last_2p1efm$;
  var nextAlignedTo = $module$korma_js.com.soywiz.korma.numeric.nextAlignedTo_dqglrj$;
  var until_0 = Kotlin.kotlin.ranges.until_ebnic$;
  var Error_0 = Kotlin.kotlin.Error;
  var copyTo = $module$korio_js.com.soywiz.korio.stream.copyTo_y2f6oo$;
  var readAll = $module$korio_js.com.soywiz.korio.stream.readAll_ucmi9i$;
  var slice = $module$korio_js.com.soywiz.korio.stream.slice_i2r7m7$;
  var write32_le = $module$korio_js.com.soywiz.korio.stream.write32_le_n5df9z$;
  var first = Kotlin.kotlin.collections.first_2p1efm$;
  var Matrix4 = $module$korag_js.com.soywiz.korag.geom.Matrix4;
  var copyOf = Kotlin.kotlin.collections.copyOf_mrm5p$;
  var copyOf_0 = Kotlin.kotlin.collections.copyOf_m2jy6x$;
  var toShort = Kotlin.toShort;
  var copyRangeTo = $module$korio_js.com.soywiz.korio.typedarray.copyRangeTo_boa5ab$;
  var contentHashCode = Kotlin.arrayHashCode;
  var joinToString = Kotlin.kotlin.collections.joinToString_fmv235$;
  var extractScaledf01 = $module$korio_js.com.soywiz.korio.util.extractScaledf01_e4yvb3$;
  var copyRangeTo_0 = $module$korio_js.com.soywiz.korio.typedarray.copyRangeTo_m9cn97$;
  var nextAlignedTo_0 = $module$korio_js.com.soywiz.korio.util.nextAlignedTo_dqglrj$;
  var toList_1 = Kotlin.kotlin.collections.toList_rjqryz$;
  var skipToAlign = $module$korio_js.com.soywiz.korio.stream.skipToAlign_hsu5ns$;
  var readS8 = $module$korio_js.com.soywiz.korio.stream.readS8_p2awyq$;
  var readF32_le = $module$korio_js.com.soywiz.korio.stream.readF32_le_p2awyq$;
  var toList_2 = Kotlin.kotlin.collections.toList_7wnvza$;
  var Continuation = Kotlin.kotlin.coroutines.experimental.Continuation;
  var startCoroutine = Kotlin.kotlin.coroutines.experimental.startCoroutine_uao1qo$;
  var Promise = $module$korio_js.com.soywiz.korio.async.Promise;
  var MemoryVfs = $module$korio_js.com.soywiz.korio.vfs.MemoryVfs_r2g07k$;
  var throwCCE = Kotlin.throwCCE;
  var contains = Kotlin.kotlin.text.contains_sgbm27$;
  var startsWith = Kotlin.kotlin.text.startsWith_sgbm27$;
  var Pool_init = $module$korio_js.com.soywiz.korio.util.Pool_init_xsjjga$;
  var LinkedHashMap = Kotlin.kotlin.collections.LinkedHashMap;
  var getCallableRef = Kotlin.getCallableRef;
  var Extra$Property = $module$korio_js.com.soywiz.korio.util.Extra.Property;
  var klock = $module$klock_js.com.soywiz.klock;
  var VfsOpenMode = $module$korio_js.com.soywiz.korio.vfs.VfsOpenMode;
  var write64_le = $module$korio_js.com.soywiz.korio.stream.write64_le_7bhjh0$;
  var get_createDate = $module$korio_js.com.soywiz.korio.vfs.get_createDate_9ayeyb$;
  var get_lastAccessDate = $module$korio_js.com.soywiz.korio.vfs.get_lastAccessDate_9ayeyb$;
  var get_modifiedDate = $module$korio_js.com.soywiz.korio.vfs.get_modifiedDate_9ayeyb$;
  var toString_0 = $module$korio_js.com.soywiz.korio.lang.toString_5kit73$;
  var readByteArray = $module$korio_js.com.soywiz.korio.util.readByteArray_ietg8x$;
  var print = Kotlin.kotlin.io.print_s8jyv4$;
  var AsyncStreamBase = $module$korio_js.com.soywiz.korio.stream.AsyncStreamBase;
  var toAsyncStream = $module$korio_js.com.soywiz.korio.stream.toAsyncStream_ejtyh5$;
  var MtRand_init = $module$korma_js.com.soywiz.korma.random.MtRand_init_za3lpa$;
  var getCoroutineContext = $module$korio_js.com.soywiz.korio.coroutine.getCoroutineContext;
  var sleep_0 = $module$korio_js.com.soywiz.korio.async.sleep_3e9wbq$;
  var waitOne = $module$korio_js.com.soywiz.korio.async.waitOne_b1yv1r$;
  var DateTime = $module$klock_js.com.soywiz.klock.DateTime;
  var Month = $module$klock_js.com.soywiz.klock.Month;
  var clamp = $module$korio_js.com.soywiz.korio.util.clamp_e4yvb3$;
  var write16_le = $module$korio_js.com.soywiz.korio.stream.write16_le_n5df9z$;
  var get_0 = $module$korio_js.com.soywiz.korio.serialization.xml.get_h00kq4$;
  var first_0 = Kotlin.kotlin.collections.first_7wnvza$;
  var toByte = Kotlin.toByte;
  var error = $module$korio_js.com.soywiz.korio.error;
  var SyncStreamBase = $module$korio_js.com.soywiz.korio.stream.SyncStreamBase;
  var SyncStream = $module$korio_js.com.soywiz.korio.stream.SyncStream;
  var toSyncStream = $module$korio_js.com.soywiz.korio.stream.toSyncStream_wrqxjw$;
  var LocalVfs = $module$korio_js.com.soywiz.korio.vfs.LocalVfs_61zpoe$;
  var first_1 = Kotlin.kotlin.collections.first_us0mfu$;
  var max = Kotlin.kotlin.collections.max_exjks8$;
  var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_ww73n8$;
  var abs = Kotlin.kotlin.math.abs_za3lpa$;
  var Promise$Deferred = $module$korio_js.com.soywiz.korio.async.Promise.Deferred;
  var toLong = Kotlin.kotlin.text.toLong_6ic1pp$;
  var startsWith_0 = Kotlin.kotlin.text.startsWith_7epoxm$;
  var toInt = Kotlin.kotlin.text.toInt_pdl1vz$;
  var quote = $module$korio_js.com.soywiz.korio.util.quote_5cw0du$;
  var get_hexString = $module$korio_js.com.soywiz.korio.util.get_hexString_964n91$;
  var removeAll = Kotlin.kotlin.collections.removeAll_qafx1e$;
  var FileNotFoundException = $module$korio_js.com.soywiz.korio.FileNotFoundException;
  var Vfs$Proxy = $module$korio_js.com.soywiz.korio.vfs.Vfs.Proxy;
  var stream = $module$korio_js.com.soywiz.korio.stream;
  var toIntClamp = $module$korio_js.com.soywiz.korio.util.toIntClamp_jfhjuu$;
  var readBytesExact = $module$korio_js.com.soywiz.korio.stream.readBytesExact_a0g59h$;
  var indexOf = $module$korio_js.com.soywiz.korio.util.indexOf_ndt7zj$;
  var IllegalArgumentException = Kotlin.kotlin.IllegalArgumentException;
  var trim = Kotlin.kotlin.text.trim_wqw3xr$;
  var readS32_be = $module$korio_js.com.soywiz.korio.stream.readS32_be_p2awyq$;
  var IllegalStateException = Kotlin.kotlin.IllegalStateException;
  var sliceWithSize_1 = $module$korio_js.com.soywiz.korio.stream.sliceWithSize_i9mzv9$;
  var readAvailable = $module$korio_js.com.soywiz.korio.stream.readAvailable_yjldv$;
  var readString = $module$korio_js.com.soywiz.korio.stream.readString_6ey4ts$;
  var readBytes = $module$korio_js.com.soywiz.korio.stream.readBytes_xpzb7k$;
  var endsWith = Kotlin.kotlin.text.endsWith_7epoxm$;
  var substringBeforeLast = Kotlin.kotlin.text.substringBeforeLast_8cymmc$;
  var substringAfterLast = Kotlin.kotlin.text.substringAfterLast_8cymmc$;
  var toUInt = $module$korio_js.com.soywiz.korio.util.toUInt_s8ev3n$;
  var sliceWithStart_0 = $module$korio_js.com.soywiz.korio.stream.sliceWithStart_dqczag$;
  var PathInfo = $module$korio_js.com.soywiz.korio.vfs.PathInfo;
  var openAsync = $module$korio_js.com.soywiz.korio.stream.openAsync_m1iwyb$;
  var IOException = $module$korio_js.com.soywiz.korio.IOException;
  var slice_0 = $module$korio_js.com.soywiz.korio.stream.slice_g5ykjz$;
  var readS32_be_0 = $module$korio_js.com.soywiz.korio.stream.readS32_be_yjldv$;
  var readU16_le_0 = $module$korio_js.com.soywiz.korio.stream.readU16_le_yjldv$;
  var readString_0 = $module$korio_js.com.soywiz.korio.stream.readString_4xit9n$;
  var readBytes_0 = $module$korio_js.com.soywiz.korio.stream.readBytes_a0g59h$;
  var readSlice_0 = $module$korio_js.com.soywiz.korio.stream.readSlice_dqczag$;
  var KorioNative$Inflater = $module$korio_js.com.soywiz.korio.KorioNative.Inflater;
  var InflateAsyncStream = $module$korio_js.com.soywiz.korio.vfs.InflateAsyncStream;
  var toAsyncStream_0 = $module$korio_js.com.soywiz.korio.stream.toAsyncStream_iwjsyo$;
  var asyncGenerate = $module$korio_js.com.soywiz.korio.async.asyncGenerate_33q1hl$;
  var withCoroutineContext = $module$korio_js.com.soywiz.korio.coroutine.withCoroutineContext_3hy5wj$;
  var Vfs = $module$korio_js.com.soywiz.korio.vfs.Vfs;
  var getBits = $module$korio_js.com.soywiz.korio.util.getBits_e4yvb3$;
  KpspemuModule.prototype = Object.create(Module.prototype);
  KpspemuModule.prototype.constructor = KpspemuModule;
  KpspemuMainScene$sceneInit$ObjectLiteral.prototype = Object.create(View.prototype);
  KpspemuMainScene$sceneInit$ObjectLiteral.prototype.constructor = KpspemuMainScene$sceneInit$ObjectLiteral;
  KpspemuMainScene.prototype = Object.create(Scene.prototype);
  KpspemuMainScene.prototype.constructor = KpspemuMainScene;
  CpuBreakException.prototype = Object.create(Exception.prototype);
  CpuBreakException.prototype.constructor = CpuBreakException;
  InstructionEvaluator.prototype = Object.create(InstructionDecoder.prototype);
  InstructionEvaluator.prototype.constructor = InstructionEvaluator;
  InstructionOpcodeDecoder$ResultInstructionEvaluator.prototype = Object.create(InstructionEvaluator.prototype);
  InstructionOpcodeDecoder$ResultInstructionEvaluator.prototype.constructor = InstructionOpcodeDecoder$ResultInstructionEvaluator;
  Disassembler.prototype = Object.create(InstructionDecoder.prototype);
  Disassembler.prototype.constructor = Disassembler;
  InstructionInterpreter.prototype = Object.create(InstructionEvaluator.prototype);
  InstructionInterpreter.prototype.constructor = InstructionInterpreter;
  PspCtrlButtons.prototype = Object.create(Enum.prototype);
  PspCtrlButtons.prototype.constructor = PspCtrlButtons;
  ElfType.prototype = Object.create(Enum.prototype);
  ElfType.prototype.constructor = ElfType;
  ElfMachine.prototype = Object.create(Enum.prototype);
  ElfMachine.prototype.constructor = ElfMachine;
  ElfPspModuleFlags.prototype = Object.create(Enum.prototype);
  ElfPspModuleFlags.prototype.constructor = ElfPspModuleFlags;
  ElfPspLibFlags.prototype = Object.create(Enum.prototype);
  ElfPspLibFlags.prototype.constructor = ElfPspLibFlags;
  ElfPspModuleNids.prototype = Object.create(Enum.prototype);
  ElfPspModuleNids.prototype.constructor = ElfPspModuleNids;
  ElfRelocType.prototype = Object.create(Enum.prototype);
  ElfRelocType.prototype.constructor = ElfRelocType;
  PrimAction.prototype = Object.create(Enum.prototype);
  PrimAction.prototype.constructor = PrimAction;
  ListSyncKind.prototype = Object.create(Enum.prototype);
  ListSyncKind.prototype.constructor = ListSyncKind;
  CullingDirection$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  CullingDirection$Companion.prototype.constructor = CullingDirection$Companion;
  CullingDirection.prototype = Object.create(Enum.prototype);
  CullingDirection.prototype.constructor = CullingDirection;
  SyncType$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  SyncType$Companion.prototype.constructor = SyncType$Companion;
  SyncType.prototype = Object.create(Enum.prototype);
  SyncType.prototype.constructor = SyncType;
  DisplayListStatus$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  DisplayListStatus$Companion.prototype.constructor = DisplayListStatus$Companion;
  DisplayListStatus.prototype = Object.create(Enum.prototype);
  DisplayListStatus.prototype.constructor = DisplayListStatus;
  IndexEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  IndexEnum$Companion.prototype.constructor = IndexEnum$Companion;
  IndexEnum.prototype = Object.create(Enum.prototype);
  IndexEnum.prototype.constructor = IndexEnum;
  NumericEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  NumericEnum$Companion.prototype.constructor = NumericEnum$Companion;
  NumericEnum.prototype = Object.create(Enum.prototype);
  NumericEnum.prototype.constructor = NumericEnum;
  ColorEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  ColorEnum$Companion.prototype.constructor = ColorEnum$Companion;
  ColorEnum.prototype = Object.create(Enum.prototype);
  ColorEnum.prototype.constructor = ColorEnum;
  LightTypeEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  LightTypeEnum$Companion.prototype.constructor = LightTypeEnum$Companion;
  LightTypeEnum.prototype = Object.create(Enum.prototype);
  LightTypeEnum.prototype.constructor = LightTypeEnum;
  LightModelEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  LightModelEnum$Companion.prototype.constructor = LightModelEnum$Companion;
  LightModelEnum.prototype = Object.create(Enum.prototype);
  LightModelEnum.prototype.constructor = LightModelEnum;
  TextureProjectionMapMode$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  TextureProjectionMapMode$Companion.prototype.constructor = TextureProjectionMapMode$Companion;
  TextureProjectionMapMode.prototype = Object.create(Enum.prototype);
  TextureProjectionMapMode.prototype.constructor = TextureProjectionMapMode;
  TextureMapMode$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  TextureMapMode$Companion.prototype.constructor = TextureMapMode$Companion;
  TextureMapMode.prototype = Object.create(Enum.prototype);
  TextureMapMode.prototype.constructor = TextureMapMode;
  TextureLevelMode$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  TextureLevelMode$Companion.prototype.constructor = TextureLevelMode$Companion;
  TextureLevelMode.prototype = Object.create(Enum.prototype);
  TextureLevelMode.prototype.constructor = TextureLevelMode;
  TestFunctionEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  TestFunctionEnum$Companion.prototype.constructor = TestFunctionEnum$Companion;
  TestFunctionEnum.prototype = Object.create(Enum.prototype);
  TestFunctionEnum.prototype.constructor = TestFunctionEnum;
  ShadingModelEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  ShadingModelEnum$Companion.prototype.constructor = ShadingModelEnum$Companion;
  ShadingModelEnum.prototype = Object.create(Enum.prototype);
  ShadingModelEnum.prototype.constructor = ShadingModelEnum;
  GuBlendingFactor$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  GuBlendingFactor$Companion.prototype.constructor = GuBlendingFactor$Companion;
  GuBlendingFactor.prototype = Object.create(Enum.prototype);
  GuBlendingFactor.prototype.constructor = GuBlendingFactor;
  GuBlendingEquation$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  GuBlendingEquation$Companion.prototype.constructor = GuBlendingEquation$Companion;
  GuBlendingEquation.prototype = Object.create(Enum.prototype);
  GuBlendingEquation.prototype.constructor = GuBlendingEquation;
  StencilOperationEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  StencilOperationEnum$Companion.prototype.constructor = StencilOperationEnum$Companion;
  StencilOperationEnum.prototype = Object.create(Enum.prototype);
  StencilOperationEnum.prototype.constructor = StencilOperationEnum;
  WrapMode$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  WrapMode$Companion.prototype.constructor = WrapMode$Companion;
  WrapMode.prototype = Object.create(Enum.prototype);
  WrapMode.prototype.constructor = WrapMode;
  TextureEffect$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  TextureEffect$Companion.prototype.constructor = TextureEffect$Companion;
  TextureEffect.prototype = Object.create(Enum.prototype);
  TextureEffect.prototype.constructor = TextureEffect;
  TextureFilter$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  TextureFilter$Companion.prototype.constructor = TextureFilter$Companion;
  TextureFilter.prototype = Object.create(Enum.prototype);
  TextureFilter.prototype.constructor = TextureFilter;
  TextureColorComponent$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  TextureColorComponent$Companion.prototype.constructor = TextureColorComponent$Companion;
  TextureColorComponent.prototype = Object.create(Enum.prototype);
  TextureColorComponent.prototype.constructor = TextureColorComponent;
  PrimitiveType$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  PrimitiveType$Companion.prototype.constructor = PrimitiveType$Companion;
  PrimitiveType.prototype = Object.create(Enum.prototype);
  PrimitiveType.prototype.constructor = PrimitiveType;
  VertexType$Attribute.prototype = Object.create(Enum.prototype);
  VertexType$Attribute.prototype.constructor = VertexType$Attribute;
  PixelFormat$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  PixelFormat$Companion.prototype.constructor = PixelFormat$Companion;
  PixelFormat.prototype = Object.create(Enum.prototype);
  PixelFormat.prototype.constructor = PixelFormat;
  CallbackManager.prototype = Object.create(Manager.prototype);
  CallbackManager.prototype.constructor = CallbackManager;
  PspCallback.prototype = Object.create(Resource.prototype);
  PspCallback.prototype.constructor = PspCallback;
  MemoryAnchor.prototype = Object.create(Enum.prototype);
  MemoryAnchor.prototype.constructor = MemoryAnchor;
  OutOfMemoryError.prototype = Object.create(Exception.prototype);
  OutOfMemoryError.prototype.constructor = OutOfMemoryError;
  ThreadManager.prototype = Object.create(Manager.prototype);
  ThreadManager.prototype.constructor = ThreadManager;
  WaitObject$TIME.prototype = Object.create(WaitObject.prototype);
  WaitObject$TIME.prototype.constructor = WaitObject$TIME;
  WaitObject$PROMISE.prototype = Object.create(WaitObject.prototype);
  WaitObject$PROMISE.prototype.constructor = WaitObject$PROMISE;
  WaitObject$SLEEP.prototype = Object.create(WaitObject.prototype);
  WaitObject$SLEEP.prototype.constructor = WaitObject$SLEEP;
  WaitObject$VBLANK.prototype = Object.create(WaitObject.prototype);
  WaitObject$VBLANK.prototype.constructor = WaitObject$VBLANK;
  PspThread$Phase.prototype = Object.create(Enum.prototype);
  PspThread$Phase.prototype.constructor = PspThread$Phase;
  PspThread.prototype = Object.create(Resource.prototype);
  PspThread.prototype.constructor = PspThread;
  IoFileMgrForUser.prototype = Object.create(SceModule.prototype);
  IoFileMgrForUser.prototype.constructor = IoFileMgrForUser;
  LoadExecForUser.prototype = Object.create(SceModule.prototype);
  LoadExecForUser.prototype.constructor = LoadExecForUser;
  ModuleMgrForUser.prototype = Object.create(SceModule.prototype);
  ModuleMgrForUser.prototype.constructor = ModuleMgrForUser;
  StdioForUser$StdioStream.prototype = Object.create(AsyncStreamBase.prototype);
  StdioForUser$StdioStream.prototype.constructor = StdioForUser$StdioStream;
  StdioForUser.prototype = Object.create(SceModule.prototype);
  StdioForUser.prototype.constructor = StdioForUser;
  SysMemUserForUser.prototype = Object.create(SceModule.prototype);
  SysMemUserForUser.prototype.constructor = SysMemUserForUser;
  ThreadManForUser.prototype = Object.create(SceModule.prototype);
  ThreadManForUser.prototype.constructor = ThreadManForUser;
  UtilsForKernel.prototype = Object.create(SceModule.prototype);
  UtilsForKernel.prototype.constructor = UtilsForKernel;
  UtilsForUser.prototype = Object.create(SceModule.prototype);
  UtilsForUser.prototype.constructor = UtilsForUser;
  sceAudio.prototype = Object.create(SceModule.prototype);
  sceAudio.prototype.constructor = sceAudio;
  sceCtrl.prototype = Object.create(SceModule.prototype);
  sceCtrl.prototype.constructor = sceCtrl;
  sceDisplay.prototype = Object.create(SceModule.prototype);
  sceDisplay.prototype.constructor = sceDisplay;
  sceGe_user.prototype = Object.create(SceModule.prototype);
  sceGe_user.prototype.constructor = sceGe_user;
  sceNetInet.prototype = Object.create(SceModule.prototype);
  sceNetInet.prototype.constructor = sceNetInet;
  scePower.prototype = Object.create(SceModule.prototype);
  scePower.prototype.constructor = scePower;
  sceRtc.prototype = Object.create(SceModule.prototype);
  sceRtc.prototype.constructor = sceRtc;
  DummyMemory.prototype = Object.create(Memory.prototype);
  DummyMemory.prototype.constructor = DummyMemory;
  TraceMemory.prototype = Object.create(Memory.prototype);
  TraceMemory.prototype.constructor = TraceMemory;
  openSync$ObjectLiteral.prototype = Object.create(SyncStreamBase.prototype);
  openSync$ObjectLiteral.prototype.constructor = openSync$ObjectLiteral;
  FastMemoryBacked.prototype = Object.create(Memory.prototype);
  FastMemoryBacked.prototype.constructor = FastMemoryBacked;
  FastMemory.prototype = Object.create(FastMemoryBacked.prototype);
  FastMemory.prototype.constructor = FastMemory;
  SmallMemory.prototype = Object.create(FastMemoryBacked.prototype);
  SmallMemory.prototype.constructor = SmallMemory;
  openSync$ObjectLiteral_0.prototype = Object.create(SyncStreamBase.prototype);
  openSync$ObjectLiteral_0.prototype.constructor = openSync$ObjectLiteral_0;
  PspLogLevel.prototype = Object.create(Enum.prototype);
  PspLogLevel.prototype.constructor = PspLogLevel;
  MountableVfsSync$ObjectLiteral.prototype = Object.create(Vfs$Proxy.prototype);
  MountableVfsSync$ObjectLiteral.prototype.constructor = MountableVfsSync$ObjectLiteral;
  ZipVfs2$Impl.prototype = Object.create(Vfs.prototype);
  ZipVfs2$Impl.prototype.constructor = ZipVfs2$Impl;
  function AGRenderer(emulatorContainer, sceneTex) {
    AGRenderer$Companion_getInstance();
    this.emulatorContainer = emulatorContainer;
    this.sceneTex = sceneTex;
    this.directFastSharpRendering = false;
    this.logger = PspLogger$Companion_getInstance().invoke_61zpoe$('AGRenderer');
    this.batchesQueue = ArrayList_init();
    this.tempBmp = new Bitmap32(512, 272);
    this.stats = new AGRenderer$Stats();
    this.indexBuffer_0 = null;
    this.vertexBuffer_0 = null;
    this.renderState_0 = new AG$RenderState();
    this.vr_0 = new VertexReader();
    this.vv_0 = new VertexRaw();
    this.u_modelViewProjMatrix = new Uniform('u_modelViewProjMatrix', VarType.Mat4);
    this.programLayoutByVertexType = LinkedHashMap_init();
  }
  function AGRenderer$Companion() {
    AGRenderer$Companion_instance = this;
    this.RGBA_TO_BGRA = false;
  }
  AGRenderer$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var AGRenderer$Companion_instance = null;
  function AGRenderer$Companion_getInstance() {
    if (AGRenderer$Companion_instance === null) {
      new AGRenderer$Companion();
    }
    return AGRenderer$Companion_instance;
  }
  function AGRenderer$Stats(batches, vertices) {
    if (batches === void 0)
      batches = 0;
    if (vertices === void 0)
      vertices = 0;
    this.batches = batches;
    this.vertices = vertices;
  }
  AGRenderer$Stats.prototype.reset = function () {
    this.batches = 0;
    this.vertices = 0;
  };
  AGRenderer$Stats.prototype.toString = function () {
    return 'Batches: ' + this.batches + '\n' + 'Vertices: ' + this.vertices;
  };
  AGRenderer$Stats.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Stats',
    interfaces: []
  };
  AGRenderer$Stats.prototype.component1 = function () {
    return this.batches;
  };
  AGRenderer$Stats.prototype.component2 = function () {
    return this.vertices;
  };
  AGRenderer$Stats.prototype.copy_vux9f0$ = function (batches, vertices) {
    return new AGRenderer$Stats(batches === void 0 ? this.batches : batches, vertices === void 0 ? this.vertices : vertices);
  };
  AGRenderer$Stats.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.batches) | 0;
    result = result * 31 + Kotlin.hashCode(this.vertices) | 0;
    return result;
  };
  AGRenderer$Stats.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.batches, other.batches) && Kotlin.equals(this.vertices, other.vertices)))));
  };
  AGRenderer.prototype.render_edjgwy$ = function (ctx, m) {
    var ag = ctx.ag;
    ag.checkErrors = false;
    ctx.flush();
    this.stats.reset();
    if (this.directFastSharpRendering) {
      if (!this.batchesQueue.isEmpty()) {
        this.renderBatches_0(ag);
      }
    }
     else {
      if (!this.batchesQueue.isEmpty()) {
        get_mem(this).read_coga0j$(get_display(this).address, this.tempBmp.data);
        var bmp = this.tempBmp;
        var rb = ag.renderBuffers.alloc();
        var oldRendering = ag.renderingToTexture;
        ag.renderingToTexture = true;
        rb.start_vux9f0$(bmp.width, bmp.height);
        try {
          ag.clear_2lepo2$(0);
          ag.drawBmp_59u9qz$(this.tempBmp);
          this.renderBatches_0(ag);
        }
        finally {
          rb.readBitmap_59u9qz$(bmp);
          rb.end();
          ag.renderingToTexture = oldRendering;
          ag.renderBuffers.free_11rb$(rb);
        }
        get_mem(this).write_coga0j$(get_display(this).address, this.tempBmp.data);
      }
      if (get_display(this).rawDisplay) {
        get_display(this).decodeToBitmap32_59u9qz$(get_display(this).bmp);
        setAlpha(get_display(this).bmp, 255);
        this.sceneTex.update_hi0ws4$(get_display(this).bmp);
      }
      ctx.batch.drawQuad_4rxj9x$(this.sceneTex, void 0, void 0, void 0, void 0, m, false, void 0, void 0, AG$Blending.Companion.NONE);
    }
    ctx.flush();
  };
  AGRenderer.prototype.renderBatches_0 = function (ag) {
    var tmp$, tmp$_0;
    this.stats.reset();
    try {
      tmp$ = this.batchesQueue.iterator();
      while (tmp$.hasNext()) {
        var batches = tmp$.next();
        tmp$_0 = batches.iterator();
        while (tmp$_0.hasNext()) {
          var batch = tmp$_0.next();
          this.renderBatch_0(ag, batch);
        }
      }
    }
    finally {
      this.batchesQueue.clear();
    }
  };
  AGRenderer.prototype.renderBatch_0 = function (ag, batch) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8;
    var tmp$_9;
    tmp$_9 = this.stats;
    tmp$_9.batches = tmp$_9.batches + 1 | 0;
    tmp$ = this.stats;
    tmp$.vertices = tmp$.vertices + batch.vertexCount | 0;
    if (this.indexBuffer_0 == null)
      this.indexBuffer_0 = ag.createIndexBuffer();
    if (this.vertexBuffer_0 == null)
      this.vertexBuffer_0 = ag.createVertexBuffer();
    var state = batch.state;
    ensureNotNull(this.indexBuffer_0).upload_359eei$(batch.indices);
    ensureNotNull(this.vertexBuffer_0).upload_mj6st8$(batch.vertices);
    var $this = this.logger;
    var level = PspLogLevel.TRACE;
    if (level.index <= $this.processedLevel.index) {
      $this.actualLog_138x2s$(level, '----------------');
    }
    var $this_0 = this.logger;
    var level_0 = PspLogLevel.TRACE;
    if (level_0.index <= $this_0.processedLevel.index) {
      $this_0.actualLog_138x2s$(level_0, 'indices: ' + toList(batch.indices));
    }
    var $this_1 = this.logger;
    var level_1 = PspLogLevel.TRACE;
    if (level_1.index <= $this_1.processedLevel.index) {
      $this_1.actualLog_138x2s$(level_1, 'primitive: ' + toAg(batch.primType));
    }
    var $this_2 = this.logger;
    var level_2 = PspLogLevel.TRACE;
    if (level_2.index <= $this_2.processedLevel.index) {
      $this_2.actualLog_138x2s$(level_2, 'vertexCount: ' + batch.vertexCount);
    }
    var $this_3 = this.logger;
    var level_3 = PspLogLevel.TRACE;
    if (level_3.index <= $this_3.processedLevel.index) {
      $this_3.actualLog_138x2s$(level_3, 'vertexType: ' + get_hex(batch.state.vertexType));
    }
    var $this_4 = this.logger;
    var level_4 = PspLogLevel.TRACE;
    if (level_4.index <= $this_4.processedLevel.index) {
      $this_4.actualLog_138x2s$(level_4, 'vertices: ' + get_hex_0(batch.vertices));
    }
    var $this_5 = this.logger;
    var level_5 = PspLogLevel.TRACE;
    if (level_5.index <= $this_5.processedLevel.index) {
      $this_5.actualLog_138x2s$(level_5, 'matrix: ' + batch.modelViewProjMatrix);
    }
    var $this_6 = this.logger;
    var level_6 = PspLogLevel.TRACE;
    if (level_6.index <= $this_6.processedLevel.index) {
      var tmp$_10 = level_6;
      var vr = new VertexReader();
      $this_6.actualLog_138x2s$(tmp$_10, '' + toString(vr.read_75t58$(batch.vtype, batch.vertices.length / batch.vtype.size() | 0, openSync(batch.vertices))));
    }
    if (state.clearing) {
      var fixedDepth = state.depthTest.rangeNear;
      this.renderState_0.depthNear = fixedDepth;
      this.renderState_0.depthFar = fixedDepth;
      this.renderState_0.depthMask = hasFlag(state.clearFlags, ClearBufferSet_getInstance().DepthBuffer);
      this.renderState_0.depthFunc = AG$CompareMode.ALWAYS;
      batch.modelViewProjMatrix.setToOrtho_w8lrqs$(0.0, 272.0, 480.0, 0.0, -65535, 0.0);
      var vertex = this.vr_0.readOne_h7y9mx$(openSync(batch.vertices), batch.vtype, this.vv_0);
      ag.clear_2lepo2$(AGRenderer$Companion_getInstance().RGBA_TO_BGRA ? color.BGRA.packRGBA_za3lpa$(vertex.color) : vertex.color, fixedDepth, state.stencil.funcRef, hasFlag(state.clearFlags, ClearBufferSet_getInstance().ColorBuffer), hasFlag(state.clearFlags, ClearBufferSet_getInstance().DepthBuffer), hasFlag(state.clearFlags, ClearBufferSet_getInstance().StencilBuffer));
      return;
    }
     else {
      this.renderState_0.depthNear = state.depthTest.rangeFar;
      this.renderState_0.depthFar = state.depthTest.rangeNear;
      this.renderState_0.depthMask = state.depthTest.mask === 0;
      tmp$_1 = this.renderState_0;
      if (state.depthTest.enabled)
        tmp$_0 = toInvAg(state.depthTest.func);
      else {
        tmp$_0 = AG$CompareMode.ALWAYS;
      }
      tmp$_1.depthFunc = tmp$_0;
    }
    var pl = this.getProgramLayout_j5wazo$(state);
    tmp$_2 = toAg(batch.primType);
    tmp$_3 = ensureNotNull(this.vertexBuffer_0);
    tmp$_4 = ensureNotNull(this.indexBuffer_0);
    tmp$_5 = pl.program;
    tmp$_6 = pl.layout;
    tmp$_7 = batch.vertexCount;
    tmp$_8 = mapOf(to(this.u_modelViewProjMatrix, batch.modelViewProjMatrix));
    ag.draw_n1yu8b$(tmp$_3, tmp$_5, tmp$_2, tmp$_6, tmp$_7, tmp$_4, void 0, AG$Blending.Companion.NONE, tmp$_8, void 0, void 0, this.renderState_0);
  };
  function AGRenderer$ProgramLayout(program, layout) {
    this.program = program;
    this.layout = layout;
  }
  AGRenderer$ProgramLayout.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ProgramLayout',
    interfaces: []
  };
  AGRenderer$ProgramLayout.prototype.component1 = function () {
    return this.program;
  };
  AGRenderer$ProgramLayout.prototype.component2 = function () {
    return this.layout;
  };
  AGRenderer$ProgramLayout.prototype.copy_pq7j5k$ = function (program, layout) {
    return new AGRenderer$ProgramLayout(program === void 0 ? this.program : program, layout === void 0 ? this.layout : layout);
  };
  AGRenderer$ProgramLayout.prototype.toString = function () {
    return 'ProgramLayout(program=' + Kotlin.toString(this.program) + (', layout=' + Kotlin.toString(this.layout)) + ')';
  };
  AGRenderer$ProgramLayout.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.program) | 0;
    result = result * 31 + Kotlin.hashCode(this.layout) | 0;
    return result;
  };
  AGRenderer$ProgramLayout.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.program, other.program) && Kotlin.equals(this.layout, other.layout)))));
  };
  AGRenderer.prototype.getProgramLayout_j5wazo$ = function (state) {
    var $receiver = this.programLayoutByVertexType;
    var key = state.vertexType;
    var tmp$;
    var value = $receiver.get_11rb$(key);
    if (value == null) {
      var answer = this.createProgramLayout_j5wazo$(state);
      $receiver.put_xwzc9p$(key, answer);
      tmp$ = answer;
    }
     else {
      tmp$ = value;
    }
    return tmp$;
  };
  function AGRenderer$createProgramLayout$lambda(this$AGRenderer, closure$a_Pos, closure$a_Col, closure$v_Col) {
    return function ($receiver) {
      $receiver.SET_q0hzsk$($receiver.out, $receiver.times_2oogdr$(this$AGRenderer.u_modelViewProjMatrix, $receiver.vec4_hywno3$([closure$a_Pos, $receiver.get_lit_81szk$(1.0)])));
      if (closure$a_Col != null) {
        $receiver.SET_q0hzsk$(closure$v_Col, $receiver.get_hhgt4v$(closure$a_Col, AGRenderer$Companion_getInstance().RGBA_TO_BGRA ? 'bgra' : 'rgba'));
      }
      return Unit;
    };
  }
  function AGRenderer$createProgramLayout$lambda_0(closure$a_Col, closure$v_Col) {
    return function ($receiver) {
      if (closure$a_Col != null) {
        $receiver.SET_q0hzsk$($receiver.out, closure$v_Col);
      }
      return Unit;
    };
  }
  AGRenderer.prototype.createProgramLayout_j5wazo$ = function (state) {
    var tmp$;
    var vtype = init(new VertexType(), state);
    var COUNT2 = listOf([VarType.VOID, VarType.Companion.BYTE_za3lpa$(2), VarType.Companion.SHORT_za3lpa$(2), VarType.Companion.FLOAT_za3lpa$(2)]);
    var COUNT3 = listOf([VarType.VOID, VarType.Companion.BYTE_za3lpa$(3), VarType.Companion.SHORT_za3lpa$(3), VarType.Companion.FLOAT_za3lpa$(3)]);
    var COLORS = listOf([VarType.VOID, VarType.VOID, VarType.VOID, VarType.VOID, VarType.Companion.SHORT_za3lpa$(1), VarType.Companion.SHORT_za3lpa$(1), VarType.Companion.SHORT_za3lpa$(1), VarType.Byte4]);
    var a_Tex = vtype.hasTexture ? new Attribute('a_Tex', COUNT2.get_za3lpa$(vtype.tex.id), false, vtype.texOffset) : null;
    var a_Col = vtype.hasColor ? new Attribute('a_Col', COLORS.get_za3lpa$(vtype.col.id), true, vtype.colOffset) : null;
    var a_Pos = new Attribute('a_Pos', COUNT3.get_za3lpa$(vtype.pos.id), false, vtype.posOffset);
    var v_Col = new Varying('v_Col', VarType.Byte4);
    var layout = new VertexLayout(filterNotNull(listOf([a_Tex, a_Col, a_Pos])), vtype.size());
    tmp$ = vtype.toString();
    var program = new Program(VertexShader(AGRenderer$createProgramLayout$lambda(this, a_Pos, a_Col, v_Col)), FragmentShader(AGRenderer$createProgramLayout$lambda_0(a_Col, v_Col)), tmp$);
    return new AGRenderer$ProgramLayout(program, layout);
  };
  Object.defineProperty(AGRenderer.prototype, 'emulator', {
    get: function () {
      return this.emulatorContainer.emulator;
    }
  });
  AGRenderer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AGRenderer',
    interfaces: [WithEmulator]
  };
  function toAg($receiver) {
    if (equals($receiver, PrimitiveType$POINTS_getInstance()))
      return AG$DrawType.POINTS;
    else if (equals($receiver, PrimitiveType$LINES_getInstance()))
      return AG$DrawType.LINES;
    else if (equals($receiver, PrimitiveType$LINE_STRIP_getInstance()))
      return AG$DrawType.LINE_STRIP;
    else if (equals($receiver, PrimitiveType$TRIANGLES_getInstance()))
      return AG$DrawType.TRIANGLES;
    else if (equals($receiver, PrimitiveType$TRIANGLE_STRIP_getInstance()))
      return AG$DrawType.TRIANGLE_STRIP;
    else if (equals($receiver, PrimitiveType$TRIANGLE_FAN_getInstance()))
      return AG$DrawType.TRIANGLE_FAN;
    else if (equals($receiver, PrimitiveType$SPRITES_getInstance()))
      return AG$DrawType.TRIANGLES;
    else
      return Kotlin.noWhenBranchMatched();
  }
  function toAg_0($receiver) {
    if (equals($receiver, TestFunctionEnum$NEVER_getInstance()))
      return AG$CompareMode.NEVER;
    else if (equals($receiver, TestFunctionEnum$ALWAYS_getInstance()))
      return AG$CompareMode.ALWAYS;
    else if (equals($receiver, TestFunctionEnum$EQUAL_getInstance()))
      return AG$CompareMode.EQUAL;
    else if (equals($receiver, TestFunctionEnum$NOT_EQUAL_getInstance()))
      return AG$CompareMode.NOT_EQUAL;
    else if (equals($receiver, TestFunctionEnum$LESS_getInstance()))
      return AG$CompareMode.LESS;
    else if (equals($receiver, TestFunctionEnum$LESS_OR_EQUAL_getInstance()))
      return AG$CompareMode.LESS_EQUAL;
    else if (equals($receiver, TestFunctionEnum$GREATER_getInstance()))
      return AG$CompareMode.GREATER;
    else if (equals($receiver, TestFunctionEnum$GREATER_OR_EQUAL_getInstance()))
      return AG$CompareMode.GREATER_EQUAL;
    else
      return Kotlin.noWhenBranchMatched();
  }
  function toInvAg($receiver) {
    if (equals($receiver, TestFunctionEnum$NEVER_getInstance()))
      return AG$CompareMode.NEVER;
    else if (equals($receiver, TestFunctionEnum$ALWAYS_getInstance()))
      return AG$CompareMode.ALWAYS;
    else if (equals($receiver, TestFunctionEnum$EQUAL_getInstance()))
      return AG$CompareMode.EQUAL;
    else if (equals($receiver, TestFunctionEnum$NOT_EQUAL_getInstance()))
      return AG$CompareMode.NOT_EQUAL;
    else if (equals($receiver, TestFunctionEnum$LESS_getInstance()))
      return AG$CompareMode.GREATER;
    else if (equals($receiver, TestFunctionEnum$LESS_OR_EQUAL_getInstance()))
      return AG$CompareMode.GREATER_EQUAL;
    else if (equals($receiver, TestFunctionEnum$GREATER_getInstance()))
      return AG$CompareMode.LESS;
    else if (equals($receiver, TestFunctionEnum$GREATER_OR_EQUAL_getInstance()))
      return AG$CompareMode.LESS_EQUAL;
    else
      return Kotlin.noWhenBranchMatched();
  }
  function Emulator(coroutineContext, syscalls, mem, gpuRenderer) {
    if (syscalls === void 0)
      syscalls = new SyscallManager();
    if (mem === void 0)
      mem = Memory$Companion_getInstance().invoke();
    if (gpuRenderer === void 0)
      gpuRenderer = new DummyGpuRenderer();
    this.coroutineContext = coroutineContext;
    this.syscalls = syscalls;
    this.mem = mem;
    this.gpuRenderer = gpuRenderer;
    this.logger = PspLogger$Companion_getInstance().invoke_61zpoe$('Emulator');
    this.output = new StringBuilder();
    this.ge = new Ge(this);
    this.gpu = new Gpu(this);
    this.display = new PspDisplay(this);
    this.deviceManager = new DeviceManager(this);
    this.memoryManager = new MemoryManager(this);
    this.threadManager = new ThreadManager(this);
    this.moduleManager = new ModuleManager(this);
    this.callbackManager = new CallbackManager(this);
    this.timeManager = new TimeManager(this);
    this.controller = new PspController(this);
    this.fileManager = new FileManager(this);
  }
  Object.defineProperty(Emulator.prototype, 'running', {
    get: function () {
      return this.threadManager.aliveThreadCount >= 1;
    }
  });
  Emulator.prototype.frameStep = function () {
    this.threadManager.vblank();
    this.display.dispatchVsync();
    this.threadManager.step();
    this.ge.run();
    this.gpu.render();
  };
  Emulator.prototype.invalidateIcache_vux9f0$ = function (ptr, size) {
    var $this = this.logger;
    var level = PspLogLevel.TRACE;
    if (level.index <= $this.processedLevel.index) {
      $this.actualLog_138x2s$(level, 'invalidateIcache(' + get_hex(ptr) + ', ' + size + ')');
    }
  };
  Emulator.prototype.invalidateDcache_vux9f0$ = function (ptr, size) {
    var $this = this.logger;
    var level = PspLogLevel.TRACE;
    if (level.index <= $this.processedLevel.index) {
      $this.actualLog_138x2s$(level, 'invalidateDcache()');
    }
  };
  Emulator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Emulator',
    interfaces: []
  };
  function WithEmulator() {
  }
  WithEmulator.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'WithEmulator',
    interfaces: []
  };
  function get_mem($receiver) {
    return $receiver.emulator.mem;
  }
  function get_ge($receiver) {
    return $receiver.emulator.ge;
  }
  function get_gpu($receiver) {
    return $receiver.emulator.gpu;
  }
  function get_controller($receiver) {
    return $receiver.emulator.controller;
  }
  function get_coroutineContext($receiver) {
    return $receiver.emulator.coroutineContext;
  }
  function get_display($receiver) {
    return $receiver.emulator.display;
  }
  function get_deviceManager($receiver) {
    return $receiver.emulator.deviceManager;
  }
  function get_memoryManager($receiver) {
    return $receiver.emulator.memoryManager;
  }
  function get_timeManager($receiver) {
    return $receiver.emulator.timeManager;
  }
  function get_fileManager($receiver) {
    return $receiver.emulator.fileManager;
  }
  function get_rtc($receiver) {
    return $receiver.emulator.timeManager;
  }
  function get_threadManager($receiver) {
    return $receiver.emulator.threadManager;
  }
  function get_callbackManager($receiver) {
    return $receiver.emulator.callbackManager;
  }
  function Kpspemu() {
    Kpspemu_instance = this;
    this.VERSION = KPSPEMU_VERSION;
  }
  Kpspemu.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Kpspemu',
    interfaces: []
  };
  var Kpspemu_instance = null;
  function Kpspemu_getInstance() {
    if (Kpspemu_instance === null) {
      new Kpspemu();
    }
    return Kpspemu_instance;
  }
  var KPSPEMU_VERSION;
  function main(args) {
    Main_getInstance().main_kand9s$(args);
  }
  function Main() {
    Main_instance = this;
  }
  function Main$main$lambda($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$Main$main$lambda($receiver_0, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$Main$main$lambda($receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$Main$main$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Main$main$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Main$main$lambda.prototype.constructor = Coroutine$Main$main$lambda;
  Coroutine$Main$main$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.get_esmw97$(getKClass(Browser), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return new KpspemuMainScene(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Main$main$lambda_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$Main$main$lambda_0($receiver_0, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$Main$main$lambda_0($receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$Main$main$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Main$main$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Main$main$lambda_0.prototype.constructor = Coroutine$Main$main$lambda_0;
  Coroutine$Main$main$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.get_esmw97$(getKClass(AsyncInjector), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return new Browser(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Main.prototype.main_kand9s$ = function (args) {
    korge.Korge.invoke_lakzb2$(KpspemuModule_getInstance(), void 0, void 0, void 0, void 0, void 0, (new AsyncInjector()).mapPrototype_7g6y7r$(getKClass(KpspemuMainScene), Main$main$lambda).mapSingleton_7g6y7r$(getKClass(Browser), Main$main$lambda_0));
  };
  Main.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Main',
    interfaces: []
  };
  var Main_instance = null;
  function Main_getInstance() {
    if (Main_instance === null) {
      new Main();
    }
    return Main_instance;
  }
  function KpspemuModule() {
    KpspemuModule_instance = this;
    Module.call(this);
    this.clearEachFrame_drvy51$_0 = true;
    this.mainScene_x1qskp$_0 = getKClass(KpspemuMainScene);
    this.title_f8gi32$_0 = 'kpspemu';
  }
  Object.defineProperty(KpspemuModule.prototype, 'clearEachFrame', {
    get: function () {
      return this.clearEachFrame_drvy51$_0;
    }
  });
  Object.defineProperty(KpspemuModule.prototype, 'mainScene', {
    get: function () {
      return this.mainScene_x1qskp$_0;
    }
  });
  Object.defineProperty(KpspemuModule.prototype, 'title', {
    get: function () {
      return this.title_f8gi32$_0;
    }
  });
  Object.defineProperty(KpspemuModule.prototype, 'size', {
    get: function () {
      return new SizeInt(480, 272);
    }
  });
  KpspemuModule.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'KpspemuModule',
    interfaces: [Module]
  };
  var KpspemuModule_instance = null;
  function KpspemuModule_getInstance() {
    if (KpspemuModule_instance === null) {
      new KpspemuModule();
    }
    return KpspemuModule_instance;
  }
  function KpspemuMainScene(browser) {
    Scene.call(this);
    this.browser = browser;
    this.exeFile_59rjax$_0 = this.exeFile_59rjax$_0;
    this.emulator_s1jj94$_0 = this.emulator_s1jj94$_0;
    this.tex_t00rkw$_0 = lazy(KpspemuMainScene$tex$lambda(this));
    this.agRenderer_d575ks$_0 = lazy(KpspemuMainScene$agRenderer$lambda(this));
    this.hudFont_nslosf$_0 = lazy(KpspemuMainScene$hudFont$lambda(this));
    this.running = true;
    this.ended = false;
    this.paused = false;
    this.hud_sztf4g$_0 = this.hud_sztf4g$_0;
    this.hudQueue = new AsyncThread();
  }
  Object.defineProperty(KpspemuMainScene.prototype, 'exeFile', {
    get: function () {
      if (this.exeFile_59rjax$_0 == null)
        return throwUPAE('exeFile');
      return this.exeFile_59rjax$_0;
    },
    set: function (exeFile) {
      this.exeFile_59rjax$_0 = exeFile;
    }
  });
  Object.defineProperty(KpspemuMainScene.prototype, 'emulator', {
    get: function () {
      if (this.emulator_s1jj94$_0 == null)
        return throwUPAE('emulator');
      return this.emulator_s1jj94$_0;
    },
    set: function (emulator) {
      this.emulator_s1jj94$_0 = emulator;
    }
  });
  Object.defineProperty(KpspemuMainScene.prototype, 'tex', {
    get: function () {
      var $receiver = this.tex_t00rkw$_0;
      new PropertyMetadata('tex');
      return $receiver.value;
    }
  });
  Object.defineProperty(KpspemuMainScene.prototype, 'agRenderer', {
    get: function () {
      var $receiver = this.agRenderer_d575ks$_0;
      new PropertyMetadata('agRenderer');
      return $receiver.value;
    }
  });
  Object.defineProperty(KpspemuMainScene.prototype, 'hudFont', {
    get: function () {
      var $receiver = this.hudFont_nslosf$_0;
      new PropertyMetadata('hudFont');
      return $receiver.value;
    }
  });
  function KpspemuMainScene$createEmulatorWithExe$ObjectLiteral(this$KpspemuMainScene) {
    this.this$KpspemuMainScene = this$KpspemuMainScene;
  }
  KpspemuMainScene$createEmulatorWithExe$ObjectLiteral.prototype.render_in36x8$ = function (batches) {
    this.this$KpspemuMainScene.agRenderer.batchesQueue.add_11rb$(batches);
  };
  KpspemuMainScene$createEmulatorWithExe$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [GpuRenderer]
  };
  KpspemuMainScene.prototype.createEmulatorWithExe_phxig4$ = function (exeFile_0, continuation_0, suspended) {
    var instance = new Coroutine$createEmulatorWithExe_phxig4$(this, exeFile_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$createEmulatorWithExe_phxig4$($this, exeFile_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$exeFile = exeFile_0;
  }
  Coroutine$createEmulatorWithExe_phxig4$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$createEmulatorWithExe_phxig4$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$createEmulatorWithExe_phxig4$.prototype.constructor = Coroutine$createEmulatorWithExe_phxig4$;
  Coroutine$createEmulatorWithExe_phxig4$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.running = true;
            this.$this.ended = false;
            this.local$$receiver = new Emulator(this.$this.coroutineContext, void 0, Memory$Companion_getInstance().invoke(), new KpspemuMainScene$createEmulatorWithExe$ObjectLiteral(this.$this));
            registerNativeModules(this.local$$receiver);
            this.state_0 = 2;
            this.result_0 = loadExecutableAndStart(this.local$$receiver, this.local$exeFile, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.$this.emulator = this.local$$receiver;
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Object.defineProperty(KpspemuMainScene.prototype, 'hud', {
    get: function () {
      if (this.hud_sztf4g$_0 == null)
        return throwUPAE('hud');
      return this.hud_sztf4g$_0;
    },
    set: function (hud) {
      this.hud_sztf4g$_0 = hud;
    }
  });
  function KpspemuMainScene$sceneInit$lambda(this$KpspemuMainScene) {
    return function (it) {
      if (!this$KpspemuMainScene.paused) {
        if (this$KpspemuMainScene.running && this$KpspemuMainScene.emulator.running) {
          try {
            this$KpspemuMainScene.emulator.frameStep();
          }
           catch (e) {
            if (Kotlin.isType(e, Throwable)) {
              printStackTrace(e);
              this$KpspemuMainScene.running = false;
            }
             else
              throw e;
          }
        }
         else {
          if (!this$KpspemuMainScene.ended) {
            this$KpspemuMainScene.ended = true;
            println('COMPLETED');
            get_display(this$KpspemuMainScene).clear();
          }
        }
      }
      return Unit;
    };
  }
  function KpspemuMainScene$sceneInit$updateKey(closure$keys, this$KpspemuMainScene) {
    return function (keyCode, pressed) {
      var tmp$, tmp$_0, tmp$_1;
      closure$keys[keyCode & 255] = pressed;
      if (keyCode === 10)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$start_getInstance(), pressed);
      else if (keyCode === 32)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$select_getInstance(), pressed);
      else if (keyCode === 87)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$triangle_getInstance(), pressed);
      else if (keyCode === 65)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$square_getInstance(), pressed);
      else if (keyCode === 83)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$cross_getInstance(), pressed);
      else if (keyCode === 68)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$circle_getInstance(), pressed);
      else if (keyCode === 81)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$leftTrigger_getInstance(), pressed);
      else if (keyCode === 69)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$rightTrigger_getInstance(), pressed);
      else if (keyCode === 37)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$left_getInstance(), pressed);
      else if (keyCode === 38)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$up_getInstance(), pressed);
      else if (keyCode === 39)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$right_getInstance(), pressed);
      else if (keyCode === 40)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$down_getInstance(), pressed);
      else if (keyCode === 113) {
        if (pressed)
          this$KpspemuMainScene.hud.visible = !this$KpspemuMainScene.hud.visible;
      }
       else if (keyCode < 73 || keyCode > 76)
        println('UnhandledKey(' + pressed + '): ' + keyCode);
      tmp$_1 = get_controller(this$KpspemuMainScene);
      if (closure$keys[74])
        tmp$ = -1.0;
      else if (closure$keys[76])
        tmp$ = +1.0;
      else
        tmp$ = 0.0;
      if (closure$keys[73])
        tmp$_0 = +1.0;
      else if (closure$keys[75])
        tmp$_0 = -1.0;
      else
        tmp$_0 = 0.0;
      tmp$_1.updateAnalog_dleff0$(tmp$, tmp$_0);
    };
  }
  function KpspemuMainScene$sceneInit$getInfoText(this$KpspemuMainScene) {
    return function () {
      return 'kpspemu' + '\n' + Kpspemu_getInstance().VERSION + '\n' + '\n' + this$KpspemuMainScene.agRenderer.stats.toString();
    };
  }
  function KpspemuMainScene$sceneInit$lambda_0(this$KpspemuMainScene_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda(this$KpspemuMainScene_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda(this$KpspemuMainScene_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda;
  Coroutine$KpspemuMainScene$sceneInit$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.local$this$KpspemuMainScene.browser.openFile_61zpoe$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            tmp$ = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$this$KpspemuMainScene.createEmulatorWithExe_phxig4$(tmp$, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$lambda_1(this$KpspemuMainScene_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_0(this$KpspemuMainScene_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_0(this$KpspemuMainScene_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_0.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_0;
  Coroutine$KpspemuMainScene$sceneInit$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$KpspemuMainScene.agRenderer.directFastSharpRendering = !this.local$this$KpspemuMainScene.agRenderer.directFastSharpRendering, Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$lambda_2(this$KpspemuMainScene_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_1(this$KpspemuMainScene_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_1(this$KpspemuMainScene_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
    this.local$it = it_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_1.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_1;
  Coroutine$KpspemuMainScene$sceneInit$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$KpspemuMainScene.paused = !this.local$this$KpspemuMainScene.paused;
            return setText(this.local$it.view, this.local$this$KpspemuMainScene.paused ? 'Resume' : 'Pause'), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$ObjectLiteral(this$KpspemuMainScene, closure$getInfoText, closure$infoText, views) {
    this.this$KpspemuMainScene = this$KpspemuMainScene;
    this.closure$getInfoText = closure$getInfoText;
    this.closure$infoText = closure$infoText;
    View.call(this, views);
  }
  var numberToDouble = Kotlin.numberToDouble;
  KpspemuMainScene$sceneInit$ObjectLiteral.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    out.setTo_6y0v78$(numberToDouble(0), numberToDouble(0), numberToDouble(512), numberToDouble(272));
  };
  KpspemuMainScene$sceneInit$ObjectLiteral.prototype.render_edjgwy$ = function (ctx, m) {
    this.this$KpspemuMainScene.agRenderer.render_edjgwy$(ctx, m);
    this.closure$infoText.text = this.closure$getInfoText();
  };
  KpspemuMainScene$sceneInit$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [View]
  };
  function KpspemuMainScene$sceneInit$lambda_3(this$KpspemuMainScene_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_2(this$KpspemuMainScene_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_2(this$KpspemuMainScene_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_2.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_2;
  Coroutine$KpspemuMainScene$sceneInit$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$KpspemuMainScene.hudOpen(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$lambda_4(this$KpspemuMainScene_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_3(this$KpspemuMainScene_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_3(this$KpspemuMainScene_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_3.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_3;
  Coroutine$KpspemuMainScene$sceneInit$lambda_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$KpspemuMainScene.hudClose(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$lambda_5(this$KpspemuMainScene_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_4(this$KpspemuMainScene_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_4(this$KpspemuMainScene_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_4.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_4.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_4.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_4;
  Coroutine$KpspemuMainScene$sceneInit$lambda_4.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$this$KpspemuMainScene.hud.alpha < 0.5) {
              this.state_0 = 3;
              this.result_0 = this.local$this$KpspemuMainScene.hudOpen(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 2;
              this.result_0 = this.local$this$KpspemuMainScene.hudClose(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }

          case 1:
            throw this.exception_0;
          case 2:
            return Unit;
          case 3:
            return Unit;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$lambda_6(it_0, continuation_0, suspended) {
    var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_5(it_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_5(it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$it = it_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_5.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_5.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_5.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_5;
  Coroutine$KpspemuMainScene$sceneInit$lambda_5.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return println(this.local$it.keyCode), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$lambda_7(closure$updateKey_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_6(closure$updateKey_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_6(closure$updateKey_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$updateKey = closure$updateKey_0;
    this.local$it = it_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_6.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_6.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_6.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_6;
  Coroutine$KpspemuMainScene$sceneInit$lambda_6.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$closure$updateKey(this.local$it.keyCode, true), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$lambda_8(closure$updateKey_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_7(closure$updateKey_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_7(closure$updateKey_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$updateKey = closure$updateKey_0;
    this.local$it = it_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_7.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_7.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_7.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_7;
  Coroutine$KpspemuMainScene$sceneInit$lambda_7.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$closure$updateKey(this.local$it.keyCode, false), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  var SolidRect_init = $module$korge_js.com.soywiz.korge.view.SolidRect;
  var get_mouse = $module$korge_js.com.soywiz.korge.input.get_mouse_gohfi1$;
  var addSuspend = $module$korge_js.$$importsForInline$$['korio-js'].com.soywiz.korio.async.addSuspend_vumi11$;
  var get_keys = $module$korge_js.com.soywiz.korge.input.get_keys_gohfi1$;
  KpspemuMainScene.prototype.sceneInit_f3yb8w$ = function (sceneView_0, continuation_0, suspended) {
    var instance = new Coroutine$sceneInit_f3yb8w$(this, sceneView_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceneInit_f3yb8w$($this, sceneView_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$sceneView = sceneView_0;
  }
  Coroutine$sceneInit_f3yb8w$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceneInit_f3yb8w$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceneInit_f3yb8w$.prototype.constructor = Coroutine$sceneInit_f3yb8w$;
  Coroutine$sceneInit_f3yb8w$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            println('KPSPEMU: 0.2.0-SNAPSHOT');
            println('KLOCK: 0.2.0');
            println('KORMA: 0.16.0');
            println('KORIO: 0.16.0');
            println('KORAG: 0.16.0');
            println('KORAU: 0.16.0');
            println('KORUI: 0.16.0');
            println('KORGE: 0.16.0');
            if (util.OS.isJs)
              tmp$ = vfs.applicationVfs;
            else
              tmp$ = vfs.applicationVfs.get_61zpoe$('samples').jail();
            var samplesFolder = tmp$;
            var exeFile = samplesFolder.get_61zpoe$('cube.iso');
            this.$this.hud = this.$this.views.container();
            var tmp$_0 = this.$this.hud;
            var $this = this.$this.views;
            var color_0 = color.RGBA.invoke_tjonv8$(0, 0, 0, 170);
            var $receiver = new SolidRect_init($this, numberToDouble(96), numberToDouble(272), color_0);
            $receiver.enabled = false;
            $receiver.mouseEnabled = false;
            tmp$_0.plusAssign_l5rad2$($receiver);
            this.state_0 = 2;
            this.result_0 = this.$this.createEmulatorWithExe_phxig4$(exeFile, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$sceneView.addUpdatable_b4k9x1$(KpspemuMainScene$sceneInit$lambda(this.$this));
            var keys = Kotlin.booleanArray(256);
            var updateKey = KpspemuMainScene$sceneInit$updateKey(keys, this.$this);
            this.$this.hud.alpha = 0.0;
            var getInfoText = KpspemuMainScene$sceneInit$getInfoText(this.$this);
            var $receiver_0 = text(this.$this.views, getInfoText(), 10.0, void 0, this.$this.hudFont);
            $receiver_0.x = 8.0;
            $receiver_0.y = 8.0;
            var infoText = $receiver_0;
            this.$this.hud.plusAssign_l5rad2$(infoText);
            var tmp$_1 = this.$this.hud;
            var $receiver_1 = simpleButton(this.$this.views, 'Load...', void 0, void 0, this.$this.hudFont);
            $receiver_1.x = 8.0;
            $receiver_1.y = 272.0 - 32.0 * 1;
            var tmp$_2, tmp$_0_0;
            (tmp$_0_0 = (tmp$_2 = $receiver_1 != null ? get_mouse($receiver_1) : null) != null ? tmp$_2.onClick : null) != null ? addSuspend(tmp$_0_0, $receiver_1.views.coroutineContext, KpspemuMainScene$sceneInit$lambda_0(this.$this)) : null;
            plusAssign(tmp$_1, $receiver_1);
            var tmp$_3 = this.$this.hud;
            var $receiver_2 = simpleButton(this.$this.views, 'Direct', void 0, void 0, this.$this.hudFont);
            $receiver_2.x = 8.0;
            $receiver_2.y = 272.0 - 32.0 * 2;
            var tmp$_4, tmp$_0_1;
            (tmp$_0_1 = (tmp$_4 = $receiver_2 != null ? get_mouse($receiver_2) : null) != null ? tmp$_4.onClick : null) != null ? addSuspend(tmp$_0_1, $receiver_2.views.coroutineContext, KpspemuMainScene$sceneInit$lambda_1(this.$this)) : null;
            plusAssign(tmp$_3, $receiver_2);
            var tmp$_5 = this.$this.hud;
            var $receiver_3 = simpleButton(this.$this.views, 'Pause', void 0, void 0, this.$this.hudFont);
            $receiver_3.x = 8.0;
            $receiver_3.y = 272.0 - 32.0 * 3;
            var tmp$_6, tmp$_0_2;
            (tmp$_0_2 = (tmp$_6 = $receiver_3 != null ? get_mouse($receiver_3) : null) != null ? tmp$_6.onClick : null) != null ? addSuspend(tmp$_0_2, $receiver_3.views.coroutineContext, KpspemuMainScene$sceneInit$lambda_2(this.$this)) : null;
            plusAssign(tmp$_5, $receiver_3);
            var displayView = new KpspemuMainScene$sceneInit$ObjectLiteral(this.$this, getInfoText, infoText, this.$this.views);
            this.local$sceneView.plusAssign_l5rad2$(displayView);
            this.local$sceneView.plusAssign_l5rad2$(this.$this.hud);
            var tmp$_7, tmp$_0_3;
            (tmp$_0_3 = (tmp$_7 = this.local$sceneView != null ? get_mouse(this.local$sceneView) : null) != null ? tmp$_7.onMove : null) != null ? addSuspend(tmp$_0_3, this.local$sceneView.views.coroutineContext, KpspemuMainScene$sceneInit$lambda_3(this.$this)) : null;
            var tmp$_8, tmp$_0_4;
            (tmp$_0_4 = (tmp$_8 = this.local$sceneView != null ? get_mouse(this.local$sceneView) : null) != null ? tmp$_8.onOut : null) != null ? addSuspend(tmp$_0_4, this.local$sceneView.views.coroutineContext, KpspemuMainScene$sceneInit$lambda_4(this.$this)) : null;
            var tmp$_9, tmp$_0_5;
            (tmp$_0_5 = (tmp$_9 = this.local$sceneView != null ? get_mouse(this.local$sceneView) : null) != null ? tmp$_9.onClick : null) != null ? addSuspend(tmp$_0_5, this.local$sceneView.views.coroutineContext, KpspemuMainScene$sceneInit$lambda_5(this.$this)) : null;
            var tmp$_10, tmp$_0_6;
            (tmp$_0_6 = (tmp$_10 = this.local$sceneView != null ? get_keys(this.local$sceneView) : null) != null ? tmp$_10.onKeyTyped : null) != null ? tmp$_0_6.add_25kf2w$(KpspemuMainScene$sceneInit$lambda_6) : null;
            var tmp$_11, tmp$_0_7;
            (tmp$_0_7 = (tmp$_11 = this.local$sceneView != null ? get_keys(this.local$sceneView) : null) != null ? tmp$_11.onKeyDown : null) != null ? tmp$_0_7.add_25kf2w$(KpspemuMainScene$sceneInit$lambda_7(updateKey)) : null;
            var tmp$_12, tmp$_0_8;
            (tmp$_0_8 = (tmp$_12 = this.local$sceneView != null ? get_keys(this.local$sceneView) : null) != null ? tmp$_12.onKeyUp : null) != null ? tmp$_0_8.add_25kf2w$(KpspemuMainScene$sceneInit$lambda_8(updateKey)) : null;
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  var interpolate = $module$korge_js.$$importsForInline$$['korma-js'].com.soywiz.korma.interpolation.interpolate_yvo9jy$;
  var V2_init = $module$korge_js.com.soywiz.korge.tween.V2;
  var TimeSpan = $module$korge_js.com.soywiz.korge.time.TimeSpan;
  function KpspemuMainScene$hudOpen$lambda(this$KpspemuMainScene_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$hudOpen$lambda(this$KpspemuMainScene_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$hudOpen$lambda(this$KpspemuMainScene_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$hudOpen$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$hudOpen$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$hudOpen$lambda.prototype.constructor = Coroutine$KpspemuMainScene$hudOpen$lambda;
  Coroutine$KpspemuMainScene$hudOpen$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$ = this.local$this$KpspemuMainScene.hud;
            var $receiver = getPropertyCallableRef('alpha', 0, function ($receiver) {
              return $receiver.alpha;
            }.bind(null, this.local$this$KpspemuMainScene.hud), function ($receiver, value) {
              $receiver.alpha = value;
            }.bind(null, this.local$this$KpspemuMainScene.hud));
            var tmp$_0 = new V2_init($receiver, $receiver.get(), numberToDouble(1.0), getCallableRef('interpolate', function (v0_0, v1_0, step_0) {
              return interpolate(v0_0, v1_0, step_0);
            }));
            var $receiver_0 = getPropertyCallableRef('x', 0, function ($receiver) {
              return $receiver.x;
            }.bind(null, this.local$this$KpspemuMainScene.hud), function ($receiver, value) {
              $receiver.x = value;
            }.bind(null, this.local$this$KpspemuMainScene.hud));
            this.state_0 = 2;
            this.result_0 = tween(tmp$, [tmp$_0, new V2_init($receiver_0, $receiver_0.get(), numberToDouble(0.0), getCallableRef('interpolate', function (v0_0, v1_0, step_0) {
              return interpolate(v0_0, v1_0, step_0);
            }))], TimeSpan.Companion.fromMilliseconds_za3lpa$(numberToInt(numberToDouble(0.2) * 1000.0)), void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = sleep(this.local$this$KpspemuMainScene, TimeSpan.Companion.fromMilliseconds_za3lpa$(numberToInt(numberToDouble(2) * 1000.0)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            var tmp$_1 = this.local$this$KpspemuMainScene.hud;
            var $receiver_1 = getPropertyCallableRef('alpha', 0, function ($receiver) {
              return $receiver.alpha;
            }.bind(null, this.local$this$KpspemuMainScene.hud), function ($receiver, value) {
              $receiver.alpha = value;
            }.bind(null, this.local$this$KpspemuMainScene.hud));
            var tmp$_2 = new V2_init($receiver_1, $receiver_1.get(), numberToDouble(0.0), getCallableRef('interpolate', function (v0_0, v1_0, step_0) {
              return interpolate(v0_0, v1_0, step_0);
            }));
            var $receiver_2 = getPropertyCallableRef('x', 0, function ($receiver) {
              return $receiver.x;
            }.bind(null, this.local$this$KpspemuMainScene.hud), function ($receiver, value) {
              $receiver.x = value;
            }.bind(null, this.local$this$KpspemuMainScene.hud));
            var end = -32.0;
            this.state_0 = 4;
            this.result_0 = tween(tmp$_1, [tmp$_2, new V2_init($receiver_2, $receiver_2.get(), numberToDouble(end), getCallableRef('interpolate', function (v0_0, v1_0, step_0) {
              return interpolate(v0_0, v1_0, step_0);
            }))], TimeSpan.Companion.fromMilliseconds_za3lpa$(numberToInt(numberToDouble(0.2) * 1000.0)), void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  KpspemuMainScene.prototype.hudOpen = function (continuation_0, suspended) {
    var instance = new Coroutine$hudOpen(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$hudOpen($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$hudOpen.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$hudOpen.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$hudOpen.prototype.constructor = Coroutine$hudOpen;
  Coroutine$hudOpen.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.hudQueue.cancelAndQueue_lnyleu$(KpspemuMainScene$hudOpen$lambda(this.$this), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$hudClose$lambda(this$KpspemuMainScene_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$hudClose$lambda(this$KpspemuMainScene_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$hudClose$lambda(this$KpspemuMainScene_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$hudClose$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$hudClose$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$hudClose$lambda.prototype.constructor = Coroutine$KpspemuMainScene$hudClose$lambda;
  Coroutine$KpspemuMainScene$hudClose$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$ = this.local$this$KpspemuMainScene.hud;
            var $receiver = getPropertyCallableRef('alpha', 0, function ($receiver) {
              return $receiver.alpha;
            }.bind(null, this.local$this$KpspemuMainScene.hud), function ($receiver, value) {
              $receiver.alpha = value;
            }.bind(null, this.local$this$KpspemuMainScene.hud));
            var tmp$_0 = new V2_init($receiver, $receiver.get(), numberToDouble(0.0), getCallableRef('interpolate', function (v0_0, v1_0, step_0) {
              return interpolate(v0_0, v1_0, step_0);
            }));
            var $receiver_0 = getPropertyCallableRef('x', 0, function ($receiver) {
              return $receiver.x;
            }.bind(null, this.local$this$KpspemuMainScene.hud), function ($receiver, value) {
              $receiver.x = value;
            }.bind(null, this.local$this$KpspemuMainScene.hud));
            var end = -32.0;
            this.state_0 = 2;
            this.result_0 = tween(tmp$, [tmp$_0, new V2_init($receiver_0, $receiver_0.get(), numberToDouble(end), getCallableRef('interpolate', function (v0_0, v1_0, step_0) {
              return interpolate(v0_0, v1_0, step_0);
            }))], TimeSpan.Companion.fromMilliseconds_za3lpa$(numberToInt(numberToDouble(0.2) * 1000.0)), void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  KpspemuMainScene.prototype.hudClose = function (continuation_0, suspended) {
    var instance = new Coroutine$hudClose(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$hudClose($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$hudClose.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$hudClose.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$hudClose.prototype.constructor = Coroutine$hudClose;
  Coroutine$hudClose.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.hudQueue.cancelAndQueue_lnyleu$(KpspemuMainScene$hudClose$lambda(this.$this), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$tex$lambda(this$KpspemuMainScene) {
    return function () {
      return texture(this$KpspemuMainScene.views, get_display(this$KpspemuMainScene).bmp);
    };
  }
  function KpspemuMainScene$agRenderer$lambda(this$KpspemuMainScene) {
    return function () {
      return new AGRenderer(this$KpspemuMainScene, this$KpspemuMainScene.tex);
    };
  }
  function KpspemuMainScene$hudFont$lambda(this$KpspemuMainScene) {
    return function () {
      return BitmapFont.Companion.invoke_vefnbj$(this$KpspemuMainScene.views.ag, 'Lucida Console', 32, font.BitmapFontGenerator.LATIN_ALL, false);
    };
  }
  KpspemuMainScene.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KpspemuMainScene',
    interfaces: [WithEmulator, Scene]
  };
  function loadExecutableAndStart($receiver_0, file_0, continuation_0, suspended) {
    var instance = new Coroutine$loadExecutableAndStart($receiver_0, file_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$loadExecutableAndStart($receiver_0, file_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$_0 = void 0;
    this.local$tmp$_2 = void 0;
    this.local$tmp$_3 = void 0;
    this.local$iso = void 0;
    this.local$files = void 0;
    this.local$f = void 0;
    this.local$$receiver = $receiver_0;
    this.local$file = file_0;
  }
  Coroutine$loadExecutableAndStart.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$loadExecutableAndStart.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$loadExecutableAndStart.prototype.constructor = Coroutine$loadExecutableAndStart;
  Coroutine$loadExecutableAndStart.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            var tmp$_0;
            tmp$ = this.local$file.extensionLC;
            if (equals(tmp$, 'elf') || equals(tmp$, 'prx') || equals(tmp$, 'bin')) {
              this.state_0 = 17;
              this.result_0 = this.local$file.readAll(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              if (equals(tmp$, 'pbp')) {
                this.local$tmp$_0 = Pbp$Companion_getInstance();
                this.state_0 = 13;
                this.result_0 = this.local$file.open_7c7tmz$(void 0, this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                break;
              }
               else {
                if (equals(tmp$, 'iso') || equals(tmp$, 'zip')) {
                  tmp$_0 = this.local$file.extensionLC;
                  if (equals(tmp$_0, 'iso')) {
                    this.state_0 = 5;
                    this.result_0 = IsoVfs(this.local$file, this);
                    if (this.result_0 === COROUTINE_SUSPENDED)
                      return COROUTINE_SUSPENDED;
                    break;
                  }
                   else {
                    if (equals(tmp$_0, 'zip')) {
                      this.state_0 = 2;
                      this.result_0 = this.local$file.open_7c7tmz$(void 0, this);
                      if (this.result_0 === COROUTINE_SUSPENDED)
                        return COROUTINE_SUSPENDED;
                      break;
                    }
                     else {
                      this.local$tmp$_2 = invalidOp('UNEXPECTED');
                      this.state_0 = 4;
                      continue;
                    }
                  }
                }
                 else {
                  invalidOp("Don't know how to load executable file " + this.local$file);
                  this.state_0 = 12;
                  continue;
                }
              }
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = ZipVfs2(this.result_0, this.local$file, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.local$tmp$_2 = this.result_0;
            this.state_0 = 4;
            continue;
          case 4:
            this.state_0 = 6;
            continue;
          case 5:
            this.local$tmp$_2 = this.result_0;
            this.state_0 = 6;
            continue;
          case 6:
            this.local$iso = this.local$tmp$_2;
            var paramSfo = this.local$iso.get_61zpoe$('PSP_GAME/PARAM.SFO');
            this.local$files = listOf([this.local$iso.get_61zpoe$('PSP_GAME/SYSDIR/BOOT.BIN'), this.local$iso.get_61zpoe$('EBOOT.ELF'), this.local$iso.get_61zpoe$('EBOOT.PBP')]);
            this.local$tmp$_3 = this.local$files.iterator();
            this.state_0 = 7;
            continue;
          case 7:
            if (!this.local$tmp$_3.hasNext()) {
              this.state_0 = 11;
              continue;
            }

            this.local$f = this.local$tmp$_3.next();
            this.state_0 = 8;
            this.result_0 = this.local$f.exists(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 8:
            if (this.result_0) {
              if (this.local$f.parent.path.length === 0) {
                this.local$$receiver.fileManager.currentDirectory = 'umd0:/';
                this.local$$receiver.deviceManager.mount_hem4eq$(this.local$$receiver.fileManager.currentDirectory, this.local$iso);
                this.local$$receiver.deviceManager.mount_hem4eq$('game0:/', this.local$iso);
                this.local$$receiver.deviceManager.mount_hem4eq$('umd0:/', this.local$iso);
              }
              this.state_0 = 9;
              this.result_0 = loadExecutableAndStart(this.local$$receiver, this.local$f, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 10;
              continue;
            }

          case 9:
            return this.result_0;
          case 10:
            this.state_0 = 7;
            continue;
          case 11:
            invalidOp("Can't find any possible executalbe in ISO (" + this.local$files + ')');
            this.state_0 = 12;
            continue;
          case 12:
            this.state_0 = 16;
            continue;
          case 13:
            this.state_0 = 14;
            this.result_0 = this.local$tmp$_0.load_axnxby$(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 14:
            this.state_0 = 15;
            this.result_0 = loadExecutableAndStart(this.local$$receiver, asVfsFile(ensureNotNull(this.result_0.get_61zpoe$(Pbp$Companion_getInstance().PSP_DATA)), 'executable.elf'), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 15:
            return this.result_0;
          case 16:
            this.state_0 = 18;
            continue;
          case 17:
            return loadElfAndSetRegisters(this.local$$receiver, openSync(this.result_0));
          case 18:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function simpleButton$lambda(closure$colorOut_0, closure$bg_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$simpleButton$lambda(closure$colorOut_0, closure$bg_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$simpleButton$lambda(closure$colorOut_0, closure$bg_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$colorOut = closure$colorOut_0;
    this.local$closure$bg = closure$bg_0;
  }
  Coroutine$simpleButton$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$simpleButton$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$simpleButton$lambda.prototype.constructor = Coroutine$simpleButton$lambda;
  Coroutine$simpleButton$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$closure$bg.colorMul = this.local$closure$colorOut, Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function simpleButton$lambda_0(closure$colorOver_0, closure$bg_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$simpleButton$lambda_0(closure$colorOver_0, closure$bg_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$simpleButton$lambda_0(closure$colorOver_0, closure$bg_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$colorOver = closure$colorOver_0;
    this.local$closure$bg = closure$bg_0;
  }
  Coroutine$simpleButton$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$simpleButton$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$simpleButton$lambda_0.prototype.constructor = Coroutine$simpleButton$lambda_0;
  Coroutine$simpleButton$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$closure$bg.colorMul = this.local$closure$colorOver, Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function simpleButton($receiver, text_0, width, height, font) {
    if (width === void 0)
      width = 80;
    if (height === void 0)
      height = 24;
    if (font === void 0)
      font = $receiver.defaultFont;
    var button = $receiver.container();
    var colorOver = color.RGBA.invoke_tjonv8$(160, 160, 160, 255);
    var colorOut = color.RGBA.invoke_tjonv8$(144, 144, 144, 255);
    var bg = new SolidRect_init($receiver, numberToDouble(width), numberToDouble(height), colorOut);
    button.plusAssign_l5rad2$(bg);
    var $receiver_0 = text($receiver, text_0, void 0, void 0, font);
    $receiver_0.x = 4.0;
    $receiver_0.y = 4.0;
    $receiver_0.enabled = false;
    button.plusAssign_l5rad2$($receiver_0);
    var tmp$, tmp$_0;
    (tmp$_0 = (tmp$ = button != null ? get_mouse(button) : null) != null ? tmp$.onOut : null) != null ? addSuspend(tmp$_0, button.views.coroutineContext, simpleButton$lambda(colorOut, bg)) : null;
    var tmp$_1, tmp$_0_0;
    (tmp$_0_0 = (tmp$_1 = button != null ? get_mouse(button) : null) != null ? tmp$_1.onOver : null) != null ? addSuspend(tmp$_0_0, button.views.coroutineContext, simpleButton$lambda_0(colorOver, bg)) : null;
    return button;
  }
  function CpuBreakException(id) {
    CpuBreakException$Companion_getInstance();
    Exception.call(this);
    this.id = id;
    this.name = 'CpuBreakException';
  }
  function CpuBreakException$Companion() {
    CpuBreakException$Companion_instance = this;
    this.THREAD_WAIT = 10001;
    this.THREAD_EXIT_KILL = 10002;
  }
  CpuBreakException$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var CpuBreakException$Companion_instance = null;
  function CpuBreakException$Companion_getInstance() {
    if (CpuBreakException$Companion_instance === null) {
      new CpuBreakException$Companion();
    }
    return CpuBreakException$Companion_instance;
  }
  CpuBreakException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CpuBreakException',
    interfaces: [Exception]
  };
  CpuBreakException.prototype.component1 = function () {
    return this.id;
  };
  CpuBreakException.prototype.copy_za3lpa$ = function (id) {
    return new CpuBreakException(id === void 0 ? this.id : id);
  };
  CpuBreakException.prototype.toString = function () {
    return 'CpuBreakException(id=' + Kotlin.toString(this.id) + ')';
  };
  CpuBreakException.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  CpuBreakException.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function get_K0($receiver) {
    return $receiver.r26;
  }
  function set_K0($receiver, value) {
    $receiver.r26 = value;
  }
  function get_K1($receiver) {
    return $receiver.r27;
  }
  function set_K1($receiver, value) {
    $receiver.r27 = value;
  }
  function get_GP($receiver) {
    return $receiver.r28;
  }
  function set_GP($receiver, value) {
    $receiver.r28 = value;
  }
  function get_SP($receiver) {
    return $receiver.r29;
  }
  function set_SP($receiver, value) {
    $receiver.r29 = value;
  }
  function get_FP($receiver) {
    return $receiver.r30;
  }
  function set_FP($receiver, value) {
    $receiver.r30 = value;
  }
  function get_RA($receiver) {
    return $receiver.r31;
  }
  function set_RA($receiver, value) {
    $receiver.r31 = value;
  }
  function CpuState(mem, syscalls) {
    if (syscalls === void 0)
      syscalls = new TraceSyscallHandler();
    this.mem = mem;
    this.syscalls = syscalls;
    this.$delegate_xt3zvs$_0 = new Extra$Mixin();
    this._R = new Int32Array(32);
    this._F = KorioNative$FastMemory.Companion.alloc_za3lpa$(32 * 4 | 0);
    this._VFPR = KorioNative$FastMemory.Companion.alloc_za3lpa$(128 * 4 | 0);
    this.fcr0 = 13137;
    this.fcr25 = 0;
    this.fcr26 = 0;
    this.fcr27 = 0;
    this.fcr28 = 0;
    this.fcr31 = 3584;
    this.GPR = new CpuState$Gpr(this);
    this.IR = 0;
    this._PC = 0;
    this._nPC = 0;
    this.LO = 0;
    this.HI = 0;
    this.IC = 0;
  }
  CpuState.prototype.updateFCR31_za3lpa$ = function (value) {
    this.fcr31 = value & 25427967;
  };
  Object.defineProperty(CpuState.prototype, 'fcr31_rm', {
    get: function () {
      return extract(this.fcr31, 0, 2);
    },
    set: function (value) {
      this.fcr31 = insert(this.fcr31, value, 0, 2);
    }
  });
  Object.defineProperty(CpuState.prototype, 'fcr31_2_21', {
    get: function () {
      return extract(this.fcr31, 2, 21);
    },
    set: function (value) {
      this.fcr31 = insert(this.fcr31, value, 2, 21);
    }
  });
  Object.defineProperty(CpuState.prototype, 'fcr31_cc', {
    get: function () {
      return extract_0(this.fcr31, 23);
    },
    set: function (value) {
      this.fcr31 = insert_0(this.fcr31, value, 23);
    }
  });
  Object.defineProperty(CpuState.prototype, 'fcr31_fs', {
    get: function () {
      return extract_0(this.fcr31, 24);
    },
    set: function (value) {
      this.fcr31 = insert_0(this.fcr31, value, 24);
    }
  });
  Object.defineProperty(CpuState.prototype, 'fcr31_25_7', {
    get: function () {
      return extract(this.fcr31, 25, 7);
    },
    set: function (value) {
      this.fcr31 = insert(this.fcr31, value, 25, 7);
    }
  });
  Object.defineProperty(CpuState.prototype, 'r0', {
    get: function () {
      return 0;
    },
    set: function (value) {
    }
  });
  Object.defineProperty(CpuState.prototype, 'r1', {
    get: function () {
      return this._R[1];
    },
    set: function (value) {
      this._R[1] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r2', {
    get: function () {
      return this._R[2];
    },
    set: function (value) {
      this._R[2] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r3', {
    get: function () {
      return this._R[3];
    },
    set: function (value) {
      this._R[3] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r4', {
    get: function () {
      return this._R[4];
    },
    set: function (value) {
      this._R[4] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r5', {
    get: function () {
      return this._R[5];
    },
    set: function (value) {
      this._R[5] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r6', {
    get: function () {
      return this._R[6];
    },
    set: function (value) {
      this._R[6] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r7', {
    get: function () {
      return this._R[7];
    },
    set: function (value) {
      this._R[7] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r8', {
    get: function () {
      return this._R[8];
    },
    set: function (value) {
      this._R[8] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r9', {
    get: function () {
      return this._R[9];
    },
    set: function (value) {
      this._R[9] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r10', {
    get: function () {
      return this._R[10];
    },
    set: function (value) {
      this._R[10] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r11', {
    get: function () {
      return this._R[11];
    },
    set: function (value) {
      this._R[11] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r12', {
    get: function () {
      return this._R[12];
    },
    set: function (value) {
      this._R[12] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r13', {
    get: function () {
      return this._R[13];
    },
    set: function (value) {
      this._R[13] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r14', {
    get: function () {
      return this._R[14];
    },
    set: function (value) {
      this._R[14] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r15', {
    get: function () {
      return this._R[15];
    },
    set: function (value) {
      this._R[15] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r16', {
    get: function () {
      return this._R[16];
    },
    set: function (value) {
      this._R[16] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r17', {
    get: function () {
      return this._R[17];
    },
    set: function (value) {
      this._R[17] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r18', {
    get: function () {
      return this._R[18];
    },
    set: function (value) {
      this._R[18] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r19', {
    get: function () {
      return this._R[19];
    },
    set: function (value) {
      this._R[19] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r20', {
    get: function () {
      return this._R[20];
    },
    set: function (value) {
      this._R[20] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r21', {
    get: function () {
      return this._R[21];
    },
    set: function (value) {
      this._R[21] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r22', {
    get: function () {
      return this._R[22];
    },
    set: function (value) {
      this._R[22] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r23', {
    get: function () {
      return this._R[23];
    },
    set: function (value) {
      this._R[23] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r24', {
    get: function () {
      return this._R[24];
    },
    set: function (value) {
      this._R[24] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r25', {
    get: function () {
      return this._R[25];
    },
    set: function (value) {
      this._R[25] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r26', {
    get: function () {
      return this._R[26];
    },
    set: function (value) {
      this._R[26] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r27', {
    get: function () {
      return this._R[27];
    },
    set: function (value) {
      this._R[27] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r28', {
    get: function () {
      return this._R[28];
    },
    set: function (value) {
      this._R[28] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r29', {
    get: function () {
      return this._R[29];
    },
    set: function (value) {
      this._R[29] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r30', {
    get: function () {
      return this._R[30];
    },
    set: function (value) {
      this._R[30] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r31', {
    get: function () {
      return this._R[31];
    },
    set: function (value) {
      this._R[31] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'PC', {
    get: function () {
      return this._PC;
    }
  });
  Object.defineProperty(CpuState.prototype, 'HI_LO', {
    get: function () {
      return Kotlin.Long.fromInt(this.HI).shiftLeft(32).or(Kotlin.Long.fromInt(this.LO).and(new Kotlin.Long(-1, 0)));
    },
    set: function (value) {
      this.HI = value.shiftRightUnsigned(32).toInt();
      this.LO = value.shiftRightUnsigned(0).toInt();
    }
  });
  CpuState.prototype.setPC_za3lpa$ = function (pc) {
    this._PC = pc;
    this._nPC = pc + 4 | 0;
  };
  CpuState.prototype.jump_za3lpa$ = function (pc) {
    this._PC = pc;
    this._nPC = pc + 4 | 0;
  };
  CpuState.prototype.advance_pc_za3lpa$ = function (offset) {
    this._PC = this._nPC;
    this._nPC = this._nPC + offset | 0;
  };
  CpuState.prototype.getGpr_za3lpa$ = function (index) {
    return this._R[index];
  };
  CpuState.prototype.setGpr_vux9f0$ = function (index, v) {
    if (index !== 0)
      this._R[index] = v;
  };
  CpuState.prototype.getFpr_za3lpa$ = function (index) {
    return this._F.getAlignedFloat32_za3lpa$(index);
  };
  CpuState.prototype.setFpr_24o109$ = function (index, v) {
    this._F.setAlignedFloat32_24o109$(index, v);
  };
  CpuState.prototype.getFprI_za3lpa$ = function (index) {
    return this._F.getAlignedInt32_za3lpa$(index);
  };
  CpuState.prototype.setFprI_vux9f0$ = function (index, v) {
    this._F.setAlignedInt32_vux9f0$(index, v);
  };
  CpuState.prototype.setVfpr_24o109$ = function (index, value) {
    this._VFPR.setAlignedFloat32_24o109$(index, value);
  };
  CpuState.prototype.getVfpr_za3lpa$ = function (index) {
    return this._VFPR.getAlignedFloat32_za3lpa$(index);
  };
  CpuState.prototype.setVfprI_vux9f0$ = function (index, value) {
    this._VFPR.setAlignedInt32_vux9f0$(index, value);
  };
  CpuState.prototype.getVfprI_za3lpa$ = function (index) {
    return this._VFPR.getAlignedInt32_za3lpa$(index);
  };
  function CpuState$Gpr(state) {
    this.state = state;
  }
  CpuState$Gpr.prototype.get_za3lpa$ = function (index) {
    return this.state.getGpr_za3lpa$(index);
  };
  CpuState$Gpr.prototype.set_vux9f0$ = function (index, v) {
    this.state.setGpr_vux9f0$(index, v);
  };
  CpuState$Gpr.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Gpr',
    interfaces: []
  };
  function CpuState$FprI(state) {
    this.state = state;
  }
  CpuState$FprI.prototype.get_za3lpa$ = function (index) {
    return this.state.getFprI_za3lpa$(index);
  };
  CpuState$FprI.prototype.set_vux9f0$ = function (index, v) {
    this.state.setFprI_vux9f0$(index, v);
  };
  CpuState$FprI.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FprI',
    interfaces: []
  };
  CpuState.prototype.syscall_za3lpa$ = function (syscall) {
    this.syscalls.syscall_acv9wa$(this, syscall);
  };
  Object.defineProperty(CpuState.prototype, 'extra', {
    get: function () {
      return this.$delegate_xt3zvs$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_xt3zvs$_0.extra = tmp$;
    }
  });
  CpuState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CpuState',
    interfaces: [Extra]
  };
  function InstructionDecoder() {
  }
  InstructionDecoder.prototype.get_lsb_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_lsb_s8ev3n$', function ($receiver) {
    return $receiver >>> 6 & 31;
  });
  InstructionDecoder.prototype.get_msb_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_msb_s8ev3n$', function ($receiver) {
    return $receiver >>> 11 & 31;
  });
  InstructionDecoder.prototype.get_pos_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_pos_s8ev3n$', function ($receiver) {
    return $receiver >>> 6 & 31;
  });
  InstructionDecoder.prototype.get_size_e_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_size_e_s8ev3n$', function ($receiver) {
    return ($receiver >>> 11 & 31) + 1 | 0;
  });
  InstructionDecoder.prototype.get_size_i_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_size_i_s8ev3n$', function ($receiver) {
    return ($receiver >>> 11 & 31) - ($receiver >>> 6 & 31) + 1 | 0;
  });
  InstructionDecoder.prototype.get_rd_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_rd_s8ev3n$', function ($receiver) {
    return $receiver >>> 11 & 31;
  });
  InstructionDecoder.prototype.get_rt_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_rt_s8ev3n$', function ($receiver) {
    return $receiver >>> 16 & 31;
  });
  InstructionDecoder.prototype.get_rs_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_rs_s8ev3n$', function ($receiver) {
    return $receiver >>> 21 & 31;
  });
  InstructionDecoder.prototype.get_fd_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_fd_s8ev3n$', function ($receiver) {
    return $receiver >>> 6 & 31;
  });
  InstructionDecoder.prototype.get_fs_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_fs_s8ev3n$', function ($receiver) {
    return $receiver >>> 11 & 31;
  });
  InstructionDecoder.prototype.get_ft_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_ft_s8ev3n$', function ($receiver) {
    return $receiver >>> 16 & 31;
  });
  InstructionDecoder.prototype.get_vd_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_vd_s8ev3n$', function ($receiver) {
    return $receiver >>> 0 & 127;
  });
  InstructionDecoder.prototype.get_vs_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_vs_s8ev3n$', function ($receiver) {
    return $receiver >>> 8 & 127;
  });
  InstructionDecoder.prototype.get_vt_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_vt_s8ev3n$', function ($receiver) {
    return $receiver >>> 16 & 127;
  });
  InstructionDecoder.prototype.get_one_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_one_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['korio-js'].com.soywiz.korio.util.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 7, 1);
    };
  }));
  InstructionDecoder.prototype.get_two_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_two_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['korio-js'].com.soywiz.korio.util.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 15, 1);
    };
  }));
  InstructionDecoder.prototype.get_one_two_s8ev3n$ = function ($receiver) {
    return 1 + (1 * extract($receiver, 7, 1) | 0) + (2 * extract($receiver, 15, 1) | 0) | 0;
  };
  InstructionDecoder.prototype.get_syscall_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_syscall_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['korio-js'].com.soywiz.korio.util.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 6, 20);
    };
  }));
  InstructionDecoder.prototype.get_s_imm16_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_s_imm16_s8ev3n$', function ($receiver) {
    return ($receiver & 65535) << 16 >> 16;
  });
  InstructionDecoder.prototype.get_u_imm16_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_u_imm16_s8ev3n$', function ($receiver) {
    return $receiver & 65535;
  });
  InstructionDecoder.prototype.get_u_imm26_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_u_imm26_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['korio-js'].com.soywiz.korio.util.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 0, 26);
    };
  }));
  InstructionDecoder.prototype.get_jump_address_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_jump_address_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['korio-js'].com.soywiz.korio.util.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 0, 26) * 4 | 0;
    };
  }));
  InstructionDecoder.prototype.invoke_6rdgz4$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.invoke_6rdgz4$', function ($receiver, callback) {
    callback($receiver);
    $receiver.advance_pc_za3lpa$(4);
  });
  InstructionDecoder.prototype.preadvance_6rdgz4$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.preadvance_6rdgz4$', function ($receiver, callback) {
    $receiver.advance_pc_za3lpa$(4);
    callback($receiver);
  });
  InstructionDecoder.prototype.normal_6rdgz4$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.normal_6rdgz4$', function ($receiver, callback) {
    callback($receiver);
    $receiver.advance_pc_za3lpa$(4);
  });
  InstructionDecoder.prototype.none_6rdgz4$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.none_6rdgz4$', function ($receiver, callback) {
    callback($receiver);
  });
  InstructionDecoder.prototype.branch_bqb35s$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.branch_bqb35s$', function ($receiver, callback) {
    var result = callback($receiver);
    if (result) {
      $receiver.advance_pc_za3lpa$((($receiver.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      $receiver.advance_pc_za3lpa$(4);
    }
  });
  InstructionDecoder.prototype.branchLikely_bqb35s$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.branchLikely_bqb35s$', function ($receiver, callback) {
    var result = callback($receiver);
    if (result) {
      $receiver.advance_pc_za3lpa$((($receiver.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      $receiver._PC = $receiver._nPC + 4 | 0;
      $receiver._nPC = $receiver._PC + 4 | 0;
    }
  });
  InstructionDecoder.prototype.get_RD_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_RD_he8x89$', function ($receiver) {
    return $receiver.getGpr_za3lpa$($receiver.IR >>> 11 & 31);
  });
  InstructionDecoder.prototype.set_RD_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_RD_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setGpr_vux9f0$($receiver.IR >>> 11 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_RT_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_RT_he8x89$', function ($receiver) {
    return $receiver.getGpr_za3lpa$($receiver.IR >>> 16 & 31);
  });
  InstructionDecoder.prototype.set_RT_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_RT_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setGpr_vux9f0$($receiver.IR >>> 16 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_RS_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_RS_he8x89$', function ($receiver) {
    return $receiver.getGpr_za3lpa$($receiver.IR >>> 21 & 31);
  });
  InstructionDecoder.prototype.set_RS_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_RS_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setGpr_vux9f0$($receiver.IR >>> 21 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_FD_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_FD_he8x89$', function ($receiver) {
    return $receiver.getFpr_za3lpa$($receiver.IR >>> 6 & 31);
  });
  InstructionDecoder.prototype.set_FD_nsu4ru$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_FD_nsu4ru$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setFpr_24o109$($receiver.IR >>> 6 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_FT_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_FT_he8x89$', function ($receiver) {
    return $receiver.getFpr_za3lpa$($receiver.IR >>> 16 & 31);
  });
  InstructionDecoder.prototype.set_FT_nsu4ru$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_FT_nsu4ru$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setFpr_24o109$($receiver.IR >>> 16 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_FS_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_FS_he8x89$', function ($receiver) {
    return $receiver.getFpr_za3lpa$($receiver.IR >>> 11 & 31);
  });
  InstructionDecoder.prototype.set_FS_nsu4ru$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_FS_nsu4ru$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setFpr_24o109$($receiver.IR >>> 11 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_FD_I_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_FD_I_he8x89$', function ($receiver) {
    return $receiver.getFprI_za3lpa$($receiver.IR >>> 6 & 31);
  });
  InstructionDecoder.prototype.set_FD_I_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_FD_I_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setFprI_vux9f0$($receiver.IR >>> 6 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_FT_I_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_FT_I_he8x89$', function ($receiver) {
    return $receiver.getFprI_za3lpa$($receiver.IR >>> 16 & 31);
  });
  InstructionDecoder.prototype.set_FT_I_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_FT_I_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setFprI_vux9f0$($receiver.IR >>> 16 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_FS_I_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_FS_I_he8x89$', function ($receiver) {
    return $receiver.getFprI_za3lpa$($receiver.IR >>> 11 & 31);
  });
  InstructionDecoder.prototype.set_FS_I_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_FS_I_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setFprI_vux9f0$($receiver.IR >>> 11 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_RS_IMM16_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_RS_IMM16_he8x89$', function ($receiver) {
    return $receiver.getGpr_za3lpa$($receiver.IR >>> 21 & 31) + (($receiver.IR & 65535) << 16 >> 16) | 0;
  });
  InstructionDecoder.prototype.get_S_IMM16_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_S_IMM16_he8x89$', function ($receiver) {
    return ($receiver.IR & 65535) << 16 >> 16;
  });
  InstructionDecoder.prototype.get_U_IMM16_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_U_IMM16_he8x89$', function ($receiver) {
    return $receiver.IR & 65535;
  });
  InstructionDecoder.prototype.get_POS_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_POS_he8x89$', function ($receiver) {
    return $receiver.IR >>> 6 & 31;
  });
  InstructionDecoder.prototype.get_SIZE_E_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_SIZE_E_he8x89$', function ($receiver) {
    return ($receiver.IR >>> 11 & 31) + 1 | 0;
  });
  InstructionDecoder.prototype.get_SIZE_I_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_SIZE_I_he8x89$', function ($receiver) {
    var $receiver_0 = $receiver.IR;
    return ($receiver_0 >>> 11 & 31) - ($receiver_0 >>> 6 & 31) + 1 | 0;
  });
  InstructionDecoder.prototype.get_SYSCALL_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_SYSCALL_he8x89$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['korio-js'].com.soywiz.korio.util.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver.IR, 6, 20);
    };
  }));
  InstructionDecoder.prototype.get_U_IMM26_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_U_IMM26_he8x89$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['korio-js'].com.soywiz.korio.util.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver.IR, 0, 26);
    };
  }));
  InstructionDecoder.prototype.get_JUMP_ADDRESS_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_JUMP_ADDRESS_he8x89$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['korio-js'].com.soywiz.korio.util.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver.IR, 0, 26) * 4 | 0;
    };
  }));
  InstructionDecoder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InstructionDecoder',
    interfaces: []
  };
  function InstructionDispatcher(e) {
    this.e = e;
  }
  InstructionDispatcher.prototype.dispatch_8olpll$ = function (s, pc, i) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12, tmp$_13, tmp$_14, tmp$_15, tmp$_16, tmp$_17, tmp$_18, tmp$_19, tmp$_20, tmp$_21, tmp$_22, tmp$_23, tmp$_24, tmp$_25, tmp$_26, tmp$_27, tmp$_28, tmp$_29, tmp$_30, tmp$_31, tmp$_32, tmp$_33, tmp$_34, tmp$_35, tmp$_36, tmp$_37;
    tmp$ = i >>> 26 & 63;
    if (tmp$ === 0) {
      tmp$_0 = i >>> 0 & 63;
      if (tmp$_0 === 0)
        return this.e.sll_11rb$(s);
      else if (tmp$_0 === 2) {
        tmp$_1 = i >>> 21 & 2047;
        if (tmp$_1 === 0)
          return this.e.srl_11rb$(s);
        else if (tmp$_1 === 1)
          return this.e.rotr_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (0) failed mask 0x%08X', [i, pc, -2097152]));
      }
       else if (tmp$_0 === 3)
        return this.e.sra_11rb$(s);
      else if (tmp$_0 === 4)
        return this.e.sllv_11rb$(s);
      else if (tmp$_0 === 6) {
        tmp$_2 = i >>> 6 & 66060319;
        if (tmp$_2 === 0)
          return this.e.srlv_11rb$(s);
        else if (tmp$_2 === 1)
          return this.e.rotrv_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (1) failed mask 0x%08X', [i, pc, -67106880]));
      }
       else if (tmp$_0 === 7)
        return this.e.srav_11rb$(s);
      else if (tmp$_0 === 8)
        return this.e.jr_11rb$(s);
      else if (tmp$_0 === 9)
        return this.e.jalr_11rb$(s);
      else if (tmp$_0 === 10)
        return this.e.movz_11rb$(s);
      else if (tmp$_0 === 11)
        return this.e.movn_11rb$(s);
      else if (tmp$_0 === 12)
        return this.e.syscall_11rb$(s);
      else if (tmp$_0 === 13)
        return this.e._break_11rb$(s);
      else if (tmp$_0 === 15)
        return this.e.sync_11rb$(s);
      else if (tmp$_0 === 16)
        return this.e.mfhi_11rb$(s);
      else if (tmp$_0 === 17)
        return this.e.mthi_11rb$(s);
      else if (tmp$_0 === 18)
        return this.e.mflo_11rb$(s);
      else if (tmp$_0 === 19)
        return this.e.mtlo_11rb$(s);
      else if (tmp$_0 === 22)
        return this.e.clz_11rb$(s);
      else if (tmp$_0 === 23)
        return this.e.clo_11rb$(s);
      else if (tmp$_0 === 24)
        return this.e.mult_11rb$(s);
      else if (tmp$_0 === 25)
        return this.e.multu_11rb$(s);
      else if (tmp$_0 === 26)
        return this.e.div_11rb$(s);
      else if (tmp$_0 === 27)
        return this.e.divu_11rb$(s);
      else if (tmp$_0 === 28)
        return this.e.madd_11rb$(s);
      else if (tmp$_0 === 29)
        return this.e.maddu_11rb$(s);
      else if (tmp$_0 === 32)
        return this.e.add_11rb$(s);
      else if (tmp$_0 === 33)
        return this.e.addu_11rb$(s);
      else if (tmp$_0 === 34)
        return this.e.sub_11rb$(s);
      else if (tmp$_0 === 35)
        return this.e.subu_11rb$(s);
      else if (tmp$_0 === 36)
        return this.e.and_11rb$(s);
      else if (tmp$_0 === 37)
        return this.e.or_11rb$(s);
      else if (tmp$_0 === 38)
        return this.e.xor_11rb$(s);
      else if (tmp$_0 === 39)
        return this.e.nor_11rb$(s);
      else if (tmp$_0 === 42)
        return this.e.slt_11rb$(s);
      else if (tmp$_0 === 43)
        return this.e.sltu_11rb$(s);
      else if (tmp$_0 === 44)
        return this.e.max_11rb$(s);
      else if (tmp$_0 === 45)
        return this.e.min_11rb$(s);
      else if (tmp$_0 === 46)
        return this.e.msub_11rb$(s);
      else if (tmp$_0 === 47)
        return this.e.msubu_11rb$(s);
      else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (2) failed mask 0x%08X', [i, pc, 63]));
    }
     else if (tmp$ === 1) {
      tmp$_3 = i >>> 16 & 31;
      if (tmp$_3 === 0)
        return this.e.bltz_11rb$(s);
      else if (tmp$_3 === 1)
        return this.e.bgez_11rb$(s);
      else if (tmp$_3 === 2)
        return this.e.bltzl_11rb$(s);
      else if (tmp$_3 === 3)
        return this.e.bgezl_11rb$(s);
      else if (tmp$_3 === 16)
        return this.e.bltzal_11rb$(s);
      else if (tmp$_3 === 17)
        return this.e.bgezal_11rb$(s);
      else if (tmp$_3 === 18)
        return this.e.bltzall_11rb$(s);
      else if (tmp$_3 === 19)
        return this.e.bgezall_11rb$(s);
      else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (3) failed mask 0x%08X', [i, pc, 2031616]));
    }
     else if (tmp$ === 2)
      return this.e.j_11rb$(s);
    else if (tmp$ === 3)
      return this.e.jal_11rb$(s);
    else if (tmp$ === 4)
      return this.e.beq_11rb$(s);
    else if (tmp$ === 5)
      return this.e.bne_11rb$(s);
    else if (tmp$ === 6)
      return this.e.blez_11rb$(s);
    else if (tmp$ === 7)
      return this.e.bgtz_11rb$(s);
    else if (tmp$ === 8)
      return this.e.addi_11rb$(s);
    else if (tmp$ === 9)
      return this.e.addiu_11rb$(s);
    else if (tmp$ === 10)
      return this.e.slti_11rb$(s);
    else if (tmp$ === 11)
      return this.e.sltiu_11rb$(s);
    else if (tmp$ === 12)
      return this.e.andi_11rb$(s);
    else if (tmp$ === 13)
      return this.e.ori_11rb$(s);
    else if (tmp$ === 14)
      return this.e.xori_11rb$(s);
    else if (tmp$ === 15)
      return this.e.lui_11rb$(s);
    else if (tmp$ === 16) {
      tmp$_4 = i >>> 0 & 65013759;
      if (tmp$_4 === 0)
        return this.e.mfc0_11rb$(s);
      else if (tmp$_4 === 4194304)
        return this.e.cfc0_11rb$(s);
      else if (tmp$_4 === 8388608)
        return this.e.mtc0_11rb$(s);
      else if (tmp$_4 === 12582912)
        return this.e.ctc0_11rb$(s);
      else if (tmp$_4 === 33554456)
        return this.e.eret_11rb$(s);
      else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (4) failed mask 0x%08X', [i, pc, 65013759]));
    }
     else if (tmp$ === 17) {
      tmp$_5 = i >>> 21 & 31;
      if (tmp$_5 === 0)
        return this.e.mfc1_11rb$(s);
      else if (tmp$_5 === 2)
        return this.e.cfc1_11rb$(s);
      else if (tmp$_5 === 4)
        return this.e.mtc1_11rb$(s);
      else if (tmp$_5 === 6)
        return this.e.ctc1_11rb$(s);
      else if (tmp$_5 === 8) {
        tmp$_6 = i >>> 16 & 64543;
        if (tmp$_6 === 17408)
          return this.e.bc1f_11rb$(s);
        else if (tmp$_6 === 17409)
          return this.e.bc1t_11rb$(s);
        else if (tmp$_6 === 17410)
          return this.e.bc1fl_11rb$(s);
        else if (tmp$_6 === 17411)
          return this.e.bc1tl_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (5) failed mask 0x%08X', [i, pc, -65077248]));
      }
       else if (tmp$_5 === 16) {
        tmp$_7 = i >>> 0 & -67108801;
        if (tmp$_7 === 1140850688)
          return this.e.add_s_11rb$(s);
        else if (tmp$_7 === 1140850689)
          return this.e.sub_s_11rb$(s);
        else if (tmp$_7 === 1140850690)
          return this.e.mul_s_11rb$(s);
        else if (tmp$_7 === 1140850691)
          return this.e.div_s_11rb$(s);
        else if (tmp$_7 === 1140850692)
          return this.e.sqrt_s_11rb$(s);
        else if (tmp$_7 === 1140850693)
          return this.e.abs_s_11rb$(s);
        else if (tmp$_7 === 1140850694)
          return this.e.mov_s_11rb$(s);
        else if (tmp$_7 === 1140850695)
          return this.e.neg_s_11rb$(s);
        else if (tmp$_7 === 1140850700)
          return this.e.round_w_s_11rb$(s);
        else if (tmp$_7 === 1140850701)
          return this.e.trunc_w_s_11rb$(s);
        else if (tmp$_7 === 1140850702)
          return this.e.ceil_w_s_11rb$(s);
        else if (tmp$_7 === 1140850703)
          return this.e.floor_w_s_11rb$(s);
        else if (tmp$_7 === 1140850724)
          return this.e.cvt_w_s_11rb$(s);
        else if (tmp$_7 === 1140850736)
          return this.e.c_f_s_11rb$(s);
        else if (tmp$_7 === 1140850737)
          return this.e.c_un_s_11rb$(s);
        else if (tmp$_7 === 1140850738)
          return this.e.c_eq_s_11rb$(s);
        else if (tmp$_7 === 1140850739)
          return this.e.c_ueq_s_11rb$(s);
        else if (tmp$_7 === 1140850740)
          return this.e.c_olt_s_11rb$(s);
        else if (tmp$_7 === 1140850741)
          return this.e.c_ult_s_11rb$(s);
        else if (tmp$_7 === 1140850742)
          return this.e.c_ole_s_11rb$(s);
        else if (tmp$_7 === 1140850743)
          return this.e.c_ule_s_11rb$(s);
        else if (tmp$_7 === 1140850744)
          return this.e.c_sf_s_11rb$(s);
        else if (tmp$_7 === 1140850745)
          return this.e.c_ngle_s_11rb$(s);
        else if (tmp$_7 === 1140850746)
          return this.e.c_seq_s_11rb$(s);
        else if (tmp$_7 === 1140850747)
          return this.e.c_ngl_s_11rb$(s);
        else if (tmp$_7 === 1140850748)
          return this.e.c_lt_s_11rb$(s);
        else if (tmp$_7 === 1140850749)
          return this.e.c_nge_s_11rb$(s);
        else if (tmp$_7 === 1140850750)
          return this.e.c_le_s_11rb$(s);
        else if (tmp$_7 === 1140850751)
          return this.e.c_ngt_s_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (6) failed mask 0x%08X', [i, pc, -67108801]));
      }
       else if (tmp$_5 === 20)
        return this.e.cvt_s_w_11rb$(s);
      else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (7) failed mask 0x%08X', [i, pc, 65011712]));
    }
     else if (tmp$ === 18) {
      tmp$_8 = i >>> 21 & 31;
      if (tmp$_8 === 3) {
        tmp$_9 = i >>> 7 & 33030655;
        if (tmp$_9 === 9437184)
          return this.e.mfv_11rb$(s);
        else if (tmp$_9 === 9437185)
          return this.e.mfvc_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (8) failed mask 0x%08X', [i, pc, -67043456]));
      }
       else if (tmp$_8 === 7) {
        tmp$_10 = i >>> 7 & 33030655;
        if (tmp$_10 === 9437184)
          return this.e.mtv_11rb$(s);
        else if (tmp$_10 === 9437185)
          return this.e.mtvc_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (9) failed mask 0x%08X', [i, pc, -67043456]));
      }
       else if (tmp$_8 === 8) {
        tmp$_11 = i >>> 16 & 64515;
        if (tmp$_11 === 18432)
          return this.e.bvf_11rb$(s);
        else if (tmp$_11 === 18433)
          return this.e.bvt_11rb$(s);
        else if (tmp$_11 === 18434)
          return this.e.bvfl_11rb$(s);
        else if (tmp$_11 === 18435)
          return this.e.bvtl_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (10) failed mask 0x%08X', [i, pc, -66912256]));
      }
       else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (11) failed mask 0x%08X', [i, pc, 65011712]));
    }
     else if (tmp$ === 20)
      return this.e.beql_11rb$(s);
    else if (tmp$ === 21)
      return this.e.bnel_11rb$(s);
    else if (tmp$ === 22)
      return this.e.blezl_11rb$(s);
    else if (tmp$ === 23)
      return this.e.bgtzl_11rb$(s);
    else if (tmp$ === 24) {
      tmp$_12 = i >>> 23 & 7;
      if (tmp$_12 === 0)
        return this.e.vadd_11rb$(s);
      else if (tmp$_12 === 1)
        return this.e.vsub_11rb$(s);
      else if (tmp$_12 === 2)
        return this.e.vsbn_11rb$(s);
      else if (tmp$_12 === 7)
        return this.e.vdiv_11rb$(s);
      else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (12) failed mask 0x%08X', [i, pc, 58720256]));
    }
     else if (tmp$ === 25) {
      tmp$_13 = i >>> 23 & 7;
      if (tmp$_13 === 0)
        return this.e.vmul_11rb$(s);
      else if (tmp$_13 === 1)
        return this.e.vdot_11rb$(s);
      else if (tmp$_13 === 2)
        return this.e.vscl_11rb$(s);
      else if (tmp$_13 === 4)
        return this.e.vhdp_11rb$(s);
      else if (tmp$_13 === 5)
        return this.e.vcrs_t_11rb$(s);
      else if (tmp$_13 === 6)
        return this.e.vdet_11rb$(s);
      else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (13) failed mask 0x%08X', [i, pc, 58720256]));
    }
     else if (tmp$ === 26)
      return this.e.mfvme_11rb$(s);
    else if (tmp$ === 27) {
      tmp$_14 = i >>> 23 & 7;
      if (tmp$_14 === 0)
        return this.e.vcmp_11rb$(s);
      else if (tmp$_14 === 2)
        return this.e.vmin_11rb$(s);
      else if (tmp$_14 === 3)
        return this.e.vmax_11rb$(s);
      else if (tmp$_14 === 5)
        return this.e.vscmp_11rb$(s);
      else if (tmp$_14 === 6)
        return this.e.vsge_11rb$(s);
      else if (tmp$_14 === 7)
        return this.e.vslt_11rb$(s);
      else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (14) failed mask 0x%08X', [i, pc, 58720256]));
    }
     else if (tmp$ === 28) {
      tmp$_15 = i >>> 0 & 2047;
      if (tmp$_15 === 0)
        return this.e.halt_11rb$(s);
      else if (tmp$_15 === 36)
        return this.e.mfic_11rb$(s);
      else if (tmp$_15 === 38)
        return this.e.mtic_11rb$(s);
      else if (tmp$_15 === 61) {
        tmp$_16 = i >>> 21 & 2047;
        if (tmp$_16 === 896)
          return this.e.mfdr_11rb$(s);
        else if (tmp$_16 === 900)
          return this.e.mtdr_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (15) failed mask 0x%08X', [i, pc, -2097152]));
      }
       else if (tmp$_15 === 62)
        return this.e.dret_11rb$(s);
      else if (tmp$_15 === 63)
        return this.e.dbreak_11rb$(s);
      else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (16) failed mask 0x%08X', [i, pc, 2047]));
    }
     else if (tmp$ === 31) {
      tmp$_17 = i >>> 0 & 63;
      if (tmp$_17 === 0)
        return this.e.ext_11rb$(s);
      else if (tmp$_17 === 4)
        return this.e.ins_11rb$(s);
      else if (tmp$_17 === 32) {
        tmp$_18 = i >>> 6 & 67076127;
        if (tmp$_18 === 32505858)
          return this.e.wsbh_11rb$(s);
        else if (tmp$_18 === 32505859)
          return this.e.wsbw_11rb$(s);
        else if (tmp$_18 === 32505872)
          return this.e.seb_11rb$(s);
        else if (tmp$_18 === 32505876)
          return this.e.bitrev_11rb$(s);
        else if (tmp$_18 === 32505880)
          return this.e.seh_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (17) failed mask 0x%08X', [i, pc, -2095168]));
      }
       else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (18) failed mask 0x%08X', [i, pc, 63]));
    }
     else if (tmp$ === 32)
      return this.e.lb_11rb$(s);
    else if (tmp$ === 33)
      return this.e.lh_11rb$(s);
    else if (tmp$ === 34)
      return this.e.lwl_11rb$(s);
    else if (tmp$ === 35)
      return this.e.lw_11rb$(s);
    else if (tmp$ === 36)
      return this.e.lbu_11rb$(s);
    else if (tmp$ === 37)
      return this.e.lhu_11rb$(s);
    else if (tmp$ === 38)
      return this.e.lwr_11rb$(s);
    else if (tmp$ === 40)
      return this.e.sb_11rb$(s);
    else if (tmp$ === 41)
      return this.e.sh_11rb$(s);
    else if (tmp$ === 42)
      return this.e.swl_11rb$(s);
    else if (tmp$ === 43)
      return this.e.sw_11rb$(s);
    else if (tmp$ === 44)
      return this.e.mtvme_11rb$(s);
    else if (tmp$ === 46)
      return this.e.swr_11rb$(s);
    else if (tmp$ === 47)
      return this.e.cache_11rb$(s);
    else if (tmp$ === 48)
      return this.e.ll_11rb$(s);
    else if (tmp$ === 49)
      return this.e.lwc1_11rb$(s);
    else if (tmp$ === 50)
      return this.e.lv_s_11rb$(s);
    else if (tmp$ === 52) {
      tmp$_19 = i >>> 24 & 3;
      if (tmp$_19 === 0) {
        tmp$_20 = i >>> 21 & 2023;
        if (tmp$_20 === 1664) {
          tmp$_21 = i >>> 16 & 799;
          if (tmp$_21 === 0)
            return this.e.vmov_11rb$(s);
          else if (tmp$_21 === 1)
            return this.e.vabs_11rb$(s);
          else if (tmp$_21 === 2)
            return this.e.vneg_11rb$(s);
          else if (tmp$_21 === 3)
            return this.e.vidt_11rb$(s);
          else if (tmp$_21 === 4)
            return this.e.vsat0_11rb$(s);
          else if (tmp$_21 === 5)
            return this.e.vsat1_11rb$(s);
          else if (tmp$_21 === 6)
            return this.e.vzero_11rb$(s);
          else if (tmp$_21 === 7)
            return this.e.vone_11rb$(s);
          else if (tmp$_21 === 16)
            return this.e.vrcp_11rb$(s);
          else if (tmp$_21 === 17)
            return this.e.vrsq_11rb$(s);
          else if (tmp$_21 === 18)
            return this.e.vsin_11rb$(s);
          else if (tmp$_21 === 19)
            return this.e.vcos_11rb$(s);
          else if (tmp$_21 === 20)
            return this.e.vexp2_11rb$(s);
          else if (tmp$_21 === 21)
            return this.e.vlog2_11rb$(s);
          else if (tmp$_21 === 22)
            return this.e.vsqrt_11rb$(s);
          else if (tmp$_21 === 23)
            return this.e.vasin_11rb$(s);
          else if (tmp$_21 === 24)
            return this.e.vnrcp_11rb$(s);
          else if (tmp$_21 === 26)
            return this.e.vnsin_11rb$(s);
          else if (tmp$_21 === 28)
            return this.e.vrexp2_11rb$(s);
          else
            throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (19) failed mask 0x%08X', [i, pc, 52363264]));
        }
         else if (tmp$_20 === 1665) {
          tmp$_22 = i >>> 16 & 799;
          if (tmp$_22 === 0)
            return this.e.vrnds_11rb$(s);
          else if (tmp$_22 === 1)
            return this.e.vrndi_11rb$(s);
          else if (tmp$_22 === 2)
            return this.e.vrndf1_11rb$(s);
          else if (tmp$_22 === 3)
            return this.e.vrndf2_11rb$(s);
          else if (tmp$_22 === 18)
            return this.e.vf2h_11rb$(s);
          else if (tmp$_22 === 19)
            return this.e.vh2f_11rb$(s);
          else if (tmp$_22 === 22)
            return this.e.vsbz_11rb$(s);
          else if (tmp$_22 === 23)
            return this.e.vlgb_11rb$(s);
          else if (tmp$_22 === 24)
            return this.e.vuc2i_11rb$(s);
          else if (tmp$_22 === 25)
            return this.e.vc2i_11rb$(s);
          else if (tmp$_22 === 26)
            return this.e.vus2i_11rb$(s);
          else if (tmp$_22 === 27)
            return this.e.vs2i_11rb$(s);
          else if (tmp$_22 === 28)
            return this.e.vi2uc_11rb$(s);
          else if (tmp$_22 === 29)
            return this.e.vi2c_11rb$(s);
          else if (tmp$_22 === 30)
            return this.e.vi2us_11rb$(s);
          else if (tmp$_22 === 31)
            return this.e.vi2s_11rb$(s);
          else
            throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (20) failed mask 0x%08X', [i, pc, 52363264]));
        }
         else if (tmp$_20 === 1666) {
          tmp$_23 = i >>> 16 & 799;
          if (tmp$_23 === 0)
            return this.e.vsrt1_11rb$(s);
          else if (tmp$_23 === 1)
            return this.e.vsrt2_11rb$(s);
          else if (tmp$_23 === 2)
            return this.e.vbfy1_11rb$(s);
          else if (tmp$_23 === 3)
            return this.e.vbfy2_11rb$(s);
          else if (tmp$_23 === 4)
            return this.e.vocp_11rb$(s);
          else if (tmp$_23 === 5)
            return this.e.vsocp_11rb$(s);
          else if (tmp$_23 === 6)
            return this.e.vfad_11rb$(s);
          else if (tmp$_23 === 7)
            return this.e.vavg_11rb$(s);
          else if (tmp$_23 === 8)
            return this.e.vsrt3_11rb$(s);
          else if (tmp$_23 === 9)
            return this.e.vsrt4_11rb$(s);
          else if (tmp$_23 === 10)
            return this.e.vsgn_11rb$(s);
          else if (tmp$_23 === 16)
            return this.e.vmfvc_11rb$(s);
          else if (tmp$_23 === 17)
            return this.e.vmtvc_11rb$(s);
          else if (tmp$_23 === 25)
            return this.e.vt4444_q_11rb$(s);
          else if (tmp$_23 === 26)
            return this.e.vt5551_q_11rb$(s);
          else if (tmp$_23 === 27)
            return this.e.vt5650_q_11rb$(s);
          else
            throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (21) failed mask 0x%08X', [i, pc, 52363264]));
        }
         else if (tmp$_20 === 1667)
          return this.e.vcst_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (22) failed mask 0x%08X', [i, pc, -52428800]));
      }
       else if (tmp$_19 === 2) {
        tmp$_24 = i >>> 21 & 2023;
        if (tmp$_24 === 1664)
          return this.e.vf2in_11rb$(s);
        else if (tmp$_24 === 1665)
          return this.e.vf2iz_11rb$(s);
        else if (tmp$_24 === 1666)
          return this.e.vf2iu_11rb$(s);
        else if (tmp$_24 === 1667)
          return this.e.vf2id_11rb$(s);
        else if (tmp$_24 === 1668)
          return this.e.vi2f_11rb$(s);
        else if (tmp$_24 === 1669) {
          tmp$_25 = i >>> 19 & 99;
          if (tmp$_25 === 64)
            return this.e.vcmovt_11rb$(s);
          else if (tmp$_25 === 65)
            return this.e.vcmovf_11rb$(s);
          else
            throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (23) failed mask 0x%08X', [i, pc, 51904512]));
        }
         else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (24) failed mask 0x%08X', [i, pc, -52428800]));
      }
       else if (tmp$_19 === 3)
        return this.e.vwbn_11rb$(s);
      else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (25) failed mask 0x%08X', [i, pc, 50331648]));
    }
     else if (tmp$ === 53) {
      tmp$_26 = i >>> 1 & 1;
      if (tmp$_26 === 0)
        return this.e.lvl_q_11rb$(s);
      else if (tmp$_26 === 1)
        return this.e.lvr_q_11rb$(s);
      else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (26) failed mask 0x%08X', [i, pc, 2]));
    }
     else if (tmp$ === 54)
      return this.e.lv_q_11rb$(s);
    else if (tmp$ === 55) {
      tmp$_27 = i >>> 24 & 3;
      if (tmp$_27 === 0)
        return this.e.vpfxs_11rb$(s);
      else if (tmp$_27 === 1)
        return this.e.vpfxt_11rb$(s);
      else if (tmp$_27 === 2)
        return this.e.vpfxd_11rb$(s);
      else if (tmp$_27 === 3) {
        tmp$_28 = i >>> 23 & 505;
        if (tmp$_28 === 440)
          return this.e.viim_11rb$(s);
        else if (tmp$_28 === 441)
          return this.e.vfim_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (27) failed mask 0x%08X', [i, pc, -58720256]));
      }
       else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (28) failed mask 0x%08X', [i, pc, 50331648]));
    }
     else if (tmp$ === 56)
      return this.e.sc_11rb$(s);
    else if (tmp$ === 57)
      return this.e.swc1_11rb$(s);
    else if (tmp$ === 58)
      return this.e.sv_s_11rb$(s);
    else if (tmp$ === 60) {
      tmp$_29 = i >>> 23 & 7;
      if (tmp$_29 === 0)
        return this.e.vmmul_11rb$(s);
      else if (tmp$_29 === 1) {
        tmp$_30 = i >>> 7 & 33030401;
        if (tmp$_30 === 31457280)
          return this.e.vhtfm2_11rb$(s);
        else if (tmp$_30 === 31457281)
          return this.e.vtfm2_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (29) failed mask 0x%08X', [i, pc, -67075968]));
      }
       else if (tmp$_29 === 2) {
        tmp$_31 = i >>> 7 & 33030401;
        if (tmp$_31 === 31457281)
          return this.e.vhtfm3_11rb$(s);
        else if (tmp$_31 === 31457536)
          return this.e.vtfm3_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (30) failed mask 0x%08X', [i, pc, -67075968]));
      }
       else if (tmp$_29 === 3) {
        tmp$_32 = i >>> 7 & 33030401;
        if (tmp$_32 === 31457536)
          return this.e.vhtfm4_11rb$(s);
        else if (tmp$_32 === 31457537)
          return this.e.vtfm4_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (31) failed mask 0x%08X', [i, pc, -67075968]));
      }
       else if (tmp$_29 === 4)
        return this.e.vmscl_11rb$(s);
      else if (tmp$_29 === 5) {
        tmp$_33 = i >>> 7 & 33030401;
        if (tmp$_33 === 31457536)
          return this.e.vcrsp_t_11rb$(s);
        else if (tmp$_33 === 31457537)
          return this.e.vqmul_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (32) failed mask 0x%08X', [i, pc, -67075968]));
      }
       else if (tmp$_29 === 7) {
        tmp$_34 = i >>> 21 & 2019;
        if (tmp$_34 === 1920) {
          tmp$_35 = i >>> 16 & 927;
          if (tmp$_35 === 896)
            return this.e.vmmov_11rb$(s);
          else if (tmp$_35 === 899)
            return this.e.vmidt_11rb$(s);
          else if (tmp$_35 === 902)
            return this.e.vmzero_11rb$(s);
          else if (tmp$_35 === 903)
            return this.e.vmone_11rb$(s);
          else
            throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (33) failed mask 0x%08X', [i, pc, 60751872]));
        }
         else if (tmp$_34 === 1921)
          return this.e.vrot_11rb$(s);
        else
          throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (34) failed mask 0x%08X', [i, pc, -60817408]));
      }
       else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (35) failed mask 0x%08X', [i, pc, 58720256]));
    }
     else if (tmp$ === 61) {
      tmp$_36 = i >>> 1 & 1;
      if (tmp$_36 === 0)
        return this.e.svl_q_11rb$(s);
      else if (tmp$_36 === 1)
        return this.e.svr_q_11rb$(s);
      else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (36) failed mask 0x%08X', [i, pc, 2]));
    }
     else if (tmp$ === 62)
      return this.e.sv_q_11rb$(s);
    else if (tmp$ === 63) {
      tmp$_37 = i >>> 0 & 67108863;
      if (tmp$_37 === 67043328)
        return this.e.vnop_11rb$(s);
      else if (tmp$_37 === 67044128)
        return this.e.vsync_11rb$(s);
      else if (tmp$_37 === 67044365)
        return this.e.vflush_11rb$(s);
      else
        throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (37) failed mask 0x%08X', [i, pc, 67108863]));
    }
     else
      throw new Exception(format('Invalid instruction 0x%08X at 0x%08X (38) failed mask 0x%08X', [i, pc, -67108864]));
  };
  InstructionDispatcher.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InstructionDispatcher',
    interfaces: []
  };
  function dispatch($receiver, s) {
    s.IR = s.mem.lw_za3lpa$(s._PC);
    $receiver.dispatch_8olpll$(s, s._PC, s.IR);
  }
  function InstructionEvaluator() {
    InstructionDecoder.call(this);
  }
  var NotImplementedError_init = Kotlin.kotlin.NotImplementedError;
  InstructionEvaluator.prototype.unimplemented_1wp5la$ = function (s, i) {
    throw new NotImplementedError_init('An operation is not implemented: ' + ('unimplemented: ' + i.name + ' : ' + toString(i)));
  };
  InstructionEvaluator.prototype.add_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().add);
  };
  InstructionEvaluator.prototype.addu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().addu);
  };
  InstructionEvaluator.prototype.addi_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().addi);
  };
  InstructionEvaluator.prototype.addiu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().addiu);
  };
  InstructionEvaluator.prototype.sub_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sub);
  };
  InstructionEvaluator.prototype.subu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().subu);
  };
  InstructionEvaluator.prototype.and_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().and);
  };
  InstructionEvaluator.prototype.andi_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().andi);
  };
  InstructionEvaluator.prototype.nor_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().nor);
  };
  InstructionEvaluator.prototype.or_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().or);
  };
  InstructionEvaluator.prototype.ori_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ori);
  };
  InstructionEvaluator.prototype.xor_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().xor);
  };
  InstructionEvaluator.prototype.xori_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().xori);
  };
  InstructionEvaluator.prototype.sll_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sll);
  };
  InstructionEvaluator.prototype.sllv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sllv);
  };
  InstructionEvaluator.prototype.sra_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sra);
  };
  InstructionEvaluator.prototype.srav_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().srav);
  };
  InstructionEvaluator.prototype.srl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().srl);
  };
  InstructionEvaluator.prototype.srlv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().srlv);
  };
  InstructionEvaluator.prototype.rotr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().rotr);
  };
  InstructionEvaluator.prototype.rotrv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().rotrv);
  };
  InstructionEvaluator.prototype.slt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().slt);
  };
  InstructionEvaluator.prototype.slti_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().slti);
  };
  InstructionEvaluator.prototype.sltu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sltu);
  };
  InstructionEvaluator.prototype.sltiu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sltiu);
  };
  InstructionEvaluator.prototype.lui_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lui);
  };
  InstructionEvaluator.prototype.seb_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().seb);
  };
  InstructionEvaluator.prototype.seh_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().seh);
  };
  InstructionEvaluator.prototype.bitrev_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bitrev);
  };
  InstructionEvaluator.prototype.max_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().max);
  };
  InstructionEvaluator.prototype.min_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().min);
  };
  InstructionEvaluator.prototype.div_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().div);
  };
  InstructionEvaluator.prototype.divu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().divu);
  };
  InstructionEvaluator.prototype.mult_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mult);
  };
  InstructionEvaluator.prototype.multu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().multu);
  };
  InstructionEvaluator.prototype.madd_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().madd);
  };
  InstructionEvaluator.prototype.maddu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().maddu);
  };
  InstructionEvaluator.prototype.msub_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().msub);
  };
  InstructionEvaluator.prototype.msubu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().msubu);
  };
  InstructionEvaluator.prototype.mfhi_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfhi);
  };
  InstructionEvaluator.prototype.mflo_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mflo);
  };
  InstructionEvaluator.prototype.mthi_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mthi);
  };
  InstructionEvaluator.prototype.mtlo_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtlo);
  };
  InstructionEvaluator.prototype.movz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().movz);
  };
  InstructionEvaluator.prototype.movn_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().movn);
  };
  InstructionEvaluator.prototype.ext_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ext);
  };
  InstructionEvaluator.prototype.ins_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ins);
  };
  InstructionEvaluator.prototype.clz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().clz);
  };
  InstructionEvaluator.prototype.clo_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().clo);
  };
  InstructionEvaluator.prototype.wsbh_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().wsbh);
  };
  InstructionEvaluator.prototype.wsbw_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().wsbw);
  };
  InstructionEvaluator.prototype.beq_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().beq);
  };
  InstructionEvaluator.prototype.beql_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().beql);
  };
  InstructionEvaluator.prototype.bgez_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bgez);
  };
  InstructionEvaluator.prototype.bgezl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bgezl);
  };
  InstructionEvaluator.prototype.bgezal_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bgezal);
  };
  InstructionEvaluator.prototype.bgezall_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bgezall);
  };
  InstructionEvaluator.prototype.bltz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bltz);
  };
  InstructionEvaluator.prototype.bltzl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bltzl);
  };
  InstructionEvaluator.prototype.bltzal_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bltzal);
  };
  InstructionEvaluator.prototype.bltzall_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bltzall);
  };
  InstructionEvaluator.prototype.blez_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().blez);
  };
  InstructionEvaluator.prototype.blezl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().blezl);
  };
  InstructionEvaluator.prototype.bgtz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bgtz);
  };
  InstructionEvaluator.prototype.bgtzl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bgtzl);
  };
  InstructionEvaluator.prototype.bne_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bne);
  };
  InstructionEvaluator.prototype.bnel_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bnel);
  };
  InstructionEvaluator.prototype.j_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().j);
  };
  InstructionEvaluator.prototype.jr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().jr);
  };
  InstructionEvaluator.prototype.jalr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().jalr);
  };
  InstructionEvaluator.prototype.jal_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().jal);
  };
  InstructionEvaluator.prototype.bc1f_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bc1f);
  };
  InstructionEvaluator.prototype.bc1t_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bc1t);
  };
  InstructionEvaluator.prototype.bc1fl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bc1fl);
  };
  InstructionEvaluator.prototype.bc1tl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bc1tl);
  };
  InstructionEvaluator.prototype.lb_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lb);
  };
  InstructionEvaluator.prototype.lh_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lh);
  };
  InstructionEvaluator.prototype.lw_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lw);
  };
  InstructionEvaluator.prototype.lwl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lwl);
  };
  InstructionEvaluator.prototype.lwr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lwr);
  };
  InstructionEvaluator.prototype.lbu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lbu);
  };
  InstructionEvaluator.prototype.lhu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lhu);
  };
  InstructionEvaluator.prototype.sb_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sb);
  };
  InstructionEvaluator.prototype.sh_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sh);
  };
  InstructionEvaluator.prototype.sw_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sw);
  };
  InstructionEvaluator.prototype.swl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().swl);
  };
  InstructionEvaluator.prototype.swr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().swr);
  };
  InstructionEvaluator.prototype.ll_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ll);
  };
  InstructionEvaluator.prototype.sc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sc);
  };
  InstructionEvaluator.prototype.lwc1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lwc1);
  };
  InstructionEvaluator.prototype.swc1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().swc1);
  };
  InstructionEvaluator.prototype.add_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().add_s);
  };
  InstructionEvaluator.prototype.sub_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sub_s);
  };
  InstructionEvaluator.prototype.mul_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mul_s);
  };
  InstructionEvaluator.prototype.div_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().div_s);
  };
  InstructionEvaluator.prototype.sqrt_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sqrt_s);
  };
  InstructionEvaluator.prototype.abs_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().abs_s);
  };
  InstructionEvaluator.prototype.mov_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mov_s);
  };
  InstructionEvaluator.prototype.neg_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().neg_s);
  };
  InstructionEvaluator.prototype.round_w_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().round_w_s);
  };
  InstructionEvaluator.prototype.trunc_w_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().trunc_w_s);
  };
  InstructionEvaluator.prototype.ceil_w_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ceil_w_s);
  };
  InstructionEvaluator.prototype.floor_w_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().floor_w_s);
  };
  InstructionEvaluator.prototype.cvt_s_w_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().cvt_s_w);
  };
  InstructionEvaluator.prototype.cvt_w_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().cvt_w_s);
  };
  InstructionEvaluator.prototype.mfc1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfc1);
  };
  InstructionEvaluator.prototype.mtc1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtc1);
  };
  InstructionEvaluator.prototype.cfc1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().cfc1);
  };
  InstructionEvaluator.prototype.ctc1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ctc1);
  };
  InstructionEvaluator.prototype.c_f_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_f_s);
  };
  InstructionEvaluator.prototype.c_un_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_un_s);
  };
  InstructionEvaluator.prototype.c_eq_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_eq_s);
  };
  InstructionEvaluator.prototype.c_ueq_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_ueq_s);
  };
  InstructionEvaluator.prototype.c_olt_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_olt_s);
  };
  InstructionEvaluator.prototype.c_ult_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_ult_s);
  };
  InstructionEvaluator.prototype.c_ole_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_ole_s);
  };
  InstructionEvaluator.prototype.c_ule_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_ule_s);
  };
  InstructionEvaluator.prototype.c_sf_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_sf_s);
  };
  InstructionEvaluator.prototype.c_ngle_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_ngle_s);
  };
  InstructionEvaluator.prototype.c_seq_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_seq_s);
  };
  InstructionEvaluator.prototype.c_ngl_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_ngl_s);
  };
  InstructionEvaluator.prototype.c_lt_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_lt_s);
  };
  InstructionEvaluator.prototype.c_nge_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_nge_s);
  };
  InstructionEvaluator.prototype.c_le_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_le_s);
  };
  InstructionEvaluator.prototype.c_ngt_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_ngt_s);
  };
  InstructionEvaluator.prototype.syscall_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().syscall);
  };
  InstructionEvaluator.prototype.cache_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().cache);
  };
  InstructionEvaluator.prototype.sync_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sync);
  };
  InstructionEvaluator.prototype._break_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance()._break);
  };
  InstructionEvaluator.prototype.dbreak_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().dbreak);
  };
  InstructionEvaluator.prototype.halt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().halt);
  };
  InstructionEvaluator.prototype.dret_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().dret);
  };
  InstructionEvaluator.prototype.eret_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().eret);
  };
  InstructionEvaluator.prototype.mfic_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfic);
  };
  InstructionEvaluator.prototype.mtic_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtic);
  };
  InstructionEvaluator.prototype.mfdr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfdr);
  };
  InstructionEvaluator.prototype.mtdr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtdr);
  };
  InstructionEvaluator.prototype.cfc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().cfc0);
  };
  InstructionEvaluator.prototype.ctc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ctc0);
  };
  InstructionEvaluator.prototype.mfc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfc0);
  };
  InstructionEvaluator.prototype.mtc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtc0);
  };
  InstructionEvaluator.prototype.mfv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfv);
  };
  InstructionEvaluator.prototype.mfvc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfvc);
  };
  InstructionEvaluator.prototype.mtv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtv);
  };
  InstructionEvaluator.prototype.mtvc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtvc);
  };
  InstructionEvaluator.prototype.lv_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lv_s);
  };
  InstructionEvaluator.prototype.lv_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lv_q);
  };
  InstructionEvaluator.prototype.lvl_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lvl_q);
  };
  InstructionEvaluator.prototype.lvr_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lvr_q);
  };
  InstructionEvaluator.prototype.sv_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sv_q);
  };
  InstructionEvaluator.prototype.vdot_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vdot);
  };
  InstructionEvaluator.prototype.vscl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vscl);
  };
  InstructionEvaluator.prototype.vsge_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsge);
  };
  InstructionEvaluator.prototype.vslt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vslt);
  };
  InstructionEvaluator.prototype.vrot_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrot);
  };
  InstructionEvaluator.prototype.vzero_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vzero);
  };
  InstructionEvaluator.prototype.vone_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vone);
  };
  InstructionEvaluator.prototype.vmov_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmov);
  };
  InstructionEvaluator.prototype.vabs_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vabs);
  };
  InstructionEvaluator.prototype.vneg_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vneg);
  };
  InstructionEvaluator.prototype.vocp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vocp);
  };
  InstructionEvaluator.prototype.vsgn_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsgn);
  };
  InstructionEvaluator.prototype.vrcp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrcp);
  };
  InstructionEvaluator.prototype.vrsq_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrsq);
  };
  InstructionEvaluator.prototype.vsin_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsin);
  };
  InstructionEvaluator.prototype.vcos_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcos);
  };
  InstructionEvaluator.prototype.vexp2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vexp2);
  };
  InstructionEvaluator.prototype.vlog2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vlog2);
  };
  InstructionEvaluator.prototype.vsqrt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsqrt);
  };
  InstructionEvaluator.prototype.vasin_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vasin);
  };
  InstructionEvaluator.prototype.vnrcp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vnrcp);
  };
  InstructionEvaluator.prototype.vnsin_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vnsin);
  };
  InstructionEvaluator.prototype.vrexp2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrexp2);
  };
  InstructionEvaluator.prototype.vsat0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsat0);
  };
  InstructionEvaluator.prototype.vsat1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsat1);
  };
  InstructionEvaluator.prototype.vcst_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcst);
  };
  InstructionEvaluator.prototype.vmmul_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmmul);
  };
  InstructionEvaluator.prototype.vhdp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vhdp);
  };
  InstructionEvaluator.prototype.vcrs_t_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcrs_t);
  };
  InstructionEvaluator.prototype.vcrsp_t_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcrsp_t);
  };
  InstructionEvaluator.prototype.vi2c_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2c);
  };
  InstructionEvaluator.prototype.vi2uc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2uc);
  };
  InstructionEvaluator.prototype.vtfm2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vtfm2);
  };
  InstructionEvaluator.prototype.vtfm3_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vtfm3);
  };
  InstructionEvaluator.prototype.vtfm4_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vtfm4);
  };
  InstructionEvaluator.prototype.vhtfm2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vhtfm2);
  };
  InstructionEvaluator.prototype.vhtfm3_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vhtfm3);
  };
  InstructionEvaluator.prototype.vhtfm4_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vhtfm4);
  };
  InstructionEvaluator.prototype.vsrt3_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsrt3);
  };
  InstructionEvaluator.prototype.vfad_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vfad);
  };
  InstructionEvaluator.prototype.vmin_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmin);
  };
  InstructionEvaluator.prototype.vmax_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmax);
  };
  InstructionEvaluator.prototype.vadd_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vadd);
  };
  InstructionEvaluator.prototype.vsub_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsub);
  };
  InstructionEvaluator.prototype.vdiv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vdiv);
  };
  InstructionEvaluator.prototype.vmul_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmul);
  };
  InstructionEvaluator.prototype.vidt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vidt);
  };
  InstructionEvaluator.prototype.vmidt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmidt);
  };
  InstructionEvaluator.prototype.viim_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().viim);
  };
  InstructionEvaluator.prototype.vmmov_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmmov);
  };
  InstructionEvaluator.prototype.vmzero_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmzero);
  };
  InstructionEvaluator.prototype.vmone_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmone);
  };
  InstructionEvaluator.prototype.vnop_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vnop);
  };
  InstructionEvaluator.prototype.vsync_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsync);
  };
  InstructionEvaluator.prototype.vflush_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vflush);
  };
  InstructionEvaluator.prototype.vpfxd_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vpfxd);
  };
  InstructionEvaluator.prototype.vpfxs_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vpfxs);
  };
  InstructionEvaluator.prototype.vpfxt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vpfxt);
  };
  InstructionEvaluator.prototype.vdet_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vdet);
  };
  InstructionEvaluator.prototype.vrnds_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrnds);
  };
  InstructionEvaluator.prototype.vrndi_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrndi);
  };
  InstructionEvaluator.prototype.vrndf1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrndf1);
  };
  InstructionEvaluator.prototype.vrndf2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrndf2);
  };
  InstructionEvaluator.prototype.vcmp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcmp);
  };
  InstructionEvaluator.prototype.vcmovf_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcmovf);
  };
  InstructionEvaluator.prototype.vcmovt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcmovt);
  };
  InstructionEvaluator.prototype.vavg_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vavg);
  };
  InstructionEvaluator.prototype.vf2id_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2id);
  };
  InstructionEvaluator.prototype.vf2in_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2in);
  };
  InstructionEvaluator.prototype.vf2iu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2iu);
  };
  InstructionEvaluator.prototype.vf2iz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2iz);
  };
  InstructionEvaluator.prototype.vi2f_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2f);
  };
  InstructionEvaluator.prototype.vscmp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vscmp);
  };
  InstructionEvaluator.prototype.vmscl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmscl);
  };
  InstructionEvaluator.prototype.vt4444_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vt4444_q);
  };
  InstructionEvaluator.prototype.vt5551_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vt5551_q);
  };
  InstructionEvaluator.prototype.vt5650_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vt5650_q);
  };
  InstructionEvaluator.prototype.vmfvc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmfvc);
  };
  InstructionEvaluator.prototype.vmtvc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmtvc);
  };
  InstructionEvaluator.prototype.mfvme_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfvme);
  };
  InstructionEvaluator.prototype.mtvme_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtvme);
  };
  InstructionEvaluator.prototype.sv_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sv_s);
  };
  InstructionEvaluator.prototype.vfim_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vfim);
  };
  InstructionEvaluator.prototype.svl_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().svl_q);
  };
  InstructionEvaluator.prototype.svr_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().svr_q);
  };
  InstructionEvaluator.prototype.vbfy1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vbfy1);
  };
  InstructionEvaluator.prototype.vbfy2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vbfy2);
  };
  InstructionEvaluator.prototype.vf2h_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2h);
  };
  InstructionEvaluator.prototype.vh2f_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vh2f);
  };
  InstructionEvaluator.prototype.vi2s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2s);
  };
  InstructionEvaluator.prototype.vi2us_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2us);
  };
  InstructionEvaluator.prototype.vlgb_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vlgb);
  };
  InstructionEvaluator.prototype.vqmul_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vqmul);
  };
  InstructionEvaluator.prototype.vs2i_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vs2i);
  };
  InstructionEvaluator.prototype.vc2i_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vc2i);
  };
  InstructionEvaluator.prototype.vuc2i_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vuc2i);
  };
  InstructionEvaluator.prototype.vsbn_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsbn);
  };
  InstructionEvaluator.prototype.vsbz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsbz);
  };
  InstructionEvaluator.prototype.vsocp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsocp);
  };
  InstructionEvaluator.prototype.vsrt1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsrt1);
  };
  InstructionEvaluator.prototype.vsrt2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsrt2);
  };
  InstructionEvaluator.prototype.vsrt4_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsrt4);
  };
  InstructionEvaluator.prototype.vus2i_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vus2i);
  };
  InstructionEvaluator.prototype.vwbn_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vwbn);
  };
  InstructionEvaluator.prototype.bvf_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvf);
  };
  InstructionEvaluator.prototype.bvt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvt);
  };
  InstructionEvaluator.prototype.bvfl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvfl);
  };
  InstructionEvaluator.prototype.bvtl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvtl);
  };
  InstructionEvaluator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InstructionEvaluator',
    interfaces: [InstructionDecoder]
  };
  function InstructionOpcodeDecoder() {
    InstructionOpcodeDecoder_instance = this;
    this.evaluator_0 = new InstructionOpcodeDecoder$ResultInstructionEvaluator();
    this.dispatcher_0 = new InstructionDispatcher(this.evaluator_0);
  }
  function InstructionOpcodeDecoder$Result(result) {
    if (result === void 0)
      result = Instructions_getInstance().add;
    this.result = result;
  }
  InstructionOpcodeDecoder$Result.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Result',
    interfaces: []
  };
  InstructionOpcodeDecoder$Result.prototype.component1 = function () {
    return this.result;
  };
  InstructionOpcodeDecoder$Result.prototype.copy_9b8q6v$ = function (result) {
    return new InstructionOpcodeDecoder$Result(result === void 0 ? this.result : result);
  };
  InstructionOpcodeDecoder$Result.prototype.toString = function () {
    return 'Result(result=' + Kotlin.toString(this.result) + ')';
  };
  InstructionOpcodeDecoder$Result.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.result) | 0;
    return result;
  };
  InstructionOpcodeDecoder$Result.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.result, other.result))));
  };
  function InstructionOpcodeDecoder$ResultInstructionEvaluator() {
    InstructionEvaluator.call(this);
  }
  InstructionOpcodeDecoder$ResultInstructionEvaluator.prototype.unimplemented_1wp5la$ = function (s, i) {
    s.result = i;
  };
  InstructionOpcodeDecoder$ResultInstructionEvaluator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ResultInstructionEvaluator',
    interfaces: [InstructionEvaluator]
  };
  InstructionOpcodeDecoder.prototype.invoke_za3lpa$ = function (i) {
    var $receiver = new InstructionOpcodeDecoder$Result();
    this.dispatcher_0.dispatch_8olpll$($receiver, 0, i);
    return $receiver.result;
  };
  InstructionOpcodeDecoder.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'InstructionOpcodeDecoder',
    interfaces: []
  };
  var InstructionOpcodeDecoder_instance = null;
  function InstructionOpcodeDecoder_getInstance() {
    if (InstructionOpcodeDecoder_instance === null) {
      new InstructionOpcodeDecoder();
    }
    return InstructionOpcodeDecoder_instance;
  }
  var collectionSizeOrDefault = Kotlin.kotlin.collections.collectionSizeOrDefault_ba2ldo$;
  function Instructions() {
    Instructions_instance = this;
    this.add = ID('add', VM('000000:rs:rt:rd:00000:100000'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.addu = ID('addu', VM('000000:rs:rt:rd:00000:100001'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.addi = ID('addi', VM('001000:rs:rt:imm16'), '%t, %s, %i', ADDR_TYPE_NONE, 0);
    this.addiu = ID('addiu', VM('001001:rs:rt:imm16'), '%t, %s, %i', ADDR_TYPE_NONE, 0);
    this.sub = ID('sub', VM('000000:rs:rt:rd:00000:100010'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.subu = ID('subu', VM('000000:rs:rt:rd:00000:100011'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.and = ID('and', VM('000000:rs:rt:rd:00000:100100'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.andi = ID('andi', VM('001100:rs:rt:imm16'), '%t, %s, %I', ADDR_TYPE_NONE, 0);
    this.nor = ID('nor', VM('000000:rs:rt:rd:00000:100111'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.or = ID('or', VM('000000:rs:rt:rd:00000:100101'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.ori = ID('ori', VM('001101:rs:rt:imm16'), '%t, %s, %I', ADDR_TYPE_NONE, 0);
    this.xor = ID('xor', VM('000000:rs:rt:rd:00000:100110'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.xori = ID('xori', VM('001110:rs:rt:imm16'), '%t, %s, %I', ADDR_TYPE_NONE, 0);
    this.sll = ID('sll', VM('000000:00000:rt:rd:sa:000000'), '%d, %t, %a', ADDR_TYPE_NONE, 0);
    this.sllv = ID('sllv', VM('000000:rs:rt:rd:00000:000100'), '%d, %t, %s', ADDR_TYPE_NONE, 0);
    this.sra = ID('sra', VM('000000:00000:rt:rd:sa:000011'), '%d, %t, %a', ADDR_TYPE_NONE, 0);
    this.srav = ID('srav', VM('000000:rs:rt:rd:00000:000111'), '%d, %t, %s', ADDR_TYPE_NONE, 0);
    this.srl = ID('srl', VM('000000:00000:rt:rd:sa:000010'), '%d, %t, %a', ADDR_TYPE_NONE, 0);
    this.srlv = ID('srlv', VM('000000:rs:rt:rd:00000:000110'), '%d, %t, %s', ADDR_TYPE_NONE, 0);
    this.rotr = ID('rotr', VM('000000:00001:rt:rd:sa:000010'), '%d, %t, %a', ADDR_TYPE_NONE, 0);
    this.rotrv = ID('rotrv', VM('000000:rs:rt:rd:00001:000110'), '%d, %t, %s', ADDR_TYPE_NONE, 0);
    this.slt = ID('slt', VM('000000:rs:rt:rd:00000:101010'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.slti = ID('slti', VM('001010:rs:rt:imm16'), '%t, %s, %i', ADDR_TYPE_NONE, 0);
    this.sltu = ID('sltu', VM('000000:rs:rt:rd:00000:101011'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.sltiu = ID('sltiu', VM('001011:rs:rt:imm16'), '%t, %s, %i', ADDR_TYPE_NONE, 0);
    this.lui = ID('lui', VM('001111:00000:rt:imm16'), '%t, %I', ADDR_TYPE_NONE, 0);
    this.seb = ID('seb', VM('011111:00000:rt:rd:10000:100000'), '%d, %t', ADDR_TYPE_NONE, 0);
    this.seh = ID('seh', VM('011111:00000:rt:rd:11000:100000'), '%d, %t', ADDR_TYPE_NONE, 0);
    this.bitrev = ID('bitrev', VM('011111:00000:rt:rd:10100:100000'), '%d, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.max = ID('max', VM('000000:rs:rt:rd:00000:101100'), '%d, %s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.min = ID('min', VM('000000:rs:rt:rd:00000:101101'), '%d, %s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.div = ID('div', VM('000000:rs:rt:00000:00000:011010'), '%s, %t', ADDR_TYPE_NONE, 0);
    this.divu = ID('divu', VM('000000:rs:rt:00000:00000:011011'), '%s, %t', ADDR_TYPE_NONE, 0);
    this.mult = ID('mult', VM('000000:rs:rt:00000:00000:011000'), '%s, %t', ADDR_TYPE_NONE, 0);
    this.multu = ID('multu', VM('000000:rs:rt:00000:00000:011001'), '%s, %t', ADDR_TYPE_NONE, 0);
    this.madd = ID('madd', VM('000000:rs:rt:00000:00000:011100'), '%s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.maddu = ID('maddu', VM('000000:rs:rt:00000:00000:011101'), '%s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.msub = ID('msub', VM('000000:rs:rt:00000:00000:101110'), '%s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.msubu = ID('msubu', VM('000000:rs:rt:00000:00000:101111'), '%s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mfhi = ID('mfhi', VM('000000:00000:00000:rd:00000:010000'), '%d', ADDR_TYPE_NONE, 0);
    this.mflo = ID('mflo', VM('000000:00000:00000:rd:00000:010010'), '%d', ADDR_TYPE_NONE, 0);
    this.mthi = ID('mthi', VM('000000:rs:00000:00000:00000:010001'), '%s', ADDR_TYPE_NONE, 0);
    this.mtlo = ID('mtlo', VM('000000:rs:00000:00000:00000:010011'), '%s', ADDR_TYPE_NONE, 0);
    this.movz = ID('movz', VM('000000:rs:rt:rd:00000:001010'), '%d, %s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.movn = ID('movn', VM('000000:rs:rt:rd:00000:001011'), '%d, %s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.ext = ID('ext', VM('011111:rs:rt:msb:lsb:000000'), '%t, %s, %a, %ne', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.ins = ID('ins', VM('011111:rs:rt:msb:lsb:000100'), '%t, %s, %a, %ni', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.clz = ID('clz', VM('000000:rs:00000:rd:00000:010110'), '%d, %s', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.clo = ID('clo', VM('000000:rs:00000:rd:00000:010111'), '%d, %s', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.wsbh = ID('wsbh', VM('011111:00000:rt:rd:00010:100000'), '%d, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.wsbw = ID('wsbw', VM('011111:00000:rt:rd:00011:100000'), '%d, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.beq = ID('beq', VM('000100:rs:rt:imm16'), '%s, %t, %O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.beql = ID('beql', VM('010100:rs:rt:imm16'), '%s, %t, %O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.bgez = ID('bgez', VM('000001:rs:00001:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.bgezl = ID('bgezl', VM('000001:rs:00011:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.bgezal = ID('bgezal', VM('000001:rs:10001:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_JAL);
    this.bgezall = ID('bgezall', VM('000001:rs:10011:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_LIKELY | INSTR_TYPE_JAL);
    this.bltz = ID('bltz', VM('000001:rs:00000:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.bltzl = ID('bltzl', VM('000001:rs:00010:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.bltzal = ID('bltzal', VM('000001:rs:10000:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_JAL);
    this.bltzall = ID('bltzall', VM('000001:rs:10010:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_LIKELY | INSTR_TYPE_JAL);
    this.blez = ID('blez', VM('000110:rs:00000:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.blezl = ID('blezl', VM('010110:rs:00000:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.bgtz = ID('bgtz', VM('000111:rs:00000:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.bgtzl = ID('bgtzl', VM('010111:rs:00000:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.bne = ID('bne', VM('000101:rs:rt:imm16'), '%s, %t, %O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.bnel = ID('bnel', VM('010101:rs:rt:imm16'), '%s, %t, %O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.j = ID('j', VM('000010:imm26'), '%j', ADDR_TYPE_26, INSTR_TYPE_JUMP);
    this.jr = ID('jr', VM('000000:rs:00000:00000:00000:001000'), '%J', ADDR_TYPE_REG, INSTR_TYPE_JUMP);
    this.jalr = ID('jalr', VM('000000:rs:00000:rd:00000:001001'), '%J, %d', ADDR_TYPE_REG, INSTR_TYPE_JAL);
    this.jal = ID('jal', VM('000011:imm26'), '%j', ADDR_TYPE_26, INSTR_TYPE_JAL);
    this.bc1f = ID('bc1f', VM('010001:01000:00000:imm16'), '%O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.bc1t = ID('bc1t', VM('010001:01000:00001:imm16'), '%O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.bc1fl = ID('bc1fl', VM('010001:01000:00010:imm16'), '%O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.bc1tl = ID('bc1tl', VM('010001:01000:00011:imm16'), '%O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.lb = ID('lb', VM('100000:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.lh = ID('lh', VM('100001:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.lw = ID('lw', VM('100011:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.lwl = ID('lwl', VM('100010:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.lwr = ID('lwr', VM('100110:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.lbu = ID('lbu', VM('100100:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.lhu = ID('lhu', VM('100101:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.sb = ID('sb', VM('101000:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.sh = ID('sh', VM('101001:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.sw = ID('sw', VM('101011:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.swl = ID('swl', VM('101010:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.swr = ID('swr', VM('101110:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.ll = ID('ll', VM('110000:rs:rt:imm16'), '%t, %O', ADDR_TYPE_NONE, 0);
    this.sc = ID('sc', VM('111000:rs:rt:imm16'), '%t, %O', ADDR_TYPE_NONE, 0);
    this.lwc1 = ID('lwc1', VM('110001:rs:ft:imm16'), '%T, %i(%s)', ADDR_TYPE_NONE, 0);
    this.swc1 = ID('swc1', VM('111001:rs:ft:imm16'), '%T, %i(%s)', ADDR_TYPE_NONE, 0);
    this.add_s = ID('add.s', VM('010001:10000:ft:fs:fd:000000'), '%D, %S, %T', ADDR_TYPE_NONE, 0);
    this.sub_s = ID('sub.s', VM('010001:10000:ft:fs:fd:000001'), '%D, %S, %T', ADDR_TYPE_NONE, 0);
    this.mul_s = ID('mul.s', VM('010001:10000:ft:fs:fd:000010'), '%D, %S, %T', ADDR_TYPE_NONE, 0);
    this.div_s = ID('div.s', VM('010001:10000:ft:fs:fd:000011'), '%D, %S, %T', ADDR_TYPE_NONE, 0);
    this.sqrt_s = ID('sqrt.s', VM('010001:10000:00000:fs:fd:000100'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.abs_s = ID('abs.s', VM('010001:10000:00000:fs:fd:000101'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.mov_s = ID('mov.s', VM('010001:10000:00000:fs:fd:000110'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.neg_s = ID('neg.s', VM('010001:10000:00000:fs:fd:000111'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.round_w_s = ID('round.w.s', VM('010001:10000:00000:fs:fd:001100'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.trunc_w_s = ID('trunc.w.s', VM('010001:10000:00000:fs:fd:001101'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.ceil_w_s = ID('ceil.w.s', VM('010001:10000:00000:fs:fd:001110'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.floor_w_s = ID('floor.w.s', VM('010001:10000:00000:fs:fd:001111'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.cvt_s_w = ID('cvt.s.w', VM('010001:10100:00000:fs:fd:100000'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.cvt_w_s = ID('cvt.w.s', VM('010001:10000:00000:fs:fd:100100'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.mfc1 = ID('mfc1', VM('010001:00000:rt:c1dr:00000:000000'), '%t, %S', ADDR_TYPE_NONE, 0);
    this.mtc1 = ID('mtc1', VM('010001:00100:rt:c1dr:00000:000000'), '%t, %S', ADDR_TYPE_NONE, 0);
    this.cfc1 = ID('cfc1', VM('010001:00010:rt:c1cr:00000:000000'), '%t, %p', ADDR_TYPE_NONE, 0);
    this.ctc1 = ID('ctc1', VM('010001:00110:rt:c1cr:00000:000000'), '%t, %p', ADDR_TYPE_NONE, 0);
    this.c_f_s = ID('c.f.s', VM('010001:10000:ft:fs:00000:11:0000'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_un_s = ID('c.un.s', VM('010001:10000:ft:fs:00000:11:0001'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_eq_s = ID('c.eq.s', VM('010001:10000:ft:fs:00000:11:0010'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_ueq_s = ID('c.ueq.s', VM('010001:10000:ft:fs:00000:11:0011'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_olt_s = ID('c.olt.s', VM('010001:10000:ft:fs:00000:11:0100'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_ult_s = ID('c.ult.s', VM('010001:10000:ft:fs:00000:11:0101'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_ole_s = ID('c.ole.s', VM('010001:10000:ft:fs:00000:11:0110'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_ule_s = ID('c.ule.s', VM('010001:10000:ft:fs:00000:11:0111'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_sf_s = ID('c.sf.s', VM('010001:10000:ft:fs:00000:11:1000'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_ngle_s = ID('c.ngle.s', VM('010001:10000:ft:fs:00000:11:1001'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_seq_s = ID('c.seq.s', VM('010001:10000:ft:fs:00000:11:1010'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_ngl_s = ID('c.ngl.s', VM('010001:10000:ft:fs:00000:11:1011'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_lt_s = ID('c.lt.s', VM('010001:10000:ft:fs:00000:11:1100'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_nge_s = ID('c.nge.s', VM('010001:10000:ft:fs:00000:11:1101'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_le_s = ID('c.le.s', VM('010001:10000:ft:fs:00000:11:1110'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_ngt_s = ID('c.ngt.s', VM('010001:10000:ft:fs:00000:11:1111'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.syscall = ID('syscall', VM('000000:imm20:001100'), '%C', ADDR_TYPE_NONE, INSTR_TYPE_SYSCALL);
    this.cache = ID('cache', VM('101111:rs:-----:imm16'), '%k, %o', ADDR_TYPE_NONE, 0);
    this.sync = ID('sync', VM('000000:00000:00000:00000:00000:001111'), '', ADDR_TYPE_NONE, 0);
    this._break = ID('break', VM('000000:imm20:001101'), '%c', ADDR_TYPE_NONE, INSTR_TYPE_BREAK);
    this.dbreak = ID('dbreak', VM('011100:00000:00000:00000:00000:111111'), '', ADDR_TYPE_NONE, INSTR_TYPE_PSP | INSTR_TYPE_BREAK);
    this.halt = ID('halt', VM('011100:00000:00000:00000:00000:000000'), '', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.dret = ID('dret', VM('011100:00000:00000:00000:00000:111110'), '', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.eret = ID('eret', VM('010000:10000:00000:00000:00000:011000'), '', ADDR_TYPE_NONE, 0);
    this.mfic = ID('mfic', VM('011100:rt:00000:00000:00000:100100'), '%t, %p', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mtic = ID('mtic', VM('011100:rt:00000:00000:00000:100110'), '%t, %p', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mfdr = ID('mfdr', VM('011100:00000:----------:00000:111101'), '%t, %r', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mtdr = ID('mtdr', VM('011100:00100:----------:00000:111101'), '%t, %r', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.cfc0 = ID('cfc0', VM('010000:00010:----------:00000:000000'), '%t, %p', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.ctc0 = ID('ctc0', VM('010000:00110:----------:00000:000000'), '%t, %p', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mfc0 = ID('mfc0', VM('010000:00000:----------:00000:000000'), '%t, %0', ADDR_TYPE_NONE, 0);
    this.mtc0 = ID('mtc0', VM('010000:00100:----------:00000:000000'), '%t, %0', ADDR_TYPE_NONE, 0);
    this.mfv = ID('mfv', VM('010010:00:011:rt:0:0000000:0:vd'), '%t, %zs', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mfvc = ID('mfvc', VM('010010:00:011:rt:0:0000000:1:vd'), '%t, %2d', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mtv = ID('mtv', VM('010010:00:111:rt:0:0000000:0:vd'), '%t, %zs', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mtvc = ID('mtvc', VM('010010:00:111:rt:0:0000000:1:vd'), '%t, %2d', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.lv_s = ID('lv.s', VM('110010:rs:vt5:imm14:vt2'), '%Xs, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.lv_q = ID('lv.q', VM('110110:rs:vt5:imm14:0:vt1'), '%Xq, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.lvl_q = ID('lvl.q', VM('110101:rs:vt5:imm14:0:vt1'), '%Xq, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.lvr_q = ID('lvr.q', VM('110101:rs:vt5:imm14:1:vt1'), '%Xq, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.sv_q = ID('sv.q', VM('111110:rs:vt5:imm14:0:vt1'), '%Xq, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vdot = ID('vdot', VM('011001:001:vt:two:vs:one:vd'), '%zs, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vscl = ID('vscl', VM('011001:010:vt:two:vs:one:vd'), '%zp, %yp, %xs', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsge = ID('vsge', VM('011011:110:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vslt = ID('vslt', VM('011011:111:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrot = ID('vrot', VM('111100:111:01:imm5:two:vs:one:vd'), '%zp, %ys, %vr', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vzero = ID('vzero', VM('110100:00:000:0:0110:two:0000000:one:vd'), '%zp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vone = ID('vone', VM('110100:00:000:0:0111:two:0000000:one:vd'), '%zp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmov = ID('vmov', VM('110100:00:000:0:0000:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vabs = ID('vabs', VM('110100:00:000:0:0001:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vneg = ID('vneg', VM('110100:00:000:0:0010:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vocp = ID('vocp', VM('110100:00:010:0:0100:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsgn = ID('vsgn', VM('110100:00:010:0:1010:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrcp = ID('vrcp', VM('110100:00:000:1:0000:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrsq = ID('vrsq', VM('110100:00:000:1:0001:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsin = ID('vsin', VM('110100:00:000:1:0010:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vcos = ID('vcos', VM('110100:00:000:1:0011:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vexp2 = ID('vexp2', VM('110100:00:000:1:0100:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vlog2 = ID('vlog2', VM('110100:00:000:1:0101:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsqrt = ID('vsqrt', VM('110100:00:000:1:0110:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vasin = ID('vasin', VM('110100:00:000:1:0111:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vnrcp = ID('vnrcp', VM('110100:00:000:1:1000:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vnsin = ID('vnsin', VM('110100:00:000:1:1010:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrexp2 = ID('vrexp2', VM('110100:00:000:1:1100:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsat0 = ID('vsat0', VM('110100:00:000:0:0100:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsat1 = ID('vsat1', VM('110100:00:000:0:0101:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vcst = ID('vcst', VM('110100:00:011:imm5:two:0000000:one:vd'), '%zp, %vk', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmmul = ID('vmmul', VM('111100:000:vt:two:vs:one:vd'), '%zm, %tym, %xm', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vhdp = ID('vhdp', VM('011001:100:vt:two:vs:one:vd'), '%zs, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vcrs_t = ID('vcrs.t', VM('011001:101:vt:1:vs:0:vd'), '%zt, %yt, %xt', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vcrsp_t = ID('vcrsp.t', VM('111100:101:vt:1:vs:0:vd'), '%zt, %yt, %xt', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vi2c = ID('vi2c', VM('110100:00:001:11:101:two:vs:one:vd'), '%zs, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vi2uc = ID('vi2uc', VM('110100:00:001:11:100:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vtfm2 = ID('vtfm2', VM('111100:001:vt:0:vs:1:vd'), '%zp, %ym, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vtfm3 = ID('vtfm3', VM('111100:010:vt:1:vs:0:vd'), '%zt, %yn, %xt', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vtfm4 = ID('vtfm4', VM('111100:011:vt:1:vs:1:vd'), '%zq, %yo, %xq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vhtfm2 = ID('vhtfm2', VM('111100:001:vt:0:vs:0:vd'), '%zp, %ym, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vhtfm3 = ID('vhtfm3', VM('111100:010:vt:0:vs:1:vd'), '%zt, %yn, %xt', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vhtfm4 = ID('vhtfm4', VM('111100:011:vt:1:vs:0:vd'), '%zq, %yo, %xq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsrt3 = ID('vsrt3', VM('110100:00:010:01000:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vfad = ID('vfad', VM('110100:00:010:00110:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmin = ID('vmin', VM('011011:010:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmax = ID('vmax', VM('011011:011:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vadd = ID('vadd', VM('011000:000:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsub = ID('vsub', VM('011000:001:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vdiv = ID('vdiv', VM('011000:111:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmul = ID('vmul', VM('011001:000:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vidt = ID('vidt', VM('110100:00:000:0:0011:two:0000000:one:vd'), '%zp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmidt = ID('vmidt', VM('111100:111:00:00011:two:0000000:one:vd'), '%zm', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.viim = ID('viim', VM('110111:11:0:vd:imm16'), '%xs, %vi', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmmov = ID('vmmov', VM('111100:111:00:00000:two:vs:one:vd'), '%zm, %ym', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmzero = ID('vmzero', VM('111100:111:00:00110:two:0000000:one:vd'), '%zm', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmone = ID('vmone', VM('111100:111:00:00111:two:0000000:one:vd'), '%zp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vnop = ID('vnop', VM('111111:1111111111:00000:00000000000'), '', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsync = ID('vsync', VM('111111:1111111111:00000:01100100000'), '', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vflush = ID('vflush', VM('111111:1111111111:00000:10000001101'), '', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vpfxd = ID('vpfxd', VM('110111:10:------------:mskw:mskz:msky:mskx:satw:satz:saty:satx'), '[%vp4, %vp5, %vp6, %vp7]', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vpfxs = ID('vpfxs', VM('110111:00:----:negw:negz:negy:negx:cstw:cstz:csty:cstx:absw:absz:absy:absx:swzw:swzz:swzy:swzx'), '[%vp0, %vp1, %vp2, %vp3]', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vpfxt = ID('vpfxt', VM('110111:01:----:negw:negz:negy:negx:cstw:cstz:csty:cstx:absw:absz:absy:absx:swzw:swzz:swzy:swzx'), '[%vp0, %vp1, %vp2, %vp3]', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vdet = ID('vdet', VM('011001:110:vt:two:vs:one:vd'), '%zs, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrnds = ID('vrnds', VM('110100:00:001:00:000:two:vs:one:0000000'), '%ys', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrndi = ID('vrndi', VM('110100:00:001:00:001:two:0000000:one:vd'), '%zp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrndf1 = ID('vrndf1', VM('110100:00:001:00:010:two:0000000:one:vd'), '%zp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrndf2 = ID('vrndf2', VM('110100:00:001:00:011:two:0000000:one:vd'), '%zp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vcmp = ID('vcmp', VM('011011:000:vt:two:vs:one:000:imm4'), '%Zn, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vcmovf = ID('vcmovf', VM('110100:10:101:01:imm3:two:vs:one:vd'), '%zp, %yp, %v3', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vcmovt = ID('vcmovt', VM('110100:10:101:00:imm3:two:vs:one:vd'), '%zp, %yp, %v3', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vavg = ID('vavg', VM('110100:00:010:00111:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vf2id = ID('vf2id', VM('110100:10:011:imm5:two:vs:one:vd'), '%zp, %yp, %v5', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vf2in = ID('vf2in', VM('110100:10:000:imm5:two:vs:one:vd'), '%zp, %yp, %v5', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vf2iu = ID('vf2iu', VM('110100:10:010:imm5:two:vs:one:vd'), '%zp, %yp, %v5', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vf2iz = ID('vf2iz', VM('110100:10:001:imm5:two:vs:one:vd'), '%zp, %yp, %v5', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vi2f = ID('vi2f', VM('110100:10:100:imm5:two:vs:one:vd'), '%zp, %yp, %v5', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vscmp = ID('vscmp', VM('011011:101:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmscl = ID('vmscl', VM('111100:100:vt:two:vs:one:vd'), '%zm, %ym, %xs', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vt4444_q = ID('vt4444.q', VM('110100:00:010:11001:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vt5551_q = ID('vt5551.q', VM('110100:00:010:11010:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vt5650_q = ID('vt5650.q', VM('110100:00:010:11011:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmfvc = ID('vmfvc', VM('110100:00:010:10000:1:imm7:0:vd'), '%zs, %2s', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmtvc = ID('vmtvc', VM('110100:00:010:10001:0:vs:1:imm7'), '%2d, %ys', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mfvme = ID('mfvme', VM('011010--------------------------'), '%t, %i', ADDR_TYPE_NONE, 0);
    this.mtvme = ID('mtvme', VM('101100--------------------------'), '%t, %i', ADDR_TYPE_NONE, 0);
    this.sv_s = ID('sv.s', VM('111010:rs:vt5:imm14:vt2'), '%Xs, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vfim = ID('vfim', VM('110111:11:1:vt:imm16'), '%xs, %vh', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.svl_q = ID('svl.q', VM('111101:rs:vt5:imm14:0:vt1'), '%Xq, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.svr_q = ID('svr.q', VM('111101:rs:vt5:imm14:1:vt1'), '%Xq, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vbfy1 = ID('vbfy1', VM('110100:00:010:00010:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vbfy2 = ID('vbfy2', VM('110100:00:010:00011:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vf2h = ID('vf2h', VM('110100:00:001:10:010:two:vs:one:vd'), '%zs, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vh2f = ID('vh2f', VM('110100:00:001:10:011:two:vs:one:vd'), '%zq, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vi2s = ID('vi2s', VM('110100:00:001:11:111:two:vs:one:vd'), '%zs, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vi2us = ID('vi2us', VM('110100:00:001:11:110:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vlgb = ID('vlgb', VM('110100:00:001:10:111:two:vs:one:vd'), '%zs, %ys', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vqmul = ID('vqmul', VM('111100:101:vt:1:vs:1:vd'), '%zq, %yq, %xq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vs2i = ID('vs2i', VM('110100:00:001:11:011:two:vs:one:vd'), '%zq, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vc2i = ID('vc2i', VM('110100:00:001:11:001:two:vs:one:vd'), '%zs, %ys, %xs', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vuc2i = ID('vuc2i', VM('110100:00:001:11:000:two:vs:one:vd'), '%zq, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsbn = ID('vsbn', VM('011000:010:vt:two:vs:one:vd'), '%zs, %ys, %xs', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsbz = ID('vsbz', VM('110100:00:001:10110:two:vs:one:vd'), '%zs, %ys', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsocp = ID('vsocp', VM('110100:00:010:00101:two:vs:one:vd'), '%zq, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsrt1 = ID('vsrt1', VM('110100:00:010:00000:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsrt2 = ID('vsrt2', VM('110100:00:010:00001:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsrt4 = ID('vsrt4', VM('110100:00:010:01001:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vus2i = ID('vus2i', VM('110100:00:001:11010:two:vs:one:vd'), '%zq, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vwbn = ID('vwbn', VM('110100:11:imm8:two:vs:one:vd'), '%zs, %xs, %I', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.bvf = ID('bvf', VM('010010:01:000:imm3:00:imm16'), '%Zc, %O', ADDR_TYPE_16, INSTR_TYPE_PSP | INSTR_TYPE_B);
    this.bvt = ID('bvt', VM('010010:01:000:imm3:01:imm16'), '%Zc, %O', ADDR_TYPE_16, INSTR_TYPE_PSP | INSTR_TYPE_B);
    this.bvfl = ID('bvfl', VM('010010:01:000:imm3:10:imm16'), '%Zc, %O', ADDR_TYPE_16, INSTR_TYPE_PSP | INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.bvtl = ID('bvtl', VM('010010:01:000:imm3:11:imm16'), '%Zc, %O', ADDR_TYPE_16, INSTR_TYPE_PSP | INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.instructions = listOf([this.add, this.addu, this.addi, this.addiu, this.sub, this.subu, this.and, this.andi, this.nor, this.or, this.ori, this.xor, this.xori, this.sll, this.sllv, this.sra, this.srav, this.srl, this.srlv, this.rotr, this.rotrv, this.slt, this.slti, this.sltu, this.sltiu, this.lui, this.seb, this.seh, this.bitrev, this.max, this.min, this.div, this.divu, this.mult, this.multu, this.madd, this.maddu, this.msub, this.msubu, this.mfhi, this.mflo, this.mthi, this.mtlo, this.movz, this.movn, this.ext, this.ins, this.clz, this.clo, this.wsbh, this.wsbw, this.beq, this.beql, this.bgez, this.bgezl, this.bgezal, this.bgezall, this.bltz, this.bltzl, this.bltzal, this.bltzall, this.blez, this.blezl, this.bgtz, this.bgtzl, this.bne, this.bnel, this.j, this.jr, this.jalr, this.jal, this.bc1f, this.bc1t, this.bc1fl, this.bc1tl, this.lb, this.lh, this.lw, this.lwl, this.lwr, this.lbu, this.lhu, this.sb, this.sh, this.sw, this.swl, this.swr, this.ll, this.sc, this.lwc1, this.swc1, this.add_s, this.sub_s, this.mul_s, this.div_s, this.sqrt_s, this.abs_s, this.mov_s, this.neg_s, this.round_w_s, this.trunc_w_s, this.ceil_w_s, this.floor_w_s, this.cvt_s_w, this.cvt_w_s, this.mfc1, this.mtc1, this.cfc1, this.ctc1, this.c_f_s, this.c_un_s, this.c_eq_s, this.c_ueq_s, this.c_olt_s, this.c_ult_s, this.c_ole_s, this.c_ule_s, this.c_sf_s, this.c_ngle_s, this.c_seq_s, this.c_ngl_s, this.c_lt_s, this.c_nge_s, this.c_le_s, this.c_ngt_s, this.syscall, this.cache, this.sync, this._break, this.dbreak, this.halt, this.dret, this.eret, this.mfic, this.mtic, this.mfdr, this.mtdr, this.cfc0, this.ctc0, this.mfc0, this.mtc0, this.mfv, this.mfvc, this.mtv, this.mtvc, this.lv_s, this.lv_q, this.lvl_q, this.lvr_q, this.sv_q, this.vdot, this.vscl, this.vsge, this.vslt, this.vrot, this.vzero, this.vone, this.vmov, this.vabs, this.vneg, this.vocp, this.vsgn, this.vrcp, this.vrsq, this.vsin, this.vcos, this.vexp2, this.vlog2, this.vsqrt, this.vasin, this.vnrcp, this.vnsin, this.vrexp2, this.vsat0, this.vsat1, this.vcst, this.vmmul, this.vhdp, this.vcrs_t, this.vcrsp_t, this.vi2c, this.vi2uc, this.vtfm2, this.vtfm3, this.vtfm4, this.vhtfm2, this.vhtfm3, this.vhtfm4, this.vsrt3, this.vfad, this.vmin, this.vmax, this.vadd, this.vsub, this.vdiv, this.vmul, this.vidt, this.vmidt, this.viim, this.vmmov, this.vmzero, this.vmone, this.vnop, this.vsync, this.vflush, this.vpfxd, this.vpfxs, this.vpfxt, this.vdet, this.vrnds, this.vrndi, this.vrndf1, this.vrndf2, this.vcmp, this.vcmovf, this.vcmovt, this.vavg, this.vf2id, this.vf2in, this.vf2iu, this.vf2iz, this.vi2f, this.vscmp, this.vmscl, this.vt4444_q, this.vt5551_q, this.vt5650_q, this.vmfvc, this.vmtvc, this.mfvme, this.mtvme, this.sv_s, this.vfim, this.svl_q, this.svr_q, this.vbfy1, this.vbfy2, this.vf2h, this.vh2f, this.vi2s, this.vi2us, this.vlgb, this.vqmul, this.vs2i, this.vc2i, this.vuc2i, this.vsbn, this.vsbz, this.vsocp, this.vsrt1, this.vsrt2, this.vsrt4, this.vus2i, this.vwbn, this.bvf, this.bvt, this.bvfl, this.bvtl]);
    var $receiver = this.instructions;
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(to(item.name, item));
    }
    this.instructionsByName = toMap(destination);
  }
  Instructions.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Instructions',
    interfaces: []
  };
  var Instructions_instance = null;
  function Instructions_getInstance() {
    if (Instructions_instance === null) {
      new Instructions();
    }
    return Instructions_instance;
  }
  var ADDR_TYPE_NONE;
  var ADDR_TYPE_REG;
  var ADDR_TYPE_16;
  var ADDR_TYPE_26;
  var INSTR_TYPE_PSP;
  var INSTR_TYPE_SYSCALL;
  var INSTR_TYPE_B;
  var INSTR_TYPE_LIKELY;
  var INSTR_TYPE_JAL;
  var INSTR_TYPE_JUMP;
  var INSTR_TYPE_BREAK;
  function VM(format) {
    return new ValueMask(format);
  }
  function ID(name, vm, format, addressType, instructionType) {
    return new InstructionType(name, vm, format, addressType, instructionType);
  }
  function ValueMask(format) {
    this.format = format;
    this.value = 0;
    this.mask = 0;
    var tmp$, tmp$_0, tmp$_1;
    var counts = mapOf_0([to('cstw', 1), to('cstz', 1), to('csty', 1), to('cstx', 1), to('absw', 1), to('absz', 1), to('absy', 1), to('absx', 1), to('mskw', 1), to('mskz', 1), to('msky', 1), to('mskx', 1), to('negw', 1), to('negz', 1), to('negy', 1), to('negx', 1), to('one', 1), to('two', 1), to('vt1', 1), to('vt2', 2), to('satw', 2), to('satz', 2), to('saty', 2), to('satx', 2), to('swzw', 2), to('swzz', 2), to('swzy', 2), to('swzx', 2), to('imm3', 3), to('imm4', 4), to('fcond', 4), to('c0dr', 5), to('c0cr', 5), to('c1dr', 5), to('c1cr', 5), to('imm5', 5), to('vt5', 5), to('rs', 5), to('rd', 5), to('rt', 5), to('sa', 5), to('lsb', 5), to('msb', 5), to('fs', 5), to('fd', 5), to('ft', 5), to('vs', 7), to('vt', 7), to('vd', 7), to('imm7', 7), to('imm8', 8), to('imm14', 14), to('imm16', 16), to('imm20', 20), to('imm26', 26)]);
    var value = 0;
    var mask = 0;
    tmp$ = split(this.format, Kotlin.charArrayOf(58)).iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      if (Regex('^[01\\-]+$').matches_6bul2c$(item)) {
        tmp$_0 = iterator(item);
        while (tmp$_0.hasNext()) {
          var c = unboxChar(tmp$_0.next());
          value = value << 1;
          mask = mask << 1;
          if (c === 48) {
            value = value | 0;
            mask = mask | 1;
          }
          if (c === 49) {
            value = value | 1;
            mask = mask | 1;
          }
          if (c === 45) {
            value = value | 0;
            mask = mask | 0;
          }
        }
      }
       else {
        tmp$_1 = counts.get_11rb$(item);
        if (tmp$_1 == null) {
          throw new Exception("Invalid item '" + item + "'");
        }
        var displacement = tmp$_1;
        value = value << displacement;
        mask = mask << displacement;
      }
    }
    this.value = value;
    this.mask = mask;
  }
  ValueMask.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ValueMask',
    interfaces: []
  };
  ValueMask.prototype.component1 = function () {
    return this.format;
  };
  ValueMask.prototype.copy_61zpoe$ = function (format) {
    return new ValueMask(format === void 0 ? this.format : format);
  };
  ValueMask.prototype.toString = function () {
    return 'ValueMask(format=' + Kotlin.toString(this.format) + ')';
  };
  ValueMask.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.format) | 0;
    return result;
  };
  ValueMask.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.format, other.format))));
  };
  function InstructionType(name, vm, format, addressType, instructionType) {
    this.name = name;
    this.vm = vm;
    this.format = format;
    this.addressType = addressType;
    this.instructionType = instructionType;
  }
  InstructionType.prototype.match_za3lpa$ = function (i32) {
    return (i32 & this.vm.mask) === (this.vm.value & this.vm.mask);
  };
  InstructionType.prototype.isInstructionType_0 = function (mask) {
    return (this.instructionType & mask) !== 0;
  };
  Object.defineProperty(InstructionType.prototype, 'isSyscall', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_SYSCALL);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isBreak', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_BREAK);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isBranch', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_B);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isCall', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_JAL);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isJump', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_JAL) || this.isInstructionType_0(INSTR_TYPE_JUMP);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isJumpNoLink', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_JUMP);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isJal', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_JAL);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isJumpOrBranch', {
    get: function () {
      return this.isBranch || this.isJump;
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isLikely', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_LIKELY);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isRegister', {
    get: function () {
      return this.addressType === ADDR_TYPE_REG;
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isFixedAddressJump', {
    get: function () {
      return this.isJumpOrBranch && !this.isRegister;
    }
  });
  Object.defineProperty(InstructionType.prototype, 'hasDelayedBranch', {
    get: function () {
      return this.isJumpOrBranch;
    }
  });
  InstructionType.prototype.toString = function () {
    return "InstructionType('" + this.name + "', " + format('%08X', [this.vm.value]) + ', ' + format('%08X', [this.vm.mask]) + ')';
  };
  InstructionType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InstructionType',
    interfaces: []
  };
  InstructionType.prototype.component1 = function () {
    return this.name;
  };
  InstructionType.prototype.component2 = function () {
    return this.vm;
  };
  InstructionType.prototype.component3 = function () {
    return this.format;
  };
  InstructionType.prototype.component4 = function () {
    return this.addressType;
  };
  InstructionType.prototype.component5 = function () {
    return this.instructionType;
  };
  InstructionType.prototype.copy_9bnh32$ = function (name, vm, format, addressType, instructionType) {
    return new InstructionType(name === void 0 ? this.name : name, vm === void 0 ? this.vm : vm, format === void 0 ? this.format : format, addressType === void 0 ? this.addressType : addressType, instructionType === void 0 ? this.instructionType : instructionType);
  };
  InstructionType.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.vm) | 0;
    result = result * 31 + Kotlin.hashCode(this.format) | 0;
    result = result * 31 + Kotlin.hashCode(this.addressType) | 0;
    result = result * 31 + Kotlin.hashCode(this.instructionType) | 0;
    return result;
  };
  InstructionType.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.vm, other.vm) && Kotlin.equals(this.format, other.format) && Kotlin.equals(this.addressType, other.addressType) && Kotlin.equals(this.instructionType, other.instructionType)))));
  };
  function kescape($receiver) {
    if (equals($receiver, 'break'))
      return '_' + $receiver;
    else
      return replace($receiver, 46, 95);
  }
  function Syscalls() {
  }
  Syscalls.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Syscalls',
    interfaces: []
  };
  function TraceSyscallHandler() {
  }
  TraceSyscallHandler.prototype.syscall_acv9wa$ = function (state, id) {
    println(format('%08X: Called syscall: ### %04X', [state.PC, id]));
  };
  TraceSyscallHandler.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TraceSyscallHandler',
    interfaces: [Syscalls]
  };
  function Disassembler() {
    Disassembler_instance = this;
    InstructionDecoder.call(this);
    this.PERCENT_REGEX_0 = Regex('%\\w+');
  }
  Disassembler.prototype.gprStr_za3lpa$ = function (i) {
    return 'r' + i;
  };
  Disassembler.prototype.fprStr_za3lpa$ = function (i) {
    return 'f' + i;
  };
  Disassembler.prototype.disasmMacro_vux9f0$ = function (pc, i) {
    if (i === 0)
      return 'nop';
    var op = InstructionOpcodeDecoder_getInstance().invoke_za3lpa$(i);
    return this.disasm_w87lk9$(op, pc, i);
  };
  Disassembler.prototype.disasm_vux9f0$ = function (pc, i) {
    return this.disasm_w87lk9$(InstructionOpcodeDecoder_getInstance().invoke_za3lpa$(i), pc, i);
  };
  var StringBuilder_init = Kotlin.kotlin.text.StringBuilder_init_za3lpa$;
  var throwNPE = Kotlin.throwNPE;
  Disassembler.prototype.disasm_w87lk9$ = function (op, pc, i) {
    var $receiver = op.format;
    var regex = this.PERCENT_REGEX_0;
    var replace_20wsma$result;
    replace_20wsma$break: do {
      var match = regex.find_905azu$($receiver);
      if (match == null) {
        replace_20wsma$result = $receiver.toString();
        break replace_20wsma$break;
      }
      var lastStart = 0;
      var length = $receiver.length;
      var sb = StringBuilder_init(length);
      do {
        var foundMatch = match != null ? match : throwNPE();
        sb.append_ezbsdh$($receiver, lastStart, foundMatch.range.start);
        var tmp$ = sb.append_gw00v9$;
        var transform$result;
        var type = foundMatch.groupValues.get_za3lpa$(0);
        if (equals(type, '%j')) {
          transform$result = format('0x%08X', [pc & (new Kotlin.Long(-268435456, 0)).toInt() | (extract(i, 0, 26) * 4 | 0)]);
        }
         else if (equals(type, '%J')) {
          transform$result = this.gprStr_za3lpa$(i >>> 21 & 31);
        }
         else if (equals(type, '%d')) {
          transform$result = this.gprStr_za3lpa$(i >>> 11 & 31);
        }
         else if (equals(type, '%s')) {
          transform$result = this.gprStr_za3lpa$(i >>> 21 & 31);
        }
         else if (equals(type, '%a')) {
          transform$result = (i >>> 6 & 31).toString();
        }
         else if (equals(type, '%O')) {
          transform$result = 'PC + ' + ((i & 65535) << 16 >> 16);
        }
         else if (equals(type, '%t')) {
          transform$result = this.gprStr_za3lpa$(i >>> 16 & 31);
        }
         else if (equals(type, '%C')) {
          transform$result = format('0x%04X', [extract(i, 6, 20)]);
        }
         else if (equals(type, '%I')) {
          transform$result = (i & 65535).toString();
        }
         else if (equals(type, '%i')) {
          transform$result = ((i & 65535) << 16 >> 16).toString();
        }
         else {
          transform$result = type;
        }
        tmp$.call(sb, transform$result);
        lastStart = foundMatch.range.endInclusive + 1 | 0;
        match = foundMatch.next();
      }
       while (lastStart < length && match != null);
      if (lastStart < length) {
        sb.append_ezbsdh$($receiver, lastStart, length);
      }
      replace_20wsma$result = sb.toString();
    }
     while (false);
    var params = replace_20wsma$result;
    return op.name + ' ' + params;
  };
  Disassembler.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Disassembler',
    interfaces: [InstructionDecoder]
  };
  var Disassembler_instance = null;
  function Disassembler_getInstance() {
    if (Disassembler_instance === null) {
      new Disassembler();
    }
    return Disassembler_instance;
  }
  function disasm($receiver, pc) {
    return Disassembler_getInstance().disasm_vux9f0$(pc, $receiver.lw_za3lpa$(pc));
  }
  function disasmMacro($receiver, pc) {
    try {
      return Disassembler_getInstance().disasmMacro_vux9f0$(pc, $receiver.lw_za3lpa$(pc));
    }
     catch (e) {
      if (Kotlin.isType(e, IndexOutOfBoundsException)) {
        return format('invalid(PC=0x%08X)', [pc]);
      }
       else
        throw e;
    }
  }
  function getPrintInstructionAt($receiver, address) {
    return get_hex(address) + ' : ' + disasmMacro($receiver, address);
  }
  function printInstructionAt($receiver, address) {
    lang.Console.error_s8jyv4$(getPrintInstructionAt($receiver, address));
  }
  function CpuInterpreter(cpu, trace) {
    if (trace === void 0)
      trace = false;
    this.cpu = cpu;
    this.trace = trace;
    this.dispatcher = new InstructionDispatcher(InstructionInterpreter_getInstance());
  }
  CpuInterpreter.prototype.steps_za3lpa$ = function (count) {
    var dispatcher = this.dispatcher;
    var cpu = this.cpu;
    var mem = cpu.mem;
    var trace = this.trace;
    var sPC = 0;
    try {
      for (var n = 0; n < count; n++) {
        sPC = cpu._PC;
        if (trace)
          this.tracePC_0();
        var IR = mem.lw_za3lpa$(sPC);
        cpu.IR = IR;
        dispatcher.dispatch_8olpll$(cpu, sPC, IR);
      }
    }
     catch (e) {
      if (Kotlin.isType(e, Throwable)) {
        if (!Kotlin.isType(e, CpuBreakException)) {
          lang.Console.error_s8jyv4$(format('There was an error at %08X: %s', [sPC, disasmMacro(cpu.mem, sPC)]));
        }
        throw e;
      }
       else
        throw e;
    }
  };
  CpuInterpreter.prototype.tracePC_0 = function () {
    println(format('%08X: %s', [this.cpu._PC, disasmMacro(this.cpu.mem, this.cpu._PC)]));
  };
  CpuInterpreter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CpuInterpreter',
    interfaces: []
  };
  function InstructionInterpreter() {
    InstructionInterpreter_instance = this;
    InstructionEvaluator.call(this);
    this.itemp = new Int32Array(2);
  }
  InstructionInterpreter.prototype.unimplemented_1wp5la$ = function (s, i) {
    throw new NotImplementedError_init('An operation is not implemented: ' + ('unimplemented: ' + i.name + ' : ' + toString(i) + (' at ' + format('%08X', [s._PC]))));
  };
  InstructionInterpreter.prototype.lui_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, (s.IR & 65535) << 16);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.movz_11rb$ = function (s) {
    if (s.getGpr_za3lpa$(s.IR >>> 16 & 31) === 0) {
      s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31));
    }
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.movn_11rb$ = function (s) {
    if (s.getGpr_za3lpa$(s.IR >>> 16 & 31) !== 0) {
      s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31));
    }
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.ext_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, extract(s.getGpr_za3lpa$(s.IR >>> 21 & 31), s.IR >>> 6 & 31, (s.IR >>> 11 & 31) + 1 | 0));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.ins_11rb$ = function (s) {
    var $receiver = s.IR;
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, insert(s.getGpr_za3lpa$(s.IR >>> 16 & 31), s.getGpr_za3lpa$(s.IR >>> 21 & 31), s.IR >>> 6 & 31, ($receiver >>> 11 & 31) - ($receiver >>> 6 & 31) + 1 | 0));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.clz_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, BitUtils_getInstance().clz_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.clo_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, BitUtils_getInstance().clo_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.seb_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, BitUtils_getInstance().seb_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.seh_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, BitUtils_getInstance().seh_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.wsbh_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, BitUtils_getInstance().wsbh_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.wsbw_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, BitUtils_getInstance().wsbw_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  var Math_0 = Math;
  InstructionInterpreter.prototype.max_11rb$ = function (s) {
    var tmp$ = s.getGpr_za3lpa$(s.IR >>> 21 & 31);
    var b = s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, Math_0.max(tmp$, b));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.min_11rb$ = function (s) {
    var tmp$ = s.getGpr_za3lpa$(s.IR >>> 21 & 31);
    var b = s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, Math_0.min(tmp$, b));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.add_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) + s.getGpr_za3lpa$(s.IR >>> 16 & 31) | 0);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.addu_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) + s.getGpr_za3lpa$(s.IR >>> 16 & 31) | 0);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.sub_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) - s.getGpr_za3lpa$(s.IR >>> 16 & 31) | 0);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.subu_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) - s.getGpr_za3lpa$(s.IR >>> 16 & 31) | 0);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.addi_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.addiu_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.div_11rb$ = function (s) {
    s.LO = s.getGpr_za3lpa$(s.IR >>> 21 & 31) / s.getGpr_za3lpa$(s.IR >>> 16 & 31) | 0;
    s.HI = s.getGpr_za3lpa$(s.IR >>> 21 & 31) % s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.divu_11rb$ = function (s) {
    s.LO = udiv(s.getGpr_za3lpa$(s.IR >>> 21 & 31), s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s.HI = urem(s.getGpr_za3lpa$(s.IR >>> 21 & 31), s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.mult_11rb$ = function (s) {
    imul32_64(s.getGpr_za3lpa$(s.IR >>> 21 & 31), s.getGpr_za3lpa$(s.IR >>> 16 & 31), this.itemp);
    s.LO = this.itemp[0];
    s.HI = this.itemp[1];
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.multu_11rb$ = function (s) {
    umul32_64(s.getGpr_za3lpa$(s.IR >>> 21 & 31), s.getGpr_za3lpa$(s.IR >>> 16 & 31), this.itemp);
    s.LO = this.itemp[0];
    s.HI = this.itemp[1];
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.madd_11rb$ = function (s) {
    s.HI_LO = s.HI_LO.add(Kotlin.Long.fromInt(s.getGpr_za3lpa$(s.IR >>> 21 & 31)).multiply(Kotlin.Long.fromInt(s.getGpr_za3lpa$(s.IR >>> 16 & 31))));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.maddu_11rb$ = function (s) {
    s.HI_LO = s.HI_LO.add(get_unsigned(s.getGpr_za3lpa$(s.IR >>> 21 & 31)).multiply(get_unsigned(s.getGpr_za3lpa$(s.IR >>> 16 & 31))));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.msub_11rb$ = function (s) {
    s.HI_LO = s.HI_LO.subtract(Kotlin.Long.fromInt(s.getGpr_za3lpa$(s.IR >>> 21 & 31)).multiply(Kotlin.Long.fromInt(s.getGpr_za3lpa$(s.IR >>> 16 & 31))));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.msubu_11rb$ = function (s) {
    s.HI_LO = s.HI_LO.subtract(get_unsigned(s.getGpr_za3lpa$(s.IR >>> 21 & 31)).multiply(get_unsigned(s.getGpr_za3lpa$(s.IR >>> 16 & 31))));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.mflo_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.LO);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.mfhi_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.HI);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.mfic_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.IC);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.mtlo_11rb$ = function (s) {
    s.LO = s.getGpr_za3lpa$(s.IR >>> 21 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.mthi_11rb$ = function (s) {
    s.HI = s.getGpr_za3lpa$(s.IR >>> 21 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.mtic_11rb$ = function (s) {
    s.IC = s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.or_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) | s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.xor_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) ^ s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.and_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) & s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.nor_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, ~(s.getGpr_za3lpa$(s.IR >>> 21 & 31) | s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.ori_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) | s.IR & 65535);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.xori_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) ^ s.IR & 65535);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.andi_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) & (s.IR & 65535));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.sll_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 16 & 31) << (s.IR >>> 6 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.sra_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 16 & 31) >> (s.IR >>> 6 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.srl_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 16 & 31) >>> (s.IR >>> 6 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.sllv_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 16 & 31) << (s.getGpr_za3lpa$(s.IR >>> 21 & 31) & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.srav_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 16 & 31) >> (s.getGpr_za3lpa$(s.IR >>> 21 & 31) & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.srlv_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 16 & 31) >>> (s.getGpr_za3lpa$(s.IR >>> 21 & 31) & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.bitrev_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, BitUtils_getInstance().bitrev32_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.rotr_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, BitUtils_getInstance().rotr_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 16 & 31), s.IR >>> 6 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.rotrv_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, BitUtils_getInstance().rotr_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 16 & 31), s.getGpr_za3lpa$(s.IR >>> 21 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.lb_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lb_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.lbu_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lbu_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.lh_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lh_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.lhu_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lhu_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.lw_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lw_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.lwl_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lwl_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.lwr_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lwr_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.swl_11rb$ = function (s) {
    s.mem.swl_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.swr_11rb$ = function (s) {
    s.mem.swr_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.sb_11rb$ = function (s) {
    s.mem.sb_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.sh_11rb$ = function (s) {
    s.mem.sh_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.sw_11rb$ = function (s) {
    s.mem.sw_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.lwc1_11rb$ = function (s) {
    s.setFprI_vux9f0$(s.IR >>> 16 & 31, s.mem.lw_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.swc1_11rb$ = function (s) {
    s.mem.sw_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + ((s.IR & 65535) << 16 >> 16) | 0, s.getFprI_za3lpa$(s.IR >>> 16 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.syscall_11rb$ = function (s) {
    s.advance_pc_za3lpa$(4);
    s.syscall_za3lpa$(extract(s.IR, 6, 20));
  };
  InstructionInterpreter.prototype._break_11rb$ = function (s) {
    s.advance_pc_za3lpa$(4);
    throw new CpuBreakException(extract(s.IR, 6, 20));
  };
  InstructionInterpreter.prototype.slt_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) < s.getGpr_za3lpa$(s.IR >>> 16 & 31) ? 1 : 0);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.sltu_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, (s.getGpr_za3lpa$(s.IR >>> 21 & 31) ^ -2147483648) < (s.getGpr_za3lpa$(s.IR >>> 16 & 31) ^ -2147483648) ? 1 : 0);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.slti_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) < (s.IR & 65535) << 16 >> 16 ? 1 : 0);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.sltiu_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, (s.getGpr_za3lpa$(s.IR >>> 21 & 31) ^ -2147483648) < ((s.IR & 65535) << 16 >> 16 ^ -2147483648) ? 1 : 0);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.beq_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) === s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s.advance_pc_za3lpa$(4);
    }
  };
  InstructionInterpreter.prototype.bne_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) !== s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s.advance_pc_za3lpa$(4);
    }
  };
  InstructionInterpreter.prototype.bltz_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) < 0;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s.advance_pc_za3lpa$(4);
    }
  };
  InstructionInterpreter.prototype.blez_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) <= 0;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s.advance_pc_za3lpa$(4);
    }
  };
  InstructionInterpreter.prototype.bgtz_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) > 0;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s.advance_pc_za3lpa$(4);
    }
  };
  InstructionInterpreter.prototype.bgez_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) >= 0;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s.advance_pc_za3lpa$(4);
    }
  };
  InstructionInterpreter.prototype.bgezal_11rb$ = function (s) {
    set_RA(s, s._nPC + 4 | 0);
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) >= 0;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s.advance_pc_za3lpa$(4);
    }
  };
  InstructionInterpreter.prototype.bltzal_11rb$ = function (s) {
    set_RA(s, s._nPC + 4 | 0);
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) < 0;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s.advance_pc_za3lpa$(4);
    }
  };
  InstructionInterpreter.prototype.beql_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) === s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bnel_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) !== s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bltzl_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) < 0;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.blezl_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) <= 0;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bgtzl_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) > 0;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bgezl_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) >= 0;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bgezall_11rb$ = function (s) {
    set_RA(s, s._nPC + 4 | 0);
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) >= 0;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bltzall_11rb$ = function (s) {
    set_RA(s, s._nPC + 4 | 0);
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) < 0;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bc1f_11rb$ = function (s) {
    var result = !s.fcr31_cc;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s.advance_pc_za3lpa$(4);
    }
  };
  InstructionInterpreter.prototype.bc1t_11rb$ = function (s) {
    var result = s.fcr31_cc;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s.advance_pc_za3lpa$(4);
    }
  };
  InstructionInterpreter.prototype.bc1fl_11rb$ = function (s) {
    var result = !s.fcr31_cc;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bc1tl_11rb$ = function (s) {
    var result = s.fcr31_cc;
    if (result) {
      s.advance_pc_za3lpa$(((s.IR & 65535) << 16 >> 16) * 4 | 0);
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.j_11rb$ = function (s) {
    s._PC = s._nPC;
    s._nPC = s._PC & (new Kotlin.Long(-268435456, 0)).toInt() | (extract(s.IR, 0, 26) * 4 | 0);
  };
  InstructionInterpreter.prototype.jr_11rb$ = function (s) {
    s._PC = s._nPC;
    s._nPC = s.getGpr_za3lpa$(s.IR >>> 21 & 31);
  };
  InstructionInterpreter.prototype.jal_11rb$ = function (s) {
    this.j_11rb$(s);
    set_RA(s, s._PC + 4 | 0);
  };
  InstructionInterpreter.prototype.jalr_11rb$ = function (s) {
    this.jr_11rb$(s);
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s._PC + 4 | 0);
  };
  InstructionInterpreter.prototype.mfc1_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.getFprI_za3lpa$(s.IR >>> 11 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.mtc1_11rb$ = function (s) {
    s.setFprI_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.cvt_s_w_11rb$ = function (s) {
    s.setFpr_24o109$(s.IR >>> 6 & 31, s.getFprI_za3lpa$(s.IR >>> 11 & 31));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.cvt_w_s_11rb$ = function (s) {
    var tmp$, tmp$_0;
    tmp$ = s.fcr31_rm;
    if (tmp$ === 0) {
      tmp$_0 = MathFloat_getInstance().rint_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    }
     else if (tmp$ === 1) {
      tmp$_0 = MathFloat_getInstance().cast_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    }
     else if (tmp$ === 2) {
      tmp$_0 = MathFloat_getInstance().ceil_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    }
     else if (tmp$ === 3) {
      tmp$_0 = MathFloat_getInstance().floor_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    }
     else {
      tmp$_0 = numberToInt(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    }
    s.setFprI_vux9f0$(s.IR >>> 6 & 31, tmp$_0);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.trunc_w_s_11rb$ = function (s) {
    s.setFprI_vux9f0$(s.IR >>> 6 & 31, MathFloat_getInstance().trunc_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.round_w_s_11rb$ = function (s) {
    s.setFprI_vux9f0$(s.IR >>> 6 & 31, MathFloat_getInstance().round_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.ceil_w_s_11rb$ = function (s) {
    s.setFprI_vux9f0$(s.IR >>> 6 & 31, MathFloat_getInstance().ceil_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.floor_w_s_11rb$ = function (s) {
    s.setFprI_vux9f0$(s.IR >>> 6 & 31, MathFloat_getInstance().floor_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31)));
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.checkNan_6rdgz4$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.interpreter.InstructionInterpreter.checkNan_6rdgz4$', wrapFunction(function () {
    var isNaN_0 = Kotlin.kotlin.isNaN_81szk$;
    var isInfinite = Kotlin.kotlin.isInfinite_81szk$;
    return function ($receiver, callback) {
      callback($receiver);
      if (isNaN_0($receiver.getFpr_za3lpa$($receiver.IR >>> 6 & 31)))
        $receiver.fcr31 = $receiver.fcr31 | 65600;
      if (isInfinite($receiver.getFpr_za3lpa$($receiver.IR >>> 6 & 31)))
        $receiver.fcr31 = $receiver.fcr31 | 20500;
      $receiver.advance_pc_za3lpa$(4);
    };
  }));
  InstructionInterpreter.prototype.mov_s_11rb$ = function (s) {
    s.setFpr_24o109$(s.IR >>> 6 & 31, s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.add_s_11rb$ = function (s) {
    s.setFpr_24o109$(s.IR >>> 6 & 31, s.getFpr_za3lpa$(s.IR >>> 11 & 31) + s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.sub_s_11rb$ = function (s) {
    s.setFpr_24o109$(s.IR >>> 6 & 31, s.getFpr_za3lpa$(s.IR >>> 11 & 31) - s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.mul_s_11rb$ = function (s) {
    s.setFpr_24o109$(s.IR >>> 6 & 31, s.getFpr_za3lpa$(s.IR >>> 11 & 31) * s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    var tmp$ = s.fcr31_fs;
    if (tmp$) {
      tmp$ = isAlmostZero(s.getFpr_za3lpa$(s.IR >>> 6 & 31));
    }
    if (tmp$) {
      s.setFpr_24o109$(s.IR >>> 6 & 31, 0.0);
    }
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.div_s_11rb$ = function (s) {
    s.setFpr_24o109$(s.IR >>> 6 & 31, s.getFpr_za3lpa$(s.IR >>> 11 & 31) / s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.neg_s_11rb$ = function (s) {
    s.setFpr_24o109$(s.IR >>> 6 & 31, -s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.abs_s_11rb$ = function (s) {
    var x = s.getFpr_za3lpa$(s.IR >>> 11 & 31);
    s.setFpr_24o109$(s.IR >>> 6 & 31, Math_0.abs(x));
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.sqrt_s_11rb$ = function (s) {
    var x = s.getFpr_za3lpa$(s.IR >>> 11 & 31);
    s.setFpr_24o109$(s.IR >>> 6 & 31, Math_0.sqrt(x));
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype._cu_0 = wrapFunction(function () {
    return function ($receiver, callback) {
      var tmp$ = isNaN_0($receiver.getFpr_za3lpa$($receiver.IR >>> 11 & 31));
      if (!tmp$) {
        tmp$ = isNaN_0($receiver.getFpr_za3lpa$($receiver.IR >>> 16 & 31));
      }
      $receiver.fcr31_cc = tmp$ ? true : callback($receiver);
      $receiver.advance_pc_za3lpa$(4);
    };
  });
  InstructionInterpreter.prototype._co_0 = wrapFunction(function () {
    return function ($receiver, callback) {
      var tmp$ = isNaN_0($receiver.getFpr_za3lpa$($receiver.IR >>> 11 & 31));
      if (!tmp$) {
        tmp$ = isNaN_0($receiver.getFpr_za3lpa$($receiver.IR >>> 16 & 31));
      }
      $receiver.fcr31_cc = tmp$ ? false : callback($receiver);
      $receiver.advance_pc_za3lpa$(4);
    };
  });
  InstructionInterpreter.prototype.c_f_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : false;
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_un_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : false;
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_eq_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : s.getFpr_za3lpa$(s.IR >>> 11 & 31) === s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_ueq_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : s.getFpr_za3lpa$(s.IR >>> 11 & 31) === s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_olt_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : s.getFpr_za3lpa$(s.IR >>> 11 & 31) < s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_ult_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : s.getFpr_za3lpa$(s.IR >>> 11 & 31) < s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_ole_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : s.getFpr_za3lpa$(s.IR >>> 11 & 31) <= s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_ule_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : s.getFpr_za3lpa$(s.IR >>> 11 & 31) <= s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_sf_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : false;
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_ngle_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : false;
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_seq_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : s.getFpr_za3lpa$(s.IR >>> 11 & 31) === s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_ngl_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : s.getFpr_za3lpa$(s.IR >>> 11 & 31) === s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_lt_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : s.getFpr_za3lpa$(s.IR >>> 11 & 31) < s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_nge_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : s.getFpr_za3lpa$(s.IR >>> 11 & 31) < s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_le_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : s.getFpr_za3lpa$(s.IR >>> 11 & 31) <= s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.c_ngt_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : s.getFpr_za3lpa$(s.IR >>> 11 & 31) <= s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.cfc1_11rb$ = function (s) {
    var tmp$;
    tmp$ = s.IR >>> 11 & 31;
    if (tmp$ === 0) {
      s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.fcr0);
    }
     else if (tmp$ === 25) {
      s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.fcr25);
    }
     else if (tmp$ === 26) {
      s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.fcr26);
    }
     else if (tmp$ === 27) {
      s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.fcr27);
    }
     else if (tmp$ === 28) {
      s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.fcr28);
    }
     else if (tmp$ === 31) {
      s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.fcr31);
    }
     else {
      s.setGpr_vux9f0$(s.IR >>> 16 & 31, -1);
    }
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.ctc1_11rb$ = function (s) {
    if ((s.IR >>> 11 & 31) === 31) {
      s.updateFCR31_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.advance_pc_za3lpa$(4);
  };
  function InstructionInterpreter$vmzero$lambda$lambda(c, r, f) {
    return 0.0;
  }
  InstructionInterpreter.prototype.vmzero_11rb$ = function (s) {
    this.setMatrix_j52ygd$(s, this.getMatrixRegsVD_za3lpa$(s.IR >>> 0 & 127), InstructionInterpreter$vmzero$lambda$lambda);
    s.advance_pc_za3lpa$(4);
  };
  InstructionInterpreter.prototype.lvl_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lvl_q);
  };
  InstructionInterpreter.prototype.lvr_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lvr_q);
  };
  InstructionInterpreter.prototype.ll_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ll);
  };
  InstructionInterpreter.prototype.sc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sc);
  };
  InstructionInterpreter.prototype.cache_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().cache);
  };
  InstructionInterpreter.prototype.sync_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sync);
  };
  InstructionInterpreter.prototype.dbreak_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().dbreak);
  };
  InstructionInterpreter.prototype.halt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().halt);
  };
  InstructionInterpreter.prototype.dret_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().dret);
  };
  InstructionInterpreter.prototype.eret_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().eret);
  };
  InstructionInterpreter.prototype.mfdr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfdr);
  };
  InstructionInterpreter.prototype.mtdr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtdr);
  };
  InstructionInterpreter.prototype.cfc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().cfc0);
  };
  InstructionInterpreter.prototype.ctc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ctc0);
  };
  InstructionInterpreter.prototype.mfc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfc0);
  };
  InstructionInterpreter.prototype.mtc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtc0);
  };
  InstructionInterpreter.prototype.mfv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfv);
  };
  InstructionInterpreter.prototype.mfvc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfvc);
  };
  InstructionInterpreter.prototype.mtv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtv);
  };
  InstructionInterpreter.prototype.mtvc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtvc);
  };
  InstructionInterpreter.prototype.lv_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lv_s);
  };
  InstructionInterpreter.prototype.lv_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lv_q);
  };
  InstructionInterpreter.prototype.sv_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sv_q);
  };
  InstructionInterpreter.prototype.vdot_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vdot);
  };
  InstructionInterpreter.prototype.vscl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vscl);
  };
  InstructionInterpreter.prototype.vsge_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsge);
  };
  InstructionInterpreter.prototype.vslt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vslt);
  };
  InstructionInterpreter.prototype.vrot_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrot);
  };
  InstructionInterpreter.prototype.vzero_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vzero);
  };
  InstructionInterpreter.prototype.vone_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vone);
  };
  InstructionInterpreter.prototype.vmov_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmov);
  };
  InstructionInterpreter.prototype.vabs_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vabs);
  };
  InstructionInterpreter.prototype.vneg_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vneg);
  };
  InstructionInterpreter.prototype.vocp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vocp);
  };
  InstructionInterpreter.prototype.vsgn_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsgn);
  };
  InstructionInterpreter.prototype.vrcp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrcp);
  };
  InstructionInterpreter.prototype.vrsq_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrsq);
  };
  InstructionInterpreter.prototype.vsin_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsin);
  };
  InstructionInterpreter.prototype.vcos_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcos);
  };
  InstructionInterpreter.prototype.vexp2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vexp2);
  };
  InstructionInterpreter.prototype.vlog2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vlog2);
  };
  InstructionInterpreter.prototype.vsqrt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsqrt);
  };
  InstructionInterpreter.prototype.vasin_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vasin);
  };
  InstructionInterpreter.prototype.vnrcp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vnrcp);
  };
  InstructionInterpreter.prototype.vnsin_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vnsin);
  };
  InstructionInterpreter.prototype.vrexp2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrexp2);
  };
  InstructionInterpreter.prototype.vsat0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsat0);
  };
  InstructionInterpreter.prototype.vsat1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsat1);
  };
  InstructionInterpreter.prototype.vcst_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcst);
  };
  InstructionInterpreter.prototype.vmmul_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmmul);
  };
  InstructionInterpreter.prototype.vhdp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vhdp);
  };
  InstructionInterpreter.prototype.vcrs_t_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcrs_t);
  };
  InstructionInterpreter.prototype.vcrsp_t_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcrsp_t);
  };
  InstructionInterpreter.prototype.vi2c_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2c);
  };
  InstructionInterpreter.prototype.vi2uc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2uc);
  };
  InstructionInterpreter.prototype.vtfm2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vtfm2);
  };
  InstructionInterpreter.prototype.vtfm3_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vtfm3);
  };
  InstructionInterpreter.prototype.vtfm4_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vtfm4);
  };
  InstructionInterpreter.prototype.vhtfm2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vhtfm2);
  };
  InstructionInterpreter.prototype.vhtfm3_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vhtfm3);
  };
  InstructionInterpreter.prototype.vhtfm4_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vhtfm4);
  };
  InstructionInterpreter.prototype.vsrt3_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsrt3);
  };
  InstructionInterpreter.prototype.vfad_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vfad);
  };
  InstructionInterpreter.prototype.vmin_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmin);
  };
  InstructionInterpreter.prototype.vmax_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmax);
  };
  InstructionInterpreter.prototype.vadd_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vadd);
  };
  InstructionInterpreter.prototype.vsub_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsub);
  };
  InstructionInterpreter.prototype.vdiv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vdiv);
  };
  InstructionInterpreter.prototype.vmul_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmul);
  };
  InstructionInterpreter.prototype.vidt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vidt);
  };
  InstructionInterpreter.prototype.vmidt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmidt);
  };
  InstructionInterpreter.prototype.viim_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().viim);
  };
  InstructionInterpreter.prototype.vmmov_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmmov);
  };
  InstructionInterpreter.prototype.vmone_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmone);
  };
  InstructionInterpreter.prototype.vnop_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vnop);
  };
  InstructionInterpreter.prototype.vsync_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsync);
  };
  InstructionInterpreter.prototype.vflush_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vflush);
  };
  InstructionInterpreter.prototype.vpfxd_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vpfxd);
  };
  InstructionInterpreter.prototype.vpfxs_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vpfxs);
  };
  InstructionInterpreter.prototype.vpfxt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vpfxt);
  };
  InstructionInterpreter.prototype.vdet_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vdet);
  };
  InstructionInterpreter.prototype.vrnds_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrnds);
  };
  InstructionInterpreter.prototype.vrndi_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrndi);
  };
  InstructionInterpreter.prototype.vrndf1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrndf1);
  };
  InstructionInterpreter.prototype.vrndf2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrndf2);
  };
  InstructionInterpreter.prototype.vcmp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcmp);
  };
  InstructionInterpreter.prototype.vcmovf_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcmovf);
  };
  InstructionInterpreter.prototype.vcmovt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcmovt);
  };
  InstructionInterpreter.prototype.vavg_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vavg);
  };
  InstructionInterpreter.prototype.vf2id_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2id);
  };
  InstructionInterpreter.prototype.vf2in_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2in);
  };
  InstructionInterpreter.prototype.vf2iu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2iu);
  };
  InstructionInterpreter.prototype.vf2iz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2iz);
  };
  InstructionInterpreter.prototype.vi2f_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2f);
  };
  InstructionInterpreter.prototype.vscmp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vscmp);
  };
  InstructionInterpreter.prototype.vmscl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmscl);
  };
  InstructionInterpreter.prototype.vt4444_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vt4444_q);
  };
  InstructionInterpreter.prototype.vt5551_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vt5551_q);
  };
  InstructionInterpreter.prototype.vt5650_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vt5650_q);
  };
  InstructionInterpreter.prototype.vmfvc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmfvc);
  };
  InstructionInterpreter.prototype.vmtvc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmtvc);
  };
  InstructionInterpreter.prototype.mfvme_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfvme);
  };
  InstructionInterpreter.prototype.mtvme_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtvme);
  };
  InstructionInterpreter.prototype.sv_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sv_s);
  };
  InstructionInterpreter.prototype.vfim_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vfim);
  };
  InstructionInterpreter.prototype.svl_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().svl_q);
  };
  InstructionInterpreter.prototype.svr_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().svr_q);
  };
  InstructionInterpreter.prototype.vbfy1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vbfy1);
  };
  InstructionInterpreter.prototype.vbfy2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vbfy2);
  };
  InstructionInterpreter.prototype.vf2h_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2h);
  };
  InstructionInterpreter.prototype.vh2f_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vh2f);
  };
  InstructionInterpreter.prototype.vi2s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2s);
  };
  InstructionInterpreter.prototype.vi2us_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2us);
  };
  InstructionInterpreter.prototype.vlgb_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vlgb);
  };
  InstructionInterpreter.prototype.vqmul_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vqmul);
  };
  InstructionInterpreter.prototype.vs2i_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vs2i);
  };
  InstructionInterpreter.prototype.vc2i_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vc2i);
  };
  InstructionInterpreter.prototype.vuc2i_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vuc2i);
  };
  InstructionInterpreter.prototype.vsbn_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsbn);
  };
  InstructionInterpreter.prototype.vsbz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsbz);
  };
  InstructionInterpreter.prototype.vsocp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsocp);
  };
  InstructionInterpreter.prototype.vsrt1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsrt1);
  };
  InstructionInterpreter.prototype.vsrt2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsrt2);
  };
  InstructionInterpreter.prototype.vsrt4_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsrt4);
  };
  InstructionInterpreter.prototype.vus2i_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vus2i);
  };
  InstructionInterpreter.prototype.vwbn_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vwbn);
  };
  InstructionInterpreter.prototype.bvf_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvf);
  };
  InstructionInterpreter.prototype.bvt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvt);
  };
  InstructionInterpreter.prototype.bvfl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvfl);
  };
  InstructionInterpreter.prototype.bvtl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvtl);
  };
  function InstructionInterpreter$VectorSize() {
    InstructionInterpreter$VectorSize_instance = this;
    this.Single = 1;
    this.Pair = 2;
    this.Triple = 3;
    this.Quad = 4;
  }
  InstructionInterpreter$VectorSize.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'VectorSize',
    interfaces: []
  };
  var InstructionInterpreter$VectorSize_instance = null;
  function InstructionInterpreter$VectorSize_getInstance() {
    if (InstructionInterpreter$VectorSize_instance === null) {
      new InstructionInterpreter$VectorSize();
    }
    return InstructionInterpreter$VectorSize_instance;
  }
  function InstructionInterpreter$MatrixSize() {
    InstructionInterpreter$MatrixSize_instance = this;
    this.M_2x2 = 2;
    this.M_3x3 = 3;
    this.M_4x4 = 4;
  }
  InstructionInterpreter$MatrixSize.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'MatrixSize',
    interfaces: []
  };
  var InstructionInterpreter$MatrixSize_instance = null;
  function InstructionInterpreter$MatrixSize_getInstance() {
    if (InstructionInterpreter$MatrixSize_instance === null) {
      new InstructionInterpreter$MatrixSize();
    }
    return InstructionInterpreter$MatrixSize_instance;
  }
  InstructionInterpreter.prototype.getMatrixRegs_vux9f0$ = function (matrixReg, N) {
    var tmp$, tmp$_0;
    var mtx = matrixReg >>> 2 & 7;
    var col = matrixReg & 3;
    var row = 0;
    var side = 0;
    if (N === InstructionInterpreter$MatrixSize_getInstance().M_2x2) {
      row = matrixReg >>> 5 & 2;
      side = 2;
    }
     else if (N === InstructionInterpreter$MatrixSize_getInstance().M_3x3) {
      row = matrixReg >>> 6 & 1;
      side = 3;
    }
     else if (N === InstructionInterpreter$MatrixSize_getInstance().M_4x4) {
      row = matrixReg >>> 5 & 2;
      side = 4;
    }
     else
      lang.Debugger.enterDebugger();
    var transpose = (matrixReg >>> 5 & 1) !== 0;
    var regs = new Int32Array(Kotlin.imul(side, side));
    tmp$ = side;
    for (var i = 0; i < tmp$; i++) {
      tmp$_0 = side;
      for (var j = 0; j < tmp$_0; j++) {
        var index = mtx * 4 | 0;
        if (transpose) {
          index = index + ((row + i & 3) + ((col + j & 3) * 32 | 0)) | 0;
        }
         else {
          index = index + ((col + j & 3) + ((row + i & 3) * 32 | 0)) | 0;
        }
        regs[Kotlin.imul(j, side) + i | 0] = index;
      }
    }
    return regs;
  };
  InstructionInterpreter.prototype.getMatrixRegsVD_za3lpa$ = function (IR) {
    return this.getMatrixRegs_vux9f0$.call(this, IR >>> 0 & 127, this.get_one_two_s8ev3n$(IR));
  };
  InstructionInterpreter.prototype.setMatrix_j52ygd$ = function ($receiver, leftList, generator) {
    var tmp$;
    var side = numberToInt(Math_0.sqrt(leftList.length));
    var n = 0;
    for (var i = 0; i < side; i++) {
      for (var j = 0; j < side; j++) {
        $receiver.setVfpr_24o109$(leftList[tmp$ = n, n = tmp$ + 1 | 0, tmp$], generator(j, i, n));
      }
    }
  };
  InstructionInterpreter.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'InstructionInterpreter',
    interfaces: [InstructionEvaluator]
  };
  var InstructionInterpreter_instance = null;
  function InstructionInterpreter_getInstance() {
    if (InstructionInterpreter_instance === null) {
      new InstructionInterpreter();
    }
    return InstructionInterpreter_instance;
  }
  function PspController(emulator) {
    this.emulator_ek03m2$_0 = emulator;
    this.samplingCycle = 0;
    this.samplingMode = 0;
    this.buttons = 0;
    this.lx = 128;
    this.ly = 128;
  }
  Object.defineProperty(PspController.prototype, 'emulator', {
    get: function () {
      return this.emulator_ek03m2$_0;
    }
  });
  PspController.prototype.updateButton_yw5fnw$ = function (button, pressed) {
    if (pressed) {
      this.buttons = this.buttons | button.bits;
    }
     else {
      this.buttons = this.buttons & ~button.bits;
    }
  };
  PspController.prototype.fixFloat_0 = function (v) {
    return numberToInt(clamp_0(v, -1.0, 1.0) * 127 + 128);
  };
  PspController.prototype.updateAnalog_dleff0$ = function (x, y) {
    this.lx = this.fixFloat_0(x);
    this.ly = this.fixFloat_0(y);
  };
  PspController.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspController',
    interfaces: [WithEmulator]
  };
  function PspCtrlButtons(name, ordinal, bits) {
    Enum.call(this);
    this.bits = bits;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PspCtrlButtons_initFields() {
    PspCtrlButtons_initFields = function () {
    };
    PspCtrlButtons$none_instance = new PspCtrlButtons('none', 0, 0);
    PspCtrlButtons$select_instance = new PspCtrlButtons('select', 1, 1);
    PspCtrlButtons$start_instance = new PspCtrlButtons('start', 2, 8);
    PspCtrlButtons$up_instance = new PspCtrlButtons('up', 3, 16);
    PspCtrlButtons$right_instance = new PspCtrlButtons('right', 4, 32);
    PspCtrlButtons$down_instance = new PspCtrlButtons('down', 5, 64);
    PspCtrlButtons$left_instance = new PspCtrlButtons('left', 6, 128);
    PspCtrlButtons$leftTrigger_instance = new PspCtrlButtons('leftTrigger', 7, 256);
    PspCtrlButtons$rightTrigger_instance = new PspCtrlButtons('rightTrigger', 8, 512);
    PspCtrlButtons$triangle_instance = new PspCtrlButtons('triangle', 9, 4096);
    PspCtrlButtons$circle_instance = new PspCtrlButtons('circle', 10, 8192);
    PspCtrlButtons$cross_instance = new PspCtrlButtons('cross', 11, 16384);
    PspCtrlButtons$square_instance = new PspCtrlButtons('square', 12, 32768);
    PspCtrlButtons$home_instance = new PspCtrlButtons('home', 13, 65536);
    PspCtrlButtons$hold_instance = new PspCtrlButtons('hold', 14, 131072);
    PspCtrlButtons$wirelessLanUp_instance = new PspCtrlButtons('wirelessLanUp', 15, 262144);
    PspCtrlButtons$remote_instance = new PspCtrlButtons('remote', 16, 524288);
    PspCtrlButtons$volumeUp_instance = new PspCtrlButtons('volumeUp', 17, 1048576);
    PspCtrlButtons$volumeDown_instance = new PspCtrlButtons('volumeDown', 18, 2097152);
    PspCtrlButtons$screen_instance = new PspCtrlButtons('screen', 19, 4194304);
    PspCtrlButtons$note_instance = new PspCtrlButtons('note', 20, 8388608);
    PspCtrlButtons$discPresent_instance = new PspCtrlButtons('discPresent', 21, 16777216);
    PspCtrlButtons$memoryStickPresent_instance = new PspCtrlButtons('memoryStickPresent', 22, 33554432);
  }
  var PspCtrlButtons$none_instance;
  function PspCtrlButtons$none_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$none_instance;
  }
  var PspCtrlButtons$select_instance;
  function PspCtrlButtons$select_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$select_instance;
  }
  var PspCtrlButtons$start_instance;
  function PspCtrlButtons$start_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$start_instance;
  }
  var PspCtrlButtons$up_instance;
  function PspCtrlButtons$up_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$up_instance;
  }
  var PspCtrlButtons$right_instance;
  function PspCtrlButtons$right_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$right_instance;
  }
  var PspCtrlButtons$down_instance;
  function PspCtrlButtons$down_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$down_instance;
  }
  var PspCtrlButtons$left_instance;
  function PspCtrlButtons$left_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$left_instance;
  }
  var PspCtrlButtons$leftTrigger_instance;
  function PspCtrlButtons$leftTrigger_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$leftTrigger_instance;
  }
  var PspCtrlButtons$rightTrigger_instance;
  function PspCtrlButtons$rightTrigger_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$rightTrigger_instance;
  }
  var PspCtrlButtons$triangle_instance;
  function PspCtrlButtons$triangle_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$triangle_instance;
  }
  var PspCtrlButtons$circle_instance;
  function PspCtrlButtons$circle_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$circle_instance;
  }
  var PspCtrlButtons$cross_instance;
  function PspCtrlButtons$cross_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$cross_instance;
  }
  var PspCtrlButtons$square_instance;
  function PspCtrlButtons$square_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$square_instance;
  }
  var PspCtrlButtons$home_instance;
  function PspCtrlButtons$home_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$home_instance;
  }
  var PspCtrlButtons$hold_instance;
  function PspCtrlButtons$hold_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$hold_instance;
  }
  var PspCtrlButtons$wirelessLanUp_instance;
  function PspCtrlButtons$wirelessLanUp_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$wirelessLanUp_instance;
  }
  var PspCtrlButtons$remote_instance;
  function PspCtrlButtons$remote_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$remote_instance;
  }
  var PspCtrlButtons$volumeUp_instance;
  function PspCtrlButtons$volumeUp_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$volumeUp_instance;
  }
  var PspCtrlButtons$volumeDown_instance;
  function PspCtrlButtons$volumeDown_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$volumeDown_instance;
  }
  var PspCtrlButtons$screen_instance;
  function PspCtrlButtons$screen_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$screen_instance;
  }
  var PspCtrlButtons$note_instance;
  function PspCtrlButtons$note_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$note_instance;
  }
  var PspCtrlButtons$discPresent_instance;
  function PspCtrlButtons$discPresent_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$discPresent_instance;
  }
  var PspCtrlButtons$memoryStickPresent_instance;
  function PspCtrlButtons$memoryStickPresent_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$memoryStickPresent_instance;
  }
  PspCtrlButtons.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspCtrlButtons',
    interfaces: [Enum]
  };
  function PspCtrlButtons$values() {
    return [PspCtrlButtons$none_getInstance(), PspCtrlButtons$select_getInstance(), PspCtrlButtons$start_getInstance(), PspCtrlButtons$up_getInstance(), PspCtrlButtons$right_getInstance(), PspCtrlButtons$down_getInstance(), PspCtrlButtons$left_getInstance(), PspCtrlButtons$leftTrigger_getInstance(), PspCtrlButtons$rightTrigger_getInstance(), PspCtrlButtons$triangle_getInstance(), PspCtrlButtons$circle_getInstance(), PspCtrlButtons$cross_getInstance(), PspCtrlButtons$square_getInstance(), PspCtrlButtons$home_getInstance(), PspCtrlButtons$hold_getInstance(), PspCtrlButtons$wirelessLanUp_getInstance(), PspCtrlButtons$remote_getInstance(), PspCtrlButtons$volumeUp_getInstance(), PspCtrlButtons$volumeDown_getInstance(), PspCtrlButtons$screen_getInstance(), PspCtrlButtons$note_getInstance(), PspCtrlButtons$discPresent_getInstance(), PspCtrlButtons$memoryStickPresent_getInstance()];
  }
  PspCtrlButtons.values = PspCtrlButtons$values;
  function PspCtrlButtons$valueOf(name) {
    switch (name) {
      case 'none':
        return PspCtrlButtons$none_getInstance();
      case 'select':
        return PspCtrlButtons$select_getInstance();
      case 'start':
        return PspCtrlButtons$start_getInstance();
      case 'up':
        return PspCtrlButtons$up_getInstance();
      case 'right':
        return PspCtrlButtons$right_getInstance();
      case 'down':
        return PspCtrlButtons$down_getInstance();
      case 'left':
        return PspCtrlButtons$left_getInstance();
      case 'leftTrigger':
        return PspCtrlButtons$leftTrigger_getInstance();
      case 'rightTrigger':
        return PspCtrlButtons$rightTrigger_getInstance();
      case 'triangle':
        return PspCtrlButtons$triangle_getInstance();
      case 'circle':
        return PspCtrlButtons$circle_getInstance();
      case 'cross':
        return PspCtrlButtons$cross_getInstance();
      case 'square':
        return PspCtrlButtons$square_getInstance();
      case 'home':
        return PspCtrlButtons$home_getInstance();
      case 'hold':
        return PspCtrlButtons$hold_getInstance();
      case 'wirelessLanUp':
        return PspCtrlButtons$wirelessLanUp_getInstance();
      case 'remote':
        return PspCtrlButtons$remote_getInstance();
      case 'volumeUp':
        return PspCtrlButtons$volumeUp_getInstance();
      case 'volumeDown':
        return PspCtrlButtons$volumeDown_getInstance();
      case 'screen':
        return PspCtrlButtons$screen_getInstance();
      case 'note':
        return PspCtrlButtons$note_getInstance();
      case 'discPresent':
        return PspCtrlButtons$discPresent_getInstance();
      case 'memoryStickPresent':
        return PspCtrlButtons$memoryStickPresent_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ctrl.PspCtrlButtons.' + name);
    }
  }
  PspCtrlButtons.valueOf_61zpoe$ = PspCtrlButtons$valueOf;
  function PspDisplay(emulator) {
    this.emulator_vu39pr$_0 = emulator;
    this.exposeDisplay = true;
    this.bmp = new Bitmap32(512, 272);
    this.rawDisplay = true;
    this.address = 1140850688;
    this.bufferWidth = 512;
    this.pixelFormat = PixelFormat$RGBA_8888_getInstance();
    this.sync = 0;
    this.displayMode = 0;
    this.displayWidth = 480;
    this.displayHeight = 272;
    this.onVsync = new Signal();
    this.temp_0 = new Int8Array((512 * 272 | 0) * 4 | 0);
  }
  Object.defineProperty(PspDisplay.prototype, 'emulator', {
    get: function () {
      return this.emulator_vu39pr$_0;
    }
  });
  PspDisplay.prototype.dispatchVsync = function () {
    this.onVsync.invoke_11rb$(Unit);
  };
  PspDisplay.prototype.decodeToBitmap32_59u9qz$ = function (out) {
    var tmp$;
    var bmpData = out.data;
    if (equals(this.pixelFormat, PixelFormat$RGBA_8888_getInstance()))
      get_mem(this).read_coga0j$(this.address, bmpData);
    else {
      get_mem(this).read_3fge6q$(this.address, this.temp_0, 0, this.temp_0.length);
      if (equals(this.pixelFormat, PixelFormat$RGBA_5551_getInstance()))
        tmp$ = color.RGBA_5551;
      else
        tmp$ = color.RGBA;
      var color_0 = tmp$;
      color_0.decodeToBitmap32_131o2$(out, this.temp_0);
    }
  };
  PspDisplay.prototype.clear = function () {
    var tmp$;
    tmp$ = 512 * 272 | 0;
    for (var n = 0; n < tmp$; n++) {
      get_mem(this).sw_vux9f0$(this.address + (n * 4 | 0) | 0, ~get_mem(this).lw_za3lpa$(this.address + (n * 4 | 0) | 0));
    }
  };
  PspDisplay.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspDisplay',
    interfaces: [WithEmulator]
  };
  function Cso() {
  }
  Cso.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Cso',
    interfaces: []
  };
  function Pbp(version, base, streams) {
    Pbp$Companion_getInstance();
    this.version = version;
    this.base = base;
    this.streams = streams;
    this.streamsByName = toMap(zip(Pbp$Companion_getInstance().NAMES, this.streams));
  }
  function Pbp$Companion() {
    Pbp$Companion_instance = this;
    this.PBP_MAGIC = 1346523136;
    this.PARAM_SFO = 'param.sfo';
    this.ICON0_PNG = 'icon0.png';
    this.ICON1_PMF = 'icon1.pmf';
    this.PIC0_PNG = 'pic0.png';
    this.PIC1_PNG = 'pic1.png';
    this.SND0_AT3 = 'snd0.at3';
    this.PSP_DATA = 'psp.data';
    this.PSAR_DATA = 'psar.data';
    this.NAMES = listOf([this.PARAM_SFO, this.ICON0_PNG, this.ICON1_PMF, this.PIC0_PNG, this.PIC1_PNG, this.SND0_AT3, this.PSP_DATA, this.PSAR_DATA]);
  }
  Pbp$Companion.prototype.check_axnxby$ = function (s_0, continuation_0, suspended) {
    var instance = new Coroutine$check_axnxby$(this, s_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$check_axnxby$($this, s_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$s = s_0;
  }
  Coroutine$check_axnxby$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$check_axnxby$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$check_axnxby$.prototype.constructor = Coroutine$check_axnxby$;
  Coroutine$check_axnxby$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readS32_le(this.local$s.duplicate(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0 === this.$this.PBP_MAGIC;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Pbp$Companion.prototype.load_axnxby$ = function (s_0, continuation_0, suspended) {
    var instance = new Coroutine$load_axnxby$(this, s_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$load_axnxby$($this, s_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$version = void 0;
    this.local$offsets = void 0;
    this.local$destination = void 0;
    this.local$tmp$_0 = void 0;
    this.local$tmp$_1 = void 0;
    this.local$closure$continuation = void 0;
    this.local$s = s_0;
  }
  Coroutine$load_axnxby$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$load_axnxby$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$load_axnxby$.prototype.constructor = Coroutine$load_axnxby$;
  Coroutine$load_axnxby$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readS32_le(this.local$s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var magic = this.result_0;
            if (magic !== this.$this.PBP_MAGIC)
              invalidOp('Not a PBP file');
            this.state_0 = 3;
            this.result_0 = readS32_le(this.local$s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.local$version = this.result_0;
            this.state_0 = 4;
            this.result_0 = readIntArray_le(this.local$s, 8, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            this.local$tmp$ = toList_0(this.result_0);
            this.state_0 = 5;
            this.result_0 = this.local$s.size(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 5:
            this.local$offsets = plus(this.local$tmp$, listOf_0(this.result_0.toInt()));
            var $receiver = until(0, this.local$offsets.size - 1 | 0);
            this.local$destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
            this.local$tmp$_0 = $receiver.iterator();
            this.state_0 = 6;
            continue;
          case 6:
            if (!this.local$tmp$_0.hasNext()) {
              this.state_0 = 8;
              continue;
            }

            var item = this.local$tmp$_0.next();
            this.local$tmp$_1 = this.local$destination.add_11rb$;
            this.local$closure$continuation = this;
            this.state_0 = 7;
            this.result_0 = sliceWithBounds(this.local$s, Kotlin.Long.fromInt(this.local$offsets.get_za3lpa$(item)), Kotlin.Long.fromInt(this.local$offsets.get_za3lpa$(item + 1 | 0)), this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 7:
            this.local$tmp$_1.call(this.local$destination, this.local$closure$continuation.result_0);
            this.state_0 = 6;
            continue;
          case 8:
            var streams = this.local$destination;
            return new Pbp(this.local$version, this.local$s, streams);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Pbp$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Pbp$Companion_instance = null;
  function Pbp$Companion_getInstance() {
    if (Pbp$Companion_instance === null) {
      new Pbp$Companion();
    }
    return Pbp$Companion_instance;
  }
  Pbp.prototype.get_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.streamsByName.get_11rb$(name.toLowerCase())) != null ? tmp$.duplicate() : null;
  };
  Pbp.prototype.get_za3lpa$ = function (index) {
    return this.streams.get_za3lpa$(index);
  };
  Pbp.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Pbp',
    interfaces: []
  };
  function Psf() {
    Psf$Companion_getInstance();
    this.entries_1gdqst$_0 = this.entries_1gdqst$_0;
    this.entriesByName_pyitpt$_0 = this.entriesByName_pyitpt$_0;
    this.header_ndzgsk$_0 = this.header_ndzgsk$_0;
  }
  function Psf$DataType(id) {
    Psf$DataType$Companion_getInstance();
    this.id = id;
  }
  function Psf$DataType$Companion() {
    Psf$DataType$Companion_instance = this;
    this.BINARY = new Psf$DataType(0);
    this.TEXT = new Psf$DataType(2);
    this.INT = new Psf$DataType(4);
  }
  Psf$DataType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Psf$DataType$Companion_instance = null;
  function Psf$DataType$Companion_getInstance() {
    if (Psf$DataType$Companion_instance === null) {
      new Psf$DataType$Companion();
    }
    return Psf$DataType$Companion_instance;
  }
  Psf$DataType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DataType',
    interfaces: []
  };
  Psf$DataType.prototype.component1 = function () {
    return this.id;
  };
  Psf$DataType.prototype.copy_za3lpa$ = function (id) {
    return new Psf$DataType(id === void 0 ? this.id : id);
  };
  Psf$DataType.prototype.toString = function () {
    return 'DataType(id=' + Kotlin.toString(this.id) + ')';
  };
  Psf$DataType.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  Psf$DataType.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function Psf$HeaderStruct(magic, version, keyTable, valueTable, numberOfPairs) {
    Psf$HeaderStruct$Companion_getInstance();
    this.magic = magic;
    this.version = version;
    this.keyTable = keyTable;
    this.valueTable = valueTable;
    this.numberOfPairs = numberOfPairs;
  }
  function Psf$HeaderStruct$Companion() {
    Psf$HeaderStruct$Companion_instance = this;
  }
  Psf$HeaderStruct$Companion.prototype.read_39qel5$ = function (s) {
    return new Psf$HeaderStruct(readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s));
  };
  Psf$HeaderStruct$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Psf$HeaderStruct$Companion_instance = null;
  function Psf$HeaderStruct$Companion_getInstance() {
    if (Psf$HeaderStruct$Companion_instance === null) {
      new Psf$HeaderStruct$Companion();
    }
    return Psf$HeaderStruct$Companion_instance;
  }
  Psf$HeaderStruct.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HeaderStruct',
    interfaces: []
  };
  function Psf$IEntryStruct() {
  }
  Psf$IEntryStruct.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'IEntryStruct',
    interfaces: []
  };
  function Psf$EntryStruct(keyOffset, unknown, dataType, valueSize, valueSizePad, valueOffset) {
    Psf$EntryStruct$Companion_getInstance();
    this.keyOffset = keyOffset;
    this.unknown_0 = unknown;
    this.dataType = dataType;
    this.valueSize = valueSize;
    this.valueSizePad = valueSizePad;
    this.valueOffset = valueOffset;
    this.key_rxu591$_0 = '';
    this.value_4jy80p$_0 = null;
  }
  Object.defineProperty(Psf$EntryStruct.prototype, 'key', {
    get: function () {
      return this.key_rxu591$_0;
    },
    set: function (key) {
      this.key_rxu591$_0 = key;
    }
  });
  Object.defineProperty(Psf$EntryStruct.prototype, 'value', {
    get: function () {
      return this.value_4jy80p$_0;
    },
    set: function (value) {
      this.value_4jy80p$_0 = value;
    }
  });
  function Psf$EntryStruct$Companion() {
    Psf$EntryStruct$Companion_instance = this;
  }
  Psf$EntryStruct$Companion.prototype.read_39qel5$ = function (s) {
    return new Psf$EntryStruct(readU16_le(s), readU8(s), new Psf$DataType(readU8(s)), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s));
  };
  Psf$EntryStruct$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Psf$EntryStruct$Companion_instance = null;
  function Psf$EntryStruct$Companion_getInstance() {
    if (Psf$EntryStruct$Companion_instance === null) {
      new Psf$EntryStruct$Companion();
    }
    return Psf$EntryStruct$Companion_instance;
  }
  Psf$EntryStruct.prototype.toString = function () {
    return 'Entry(' + this.key + ', ' + toString(this.value) + ')';
  };
  Psf$EntryStruct.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EntryStruct',
    interfaces: [Psf$IEntryStruct]
  };
  function Psf$Companion() {
    Psf$Companion_instance = this;
  }
  Psf$Companion.prototype.fromStream_39qel5$ = function (stream) {
    var $receiver = new Psf();
    $receiver.load_39qel5$(stream);
    return $receiver;
  };
  Psf$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Psf$Companion_instance = null;
  function Psf$Companion_getInstance() {
    if (Psf$Companion_instance === null) {
      new Psf$Companion();
    }
    return Psf$Companion_instance;
  }
  Object.defineProperty(Psf.prototype, 'entries', {
    get: function () {
      if (this.entries_1gdqst$_0 == null)
        return throwUPAE('entries');
      return this.entries_1gdqst$_0;
    },
    set: function (entries) {
      this.entries_1gdqst$_0 = entries;
    }
  });
  Object.defineProperty(Psf.prototype, 'entriesByName', {
    get: function () {
      if (this.entriesByName_pyitpt$_0 == null)
        return throwUPAE('entriesByName');
      return this.entriesByName_pyitpt$_0;
    },
    set: function (entriesByName) {
      this.entriesByName_pyitpt$_0 = entriesByName;
    }
  });
  Object.defineProperty(Psf.prototype, 'header', {
    get: function () {
      if (this.header_ndzgsk$_0 == null)
        return throwUPAE('header');
      return this.header_ndzgsk$_0;
    },
    set: function (header) {
      this.header_ndzgsk$_0 = header;
    }
  });
  Psf.prototype.load_39qel5$ = function (stream) {
    var tmp$, tmp$_0;
    var header = Psf$HeaderStruct$Companion_getInstance().read_39qel5$(stream);
    this.header = header;
    if (header.magic !== 1179865088)
      invalidOp('Not a PSF file');
    var $receiver = until(0, header.numberOfPairs);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$_1;
    tmp$_1 = $receiver.iterator();
    while (tmp$_1.hasNext()) {
      var item = tmp$_1.next();
      destination.add_11rb$(Psf$EntryStruct$Companion_getInstance().read_39qel5$(stream));
    }
    var entries = destination;
    var entriesByName = LinkedHashMap_init();
    var keysStream = sliceWithStart(stream, Kotlin.Long.fromInt(header.keyTable));
    var valuesStream = sliceWithStart(stream, Kotlin.Long.fromInt(header.valueTable));
    tmp$ = entries.iterator();
    while (tmp$.hasNext()) {
      var entry = tmp$.next();
      var key = readStringz(sliceWithStart(keysStream, Kotlin.Long.fromInt(entry.keyOffset)), lang.UTF8);
      var valueStream = sliceWithSize(valuesStream, Kotlin.Long.fromInt(entry.valueOffset), Kotlin.Long.fromInt(entry.valueSize));
      entry.key = key;
      tmp$_0 = entry.dataType;
      if (equals(tmp$_0, Psf$DataType$Companion_getInstance().BINARY))
        entry.value = readSlice(valueStream, Kotlin.Long.ZERO);
      else if (equals(tmp$_0, Psf$DataType$Companion_getInstance().INT))
        entry.value = readS32_le_0(valueStream);
      else if (equals(tmp$_0, Psf$DataType$Companion_getInstance().TEXT))
        entry.value = readStringz(valueStream, lang.UTF8);
      else
        invalidOp('Unknown dataType: ' + entry.dataType);
      var key_0 = entry.key;
      var value = entry.value;
      entriesByName.put_xwzc9p$(key_0, value);
    }
    this.entries = entries;
    this.entriesByName = entriesByName;
  };
  Psf.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Psf',
    interfaces: []
  };
  function Elf(stream) {
    Elf$Companion_getInstance();
    this.stream = stream;
    this.header_zcfiun$_0 = this.header_zcfiun$_0;
    this.programHeadersStream_n6lbb0$_0 = this.programHeadersStream_n6lbb0$_0;
    this.sectionHeadersStream_6tlwwz$_0 = this.sectionHeadersStream_6tlwwz$_0;
    this.programHeaders_4fs524$_0 = this.programHeaders_4fs524$_0;
    this.sectionHeaders_v8gcub$_0 = this.sectionHeaders_v8gcub$_0;
    this.sectionHeaderStringTable_p15lw3$_0 = this.sectionHeaderStringTable_p15lw3$_0;
    this.stringTableStream_bu0j0n$_0 = this.stringTableStream_bu0j0n$_0;
    this.sectionHeadersByName_tlgokb$_0 = this.sectionHeadersByName_tlgokb$_0;
  }
  function Elf$Companion() {
    Elf$Companion_instance = this;
  }
  Elf$Companion.prototype.read_39qel5$ = function (stream) {
    var $receiver = new Elf(stream);
    $receiver.read_0();
    return $receiver;
  };
  Elf$Companion.prototype.fromStream_39qel5$ = function (stream) {
    return this.read_39qel5$(stream);
  };
  Elf$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Elf$Companion_instance = null;
  function Elf$Companion_getInstance() {
    if (Elf$Companion_instance === null) {
      new Elf$Companion();
    }
    return Elf$Companion_instance;
  }
  Object.defineProperty(Elf.prototype, 'header', {
    get: function () {
      if (this.header_zcfiun$_0 == null)
        return throwUPAE('header');
      return this.header_zcfiun$_0;
    },
    set: function (header) {
      this.header_zcfiun$_0 = header;
    }
  });
  Object.defineProperty(Elf.prototype, 'programHeadersStream', {
    get: function () {
      if (this.programHeadersStream_n6lbb0$_0 == null)
        return throwUPAE('programHeadersStream');
      return this.programHeadersStream_n6lbb0$_0;
    },
    set: function (programHeadersStream) {
      this.programHeadersStream_n6lbb0$_0 = programHeadersStream;
    }
  });
  Object.defineProperty(Elf.prototype, 'sectionHeadersStream', {
    get: function () {
      if (this.sectionHeadersStream_6tlwwz$_0 == null)
        return throwUPAE('sectionHeadersStream');
      return this.sectionHeadersStream_6tlwwz$_0;
    },
    set: function (sectionHeadersStream) {
      this.sectionHeadersStream_6tlwwz$_0 = sectionHeadersStream;
    }
  });
  Object.defineProperty(Elf.prototype, 'programHeaders', {
    get: function () {
      if (this.programHeaders_4fs524$_0 == null)
        return throwUPAE('programHeaders');
      return this.programHeaders_4fs524$_0;
    },
    set: function (programHeaders) {
      this.programHeaders_4fs524$_0 = programHeaders;
    }
  });
  Object.defineProperty(Elf.prototype, 'sectionHeaders', {
    get: function () {
      if (this.sectionHeaders_v8gcub$_0 == null)
        return throwUPAE('sectionHeaders');
      return this.sectionHeaders_v8gcub$_0;
    },
    set: function (sectionHeaders) {
      this.sectionHeaders_v8gcub$_0 = sectionHeaders;
    }
  });
  Object.defineProperty(Elf.prototype, 'sectionHeaderStringTable', {
    get: function () {
      if (this.sectionHeaderStringTable_p15lw3$_0 == null)
        return throwUPAE('sectionHeaderStringTable');
      return this.sectionHeaderStringTable_p15lw3$_0;
    },
    set: function (sectionHeaderStringTable) {
      this.sectionHeaderStringTable_p15lw3$_0 = sectionHeaderStringTable;
    }
  });
  Object.defineProperty(Elf.prototype, 'stringTableStream', {
    get: function () {
      if (this.stringTableStream_bu0j0n$_0 == null)
        return throwUPAE('stringTableStream');
      return this.stringTableStream_bu0j0n$_0;
    },
    set: function (stringTableStream) {
      this.stringTableStream_bu0j0n$_0 = stringTableStream;
    }
  });
  Object.defineProperty(Elf.prototype, 'sectionHeadersByName', {
    get: function () {
      if (this.sectionHeadersByName_tlgokb$_0 == null)
        return throwUPAE('sectionHeadersByName');
      return this.sectionHeadersByName_tlgokb$_0;
    },
    set: function (sectionHeadersByName) {
      this.sectionHeadersByName_tlgokb$_0 = sectionHeadersByName;
    }
  });
  Elf.prototype.getSectionHeader_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.sectionHeadersByName.get_11rb$(name)) != null ? tmp$ : invalidOp("Can't find section header '" + name + "'");
  };
  Elf.prototype.read_0 = function () {
    var tmp$, tmp$_0;
    this.header = Elf$Header$Companion_getInstance().invoke_39qel5$(this.stream);
    this.programHeadersStream = sliceWithSize(this.stream, Kotlin.Long.fromInt(this.header.programHeaderOffset), Kotlin.Long.fromInt(Kotlin.imul(this.header.programHeaderCount, this.header.programHeaderEntrySize)));
    this.sectionHeadersStream = sliceWithSize(this.stream, Kotlin.Long.fromInt(this.header.sectionHeaderOffset), Kotlin.Long.fromInt(Kotlin.imul(this.header.sectionHeaderCount, this.header.sectionHeaderEntrySize)));
    var $receiver = until(0, this.header.programHeaderCount);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$_1;
    tmp$_1 = $receiver.iterator();
    while (tmp$_1.hasNext()) {
      var item = tmp$_1.next();
      destination.add_11rb$(ElfProgramHeader$Companion_getInstance().invoke_39qel5$(this.programHeadersStream));
    }
    this.programHeaders = destination;
    var $receiver_0 = until(0, this.header.sectionHeaderCount);
    var destination_0 = ArrayList_init(collectionSizeOrDefault($receiver_0, 10));
    var tmp$_2;
    tmp$_2 = $receiver_0.iterator();
    while (tmp$_2.hasNext()) {
      var item_0 = tmp$_2.next();
      destination_0.add_11rb$(ElfSectionHeader$Companion_getInstance().invoke_39qel5$(this.sectionHeadersStream));
    }
    this.sectionHeaders = destination_0;
    this.sectionHeaderStringTable = this.sectionHeaders.get_za3lpa$(this.header.sectionHeaderStringTable);
    this.stringTableStream = this.getSectionHeaderFileStream_0(this.sectionHeaderStringTable);
    this.sectionHeadersByName = lmapOf([]);
    tmp$ = this.sectionHeaders.iterator();
    while (tmp$.hasNext()) {
      var sectionHeader = tmp$.next();
      var name = this.getStringFromStringTable_0(sectionHeader.nameOffset);
      sectionHeader.name = name;
      if (!((tmp$_0 = sectionHeader.type) != null ? tmp$_0.equals(ElfSectionHeaderType$Companion_getInstance().Null) : null)) {
        sectionHeader.stream = this.getSectionHeaderFileStream_0(sectionHeader);
      }
      this.sectionHeadersByName.put_xwzc9p$(name, sectionHeader);
    }
  };
  Elf.prototype.getSectionHeaderFileStream_0 = function (sectionHeader) {
    var tmp$, tmp$_0;
    tmp$ = sectionHeader.type;
    if (equals(tmp$, ElfSectionHeaderType$Companion_getInstance().NoBits) || equals(tmp$, ElfSectionHeaderType$Companion_getInstance().Null))
      tmp$_0 = sliceWithSize_0(this.stream, 0, 0);
    else
      tmp$_0 = sliceWithSize(this.stream, Kotlin.Long.fromInt(sectionHeader.offset), Kotlin.Long.fromInt(sectionHeader.size));
    return tmp$_0;
  };
  Elf.prototype.getStringFromStringTable_0 = function (index) {
    this.stringTableStream.position = Kotlin.Long.fromInt(index);
    return readStringz(this.stringTableStream);
  };
  function Elf$Header(magic, clazz, data, idVersion, padding, type, machine, version, entryPoint, programHeaderOffset, sectionHeaderOffset, flags, elfHeaderSize, programHeaderEntrySize, programHeaderCount, sectionHeaderEntrySize, sectionHeaderCount, sectionHeaderStringTable) {
    Elf$Header$Companion_getInstance();
    this.magic = magic;
    this.clazz = clazz;
    this.data = data;
    this.idVersion = idVersion;
    this.padding = padding;
    this.type = type;
    this.machine = machine;
    this.version = version;
    this.entryPoint = entryPoint;
    this.programHeaderOffset = programHeaderOffset;
    this.sectionHeaderOffset = sectionHeaderOffset;
    this.flags = flags;
    this.elfHeaderSize = elfHeaderSize;
    this.programHeaderEntrySize = programHeaderEntrySize;
    this.programHeaderCount = programHeaderCount;
    this.sectionHeaderEntrySize = sectionHeaderEntrySize;
    this.sectionHeaderCount = sectionHeaderCount;
    this.sectionHeaderStringTable = sectionHeaderStringTable;
    if (!this.hasValidMagic)
      invalidOp('Not an ELF file');
    if (!this.hasValidMachine)
      invalidOp('Not a PSP ELF file');
    if (!this.hasValidType)
      invalidOp('Not a executable or a Prx but has type ' + this.type);
  }
  function Elf$Header$Companion() {
    Elf$Header$Companion_instance = this;
  }
  Elf$Header$Companion.prototype.invoke_39qel5$ = function (s) {
    var $receiver = readStringz_0(s, 4);
    if (!equals($receiver, '\x7FELF'))
      invalidOp('Not an ELF file');
    return new Elf$Header($receiver, readU8(s), readU8(s), readU8(s), readUByteArray(s, 9), readU16_le(s), readU16_le(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS16_le(s), readS16_le(s), readU16_le(s), readU16_le(s), readU16_le(s), readU16_le(s));
  };
  Elf$Header$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Elf$Header$Companion_instance = null;
  function Elf$Header$Companion_getInstance() {
    if (Elf$Header$Companion_instance === null) {
      new Elf$Header$Companion();
    }
    return Elf$Header$Companion_instance;
  }
  Object.defineProperty(Elf$Header.prototype, 'hasValidMagic', {
    get: function () {
      return equals(this.magic, '\x7FELF');
    }
  });
  Object.defineProperty(Elf$Header.prototype, 'hasValidMachine', {
    get: function () {
      return this.machine === ElfMachine$ALLEGREX_getInstance().id;
    }
  });
  Object.defineProperty(Elf$Header.prototype, 'hasValidType', {
    get: function () {
      return listOf([ElfType$Executable_getInstance().id, ElfType$Prx_getInstance().id]).contains_11rb$(this.type);
    }
  });
  Elf$Header.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Header',
    interfaces: []
  };
  Elf$Header.prototype.component1 = function () {
    return this.magic;
  };
  Elf$Header.prototype.component2 = function () {
    return this.clazz;
  };
  Elf$Header.prototype.component3 = function () {
    return this.data;
  };
  Elf$Header.prototype.component4 = function () {
    return this.idVersion;
  };
  Elf$Header.prototype.component5 = function () {
    return this.padding;
  };
  Elf$Header.prototype.component6 = function () {
    return this.type;
  };
  Elf$Header.prototype.component7 = function () {
    return this.machine;
  };
  Elf$Header.prototype.component8 = function () {
    return this.version;
  };
  Elf$Header.prototype.component9 = function () {
    return this.entryPoint;
  };
  Elf$Header.prototype.component10 = function () {
    return this.programHeaderOffset;
  };
  Elf$Header.prototype.component11 = function () {
    return this.sectionHeaderOffset;
  };
  Elf$Header.prototype.component12 = function () {
    return this.flags;
  };
  Elf$Header.prototype.component13 = function () {
    return this.elfHeaderSize;
  };
  Elf$Header.prototype.component14 = function () {
    return this.programHeaderEntrySize;
  };
  Elf$Header.prototype.component15 = function () {
    return this.programHeaderCount;
  };
  Elf$Header.prototype.component16 = function () {
    return this.sectionHeaderEntrySize;
  };
  Elf$Header.prototype.component17 = function () {
    return this.sectionHeaderCount;
  };
  Elf$Header.prototype.component18 = function () {
    return this.sectionHeaderStringTable;
  };
  Elf$Header.prototype.copy_jbxty2$ = function (magic, clazz, data, idVersion, padding, type, machine, version, entryPoint, programHeaderOffset, sectionHeaderOffset, flags, elfHeaderSize, programHeaderEntrySize, programHeaderCount, sectionHeaderEntrySize, sectionHeaderCount, sectionHeaderStringTable) {
    return new Elf$Header(magic === void 0 ? this.magic : magic, clazz === void 0 ? this.clazz : clazz, data === void 0 ? this.data : data, idVersion === void 0 ? this.idVersion : idVersion, padding === void 0 ? this.padding : padding, type === void 0 ? this.type : type, machine === void 0 ? this.machine : machine, version === void 0 ? this.version : version, entryPoint === void 0 ? this.entryPoint : entryPoint, programHeaderOffset === void 0 ? this.programHeaderOffset : programHeaderOffset, sectionHeaderOffset === void 0 ? this.sectionHeaderOffset : sectionHeaderOffset, flags === void 0 ? this.flags : flags, elfHeaderSize === void 0 ? this.elfHeaderSize : elfHeaderSize, programHeaderEntrySize === void 0 ? this.programHeaderEntrySize : programHeaderEntrySize, programHeaderCount === void 0 ? this.programHeaderCount : programHeaderCount, sectionHeaderEntrySize === void 0 ? this.sectionHeaderEntrySize : sectionHeaderEntrySize, sectionHeaderCount === void 0 ? this.sectionHeaderCount : sectionHeaderCount, sectionHeaderStringTable === void 0 ? this.sectionHeaderStringTable : sectionHeaderStringTable);
  };
  Elf$Header.prototype.toString = function () {
    return 'Header(magic=' + Kotlin.toString(this.magic) + (', clazz=' + Kotlin.toString(this.clazz)) + (', data=' + Kotlin.toString(this.data)) + (', idVersion=' + Kotlin.toString(this.idVersion)) + (', padding=' + Kotlin.toString(this.padding)) + (', type=' + Kotlin.toString(this.type)) + (', machine=' + Kotlin.toString(this.machine)) + (', version=' + Kotlin.toString(this.version)) + (', entryPoint=' + Kotlin.toString(this.entryPoint)) + (', programHeaderOffset=' + Kotlin.toString(this.programHeaderOffset)) + (', sectionHeaderOffset=' + Kotlin.toString(this.sectionHeaderOffset)) + (', flags=' + Kotlin.toString(this.flags)) + (', elfHeaderSize=' + Kotlin.toString(this.elfHeaderSize)) + (', programHeaderEntrySize=' + Kotlin.toString(this.programHeaderEntrySize)) + (', programHeaderCount=' + Kotlin.toString(this.programHeaderCount)) + (', sectionHeaderEntrySize=' + Kotlin.toString(this.sectionHeaderEntrySize)) + (', sectionHeaderCount=' + Kotlin.toString(this.sectionHeaderCount)) + (', sectionHeaderStringTable=' + Kotlin.toString(this.sectionHeaderStringTable)) + ')';
  };
  Elf$Header.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.magic) | 0;
    result = result * 31 + Kotlin.hashCode(this.clazz) | 0;
    result = result * 31 + Kotlin.hashCode(this.data) | 0;
    result = result * 31 + Kotlin.hashCode(this.idVersion) | 0;
    result = result * 31 + Kotlin.hashCode(this.padding) | 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    result = result * 31 + Kotlin.hashCode(this.machine) | 0;
    result = result * 31 + Kotlin.hashCode(this.version) | 0;
    result = result * 31 + Kotlin.hashCode(this.entryPoint) | 0;
    result = result * 31 + Kotlin.hashCode(this.programHeaderOffset) | 0;
    result = result * 31 + Kotlin.hashCode(this.sectionHeaderOffset) | 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    result = result * 31 + Kotlin.hashCode(this.elfHeaderSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.programHeaderEntrySize) | 0;
    result = result * 31 + Kotlin.hashCode(this.programHeaderCount) | 0;
    result = result * 31 + Kotlin.hashCode(this.sectionHeaderEntrySize) | 0;
    result = result * 31 + Kotlin.hashCode(this.sectionHeaderCount) | 0;
    result = result * 31 + Kotlin.hashCode(this.sectionHeaderStringTable) | 0;
    return result;
  };
  Elf$Header.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.magic, other.magic) && Kotlin.equals(this.clazz, other.clazz) && Kotlin.equals(this.data, other.data) && Kotlin.equals(this.idVersion, other.idVersion) && Kotlin.equals(this.padding, other.padding) && Kotlin.equals(this.type, other.type) && Kotlin.equals(this.machine, other.machine) && Kotlin.equals(this.version, other.version) && Kotlin.equals(this.entryPoint, other.entryPoint) && Kotlin.equals(this.programHeaderOffset, other.programHeaderOffset) && Kotlin.equals(this.sectionHeaderOffset, other.sectionHeaderOffset) && Kotlin.equals(this.flags, other.flags) && Kotlin.equals(this.elfHeaderSize, other.elfHeaderSize) && Kotlin.equals(this.programHeaderEntrySize, other.programHeaderEntrySize) && Kotlin.equals(this.programHeaderCount, other.programHeaderCount) && Kotlin.equals(this.sectionHeaderEntrySize, other.sectionHeaderEntrySize) && Kotlin.equals(this.sectionHeaderCount, other.sectionHeaderCount) && Kotlin.equals(this.sectionHeaderStringTable, other.sectionHeaderStringTable)))));
  };
  Object.defineProperty(Elf.prototype, 'isPrx', {
    get: function () {
      return (this.header.type & ElfType$Prx_getInstance().id) !== 0;
    }
  });
  Object.defineProperty(Elf.prototype, 'needsRelocation', {
    get: function () {
      return this.isPrx || this.header.entryPoint < Memory$Companion_getInstance().MAIN_OFFSET;
    }
  });
  Elf.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Elf',
    interfaces: []
  };
  function ElfProgramHeaderType(id) {
    ElfProgramHeaderType$Companion_getInstance();
    this.id_pw4186$_0 = id;
  }
  Object.defineProperty(ElfProgramHeaderType.prototype, 'id', {
    get: function () {
      return this.id_pw4186$_0;
    }
  });
  function ElfProgramHeaderType$Companion() {
    ElfProgramHeaderType$Companion_instance = this;
    this.NoLoad = new ElfProgramHeaderType(0);
    this.Load = new ElfProgramHeaderType(1);
    this.Reloc1 = new ElfProgramHeaderType(1879048352);
    this.Reloc2 = new ElfProgramHeaderType(1879048353);
  }
  ElfProgramHeaderType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfProgramHeaderType$Companion_instance = null;
  function ElfProgramHeaderType$Companion_getInstance() {
    if (ElfProgramHeaderType$Companion_instance === null) {
      new ElfProgramHeaderType$Companion();
    }
    return ElfProgramHeaderType$Companion_instance;
  }
  ElfProgramHeaderType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfProgramHeaderType',
    interfaces: [Flags]
  };
  ElfProgramHeaderType.prototype.component1 = function () {
    return this.id;
  };
  ElfProgramHeaderType.prototype.copy_za3lpa$ = function (id) {
    return new ElfProgramHeaderType(id === void 0 ? this.id : id);
  };
  ElfProgramHeaderType.prototype.toString = function () {
    return 'ElfProgramHeaderType(id=' + Kotlin.toString(this.id) + ')';
  };
  ElfProgramHeaderType.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  ElfProgramHeaderType.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function ElfSectionHeaderType(id) {
    ElfSectionHeaderType$Companion_getInstance();
    this.id_f4ssiz$_0 = id;
  }
  Object.defineProperty(ElfSectionHeaderType.prototype, 'id', {
    get: function () {
      return this.id_f4ssiz$_0;
    }
  });
  function ElfSectionHeaderType$Companion() {
    ElfSectionHeaderType$Companion_instance = this;
    this.Null = new ElfSectionHeaderType(0);
    this.ProgramBits = new ElfSectionHeaderType(1);
    this.SYMTAB = new ElfSectionHeaderType(2);
    this.STRTAB = new ElfSectionHeaderType(3);
    this.RELA = new ElfSectionHeaderType(4);
    this.HASH = new ElfSectionHeaderType(5);
    this.DYNAMIC = new ElfSectionHeaderType(6);
    this.NOTE = new ElfSectionHeaderType(7);
    this.NoBits = new ElfSectionHeaderType(8);
    this.Relocation = new ElfSectionHeaderType(9);
    this.SHLIB = new ElfSectionHeaderType(10);
    this.DYNSYM = new ElfSectionHeaderType(11);
    this.LOPROC = new ElfSectionHeaderType(1879048192);
    this.HIPROC = new ElfSectionHeaderType(2147483647);
    this.LOUSER = new ElfSectionHeaderType((new Kotlin.Long(-2147483648, 0)).toInt());
    this.HIUSER = new ElfSectionHeaderType((new Kotlin.Long(-1, 0)).toInt());
    this.PrxRelocation = new ElfSectionHeaderType(this.LOPROC.id | 160);
    this.PrxRelocation_FW5 = new ElfSectionHeaderType(this.LOPROC.id | 161);
  }
  ElfSectionHeaderType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfSectionHeaderType$Companion_instance = null;
  function ElfSectionHeaderType$Companion_getInstance() {
    if (ElfSectionHeaderType$Companion_instance === null) {
      new ElfSectionHeaderType$Companion();
    }
    return ElfSectionHeaderType$Companion_instance;
  }
  ElfSectionHeaderType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfSectionHeaderType',
    interfaces: [Flags]
  };
  ElfSectionHeaderType.prototype.component1 = function () {
    return this.id;
  };
  ElfSectionHeaderType.prototype.copy_za3lpa$ = function (id) {
    return new ElfSectionHeaderType(id === void 0 ? this.id : id);
  };
  ElfSectionHeaderType.prototype.toString = function () {
    return 'ElfSectionHeaderType(id=' + Kotlin.toString(this.id) + ')';
  };
  ElfSectionHeaderType.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  ElfSectionHeaderType.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function ElfSectionHeaderFlags(id) {
    ElfSectionHeaderFlags$Companion_getInstance();
    this.id_altqm0$_0 = id;
  }
  Object.defineProperty(ElfSectionHeaderFlags.prototype, 'id', {
    get: function () {
      return this.id_altqm0$_0;
    }
  });
  function ElfSectionHeaderFlags$Companion() {
    ElfSectionHeaderFlags$Companion_instance = this;
    this.None = new ElfSectionHeaderFlags(0);
    this.Write = new ElfSectionHeaderFlags(1);
    this.Allocate = new ElfSectionHeaderFlags(2);
    this.Execute = new ElfSectionHeaderFlags(4);
  }
  ElfSectionHeaderFlags$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfSectionHeaderFlags$Companion_instance = null;
  function ElfSectionHeaderFlags$Companion_getInstance() {
    if (ElfSectionHeaderFlags$Companion_instance === null) {
      new ElfSectionHeaderFlags$Companion();
    }
    return ElfSectionHeaderFlags$Companion_instance;
  }
  ElfSectionHeaderFlags.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfSectionHeaderFlags',
    interfaces: [Flags]
  };
  ElfSectionHeaderFlags.prototype.component1 = function () {
    return this.id;
  };
  ElfSectionHeaderFlags.prototype.copy_za3lpa$ = function (id) {
    return new ElfSectionHeaderFlags(id === void 0 ? this.id : id);
  };
  ElfSectionHeaderFlags.prototype.toString = function () {
    return 'ElfSectionHeaderFlags(id=' + Kotlin.toString(this.id) + ')';
  };
  ElfSectionHeaderFlags.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  ElfSectionHeaderFlags.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function ElfProgramHeaderFlags(id) {
    ElfProgramHeaderFlags$Companion_getInstance();
    this.id = id;
  }
  function ElfProgramHeaderFlags$Companion() {
    ElfProgramHeaderFlags$Companion_instance = this;
    this.Executable = 1;
    this.Writable = 2;
    this.Readable = 4;
  }
  ElfProgramHeaderFlags$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfProgramHeaderFlags$Companion_instance = null;
  function ElfProgramHeaderFlags$Companion_getInstance() {
    if (ElfProgramHeaderFlags$Companion_instance === null) {
      new ElfProgramHeaderFlags$Companion();
    }
    return ElfProgramHeaderFlags$Companion_instance;
  }
  ElfProgramHeaderFlags.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfProgramHeaderFlags',
    interfaces: []
  };
  ElfProgramHeaderFlags.prototype.component1 = function () {
    return this.id;
  };
  ElfProgramHeaderFlags.prototype.copy_za3lpa$ = function (id) {
    return new ElfProgramHeaderFlags(id === void 0 ? this.id : id);
  };
  ElfProgramHeaderFlags.prototype.toString = function () {
    return 'ElfProgramHeaderFlags(id=' + Kotlin.toString(this.id) + ')';
  };
  ElfProgramHeaderFlags.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  ElfProgramHeaderFlags.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function ElfType(name, ordinal, id) {
    Enum.call(this);
    this.id_ywd483$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ElfType_initFields() {
    ElfType_initFields = function () {
    };
    ElfType$Executable_instance = new ElfType('Executable', 0, 2);
    ElfType$Prx_instance = new ElfType('Prx', 1, 65440);
    ElfType$Companion_getInstance();
  }
  Object.defineProperty(ElfType.prototype, 'id', {
    get: function () {
      return this.id_ywd483$_0;
    }
  });
  var ElfType$Executable_instance;
  function ElfType$Executable_getInstance() {
    ElfType_initFields();
    return ElfType$Executable_instance;
  }
  var ElfType$Prx_instance;
  function ElfType$Prx_getInstance() {
    ElfType_initFields();
    return ElfType$Prx_instance;
  }
  function ElfType$Companion() {
    ElfType$Companion_instance = this;
    var $receiver = ElfType$values();
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.id, item));
    }
    this.BY_ID = toMap(destination);
  }
  ElfType$Companion.prototype.invoke_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this.BY_ID.get_11rb$(index)) != null ? tmp$ : invalidOp("Can't find index " + index + ' in class');
  };
  ElfType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfType$Companion_instance = null;
  function ElfType$Companion_getInstance() {
    ElfType_initFields();
    if (ElfType$Companion_instance === null) {
      new ElfType$Companion();
    }
    return ElfType$Companion_instance;
  }
  ElfType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfType',
    interfaces: [NumericEnum_0, Enum]
  };
  function ElfType$values() {
    return [ElfType$Executable_getInstance(), ElfType$Prx_getInstance()];
  }
  ElfType.values = ElfType$values;
  function ElfType$valueOf(name) {
    switch (name) {
      case 'Executable':
        return ElfType$Executable_getInstance();
      case 'Prx':
        return ElfType$Prx_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.format.elf.ElfType.' + name);
    }
  }
  ElfType.valueOf_61zpoe$ = ElfType$valueOf;
  function ElfMachine(name, ordinal, id) {
    Enum.call(this);
    this.id_1aklmi$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ElfMachine_initFields() {
    ElfMachine_initFields = function () {
    };
    ElfMachine$ALLEGREX_instance = new ElfMachine('ALLEGREX', 0, 8);
    ElfMachine$Companion_getInstance();
  }
  Object.defineProperty(ElfMachine.prototype, 'id', {
    get: function () {
      return this.id_1aklmi$_0;
    }
  });
  var ElfMachine$ALLEGREX_instance;
  function ElfMachine$ALLEGREX_getInstance() {
    ElfMachine_initFields();
    return ElfMachine$ALLEGREX_instance;
  }
  function ElfMachine$Companion() {
    ElfMachine$Companion_instance = this;
    var $receiver = ElfMachine$values();
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.id, item));
    }
    this.BY_ID = toMap(destination);
  }
  ElfMachine$Companion.prototype.invoke_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this.BY_ID.get_11rb$(index)) != null ? tmp$ : invalidOp("Can't find index " + index + ' in class');
  };
  ElfMachine$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfMachine$Companion_instance = null;
  function ElfMachine$Companion_getInstance() {
    ElfMachine_initFields();
    if (ElfMachine$Companion_instance === null) {
      new ElfMachine$Companion();
    }
    return ElfMachine$Companion_instance;
  }
  ElfMachine.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfMachine',
    interfaces: [NumericEnum_0, Enum]
  };
  function ElfMachine$values() {
    return [ElfMachine$ALLEGREX_getInstance()];
  }
  ElfMachine.values = ElfMachine$values;
  function ElfMachine$valueOf(name) {
    switch (name) {
      case 'ALLEGREX':
        return ElfMachine$ALLEGREX_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.format.elf.ElfMachine.' + name);
    }
  }
  ElfMachine.valueOf_61zpoe$ = ElfMachine$valueOf;
  function ElfPspModuleFlags(name, ordinal, id) {
    Enum.call(this);
    this.id_zh8gh$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ElfPspModuleFlags_initFields() {
    ElfPspModuleFlags_initFields = function () {
    };
    ElfPspModuleFlags$User_instance = new ElfPspModuleFlags('User', 0, 0);
    ElfPspModuleFlags$Kernel_instance = new ElfPspModuleFlags('Kernel', 1, 4096);
    ElfPspModuleFlags$Companion_getInstance();
  }
  Object.defineProperty(ElfPspModuleFlags.prototype, 'id', {
    get: function () {
      return this.id_zh8gh$_0;
    }
  });
  var ElfPspModuleFlags$User_instance;
  function ElfPspModuleFlags$User_getInstance() {
    ElfPspModuleFlags_initFields();
    return ElfPspModuleFlags$User_instance;
  }
  var ElfPspModuleFlags$Kernel_instance;
  function ElfPspModuleFlags$Kernel_getInstance() {
    ElfPspModuleFlags_initFields();
    return ElfPspModuleFlags$Kernel_instance;
  }
  function ElfPspModuleFlags$Companion() {
    ElfPspModuleFlags$Companion_instance = this;
    var $receiver = ElfPspModuleFlags$values();
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.id, item));
    }
    this.BY_ID = toMap(destination);
  }
  ElfPspModuleFlags$Companion.prototype.invoke_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this.BY_ID.get_11rb$(index)) != null ? tmp$ : invalidOp("Can't find index " + index + ' in class');
  };
  ElfPspModuleFlags$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfPspModuleFlags$Companion_instance = null;
  function ElfPspModuleFlags$Companion_getInstance() {
    ElfPspModuleFlags_initFields();
    if (ElfPspModuleFlags$Companion_instance === null) {
      new ElfPspModuleFlags$Companion();
    }
    return ElfPspModuleFlags$Companion_instance;
  }
  ElfPspModuleFlags.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfPspModuleFlags',
    interfaces: [NumericEnum_0, Enum]
  };
  function ElfPspModuleFlags$values() {
    return [ElfPspModuleFlags$User_getInstance(), ElfPspModuleFlags$Kernel_getInstance()];
  }
  ElfPspModuleFlags.values = ElfPspModuleFlags$values;
  function ElfPspModuleFlags$valueOf(name) {
    switch (name) {
      case 'User':
        return ElfPspModuleFlags$User_getInstance();
      case 'Kernel':
        return ElfPspModuleFlags$Kernel_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.format.elf.ElfPspModuleFlags.' + name);
    }
  }
  ElfPspModuleFlags.valueOf_61zpoe$ = ElfPspModuleFlags$valueOf;
  function ElfPspLibFlags(name, ordinal, id) {
    Enum.call(this);
    this.id_t9xycu$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ElfPspLibFlags_initFields() {
    ElfPspLibFlags_initFields = function () {
    };
    ElfPspLibFlags$DirectJump_instance = new ElfPspLibFlags('DirectJump', 0, 1);
    ElfPspLibFlags$Syscall_instance = new ElfPspLibFlags('Syscall', 1, 16384);
    ElfPspLibFlags$SysLib_instance = new ElfPspLibFlags('SysLib', 2, 32768);
    ElfPspLibFlags$Companion_getInstance();
  }
  Object.defineProperty(ElfPspLibFlags.prototype, 'id', {
    get: function () {
      return this.id_t9xycu$_0;
    }
  });
  var ElfPspLibFlags$DirectJump_instance;
  function ElfPspLibFlags$DirectJump_getInstance() {
    ElfPspLibFlags_initFields();
    return ElfPspLibFlags$DirectJump_instance;
  }
  var ElfPspLibFlags$Syscall_instance;
  function ElfPspLibFlags$Syscall_getInstance() {
    ElfPspLibFlags_initFields();
    return ElfPspLibFlags$Syscall_instance;
  }
  var ElfPspLibFlags$SysLib_instance;
  function ElfPspLibFlags$SysLib_getInstance() {
    ElfPspLibFlags_initFields();
    return ElfPspLibFlags$SysLib_instance;
  }
  function ElfPspLibFlags$Companion() {
    ElfPspLibFlags$Companion_instance = this;
    var $receiver = ElfPspLibFlags$values();
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.id, item));
    }
    this.BY_ID = toMap(destination);
  }
  ElfPspLibFlags$Companion.prototype.invoke_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this.BY_ID.get_11rb$(index)) != null ? tmp$ : invalidOp("Can't find index " + index + ' in class');
  };
  ElfPspLibFlags$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfPspLibFlags$Companion_instance = null;
  function ElfPspLibFlags$Companion_getInstance() {
    ElfPspLibFlags_initFields();
    if (ElfPspLibFlags$Companion_instance === null) {
      new ElfPspLibFlags$Companion();
    }
    return ElfPspLibFlags$Companion_instance;
  }
  ElfPspLibFlags.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfPspLibFlags',
    interfaces: [NumericEnum_0, Enum]
  };
  function ElfPspLibFlags$values() {
    return [ElfPspLibFlags$DirectJump_getInstance(), ElfPspLibFlags$Syscall_getInstance(), ElfPspLibFlags$SysLib_getInstance()];
  }
  ElfPspLibFlags.values = ElfPspLibFlags$values;
  function ElfPspLibFlags$valueOf(name) {
    switch (name) {
      case 'DirectJump':
        return ElfPspLibFlags$DirectJump_getInstance();
      case 'Syscall':
        return ElfPspLibFlags$Syscall_getInstance();
      case 'SysLib':
        return ElfPspLibFlags$SysLib_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.format.elf.ElfPspLibFlags.' + name);
    }
  }
  ElfPspLibFlags.valueOf_61zpoe$ = ElfPspLibFlags$valueOf;
  function ElfPspModuleNids(name, ordinal, id) {
    Enum.call(this);
    this.id_u1uq9u$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ElfPspModuleNids_initFields() {
    ElfPspModuleNids_initFields = function () {
    };
    ElfPspModuleNids$MODULE_INFO_instance = new ElfPspModuleNids('MODULE_INFO', 0, (new Kotlin.Long(-266505305, 0)).toInt());
    ElfPspModuleNids$MODULE_BOOTSTART_instance = new ElfPspModuleNids('MODULE_BOOTSTART', 1, (new Kotlin.Long(-747353120, 0)).toInt());
    ElfPspModuleNids$MODULE_REBOOT_BEFORE_instance = new ElfPspModuleNids('MODULE_REBOOT_BEFORE', 2, 788942758);
    ElfPspModuleNids$MODULE_START_instance = new ElfPspModuleNids('MODULE_START', 3, (new Kotlin.Long(-701322021, 0)).toInt());
    ElfPspModuleNids$MODULE_START_THREAD_PARAMETER_instance = new ElfPspModuleNids('MODULE_START_THREAD_PARAMETER', 4, 259794796);
    ElfPspModuleNids$MODULE_STOP_instance = new ElfPspModuleNids('MODULE_STOP', 5, (new Kotlin.Long(-823633604, 0)).toInt());
    ElfPspModuleNids$MODULE_STOP_THREAD_PARAMETER_instance = new ElfPspModuleNids('MODULE_STOP_THREAD_PARAMETER', 6, (new Kotlin.Long(-821246313, 0)).toInt());
    ElfPspModuleNids$Companion_getInstance();
  }
  Object.defineProperty(ElfPspModuleNids.prototype, 'id', {
    get: function () {
      return this.id_u1uq9u$_0;
    }
  });
  var ElfPspModuleNids$MODULE_INFO_instance;
  function ElfPspModuleNids$MODULE_INFO_getInstance() {
    ElfPspModuleNids_initFields();
    return ElfPspModuleNids$MODULE_INFO_instance;
  }
  var ElfPspModuleNids$MODULE_BOOTSTART_instance;
  function ElfPspModuleNids$MODULE_BOOTSTART_getInstance() {
    ElfPspModuleNids_initFields();
    return ElfPspModuleNids$MODULE_BOOTSTART_instance;
  }
  var ElfPspModuleNids$MODULE_REBOOT_BEFORE_instance;
  function ElfPspModuleNids$MODULE_REBOOT_BEFORE_getInstance() {
    ElfPspModuleNids_initFields();
    return ElfPspModuleNids$MODULE_REBOOT_BEFORE_instance;
  }
  var ElfPspModuleNids$MODULE_START_instance;
  function ElfPspModuleNids$MODULE_START_getInstance() {
    ElfPspModuleNids_initFields();
    return ElfPspModuleNids$MODULE_START_instance;
  }
  var ElfPspModuleNids$MODULE_START_THREAD_PARAMETER_instance;
  function ElfPspModuleNids$MODULE_START_THREAD_PARAMETER_getInstance() {
    ElfPspModuleNids_initFields();
    return ElfPspModuleNids$MODULE_START_THREAD_PARAMETER_instance;
  }
  var ElfPspModuleNids$MODULE_STOP_instance;
  function ElfPspModuleNids$MODULE_STOP_getInstance() {
    ElfPspModuleNids_initFields();
    return ElfPspModuleNids$MODULE_STOP_instance;
  }
  var ElfPspModuleNids$MODULE_STOP_THREAD_PARAMETER_instance;
  function ElfPspModuleNids$MODULE_STOP_THREAD_PARAMETER_getInstance() {
    ElfPspModuleNids_initFields();
    return ElfPspModuleNids$MODULE_STOP_THREAD_PARAMETER_instance;
  }
  function ElfPspModuleNids$Companion() {
    ElfPspModuleNids$Companion_instance = this;
    var $receiver = ElfPspModuleNids$values();
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.id, item));
    }
    this.BY_ID = toMap(destination);
  }
  ElfPspModuleNids$Companion.prototype.invoke_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this.BY_ID.get_11rb$(index)) != null ? tmp$ : invalidOp("Can't find index " + index + ' in class');
  };
  ElfPspModuleNids$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfPspModuleNids$Companion_instance = null;
  function ElfPspModuleNids$Companion_getInstance() {
    ElfPspModuleNids_initFields();
    if (ElfPspModuleNids$Companion_instance === null) {
      new ElfPspModuleNids$Companion();
    }
    return ElfPspModuleNids$Companion_instance;
  }
  ElfPspModuleNids.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfPspModuleNids',
    interfaces: [NumericEnum_0, Enum]
  };
  function ElfPspModuleNids$values() {
    return [ElfPspModuleNids$MODULE_INFO_getInstance(), ElfPspModuleNids$MODULE_BOOTSTART_getInstance(), ElfPspModuleNids$MODULE_REBOOT_BEFORE_getInstance(), ElfPspModuleNids$MODULE_START_getInstance(), ElfPspModuleNids$MODULE_START_THREAD_PARAMETER_getInstance(), ElfPspModuleNids$MODULE_STOP_getInstance(), ElfPspModuleNids$MODULE_STOP_THREAD_PARAMETER_getInstance()];
  }
  ElfPspModuleNids.values = ElfPspModuleNids$values;
  function ElfPspModuleNids$valueOf(name) {
    switch (name) {
      case 'MODULE_INFO':
        return ElfPspModuleNids$MODULE_INFO_getInstance();
      case 'MODULE_BOOTSTART':
        return ElfPspModuleNids$MODULE_BOOTSTART_getInstance();
      case 'MODULE_REBOOT_BEFORE':
        return ElfPspModuleNids$MODULE_REBOOT_BEFORE_getInstance();
      case 'MODULE_START':
        return ElfPspModuleNids$MODULE_START_getInstance();
      case 'MODULE_START_THREAD_PARAMETER':
        return ElfPspModuleNids$MODULE_START_THREAD_PARAMETER_getInstance();
      case 'MODULE_STOP':
        return ElfPspModuleNids$MODULE_STOP_getInstance();
      case 'MODULE_STOP_THREAD_PARAMETER':
        return ElfPspModuleNids$MODULE_STOP_THREAD_PARAMETER_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.format.elf.ElfPspModuleNids.' + name);
    }
  }
  ElfPspModuleNids.valueOf_61zpoe$ = ElfPspModuleNids$valueOf;
  function ElfRelocType(name, ordinal, id) {
    Enum.call(this);
    this.id_ipmbzu$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ElfRelocType_initFields() {
    ElfRelocType_initFields = function () {
    };
    ElfRelocType$None_instance = new ElfRelocType('None', 0, 0);
    ElfRelocType$Mips16_instance = new ElfRelocType('Mips16', 1, 1);
    ElfRelocType$Mips32_instance = new ElfRelocType('Mips32', 2, 2);
    ElfRelocType$MipsRel32_instance = new ElfRelocType('MipsRel32', 3, 3);
    ElfRelocType$Mips26_instance = new ElfRelocType('Mips26', 4, 4);
    ElfRelocType$MipsHi16_instance = new ElfRelocType('MipsHi16', 5, 5);
    ElfRelocType$MipsLo16_instance = new ElfRelocType('MipsLo16', 6, 6);
    ElfRelocType$MipsGpRel16_instance = new ElfRelocType('MipsGpRel16', 7, 7);
    ElfRelocType$MipsLiteral_instance = new ElfRelocType('MipsLiteral', 8, 8);
    ElfRelocType$MipsGot16_instance = new ElfRelocType('MipsGot16', 9, 9);
    ElfRelocType$MipsPc16_instance = new ElfRelocType('MipsPc16', 10, 10);
    ElfRelocType$MipsCall16_instance = new ElfRelocType('MipsCall16', 11, 11);
    ElfRelocType$MipsGpRel32_instance = new ElfRelocType('MipsGpRel32', 12, 12);
    ElfRelocType$StopRelocation_instance = new ElfRelocType('StopRelocation', 13, 255);
    ElfRelocType$Companion_getInstance();
  }
  Object.defineProperty(ElfRelocType.prototype, 'id', {
    get: function () {
      return this.id_ipmbzu$_0;
    }
  });
  var ElfRelocType$None_instance;
  function ElfRelocType$None_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$None_instance;
  }
  var ElfRelocType$Mips16_instance;
  function ElfRelocType$Mips16_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$Mips16_instance;
  }
  var ElfRelocType$Mips32_instance;
  function ElfRelocType$Mips32_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$Mips32_instance;
  }
  var ElfRelocType$MipsRel32_instance;
  function ElfRelocType$MipsRel32_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsRel32_instance;
  }
  var ElfRelocType$Mips26_instance;
  function ElfRelocType$Mips26_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$Mips26_instance;
  }
  var ElfRelocType$MipsHi16_instance;
  function ElfRelocType$MipsHi16_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsHi16_instance;
  }
  var ElfRelocType$MipsLo16_instance;
  function ElfRelocType$MipsLo16_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsLo16_instance;
  }
  var ElfRelocType$MipsGpRel16_instance;
  function ElfRelocType$MipsGpRel16_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsGpRel16_instance;
  }
  var ElfRelocType$MipsLiteral_instance;
  function ElfRelocType$MipsLiteral_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsLiteral_instance;
  }
  var ElfRelocType$MipsGot16_instance;
  function ElfRelocType$MipsGot16_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsGot16_instance;
  }
  var ElfRelocType$MipsPc16_instance;
  function ElfRelocType$MipsPc16_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsPc16_instance;
  }
  var ElfRelocType$MipsCall16_instance;
  function ElfRelocType$MipsCall16_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsCall16_instance;
  }
  var ElfRelocType$MipsGpRel32_instance;
  function ElfRelocType$MipsGpRel32_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsGpRel32_instance;
  }
  var ElfRelocType$StopRelocation_instance;
  function ElfRelocType$StopRelocation_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$StopRelocation_instance;
  }
  function ElfRelocType$Companion() {
    ElfRelocType$Companion_instance = this;
    var $receiver = ElfRelocType$values();
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.id, item));
    }
    this.BY_ID = toMap(destination);
  }
  ElfRelocType$Companion.prototype.invoke_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this.BY_ID.get_11rb$(index)) != null ? tmp$ : invalidOp("Can't find index " + index + ' in class');
  };
  ElfRelocType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfRelocType$Companion_instance = null;
  function ElfRelocType$Companion_getInstance() {
    ElfRelocType_initFields();
    if (ElfRelocType$Companion_instance === null) {
      new ElfRelocType$Companion();
    }
    return ElfRelocType$Companion_instance;
  }
  ElfRelocType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfRelocType',
    interfaces: [NumericEnum_0, Enum]
  };
  function ElfRelocType$values() {
    return [ElfRelocType$None_getInstance(), ElfRelocType$Mips16_getInstance(), ElfRelocType$Mips32_getInstance(), ElfRelocType$MipsRel32_getInstance(), ElfRelocType$Mips26_getInstance(), ElfRelocType$MipsHi16_getInstance(), ElfRelocType$MipsLo16_getInstance(), ElfRelocType$MipsGpRel16_getInstance(), ElfRelocType$MipsLiteral_getInstance(), ElfRelocType$MipsGot16_getInstance(), ElfRelocType$MipsPc16_getInstance(), ElfRelocType$MipsCall16_getInstance(), ElfRelocType$MipsGpRel32_getInstance(), ElfRelocType$StopRelocation_getInstance()];
  }
  ElfRelocType.values = ElfRelocType$values;
  function ElfRelocType$valueOf(name) {
    switch (name) {
      case 'None':
        return ElfRelocType$None_getInstance();
      case 'Mips16':
        return ElfRelocType$Mips16_getInstance();
      case 'Mips32':
        return ElfRelocType$Mips32_getInstance();
      case 'MipsRel32':
        return ElfRelocType$MipsRel32_getInstance();
      case 'Mips26':
        return ElfRelocType$Mips26_getInstance();
      case 'MipsHi16':
        return ElfRelocType$MipsHi16_getInstance();
      case 'MipsLo16':
        return ElfRelocType$MipsLo16_getInstance();
      case 'MipsGpRel16':
        return ElfRelocType$MipsGpRel16_getInstance();
      case 'MipsLiteral':
        return ElfRelocType$MipsLiteral_getInstance();
      case 'MipsGot16':
        return ElfRelocType$MipsGot16_getInstance();
      case 'MipsPc16':
        return ElfRelocType$MipsPc16_getInstance();
      case 'MipsCall16':
        return ElfRelocType$MipsCall16_getInstance();
      case 'MipsGpRel32':
        return ElfRelocType$MipsGpRel32_getInstance();
      case 'StopRelocation':
        return ElfRelocType$StopRelocation_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.format.elf.ElfRelocType.' + name);
    }
  }
  ElfRelocType.valueOf_61zpoe$ = ElfRelocType$valueOf;
  function ElfReloc(pointerAddress, info) {
    ElfReloc$Companion_getInstance();
    this.pointerAddress = pointerAddress;
    this.info = info;
  }
  Object.defineProperty(ElfReloc.prototype, 'pointeeSectionHeaderBase', {
    get: function () {
      return this.info >>> 16 & 255;
    }
  });
  Object.defineProperty(ElfReloc.prototype, 'pointerSectionHeaderBase', {
    get: function () {
      return this.info >>> 8 & 255;
    }
  });
  Object.defineProperty(ElfReloc.prototype, 'type', {
    get: function () {
      return ElfRelocType$Companion_getInstance().invoke_za3lpa$(this.info >>> 0 & 255);
    }
  });
  function ElfReloc$Companion() {
    ElfReloc$Companion_instance = this;
    this.SIZE = 8;
  }
  ElfReloc$Companion.prototype.invoke_39qel5$ = function (s) {
    return new ElfReloc(readS32_le_0(s), readS32_le_0(s));
  };
  ElfReloc$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfReloc$Companion_instance = null;
  function ElfReloc$Companion_getInstance() {
    if (ElfReloc$Companion_instance === null) {
      new ElfReloc$Companion();
    }
    return ElfReloc$Companion_instance;
  }
  ElfReloc.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfReloc',
    interfaces: []
  };
  function ElfProgramHeader(type, offset, virtualAddress, psysicalAddress, fileSize, memorySize, flags, alignment) {
    ElfProgramHeader$Companion_getInstance();
    this.type = type;
    this.offset = offset;
    this.virtualAddress = virtualAddress;
    this.psysicalAddress = psysicalAddress;
    this.fileSize = fileSize;
    this.memorySize = memorySize;
    this.flags = flags;
    this.alignment = alignment;
  }
  function ElfProgramHeader$Companion() {
    ElfProgramHeader$Companion_instance = this;
  }
  ElfProgramHeader$Companion.prototype.invoke_39qel5$ = function (s) {
    return new ElfProgramHeader(new ElfProgramHeaderType(readS32_le_0(s)), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), new ElfProgramHeaderFlags(readS32_le_0(s)), readS32_le_0(s));
  };
  ElfProgramHeader$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfProgramHeader$Companion_instance = null;
  function ElfProgramHeader$Companion_getInstance() {
    if (ElfProgramHeader$Companion_instance === null) {
      new ElfProgramHeader$Companion();
    }
    return ElfProgramHeader$Companion_instance;
  }
  ElfProgramHeader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfProgramHeader',
    interfaces: []
  };
  ElfProgramHeader.prototype.component1 = function () {
    return this.type;
  };
  ElfProgramHeader.prototype.component2 = function () {
    return this.offset;
  };
  ElfProgramHeader.prototype.component3 = function () {
    return this.virtualAddress;
  };
  ElfProgramHeader.prototype.component4 = function () {
    return this.psysicalAddress;
  };
  ElfProgramHeader.prototype.component5 = function () {
    return this.fileSize;
  };
  ElfProgramHeader.prototype.component6 = function () {
    return this.memorySize;
  };
  ElfProgramHeader.prototype.component7 = function () {
    return this.flags;
  };
  ElfProgramHeader.prototype.component8 = function () {
    return this.alignment;
  };
  ElfProgramHeader.prototype.copy_fo9t6r$ = function (type, offset, virtualAddress, psysicalAddress, fileSize, memorySize, flags, alignment) {
    return new ElfProgramHeader(type === void 0 ? this.type : type, offset === void 0 ? this.offset : offset, virtualAddress === void 0 ? this.virtualAddress : virtualAddress, psysicalAddress === void 0 ? this.psysicalAddress : psysicalAddress, fileSize === void 0 ? this.fileSize : fileSize, memorySize === void 0 ? this.memorySize : memorySize, flags === void 0 ? this.flags : flags, alignment === void 0 ? this.alignment : alignment);
  };
  ElfProgramHeader.prototype.toString = function () {
    return 'ElfProgramHeader(type=' + Kotlin.toString(this.type) + (', offset=' + Kotlin.toString(this.offset)) + (', virtualAddress=' + Kotlin.toString(this.virtualAddress)) + (', psysicalAddress=' + Kotlin.toString(this.psysicalAddress)) + (', fileSize=' + Kotlin.toString(this.fileSize)) + (', memorySize=' + Kotlin.toString(this.memorySize)) + (', flags=' + Kotlin.toString(this.flags)) + (', alignment=' + Kotlin.toString(this.alignment)) + ')';
  };
  ElfProgramHeader.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    result = result * 31 + Kotlin.hashCode(this.offset) | 0;
    result = result * 31 + Kotlin.hashCode(this.virtualAddress) | 0;
    result = result * 31 + Kotlin.hashCode(this.psysicalAddress) | 0;
    result = result * 31 + Kotlin.hashCode(this.fileSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.memorySize) | 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    result = result * 31 + Kotlin.hashCode(this.alignment) | 0;
    return result;
  };
  ElfProgramHeader.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.type, other.type) && Kotlin.equals(this.offset, other.offset) && Kotlin.equals(this.virtualAddress, other.virtualAddress) && Kotlin.equals(this.psysicalAddress, other.psysicalAddress) && Kotlin.equals(this.fileSize, other.fileSize) && Kotlin.equals(this.memorySize, other.memorySize) && Kotlin.equals(this.flags, other.flags) && Kotlin.equals(this.alignment, other.alignment)))));
  };
  function ElfSectionHeader(nameOffset, name, type, flags, address, offset, size, link, info, addressAlign, entitySize) {
    ElfSectionHeader$Companion_getInstance();
    this.nameOffset = nameOffset;
    this.name = name;
    this.type = type;
    this.flags = flags;
    this.address = address;
    this.offset = offset;
    this.size = size;
    this.link = link;
    this.info = info;
    this.addressAlign = addressAlign;
    this.entitySize = entitySize;
    this.stream_tl79o4$_0 = this.stream_tl79o4$_0;
  }
  Object.defineProperty(ElfSectionHeader.prototype, 'stream', {
    get: function () {
      if (this.stream_tl79o4$_0 == null)
        return throwUPAE('stream');
      return this.stream_tl79o4$_0;
    },
    set: function (stream) {
      this.stream_tl79o4$_0 = stream;
    }
  });
  function ElfSectionHeader$Companion() {
    ElfSectionHeader$Companion_instance = this;
  }
  ElfSectionHeader$Companion.prototype.invoke_39qel5$ = function (s) {
    return new ElfSectionHeader(readS32_le_0(s), '...', new ElfSectionHeaderType(readS32_le_0(s)), new ElfSectionHeaderFlags(readS32_le_0(s)), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s));
  };
  ElfSectionHeader$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfSectionHeader$Companion_instance = null;
  function ElfSectionHeader$Companion_getInstance() {
    if (ElfSectionHeader$Companion_instance === null) {
      new ElfSectionHeader$Companion();
    }
    return ElfSectionHeader$Companion_instance;
  }
  ElfSectionHeader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfSectionHeader',
    interfaces: []
  };
  ElfSectionHeader.prototype.component1 = function () {
    return this.nameOffset;
  };
  ElfSectionHeader.prototype.component2 = function () {
    return this.name;
  };
  ElfSectionHeader.prototype.component3 = function () {
    return this.type;
  };
  ElfSectionHeader.prototype.component4 = function () {
    return this.flags;
  };
  ElfSectionHeader.prototype.component5 = function () {
    return this.address;
  };
  ElfSectionHeader.prototype.component6 = function () {
    return this.offset;
  };
  ElfSectionHeader.prototype.component7 = function () {
    return this.size;
  };
  ElfSectionHeader.prototype.component8 = function () {
    return this.link;
  };
  ElfSectionHeader.prototype.component9 = function () {
    return this.info;
  };
  ElfSectionHeader.prototype.component10 = function () {
    return this.addressAlign;
  };
  ElfSectionHeader.prototype.component11 = function () {
    return this.entitySize;
  };
  ElfSectionHeader.prototype.copy_1jye5d$ = function (nameOffset, name, type, flags, address, offset, size, link, info, addressAlign, entitySize) {
    return new ElfSectionHeader(nameOffset === void 0 ? this.nameOffset : nameOffset, name === void 0 ? this.name : name, type === void 0 ? this.type : type, flags === void 0 ? this.flags : flags, address === void 0 ? this.address : address, offset === void 0 ? this.offset : offset, size === void 0 ? this.size : size, link === void 0 ? this.link : link, info === void 0 ? this.info : info, addressAlign === void 0 ? this.addressAlign : addressAlign, entitySize === void 0 ? this.entitySize : entitySize);
  };
  ElfSectionHeader.prototype.toString = function () {
    return 'ElfSectionHeader(nameOffset=' + Kotlin.toString(this.nameOffset) + (', name=' + Kotlin.toString(this.name)) + (', type=' + Kotlin.toString(this.type)) + (', flags=' + Kotlin.toString(this.flags)) + (', address=' + Kotlin.toString(this.address)) + (', offset=' + Kotlin.toString(this.offset)) + (', size=' + Kotlin.toString(this.size)) + (', link=' + Kotlin.toString(this.link)) + (', info=' + Kotlin.toString(this.info)) + (', addressAlign=' + Kotlin.toString(this.addressAlign)) + (', entitySize=' + Kotlin.toString(this.entitySize)) + ')';
  };
  ElfSectionHeader.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.nameOffset) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    result = result * 31 + Kotlin.hashCode(this.address) | 0;
    result = result * 31 + Kotlin.hashCode(this.offset) | 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.link) | 0;
    result = result * 31 + Kotlin.hashCode(this.info) | 0;
    result = result * 31 + Kotlin.hashCode(this.addressAlign) | 0;
    result = result * 31 + Kotlin.hashCode(this.entitySize) | 0;
    return result;
  };
  ElfSectionHeader.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.nameOffset, other.nameOffset) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.type, other.type) && Kotlin.equals(this.flags, other.flags) && Kotlin.equals(this.address, other.address) && Kotlin.equals(this.offset, other.offset) && Kotlin.equals(this.size, other.size) && Kotlin.equals(this.link, other.link) && Kotlin.equals(this.info, other.info) && Kotlin.equals(this.addressAlign, other.addressAlign) && Kotlin.equals(this.entitySize, other.entitySize)))));
  };
  function ElfDwarf() {
    this.logger = PspLogger$Companion_getInstance().invoke_61zpoe$('ElfDwarf');
  }
  ElfDwarf.prototype.parseElfLoader_xqzwj6$ = function (elfLoader) {
    this.logger.info_61zpoe$('ElfDwarfLoader.parseElfLoader: Not implemented');
  };
  ElfDwarf.prototype.getSymbolAt_za3lpa$ = function (address) {
  };
  ElfDwarf.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfDwarf',
    interfaces: []
  };
  function ElfPspModuleInfo(moduleAtributes, moduleVersion, name, GP, exportsStart, exportsEnd, importsStart, importsEnd, PC) {
    ElfPspModuleInfo$Companion_getInstance();
    if (PC === void 0)
      PC = 0;
    this.moduleAtributes = moduleAtributes;
    this.moduleVersion = moduleVersion;
    this.name = name;
    this.GP = GP;
    this.exportsStart = exportsStart;
    this.exportsEnd = exportsEnd;
    this.importsStart = importsStart;
    this.importsEnd = importsEnd;
    this.PC = PC;
  }
  function ElfPspModuleInfo$Companion() {
    ElfPspModuleInfo$Companion_instance = this;
  }
  ElfPspModuleInfo$Companion.prototype.invoke_39qel5$ = function (s) {
    return new ElfPspModuleInfo(readU16_le(s), readU16_le(s), readStringz_0(s, 28), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), 0);
  };
  ElfPspModuleInfo$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfPspModuleInfo$Companion_instance = null;
  function ElfPspModuleInfo$Companion_getInstance() {
    if (ElfPspModuleInfo$Companion_instance === null) {
      new ElfPspModuleInfo$Companion();
    }
    return ElfPspModuleInfo$Companion_instance;
  }
  ElfPspModuleInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfPspModuleInfo',
    interfaces: []
  };
  ElfPspModuleInfo.prototype.component1 = function () {
    return this.moduleAtributes;
  };
  ElfPspModuleInfo.prototype.component2 = function () {
    return this.moduleVersion;
  };
  ElfPspModuleInfo.prototype.component3 = function () {
    return this.name;
  };
  ElfPspModuleInfo.prototype.component4 = function () {
    return this.GP;
  };
  ElfPspModuleInfo.prototype.component5 = function () {
    return this.exportsStart;
  };
  ElfPspModuleInfo.prototype.component6 = function () {
    return this.exportsEnd;
  };
  ElfPspModuleInfo.prototype.component7 = function () {
    return this.importsStart;
  };
  ElfPspModuleInfo.prototype.component8 = function () {
    return this.importsEnd;
  };
  ElfPspModuleInfo.prototype.component9 = function () {
    return this.PC;
  };
  ElfPspModuleInfo.prototype.copy_qoc76$ = function (moduleAtributes, moduleVersion, name, GP, exportsStart, exportsEnd, importsStart, importsEnd, PC) {
    return new ElfPspModuleInfo(moduleAtributes === void 0 ? this.moduleAtributes : moduleAtributes, moduleVersion === void 0 ? this.moduleVersion : moduleVersion, name === void 0 ? this.name : name, GP === void 0 ? this.GP : GP, exportsStart === void 0 ? this.exportsStart : exportsStart, exportsEnd === void 0 ? this.exportsEnd : exportsEnd, importsStart === void 0 ? this.importsStart : importsStart, importsEnd === void 0 ? this.importsEnd : importsEnd, PC === void 0 ? this.PC : PC);
  };
  ElfPspModuleInfo.prototype.toString = function () {
    return 'ElfPspModuleInfo(moduleAtributes=' + Kotlin.toString(this.moduleAtributes) + (', moduleVersion=' + Kotlin.toString(this.moduleVersion)) + (', name=' + Kotlin.toString(this.name)) + (', GP=' + Kotlin.toString(this.GP)) + (', exportsStart=' + Kotlin.toString(this.exportsStart)) + (', exportsEnd=' + Kotlin.toString(this.exportsEnd)) + (', importsStart=' + Kotlin.toString(this.importsStart)) + (', importsEnd=' + Kotlin.toString(this.importsEnd)) + (', PC=' + Kotlin.toString(this.PC)) + ')';
  };
  ElfPspModuleInfo.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.moduleAtributes) | 0;
    result = result * 31 + Kotlin.hashCode(this.moduleVersion) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.GP) | 0;
    result = result * 31 + Kotlin.hashCode(this.exportsStart) | 0;
    result = result * 31 + Kotlin.hashCode(this.exportsEnd) | 0;
    result = result * 31 + Kotlin.hashCode(this.importsStart) | 0;
    result = result * 31 + Kotlin.hashCode(this.importsEnd) | 0;
    result = result * 31 + Kotlin.hashCode(this.PC) | 0;
    return result;
  };
  ElfPspModuleInfo.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.moduleAtributes, other.moduleAtributes) && Kotlin.equals(this.moduleVersion, other.moduleVersion) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.GP, other.GP) && Kotlin.equals(this.exportsStart, other.exportsStart) && Kotlin.equals(this.exportsEnd, other.exportsEnd) && Kotlin.equals(this.importsStart, other.importsStart) && Kotlin.equals(this.importsEnd, other.importsEnd) && Kotlin.equals(this.PC, other.PC)))));
  };
  function ElfPspModuleImport(nameOffset, version, flags, entrySize, functionCount, variableCount, nidAddress, callAddress) {
    ElfPspModuleImport$Companion_getInstance();
    this.nameOffset = nameOffset;
    this.version = version;
    this.flags = flags;
    this.entrySize = entrySize;
    this.functionCount = functionCount;
    this.variableCount = variableCount;
    this.nidAddress = nidAddress;
    this.callAddress = callAddress;
    this.name = '';
  }
  function ElfPspModuleImport$Companion() {
    ElfPspModuleImport$Companion_instance = this;
    this.SIZE = 20;
  }
  ElfPspModuleImport$Companion.prototype.invoke_39qel5$ = function (s) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    tmp$ = readS32_le_0(s);
    tmp$_0 = readU16_le(s);
    tmp$_1 = readU16_le(s);
    tmp$_2 = readU8(s);
    tmp$_3 = readU8(s);
    return new ElfPspModuleImport(tmp$, tmp$_0, tmp$_1, tmp$_2, readU16_le(s), tmp$_3, readS32_le_0(s), readS32_le_0(s));
  };
  ElfPspModuleImport$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfPspModuleImport$Companion_instance = null;
  function ElfPspModuleImport$Companion_getInstance() {
    if (ElfPspModuleImport$Companion_instance === null) {
      new ElfPspModuleImport$Companion();
    }
    return ElfPspModuleImport$Companion_instance;
  }
  ElfPspModuleImport.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfPspModuleImport',
    interfaces: []
  };
  ElfPspModuleImport.prototype.component1 = function () {
    return this.nameOffset;
  };
  ElfPspModuleImport.prototype.component2 = function () {
    return this.version;
  };
  ElfPspModuleImport.prototype.component3 = function () {
    return this.flags;
  };
  ElfPspModuleImport.prototype.component4 = function () {
    return this.entrySize;
  };
  ElfPspModuleImport.prototype.component5 = function () {
    return this.functionCount;
  };
  ElfPspModuleImport.prototype.component6 = function () {
    return this.variableCount;
  };
  ElfPspModuleImport.prototype.component7 = function () {
    return this.nidAddress;
  };
  ElfPspModuleImport.prototype.component8 = function () {
    return this.callAddress;
  };
  ElfPspModuleImport.prototype.copy_wrdw30$ = function (nameOffset, version, flags, entrySize, functionCount, variableCount, nidAddress, callAddress) {
    return new ElfPspModuleImport(nameOffset === void 0 ? this.nameOffset : nameOffset, version === void 0 ? this.version : version, flags === void 0 ? this.flags : flags, entrySize === void 0 ? this.entrySize : entrySize, functionCount === void 0 ? this.functionCount : functionCount, variableCount === void 0 ? this.variableCount : variableCount, nidAddress === void 0 ? this.nidAddress : nidAddress, callAddress === void 0 ? this.callAddress : callAddress);
  };
  ElfPspModuleImport.prototype.toString = function () {
    return 'ElfPspModuleImport(nameOffset=' + Kotlin.toString(this.nameOffset) + (', version=' + Kotlin.toString(this.version)) + (', flags=' + Kotlin.toString(this.flags)) + (', entrySize=' + Kotlin.toString(this.entrySize)) + (', functionCount=' + Kotlin.toString(this.functionCount)) + (', variableCount=' + Kotlin.toString(this.variableCount)) + (', nidAddress=' + Kotlin.toString(this.nidAddress)) + (', callAddress=' + Kotlin.toString(this.callAddress)) + ')';
  };
  ElfPspModuleImport.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.nameOffset) | 0;
    result = result * 31 + Kotlin.hashCode(this.version) | 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    result = result * 31 + Kotlin.hashCode(this.entrySize) | 0;
    result = result * 31 + Kotlin.hashCode(this.functionCount) | 0;
    result = result * 31 + Kotlin.hashCode(this.variableCount) | 0;
    result = result * 31 + Kotlin.hashCode(this.nidAddress) | 0;
    result = result * 31 + Kotlin.hashCode(this.callAddress) | 0;
    return result;
  };
  ElfPspModuleImport.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.nameOffset, other.nameOffset) && Kotlin.equals(this.version, other.version) && Kotlin.equals(this.flags, other.flags) && Kotlin.equals(this.entrySize, other.entrySize) && Kotlin.equals(this.functionCount, other.functionCount) && Kotlin.equals(this.variableCount, other.variableCount) && Kotlin.equals(this.nidAddress, other.nidAddress) && Kotlin.equals(this.callAddress, other.callAddress)))));
  };
  function ElfPspModuleExport(name, version, flags, entrySize, variableCount, functionCount, exports) {
    ElfPspModuleExport$Companion_getInstance();
    this.name = name;
    this.version = version;
    this.flags = flags;
    this.entrySize = entrySize;
    this.variableCount = variableCount;
    this.functionCount = functionCount;
    this.exports = exports;
  }
  function ElfPspModuleExport$Companion() {
    ElfPspModuleExport$Companion_instance = this;
  }
  ElfPspModuleExport$Companion.prototype.invoke_39qel5$ = function (s) {
    return new ElfPspModuleExport(readS32_le_0(s), readU16_le(s), readU16_le(s), readU8(s), readU8(s), readU16_le(s), readS32_le_0(s));
  };
  ElfPspModuleExport$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfPspModuleExport$Companion_instance = null;
  function ElfPspModuleExport$Companion_getInstance() {
    if (ElfPspModuleExport$Companion_instance === null) {
      new ElfPspModuleExport$Companion();
    }
    return ElfPspModuleExport$Companion_instance;
  }
  ElfPspModuleExport.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfPspModuleExport',
    interfaces: []
  };
  function ElfPspModuleInfoAtributesEnum(id) {
    ElfPspModuleInfoAtributesEnum$Companion_getInstance();
    this.id = id;
  }
  function ElfPspModuleInfoAtributesEnum$Companion() {
    ElfPspModuleInfoAtributesEnum$Companion_instance = this;
    this.UserMode = 0;
    this.KernelMode = 256;
  }
  ElfPspModuleInfoAtributesEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfPspModuleInfoAtributesEnum$Companion_instance = null;
  function ElfPspModuleInfoAtributesEnum$Companion_getInstance() {
    if (ElfPspModuleInfoAtributesEnum$Companion_instance === null) {
      new ElfPspModuleInfoAtributesEnum$Companion();
    }
    return ElfPspModuleInfoAtributesEnum$Companion_instance;
  }
  ElfPspModuleInfoAtributesEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfPspModuleInfoAtributesEnum',
    interfaces: []
  };
  ElfPspModuleInfoAtributesEnum.prototype.component1 = function () {
    return this.id;
  };
  ElfPspModuleInfoAtributesEnum.prototype.copy_za3lpa$ = function (id) {
    return new ElfPspModuleInfoAtributesEnum(id === void 0 ? this.id : id);
  };
  ElfPspModuleInfoAtributesEnum.prototype.toString = function () {
    return 'ElfPspModuleInfoAtributesEnum(id=' + Kotlin.toString(this.id) + ')';
  };
  ElfPspModuleInfoAtributesEnum.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  ElfPspModuleInfoAtributesEnum.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function InstructionReader(memory) {
    this.memory_0 = memory;
  }
  InstructionReader.prototype.read_za3lpa$ = function (address) {
    return new Instruction(address, this.memory_0.lw_za3lpa$(address));
  };
  InstructionReader.prototype.write_7xc7mf$ = function (address, instruction) {
    this.memory_0.sw_vux9f0$(address, instruction.data);
  };
  InstructionReader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InstructionReader',
    interfaces: []
  };
  function loadElf($receiver, file) {
    return PspElf$Companion_getInstance().loadInto_fyu811$(file, $receiver);
  }
  var primitiveArrayConcat = Kotlin.primitiveArrayConcat;
  function loadElfAndSetRegisters($receiver, file, path) {
    if (path === void 0)
      path = 'ms0:/PSP/GAME/EBOOT.PBP';
    var elf = loadElf($receiver, file);
    var thread = $receiver.threadManager.create_7jlznu$('_start', 0, 0, 4096, 0, ptr($receiver.mem, 0));
    var argv = listOf_0(thread.putDataInStack_fqrh44$(primitiveArrayConcat(toByteArray(path), new Int8Array([0]))).addr);
    var argvp = thread.putWordsInStack_pmhfmb$(toIntArray(argv).slice());
    thread.state.r4 = argv.size;
    thread.state.r5 = argvp.addr;
    var state = thread.state;
    state.setPC_za3lpa$(elf.moduleInfo.PC);
    set_GP(state, elf.moduleInfo.GP);
    thread.start();
    return elf;
  }
  function PspElf(memory, memoryManager, moduleManager, syscallManager) {
    PspElf$Companion_getInstance();
    this.memory_0 = memory;
    this.memoryManager_0 = memoryManager;
    this.moduleManager_0 = moduleManager;
    this.syscallManager_0 = syscallManager;
    this.logger_0 = PspLogger$Companion_getInstance().invoke_61zpoe$('ElfPsp');
    this.elf_xm4kwm$_0 = this.elf_xm4kwm$_0;
    this.moduleInfo_qarplb$_0 = this.moduleInfo_qarplb$_0;
    this.dwarf_f2x1fr$_0 = this.dwarf_f2x1fr$_0;
    this.baseAddress_qvceca$_0 = 0;
  }
  Object.defineProperty(PspElf.prototype, 'elf', {
    get: function () {
      if (this.elf_xm4kwm$_0 == null)
        return throwUPAE('elf');
      return this.elf_xm4kwm$_0;
    },
    set: function (elf) {
      this.elf_xm4kwm$_0 = elf;
    }
  });
  Object.defineProperty(PspElf.prototype, 'moduleInfo', {
    get: function () {
      if (this.moduleInfo_qarplb$_0 == null)
        return throwUPAE('moduleInfo');
      return this.moduleInfo_qarplb$_0;
    },
    set: function (moduleInfo) {
      this.moduleInfo_qarplb$_0 = moduleInfo;
    }
  });
  Object.defineProperty(PspElf.prototype, 'dwarf', {
    get: function () {
      if (this.dwarf_f2x1fr$_0 == null)
        return throwUPAE('dwarf');
      return this.dwarf_f2x1fr$_0;
    },
    set: function (dwarf) {
      this.dwarf_f2x1fr$_0 = dwarf;
    }
  });
  Object.defineProperty(PspElf.prototype, 'baseAddress', {
    get: function () {
      return this.baseAddress_qvceca$_0;
    },
    set: function (baseAddress) {
      this.baseAddress_qvceca$_0 = baseAddress;
    }
  });
  function PspElf$Companion() {
    PspElf$Companion_instance = this;
  }
  PspElf$Companion.prototype.loadInto_fyu811$ = function (stream, emulator) {
    var loader = new PspElf(emulator.mem, emulator.memoryManager, emulator.moduleManager, emulator.syscalls);
    loader.load_39qel5$(stream);
    return loader;
  };
  PspElf$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var PspElf$Companion_instance = null;
  function PspElf$Companion_getInstance() {
    if (PspElf$Companion_instance === null) {
      new PspElf$Companion();
    }
    return PspElf$Companion_instance;
  }
  PspElf.prototype.load_39qel5$ = function (stream) {
    this.elf = Elf$Companion_getInstance().read_39qel5$(stream);
    this.allocateMemory_0();
    this.writeToMemory_0();
    this.relocateFromHeaders_0();
    this.readModuleInfo_0();
    this.updateModuleImports_0();
    this.dwarf = new ElfDwarf();
    this.dwarf.parseElfLoader_xqzwj6$(this.elf);
  };
  PspElf.prototype.getSymbolAt_za3lpa$ = function (address) {
    this.dwarf.getSymbolAt_za3lpa$(address);
  };
  PspElf.prototype.getSectionHeaderMemoryStream_0 = function (sectionHeader) {
    return this.memory_0.getPointerStream_vux9f0$(this.baseAddress + sectionHeader.address | 0, sectionHeader.size);
  };
  PspElf.prototype.readModuleInfo_0 = function () {
    this.moduleInfo = ElfPspModuleInfo$Companion_getInstance().invoke_39qel5$(this.getSectionHeaderMemoryStream_0(this.elf.getSectionHeader_61zpoe$('.rodata.sceModuleInfo')));
    this.moduleInfo.PC = this.baseAddress + this.elf.header.entryPoint | 0;
  };
  function PspElf$allocateMemory$lambda(it) {
    return it.size;
  }
  var sortedWith = Kotlin.kotlin.collections.sortedWith_eknfly$;
  var compareBy$lambda = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  var Comparator = Kotlin.kotlin.Comparator;
  function Comparator$ObjectLiteral(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  var min = Kotlin.kotlin.js.min_bug313$;
  var max_0 = Kotlin.kotlin.js.max_bug313$;
  PspElf.prototype.allocateMemory_0 = function () {
    var tmp$, tmp$_0;
    this.baseAddress = 0;
    if (this.elf.needsRelocation) {
      this.baseAddress = numberToInt(last(sortedWith(this.memoryManager_0.userPartition.childPartitions, new Comparator$ObjectLiteral(compareBy$lambda(PspElf$allocateMemory$lambda)))).low);
      this.baseAddress = nextAlignedTo(this.baseAddress, 4096) + 16384 | 0;
    }
    var lowest = new Kotlin.Long(-1, 0);
    var highest = Kotlin.Long.ZERO;
    var $receiver = this.elf.sectionHeaders;
    var destination = ArrayList_init();
    var tmp$_1;
    tmp$_1 = $receiver.iterator();
    while (tmp$_1.hasNext()) {
      var element = tmp$_1.next();
      if (element.flags.hasFlag_fzutc1$(ElfSectionHeaderFlags$Companion_getInstance().Allocate))
        destination.add_11rb$(element);
    }
    tmp$ = destination.iterator();
    while (tmp$.hasNext()) {
      var section = tmp$.next();
      lowest = min(Math_0, lowest, Kotlin.Long.fromInt(this.baseAddress).add(Kotlin.Long.fromInt(section.address)));
      highest = max_0(Math_0, highest, Kotlin.Long.fromInt(this.baseAddress).add(Kotlin.Long.fromInt(section.address)).add(Kotlin.Long.fromInt(section.size)));
    }
    tmp$_0 = this.elf.programHeaders.iterator();
    while (tmp$_0.hasNext()) {
      var program = tmp$_0.next();
      lowest = min(Math_0, lowest, Kotlin.Long.fromInt(this.baseAddress).add(Kotlin.Long.fromInt(program.virtualAddress)));
      highest = max_0(Math_0, highest, Kotlin.Long.fromInt(this.baseAddress).add(Kotlin.Long.fromInt(program.virtualAddress)).add(Kotlin.Long.fromInt(program.memorySize)));
    }
    var $this = this.memoryManager_0.userPartition;
    var size = highest.subtract(lowest);
    var addressLow = lowest;
    var memorySegment = $this.allocateSet_rpaqe6$(numberToDouble(size), numberToDouble(addressLow), 'Elf');
  };
  PspElf.prototype.relocateFromHeaders_0 = function () {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var RelocProgramIndex = 0;
    tmp$ = this.elf.programHeaders.iterator();
    while (tmp$.hasNext()) {
      var programHeader = tmp$.next();
      tmp$_0 = programHeader.type;
      if (equals(tmp$_0, ElfProgramHeaderType$Companion_getInstance().Reloc1))
        this.logger_0.info_61zpoe$('SKIPPING Elf.ProgramHeader.TypeEnum.Reloc1!');
      else if (equals(tmp$_0, ElfProgramHeaderType$Companion_getInstance().Reloc2))
        throw new Exception('Not implemented');
    }
    var RelocSectionIndex = 0;
    tmp$_1 = this.elf.sectionHeaders.iterator();
    while (tmp$_1.hasNext()) {
      var sectionHeader = tmp$_1.next();
      tmp$_2 = sectionHeader.type;
      if (equals(tmp$_2, ElfSectionHeaderType$Companion_getInstance().Relocation)) {
        this.logger_0.error_61zpoe$('sectionHeader: ' + sectionHeader);
        this.logger_0.error_61zpoe$('Not implemented ElfSectionHeaderType.Relocation');
      }
       else if (equals(tmp$_2, ElfSectionHeaderType$Companion_getInstance().PrxRelocation)) {
        var $receiver = until_0(0, sectionHeader.stream.length.div(Kotlin.Long.fromInt(ElfReloc$Companion_getInstance().SIZE)));
        var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
        var tmp$_3;
        tmp$_3 = $receiver.iterator();
        while (tmp$_3.hasNext()) {
          var item = tmp$_3.next();
          destination.add_11rb$(ElfReloc$Companion_getInstance().invoke_39qel5$(sectionHeader.stream));
        }
        var relocs = destination;
        this.relocateRelocs_0(relocs);
      }
       else if (equals(tmp$_2, ElfSectionHeaderType$Companion_getInstance().PrxRelocation_FW5))
        throw new Error_0('Not implemented ElfSectionHeader.Type.PrxRelocation_FW5');
    }
  };
  PspElf.prototype.relocateRelocs_0 = function (relocs) {
    var tmp$, tmp$_0, tmp$_1;
    var baseAddress = this.baseAddress;
    var hiValue = 0;
    var deferredHi16 = ArrayList_init();
    var instructionReader = new InstructionReader(this.memory_0);
    tmp$ = relocs.size;
    for (var index = 0; index < tmp$; index++) {
      var reloc = relocs.get_za3lpa$(index);
      if (reloc.type === ElfRelocType$StopRelocation_getInstance())
        break;
      var pointerBaseOffset = this.elf.programHeaders.get_za3lpa$(reloc.pointerSectionHeaderBase).virtualAddress;
      var pointeeBaseOffset = this.elf.programHeaders.get_za3lpa$(reloc.pointeeSectionHeaderBase).virtualAddress;
      var RelocatedPointerAddress = baseAddress + reloc.pointerAddress + pointerBaseOffset | 0;
      var instruction = instructionReader.read_za3lpa$(RelocatedPointerAddress);
      var S = baseAddress + pointeeBaseOffset | 0;
      var GP_ADDR = baseAddress + reloc.pointerAddress | 0;
      var GP_OFFSET = GP_ADDR - (baseAddress & (new Kotlin.Long(-65536, 0)).toInt()) | 0;
      tmp$_0 = reloc.type;
      if (!equals(tmp$_0, ElfRelocType$None_getInstance()))
        if (equals(tmp$_0, ElfRelocType$Mips16_getInstance()))
          instruction.u_imm16 = instruction.u_imm16 + S | 0;
        else if (equals(tmp$_0, ElfRelocType$Mips32_getInstance()))
          instruction.data = instruction.data + S | 0;
        else if (equals(tmp$_0, ElfRelocType$MipsRel32_getInstance()))
          throw new Exception('Not implemented MipsRel32');
        else if (equals(tmp$_0, ElfRelocType$Mips26_getInstance()))
          instruction.jump_real = instruction.jump_real + S | 0;
        else if (equals(tmp$_0, ElfRelocType$MipsHi16_getInstance())) {
          hiValue = instruction.u_imm16;
          deferredHi16.add_11rb$(RelocatedPointerAddress);
        }
         else if (equals(tmp$_0, ElfRelocType$MipsLo16_getInstance())) {
          var A = instruction.u_imm16;
          instruction.u_imm16 = (hiValue << 16 | A & 65535) + S | 0;
          tmp$_1 = deferredHi16.iterator();
          while (tmp$_1.hasNext()) {
            var data_addr2 = tmp$_1.next();
            var data2 = instructionReader.read_za3lpa$(data_addr2);
            var result = ((data2.data & 65535) << 16) + A + S | 0;
            if ((A & 32768) !== 0) {
              result = result - 65536 | 0;
            }
            if ((result & 32768) !== 0) {
              result = result + 65536 | 0;
            }
            data2.u_imm16 = result >>> 16;
            instructionReader.write_7xc7mf$(data_addr2, data2);
          }
          deferredHi16 = ArrayList_init();
        }
         else if (!equals(tmp$_0, ElfRelocType$MipsGpRel16_getInstance()))
          throw new Error_0(format('RelocType %d not implemented', [reloc.type]));
      instructionReader.write_7xc7mf$(RelocatedPointerAddress, instruction);
    }
  };
  PspElf.prototype.writeToMemory_0 = function () {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var needsRelocate = this.elf.needsRelocation;
    var loadAddress = this.baseAddress;
    this.logger_0.info_61zpoe$(format('PspElfLoader: needsRelocate=%s, loadAddress=%08X', [needsRelocate, loadAddress]));
    var $receiver = this.elf.programHeaders;
    var destination = ArrayList_init();
    var tmp$_3;
    tmp$_3 = $receiver.iterator();
    while (tmp$_3.hasNext()) {
      var element = tmp$_3.next();
      var tmp$_4;
      if ((tmp$_4 = element.type) != null ? tmp$_4.equals(ElfProgramHeaderType$Companion_getInstance().Load) : null)
        destination.add_11rb$(element);
    }
    tmp$ = destination.iterator();
    while (tmp$.hasNext()) {
      var programHeader = tmp$.next();
      var fileOffset = programHeader.offset;
      var memOffset = this.baseAddress + programHeader.virtualAddress | 0;
      var fileSize = programHeader.fileSize;
      var memSize = programHeader.memorySize;
      copyTo(sliceWithSize_0(this.elf.stream, fileOffset, fileSize), this.memory_0.getPointerStream_vux9f0$(memOffset, fileSize));
      this.memory_0.memset_qt1dr2$(memOffset + fileSize | 0, 0, memSize - fileSize | 0);
      this.logger_0.info_61zpoe$('Program Header: ' + format('%08X:%08X, %08X:%08X', [fileOffset, fileSize, memOffset, memSize]));
    }
    var $receiver_0 = this.elf.sectionHeaders;
    var destination_0 = ArrayList_init();
    var tmp$_5;
    tmp$_5 = $receiver_0.iterator();
    while (tmp$_5.hasNext()) {
      var element_0 = tmp$_5.next();
      if (element_0.flags.hasFlag_fzutc1$(ElfSectionHeaderFlags$Companion_getInstance().Allocate))
        destination_0.add_11rb$(element_0);
    }
    tmp$_0 = destination_0.iterator();
    while (tmp$_0.hasNext()) {
      var sectionHeader = tmp$_0.next();
      var low = loadAddress + sectionHeader.address | 0;
      this.logger_0.info_61zpoe$(format('Section Header: %s LOW:%08X, SIZE:%08X', [sectionHeader.toString(), low, sectionHeader.size]));
      tmp$_1 = sectionHeader.type;
      if (equals(tmp$_1, ElfSectionHeaderType$Companion_getInstance().NoBits)) {
        tmp$_2 = sectionHeader.size;
        for (var n = 0; n < tmp$_2; n++)
          this.memory_0.sb_vux9f0$(low + n | 0, 0);
      }
       else if (equals(tmp$_1, ElfSectionHeaderType$Companion_getInstance().ProgramBits)) {
        var stream = sectionHeader.stream;
        var length = stream.length;
        this.memory_0.write_3fge6q$(low, readAll(stream));
      }
    }
  };
  PspElf.prototype.updateModuleImports_0 = function () {
    var tmp$;
    var moduleInfo = this.moduleInfo;
    this.logger_0.info_61zpoe$('updateModuleImports.moduleInfo: ' + moduleInfo);
    var importsBytesSize = moduleInfo.importsEnd - moduleInfo.importsStart | 0;
    var importsStream = slice(openSync_0(this.memory_0), until(moduleInfo.importsStart, moduleInfo.importsEnd));
    var importsCount = importsBytesSize / ElfPspModuleImport$Companion_getInstance().SIZE | 0;
    var $receiver = until(0, importsCount);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$_0;
    tmp$_0 = $receiver.iterator();
    while (tmp$_0.hasNext()) {
      var item = tmp$_0.next();
      destination.add_11rb$(ElfPspModuleImport$Companion_getInstance().invoke_39qel5$(importsStream));
    }
    var imports = destination;
    tmp$ = imports.iterator();
    while (tmp$.hasNext()) {
      var _import = tmp$.next();
      _import.name = this.memory_0.readStringz_za3lpa$(_import.nameOffset);
      var imported = this.updateModuleFunctions_0(_import);
      this.updateModuleVars_0(_import);
      var tmp$_1 = this.logger_0;
      var tmp$_2 = 'Imported: ' + imported.name + ' ';
      var $receiver_0 = imported.registeredNativeFunctions;
      var destination_0 = ArrayList_init(collectionSizeOrDefault($receiver_0, 10));
      var tmp$_3;
      tmp$_3 = $receiver_0.iterator();
      while (tmp$_3.hasNext()) {
        var item_0 = tmp$_3.next();
        destination_0.add_11rb$(item_0.name);
      }
      tmp$_1.info_61zpoe$(tmp$_2 + destination_0);
    }
  };
  function PspElf$updateModuleFunctions$lambda$lambda(this$PspElf, closure$_module, closure$nfunc) {
    return function (state) {
      var tmp$, tmp$_0;
      this$PspElf.logger_0.error_61zpoe$(closure$_module.toString());
      this$PspElf.logger_0.error_61zpoe$("updateModuleFunctions: Not implemented '" + toString((tmp$ = closure$nfunc.v) != null ? tmp$.name : null) + "'");
      lang.Debugger.enterDebugger();
      throw new Error_0("updateModuleFunctions: Not implemented '" + toString((tmp$_0 = closure$nfunc.v) != null ? tmp$_0.name : null) + "'");
    };
  }
  function PspElf$updateModuleFunctions$lambda(closure$_module, closure$unknownFunctions, closure$moduleImport, this$PspElf, closure$registeredNativeFunctions) {
    return function (nid, n) {
      var nfunc = {v: closure$_module.getByNidOrNull_za3lpa$(nid)};
      if (nfunc.v == null) {
        closure$unknownFunctions.add_11rb$(format("'%s':0x%08X", [closure$_module.name, nid]));
        nfunc.v = new NativeFunction(format('%s:0x%08X', [closure$moduleImport.name, nid]), Kotlin.Long.fromInt(nid), 150, -1, PspElf$updateModuleFunctions$lambda$lambda(this$PspElf, closure$_module, nfunc));
      }
      closure$registeredNativeFunctions.add_11rb$(nfunc.v);
      var syscallId = this$PspElf.syscallManager_0.register_u5woyh$(nfunc.v);
      return syscallId;
    };
  }
  PspElf.prototype.updateModuleFunctions_0 = function (moduleImport) {
    var tmp$;
    this.logger_0.info_61zpoe$('Import module: ' + moduleImport.name);
    var _module = this.moduleManager_0.getByName_61zpoe$(moduleImport.name);
    var nidsStream = sliceWithSize_0(openSync_0(this.memory_0), moduleImport.nidAddress, moduleImport.functionCount * 4 | 0);
    var callStream = sliceWithSize_0(openSync_0(this.memory_0), moduleImport.callAddress, moduleImport.functionCount * 8 | 0);
    var registeredNativeFunctions = ArrayList_init();
    var unknownFunctions = ArrayList_init();
    var registerN = PspElf$updateModuleFunctions$lambda(_module, unknownFunctions, moduleImport, this, registeredNativeFunctions);
    tmp$ = moduleImport.functionCount;
    for (var n = 0; n < tmp$; n++) {
      var nid = readS32_le_0(nidsStream);
      var syscall = registerN(nid, n);
      write32_le(callStream, 65011720);
      write32_le(callStream, 12 | syscall << 6);
    }
    if (unknownFunctions.size > 0) {
      this.logger_0.warn_61zpoe$("Can't find functions: " + toString(unknownFunctions));
    }
    return new PspElf$Res1(moduleImport.name, registeredNativeFunctions);
  };
  function PspElf$Res1(name, registeredNativeFunctions) {
    this.name = name;
    this.registeredNativeFunctions = registeredNativeFunctions;
  }
  PspElf$Res1.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Res1',
    interfaces: []
  };
  PspElf.prototype.updateModuleVars_0 = function (moduleImport) {
  };
  PspElf.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspElf',
    interfaces: []
  };
  function Bits(offset, size) {
    this.offset = offset;
    this.size = size;
  }
  Bits.prototype.getValue_qkrva5$ = function (i, p) {
    return extract(i.data, this.offset, this.size);
  };
  Bits.prototype.setValue_445zcl$ = function (i, p, value) {
    i.data = insert(i.data, value, this.offset, this.size);
  };
  Bits.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Bits',
    interfaces: []
  };
  function Instruction(address, data) {
    this.address = address;
    this.data = data;
    this.u_imm16_u2rt4z$_0 = new Bits(0, 16);
    this.jump_bits_n8rtjk$_0 = new Bits(0, 26);
  }
  Object.defineProperty(Instruction.prototype, 'u_imm16', {
    get: function () {
      return this.u_imm16_u2rt4z$_0.getValue_qkrva5$(this, new PropertyMetadata('u_imm16'));
    },
    set: function (u_imm16) {
      this.u_imm16_u2rt4z$_0.setValue_445zcl$(this, new PropertyMetadata('u_imm16'), u_imm16);
    }
  });
  Object.defineProperty(Instruction.prototype, 'jump_bits', {
    get: function () {
      return this.jump_bits_n8rtjk$_0.getValue_qkrva5$(this, new PropertyMetadata('jump_bits'));
    },
    set: function (jump_bits) {
      this.jump_bits_n8rtjk$_0.setValue_445zcl$(this, new PropertyMetadata('jump_bits'), jump_bits);
    }
  });
  Object.defineProperty(Instruction.prototype, 'jump_real', {
    get: function () {
      return this.jump_bits * 4 | 0;
    },
    set: function (value) {
      this.jump_bits = value / 4 | 0;
    }
  });
  Instruction.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Instruction',
    interfaces: []
  };
  Instruction.prototype.component1 = function () {
    return this.address;
  };
  Instruction.prototype.component2 = function () {
    return this.data;
  };
  Instruction.prototype.copy_vux9f0$ = function (address, data) {
    return new Instruction(address === void 0 ? this.address : address, data === void 0 ? this.data : data);
  };
  Instruction.prototype.toString = function () {
    return 'Instruction(address=' + Kotlin.toString(this.address) + (', data=' + Kotlin.toString(this.data)) + ')';
  };
  Instruction.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.address) | 0;
    result = result * 31 + Kotlin.hashCode(this.data) | 0;
    return result;
  };
  Instruction.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.address, other.address) && Kotlin.equals(this.data, other.data)))));
  };
  function Ge(emulator) {
    this.emulator_lfbrkc$_0 = emulator;
    this.state = new GeState();
    this.queue = ArrayList_init();
    this.lists = new ResourceList('GeList', Ge$lists$lambda(this));
    this.onCompleted = new Signal();
  }
  Object.defineProperty(Ge.prototype, 'emulator', {
    get: function () {
      return this.emulator_lfbrkc$_0;
    }
  });
  Ge.prototype.listEnqueue_56435g$ = function (start, stall, callback, pspGeListArgs) {
    var $receiver = this.lists.alloc();
    $receiver.start = start;
    $receiver.stall = stall;
    $receiver.callback = callback;
    $receiver.pspGeListArgs = pspGeListArgs;
    $receiver.PC = start;
    $receiver.reset();
    var list = $receiver;
    this.queue.add_11rb$(list);
    return list;
  };
  Ge.prototype.run = function () {
    while (!this.queue.isEmpty()) {
      var item = first(this.queue);
      item.run();
      if (item.completed) {
        this.lists.free_51l2nw$(item);
        this.queue.removeAt_za3lpa$(0);
      }
       else {
        break;
      }
    }
    this.onCompleted.invoke_11rb$(Unit);
  };
  Ge.prototype.emitBatch_jfkk57$ = function (batch) {
    get_gpu(this).batchQueue.add_11rb$(batch);
  };
  Ge.prototype.sync_za3lpa$ = function (syncType) {
    this.run();
  };
  function Ge$lists$lambda(this$Ge) {
    return function (it) {
      return new GeList(this$Ge, it);
    };
  }
  Ge.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Ge',
    interfaces: [WithEmulator]
  };
  function GeCallback(id) {
    this.id_b9usb9$_0 = id;
    this.signal_func = 0;
    this.signal_arg = 0;
    this.finish_func = 0;
    this.finish_arg = 0;
  }
  Object.defineProperty(GeCallback.prototype, 'id', {
    get: function () {
      return this.id_b9usb9$_0;
    }
  });
  GeCallback.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeCallback',
    interfaces: [ResourceItem]
  };
  GeCallback.prototype.component1 = function () {
    return this.id;
  };
  GeCallback.prototype.copy_za3lpa$ = function (id) {
    return new GeCallback(id === void 0 ? this.id : id);
  };
  GeCallback.prototype.toString = function () {
    return 'GeCallback(id=' + Kotlin.toString(this.id) + ')';
  };
  GeCallback.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  GeCallback.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function PrimAction(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PrimAction_initFields() {
    PrimAction_initFields = function () {
    };
    PrimAction$NOTHING_instance = new PrimAction('NOTHING', 0);
    PrimAction$FLUSH_PRIM_instance = new PrimAction('FLUSH_PRIM', 1);
  }
  var PrimAction$NOTHING_instance;
  function PrimAction$NOTHING_getInstance() {
    PrimAction_initFields();
    return PrimAction$NOTHING_instance;
  }
  var PrimAction$FLUSH_PRIM_instance;
  function PrimAction$FLUSH_PRIM_getInstance() {
    PrimAction_initFields();
    return PrimAction$FLUSH_PRIM_instance;
  }
  PrimAction.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PrimAction',
    interfaces: [Enum]
  };
  function PrimAction$values() {
    return [PrimAction$NOTHING_getInstance(), PrimAction$FLUSH_PRIM_getInstance()];
  }
  PrimAction.values = PrimAction$values;
  function PrimAction$valueOf(name) {
    switch (name) {
      case 'NOTHING':
        return PrimAction$NOTHING_getInstance();
      case 'FLUSH_PRIM':
        return PrimAction$FLUSH_PRIM_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.PrimAction.' + name);
    }
  }
  PrimAction.valueOf_61zpoe$ = PrimAction$valueOf;
  function ListSyncKind(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ListSyncKind_initFields() {
    ListSyncKind_initFields = function () {
    };
    ListSyncKind$DONE_instance = new ListSyncKind('DONE', 0);
    ListSyncKind$QUEUED_instance = new ListSyncKind('QUEUED', 1);
    ListSyncKind$DRAWING_DONE_instance = new ListSyncKind('DRAWING_DONE', 2);
    ListSyncKind$STALL_REACHED_instance = new ListSyncKind('STALL_REACHED', 3);
    ListSyncKind$CANCEL_DONE_instance = new ListSyncKind('CANCEL_DONE', 4);
  }
  var ListSyncKind$DONE_instance;
  function ListSyncKind$DONE_getInstance() {
    ListSyncKind_initFields();
    return ListSyncKind$DONE_instance;
  }
  var ListSyncKind$QUEUED_instance;
  function ListSyncKind$QUEUED_getInstance() {
    ListSyncKind_initFields();
    return ListSyncKind$QUEUED_instance;
  }
  var ListSyncKind$DRAWING_DONE_instance;
  function ListSyncKind$DRAWING_DONE_getInstance() {
    ListSyncKind_initFields();
    return ListSyncKind$DRAWING_DONE_instance;
  }
  var ListSyncKind$STALL_REACHED_instance;
  function ListSyncKind$STALL_REACHED_getInstance() {
    ListSyncKind_initFields();
    return ListSyncKind$STALL_REACHED_instance;
  }
  var ListSyncKind$CANCEL_DONE_instance;
  function ListSyncKind$CANCEL_DONE_getInstance() {
    ListSyncKind_initFields();
    return ListSyncKind$CANCEL_DONE_instance;
  }
  ListSyncKind.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ListSyncKind',
    interfaces: [Enum]
  };
  function ListSyncKind$values() {
    return [ListSyncKind$DONE_getInstance(), ListSyncKind$QUEUED_getInstance(), ListSyncKind$DRAWING_DONE_getInstance(), ListSyncKind$STALL_REACHED_getInstance(), ListSyncKind$CANCEL_DONE_getInstance()];
  }
  ListSyncKind.values = ListSyncKind$values;
  function ListSyncKind$valueOf(name) {
    switch (name) {
      case 'DONE':
        return ListSyncKind$DONE_getInstance();
      case 'QUEUED':
        return ListSyncKind$QUEUED_getInstance();
      case 'DRAWING_DONE':
        return ListSyncKind$DRAWING_DONE_getInstance();
      case 'STALL_REACHED':
        return ListSyncKind$STALL_REACHED_getInstance();
      case 'CANCEL_DONE':
        return ListSyncKind$CANCEL_DONE_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.ListSyncKind.' + name);
    }
  }
  ListSyncKind.valueOf_61zpoe$ = ListSyncKind$valueOf;
  function GeBatch(state, primType, vertexCount, vertices, indices) {
    this.state = state;
    this.primType = primType;
    this.vertexCount = vertexCount;
    this.vertices = vertices;
    this.indices = indices;
    this.vtype = init(new VertexType(), this.state);
    this.tempMatrix_0 = new Matrix4();
    this.modelViewProjMatrix = new Matrix4();
    if (this.vtype.transform2D) {
      this.modelViewProjMatrix.setToOrtho_w8lrqs$(0.0, 272.0, 480.0, 0.0, 0.0, -65535);
    }
     else {
      this.modelViewProjMatrix.setToIdentity();
      this.modelViewProjMatrix.setToMultiply_ksx0y2$(this.modelViewProjMatrix, this.state.getProjMatrix_rwji5t$(this.tempMatrix_0));
      this.modelViewProjMatrix.setToMultiply_ksx0y2$(this.modelViewProjMatrix, this.state.getViewMatrix_rwji5t$(this.tempMatrix_0));
      this.modelViewProjMatrix.setToMultiply_ksx0y2$(this.modelViewProjMatrix, this.state.getWorldMatrix_rwji5t$(this.tempMatrix_0));
    }
  }
  GeBatch.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeBatch',
    interfaces: []
  };
  GeBatch.prototype.component1 = function () {
    return this.state;
  };
  GeBatch.prototype.component2 = function () {
    return this.primType;
  };
  GeBatch.prototype.component3 = function () {
    return this.vertexCount;
  };
  GeBatch.prototype.component4 = function () {
    return this.vertices;
  };
  GeBatch.prototype.component5 = function () {
    return this.indices;
  };
  GeBatch.prototype.copy_c60r3u$ = function (state, primType, vertexCount, vertices, indices) {
    return new GeBatch(state === void 0 ? this.state : state, primType === void 0 ? this.primType : primType, vertexCount === void 0 ? this.vertexCount : vertexCount, vertices === void 0 ? this.vertices : vertices, indices === void 0 ? this.indices : indices);
  };
  GeBatch.prototype.toString = function () {
    return 'GeBatch(state=' + Kotlin.toString(this.state) + (', primType=' + Kotlin.toString(this.primType)) + (', vertexCount=' + Kotlin.toString(this.vertexCount)) + (', vertices=' + Kotlin.toString(this.vertices)) + (', indices=' + Kotlin.toString(this.indices)) + ')';
  };
  GeBatch.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.state) | 0;
    result = result * 31 + Kotlin.hashCode(this.primType) | 0;
    result = result * 31 + Kotlin.hashCode(this.vertexCount) | 0;
    result = result * 31 + Kotlin.hashCode(this.vertices) | 0;
    result = result * 31 + Kotlin.hashCode(this.indices) | 0;
    return result;
  };
  GeBatch.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.state, other.state) && Kotlin.equals(this.primType, other.primType) && Kotlin.equals(this.vertexCount, other.vertexCount) && Kotlin.equals(this.vertices, other.vertices) && Kotlin.equals(this.indices, other.indices)))));
  };
  function GeBatchBuilder(ge) {
    this.ge = ge;
    this.state = this.ge.state;
    this.mem = get_mem(this.ge);
    this.primBatchPrimitiveType = -1;
    this.primitiveType = null;
    this.vertexType = new VertexType(-1);
    this.vertexCount = 0;
    this.vertexSize = 0;
    this.vertexBuffer = new Int8Array(65536 * 16 | 0);
    this.vertexBufferPos = 0;
    this.indexBuffer = new Int16Array(65536);
    this.indexBufferPos = 0;
  }
  GeBatchBuilder.prototype.reset = function () {
    this.flush();
    this.primBatchPrimitiveType = -1;
    this.primitiveType = null;
    this.vertexType.v = -1;
    this.vertexCount = 0;
    this.vertexBufferPos = 0;
    this.indexBufferPos = 0;
    this.vertexSize = 0;
  };
  GeBatchBuilder.prototype.setVertexKind_hlyuka$ = function (primitiveType, state) {
    if (!equals(this.primitiveType, primitiveType) || this.vertexType.v !== state.vertexType) {
      this.flush();
    }
    init(this.vertexType, state);
    this.primitiveType = primitiveType;
    this.vertexSize = this.vertexType.size();
  };
  GeBatchBuilder.prototype.tflush = function () {
  };
  GeBatchBuilder.prototype.tsync = function () {
  };
  GeBatchBuilder.prototype.flush = function () {
    var tmp$;
    if (this.indexBufferPos > 0) {
      this.ge.emitBatch_jfkk57$(new GeBatch(this.ge.state.clone(), (tmp$ = this.primitiveType) != null ? tmp$ : PrimitiveType$TRIANGLES_getInstance(), this.indexBufferPos, copyOf(this.vertexBuffer, this.vertexBufferPos), copyOf_0(this.indexBuffer, this.indexBufferPos)));
      this.vertexCount = 0;
      this.vertexBufferPos = 0;
      this.indexBufferPos = 0;
    }
  };
  GeBatchBuilder.prototype.putVertex_za3lpa$ = function (address) {
    this.mem.read_3fge6q$(address, this.vertexBuffer, this.vertexBufferPos, this.vertexSize);
    this.vertexBufferPos = this.vertexBufferPos + this.vertexSize | 0;
    this.vertexCount = this.vertexCount + 1 | 0;
  };
  GeBatchBuilder.prototype.putIndex_za3lpa$ = function (index) {
    var tmp$;
    this.indexBuffer[tmp$ = this.indexBufferPos, this.indexBufferPos = tmp$ + 1 | 0, tmp$] = toShort(index);
  };
  GeBatchBuilder.prototype.putGenVertex_0 = function (TLpos, BRpos, gx, gy) {
    copyRangeTo(this.vertexBuffer, BRpos, this.vertexBuffer, this.vertexBufferPos, this.vertexSize);
    if (this.vertexType.hasPosition) {
      copyRangeTo(this.vertexBuffer, (!gx ? TLpos : BRpos) + this.vertexType.posOffset + (this.vertexType.pos.nbytes * 0 | 0) | 0, this.vertexBuffer, this.vertexBufferPos + this.vertexType.posOffset + (this.vertexType.pos.nbytes * 0 | 0) | 0, this.vertexType.pos.nbytes);
      copyRangeTo(this.vertexBuffer, (!gy ? TLpos : BRpos) + this.vertexType.posOffset + (this.vertexType.pos.nbytes * 1 | 0) | 0, this.vertexBuffer, this.vertexBufferPos + this.vertexType.posOffset + (this.vertexType.pos.nbytes * 1 | 0) | 0, this.vertexType.pos.nbytes);
    }
    if (this.vertexType.hasTexture) {
      copyRangeTo(this.vertexBuffer, (!gx ? TLpos : BRpos) + this.vertexType.texOffset + (this.vertexType.tex.nbytes * 0 | 0) | 0, this.vertexBuffer, this.vertexBufferPos + this.vertexType.texOffset + (this.vertexType.tex.nbytes * 0 | 0) | 0, this.vertexType.tex.nbytes);
      copyRangeTo(this.vertexBuffer, (!gy ? TLpos : BRpos) + this.vertexType.texOffset + (this.vertexType.tex.nbytes * 1 | 0) | 0, this.vertexBuffer, this.vertexBufferPos + this.vertexType.texOffset + (this.vertexType.tex.nbytes * 1 | 0) | 0, this.vertexType.tex.nbytes);
    }
    copyRangeTo(this.vertexBuffer, BRpos + this.vertexType.colOffset | 0, this.vertexBuffer, TLpos + this.vertexType.colOffset | 0, this.vertexType.col.nbytes);
    this.vertexBufferPos = this.vertexBufferPos + this.vertexSize | 0;
    this.vertexCount = this.vertexCount + 2 | 0;
  };
  GeBatchBuilder.prototype.addIndices_za3lpa$ = function (count) {
    var tmp$, tmp$_0, tmp$_1;
    var maxIdx = 0;
    tmp$ = this.vertexType.index;
    if (equals(tmp$, IndexEnum$VOID_getInstance())) {
      if (equals(this.primitiveType, PrimitiveType$SPRITES_getInstance())) {
        var m = 0;
        var nsprites = count / 2 | 0;
        for (var n = 0; n < nsprites; n++) {
          this.putIndex_za3lpa$(m + 0 | 0);
          this.putIndex_za3lpa$(m + 3 | 0);
          this.putIndex_za3lpa$(m + 2 | 0);
          this.putIndex_za3lpa$(m + 2 | 0);
          this.putIndex_za3lpa$(m + 3 | 0);
          this.putIndex_za3lpa$(m + 1 | 0);
          m = m + 4 | 0;
        }
      }
       else {
        for (var n_0 = 0; n_0 < count; n_0++)
          this.putIndex_za3lpa$(this.vertexCount + n_0 | 0);
      }
      maxIdx = count;
    }
     else if (equals(tmp$, IndexEnum$SHORT_getInstance())) {
      var iaddr = this.state.indexAddress;
      for (var n_1 = 0; n_1 < count; n_1++) {
        var idx = this.mem.lhu_za3lpa$(iaddr + (n_1 * 2 | 0) | 0);
        var a = maxIdx;
        var b = idx + 1 | 0;
        maxIdx = Math_0.max(a, b);
        this.putIndex_za3lpa$(idx);
      }
    }
     else {
      throw new NotImplementedError_init('An operation is not implemented: ' + ('addIndices: ' + this.vertexType.index + ', ' + count));
    }
    if (equals(this.primitiveType, PrimitiveType$SPRITES_getInstance())) {
      var vaddr = this.state.vertexAddress;
      tmp$_0 = maxIdx / 2 | 0;
      for (var n_2 = 0; n_2 < tmp$_0; n_2++) {
        var TLpos = this.vertexBufferPos;
        this.putVertex_za3lpa$(vaddr);
        vaddr = vaddr + this.vertexSize | 0;
        var BRpos = this.vertexBufferPos;
        this.putVertex_za3lpa$(vaddr);
        vaddr = vaddr + this.vertexSize | 0;
        this.putGenVertex_0(TLpos, BRpos, false, true);
        this.putGenVertex_0(TLpos, BRpos, true, false);
      }
      this.state.vertexAddress = vaddr;
    }
     else {
      var vaddr_0 = this.state.vertexAddress;
      tmp$_1 = maxIdx;
      for (var n_3 = 0; n_3 < tmp$_1; n_3++) {
        this.putVertex_za3lpa$(vaddr_0);
        vaddr_0 = vaddr_0 + this.vertexSize | 0;
      }
      this.state.vertexAddress = vaddr_0;
    }
  };
  GeBatchBuilder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeBatchBuilder',
    interfaces: []
  };
  function CullingDirection(name, ordinal, id) {
    Enum.call(this);
    this.id_uo0vyv$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function CullingDirection_initFields() {
    CullingDirection_initFields = function () {
    };
    CullingDirection$COUNTER_CLOCK_WISE_instance = new CullingDirection('COUNTER_CLOCK_WISE', 0, 0);
    CullingDirection$CLOCK_WISE_instance = new CullingDirection('CLOCK_WISE', 1, 1);
    CullingDirection$Companion_getInstance();
  }
  Object.defineProperty(CullingDirection.prototype, 'id', {
    get: function () {
      return this.id_uo0vyv$_0;
    }
  });
  var CullingDirection$COUNTER_CLOCK_WISE_instance;
  function CullingDirection$COUNTER_CLOCK_WISE_getInstance() {
    CullingDirection_initFields();
    return CullingDirection$COUNTER_CLOCK_WISE_instance;
  }
  var CullingDirection$CLOCK_WISE_instance;
  function CullingDirection$CLOCK_WISE_getInstance() {
    CullingDirection_initFields();
    return CullingDirection$CLOCK_WISE_instance;
  }
  function CullingDirection$Companion() {
    CullingDirection$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, CullingDirection$values());
  }
  CullingDirection$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var CullingDirection$Companion_instance = null;
  function CullingDirection$Companion_getInstance() {
    CullingDirection_initFields();
    if (CullingDirection$Companion_instance === null) {
      new CullingDirection$Companion();
    }
    return CullingDirection$Companion_instance;
  }
  CullingDirection.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CullingDirection',
    interfaces: [IdEnum, Enum]
  };
  function CullingDirection$values() {
    return [CullingDirection$COUNTER_CLOCK_WISE_getInstance(), CullingDirection$CLOCK_WISE_getInstance()];
  }
  CullingDirection.values = CullingDirection$values;
  function CullingDirection$valueOf(name) {
    switch (name) {
      case 'COUNTER_CLOCK_WISE':
        return CullingDirection$COUNTER_CLOCK_WISE_getInstance();
      case 'CLOCK_WISE':
        return CullingDirection$CLOCK_WISE_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.CullingDirection.' + name);
    }
  }
  CullingDirection.valueOf_61zpoe$ = CullingDirection$valueOf;
  function SyncType(name, ordinal, id) {
    Enum.call(this);
    this.id_5w2nz7$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function SyncType_initFields() {
    SyncType_initFields = function () {
    };
    SyncType$WAIT_FOR_COMPLETION_instance = new SyncType('WAIT_FOR_COMPLETION', 0, 0);
    SyncType$PEEK_instance = new SyncType('PEEK', 1, 1);
    SyncType$Companion_getInstance();
  }
  Object.defineProperty(SyncType.prototype, 'id', {
    get: function () {
      return this.id_5w2nz7$_0;
    }
  });
  var SyncType$WAIT_FOR_COMPLETION_instance;
  function SyncType$WAIT_FOR_COMPLETION_getInstance() {
    SyncType_initFields();
    return SyncType$WAIT_FOR_COMPLETION_instance;
  }
  var SyncType$PEEK_instance;
  function SyncType$PEEK_getInstance() {
    SyncType_initFields();
    return SyncType$PEEK_instance;
  }
  function SyncType$Companion() {
    SyncType$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, SyncType$values());
  }
  SyncType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var SyncType$Companion_instance = null;
  function SyncType$Companion_getInstance() {
    SyncType_initFields();
    if (SyncType$Companion_instance === null) {
      new SyncType$Companion();
    }
    return SyncType$Companion_instance;
  }
  SyncType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SyncType',
    interfaces: [IdEnum, Enum]
  };
  function SyncType$values() {
    return [SyncType$WAIT_FOR_COMPLETION_getInstance(), SyncType$PEEK_getInstance()];
  }
  SyncType.values = SyncType$values;
  function SyncType$valueOf(name) {
    switch (name) {
      case 'WAIT_FOR_COMPLETION':
        return SyncType$WAIT_FOR_COMPLETION_getInstance();
      case 'PEEK':
        return SyncType$PEEK_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.SyncType.' + name);
    }
  }
  SyncType.valueOf_61zpoe$ = SyncType$valueOf;
  function DisplayListStatus(name, ordinal, id) {
    Enum.call(this);
    this.id_xiznn0$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function DisplayListStatus_initFields() {
    DisplayListStatus_initFields = function () {
    };
    DisplayListStatus$COMPLETED_instance = new DisplayListStatus('COMPLETED', 0, 0);
    DisplayListStatus$QUEUED_instance = new DisplayListStatus('QUEUED', 1, 1);
    DisplayListStatus$DRAWING_instance = new DisplayListStatus('DRAWING', 2, 2);
    DisplayListStatus$STALLING_instance = new DisplayListStatus('STALLING', 3, 3);
    DisplayListStatus$PAUSED_instance = new DisplayListStatus('PAUSED', 4, 4);
    DisplayListStatus$Companion_getInstance();
  }
  Object.defineProperty(DisplayListStatus.prototype, 'id', {
    get: function () {
      return this.id_xiznn0$_0;
    }
  });
  var DisplayListStatus$COMPLETED_instance;
  function DisplayListStatus$COMPLETED_getInstance() {
    DisplayListStatus_initFields();
    return DisplayListStatus$COMPLETED_instance;
  }
  var DisplayListStatus$QUEUED_instance;
  function DisplayListStatus$QUEUED_getInstance() {
    DisplayListStatus_initFields();
    return DisplayListStatus$QUEUED_instance;
  }
  var DisplayListStatus$DRAWING_instance;
  function DisplayListStatus$DRAWING_getInstance() {
    DisplayListStatus_initFields();
    return DisplayListStatus$DRAWING_instance;
  }
  var DisplayListStatus$STALLING_instance;
  function DisplayListStatus$STALLING_getInstance() {
    DisplayListStatus_initFields();
    return DisplayListStatus$STALLING_instance;
  }
  var DisplayListStatus$PAUSED_instance;
  function DisplayListStatus$PAUSED_getInstance() {
    DisplayListStatus_initFields();
    return DisplayListStatus$PAUSED_instance;
  }
  function DisplayListStatus$Companion() {
    DisplayListStatus$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, DisplayListStatus$values());
  }
  DisplayListStatus$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var DisplayListStatus$Companion_instance = null;
  function DisplayListStatus$Companion_getInstance() {
    DisplayListStatus_initFields();
    if (DisplayListStatus$Companion_instance === null) {
      new DisplayListStatus$Companion();
    }
    return DisplayListStatus$Companion_instance;
  }
  DisplayListStatus.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DisplayListStatus',
    interfaces: [IdEnum, Enum]
  };
  function DisplayListStatus$values() {
    return [DisplayListStatus$COMPLETED_getInstance(), DisplayListStatus$QUEUED_getInstance(), DisplayListStatus$DRAWING_getInstance(), DisplayListStatus$STALLING_getInstance(), DisplayListStatus$PAUSED_getInstance()];
  }
  DisplayListStatus.values = DisplayListStatus$values;
  function DisplayListStatus$valueOf(name) {
    switch (name) {
      case 'COMPLETED':
        return DisplayListStatus$COMPLETED_getInstance();
      case 'QUEUED':
        return DisplayListStatus$QUEUED_getInstance();
      case 'DRAWING':
        return DisplayListStatus$DRAWING_getInstance();
      case 'STALLING':
        return DisplayListStatus$STALLING_getInstance();
      case 'PAUSED':
        return DisplayListStatus$PAUSED_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.DisplayListStatus.' + name);
    }
  }
  DisplayListStatus.valueOf_61zpoe$ = DisplayListStatus$valueOf;
  function IndexEnum(name, ordinal, id, nbytes) {
    Enum.call(this);
    this.id_nfqogd$_0 = id;
    this.nbytes = nbytes;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function IndexEnum_initFields() {
    IndexEnum_initFields = function () {
    };
    IndexEnum$VOID_instance = new IndexEnum('VOID', 0, 0, 0);
    IndexEnum$BYTE_instance = new IndexEnum('BYTE', 1, 1, 1);
    IndexEnum$SHORT_instance = new IndexEnum('SHORT', 2, 2, 2);
    IndexEnum$Companion_getInstance();
  }
  Object.defineProperty(IndexEnum.prototype, 'id', {
    get: function () {
      return this.id_nfqogd$_0;
    }
  });
  var IndexEnum$VOID_instance;
  function IndexEnum$VOID_getInstance() {
    IndexEnum_initFields();
    return IndexEnum$VOID_instance;
  }
  var IndexEnum$BYTE_instance;
  function IndexEnum$BYTE_getInstance() {
    IndexEnum_initFields();
    return IndexEnum$BYTE_instance;
  }
  var IndexEnum$SHORT_instance;
  function IndexEnum$SHORT_getInstance() {
    IndexEnum_initFields();
    return IndexEnum$SHORT_instance;
  }
  function IndexEnum$Companion() {
    IndexEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, IndexEnum$values());
  }
  IndexEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var IndexEnum$Companion_instance = null;
  function IndexEnum$Companion_getInstance() {
    IndexEnum_initFields();
    if (IndexEnum$Companion_instance === null) {
      new IndexEnum$Companion();
    }
    return IndexEnum$Companion_instance;
  }
  IndexEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IndexEnum',
    interfaces: [IdEnum, Enum]
  };
  function IndexEnum$values() {
    return [IndexEnum$VOID_getInstance(), IndexEnum$BYTE_getInstance(), IndexEnum$SHORT_getInstance()];
  }
  IndexEnum.values = IndexEnum$values;
  function IndexEnum$valueOf(name) {
    switch (name) {
      case 'VOID':
        return IndexEnum$VOID_getInstance();
      case 'BYTE':
        return IndexEnum$BYTE_getInstance();
      case 'SHORT':
        return IndexEnum$SHORT_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.IndexEnum.' + name);
    }
  }
  IndexEnum.valueOf_61zpoe$ = IndexEnum$valueOf;
  function NumericEnum(name, ordinal, id, nbytes) {
    Enum.call(this);
    this.id_77wtvs$_0 = id;
    this.nbytes = nbytes;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function NumericEnum_initFields() {
    NumericEnum_initFields = function () {
    };
    NumericEnum$VOID_instance = new NumericEnum('VOID', 0, 0, 0);
    NumericEnum$BYTE_instance = new NumericEnum('BYTE', 1, 1, 1);
    NumericEnum$SHORT_instance = new NumericEnum('SHORT', 2, 2, 2);
    NumericEnum$FLOAT_instance = new NumericEnum('FLOAT', 3, 3, 4);
    NumericEnum$Companion_getInstance();
  }
  Object.defineProperty(NumericEnum.prototype, 'id', {
    get: function () {
      return this.id_77wtvs$_0;
    }
  });
  var NumericEnum$VOID_instance;
  function NumericEnum$VOID_getInstance() {
    NumericEnum_initFields();
    return NumericEnum$VOID_instance;
  }
  var NumericEnum$BYTE_instance;
  function NumericEnum$BYTE_getInstance() {
    NumericEnum_initFields();
    return NumericEnum$BYTE_instance;
  }
  var NumericEnum$SHORT_instance;
  function NumericEnum$SHORT_getInstance() {
    NumericEnum_initFields();
    return NumericEnum$SHORT_instance;
  }
  var NumericEnum$FLOAT_instance;
  function NumericEnum$FLOAT_getInstance() {
    NumericEnum_initFields();
    return NumericEnum$FLOAT_instance;
  }
  function NumericEnum$Companion() {
    NumericEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, NumericEnum$values());
  }
  NumericEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var NumericEnum$Companion_instance = null;
  function NumericEnum$Companion_getInstance() {
    NumericEnum_initFields();
    if (NumericEnum$Companion_instance === null) {
      new NumericEnum$Companion();
    }
    return NumericEnum$Companion_instance;
  }
  NumericEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NumericEnum',
    interfaces: [IdEnum, Enum]
  };
  function NumericEnum$values() {
    return [NumericEnum$VOID_getInstance(), NumericEnum$BYTE_getInstance(), NumericEnum$SHORT_getInstance(), NumericEnum$FLOAT_getInstance()];
  }
  NumericEnum.values = NumericEnum$values;
  function NumericEnum$valueOf(name) {
    switch (name) {
      case 'VOID':
        return NumericEnum$VOID_getInstance();
      case 'BYTE':
        return NumericEnum$BYTE_getInstance();
      case 'SHORT':
        return NumericEnum$SHORT_getInstance();
      case 'FLOAT':
        return NumericEnum$FLOAT_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.NumericEnum.' + name);
    }
  }
  NumericEnum.valueOf_61zpoe$ = NumericEnum$valueOf;
  function ColorEnum(name, ordinal, id, nbytes) {
    Enum.call(this);
    this.id_ytmj1a$_0 = id;
    this.nbytes = nbytes;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ColorEnum_initFields() {
    ColorEnum_initFields = function () {
    };
    ColorEnum$VOID_instance = new ColorEnum('VOID', 0, 0, 0);
    ColorEnum$INVALID1_instance = new ColorEnum('INVALID1', 1, 1, 0);
    ColorEnum$INVALID2_instance = new ColorEnum('INVALID2', 2, 2, 0);
    ColorEnum$INVALID3_instance = new ColorEnum('INVALID3', 3, 3, 0);
    ColorEnum$COLOR5650_instance = new ColorEnum('COLOR5650', 4, 4, 2);
    ColorEnum$COLOR5551_instance = new ColorEnum('COLOR5551', 5, 5, 2);
    ColorEnum$COLOR4444_instance = new ColorEnum('COLOR4444', 6, 6, 2);
    ColorEnum$COLOR8888_instance = new ColorEnum('COLOR8888', 7, 7, 4);
    ColorEnum$Companion_getInstance();
  }
  Object.defineProperty(ColorEnum.prototype, 'id', {
    get: function () {
      return this.id_ytmj1a$_0;
    }
  });
  var ColorEnum$VOID_instance;
  function ColorEnum$VOID_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$VOID_instance;
  }
  var ColorEnum$INVALID1_instance;
  function ColorEnum$INVALID1_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$INVALID1_instance;
  }
  var ColorEnum$INVALID2_instance;
  function ColorEnum$INVALID2_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$INVALID2_instance;
  }
  var ColorEnum$INVALID3_instance;
  function ColorEnum$INVALID3_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$INVALID3_instance;
  }
  var ColorEnum$COLOR5650_instance;
  function ColorEnum$COLOR5650_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$COLOR5650_instance;
  }
  var ColorEnum$COLOR5551_instance;
  function ColorEnum$COLOR5551_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$COLOR5551_instance;
  }
  var ColorEnum$COLOR4444_instance;
  function ColorEnum$COLOR4444_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$COLOR4444_instance;
  }
  var ColorEnum$COLOR8888_instance;
  function ColorEnum$COLOR8888_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$COLOR8888_instance;
  }
  function ColorEnum$Companion() {
    ColorEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, ColorEnum$values());
  }
  ColorEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var ColorEnum$Companion_instance = null;
  function ColorEnum$Companion_getInstance() {
    ColorEnum_initFields();
    if (ColorEnum$Companion_instance === null) {
      new ColorEnum$Companion();
    }
    return ColorEnum$Companion_instance;
  }
  ColorEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ColorEnum',
    interfaces: [IdEnum, Enum]
  };
  function ColorEnum$values() {
    return [ColorEnum$VOID_getInstance(), ColorEnum$INVALID1_getInstance(), ColorEnum$INVALID2_getInstance(), ColorEnum$INVALID3_getInstance(), ColorEnum$COLOR5650_getInstance(), ColorEnum$COLOR5551_getInstance(), ColorEnum$COLOR4444_getInstance(), ColorEnum$COLOR8888_getInstance()];
  }
  ColorEnum.values = ColorEnum$values;
  function ColorEnum$valueOf(name) {
    switch (name) {
      case 'VOID':
        return ColorEnum$VOID_getInstance();
      case 'INVALID1':
        return ColorEnum$INVALID1_getInstance();
      case 'INVALID2':
        return ColorEnum$INVALID2_getInstance();
      case 'INVALID3':
        return ColorEnum$INVALID3_getInstance();
      case 'COLOR5650':
        return ColorEnum$COLOR5650_getInstance();
      case 'COLOR5551':
        return ColorEnum$COLOR5551_getInstance();
      case 'COLOR4444':
        return ColorEnum$COLOR4444_getInstance();
      case 'COLOR8888':
        return ColorEnum$COLOR8888_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.ColorEnum.' + name);
    }
  }
  ColorEnum.valueOf_61zpoe$ = ColorEnum$valueOf;
  function LightTypeEnum(name, ordinal, id) {
    Enum.call(this);
    this.id_4q49kb$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function LightTypeEnum_initFields() {
    LightTypeEnum_initFields = function () {
    };
    LightTypeEnum$DIRECTIONAL_instance = new LightTypeEnum('DIRECTIONAL', 0, 0);
    LightTypeEnum$POINT_LIGHT_instance = new LightTypeEnum('POINT_LIGHT', 1, 1);
    LightTypeEnum$SPOT_LIGHT_instance = new LightTypeEnum('SPOT_LIGHT', 2, 2);
    LightTypeEnum$Companion_getInstance();
  }
  Object.defineProperty(LightTypeEnum.prototype, 'id', {
    get: function () {
      return this.id_4q49kb$_0;
    }
  });
  var LightTypeEnum$DIRECTIONAL_instance;
  function LightTypeEnum$DIRECTIONAL_getInstance() {
    LightTypeEnum_initFields();
    return LightTypeEnum$DIRECTIONAL_instance;
  }
  var LightTypeEnum$POINT_LIGHT_instance;
  function LightTypeEnum$POINT_LIGHT_getInstance() {
    LightTypeEnum_initFields();
    return LightTypeEnum$POINT_LIGHT_instance;
  }
  var LightTypeEnum$SPOT_LIGHT_instance;
  function LightTypeEnum$SPOT_LIGHT_getInstance() {
    LightTypeEnum_initFields();
    return LightTypeEnum$SPOT_LIGHT_instance;
  }
  function LightTypeEnum$Companion() {
    LightTypeEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, LightTypeEnum$values());
  }
  LightTypeEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var LightTypeEnum$Companion_instance = null;
  function LightTypeEnum$Companion_getInstance() {
    LightTypeEnum_initFields();
    if (LightTypeEnum$Companion_instance === null) {
      new LightTypeEnum$Companion();
    }
    return LightTypeEnum$Companion_instance;
  }
  LightTypeEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LightTypeEnum',
    interfaces: [IdEnum, Enum]
  };
  function LightTypeEnum$values() {
    return [LightTypeEnum$DIRECTIONAL_getInstance(), LightTypeEnum$POINT_LIGHT_getInstance(), LightTypeEnum$SPOT_LIGHT_getInstance()];
  }
  LightTypeEnum.values = LightTypeEnum$values;
  function LightTypeEnum$valueOf(name) {
    switch (name) {
      case 'DIRECTIONAL':
        return LightTypeEnum$DIRECTIONAL_getInstance();
      case 'POINT_LIGHT':
        return LightTypeEnum$POINT_LIGHT_getInstance();
      case 'SPOT_LIGHT':
        return LightTypeEnum$SPOT_LIGHT_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.LightTypeEnum.' + name);
    }
  }
  LightTypeEnum.valueOf_61zpoe$ = LightTypeEnum$valueOf;
  function LightModelEnum(name, ordinal, id) {
    Enum.call(this);
    this.id_bzhmmc$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function LightModelEnum_initFields() {
    LightModelEnum_initFields = function () {
    };
    LightModelEnum$SINGLE_COLOR_instance = new LightModelEnum('SINGLE_COLOR', 0, 0);
    LightModelEnum$SEPARATE_SPECULAR_COLOR_instance = new LightModelEnum('SEPARATE_SPECULAR_COLOR', 1, 1);
    LightModelEnum$Companion_getInstance();
  }
  Object.defineProperty(LightModelEnum.prototype, 'id', {
    get: function () {
      return this.id_bzhmmc$_0;
    }
  });
  var LightModelEnum$SINGLE_COLOR_instance;
  function LightModelEnum$SINGLE_COLOR_getInstance() {
    LightModelEnum_initFields();
    return LightModelEnum$SINGLE_COLOR_instance;
  }
  var LightModelEnum$SEPARATE_SPECULAR_COLOR_instance;
  function LightModelEnum$SEPARATE_SPECULAR_COLOR_getInstance() {
    LightModelEnum_initFields();
    return LightModelEnum$SEPARATE_SPECULAR_COLOR_instance;
  }
  function LightModelEnum$Companion() {
    LightModelEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, LightModelEnum$values());
  }
  LightModelEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var LightModelEnum$Companion_instance = null;
  function LightModelEnum$Companion_getInstance() {
    LightModelEnum_initFields();
    if (LightModelEnum$Companion_instance === null) {
      new LightModelEnum$Companion();
    }
    return LightModelEnum$Companion_instance;
  }
  LightModelEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LightModelEnum',
    interfaces: [IdEnum, Enum]
  };
  function LightModelEnum$values() {
    return [LightModelEnum$SINGLE_COLOR_getInstance(), LightModelEnum$SEPARATE_SPECULAR_COLOR_getInstance()];
  }
  LightModelEnum.values = LightModelEnum$values;
  function LightModelEnum$valueOf(name) {
    switch (name) {
      case 'SINGLE_COLOR':
        return LightModelEnum$SINGLE_COLOR_getInstance();
      case 'SEPARATE_SPECULAR_COLOR':
        return LightModelEnum$SEPARATE_SPECULAR_COLOR_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.LightModelEnum.' + name);
    }
  }
  LightModelEnum.valueOf_61zpoe$ = LightModelEnum$valueOf;
  function TextureProjectionMapMode(name, ordinal, id) {
    Enum.call(this);
    this.id_iihbq5$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureProjectionMapMode_initFields() {
    TextureProjectionMapMode_initFields = function () {
    };
    TextureProjectionMapMode$GU_POSITION_instance = new TextureProjectionMapMode('GU_POSITION', 0, 0);
    TextureProjectionMapMode$GU_UV_instance = new TextureProjectionMapMode('GU_UV', 1, 1);
    TextureProjectionMapMode$GU_NORMALIZED_NORMAL_instance = new TextureProjectionMapMode('GU_NORMALIZED_NORMAL', 2, 2);
    TextureProjectionMapMode$GU_NORMAL_instance = new TextureProjectionMapMode('GU_NORMAL', 3, 3);
    TextureProjectionMapMode$Companion_getInstance();
  }
  Object.defineProperty(TextureProjectionMapMode.prototype, 'id', {
    get: function () {
      return this.id_iihbq5$_0;
    }
  });
  var TextureProjectionMapMode$GU_POSITION_instance;
  function TextureProjectionMapMode$GU_POSITION_getInstance() {
    TextureProjectionMapMode_initFields();
    return TextureProjectionMapMode$GU_POSITION_instance;
  }
  var TextureProjectionMapMode$GU_UV_instance;
  function TextureProjectionMapMode$GU_UV_getInstance() {
    TextureProjectionMapMode_initFields();
    return TextureProjectionMapMode$GU_UV_instance;
  }
  var TextureProjectionMapMode$GU_NORMALIZED_NORMAL_instance;
  function TextureProjectionMapMode$GU_NORMALIZED_NORMAL_getInstance() {
    TextureProjectionMapMode_initFields();
    return TextureProjectionMapMode$GU_NORMALIZED_NORMAL_instance;
  }
  var TextureProjectionMapMode$GU_NORMAL_instance;
  function TextureProjectionMapMode$GU_NORMAL_getInstance() {
    TextureProjectionMapMode_initFields();
    return TextureProjectionMapMode$GU_NORMAL_instance;
  }
  function TextureProjectionMapMode$Companion() {
    TextureProjectionMapMode$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, TextureProjectionMapMode$values());
  }
  TextureProjectionMapMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var TextureProjectionMapMode$Companion_instance = null;
  function TextureProjectionMapMode$Companion_getInstance() {
    TextureProjectionMapMode_initFields();
    if (TextureProjectionMapMode$Companion_instance === null) {
      new TextureProjectionMapMode$Companion();
    }
    return TextureProjectionMapMode$Companion_instance;
  }
  TextureProjectionMapMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureProjectionMapMode',
    interfaces: [IdEnum, Enum]
  };
  function TextureProjectionMapMode$values() {
    return [TextureProjectionMapMode$GU_POSITION_getInstance(), TextureProjectionMapMode$GU_UV_getInstance(), TextureProjectionMapMode$GU_NORMALIZED_NORMAL_getInstance(), TextureProjectionMapMode$GU_NORMAL_getInstance()];
  }
  TextureProjectionMapMode.values = TextureProjectionMapMode$values;
  function TextureProjectionMapMode$valueOf(name) {
    switch (name) {
      case 'GU_POSITION':
        return TextureProjectionMapMode$GU_POSITION_getInstance();
      case 'GU_UV':
        return TextureProjectionMapMode$GU_UV_getInstance();
      case 'GU_NORMALIZED_NORMAL':
        return TextureProjectionMapMode$GU_NORMALIZED_NORMAL_getInstance();
      case 'GU_NORMAL':
        return TextureProjectionMapMode$GU_NORMAL_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.TextureProjectionMapMode.' + name);
    }
  }
  TextureProjectionMapMode.valueOf_61zpoe$ = TextureProjectionMapMode$valueOf;
  function TextureMapMode(name, ordinal, id) {
    Enum.call(this);
    this.id_tstsa4$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureMapMode_initFields() {
    TextureMapMode_initFields = function () {
    };
    TextureMapMode$GU_TEXTURE_COORDS_instance = new TextureMapMode('GU_TEXTURE_COORDS', 0, 0);
    TextureMapMode$GU_TEXTURE_MATRIX_instance = new TextureMapMode('GU_TEXTURE_MATRIX', 1, 1);
    TextureMapMode$GU_ENVIRONMENT_MAP_instance = new TextureMapMode('GU_ENVIRONMENT_MAP', 2, 2);
    TextureMapMode$Companion_getInstance();
  }
  Object.defineProperty(TextureMapMode.prototype, 'id', {
    get: function () {
      return this.id_tstsa4$_0;
    }
  });
  var TextureMapMode$GU_TEXTURE_COORDS_instance;
  function TextureMapMode$GU_TEXTURE_COORDS_getInstance() {
    TextureMapMode_initFields();
    return TextureMapMode$GU_TEXTURE_COORDS_instance;
  }
  var TextureMapMode$GU_TEXTURE_MATRIX_instance;
  function TextureMapMode$GU_TEXTURE_MATRIX_getInstance() {
    TextureMapMode_initFields();
    return TextureMapMode$GU_TEXTURE_MATRIX_instance;
  }
  var TextureMapMode$GU_ENVIRONMENT_MAP_instance;
  function TextureMapMode$GU_ENVIRONMENT_MAP_getInstance() {
    TextureMapMode_initFields();
    return TextureMapMode$GU_ENVIRONMENT_MAP_instance;
  }
  function TextureMapMode$Companion() {
    TextureMapMode$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, TextureMapMode$values());
  }
  TextureMapMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var TextureMapMode$Companion_instance = null;
  function TextureMapMode$Companion_getInstance() {
    TextureMapMode_initFields();
    if (TextureMapMode$Companion_instance === null) {
      new TextureMapMode$Companion();
    }
    return TextureMapMode$Companion_instance;
  }
  TextureMapMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureMapMode',
    interfaces: [IdEnum, Enum]
  };
  function TextureMapMode$values() {
    return [TextureMapMode$GU_TEXTURE_COORDS_getInstance(), TextureMapMode$GU_TEXTURE_MATRIX_getInstance(), TextureMapMode$GU_ENVIRONMENT_MAP_getInstance()];
  }
  TextureMapMode.values = TextureMapMode$values;
  function TextureMapMode$valueOf(name) {
    switch (name) {
      case 'GU_TEXTURE_COORDS':
        return TextureMapMode$GU_TEXTURE_COORDS_getInstance();
      case 'GU_TEXTURE_MATRIX':
        return TextureMapMode$GU_TEXTURE_MATRIX_getInstance();
      case 'GU_ENVIRONMENT_MAP':
        return TextureMapMode$GU_ENVIRONMENT_MAP_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.TextureMapMode.' + name);
    }
  }
  TextureMapMode.valueOf_61zpoe$ = TextureMapMode$valueOf;
  function TextureLevelMode(name, ordinal, id) {
    Enum.call(this);
    this.id_8fy36c$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureLevelMode_initFields() {
    TextureLevelMode_initFields = function () {
    };
    TextureLevelMode$AUTO_instance = new TextureLevelMode('AUTO', 0, 0);
    TextureLevelMode$CONST_instance = new TextureLevelMode('CONST', 1, 1);
    TextureLevelMode$SLOPE_instance = new TextureLevelMode('SLOPE', 2, 2);
    TextureLevelMode$Companion_getInstance();
  }
  Object.defineProperty(TextureLevelMode.prototype, 'id', {
    get: function () {
      return this.id_8fy36c$_0;
    }
  });
  var TextureLevelMode$AUTO_instance;
  function TextureLevelMode$AUTO_getInstance() {
    TextureLevelMode_initFields();
    return TextureLevelMode$AUTO_instance;
  }
  var TextureLevelMode$CONST_instance;
  function TextureLevelMode$CONST_getInstance() {
    TextureLevelMode_initFields();
    return TextureLevelMode$CONST_instance;
  }
  var TextureLevelMode$SLOPE_instance;
  function TextureLevelMode$SLOPE_getInstance() {
    TextureLevelMode_initFields();
    return TextureLevelMode$SLOPE_instance;
  }
  function TextureLevelMode$Companion() {
    TextureLevelMode$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, TextureLevelMode$values());
  }
  TextureLevelMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var TextureLevelMode$Companion_instance = null;
  function TextureLevelMode$Companion_getInstance() {
    TextureLevelMode_initFields();
    if (TextureLevelMode$Companion_instance === null) {
      new TextureLevelMode$Companion();
    }
    return TextureLevelMode$Companion_instance;
  }
  TextureLevelMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureLevelMode',
    interfaces: [IdEnum, Enum]
  };
  function TextureLevelMode$values() {
    return [TextureLevelMode$AUTO_getInstance(), TextureLevelMode$CONST_getInstance(), TextureLevelMode$SLOPE_getInstance()];
  }
  TextureLevelMode.values = TextureLevelMode$values;
  function TextureLevelMode$valueOf(name) {
    switch (name) {
      case 'AUTO':
        return TextureLevelMode$AUTO_getInstance();
      case 'CONST':
        return TextureLevelMode$CONST_getInstance();
      case 'SLOPE':
        return TextureLevelMode$SLOPE_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.TextureLevelMode.' + name);
    }
  }
  TextureLevelMode.valueOf_61zpoe$ = TextureLevelMode$valueOf;
  function TestFunctionEnum(name, ordinal, id) {
    Enum.call(this);
    this.id_wk5jfx$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TestFunctionEnum_initFields() {
    TestFunctionEnum_initFields = function () {
    };
    TestFunctionEnum$NEVER_instance = new TestFunctionEnum('NEVER', 0, 0);
    TestFunctionEnum$ALWAYS_instance = new TestFunctionEnum('ALWAYS', 1, 1);
    TestFunctionEnum$EQUAL_instance = new TestFunctionEnum('EQUAL', 2, 2);
    TestFunctionEnum$NOT_EQUAL_instance = new TestFunctionEnum('NOT_EQUAL', 3, 3);
    TestFunctionEnum$LESS_instance = new TestFunctionEnum('LESS', 4, 4);
    TestFunctionEnum$LESS_OR_EQUAL_instance = new TestFunctionEnum('LESS_OR_EQUAL', 5, 5);
    TestFunctionEnum$GREATER_instance = new TestFunctionEnum('GREATER', 6, 6);
    TestFunctionEnum$GREATER_OR_EQUAL_instance = new TestFunctionEnum('GREATER_OR_EQUAL', 7, 7);
    TestFunctionEnum$Companion_getInstance();
  }
  Object.defineProperty(TestFunctionEnum.prototype, 'id', {
    get: function () {
      return this.id_wk5jfx$_0;
    }
  });
  var TestFunctionEnum$NEVER_instance;
  function TestFunctionEnum$NEVER_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$NEVER_instance;
  }
  var TestFunctionEnum$ALWAYS_instance;
  function TestFunctionEnum$ALWAYS_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$ALWAYS_instance;
  }
  var TestFunctionEnum$EQUAL_instance;
  function TestFunctionEnum$EQUAL_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$EQUAL_instance;
  }
  var TestFunctionEnum$NOT_EQUAL_instance;
  function TestFunctionEnum$NOT_EQUAL_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$NOT_EQUAL_instance;
  }
  var TestFunctionEnum$LESS_instance;
  function TestFunctionEnum$LESS_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$LESS_instance;
  }
  var TestFunctionEnum$LESS_OR_EQUAL_instance;
  function TestFunctionEnum$LESS_OR_EQUAL_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$LESS_OR_EQUAL_instance;
  }
  var TestFunctionEnum$GREATER_instance;
  function TestFunctionEnum$GREATER_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$GREATER_instance;
  }
  var TestFunctionEnum$GREATER_OR_EQUAL_instance;
  function TestFunctionEnum$GREATER_OR_EQUAL_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$GREATER_OR_EQUAL_instance;
  }
  function TestFunctionEnum$Companion() {
    TestFunctionEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, TestFunctionEnum$values());
  }
  TestFunctionEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var TestFunctionEnum$Companion_instance = null;
  function TestFunctionEnum$Companion_getInstance() {
    TestFunctionEnum_initFields();
    if (TestFunctionEnum$Companion_instance === null) {
      new TestFunctionEnum$Companion();
    }
    return TestFunctionEnum$Companion_instance;
  }
  TestFunctionEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TestFunctionEnum',
    interfaces: [IdEnum, Enum]
  };
  function TestFunctionEnum$values() {
    return [TestFunctionEnum$NEVER_getInstance(), TestFunctionEnum$ALWAYS_getInstance(), TestFunctionEnum$EQUAL_getInstance(), TestFunctionEnum$NOT_EQUAL_getInstance(), TestFunctionEnum$LESS_getInstance(), TestFunctionEnum$LESS_OR_EQUAL_getInstance(), TestFunctionEnum$GREATER_getInstance(), TestFunctionEnum$GREATER_OR_EQUAL_getInstance()];
  }
  TestFunctionEnum.values = TestFunctionEnum$values;
  function TestFunctionEnum$valueOf(name) {
    switch (name) {
      case 'NEVER':
        return TestFunctionEnum$NEVER_getInstance();
      case 'ALWAYS':
        return TestFunctionEnum$ALWAYS_getInstance();
      case 'EQUAL':
        return TestFunctionEnum$EQUAL_getInstance();
      case 'NOT_EQUAL':
        return TestFunctionEnum$NOT_EQUAL_getInstance();
      case 'LESS':
        return TestFunctionEnum$LESS_getInstance();
      case 'LESS_OR_EQUAL':
        return TestFunctionEnum$LESS_OR_EQUAL_getInstance();
      case 'GREATER':
        return TestFunctionEnum$GREATER_getInstance();
      case 'GREATER_OR_EQUAL':
        return TestFunctionEnum$GREATER_OR_EQUAL_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.TestFunctionEnum.' + name);
    }
  }
  TestFunctionEnum.valueOf_61zpoe$ = TestFunctionEnum$valueOf;
  function ShadingModelEnum(name, ordinal, id) {
    Enum.call(this);
    this.id_9jtpbc$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ShadingModelEnum_initFields() {
    ShadingModelEnum_initFields = function () {
    };
    ShadingModelEnum$FLAT_instance = new ShadingModelEnum('FLAT', 0, 0);
    ShadingModelEnum$SMOOTH_instance = new ShadingModelEnum('SMOOTH', 1, 1);
    ShadingModelEnum$Companion_getInstance();
  }
  Object.defineProperty(ShadingModelEnum.prototype, 'id', {
    get: function () {
      return this.id_9jtpbc$_0;
    }
  });
  var ShadingModelEnum$FLAT_instance;
  function ShadingModelEnum$FLAT_getInstance() {
    ShadingModelEnum_initFields();
    return ShadingModelEnum$FLAT_instance;
  }
  var ShadingModelEnum$SMOOTH_instance;
  function ShadingModelEnum$SMOOTH_getInstance() {
    ShadingModelEnum_initFields();
    return ShadingModelEnum$SMOOTH_instance;
  }
  function ShadingModelEnum$Companion() {
    ShadingModelEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, ShadingModelEnum$values());
  }
  ShadingModelEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var ShadingModelEnum$Companion_instance = null;
  function ShadingModelEnum$Companion_getInstance() {
    ShadingModelEnum_initFields();
    if (ShadingModelEnum$Companion_instance === null) {
      new ShadingModelEnum$Companion();
    }
    return ShadingModelEnum$Companion_instance;
  }
  ShadingModelEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ShadingModelEnum',
    interfaces: [IdEnum, Enum]
  };
  function ShadingModelEnum$values() {
    return [ShadingModelEnum$FLAT_getInstance(), ShadingModelEnum$SMOOTH_getInstance()];
  }
  ShadingModelEnum.values = ShadingModelEnum$values;
  function ShadingModelEnum$valueOf(name) {
    switch (name) {
      case 'FLAT':
        return ShadingModelEnum$FLAT_getInstance();
      case 'SMOOTH':
        return ShadingModelEnum$SMOOTH_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.ShadingModelEnum.' + name);
    }
  }
  ShadingModelEnum.valueOf_61zpoe$ = ShadingModelEnum$valueOf;
  function GuBlendingFactor(name, ordinal, id) {
    Enum.call(this);
    this.id_yu50t2$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function GuBlendingFactor_initFields() {
    GuBlendingFactor_initFields = function () {
    };
    GuBlendingFactor$GU_SRC_COLOR_instance = new GuBlendingFactor('GU_SRC_COLOR', 0, 0);
    GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_instance = new GuBlendingFactor('GU_ONE_MINUS_SRC_COLOR', 1, 1);
    GuBlendingFactor$GU_SRC_ALPHA_instance = new GuBlendingFactor('GU_SRC_ALPHA', 2, 2);
    GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_instance = new GuBlendingFactor('GU_ONE_MINUS_SRC_ALPHA', 3, 3);
    GuBlendingFactor$GU_DST_ALPHA_instance = new GuBlendingFactor('GU_DST_ALPHA', 4, 4);
    GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_instance = new GuBlendingFactor('GU_ONE_MINUS_DST_ALPHA', 5, 5);
    GuBlendingFactor$GU_FIX_instance = new GuBlendingFactor('GU_FIX', 6, 10);
    GuBlendingFactor$Companion_getInstance();
  }
  Object.defineProperty(GuBlendingFactor.prototype, 'id', {
    get: function () {
      return this.id_yu50t2$_0;
    }
  });
  var GuBlendingFactor$GU_SRC_COLOR_instance;
  function GuBlendingFactor$GU_SRC_COLOR_getInstance() {
    GuBlendingFactor_initFields();
    return GuBlendingFactor$GU_SRC_COLOR_instance;
  }
  var GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_instance;
  function GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_getInstance() {
    GuBlendingFactor_initFields();
    return GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_instance;
  }
  var GuBlendingFactor$GU_SRC_ALPHA_instance;
  function GuBlendingFactor$GU_SRC_ALPHA_getInstance() {
    GuBlendingFactor_initFields();
    return GuBlendingFactor$GU_SRC_ALPHA_instance;
  }
  var GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_instance;
  function GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_getInstance() {
    GuBlendingFactor_initFields();
    return GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_instance;
  }
  var GuBlendingFactor$GU_DST_ALPHA_instance;
  function GuBlendingFactor$GU_DST_ALPHA_getInstance() {
    GuBlendingFactor_initFields();
    return GuBlendingFactor$GU_DST_ALPHA_instance;
  }
  var GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_instance;
  function GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_getInstance() {
    GuBlendingFactor_initFields();
    return GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_instance;
  }
  var GuBlendingFactor$GU_FIX_instance;
  function GuBlendingFactor$GU_FIX_getInstance() {
    GuBlendingFactor_initFields();
    return GuBlendingFactor$GU_FIX_instance;
  }
  function GuBlendingFactor$Companion() {
    GuBlendingFactor$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, GuBlendingFactor$values());
  }
  GuBlendingFactor$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var GuBlendingFactor$Companion_instance = null;
  function GuBlendingFactor$Companion_getInstance() {
    GuBlendingFactor_initFields();
    if (GuBlendingFactor$Companion_instance === null) {
      new GuBlendingFactor$Companion();
    }
    return GuBlendingFactor$Companion_instance;
  }
  GuBlendingFactor.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GuBlendingFactor',
    interfaces: [IdEnum, Enum]
  };
  function GuBlendingFactor$values() {
    return [GuBlendingFactor$GU_SRC_COLOR_getInstance(), GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_getInstance(), GuBlendingFactor$GU_SRC_ALPHA_getInstance(), GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_getInstance(), GuBlendingFactor$GU_DST_ALPHA_getInstance(), GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_getInstance(), GuBlendingFactor$GU_FIX_getInstance()];
  }
  GuBlendingFactor.values = GuBlendingFactor$values;
  function GuBlendingFactor$valueOf(name) {
    switch (name) {
      case 'GU_SRC_COLOR':
        return GuBlendingFactor$GU_SRC_COLOR_getInstance();
      case 'GU_ONE_MINUS_SRC_COLOR':
        return GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_getInstance();
      case 'GU_SRC_ALPHA':
        return GuBlendingFactor$GU_SRC_ALPHA_getInstance();
      case 'GU_ONE_MINUS_SRC_ALPHA':
        return GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_getInstance();
      case 'GU_DST_ALPHA':
        return GuBlendingFactor$GU_DST_ALPHA_getInstance();
      case 'GU_ONE_MINUS_DST_ALPHA':
        return GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_getInstance();
      case 'GU_FIX':
        return GuBlendingFactor$GU_FIX_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.GuBlendingFactor.' + name);
    }
  }
  GuBlendingFactor.valueOf_61zpoe$ = GuBlendingFactor$valueOf;
  function GuBlendingEquation(name, ordinal, id) {
    Enum.call(this);
    this.id_qmradv$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function GuBlendingEquation_initFields() {
    GuBlendingEquation_initFields = function () {
    };
    GuBlendingEquation$ADD_instance = new GuBlendingEquation('ADD', 0, 0);
    GuBlendingEquation$SUBSTRACT_instance = new GuBlendingEquation('SUBSTRACT', 1, 1);
    GuBlendingEquation$REVERSE_SUBSTRACT_instance = new GuBlendingEquation('REVERSE_SUBSTRACT', 2, 2);
    GuBlendingEquation$MIN_instance = new GuBlendingEquation('MIN', 3, 3);
    GuBlendingEquation$MAX_instance = new GuBlendingEquation('MAX', 4, 4);
    GuBlendingEquation$ABS_instance = new GuBlendingEquation('ABS', 5, 5);
    GuBlendingEquation$Companion_getInstance();
  }
  Object.defineProperty(GuBlendingEquation.prototype, 'id', {
    get: function () {
      return this.id_qmradv$_0;
    }
  });
  var GuBlendingEquation$ADD_instance;
  function GuBlendingEquation$ADD_getInstance() {
    GuBlendingEquation_initFields();
    return GuBlendingEquation$ADD_instance;
  }
  var GuBlendingEquation$SUBSTRACT_instance;
  function GuBlendingEquation$SUBSTRACT_getInstance() {
    GuBlendingEquation_initFields();
    return GuBlendingEquation$SUBSTRACT_instance;
  }
  var GuBlendingEquation$REVERSE_SUBSTRACT_instance;
  function GuBlendingEquation$REVERSE_SUBSTRACT_getInstance() {
    GuBlendingEquation_initFields();
    return GuBlendingEquation$REVERSE_SUBSTRACT_instance;
  }
  var GuBlendingEquation$MIN_instance;
  function GuBlendingEquation$MIN_getInstance() {
    GuBlendingEquation_initFields();
    return GuBlendingEquation$MIN_instance;
  }
  var GuBlendingEquation$MAX_instance;
  function GuBlendingEquation$MAX_getInstance() {
    GuBlendingEquation_initFields();
    return GuBlendingEquation$MAX_instance;
  }
  var GuBlendingEquation$ABS_instance;
  function GuBlendingEquation$ABS_getInstance() {
    GuBlendingEquation_initFields();
    return GuBlendingEquation$ABS_instance;
  }
  function GuBlendingEquation$Companion() {
    GuBlendingEquation$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, GuBlendingEquation$values());
  }
  GuBlendingEquation$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var GuBlendingEquation$Companion_instance = null;
  function GuBlendingEquation$Companion_getInstance() {
    GuBlendingEquation_initFields();
    if (GuBlendingEquation$Companion_instance === null) {
      new GuBlendingEquation$Companion();
    }
    return GuBlendingEquation$Companion_instance;
  }
  GuBlendingEquation.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GuBlendingEquation',
    interfaces: [IdEnum, Enum]
  };
  function GuBlendingEquation$values() {
    return [GuBlendingEquation$ADD_getInstance(), GuBlendingEquation$SUBSTRACT_getInstance(), GuBlendingEquation$REVERSE_SUBSTRACT_getInstance(), GuBlendingEquation$MIN_getInstance(), GuBlendingEquation$MAX_getInstance(), GuBlendingEquation$ABS_getInstance()];
  }
  GuBlendingEquation.values = GuBlendingEquation$values;
  function GuBlendingEquation$valueOf(name) {
    switch (name) {
      case 'ADD':
        return GuBlendingEquation$ADD_getInstance();
      case 'SUBSTRACT':
        return GuBlendingEquation$SUBSTRACT_getInstance();
      case 'REVERSE_SUBSTRACT':
        return GuBlendingEquation$REVERSE_SUBSTRACT_getInstance();
      case 'MIN':
        return GuBlendingEquation$MIN_getInstance();
      case 'MAX':
        return GuBlendingEquation$MAX_getInstance();
      case 'ABS':
        return GuBlendingEquation$ABS_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.GuBlendingEquation.' + name);
    }
  }
  GuBlendingEquation.valueOf_61zpoe$ = GuBlendingEquation$valueOf;
  function StencilOperationEnum(name, ordinal, id) {
    Enum.call(this);
    this.id_ylb784$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function StencilOperationEnum_initFields() {
    StencilOperationEnum_initFields = function () {
    };
    StencilOperationEnum$KEEP_instance = new StencilOperationEnum('KEEP', 0, 0);
    StencilOperationEnum$ZERO_instance = new StencilOperationEnum('ZERO', 1, 1);
    StencilOperationEnum$REPLACE_instance = new StencilOperationEnum('REPLACE', 2, 2);
    StencilOperationEnum$INVERT_instance = new StencilOperationEnum('INVERT', 3, 3);
    StencilOperationEnum$INCREMENT_instance = new StencilOperationEnum('INCREMENT', 4, 4);
    StencilOperationEnum$DECREMENT_instance = new StencilOperationEnum('DECREMENT', 5, 5);
    StencilOperationEnum$Companion_getInstance();
  }
  Object.defineProperty(StencilOperationEnum.prototype, 'id', {
    get: function () {
      return this.id_ylb784$_0;
    }
  });
  var StencilOperationEnum$KEEP_instance;
  function StencilOperationEnum$KEEP_getInstance() {
    StencilOperationEnum_initFields();
    return StencilOperationEnum$KEEP_instance;
  }
  var StencilOperationEnum$ZERO_instance;
  function StencilOperationEnum$ZERO_getInstance() {
    StencilOperationEnum_initFields();
    return StencilOperationEnum$ZERO_instance;
  }
  var StencilOperationEnum$REPLACE_instance;
  function StencilOperationEnum$REPLACE_getInstance() {
    StencilOperationEnum_initFields();
    return StencilOperationEnum$REPLACE_instance;
  }
  var StencilOperationEnum$INVERT_instance;
  function StencilOperationEnum$INVERT_getInstance() {
    StencilOperationEnum_initFields();
    return StencilOperationEnum$INVERT_instance;
  }
  var StencilOperationEnum$INCREMENT_instance;
  function StencilOperationEnum$INCREMENT_getInstance() {
    StencilOperationEnum_initFields();
    return StencilOperationEnum$INCREMENT_instance;
  }
  var StencilOperationEnum$DECREMENT_instance;
  function StencilOperationEnum$DECREMENT_getInstance() {
    StencilOperationEnum_initFields();
    return StencilOperationEnum$DECREMENT_instance;
  }
  function StencilOperationEnum$Companion() {
    StencilOperationEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, StencilOperationEnum$values());
  }
  StencilOperationEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var StencilOperationEnum$Companion_instance = null;
  function StencilOperationEnum$Companion_getInstance() {
    StencilOperationEnum_initFields();
    if (StencilOperationEnum$Companion_instance === null) {
      new StencilOperationEnum$Companion();
    }
    return StencilOperationEnum$Companion_instance;
  }
  StencilOperationEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StencilOperationEnum',
    interfaces: [IdEnum, Enum]
  };
  function StencilOperationEnum$values() {
    return [StencilOperationEnum$KEEP_getInstance(), StencilOperationEnum$ZERO_getInstance(), StencilOperationEnum$REPLACE_getInstance(), StencilOperationEnum$INVERT_getInstance(), StencilOperationEnum$INCREMENT_getInstance(), StencilOperationEnum$DECREMENT_getInstance()];
  }
  StencilOperationEnum.values = StencilOperationEnum$values;
  function StencilOperationEnum$valueOf(name) {
    switch (name) {
      case 'KEEP':
        return StencilOperationEnum$KEEP_getInstance();
      case 'ZERO':
        return StencilOperationEnum$ZERO_getInstance();
      case 'REPLACE':
        return StencilOperationEnum$REPLACE_getInstance();
      case 'INVERT':
        return StencilOperationEnum$INVERT_getInstance();
      case 'INCREMENT':
        return StencilOperationEnum$INCREMENT_getInstance();
      case 'DECREMENT':
        return StencilOperationEnum$DECREMENT_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.StencilOperationEnum.' + name);
    }
  }
  StencilOperationEnum.valueOf_61zpoe$ = StencilOperationEnum$valueOf;
  function WrapMode(name, ordinal, id) {
    Enum.call(this);
    this.id_7bsgqd$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function WrapMode_initFields() {
    WrapMode_initFields = function () {
    };
    WrapMode$REPEAT_instance = new WrapMode('REPEAT', 0, 0);
    WrapMode$CLAMP_instance = new WrapMode('CLAMP', 1, 1);
    WrapMode$Companion_getInstance();
  }
  Object.defineProperty(WrapMode.prototype, 'id', {
    get: function () {
      return this.id_7bsgqd$_0;
    }
  });
  var WrapMode$REPEAT_instance;
  function WrapMode$REPEAT_getInstance() {
    WrapMode_initFields();
    return WrapMode$REPEAT_instance;
  }
  var WrapMode$CLAMP_instance;
  function WrapMode$CLAMP_getInstance() {
    WrapMode_initFields();
    return WrapMode$CLAMP_instance;
  }
  function WrapMode$Companion() {
    WrapMode$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, WrapMode$values());
  }
  WrapMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var WrapMode$Companion_instance = null;
  function WrapMode$Companion_getInstance() {
    WrapMode_initFields();
    if (WrapMode$Companion_instance === null) {
      new WrapMode$Companion();
    }
    return WrapMode$Companion_instance;
  }
  WrapMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WrapMode',
    interfaces: [IdEnum, Enum]
  };
  function WrapMode$values() {
    return [WrapMode$REPEAT_getInstance(), WrapMode$CLAMP_getInstance()];
  }
  WrapMode.values = WrapMode$values;
  function WrapMode$valueOf(name) {
    switch (name) {
      case 'REPEAT':
        return WrapMode$REPEAT_getInstance();
      case 'CLAMP':
        return WrapMode$CLAMP_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.WrapMode.' + name);
    }
  }
  WrapMode.valueOf_61zpoe$ = WrapMode$valueOf;
  function TextureEffect(name, ordinal, id) {
    Enum.call(this);
    this.id_ft4jru$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureEffect_initFields() {
    TextureEffect_initFields = function () {
    };
    TextureEffect$MODULATE_instance = new TextureEffect('MODULATE', 0, 0);
    TextureEffect$DECAL_instance = new TextureEffect('DECAL', 1, 1);
    TextureEffect$BLEND_instance = new TextureEffect('BLEND', 2, 2);
    TextureEffect$REPLACE_instance = new TextureEffect('REPLACE', 3, 3);
    TextureEffect$ADD_instance = new TextureEffect('ADD', 4, 4);
    TextureEffect$Companion_getInstance();
  }
  Object.defineProperty(TextureEffect.prototype, 'id', {
    get: function () {
      return this.id_ft4jru$_0;
    }
  });
  var TextureEffect$MODULATE_instance;
  function TextureEffect$MODULATE_getInstance() {
    TextureEffect_initFields();
    return TextureEffect$MODULATE_instance;
  }
  var TextureEffect$DECAL_instance;
  function TextureEffect$DECAL_getInstance() {
    TextureEffect_initFields();
    return TextureEffect$DECAL_instance;
  }
  var TextureEffect$BLEND_instance;
  function TextureEffect$BLEND_getInstance() {
    TextureEffect_initFields();
    return TextureEffect$BLEND_instance;
  }
  var TextureEffect$REPLACE_instance;
  function TextureEffect$REPLACE_getInstance() {
    TextureEffect_initFields();
    return TextureEffect$REPLACE_instance;
  }
  var TextureEffect$ADD_instance;
  function TextureEffect$ADD_getInstance() {
    TextureEffect_initFields();
    return TextureEffect$ADD_instance;
  }
  function TextureEffect$Companion() {
    TextureEffect$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, TextureEffect$values());
  }
  TextureEffect$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var TextureEffect$Companion_instance = null;
  function TextureEffect$Companion_getInstance() {
    TextureEffect_initFields();
    if (TextureEffect$Companion_instance === null) {
      new TextureEffect$Companion();
    }
    return TextureEffect$Companion_instance;
  }
  TextureEffect.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureEffect',
    interfaces: [IdEnum, Enum]
  };
  function TextureEffect$values() {
    return [TextureEffect$MODULATE_getInstance(), TextureEffect$DECAL_getInstance(), TextureEffect$BLEND_getInstance(), TextureEffect$REPLACE_getInstance(), TextureEffect$ADD_getInstance()];
  }
  TextureEffect.values = TextureEffect$values;
  function TextureEffect$valueOf(name) {
    switch (name) {
      case 'MODULATE':
        return TextureEffect$MODULATE_getInstance();
      case 'DECAL':
        return TextureEffect$DECAL_getInstance();
      case 'BLEND':
        return TextureEffect$BLEND_getInstance();
      case 'REPLACE':
        return TextureEffect$REPLACE_getInstance();
      case 'ADD':
        return TextureEffect$ADD_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.TextureEffect.' + name);
    }
  }
  TextureEffect.valueOf_61zpoe$ = TextureEffect$valueOf;
  function TextureFilter(name, ordinal, id) {
    Enum.call(this);
    this.id_15ryh9$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureFilter_initFields() {
    TextureFilter_initFields = function () {
    };
    TextureFilter$NEAREST_instance = new TextureFilter('NEAREST', 0, 0);
    TextureFilter$LINEAR_instance = new TextureFilter('LINEAR', 1, 1);
    TextureFilter$NEAREST_MIPMAP_NEAREST_instance = new TextureFilter('NEAREST_MIPMAP_NEAREST', 2, 4);
    TextureFilter$LINEAR_MIPMAP_NEAREST_instance = new TextureFilter('LINEAR_MIPMAP_NEAREST', 3, 5);
    TextureFilter$NEAREST_MIPMAP_LINEAR_instance = new TextureFilter('NEAREST_MIPMAP_LINEAR', 4, 6);
    TextureFilter$LINEAR_MIPMAP_LINEAR_instance = new TextureFilter('LINEAR_MIPMAP_LINEAR', 5, 7);
    TextureFilter$Companion_getInstance();
  }
  Object.defineProperty(TextureFilter.prototype, 'id', {
    get: function () {
      return this.id_15ryh9$_0;
    }
  });
  var TextureFilter$NEAREST_instance;
  function TextureFilter$NEAREST_getInstance() {
    TextureFilter_initFields();
    return TextureFilter$NEAREST_instance;
  }
  var TextureFilter$LINEAR_instance;
  function TextureFilter$LINEAR_getInstance() {
    TextureFilter_initFields();
    return TextureFilter$LINEAR_instance;
  }
  var TextureFilter$NEAREST_MIPMAP_NEAREST_instance;
  function TextureFilter$NEAREST_MIPMAP_NEAREST_getInstance() {
    TextureFilter_initFields();
    return TextureFilter$NEAREST_MIPMAP_NEAREST_instance;
  }
  var TextureFilter$LINEAR_MIPMAP_NEAREST_instance;
  function TextureFilter$LINEAR_MIPMAP_NEAREST_getInstance() {
    TextureFilter_initFields();
    return TextureFilter$LINEAR_MIPMAP_NEAREST_instance;
  }
  var TextureFilter$NEAREST_MIPMAP_LINEAR_instance;
  function TextureFilter$NEAREST_MIPMAP_LINEAR_getInstance() {
    TextureFilter_initFields();
    return TextureFilter$NEAREST_MIPMAP_LINEAR_instance;
  }
  var TextureFilter$LINEAR_MIPMAP_LINEAR_instance;
  function TextureFilter$LINEAR_MIPMAP_LINEAR_getInstance() {
    TextureFilter_initFields();
    return TextureFilter$LINEAR_MIPMAP_LINEAR_instance;
  }
  function TextureFilter$Companion() {
    TextureFilter$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, TextureFilter$values());
  }
  TextureFilter$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var TextureFilter$Companion_instance = null;
  function TextureFilter$Companion_getInstance() {
    TextureFilter_initFields();
    if (TextureFilter$Companion_instance === null) {
      new TextureFilter$Companion();
    }
    return TextureFilter$Companion_instance;
  }
  TextureFilter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureFilter',
    interfaces: [IdEnum, Enum]
  };
  function TextureFilter$values() {
    return [TextureFilter$NEAREST_getInstance(), TextureFilter$LINEAR_getInstance(), TextureFilter$NEAREST_MIPMAP_NEAREST_getInstance(), TextureFilter$LINEAR_MIPMAP_NEAREST_getInstance(), TextureFilter$NEAREST_MIPMAP_LINEAR_getInstance(), TextureFilter$LINEAR_MIPMAP_LINEAR_getInstance()];
  }
  TextureFilter.values = TextureFilter$values;
  function TextureFilter$valueOf(name) {
    switch (name) {
      case 'NEAREST':
        return TextureFilter$NEAREST_getInstance();
      case 'LINEAR':
        return TextureFilter$LINEAR_getInstance();
      case 'NEAREST_MIPMAP_NEAREST':
        return TextureFilter$NEAREST_MIPMAP_NEAREST_getInstance();
      case 'LINEAR_MIPMAP_NEAREST':
        return TextureFilter$LINEAR_MIPMAP_NEAREST_getInstance();
      case 'NEAREST_MIPMAP_LINEAR':
        return TextureFilter$NEAREST_MIPMAP_LINEAR_getInstance();
      case 'LINEAR_MIPMAP_LINEAR':
        return TextureFilter$LINEAR_MIPMAP_LINEAR_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.TextureFilter.' + name);
    }
  }
  TextureFilter.valueOf_61zpoe$ = TextureFilter$valueOf;
  function TextureColorComponent(name, ordinal, id) {
    Enum.call(this);
    this.id_di5c9d$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureColorComponent_initFields() {
    TextureColorComponent_initFields = function () {
    };
    TextureColorComponent$RGB_instance = new TextureColorComponent('RGB', 0, 0);
    TextureColorComponent$RGBA_instance = new TextureColorComponent('RGBA', 1, 1);
    TextureColorComponent$Companion_getInstance();
  }
  Object.defineProperty(TextureColorComponent.prototype, 'id', {
    get: function () {
      return this.id_di5c9d$_0;
    }
  });
  var TextureColorComponent$RGB_instance;
  function TextureColorComponent$RGB_getInstance() {
    TextureColorComponent_initFields();
    return TextureColorComponent$RGB_instance;
  }
  var TextureColorComponent$RGBA_instance;
  function TextureColorComponent$RGBA_getInstance() {
    TextureColorComponent_initFields();
    return TextureColorComponent$RGBA_instance;
  }
  function TextureColorComponent$Companion() {
    TextureColorComponent$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, TextureColorComponent$values());
  }
  TextureColorComponent$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var TextureColorComponent$Companion_instance = null;
  function TextureColorComponent$Companion_getInstance() {
    TextureColorComponent_initFields();
    if (TextureColorComponent$Companion_instance === null) {
      new TextureColorComponent$Companion();
    }
    return TextureColorComponent$Companion_instance;
  }
  TextureColorComponent.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureColorComponent',
    interfaces: [IdEnum, Enum]
  };
  function TextureColorComponent$values() {
    return [TextureColorComponent$RGB_getInstance(), TextureColorComponent$RGBA_getInstance()];
  }
  TextureColorComponent.values = TextureColorComponent$values;
  function TextureColorComponent$valueOf(name) {
    switch (name) {
      case 'RGB':
        return TextureColorComponent$RGB_getInstance();
      case 'RGBA':
        return TextureColorComponent$RGBA_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.TextureColorComponent.' + name);
    }
  }
  TextureColorComponent.valueOf_61zpoe$ = TextureColorComponent$valueOf;
  function PrimitiveType(name, ordinal, id) {
    Enum.call(this);
    this.id_c7qgrp$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PrimitiveType_initFields() {
    PrimitiveType_initFields = function () {
    };
    PrimitiveType$POINTS_instance = new PrimitiveType('POINTS', 0, 0);
    PrimitiveType$LINES_instance = new PrimitiveType('LINES', 1, 1);
    PrimitiveType$LINE_STRIP_instance = new PrimitiveType('LINE_STRIP', 2, 2);
    PrimitiveType$TRIANGLES_instance = new PrimitiveType('TRIANGLES', 3, 3);
    PrimitiveType$TRIANGLE_STRIP_instance = new PrimitiveType('TRIANGLE_STRIP', 4, 4);
    PrimitiveType$TRIANGLE_FAN_instance = new PrimitiveType('TRIANGLE_FAN', 5, 5);
    PrimitiveType$SPRITES_instance = new PrimitiveType('SPRITES', 6, 6);
    PrimitiveType$Companion_getInstance();
  }
  Object.defineProperty(PrimitiveType.prototype, 'id', {
    get: function () {
      return this.id_c7qgrp$_0;
    }
  });
  var PrimitiveType$POINTS_instance;
  function PrimitiveType$POINTS_getInstance() {
    PrimitiveType_initFields();
    return PrimitiveType$POINTS_instance;
  }
  var PrimitiveType$LINES_instance;
  function PrimitiveType$LINES_getInstance() {
    PrimitiveType_initFields();
    return PrimitiveType$LINES_instance;
  }
  var PrimitiveType$LINE_STRIP_instance;
  function PrimitiveType$LINE_STRIP_getInstance() {
    PrimitiveType_initFields();
    return PrimitiveType$LINE_STRIP_instance;
  }
  var PrimitiveType$TRIANGLES_instance;
  function PrimitiveType$TRIANGLES_getInstance() {
    PrimitiveType_initFields();
    return PrimitiveType$TRIANGLES_instance;
  }
  var PrimitiveType$TRIANGLE_STRIP_instance;
  function PrimitiveType$TRIANGLE_STRIP_getInstance() {
    PrimitiveType_initFields();
    return PrimitiveType$TRIANGLE_STRIP_instance;
  }
  var PrimitiveType$TRIANGLE_FAN_instance;
  function PrimitiveType$TRIANGLE_FAN_getInstance() {
    PrimitiveType_initFields();
    return PrimitiveType$TRIANGLE_FAN_instance;
  }
  var PrimitiveType$SPRITES_instance;
  function PrimitiveType$SPRITES_getInstance() {
    PrimitiveType_initFields();
    return PrimitiveType$SPRITES_instance;
  }
  function PrimitiveType$Companion() {
    PrimitiveType$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, PrimitiveType$values());
  }
  PrimitiveType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var PrimitiveType$Companion_instance = null;
  function PrimitiveType$Companion_getInstance() {
    PrimitiveType_initFields();
    if (PrimitiveType$Companion_instance === null) {
      new PrimitiveType$Companion();
    }
    return PrimitiveType$Companion_instance;
  }
  PrimitiveType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PrimitiveType',
    interfaces: [IdEnum, Enum]
  };
  function PrimitiveType$values() {
    return [PrimitiveType$POINTS_getInstance(), PrimitiveType$LINES_getInstance(), PrimitiveType$LINE_STRIP_getInstance(), PrimitiveType$TRIANGLES_getInstance(), PrimitiveType$TRIANGLE_STRIP_getInstance(), PrimitiveType$TRIANGLE_FAN_getInstance(), PrimitiveType$SPRITES_getInstance()];
  }
  PrimitiveType.values = PrimitiveType$values;
  function PrimitiveType$valueOf(name) {
    switch (name) {
      case 'POINTS':
        return PrimitiveType$POINTS_getInstance();
      case 'LINES':
        return PrimitiveType$LINES_getInstance();
      case 'LINE_STRIP':
        return PrimitiveType$LINE_STRIP_getInstance();
      case 'TRIANGLES':
        return PrimitiveType$TRIANGLES_getInstance();
      case 'TRIANGLE_STRIP':
        return PrimitiveType$TRIANGLE_STRIP_getInstance();
      case 'TRIANGLE_FAN':
        return PrimitiveType$TRIANGLE_FAN_getInstance();
      case 'SPRITES':
        return PrimitiveType$SPRITES_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.PrimitiveType.' + name);
    }
  }
  PrimitiveType.valueOf_61zpoe$ = PrimitiveType$valueOf;
  function ClearBufferSet() {
    ClearBufferSet_instance = this;
    this.ColorBuffer = 1;
    this.StencilBuffer = 2;
    this.DepthBuffer = 4;
    this.FastClear = 16;
  }
  ClearBufferSet.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ClearBufferSet',
    interfaces: []
  };
  var ClearBufferSet_instance = null;
  function ClearBufferSet_getInstance() {
    if (ClearBufferSet_instance === null) {
      new ClearBufferSet();
    }
    return ClearBufferSet_instance;
  }
  function GeList(ge, id) {
    this.ge = ge;
    this.id_xek0ho$_0 = id;
    this.logger = PspLogger$Companion_getInstance().invoke_61zpoe$('GeList');
    this.start = 0;
    this.stall = 0;
    this.callback = new GeCallback(-1);
    this.pspGeListArgs = 0;
    this.PC = this.start;
    this.completed = false;
    this.bb = new GeBatchBuilder(this.ge);
    this.onCompleted = new Signal();
    this.phase = ListSyncKind$QUEUED_getInstance();
    this.callstackIndex = 0;
    this.callstack = new Int32Array(256);
    this.state = this.ge.state;
    this.stateData = this.state.data;
  }
  Object.defineProperty(GeList.prototype, 'id', {
    get: function () {
      return this.id_xek0ho$_0;
    }
  });
  GeList.prototype.reset = function () {
    this.completed = false;
    this.bb.reset();
    this.onCompleted = new Signal();
    this.phase = ListSyncKind$QUEUED_getInstance();
  };
  Object.defineProperty(GeList.prototype, 'isStalled', {
    get: function () {
      return this.stall !== 0 && this.PC >= this.stall;
    }
  });
  GeList.prototype.run = function () {
    var mem = get_mem(this);
    this.PC = this.PC & Memory$Companion_getInstance().MASK;
    this.stall = this.stall & Memory$Companion_getInstance().MASK;
    while (!this.completed && !this.isStalled) {
      var cPC = this.PC;
      this.PC = this.PC + 4 | 0;
      this.step_vux9f0$(cPC, mem.lw_za3lpa$(cPC));
    }
    if (this.isStalled)
      this.phase = ListSyncKind$STALL_REACHED_getInstance();
    if (this.completed) {
      this.phase = ListSyncKind$DRAWING_DONE_getInstance();
      this.onCompleted.invoke_11rb$(Unit);
    }
  };
  GeList.prototype.step_vux9f0$ = function (cPC, i) {
    var tmp$, tmp$_0;
    var op = i >>> 24;
    var p = i & 16777215;
    var $this = this.logger;
    var level = PspLogLevel.TRACE;
    if (level.index <= $this.processedLevel.index) {
      $this.actualLog_138x2s$(level, 'GE: ' + get_hex(cPC) + '-' + get_hex(this.stall) + ': ' + get_hex(op));
    }
    if (op === GeOpCodes_getInstance().PRIM)
      this.prim_0(p);
    else if (op === GeOpCodes_getInstance().BEZIER)
      println('BEZIER');
    else if (op === GeOpCodes_getInstance().END) {
      this.bb.flush();
      this.completed = true;
    }
     else if (op === GeOpCodes_getInstance().TFLUSH) {
      this.bb.tflush();
      this.bb.flush();
    }
     else if (op === GeOpCodes_getInstance().TSYNC)
      this.bb.tsync();
    else if (op !== GeOpCodes_getInstance().NOP)
      if (op !== GeOpCodes_getInstance().DUMMY)
        if (op === GeOpCodes_getInstance().JUMP || op === GeOpCodes_getInstance().CALL) {
          if (op === GeOpCodes_getInstance().CALL) {
            this.callstack[tmp$ = this.callstackIndex, this.callstackIndex = tmp$ + 1 | 0, tmp$] = this.PC;
            this.callstack[tmp$_0 = this.callstackIndex, this.callstackIndex = tmp$_0 + 1 | 0, tmp$_0] = this.state.baseOffset >>> 2;
          }
          this.PC = this.state.baseAddress + p & ~3 & Memory$Companion_getInstance().MASK;
        }
         else if (op === GeOpCodes_getInstance().RET) {
          throw new NotImplementedError_init('An operation is not implemented: ' + 'RET');
        }
         else if (op === GeOpCodes_getInstance().FINISH)
          this.finish_0(p);
        else if (op === GeOpCodes_getInstance().SIGNAL)
          this.signal_0(p);
        else if (op !== GeOpCodes_getInstance().BASE && op !== GeOpCodes_getInstance().IADDR && op !== GeOpCodes_getInstance().VADDR && op !== GeOpCodes_getInstance().OFFSETADDR)
          if (op === GeOpCodes_getInstance().PROJMATRIXDATA)
            this.state.writeInt_qt1dr2$(GeOpCodes_getInstance().PROJMATRIXNUMBER, GeOpCodes_getInstance().MAT_PROJ, p);
          else if (op === GeOpCodes_getInstance().VIEWMATRIXDATA)
            this.state.writeInt_qt1dr2$(GeOpCodes_getInstance().VIEWMATRIXNUMBER, GeOpCodes_getInstance().MAT_VIEW, p);
          else if (op === GeOpCodes_getInstance().WORLDMATRIXDATA)
            this.state.writeInt_qt1dr2$(GeOpCodes_getInstance().WORLDMATRIXNUMBER, GeOpCodes_getInstance().MAT_WORLD, p);
          else if (op === GeOpCodes_getInstance().BONEMATRIXDATA)
            this.state.writeInt_qt1dr2$(GeOpCodes_getInstance().BONEMATRIXNUMBER, GeOpCodes_getInstance().MAT_BONES, p);
          else if (op === GeOpCodes_getInstance().TGENMATRIXDATA)
            this.state.writeInt_qt1dr2$(GeOpCodes_getInstance().TGENMATRIXNUMBER, GeOpCodes_getInstance().MAT_TEXTURE, p);
          else {
            if (this.ge.state.data[op] !== p)
              this.bb.flush();
          }
    this.stateData[op] = p;
  };
  GeList.prototype.prim_0 = function (p) {
    var primitiveType = PrimitiveType$Companion_getInstance().invoke_za3lpa$(extract(p, 16, 3));
    var vertexCount = extract(p, 0, 16);
    this.bb.setVertexKind_hlyuka$(primitiveType, this.state);
    this.bb.addIndices_za3lpa$(vertexCount);
    return PrimAction$FLUSH_PRIM_getInstance();
  };
  GeList.prototype.finish_0 = function (p) {
    get_callbackManager(this).queueFunction1_vux9f0$(this.callback.finish_func, this.callback.finish_arg);
    this.bb.flush();
  };
  GeList.prototype.signal_0 = function (p) {
    get_callbackManager(this).queueFunction1_vux9f0$(this.callback.signal_func, this.callback.signal_arg);
  };
  GeList.prototype.sync_za3lpa$ = function (syncType) {
    this.run();
  };
  Object.defineProperty(GeList.prototype, 'emulator', {
    get: function () {
      return this.ge.emulator;
    }
  });
  GeList.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeList',
    interfaces: [WithEmulator, ResourceItem]
  };
  function GeOpCodes() {
    GeOpCodes_instance = this;
    this.NOP = 0;
    this.VADDR = 1;
    this.IADDR = 2;
    this.Unknown0x03 = 3;
    this.PRIM = 4;
    this.BEZIER = 5;
    this.SPLINE = 6;
    this.BOUNDINGBOX = 7;
    this.JUMP = 8;
    this.BJUMP = 9;
    this.CALL = 10;
    this.RET = 11;
    this.END = 12;
    this.Unknown0x0D = 13;
    this.SIGNAL = 14;
    this.FINISH = 15;
    this.BASE = 16;
    this.Unknown0x11 = 17;
    this.VERTEXTYPE = 18;
    this.OFFSETADDR = 19;
    this.ORIGIN = 20;
    this.REGION1 = 21;
    this.REGION2 = 22;
    this.LIGHTINGENABLE = 23;
    this.LIGHTENABLE0 = 24;
    this.LIGHTENABLE1 = 25;
    this.LIGHTENABLE2 = 26;
    this.LIGHTENABLE3 = 27;
    this.CLIPENABLE = 28;
    this.CULLFACEENABLE = 29;
    this.TEXTUREMAPENABLE = 30;
    this.FOGENABLE = 31;
    this.DITHERENABLE = 32;
    this.ALPHABLENDENABLE = 33;
    this.ALPHATESTENABLE = 34;
    this.ZTESTENABLE = 35;
    this.STENCILTESTENABLE = 36;
    this.ANTIALIASENABLE = 37;
    this.PATCHCULLENABLE = 38;
    this.COLORTESTENABLE = 39;
    this.LOGICOPENABLE = 40;
    this.Unknown0x29 = 41;
    this.BONEMATRIXNUMBER = 42;
    this.BONEMATRIXDATA = 43;
    this.MORPHWEIGHT0 = 44;
    this.MORPHWEIGHT1 = 45;
    this.MORPHWEIGHT2 = 46;
    this.MORPHWEIGHT3 = 47;
    this.MORPHWEIGHT4 = 48;
    this.MORPHWEIGHT5 = 49;
    this.MORPHWEIGHT6 = 50;
    this.MORPHWEIGHT7 = 51;
    this.Unknown0x34 = 52;
    this.Unknown0x35 = 53;
    this.PATCHDIVISION = 54;
    this.PATCHPRIMITIVE = 55;
    this.PATCHFACING = 56;
    this.Unknown0x39 = 57;
    this.WORLDMATRIXNUMBER = 58;
    this.WORLDMATRIXDATA = 59;
    this.VIEWMATRIXNUMBER = 60;
    this.VIEWMATRIXDATA = 61;
    this.PROJMATRIXNUMBER = 62;
    this.PROJMATRIXDATA = 63;
    this.TGENMATRIXNUMBER = 64;
    this.TGENMATRIXDATA = 65;
    this.VIEWPORTX1 = 66;
    this.VIEWPORTY1 = 67;
    this.VIEWPORTZ1 = 68;
    this.VIEWPORTX2 = 69;
    this.VIEWPORTY2 = 70;
    this.VIEWPORTZ2 = 71;
    this.TEXSCALEU = 72;
    this.TEXSCALEV = 73;
    this.TEXOFFSETU = 74;
    this.TEXOFFSETV = 75;
    this.OFFSETX = 76;
    this.OFFSETY = 77;
    this.Unknown0x4E = 78;
    this.Unknown0x4F = 79;
    this.SHADEMODE = 80;
    this.REVERSENORMAL = 81;
    this.Unknown0x52 = 82;
    this.MATERIALUPDATE = 83;
    this.MATERIALEMISSIVE = 84;
    this.MATERIALAMBIENT = 85;
    this.MATERIALDIFFUSE = 86;
    this.MATERIALSPECULAR = 87;
    this.MATERIALALPHA = 88;
    this.Unknown0x59 = 89;
    this.Unknown0x5A = 90;
    this.MATERIALSPECULARCOEF = 91;
    this.AMBIENTCOLOR = 92;
    this.AMBIENTALPHA = 93;
    this.LIGHTMODE = 94;
    this.LIGHTTYPE0 = 95;
    this.LIGHTTYPE1 = 96;
    this.LIGHTTYPE2 = 97;
    this.LIGHTTYPE3 = 98;
    this.LXP0 = 99;
    this.LYP0 = 100;
    this.LZP0 = 101;
    this.LXP1 = 102;
    this.LYP1 = 103;
    this.LZP1 = 104;
    this.LXP2 = 105;
    this.LYP2 = 106;
    this.LZP2 = 107;
    this.LXP3 = 108;
    this.LYP3 = 109;
    this.LZP3 = 110;
    this.LXD0 = 111;
    this.LYD0 = 112;
    this.LZD0 = 113;
    this.LXD1 = 114;
    this.LYD1 = 115;
    this.LZD1 = 116;
    this.LXD2 = 117;
    this.LYD2 = 118;
    this.LZD2 = 119;
    this.LXD3 = 120;
    this.LYD3 = 121;
    this.LZD3 = 122;
    this.LCA0 = 123;
    this.LLA0 = 124;
    this.LQA0 = 125;
    this.LCA1 = 126;
    this.LLA1 = 127;
    this.LQA1 = 128;
    this.LCA2 = 129;
    this.LLA2 = 130;
    this.LQA2 = 131;
    this.LCA3 = 132;
    this.LLA3 = 133;
    this.LQA3 = 134;
    this.SPOTEXP0 = 135;
    this.SPOTEXP1 = 136;
    this.SPOTEXP2 = 137;
    this.SPOTEXP3 = 138;
    this.SPOTCUT0 = 139;
    this.SPOTCUT1 = 140;
    this.SPOTCUT2 = 141;
    this.SPOTCUT3 = 142;
    this.ALC0 = 143;
    this.DLC0 = 144;
    this.SLC0 = 145;
    this.ALC1 = 146;
    this.DLC1 = 147;
    this.SLC1 = 148;
    this.ALC2 = 149;
    this.DLC2 = 150;
    this.SLC2 = 151;
    this.ALC3 = 152;
    this.DLC3 = 153;
    this.SLC3 = 154;
    this.CULL = 155;
    this.FRAMEBUFPTR = 156;
    this.FRAMEBUFWIDTH = 157;
    this.ZBUFPTR = 158;
    this.ZBUFWIDTH = 159;
    this.TEXADDR0 = 160;
    this.TEXADDR1 = 161;
    this.TEXADDR2 = 162;
    this.TEXADDR3 = 163;
    this.TEXADDR4 = 164;
    this.TEXADDR5 = 165;
    this.TEXADDR6 = 166;
    this.TEXADDR7 = 167;
    this.TEXBUFWIDTH0 = 168;
    this.TEXBUFWIDTH1 = 169;
    this.TEXBUFWIDTH2 = 170;
    this.TEXBUFWIDTH3 = 171;
    this.TEXBUFWIDTH4 = 172;
    this.TEXBUFWIDTH5 = 173;
    this.TEXBUFWIDTH6 = 174;
    this.TEXBUFWIDTH7 = 175;
    this.CLUTADDR = 176;
    this.CLUTADDRUPPER = 177;
    this.TRXSBP = 178;
    this.TRXSBW = 179;
    this.TRXDBP = 180;
    this.TRXDBW = 181;
    this.Unknown0xB6 = 182;
    this.Unknown0xB7 = 183;
    this.TSIZE0 = 184;
    this.TSIZE1 = 185;
    this.TSIZE2 = 186;
    this.TSIZE3 = 187;
    this.TSIZE4 = 188;
    this.TSIZE5 = 189;
    this.TSIZE6 = 190;
    this.TSIZE7 = 191;
    this.TMAP = 192;
    this.TEXTURE_ENV_MAP_MATRIX = 193;
    this.TMODE = 194;
    this.TPSM = 195;
    this.CLOAD = 196;
    this.CMODE = 197;
    this.TFLT = 198;
    this.TWRAP = 199;
    this.TBIAS = 200;
    this.TFUNC = 201;
    this.TEC = 202;
    this.TFLUSH = 203;
    this.TSYNC = 204;
    this.FFAR = 205;
    this.FDIST = 206;
    this.FCOL = 207;
    this.TSLOPE = 208;
    this.Unknown0xD1 = 209;
    this.PSM = 210;
    this.CLEAR = 211;
    this.SCISSOR1 = 212;
    this.SCISSOR2 = 213;
    this.MINZ = 214;
    this.MAXZ = 215;
    this.CTST = 216;
    this.CREF = 217;
    this.CMSK = 218;
    this.ATST = 219;
    this.STST = 220;
    this.SOP = 221;
    this.ZTST = 222;
    this.ALPHA = 223;
    this.SFIX = 224;
    this.DFIX = 225;
    this.DTH0 = 226;
    this.DTH1 = 227;
    this.DTH2 = 228;
    this.DTH3 = 229;
    this.LOP = 230;
    this.ZMSK = 231;
    this.PMSKC = 232;
    this.PMSKA = 233;
    this.TRXKICK = 234;
    this.TRXSPOS = 235;
    this.TRXDPOS = 236;
    this.Unknown0xED = 237;
    this.TRXSIZE = 238;
    this.Unknown0xEF = 239;
    this.Unknown0xF0 = 240;
    this.Unknown0xF1 = 241;
    this.Unknown0xF2 = 242;
    this.Unknown0xF3 = 243;
    this.Unknown0xF4 = 244;
    this.Unknown0xF5 = 245;
    this.Unknown0xF6 = 246;
    this.Unknown0xF7 = 247;
    this.Unknown0xF8 = 248;
    this.Unknown0xF9 = 249;
    this.Unknown0xFA = 250;
    this.Unknown0xFB = 251;
    this.Unknown0xFC = 252;
    this.Unknown0xFD = 253;
    this.Unknown0xFE = 254;
    this.DUMMY = 255;
    this.MAT_TEXTURE = 256 + (16 * 1 | 0) | 0;
    this.MAT_PROJ = 256 + (16 * 2 | 0) | 0;
    this.MAT_VIEW = 256 + (16 * 3 | 0) | 0;
    this.MAT_WORLD = 256 + (16 * 4 | 0) | 0;
    this.MAT_BONES = 256 + (16 * 5 | 0) | 0;
  }
  GeOpCodes.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'GeOpCodes',
    interfaces: []
  };
  var GeOpCodes_instance = null;
  function GeOpCodes_getInstance() {
    if (GeOpCodes_instance === null) {
      new GeOpCodes();
    }
    return GeOpCodes_instance;
  }
  function bool1(p) {
    return p !== 0;
  }
  function parambool(p, offset) {
    return (p >>> offset & 1) !== 0;
  }
  function param1(p, offset) {
    return p >>> offset & 1;
  }
  function param2(p, offset) {
    return p >>> offset & 3;
  }
  function param3(p, offset) {
    return p >>> offset & 7;
  }
  function param4(p, offset) {
    return p >>> offset & 15;
  }
  function param5(p, offset) {
    return p >>> offset & 31;
  }
  function param8(p, offset) {
    return p >>> offset & 255;
  }
  function param10(p, offset) {
    return p >>> offset & 1023;
  }
  function param16(p, offset) {
    return p >>> offset & 65535;
  }
  function param24(p) {
    return p & 16777215;
  }
  function float1(p) {
    var bits = p << 8;
    return Kotlin.floatFromBits(bits);
  }
  function VertexState(data) {
    this.data = data;
  }
  Object.defineProperty(VertexState.prototype, 'value', {
    get: function () {
      return param24(this.data[GeOpCodes_getInstance().VERTEXTYPE]);
    }
  });
  Object.defineProperty(VertexState.prototype, 'reversedNormal', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().REVERSENORMAL]);
    }
  });
  Object.defineProperty(VertexState.prototype, 'address', {
    get: function () {
      return param24(this.data[GeOpCodes_getInstance().VADDR]);
    },
    set: function (value) {
      this.data[GeOpCodes_getInstance().VADDR] = value | GeOpCodes_getInstance().VADDR << 24;
    }
  });
  Object.defineProperty(VertexState.prototype, 'texture', {
    get: function () {
      return param2(this.data[GeOpCodes_getInstance().VERTEXTYPE], 0);
    }
  });
  Object.defineProperty(VertexState.prototype, 'color', {
    get: function () {
      return ColorEnum$Companion_getInstance().invoke_za3lpa$(param3(this.data[GeOpCodes_getInstance().VERTEXTYPE], 2));
    }
  });
  Object.defineProperty(VertexState.prototype, 'normal', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(param2(this.data[GeOpCodes_getInstance().VERTEXTYPE], 5));
    }
  });
  Object.defineProperty(VertexState.prototype, 'position', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(param2(this.data[GeOpCodes_getInstance().VERTEXTYPE], 7));
    }
  });
  Object.defineProperty(VertexState.prototype, 'weight', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(param2(this.data[GeOpCodes_getInstance().VERTEXTYPE], 9));
    }
  });
  Object.defineProperty(VertexState.prototype, 'index', {
    get: function () {
      return IndexEnum$Companion_getInstance().invoke_za3lpa$(param2(this.data[GeOpCodes_getInstance().VERTEXTYPE], 11));
    }
  });
  Object.defineProperty(VertexState.prototype, 'weightCount', {
    get: function () {
      return param3(this.data[GeOpCodes_getInstance().VERTEXTYPE], 14);
    }
  });
  Object.defineProperty(VertexState.prototype, 'morphingVertexCount', {
    get: function () {
      return param2(this.data[GeOpCodes_getInstance().VERTEXTYPE], 18);
    }
  });
  Object.defineProperty(VertexState.prototype, 'transform2D', {
    get: function () {
      return parambool(this.data[GeOpCodes_getInstance().VERTEXTYPE], 23);
    }
  });
  VertexState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VertexState',
    interfaces: []
  };
  function ViewPort(data) {
    this.data = data;
  }
  Object.defineProperty(ViewPort.prototype, 'x', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().VIEWPORTX2]);
    }
  });
  Object.defineProperty(ViewPort.prototype, 'y', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().VIEWPORTY2]);
    }
  });
  Object.defineProperty(ViewPort.prototype, 'z', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().VIEWPORTZ2]);
    }
  });
  Object.defineProperty(ViewPort.prototype, 'width', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().VIEWPORTX1]);
    }
  });
  Object.defineProperty(ViewPort.prototype, 'height', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().VIEWPORTY1]);
    }
  });
  Object.defineProperty(ViewPort.prototype, 'depth', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().VIEWPORTZ1]);
    }
  });
  ViewPort.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ViewPort',
    interfaces: []
  };
  function Region(data) {
    this.data = data;
  }
  Object.defineProperty(Region.prototype, 'x1', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().REGION1], 0);
    }
  });
  Object.defineProperty(Region.prototype, 'y1', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().REGION1], 10);
    }
  });
  Object.defineProperty(Region.prototype, 'x2', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().REGION2], 0);
    }
  });
  Object.defineProperty(Region.prototype, 'y2', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().REGION2], 10);
    }
  });
  Region.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Region',
    interfaces: []
  };
  function Light(data, index) {
    Light$Companion_getInstance();
    this.data = data;
    this.index = index;
  }
  function Light$Companion() {
    Light$Companion_instance = this;
    this.REG_TYPES_0 = new Int32Array([GeOpCodes_getInstance().LIGHTTYPE0, GeOpCodes_getInstance().LIGHTTYPE1, GeOpCodes_getInstance().LIGHTTYPE2, GeOpCodes_getInstance().LIGHTTYPE3]);
    this.REG_LCA_0 = new Int32Array([GeOpCodes_getInstance().LCA0, GeOpCodes_getInstance().LCA1, GeOpCodes_getInstance().LCA2, GeOpCodes_getInstance().LCA3]);
    this.REG_LLA_0 = new Int32Array([GeOpCodes_getInstance().LLA0, GeOpCodes_getInstance().LLA1, GeOpCodes_getInstance().LLA2, GeOpCodes_getInstance().LLA3]);
    this.REG_LQA_0 = new Int32Array([GeOpCodes_getInstance().LQA0, GeOpCodes_getInstance().LQA1, GeOpCodes_getInstance().LQA2, GeOpCodes_getInstance().LQA3]);
    this.REG_SPOTEXP_0 = new Int32Array([GeOpCodes_getInstance().SPOTEXP0, GeOpCodes_getInstance().SPOTEXP1, GeOpCodes_getInstance().SPOTEXP2, GeOpCodes_getInstance().SPOTEXP3]);
    this.REG_SPOTCUT_0 = new Int32Array([GeOpCodes_getInstance().SPOTCUT0, GeOpCodes_getInstance().SPOTCUT1, GeOpCodes_getInstance().SPOTCUT2, GeOpCodes_getInstance().SPOTCUT3]);
    this.LXP_0 = new Int32Array([GeOpCodes_getInstance().LXP0, GeOpCodes_getInstance().LXP1, GeOpCodes_getInstance().LXP2, GeOpCodes_getInstance().LXP3]);
    this.LYP_0 = new Int32Array([GeOpCodes_getInstance().LYP0, GeOpCodes_getInstance().LYP1, GeOpCodes_getInstance().LYP2, GeOpCodes_getInstance().LYP3]);
    this.LZP_0 = new Int32Array([GeOpCodes_getInstance().LZP0, GeOpCodes_getInstance().LZP1, GeOpCodes_getInstance().LZP2, GeOpCodes_getInstance().LZP3]);
    this.LXD_0 = new Int32Array([GeOpCodes_getInstance().LXD0, GeOpCodes_getInstance().LXD1, GeOpCodes_getInstance().LXD2, GeOpCodes_getInstance().LXD3]);
    this.LYD_0 = new Int32Array([GeOpCodes_getInstance().LYD0, GeOpCodes_getInstance().LYD1, GeOpCodes_getInstance().LYD2, GeOpCodes_getInstance().LYD3]);
    this.LZD_0 = new Int32Array([GeOpCodes_getInstance().LZD0, GeOpCodes_getInstance().LZD1, GeOpCodes_getInstance().LZD2, GeOpCodes_getInstance().LZD3]);
    this.ALC_0 = new Int32Array([GeOpCodes_getInstance().ALC0, GeOpCodes_getInstance().ALC1, GeOpCodes_getInstance().ALC2, GeOpCodes_getInstance().ALC3]);
    this.DLC_0 = new Int32Array([GeOpCodes_getInstance().DLC0, GeOpCodes_getInstance().DLC1, GeOpCodes_getInstance().DLC2, GeOpCodes_getInstance().DLC3]);
    this.SLC_0 = new Int32Array([GeOpCodes_getInstance().SLC0, GeOpCodes_getInstance().SLC1, GeOpCodes_getInstance().SLC2, GeOpCodes_getInstance().SLC3]);
  }
  Light$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Light$Companion_instance = null;
  function Light$Companion_getInstance() {
    if (Light$Companion_instance === null) {
      new Light$Companion();
    }
    return Light$Companion_instance;
  }
  Object.defineProperty(Light.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().LIGHTENABLE0 + this.index | 0]);
    }
  });
  Object.defineProperty(Light.prototype, 'kind', {
    get: function () {
      return LightModelEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[Light$Companion_getInstance().REG_TYPES_0[this.index]], 0));
    }
  });
  Object.defineProperty(Light.prototype, 'type', {
    get: function () {
      return LightTypeEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[Light$Companion_getInstance().REG_TYPES_0[this.index]], 8));
    }
  });
  Object.defineProperty(Light.prototype, 'pw', {
    get: function () {
      return this.type === LightTypeEnum$SPOT_LIGHT_getInstance() ? 1 : 0;
    }
  });
  Object.defineProperty(Light.prototype, 'px', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().LXP_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'py', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().LYP_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'pz', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().LZP_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'dx', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().LXD_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'dy', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().LYD_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'dz', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().LZD_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'spotExponent', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().REG_SPOTEXP_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'spotCutoff', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().REG_SPOTCUT_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'constantAttenuation', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().REG_LCA_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'linearAttenuation', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().REG_LLA_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'quadraticAttenuation', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().REG_LQA_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'ambientColor', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(Light$Companion_getInstance().ALC_0[this.index]);
    }
  });
  Object.defineProperty(Light.prototype, 'diffuseColor', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(Light$Companion_getInstance().DLC_0[this.index]);
    }
  });
  Object.defineProperty(Light.prototype, 'specularColor', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(Light$Companion_getInstance().SLC_0[this.index]);
    }
  });
  Light.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Light',
    interfaces: []
  };
  function Lightning(data) {
    this.data = data;
    this.lights = listOf([new Light(this.data, 0), new Light(this.data, 1), new Light(this.data, 2), new Light(this.data, 3)]);
  }
  Object.defineProperty(Lightning.prototype, 'lightModel', {
    get: function () {
      return LightModelEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().LIGHTMODE], 0));
    }
  });
  Object.defineProperty(Lightning.prototype, 'specularPower', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().MATERIALSPECULARCOEF]);
    }
  });
  Object.defineProperty(Lightning.prototype, 'ambientLightColor', {
    get: function () {
      return (new Color()).setRGB_A_vux9f0$(this.data[GeOpCodes_getInstance().AMBIENTCOLOR], this.data[GeOpCodes_getInstance().AMBIENTALPHA]);
    }
  });
  Object.defineProperty(Lightning.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().LIGHTINGENABLE]);
    }
  });
  Lightning.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Lightning',
    interfaces: []
  };
  function MipmapState(texture, data, index) {
    this.texture = texture;
    this.data_0 = data;
    this.index = index;
  }
  Object.defineProperty(MipmapState.prototype, 'bufferWidth', {
    get: function () {
      return param16(this.data_0[GeOpCodes_getInstance().TEXBUFWIDTH0 + this.index | 0], 0);
    }
  });
  Object.defineProperty(MipmapState.prototype, 'address', {
    get: function () {
      return param24(this.data_0[GeOpCodes_getInstance().TEXADDR0 + this.index | 0]) | param8(this.data_0[GeOpCodes_getInstance().TEXBUFWIDTH0 + this.index | 0], 16) << 24;
    }
  });
  Object.defineProperty(MipmapState.prototype, 'addressEnd', {
    get: function () {
      return this.address + this.sizeInBytes | 0;
    }
  });
  Object.defineProperty(MipmapState.prototype, 'textureWidth', {
    get: function () {
      return 1 << param4(this.data_0[GeOpCodes_getInstance().TSIZE0 + this.index | 0], 0);
    }
  });
  Object.defineProperty(MipmapState.prototype, 'textureHeight', {
    get: function () {
      return 1 << param4(this.data_0[GeOpCodes_getInstance().TSIZE0 + this.index | 0], 8);
    }
  });
  Object.defineProperty(MipmapState.prototype, 'size', {
    get: function () {
      return Kotlin.imul(this.bufferWidth, this.textureHeight);
    }
  });
  Object.defineProperty(MipmapState.prototype, 'sizeInBytes', {
    get: function () {
      return this.texture.pixelFormat.getSizeInBytes_za3lpa$(this.size);
    }
  });
  MipmapState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MipmapState',
    interfaces: []
  };
  function ClutState(data) {
    this.data = data;
  }
  ClutState.prototype.getHashFast = function () {
    return (this.data[GeOpCodes_getInstance().CMODE] << 0) + (this.data[GeOpCodes_getInstance().CLOAD] << 8) + (this.data[GeOpCodes_getInstance().CLUTADDR] << 16) + (this.data[GeOpCodes_getInstance().CLUTADDRUPPER] << 24) | 0;
  };
  Object.defineProperty(ClutState.prototype, 'cmode', {
    get: function () {
      return this.data[GeOpCodes_getInstance().CMODE];
    }
  });
  Object.defineProperty(ClutState.prototype, 'cload', {
    get: function () {
      return this.data[GeOpCodes_getInstance().CLOAD];
    }
  });
  Object.defineProperty(ClutState.prototype, 'address', {
    get: function () {
      return param24(this.data[GeOpCodes_getInstance().CLUTADDR]) | this.data[GeOpCodes_getInstance().CLUTADDRUPPER] << 8 & (new Kotlin.Long(-16777216, 0)).toInt();
    }
  });
  Object.defineProperty(ClutState.prototype, 'addressEnd', {
    get: function () {
      return this.address + this.sizeInBytes | 0;
    }
  });
  Object.defineProperty(ClutState.prototype, 'numberOfColors', {
    get: function () {
      return this.data[GeOpCodes_getInstance().CLOAD] * 8 | 0;
    }
  });
  Object.defineProperty(ClutState.prototype, 'pixelFormat', {
    get: function () {
      return PixelFormat$Companion_getInstance().invoke_za3lpa$(param2(this.data[GeOpCodes_getInstance().CMODE], 0));
    }
  });
  Object.defineProperty(ClutState.prototype, 'shift', {
    get: function () {
      return param5(this.data[GeOpCodes_getInstance().CMODE], 2);
    }
  });
  Object.defineProperty(ClutState.prototype, 'mask', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().CMODE], 8);
    }
  });
  Object.defineProperty(ClutState.prototype, 'start', {
    get: function () {
      return param5(this.data[GeOpCodes_getInstance().CMODE], 16);
    }
  });
  Object.defineProperty(ClutState.prototype, 'sizeInBytes', {
    get: function () {
      return this.pixelFormat.getSizeInBytes_za3lpa$(this.numberOfColors);
    }
  });
  ClutState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ClutState',
    interfaces: []
  };
  function TextureState(data) {
    this.data = data;
    this.clut = new ClutState(this.data);
    this.mipmaps = listOf([new MipmapState(this, this.data, 0), new MipmapState(this, this.data, 1), new MipmapState(this, this.data, 2), new MipmapState(this, this.data, 3), new MipmapState(this, this.data, 4), new MipmapState(this, this.data, 5), new MipmapState(this, this.data, 6), new MipmapState(this, this.data, 7)]);
  }
  TextureState.prototype.getTextureMatrix_rwji5t$ = function (out) {
    if (out === void 0)
      out = new Matrix4();
    getMatrix4x4(this.data, GeOpCodes_getInstance().MAT_TEXTURE, out);
    return out;
  };
  Object.defineProperty(TextureState.prototype, 'hasClut', {
    get: function () {
      return this.pixelFormat.hasClut;
    }
  });
  TextureState.prototype.getHashSlow_r9qwmk$ = function (textureData, clutData) {
    var hash = ArrayList_init();
    hash.add_11rb$(contentHashCode(textureData));
    hash.add_11rb$(this.mipmap.address);
    hash.add_11rb$(this.mipmap.textureWidth);
    hash.add_11rb$(this.colorComponent.id);
    hash.add_11rb$(this.mipmap.textureHeight);
    hash.add_11rb$(this.swizzled ? 1 : 0);
    hash.add_11rb$(this.pixelFormat.id);
    if (this.hasClut) {
      hash.add_11rb$(this.clut.getHashFast());
      hash.add_11rb$(contentHashCode(clutData));
    }
    return joinToString(hash, '_');
  };
  Object.defineProperty(TextureState.prototype, 'mipmap', {
    get: function () {
      return this.mipmaps.get_za3lpa$(0);
    }
  });
  Object.defineProperty(TextureState.prototype, 'wrapU', {
    get: function () {
      return WrapMode$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TWRAP], 0));
    }
  });
  Object.defineProperty(TextureState.prototype, 'wrapV', {
    get: function () {
      return WrapMode$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TWRAP], 8));
    }
  });
  Object.defineProperty(TextureState.prototype, 'levelMode', {
    get: function () {
      return TextureLevelMode$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TBIAS], 0));
    }
  });
  Object.defineProperty(TextureState.prototype, 'mipmapBias', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().TBIAS], 16) / 16 | 0;
    }
  });
  Object.defineProperty(TextureState.prototype, 'offsetU', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().TEXOFFSETU]);
    }
  });
  Object.defineProperty(TextureState.prototype, 'offsetV', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().TEXOFFSETV]);
    }
  });
  Object.defineProperty(TextureState.prototype, 'scaleU', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().TEXSCALEU]);
    }
  });
  Object.defineProperty(TextureState.prototype, 'scaleV', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().TEXSCALEV]);
    }
  });
  Object.defineProperty(TextureState.prototype, 'shadeU', {
    get: function () {
      return param2(this.data[GeOpCodes_getInstance().TEXTURE_ENV_MAP_MATRIX], 0);
    }
  });
  Object.defineProperty(TextureState.prototype, 'shadeV', {
    get: function () {
      return param2(this.data[GeOpCodes_getInstance().TEXTURE_ENV_MAP_MATRIX], 8);
    }
  });
  Object.defineProperty(TextureState.prototype, 'effect', {
    get: function () {
      return TextureEffect$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TFUNC], 0));
    }
  });
  Object.defineProperty(TextureState.prototype, 'hasAlpha', {
    get: function () {
      return this.colorComponent === TextureColorComponent$RGBA_getInstance();
    }
  });
  Object.defineProperty(TextureState.prototype, 'colorComponent', {
    get: function () {
      return TextureColorComponent$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TFUNC], 8));
    }
  });
  Object.defineProperty(TextureState.prototype, 'fragment2X', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().TFUNC], 16) !== 0;
    }
  });
  Object.defineProperty(TextureState.prototype, 'envColor', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(param24(this.data[GeOpCodes_getInstance().TEC]));
    }
  });
  Object.defineProperty(TextureState.prototype, 'pixelFormat', {
    get: function () {
      return PixelFormat$Companion_getInstance().invoke_za3lpa$(param4(this.data[GeOpCodes_getInstance().TPSM], 0));
    }
  });
  Object.defineProperty(TextureState.prototype, 'slopeLevel', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().TSLOPE]);
    }
  });
  Object.defineProperty(TextureState.prototype, 'swizzled', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().TMODE], 0) !== 0;
    }
  });
  Object.defineProperty(TextureState.prototype, 'mipmapShareClut', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().TMODE], 8) !== 0;
    }
  });
  Object.defineProperty(TextureState.prototype, 'mipmapMaxLevel', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().TMODE], 16) !== 0;
    }
  });
  Object.defineProperty(TextureState.prototype, 'filterMinification', {
    get: function () {
      return TextureFilter$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TFLT], 0));
    }
  });
  Object.defineProperty(TextureState.prototype, 'filterMagnification', {
    get: function () {
      return TextureFilter$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TFLT], 8));
    }
  });
  Object.defineProperty(TextureState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().TEXTUREMAPENABLE]);
    }
  });
  Object.defineProperty(TextureState.prototype, 'textureMapMode', {
    get: function () {
      return TextureMapMode$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TMAP], 0));
    }
  });
  Object.defineProperty(TextureState.prototype, 'textureProjectionMapMode', {
    get: function () {
      return TextureProjectionMapMode$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TMAP], 8));
    }
  });
  Object.defineProperty(TextureState.prototype, 'tmode', {
    get: function () {
      return this.data[GeOpCodes_getInstance().TMODE];
    }
  });
  TextureState.prototype.getPixelsSize_za3lpa$ = function (size) {
    return this.pixelFormat.getSizeInBytes_za3lpa$(size);
  };
  Object.defineProperty(TextureState.prototype, 'textureComponentsCount', {
    get: function () {
      var tmp$, tmp$_0;
      tmp$ = this.textureMapMode;
      if (equals(tmp$, TextureMapMode$GU_TEXTURE_COORDS_getInstance()))
        return 2;
      else if (equals(tmp$, TextureMapMode$GU_ENVIRONMENT_MAP_getInstance()))
        return 2;
      else if (equals(tmp$, TextureMapMode$GU_TEXTURE_MATRIX_getInstance())) {
        tmp$_0 = this.textureProjectionMapMode;
        if (equals(tmp$_0, TextureProjectionMapMode$GU_NORMAL_getInstance()))
          return 3;
        else if (equals(tmp$_0, TextureProjectionMapMode$GU_NORMALIZED_NORMAL_getInstance()))
          return 3;
        else if (equals(tmp$_0, TextureProjectionMapMode$GU_POSITION_getInstance()))
          return 3;
        else if (equals(tmp$_0, TextureProjectionMapMode$GU_UV_getInstance()))
          return 2;
        else
          return Kotlin.noWhenBranchMatched();
      }
       else
        return Kotlin.noWhenBranchMatched();
    }
  });
  TextureState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureState',
    interfaces: []
  };
  function CullingState(data) {
    this.data = data;
  }
  Object.defineProperty(CullingState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().CULLFACEENABLE]);
    }
  });
  Object.defineProperty(CullingState.prototype, 'direction', {
    get: function () {
      return CullingDirection$Companion_getInstance().invoke_za3lpa$(param24(this.data[GeOpCodes_getInstance().CULL]));
    }
  });
  CullingState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CullingState',
    interfaces: []
  };
  function DepthTestState(data) {
    this.data = data;
  }
  Object.defineProperty(DepthTestState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().ZTESTENABLE]);
    }
  });
  Object.defineProperty(DepthTestState.prototype, 'func', {
    get: function () {
      return TestFunctionEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().ZTST], 0));
    }
  });
  Object.defineProperty(DepthTestState.prototype, 'mask', {
    get: function () {
      return param16(this.data[GeOpCodes_getInstance().ZMSK], 0);
    }
  });
  Object.defineProperty(DepthTestState.prototype, 'rangeNear', {
    get: function () {
      return (this.data[GeOpCodes_getInstance().MAXZ] & 65535) / 65535.0;
    }
  });
  Object.defineProperty(DepthTestState.prototype, 'rangeFar', {
    get: function () {
      return (this.data[GeOpCodes_getInstance().MINZ] & 65535) / 65535.0;
    }
  });
  DepthTestState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DepthTestState',
    interfaces: []
  };
  function Color(r, g, b, a) {
    Color$Companion_getInstance();
    if (r === void 0)
      r = 0.0;
    if (g === void 0)
      g = 0.0;
    if (b === void 0)
      b = 0.0;
    if (a === void 0)
      a = 1.0;
    this.r = r;
    this.g = g;
    this.b = b;
    this.a = a;
  }
  function Color$Companion() {
    Color$Companion_instance = this;
  }
  Color$Companion.prototype.add_6rajl8$ = function (a, b, dest) {
    if (dest === void 0)
      dest = new Color();
    dest.r = a.r + b.r;
    dest.g = a.g + b.g;
    dest.b = a.b + b.b;
    dest.a = a.a * b.a;
    return dest;
  };
  Color$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Color$Companion_instance = null;
  function Color$Companion_getInstance() {
    if (Color$Companion_instance === null) {
      new Color$Companion();
    }
    return Color$Companion_instance;
  }
  Color.prototype.setRGB_za3lpa$ = function (rgb) {
    this.r = extractScaledf01(rgb, 0, 8);
    this.g = extractScaledf01(rgb, 8, 8);
    this.b = extractScaledf01(rgb, 16, 8);
    this.a = 1.0;
    return this;
  };
  Color.prototype.setRGB_A_vux9f0$ = function (rgb, a) {
    this.setRGB_za3lpa$(rgb);
    this.a = extractScaledf01(rgb, 0, 8);
    return this;
  };
  Color.prototype.set_7b5o5w$ = function (r, g, b, a) {
    if (a === void 0)
      a = 1.0;
    this.r = r;
    this.g = g;
    this.b = b;
    this.a = a;
    return this;
  };
  Color.prototype.equals_7b5o5w$ = function (r, g, b, a) {
    return this.r === r && this.g === g && this.b === b && this.a === a;
  };
  Color.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Color',
    interfaces: []
  };
  function Blending(data) {
    this.data = data;
  }
  Object.defineProperty(Blending.prototype, 'fixColorSource', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(param24(this.data[GeOpCodes_getInstance().SFIX]));
    }
  });
  Object.defineProperty(Blending.prototype, 'fixColorDestination', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(param24(this.data[GeOpCodes_getInstance().DFIX]));
    }
  });
  Object.defineProperty(Blending.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().ALPHABLENDENABLE]);
    }
  });
  Object.defineProperty(Blending.prototype, 'functionSource', {
    get: function () {
      return GuBlendingFactor$Companion_getInstance().invoke_za3lpa$(param4(this.data[GeOpCodes_getInstance().ALPHA], 0));
    }
  });
  Object.defineProperty(Blending.prototype, 'functionDestination', {
    get: function () {
      return GuBlendingFactor$Companion_getInstance().invoke_za3lpa$(param4(this.data[GeOpCodes_getInstance().ALPHA], 4));
    }
  });
  Object.defineProperty(Blending.prototype, 'equation', {
    get: function () {
      return GuBlendingEquation$Companion_getInstance().invoke_za3lpa$(param4(this.data[GeOpCodes_getInstance().ALPHA], 8));
    }
  });
  Object.defineProperty(Blending.prototype, 'colorMask', {
    get: function () {
      return (new Color()).setRGB_A_vux9f0$(param24(this.data[GeOpCodes_getInstance().PMSKC]), param8(this.data[GeOpCodes_getInstance().PMSKA], 0));
    }
  });
  Blending.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Blending',
    interfaces: []
  };
  function AlphaTest(data) {
    this.data = data;
  }
  Object.defineProperty(AlphaTest.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().ALPHATESTENABLE]);
    }
  });
  Object.defineProperty(AlphaTest.prototype, 'func', {
    get: function () {
      return TestFunctionEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().ATST], 0));
    }
  });
  Object.defineProperty(AlphaTest.prototype, 'value', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().ATST], 8);
    }
  });
  Object.defineProperty(AlphaTest.prototype, 'mask', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().ATST], 16);
    }
  });
  AlphaTest.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AlphaTest',
    interfaces: []
  };
  function Rectangle(left, top, right, bottom) {
    this.left = left;
    this.top = top;
    this.right = right;
    this.bottom = bottom;
  }
  Object.defineProperty(Rectangle.prototype, 'width', {
    get: function () {
      return this.right - this.left | 0;
    }
  });
  Object.defineProperty(Rectangle.prototype, 'height', {
    get: function () {
      return this.bottom - this.top | 0;
    }
  });
  Rectangle.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Rectangle',
    interfaces: []
  };
  function ClipPlane(data) {
    this.data = data;
  }
  Object.defineProperty(ClipPlane.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().CLIPENABLE]);
    }
  });
  Object.defineProperty(ClipPlane.prototype, 'scissor', {
    get: function () {
      return new Rectangle(this.left, this.top, this.right, this.bottom);
    }
  });
  Object.defineProperty(ClipPlane.prototype, 'left', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().SCISSOR1], 0);
    }
  });
  Object.defineProperty(ClipPlane.prototype, 'top', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().SCISSOR1], 10);
    }
  });
  Object.defineProperty(ClipPlane.prototype, 'right', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().SCISSOR2], 0);
    }
  });
  Object.defineProperty(ClipPlane.prototype, 'bottom', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().SCISSOR2], 10);
    }
  });
  ClipPlane.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ClipPlane',
    interfaces: []
  };
  function StencilState(data) {
    this.data = data;
  }
  Object.defineProperty(StencilState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().STENCILTESTENABLE]);
    }
  });
  Object.defineProperty(StencilState.prototype, 'fail', {
    get: function () {
      return StencilOperationEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().SOP], 0));
    }
  });
  Object.defineProperty(StencilState.prototype, 'zfail', {
    get: function () {
      return StencilOperationEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().SOP], 8));
    }
  });
  Object.defineProperty(StencilState.prototype, 'zpass', {
    get: function () {
      return StencilOperationEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().SOP], 16));
    }
  });
  Object.defineProperty(StencilState.prototype, 'func', {
    get: function () {
      return TestFunctionEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().STST], 0));
    }
  });
  Object.defineProperty(StencilState.prototype, 'funcRef', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().STST], 8);
    }
  });
  Object.defineProperty(StencilState.prototype, 'funcMask', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().STST], 16);
    }
  });
  StencilState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StencilState',
    interfaces: []
  };
  function PatchState(data) {
    this.data = data;
  }
  Object.defineProperty(PatchState.prototype, 'divs', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().PATCHDIVISION], 0);
    }
  });
  Object.defineProperty(PatchState.prototype, 'divt', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().PATCHDIVISION], 8);
    }
  });
  PatchState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PatchState',
    interfaces: []
  };
  function Fog(data) {
    this.data = data;
  }
  Object.defineProperty(Fog.prototype, 'color', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(this.data[GeOpCodes_getInstance().FCOL]);
    }
  });
  Object.defineProperty(Fog.prototype, 'far', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().FFAR]);
    }
  });
  Object.defineProperty(Fog.prototype, 'dist', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().FDIST]);
    }
  });
  Object.defineProperty(Fog.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().FOGENABLE]);
    }
  });
  Fog.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Fog',
    interfaces: []
  };
  function LogicOp(data) {
    this.data = data;
  }
  Object.defineProperty(LogicOp.prototype, 'enabled', {
    get: function () {
      return this.data[GeOpCodes_getInstance().LOGICOPENABLE];
    }
  });
  LogicOp.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LogicOp',
    interfaces: []
  };
  function LineSmoothState(data) {
    this.data = data;
  }
  Object.defineProperty(LineSmoothState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().ANTIALIASENABLE]);
    }
  });
  LineSmoothState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LineSmoothState',
    interfaces: []
  };
  function PatchCullingState(data) {
    this.data = data;
  }
  Object.defineProperty(PatchCullingState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().PATCHCULLENABLE]);
    }
  });
  Object.defineProperty(PatchCullingState.prototype, 'faceFlag', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().PATCHFACING]);
    }
  });
  PatchCullingState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PatchCullingState',
    interfaces: []
  };
  function OffsetState(data) {
    this.data = data;
  }
  Object.defineProperty(OffsetState.prototype, 'x', {
    get: function () {
      return param4(this.data[GeOpCodes_getInstance().OFFSETX], 0);
    }
  });
  Object.defineProperty(OffsetState.prototype, 'y', {
    get: function () {
      return param4(this.data[GeOpCodes_getInstance().OFFSETY], 0);
    }
  });
  OffsetState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'OffsetState',
    interfaces: []
  };
  function GeState() {
    GeState$Companion_getInstance();
    this.data = new Int32Array(GeState$Companion_getInstance().STATE_NWORDS);
    this.frameBuffer = new GpuFrameBufferState(this.data);
    this.vertex = new VertexState(this.data);
    this.stencil = new StencilState(this.data);
    this.viewport = new ViewPort(this.data);
    this.region = new Region(this.data);
    this.offset = new OffsetState(this.data);
    this.fog = new Fog(this.data);
    this.clipPlane = new ClipPlane(this.data);
    this.logicOp = new LogicOp(this.data);
    this.lightning = new Lightning(this.data);
    this.alphaTest = new AlphaTest(this.data);
    this.blending = new Blending(this.data);
    this.patch = new PatchState(this.data);
    this.texture = new TextureState(this.data);
    this.lineSmoothState = new LineSmoothState(this.data);
    this.patchCullingState = new PatchCullingState(this.data);
    this.culling = new CullingState(this.data);
    this.dithering = new DitheringState(this.data);
    this.colorTest = new ColorTestState(this.data);
    this.depthTest = new DepthTestState(this.data);
    this.skinning = new SkinningState(this.data);
  }
  function GeState$Companion() {
    GeState$Companion_instance = this;
    this.STATE_NWORDS = 512;
  }
  GeState$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var GeState$Companion_instance = null;
  function GeState$Companion_getInstance() {
    if (GeState$Companion_instance === null) {
      new GeState$Companion();
    }
    return GeState$Companion_instance;
  }
  Object.defineProperty(GeState.prototype, 'baseAddress', {
    get: function () {
      return this.data[GeOpCodes_getInstance().BASE] << 8 & (new Kotlin.Long(-16777216, 0)).toInt();
    }
  });
  Object.defineProperty(GeState.prototype, 'baseOffset', {
    get: function () {
      return this.data[GeOpCodes_getInstance().OFFSETADDR] << 8;
    },
    set: function (value) {
      this.data[GeOpCodes_getInstance().OFFSETADDR] = this.data[GeOpCodes_getInstance().OFFSETADDR] & (new Kotlin.Long(-16777216, 0)).toInt() | value >>> 8 & 16777215;
    }
  });
  GeState.prototype.writeInt_qt1dr2$ = function (key, offset, value) {
    var tmp$, tmp$_0;
    tmp$_0 = this.data;
    var tmp$_1;
    tmp$_1 = this.data;
    tmp$ = tmp$_1[key];
    tmp$_1[key] = tmp$ + 1 | 0;
    tmp$_0[offset + tmp$ | 0] = value;
  };
  GeState.prototype.setTo_j5wazo$ = function (other) {
    copyRangeTo_0(other.data, 0, this.data, 0, GeState$Companion_getInstance().STATE_NWORDS);
  };
  GeState.prototype.clone = function () {
    var $receiver = new GeState();
    $receiver.setTo_j5wazo$(this);
    return $receiver;
  };
  Object.defineProperty(GeState.prototype, 'vertexType', {
    get: function () {
      return this.data[GeOpCodes_getInstance().VERTEXTYPE];
    }
  });
  Object.defineProperty(GeState.prototype, 'vertexReverseNormal', {
    get: function () {
      return this.data[GeOpCodes_getInstance().REVERSENORMAL] !== 0;
    }
  });
  Object.defineProperty(GeState.prototype, 'vertexAddress', {
    get: function () {
      return this.getAddressRelativeToBaseOffset_za3lpa$(this.data[GeOpCodes_getInstance().VADDR]);
    },
    set: function (value) {
      this.data[GeOpCodes_getInstance().VADDR] = this.setAddressRelativeToBaseOffset_za3lpa$(this.data[GeOpCodes_getInstance().VADDR]);
    }
  });
  Object.defineProperty(GeState.prototype, 'indexAddress', {
    get: function () {
      return this.getAddressRelativeToBaseOffset_za3lpa$(this.data[GeOpCodes_getInstance().IADDR]);
    }
  });
  GeState.prototype.getAddressRelativeToBaseOffset_za3lpa$ = function (address) {
    return (this.baseAddress | address) + this.baseOffset | 0;
  };
  GeState.prototype.setAddressRelativeToBaseOffset_za3lpa$ = function (address) {
    return (address & 16777215) - this.baseOffset | 0;
  };
  GeState.prototype.getTextureMatrix_rwji5t$ = function (out) {
    if (out === void 0)
      out = new Matrix4();
    getMatrix4x4(this.data, GeOpCodes_getInstance().MAT_TEXTURE, out);
    return out;
  };
  GeState.prototype.getProjMatrix_rwji5t$ = function (out) {
    if (out === void 0)
      out = new Matrix4();
    getMatrix4x4(this.data, GeOpCodes_getInstance().MAT_PROJ, out);
    return out;
  };
  GeState.prototype.getViewMatrix_rwji5t$ = function (out) {
    if (out === void 0)
      out = new Matrix4();
    getMatrix4x3(this.data, GeOpCodes_getInstance().MAT_VIEW, out);
    return out;
  };
  GeState.prototype.getWorldMatrix_rwji5t$ = function (out) {
    if (out === void 0)
      out = new Matrix4();
    getMatrix4x3(this.data, GeOpCodes_getInstance().MAT_WORLD, out);
    return out;
  };
  GeState.prototype.getBoneMatrix_e4l04n$ = function (index, out) {
    if (out === void 0)
      out = new Matrix4();
    getMatrix4x3(this.data, GeOpCodes_getInstance().MAT_BONES + (12 * index | 0) | 0, out);
    return out;
  };
  Object.defineProperty(GeState.prototype, 'clearing', {
    get: function () {
      return param1(this.data[GeOpCodes_getInstance().CLEAR], 0) !== 0;
    }
  });
  Object.defineProperty(GeState.prototype, 'clearFlags', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().CLEAR], 8);
    }
  });
  Object.defineProperty(GeState.prototype, 'shadeModel', {
    get: function () {
      return ShadingModelEnum$Companion_getInstance().invoke_za3lpa$(param16(this.data[GeOpCodes_getInstance().SHADEMODE], 0));
    }
  });
  Object.defineProperty(GeState.prototype, 'ambientModelColor', {
    get: function () {
      return (new Color()).setRGB_A_vux9f0$(this.data[GeOpCodes_getInstance().MATERIALAMBIENT], this.data[GeOpCodes_getInstance().MATERIALALPHA]);
    }
  });
  Object.defineProperty(GeState.prototype, 'diffuseModelColor', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(this.data[GeOpCodes_getInstance().MATERIALDIFFUSE]);
    }
  });
  Object.defineProperty(GeState.prototype, 'specularModelColor', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(this.data[GeOpCodes_getInstance().MATERIALSPECULAR]);
    }
  });
  Object.defineProperty(GeState.prototype, 'drawPixelFormat', {
    get: function () {
      return PixelFormat$Companion_getInstance().invoke_za3lpa$(param4(this.data[GeOpCodes_getInstance().PSM], 0));
    }
  });
  GeState.prototype.getMorphWeight_za3lpa$ = function (index) {
    return float1(this.data[GeOpCodes_getInstance().MORPHWEIGHT0 + index | 0]);
  };
  GeState.prototype.getAddressRelativeToBase_za3lpa$ = function (relativeAddress) {
    return this.baseAddress | relativeAddress;
  };
  GeState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeState',
    interfaces: []
  };
  function SkinningState(data) {
    this.data = data;
  }
  SkinningState.prototype.getBoneMatrix_e4l04n$ = function (index, out) {
    if (out === void 0)
      out = new Matrix4();
    getMatrix4x3(this.data, GeOpCodes_getInstance().MAT_BONES + (12 * index | 0) | 0, out);
    return out;
  };
  SkinningState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SkinningState',
    interfaces: []
  };
  function getFloat(value) {
    var bits = value << 8;
    return Kotlin.floatFromBits(bits);
  }
  function getMatrix4x4(data, register, out) {
    for (var n = 0; n < 16; n++) {
      out.data[n] = getFloat(data[register + n | 0]);
    }
  }
  function getMatrix4x3(data, register, out) {
    var m = 0;
    var n = 0;
    for (var y = 0; y < 4; y++) {
      for (var x = 0; x < 3; x++) {
        out.data[n + x | 0] = getFloat(data[register + m | 0]);
        m = m + 1 | 0;
      }
      n = n + 4 | 0;
    }
    out.data[3] = 0.0;
    out.data[7] = 0.0;
    out.data[11] = 0.0;
    out.data[15] = 1.0;
  }
  function ColorTestState(data) {
    this.data = data;
  }
  Object.defineProperty(ColorTestState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().COLORTESTENABLE]);
    }
  });
  ColorTestState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ColorTestState',
    interfaces: []
  };
  function DitheringState(data) {
    this.data = data;
  }
  Object.defineProperty(DitheringState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().DITHERENABLE]);
    }
  });
  DitheringState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DitheringState',
    interfaces: []
  };
  function GpuFrameBufferState(data) {
    this.data = data;
  }
  Object.defineProperty(GpuFrameBufferState.prototype, 'width', {
    get: function () {
      return param16(this.data[GeOpCodes_getInstance().FRAMEBUFWIDTH], 0);
    }
  });
  Object.defineProperty(GpuFrameBufferState.prototype, 'highAddress', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().FRAMEBUFWIDTH], 16);
    }
  });
  Object.defineProperty(GpuFrameBufferState.prototype, 'lowAddress', {
    get: function () {
      return param24(this.data[GeOpCodes_getInstance().FRAMEBUFPTR]);
    }
  });
  GpuFrameBufferState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GpuFrameBufferState',
    interfaces: []
  };
  function VertexType(v) {
    if (v === void 0)
      v = 0;
    this.v = v;
  }
  VertexType.prototype.init_za3lpa$ = function (v) {
    this.v = v;
    return this;
  };
  function VertexType$Attribute(name, ordinal, index) {
    Enum.call(this);
    this.index = index;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function VertexType$Attribute_initFields() {
    VertexType$Attribute_initFields = function () {
    };
    VertexType$Attribute$WEIGHTS_instance = new VertexType$Attribute('WEIGHTS', 0, 0);
    VertexType$Attribute$TEXTURE_instance = new VertexType$Attribute('TEXTURE', 1, 1);
    VertexType$Attribute$COLOR_instance = new VertexType$Attribute('COLOR', 2, 2);
    VertexType$Attribute$NORMAL_instance = new VertexType$Attribute('NORMAL', 3, 3);
    VertexType$Attribute$POSITION_instance = new VertexType$Attribute('POSITION', 4, 4);
    VertexType$Attribute$END_instance = new VertexType$Attribute('END', 5, 5);
  }
  var VertexType$Attribute$WEIGHTS_instance;
  function VertexType$Attribute$WEIGHTS_getInstance() {
    VertexType$Attribute_initFields();
    return VertexType$Attribute$WEIGHTS_instance;
  }
  var VertexType$Attribute$TEXTURE_instance;
  function VertexType$Attribute$TEXTURE_getInstance() {
    VertexType$Attribute_initFields();
    return VertexType$Attribute$TEXTURE_instance;
  }
  var VertexType$Attribute$COLOR_instance;
  function VertexType$Attribute$COLOR_getInstance() {
    VertexType$Attribute_initFields();
    return VertexType$Attribute$COLOR_instance;
  }
  var VertexType$Attribute$NORMAL_instance;
  function VertexType$Attribute$NORMAL_getInstance() {
    VertexType$Attribute_initFields();
    return VertexType$Attribute$NORMAL_instance;
  }
  var VertexType$Attribute$POSITION_instance;
  function VertexType$Attribute$POSITION_getInstance() {
    VertexType$Attribute_initFields();
    return VertexType$Attribute$POSITION_instance;
  }
  var VertexType$Attribute$END_instance;
  function VertexType$Attribute$END_getInstance() {
    VertexType$Attribute_initFields();
    return VertexType$Attribute$END_instance;
  }
  VertexType$Attribute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Attribute',
    interfaces: [Enum]
  };
  function VertexType$Attribute$values() {
    return [VertexType$Attribute$WEIGHTS_getInstance(), VertexType$Attribute$TEXTURE_getInstance(), VertexType$Attribute$COLOR_getInstance(), VertexType$Attribute$NORMAL_getInstance(), VertexType$Attribute$POSITION_getInstance(), VertexType$Attribute$END_getInstance()];
  }
  VertexType$Attribute.values = VertexType$Attribute$values;
  function VertexType$Attribute$valueOf(name) {
    switch (name) {
      case 'WEIGHTS':
        return VertexType$Attribute$WEIGHTS_getInstance();
      case 'TEXTURE':
        return VertexType$Attribute$TEXTURE_getInstance();
      case 'COLOR':
        return VertexType$Attribute$COLOR_getInstance();
      case 'NORMAL':
        return VertexType$Attribute$NORMAL_getInstance();
      case 'POSITION':
        return VertexType$Attribute$POSITION_getInstance();
      case 'END':
        return VertexType$Attribute$END_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.VertexType.Attribute.' + name);
    }
  }
  VertexType$Attribute.valueOf_61zpoe$ = VertexType$Attribute$valueOf;
  Object.defineProperty(VertexType.prototype, 'tex', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(extract(this.v, 0, 2));
    }
  });
  Object.defineProperty(VertexType.prototype, 'col', {
    get: function () {
      return ColorEnum$Companion_getInstance().invoke_za3lpa$(extract(this.v, 2, 3));
    }
  });
  Object.defineProperty(VertexType.prototype, 'normal', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(extract(this.v, 5, 2));
    }
  });
  Object.defineProperty(VertexType.prototype, 'pos', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(extract(this.v, 7, 2));
    }
  });
  Object.defineProperty(VertexType.prototype, 'weight', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(extract(this.v, 9, 2));
    }
  });
  Object.defineProperty(VertexType.prototype, 'index', {
    get: function () {
      return IndexEnum$Companion_getInstance().invoke_za3lpa$(extract(this.v, 11, 2));
    }
  });
  Object.defineProperty(VertexType.prototype, 'weightComponents', {
    get: function () {
      return extract(this.v, 14, 3);
    }
  });
  Object.defineProperty(VertexType.prototype, 'morphingVertexCount', {
    get: function () {
      return extract(this.v, 18, 2);
    }
  });
  Object.defineProperty(VertexType.prototype, 'transform2D', {
    get: function () {
      return extract(this.v, 23, 1) !== 0;
    }
  });
  Object.defineProperty(VertexType.prototype, 'hasIndices', {
    get: function () {
      return this.index !== IndexEnum$VOID_getInstance();
    }
  });
  Object.defineProperty(VertexType.prototype, 'hasTexture', {
    get: function () {
      return this.tex !== NumericEnum$VOID_getInstance();
    }
  });
  Object.defineProperty(VertexType.prototype, 'hasColor', {
    get: function () {
      return this.col !== ColorEnum$VOID_getInstance();
    }
  });
  Object.defineProperty(VertexType.prototype, 'hasNormal', {
    get: function () {
      return this.normal !== NumericEnum$VOID_getInstance();
    }
  });
  Object.defineProperty(VertexType.prototype, 'hasPosition', {
    get: function () {
      return this.pos !== NumericEnum$VOID_getInstance();
    }
  });
  Object.defineProperty(VertexType.prototype, 'hasWeight', {
    get: function () {
      return this.weight !== NumericEnum$VOID_getInstance();
    }
  });
  Object.defineProperty(VertexType.prototype, 'components', {
    get: function () {
      return 3;
    }
  });
  Object.defineProperty(VertexType.prototype, 'posComponents', {
    get: function () {
      return this.components;
    }
  });
  Object.defineProperty(VertexType.prototype, 'normalComponents', {
    get: function () {
      return this.components;
    }
  });
  Object.defineProperty(VertexType.prototype, 'texComponents', {
    get: function () {
      return 2;
    }
  });
  Object.defineProperty(VertexType.prototype, 'colorSize', {
    get: function () {
      return this.col.nbytes;
    }
  });
  Object.defineProperty(VertexType.prototype, 'normalSize', {
    get: function () {
      return Kotlin.imul(this.normal.nbytes, this.normalComponents);
    }
  });
  Object.defineProperty(VertexType.prototype, 'positionSize', {
    get: function () {
      return Kotlin.imul(this.pos.nbytes, this.posComponents);
    }
  });
  Object.defineProperty(VertexType.prototype, 'textureSize', {
    get: function () {
      return Kotlin.imul(this.tex.nbytes, this.texComponents);
    }
  });
  Object.defineProperty(VertexType.prototype, 'weightSize', {
    get: function () {
      return Kotlin.imul(this.weight.nbytes, this.weightComponents);
    }
  });
  Object.defineProperty(VertexType.prototype, 'colOffset', {
    get: function () {
      return this.offsetOf_it1kwz$(VertexType$Attribute$COLOR_getInstance());
    }
  });
  Object.defineProperty(VertexType.prototype, 'normalOffset', {
    get: function () {
      return this.offsetOf_it1kwz$(VertexType$Attribute$NORMAL_getInstance());
    }
  });
  Object.defineProperty(VertexType.prototype, 'posOffset', {
    get: function () {
      return this.offsetOf_it1kwz$(VertexType$Attribute$POSITION_getInstance());
    }
  });
  Object.defineProperty(VertexType.prototype, 'texOffset', {
    get: function () {
      return this.offsetOf_it1kwz$(VertexType$Attribute$TEXTURE_getInstance());
    }
  });
  Object.defineProperty(VertexType.prototype, 'weightOffset', {
    get: function () {
      return this.offsetOf_it1kwz$(VertexType$Attribute$WEIGHTS_getInstance());
    }
  });
  VertexType.prototype.offsetOf_it1kwz$ = function (attribute) {
    var out = 0;
    out = nextAlignedTo_0(out, this.weight.nbytes);
    if (attribute === VertexType$Attribute$WEIGHTS_getInstance())
      return out;
    out = out + this.weightSize | 0;
    out = nextAlignedTo_0(out, this.tex.nbytes);
    if (attribute === VertexType$Attribute$TEXTURE_getInstance())
      return out;
    out = out + this.textureSize | 0;
    out = nextAlignedTo_0(out, this.col.nbytes);
    if (attribute === VertexType$Attribute$COLOR_getInstance())
      return out;
    out = out + this.colorSize | 0;
    out = nextAlignedTo_0(out, this.normal.nbytes);
    if (attribute === VertexType$Attribute$NORMAL_getInstance())
      return out;
    out = out + this.normalSize | 0;
    out = nextAlignedTo_0(out, this.pos.nbytes);
    if (attribute === VertexType$Attribute$POSITION_getInstance())
      return out;
    out = out + this.positionSize | 0;
    var tmp$ = out;
    var a = this.weight.nbytes;
    var b = this.tex.nbytes;
    var a_0 = Math_0.max(a, b);
    var b_0 = this.col.nbytes;
    var a_1 = Math_0.max(a_0, b_0);
    var b_1 = this.normal.nbytes;
    var a_2 = Math_0.max(a_1, b_1);
    var b_2 = this.pos.nbytes;
    out = nextAlignedTo_0(tmp$, Math_0.max(a_2, b_2));
    return out;
  };
  VertexType.prototype.size = function () {
    return this.offsetOf_it1kwz$(VertexType$Attribute$END_getInstance());
  };
  VertexType.prototype.toString = function () {
    var parts = ArrayList_init();
    var element = 'color=' + this.col;
    parts.add_11rb$(element);
    var element_0 = 'normal=' + this.normal;
    parts.add_11rb$(element_0);
    var element_1 = 'pos=' + this.pos;
    parts.add_11rb$(element_1);
    var element_2 = 'tex=' + this.tex;
    parts.add_11rb$(element_2);
    var element_3 = 'weight=' + this.weight;
    parts.add_11rb$(element_3);
    var element_4 = 'size=' + this.size();
    parts.add_11rb$(element_4);
    return 'VertexType(' + joinToString(parts, ', ') + ')';
  };
  VertexType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VertexType',
    interfaces: []
  };
  function init($receiver, state) {
    return $receiver.init_za3lpa$(state.vertexType);
  }
  function VertexRaw(color, normal, pos, tex, weights) {
    if (color === void 0)
      color = 0;
    if (normal === void 0)
      normal = new Float32Array(3);
    if (pos === void 0)
      pos = new Float32Array(3);
    if (tex === void 0)
      tex = new Float32Array(3);
    if (weights === void 0)
      weights = new Float32Array(8);
    this.color = color;
    this.normal = normal;
    this.pos = pos;
    this.tex = tex;
    this.weights = weights;
  }
  VertexRaw.prototype.toString = function () {
    return 'VertexRaw(' + get_hex(this.color) + ', normal=' + toList_1(this.normal) + ', pos=' + toList_1(this.pos) + ', tex=' + toList_1(this.tex) + ', weights=' + toList_1(this.weights) + ')';
  };
  VertexRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VertexRaw',
    interfaces: []
  };
  VertexRaw.prototype.component1 = function () {
    return this.color;
  };
  VertexRaw.prototype.component2 = function () {
    return this.normal;
  };
  VertexRaw.prototype.component3 = function () {
    return this.pos;
  };
  VertexRaw.prototype.component4 = function () {
    return this.tex;
  };
  VertexRaw.prototype.component5 = function () {
    return this.weights;
  };
  VertexRaw.prototype.copy_qe1546$ = function (color, normal, pos, tex, weights) {
    return new VertexRaw(color === void 0 ? this.color : color, normal === void 0 ? this.normal : normal, pos === void 0 ? this.pos : pos, tex === void 0 ? this.tex : tex, weights === void 0 ? this.weights : weights);
  };
  VertexRaw.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.color) | 0;
    result = result * 31 + Kotlin.hashCode(this.normal) | 0;
    result = result * 31 + Kotlin.hashCode(this.pos) | 0;
    result = result * 31 + Kotlin.hashCode(this.tex) | 0;
    result = result * 31 + Kotlin.hashCode(this.weights) | 0;
    return result;
  };
  VertexRaw.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.color, other.color) && Kotlin.equals(this.normal, other.normal) && Kotlin.equals(this.pos, other.pos) && Kotlin.equals(this.tex, other.tex) && Kotlin.equals(this.weights, other.weights)))));
  };
  function VertexReader() {
  }
  VertexReader.prototype.readBytes_0 = function ($receiver, count, out, normalized) {
    if (out === void 0)
      out = new Float32Array(4);
    skipToAlign($receiver, 4);
    if (normalized) {
      for (var n = 0; n < count; n++)
        out[n] = readS8($receiver) / 127;
    }
     else {
      for (var n_0 = 0; n_0 < count; n_0++)
        out[n_0] = readS8($receiver);
    }
    return out;
  };
  VertexReader.prototype.readShorts_0 = function ($receiver, count, out, normalized) {
    if (out === void 0)
      out = new Float32Array(4);
    skipToAlign($receiver, 4);
    if (normalized) {
      for (var n = 0; n < count; n++)
        out[n] = readS16_le($receiver) / 32767;
    }
     else {
      for (var n_0 = 0; n_0 < count; n_0++)
        out[n_0] = readS16_le($receiver);
    }
    return out;
  };
  VertexReader.prototype.readFloats_0 = function ($receiver, count, out, normalized) {
    if (out === void 0)
      out = new Float32Array(4);
    skipToAlign($receiver, 4);
    for (var n = 0; n < count; n++)
      out[n] = readF32_le($receiver);
    return out;
  };
  VertexReader.prototype.readColorType_hd5xpl$ = function ($receiver, type) {
    var tmp$;
    if (equals(type, ColorEnum$COLOR4444_getInstance()))
      tmp$ = color.RGBA_4444.packRGBA_za3lpa$(readU16_le($receiver));
    else if (equals(type, ColorEnum$COLOR5551_getInstance()))
      tmp$ = color.RGBA_5551.packRGBA_za3lpa$(readU16_le($receiver));
    else if (equals(type, ColorEnum$COLOR5650_getInstance()))
      tmp$ = color.RGB_565.packRGBA_za3lpa$(readU16_le($receiver));
    else if (equals(type, ColorEnum$COLOR8888_getInstance()))
      tmp$ = readS32_le_0($receiver);
    else {
      throw new NotImplementedError_init();
    }
    return tmp$;
  };
  VertexReader.prototype.readNumericType_3c2pba$ = function ($receiver, count, type, out, normalized) {
    if (out === void 0)
      out = new Float32Array(4);
    if (!equals(type, NumericEnum$VOID_getInstance()))
      if (equals(type, NumericEnum$BYTE_getInstance()))
        this.readBytes_0($receiver, count, out, normalized);
      else if (equals(type, NumericEnum$SHORT_getInstance()))
        this.readShorts_0($receiver, count, out, normalized);
      else if (equals(type, NumericEnum$FLOAT_getInstance()))
        this.readFloats_0($receiver, count, out, normalized);
      else
        Kotlin.noWhenBranchMatched();
    return out;
  };
  VertexReader.prototype.readOne_h7y9mx$ = function (s, type, out) {
    if (out === void 0)
      out = new VertexRaw();
    safeSkipToAlign(s, type.weight.nbytes);
    this.readNumericType_3c2pba$(s, type.weightComponents, type.weight, out.weights, true);
    safeSkipToAlign(s, type.tex.nbytes);
    this.readNumericType_3c2pba$(s, type.texComponents, type.tex, out.tex, true);
    safeSkipToAlign(s, type.col.nbytes);
    out.color = this.readColorType_hd5xpl$(s, type.col);
    safeSkipToAlign(s, type.normal.nbytes);
    this.readNumericType_3c2pba$(s, type.normalComponents, type.normal, out.normal, false);
    safeSkipToAlign(s, type.pos.nbytes);
    this.readNumericType_3c2pba$(s, type.posComponents, type.pos, out.pos, false);
    var a = type.weight.nbytes;
    var b = type.tex.nbytes;
    var a_0 = Math_0.max(a, b);
    var b_0 = type.col.nbytes;
    var a_1 = Math_0.max(a_0, b_0);
    var b_1 = type.normal.nbytes;
    var a_2 = Math_0.max(a_1, b_1);
    var b_2 = type.pos.nbytes;
    safeSkipToAlign(s, Math_0.max(a_2, b_2));
    return out;
  };
  VertexReader.prototype.read_75t58$ = function (type, count, s) {
    var $receiver = until(0, count);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(this.readOne_h7y9mx$(s, type));
    }
    return destination;
  };
  VertexReader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VertexReader',
    interfaces: []
  };
  function safeSkipToAlign($receiver, alignment) {
    if (alignment !== 0)
      skipToAlign($receiver, alignment);
  }
  function Gpu(emulator) {
    this.emulator_wj70dw$_0 = emulator;
    this.batchQueue = ArrayList_init();
  }
  Object.defineProperty(Gpu.prototype, 'emulator', {
    get: function () {
      return this.emulator_wj70dw$_0;
    }
  });
  Gpu.prototype.render = function () {
    if (!this.batchQueue.isEmpty()) {
      this.emulator.gpuRenderer.render_in36x8$(toList_2(this.batchQueue));
      this.batchQueue.clear();
    }
  };
  Gpu.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Gpu',
    interfaces: [WithEmulator]
  };
  function GpuRenderer() {
  }
  GpuRenderer.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'GpuRenderer',
    interfaces: []
  };
  function DummyGpuRenderer() {
  }
  DummyGpuRenderer.prototype.render_in36x8$ = function (batches) {
    println('BATCHES: ' + batches);
  };
  DummyGpuRenderer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DummyGpuRenderer',
    interfaces: [GpuRenderer]
  };
  function registerNativeModules($receiver) {
    registerNativeModules_0($receiver.moduleManager);
  }
  function registerNativeModules_0($receiver) {
    $receiver.register_q5jrol$(new LoadExecForUser($receiver.emulator));
    $receiver.register_q5jrol$(new ThreadManForUser($receiver.emulator));
    $receiver.register_q5jrol$(new SysMemUserForUser($receiver.emulator));
    $receiver.register_q5jrol$(new StdioForUser($receiver.emulator));
    $receiver.register_q5jrol$(new ModuleMgrForUser($receiver.emulator));
    $receiver.register_q5jrol$(new IoFileMgrForUser($receiver.emulator));
    $receiver.register_q5jrol$(new sceGe_user($receiver.emulator));
    $receiver.register_q5jrol$(new sceRtc($receiver.emulator));
    $receiver.register_q5jrol$(new sceCtrl($receiver.emulator));
    $receiver.register_q5jrol$(new sceDisplay($receiver.emulator));
    $receiver.register_q5jrol$(new UtilsForKernel($receiver.emulator));
    $receiver.register_q5jrol$(new UtilsForUser($receiver.emulator));
    $receiver.register_q5jrol$(new scePower($receiver.emulator));
    $receiver.register_q5jrol$(new sceNetInet($receiver.emulator));
    $receiver.register_q5jrol$(new sceAudio($receiver.emulator));
  }
  function RegisterReader() {
    this.pos = 4;
    this.emulator_yeso65$_0 = this.emulator_yeso65$_0;
    this.cpu_duvrp0$_0 = this.cpu_duvrp0$_0;
  }
  Object.defineProperty(RegisterReader.prototype, 'emulator', {
    get: function () {
      if (this.emulator_yeso65$_0 == null)
        return throwUPAE('emulator');
      return this.emulator_yeso65$_0;
    },
    set: function (emulator) {
      this.emulator_yeso65$_0 = emulator;
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'cpu', {
    get: function () {
      if (this.cpu_duvrp0$_0 == null)
        return throwUPAE('cpu');
      return this.cpu_duvrp0$_0;
    },
    set: function (cpu) {
      this.cpu_duvrp0$_0 = cpu;
    }
  });
  RegisterReader.prototype.reset_xt3zvs$ = function (cpu) {
    this.cpu = cpu;
    this.pos = 4;
  };
  Object.defineProperty(RegisterReader.prototype, 'thread', {
    get: function () {
      return get_thread(this.cpu);
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'mem', {
    get: function () {
      return this.cpu.mem;
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'int', {
    get: function () {
      var tmp$;
      return this.cpu.GPR.get_za3lpa$((tmp$ = this.pos, this.pos = tmp$ + 1 | 0, tmp$));
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'long', {
    get: function () {
      var tmp$, tmp$_0;
      this.pos = nextAlignedTo_0(this.pos, 2);
      var low = this.cpu.GPR.get_za3lpa$((tmp$ = this.pos, this.pos = tmp$ + 1 | 0, tmp$));
      var high = this.cpu.GPR.get_za3lpa$((tmp$_0 = this.pos, this.pos = tmp$_0 + 1 | 0, tmp$_0));
      return Kotlin.Long.fromInt(high).shiftLeft(32).or(Kotlin.Long.fromInt(low).and(new Kotlin.Long(-1, 0)));
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'ptr', {
    get: function () {
      return new MemPtr(this.mem, this.int);
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'str', {
    get: function () {
      return this.mem.readStringzOrNull_za3lpa$(this.int);
    }
  });
  RegisterReader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RegisterReader',
    interfaces: []
  };
  function NativeFunction(name, nid, since, syscall, function_0) {
    this.name = name;
    this.nid = nid;
    this.since = since;
    this.syscall = syscall;
    this.function = function_0;
  }
  NativeFunction.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NativeFunction',
    interfaces: []
  };
  NativeFunction.prototype.component1 = function () {
    return this.name;
  };
  NativeFunction.prototype.component2 = function () {
    return this.nid;
  };
  NativeFunction.prototype.component3 = function () {
    return this.since;
  };
  NativeFunction.prototype.component4 = function () {
    return this.syscall;
  };
  NativeFunction.prototype.component5 = function () {
    return this.function;
  };
  NativeFunction.prototype.copy_gh35x6$ = function (name, nid, since, syscall, function_0) {
    return new NativeFunction(name === void 0 ? this.name : name, nid === void 0 ? this.nid : nid, since === void 0 ? this.since : since, syscall === void 0 ? this.syscall : syscall, function_0 === void 0 ? this.function : function_0);
  };
  NativeFunction.prototype.toString = function () {
    return 'NativeFunction(name=' + Kotlin.toString(this.name) + (', nid=' + Kotlin.toString(this.nid)) + (', since=' + Kotlin.toString(this.since)) + (', syscall=' + Kotlin.toString(this.syscall)) + (', function=' + Kotlin.toString(this.function)) + ')';
  };
  NativeFunction.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.nid) | 0;
    result = result * 31 + Kotlin.hashCode(this.since) | 0;
    result = result * 31 + Kotlin.hashCode(this.syscall) | 0;
    result = result * 31 + Kotlin.hashCode(this.function) | 0;
    return result;
  };
  NativeFunction.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.nid, other.nid) && Kotlin.equals(this.since, other.since) && Kotlin.equals(this.syscall, other.syscall) && Kotlin.equals(this.function, other.function)))));
  };
  function SceModule(emulator, name, flags, prxFile, prxName) {
    if (flags === void 0)
      flags = 0;
    if (prxFile === void 0)
      prxFile = '';
    if (prxName === void 0)
      prxName = '';
    this.emulator_csf0s2$_0 = emulator;
    this.name = name;
    this.flags = flags;
    this.prxFile = prxFile;
    this.prxName = prxName;
    this.logger = PspLogger$Companion_getInstance().invoke_61zpoe$('SceModule.' + this.name);
    this.rr_hosgbr$_0 = new RegisterReader();
    this.functions = LinkedHashMap_init();
  }
  Object.defineProperty(SceModule.prototype, 'emulator', {
    get: function () {
      return this.emulator_csf0s2$_0;
    }
  });
  SceModule.prototype.registerPspModule = function () {
    this.registerModule();
  };
  SceModule.prototype.getByNidOrNull_za3lpa$ = function (nid) {
    return this.functions.get_11rb$(nid);
  };
  SceModule.prototype.getByNid_za3lpa$ = function (nid) {
    var tmp$;
    return (tmp$ = this.getByNidOrNull_za3lpa$(nid)) != null ? tmp$ : invalidOp(format("Can't find NID 0x%08X in %s", [nid, this.name]));
  };
  SceModule.prototype.UNIMPLEMENTED_za3lpa$ = function (nid) {
    var func = this.getByNid_za3lpa$(nid);
    throw new NotImplementedError_init('An operation is not implemented: ' + format('Unimplemented %s:0x%08X:%s', [this.name, func.nid, func.name]));
  };
  SceModule.prototype.UNIMPLEMENTED_s8cxhz$ = function (nid) {
    return this.UNIMPLEMENTED_za3lpa$(nid.toInt());
  };
  function SceModule$registerFunctionRaw$lambda(closure$function) {
    return function (cpu, syscall) {
      closure$function.function(cpu);
      return Unit;
    };
  }
  SceModule.prototype.registerFunctionRaw_l9o8wl$ = function (function_0) {
    var $receiver = this.functions;
    var key = function_0.nid.toInt();
    $receiver.put_xwzc9p$(key, function_0);
    if (function_0.syscall >= 0) {
      this.emulator.syscalls.register_p42kcx$(function_0.syscall, SceModule$registerFunctionRaw$lambda(function_0));
    }
  };
  SceModule.prototype.registerFunctionRaw_gh35x6$ = function (name, uid, since, syscall, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    this.registerFunctionRaw_l9o8wl$(new NativeFunction(name, uid, since, syscall, function_0));
  };
  function SceModule$registerFunctionRR$lambda(this$SceModule, closure$function) {
    return function (it) {
      this$SceModule.rr_hosgbr$_0.reset_xt3zvs$(it);
      closure$function(this$SceModule.rr_hosgbr$_0, it);
      return Unit;
    };
  }
  SceModule.prototype.registerFunctionRR_dc3d86$ = function (name, uid, since, syscall, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    this.registerFunctionRaw_gh35x6$(name, uid, since, syscall, SceModule$registerFunctionRR$lambda(this, function_0));
  };
  SceModule.prototype.registerFunctionVoid_dc3d86$ = function (name, uid, since, syscall, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    this.registerFunctionRR_dc3d86$(name, uid, since, syscall, function_0);
  };
  function SceModule$registerFunctionInt$lambda(closure$function) {
    return function ($receiver, it) {
      $receiver.cpu.r2 = closure$function($receiver, it);
      return Unit;
    };
  }
  SceModule.prototype.registerFunctionInt_9l82lv$ = function (name, uid, since, syscall, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    this.registerFunctionRR_dc3d86$(name, uid, since, syscall, SceModule$registerFunctionInt$lambda(function_0));
  };
  function SceModule$registerFunctionLong$lambda(closure$function) {
    return function ($receiver, it) {
      var ret = closure$function($receiver, it);
      $receiver.cpu.r2 = ret.shiftRightUnsigned(0).toInt();
      $receiver.cpu.r3 = ret.shiftRightUnsigned(32).toInt();
      return Unit;
    };
  }
  SceModule.prototype.registerFunctionLong_d75y9q$ = function (name, uid, since, syscall, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    this.registerFunctionRR_dc3d86$(name, uid, since, syscall, SceModule$registerFunctionLong$lambda(function_0));
  };
  function SceModule$registerFunctionSuspendInt$lambda$lambda(closure$function_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$SceModule$registerFunctionSuspendInt$lambda$lambda(closure$function_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$SceModule$registerFunctionSuspendInt$lambda$lambda(closure$function_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$function = closure$function_0;
    this.local$it = it_0;
  }
  Coroutine$SceModule$registerFunctionSuspendInt$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SceModule$registerFunctionSuspendInt$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SceModule$registerFunctionSuspendInt$lambda$lambda.prototype.constructor = Coroutine$SceModule$registerFunctionSuspendInt$lambda$lambda;
  Coroutine$SceModule$registerFunctionSuspendInt$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$function(this.local$it, this.local$it.cpu, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SceModule$registerFunctionSuspendInt$lambda$ObjectLiteral(this$, closure$completed, closure$it, this$SceModule) {
    this.this$ = this$;
    this.closure$completed = closure$completed;
    this.closure$it = closure$it;
    this.context_mlyfaa$_0 = get_coroutineContext(this$SceModule);
  }
  Object.defineProperty(SceModule$registerFunctionSuspendInt$lambda$ObjectLiteral.prototype, 'context', {
    get: function () {
      return this.context_mlyfaa$_0;
    }
  });
  SceModule$registerFunctionSuspendInt$lambda$ObjectLiteral.prototype.resume_11rb$ = function (value) {
    this.this$.cpu.r2 = value;
    this.closure$completed.v = true;
    get_thread(this.closure$it).resume();
  };
  SceModule$registerFunctionSuspendInt$lambda$ObjectLiteral.prototype.resumeWithException_tcv7n7$ = function (exception) {
    printStackTrace(exception);
    throw exception;
  };
  SceModule$registerFunctionSuspendInt$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Continuation]
  };
  function SceModule$registerFunctionSuspendInt$lambda(closure$function, this$SceModule, closure$cb) {
    return function ($receiver, it) {
      var mfunction = SceModule$registerFunctionSuspendInt$lambda$lambda(closure$function);
      var completed = {v: false};
      startCoroutine(mfunction, $receiver, new SceModule$registerFunctionSuspendInt$lambda$ObjectLiteral($receiver, completed, it, this$SceModule));
      if (!completed.v) {
        get_thread(it).markWaiting_p514vg$(new WaitObject$PROMISE(new Promise()), closure$cb);
        get_threadManager(this$SceModule).suspend();
      }
      return Unit;
    };
  }
  SceModule.prototype.registerFunctionSuspendInt_q1rm4a$ = function (name, uid, since, syscall, cb, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    if (cb === void 0)
      cb = false;
    this.registerFunctionRR_dc3d86$(name, uid, since, syscall, SceModule$registerFunctionSuspendInt$lambda(function_0, this, cb));
  };
  function SceModule$registerFunctionSuspendLong$lambda$lambda(closure$function_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$SceModule$registerFunctionSuspendLong$lambda$lambda(closure$function_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$SceModule$registerFunctionSuspendLong$lambda$lambda(closure$function_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$function = closure$function_0;
    this.local$it = it_0;
  }
  Coroutine$SceModule$registerFunctionSuspendLong$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SceModule$registerFunctionSuspendLong$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SceModule$registerFunctionSuspendLong$lambda$lambda.prototype.constructor = Coroutine$SceModule$registerFunctionSuspendLong$lambda$lambda;
  Coroutine$SceModule$registerFunctionSuspendLong$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$function(this.local$it, this.local$it.cpu, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SceModule$registerFunctionSuspendLong$lambda$ObjectLiteral(this$, closure$completed, closure$it, this$SceModule) {
    this.this$ = this$;
    this.closure$completed = closure$completed;
    this.closure$it = closure$it;
    this.context_6sy039$_0 = get_coroutineContext(this$SceModule);
  }
  Object.defineProperty(SceModule$registerFunctionSuspendLong$lambda$ObjectLiteral.prototype, 'context', {
    get: function () {
      return this.context_6sy039$_0;
    }
  });
  SceModule$registerFunctionSuspendLong$lambda$ObjectLiteral.prototype.resume_11rb$ = function (value) {
    this.this$.cpu.r3 = value.shiftRightUnsigned(0).toInt();
    this.this$.cpu.r2 = value.shiftRightUnsigned(32).toInt();
    this.closure$completed.v = true;
    get_thread(this.closure$it).resume();
  };
  SceModule$registerFunctionSuspendLong$lambda$ObjectLiteral.prototype.resumeWithException_tcv7n7$ = function (exception) {
    printStackTrace(exception);
    throw exception;
  };
  SceModule$registerFunctionSuspendLong$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Continuation]
  };
  function SceModule$registerFunctionSuspendLong$lambda(closure$function, this$SceModule, closure$cb) {
    return function ($receiver, it) {
      var mfunction = SceModule$registerFunctionSuspendLong$lambda$lambda(closure$function);
      var completed = {v: false};
      startCoroutine(mfunction, $receiver, new SceModule$registerFunctionSuspendLong$lambda$ObjectLiteral($receiver, completed, it, this$SceModule));
      if (!completed.v) {
        get_thread(it).markWaiting_p514vg$(new WaitObject$PROMISE(new Promise()), closure$cb);
        get_threadManager(this$SceModule).suspend();
      }
      return Unit;
    };
  }
  SceModule.prototype.registerFunctionSuspendLong_q4vilx$ = function (name, uid, since, syscall, cb, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    if (cb === void 0)
      cb = false;
    this.registerFunctionRR_dc3d86$(name, uid, since, syscall, SceModule$registerFunctionSuspendLong$lambda(function_0, this, cb));
  };
  SceModule.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SceModule',
    interfaces: [WithEmulator]
  };
  function PixelFormat(name, ordinal, id, hasClut, bytesPerPixel) {
    Enum.call(this);
    this.id_va3z88$_0 = id;
    this.hasClut = hasClut;
    this.bytesPerPixel = bytesPerPixel;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PixelFormat_initFields() {
    PixelFormat_initFields = function () {
    };
    PixelFormat$RGBA_5650_instance = new PixelFormat('RGBA_5650', 0, 0, false, 2.0);
    PixelFormat$RGBA_5551_instance = new PixelFormat('RGBA_5551', 1, 1, false, 2.0);
    PixelFormat$RGBA_4444_instance = new PixelFormat('RGBA_4444', 2, 2, false, 2.0);
    PixelFormat$RGBA_8888_instance = new PixelFormat('RGBA_8888', 3, 3, false, 4.0);
    PixelFormat$PALETTE_T4_instance = new PixelFormat('PALETTE_T4', 4, 4, true, 0.5);
    PixelFormat$PALETTE_T8_instance = new PixelFormat('PALETTE_T8', 5, 5, true, 1.0);
    PixelFormat$PALETTE_T16_instance = new PixelFormat('PALETTE_T16', 6, 6, true, 2.0);
    PixelFormat$PALETTE_T32_instance = new PixelFormat('PALETTE_T32', 7, 7, true, 4.0);
    PixelFormat$COMPRESSED_DXT1_instance = new PixelFormat('COMPRESSED_DXT1', 8, 8, false, 0.5);
    PixelFormat$COMPRESSED_DXT3_instance = new PixelFormat('COMPRESSED_DXT3', 9, 9, false, 1.0);
    PixelFormat$COMPRESSED_DXT5_instance = new PixelFormat('COMPRESSED_DXT5', 10, 10, false, 1.0);
    PixelFormat$Companion_getInstance();
  }
  Object.defineProperty(PixelFormat.prototype, 'id', {
    get: function () {
      return this.id_va3z88$_0;
    }
  });
  var PixelFormat$RGBA_5650_instance;
  function PixelFormat$RGBA_5650_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$RGBA_5650_instance;
  }
  var PixelFormat$RGBA_5551_instance;
  function PixelFormat$RGBA_5551_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$RGBA_5551_instance;
  }
  var PixelFormat$RGBA_4444_instance;
  function PixelFormat$RGBA_4444_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$RGBA_4444_instance;
  }
  var PixelFormat$RGBA_8888_instance;
  function PixelFormat$RGBA_8888_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$RGBA_8888_instance;
  }
  var PixelFormat$PALETTE_T4_instance;
  function PixelFormat$PALETTE_T4_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$PALETTE_T4_instance;
  }
  var PixelFormat$PALETTE_T8_instance;
  function PixelFormat$PALETTE_T8_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$PALETTE_T8_instance;
  }
  var PixelFormat$PALETTE_T16_instance;
  function PixelFormat$PALETTE_T16_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$PALETTE_T16_instance;
  }
  var PixelFormat$PALETTE_T32_instance;
  function PixelFormat$PALETTE_T32_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$PALETTE_T32_instance;
  }
  var PixelFormat$COMPRESSED_DXT1_instance;
  function PixelFormat$COMPRESSED_DXT1_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$COMPRESSED_DXT1_instance;
  }
  var PixelFormat$COMPRESSED_DXT3_instance;
  function PixelFormat$COMPRESSED_DXT3_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$COMPRESSED_DXT3_instance;
  }
  var PixelFormat$COMPRESSED_DXT5_instance;
  function PixelFormat$COMPRESSED_DXT5_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$COMPRESSED_DXT5_instance;
  }
  PixelFormat.prototype.getSizeInBytes_za3lpa$ = function (count) {
    return numberToInt(this.bytesPerPixel * count);
  };
  function PixelFormat$Companion() {
    PixelFormat$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, PixelFormat$values());
  }
  PixelFormat$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var PixelFormat$Companion_instance = null;
  function PixelFormat$Companion_getInstance() {
    PixelFormat_initFields();
    if (PixelFormat$Companion_instance === null) {
      new PixelFormat$Companion();
    }
    return PixelFormat$Companion_instance;
  }
  PixelFormat.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PixelFormat',
    interfaces: [IdEnum, Enum]
  };
  function PixelFormat$values() {
    return [PixelFormat$RGBA_5650_getInstance(), PixelFormat$RGBA_5551_getInstance(), PixelFormat$RGBA_4444_getInstance(), PixelFormat$RGBA_8888_getInstance(), PixelFormat$PALETTE_T4_getInstance(), PixelFormat$PALETTE_T8_getInstance(), PixelFormat$PALETTE_T16_getInstance(), PixelFormat$PALETTE_T32_getInstance(), PixelFormat$COMPRESSED_DXT1_getInstance(), PixelFormat$COMPRESSED_DXT3_getInstance(), PixelFormat$COMPRESSED_DXT5_getInstance()];
  }
  PixelFormat.values = PixelFormat$values;
  function PixelFormat$valueOf(name) {
    switch (name) {
      case 'RGBA_5650':
        return PixelFormat$RGBA_5650_getInstance();
      case 'RGBA_5551':
        return PixelFormat$RGBA_5551_getInstance();
      case 'RGBA_4444':
        return PixelFormat$RGBA_4444_getInstance();
      case 'RGBA_8888':
        return PixelFormat$RGBA_8888_getInstance();
      case 'PALETTE_T4':
        return PixelFormat$PALETTE_T4_getInstance();
      case 'PALETTE_T8':
        return PixelFormat$PALETTE_T8_getInstance();
      case 'PALETTE_T16':
        return PixelFormat$PALETTE_T16_getInstance();
      case 'PALETTE_T32':
        return PixelFormat$PALETTE_T32_getInstance();
      case 'COMPRESSED_DXT1':
        return PixelFormat$COMPRESSED_DXT1_getInstance();
      case 'COMPRESSED_DXT3':
        return PixelFormat$COMPRESSED_DXT3_getInstance();
      case 'COMPRESSED_DXT5':
        return PixelFormat$COMPRESSED_DXT5_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.PixelFormat.' + name);
    }
  }
  PixelFormat.valueOf_61zpoe$ = PixelFormat$valueOf;
  function SceKernelErrors() {
    SceKernelErrors_instance = this;
    this.ERROR_OK = 0;
    this.ERROR_ERROR = (new Kotlin.Long(-2147352575, 0)).toInt();
    this.ERROR_NOTIMP = (new Kotlin.Long(-2147352574, 0)).toInt();
    this.ERROR_ALREADY = (new Kotlin.Long(-2147483616, 0)).toInt();
    this.ERROR_BUSY = (new Kotlin.Long(-2147483615, 0)).toInt();
    this.ERROR_OUT_OF_MEMORY = (new Kotlin.Long(-2147483614, 0)).toInt();
    this.ERROR_INVALID_ID = (new Kotlin.Long(-2147483392, 0)).toInt();
    this.ERROR_INVALID_NAME = (new Kotlin.Long(-2147483391, 0)).toInt();
    this.ERROR_INVALID_INDEX = (new Kotlin.Long(-2147483390, 0)).toInt();
    this.ERROR_INVALID_POINTER = (new Kotlin.Long(-2147483389, 0)).toInt();
    this.ERROR_INVALID_SIZE = (new Kotlin.Long(-2147483388, 0)).toInt();
    this.ERROR_INVALID_FLAG = (new Kotlin.Long(-2147483387, 0)).toInt();
    this.ERROR_INVALID_COMMAND = (new Kotlin.Long(-2147483386, 0)).toInt();
    this.ERROR_INVALID_MODE = (new Kotlin.Long(-2147483385, 0)).toInt();
    this.ERROR_INVALID_FORMAT = (new Kotlin.Long(-2147483384, 0)).toInt();
    this.ERROR_INVALID_VALUE = (new Kotlin.Long(-2147483138, 0)).toInt();
    this.ERROR_INVALID_ARGUMENT = (new Kotlin.Long(-2147483137, 0)).toInt();
    this.ERROR_BAD_FILE = (new Kotlin.Long(-2147483127, 0)).toInt();
    this.ERROR_ACCESS_ERROR = (new Kotlin.Long(-2147483123, 0)).toInt();
    this.ERROR_ERRNO_OPERATION_NOT_PERMITTED = (new Kotlin.Long(-2147418111, 0)).toInt();
    this.ERROR_ERRNO_FILE_NOT_FOUND = (new Kotlin.Long(-2147418110, 0)).toInt();
    this.ERROR_ERRNO_FILE_OPEN_ERROR = (new Kotlin.Long(-2147418109, 0)).toInt();
    this.ERROR_ERRNO_IO_ERROR = (new Kotlin.Long(-2147418107, 0)).toInt();
    this.ERROR_ERRNO_ARG_LIST_TOO_LONG = (new Kotlin.Long(-2147418105, 0)).toInt();
    this.ERROR_ERRNO_INVALID_FILE_DESCRIPTOR = (new Kotlin.Long(-2147418103, 0)).toInt();
    this.ERROR_ERRNO_RESOURCE_UNAVAILABLE = (new Kotlin.Long(-2147418101, 0)).toInt();
    this.ERROR_ERRNO_NO_MEMORY = (new Kotlin.Long(-2147418100, 0)).toInt();
    this.ERROR_ERRNO_NO_PERM = (new Kotlin.Long(-2147418099, 0)).toInt();
    this.ERROR_ERRNO_FILE_INVALID_ADDR = (new Kotlin.Long(-2147418098, 0)).toInt();
    this.ERROR_ERRNO_DEVICE_BUSY = (new Kotlin.Long(-2147418096, 0)).toInt();
    this.ERROR_ERRNO_FILE_ALREADY_EXISTS = (new Kotlin.Long(-2147418095, 0)).toInt();
    this.ERROR_ERRNO_CROSS_DEV_LINK = (new Kotlin.Long(-2147418094, 0)).toInt();
    this.ERROR_ERRNO_DEVICE_NOT_FOUND = (new Kotlin.Long(-2147418093, 0)).toInt();
    this.ERROR_ERRNO_NOT_A_DIRECTORY = (new Kotlin.Long(-2147418092, 0)).toInt();
    this.ERROR_ERRNO_IS_DIRECTORY = (new Kotlin.Long(-2147418091, 0)).toInt();
    this.ERROR_ERRNO_INVALID_ARGUMENT = (new Kotlin.Long(-2147418090, 0)).toInt();
    this.ERROR_ERRNO_TOO_MANY_OPEN_SYSTEM_FILES = (new Kotlin.Long(-2147418088, 0)).toInt();
    this.ERROR_ERRNO_FILE_IS_TOO_BIG = (new Kotlin.Long(-2147418085, 0)).toInt();
    this.ERROR_ERRNO_DEVICE_NO_FREE_SPACE = (new Kotlin.Long(-2147418084, 0)).toInt();
    this.ERROR_ERRNO_READ_ONLY = (new Kotlin.Long(-2147418082, 0)).toInt();
    this.ERROR_ERRNO_CLOSED = (new Kotlin.Long(-2147418080, 0)).toInt();
    this.ERROR_ERRNO_FILE_PATH_TOO_LONG = (new Kotlin.Long(-2147418076, 0)).toInt();
    this.ERROR_ERRNO_FILE_PROTOCOL = (new Kotlin.Long(-2147418041, 0)).toInt();
    this.ERROR_ERRNO_DIRECTORY_IS_NOT_EMPTY = (new Kotlin.Long(-2147418022, 0)).toInt();
    this.ERROR_ERRNO_TOO_MANY_SYMBOLIC_LINKS = (new Kotlin.Long(-2147418020, 0)).toInt();
    this.ERROR_ERRNO_FILE_ADDR_IN_USE = (new Kotlin.Long(-2147418014, 0)).toInt();
    this.ERROR_ERRNO_CONNECTION_ABORTED = (new Kotlin.Long(-2147418009, 0)).toInt();
    this.ERROR_ERRNO_CONNECTION_RESET = (new Kotlin.Long(-2147418008, 0)).toInt();
    this.ERROR_ERRNO_NO_FREE_BUF_SPACE = (new Kotlin.Long(-2147418007, 0)).toInt();
    this.ERROR_ERRNO_FILE_TIMEOUT = (new Kotlin.Long(-2147418002, 0)).toInt();
    this.ERROR_ERRNO_IN_PROGRESS = (new Kotlin.Long(-2147417993, 0)).toInt();
    this.ERROR_ERRNO_ALREADY = (new Kotlin.Long(-2147417992, 0)).toInt();
    this.ERROR_ERRNO_NO_MEDIA = (new Kotlin.Long(-2147417989, 0)).toInt();
    this.ERROR_ERRNO_INVALID_MEDIUM = (new Kotlin.Long(-2147417988, 0)).toInt();
    this.ERROR_ERRNO_ADDRESS_NOT_AVAILABLE = (new Kotlin.Long(-2147417987, 0)).toInt();
    this.ERROR_ERRNO_IS_ALREADY_CONNECTED = (new Kotlin.Long(-2147417985, 0)).toInt();
    this.ERROR_ERRNO_NOT_CONNECTED = (new Kotlin.Long(-2147417984, 0)).toInt();
    this.ERROR_ERRNO_FILE_QUOTA_EXCEEDED = (new Kotlin.Long(-2147417980, 0)).toInt();
    this.ERROR_ERRNO_FUNCTION_NOT_SUPPORTED = (new Kotlin.Long(-2147373056, 0)).toInt();
    this.ERROR_ERRNO_ADDR_OUT_OF_MAIN_MEM = (new Kotlin.Long(-2147373055, 0)).toInt();
    this.ERROR_ERRNO_INVALID_UNIT_NUM = (new Kotlin.Long(-2147373054, 0)).toInt();
    this.ERROR_ERRNO_INVALID_FILE_SIZE = (new Kotlin.Long(-2147373053, 0)).toInt();
    this.ERROR_ERRNO_INVALID_FLAG = (new Kotlin.Long(-2147373052, 0)).toInt();
    this.ERROR_KERNEL_CANNOT_BE_CALLED_FROM_INTERRUPT = (new Kotlin.Long(-2147352476, 0)).toInt();
    this.ERROR_KERNEL_INTERRUPTS_ALREADY_DISABLED = (new Kotlin.Long(-2147352474, 0)).toInt();
    this.ERROR_KERNEL_UNKNOWN_UID = (new Kotlin.Long(-2147352373, 0)).toInt();
    this.ERROR_KERNEL_UNMATCH_TYPE_UID = (new Kotlin.Long(-2147352372, 0)).toInt();
    this.ERROR_KERNEL_NOT_EXIST_ID = (new Kotlin.Long(-2147352371, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_FUNCTION_UID = (new Kotlin.Long(-2147352370, 0)).toInt();
    this.ERROR_KERNEL_ALREADY_HOLDER_UID = (new Kotlin.Long(-2147352369, 0)).toInt();
    this.ERROR_KERNEL_NOT_HOLDER_UID = (new Kotlin.Long(-2147352368, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_PERMISSION = (new Kotlin.Long(-2147352367, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_ARGUMENT = (new Kotlin.Long(-2147352366, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_ADDR = (new Kotlin.Long(-2147352365, 0)).toInt();
    this.ERROR_KERNEL_MEMORY_AREA_OUT_OF_RANGE = (new Kotlin.Long(-2147352364, 0)).toInt();
    this.ERROR_KERNEL_MEMORY_AREA_IS_OVERLAP = (new Kotlin.Long(-2147352363, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_PARTITION_ID = (new Kotlin.Long(-2147352362, 0)).toInt();
    this.ERROR_KERNEL_PARTITION_IN_USE = (new Kotlin.Long(-2147352361, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_MEMBLOCK_ALLOC_TYPE = (new Kotlin.Long(-2147352360, 0)).toInt();
    this.ERROR_KERNEL_FAILED_ALLOC_MEMBLOCK = (new Kotlin.Long(-2147352359, 0)).toInt();
    this.ERROR_KERNEL_INHIBITED_RESIZE_MEMBLOCK = (new Kotlin.Long(-2147352358, 0)).toInt();
    this.ERROR_KERNEL_FAILED_RESIZE_MEMBLOCK = (new Kotlin.Long(-2147352357, 0)).toInt();
    this.ERROR_KERNEL_FAILED_ALLOC_HEAPBLOCK = (new Kotlin.Long(-2147352356, 0)).toInt();
    this.ERROR_KERNEL_FAILED_ALLOC_HEAP = (new Kotlin.Long(-2147352355, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_CHUNK_ID = (new Kotlin.Long(-2147352354, 0)).toInt();
    this.ERROR_KERNEL_CANNOT_FIND_CHUNK_NAME = (new Kotlin.Long(-2147352353, 0)).toInt();
    this.ERROR_KERNEL_NO_FREE_CHUNK = (new Kotlin.Long(-2147352352, 0)).toInt();
    this.ERROR_KERNEL_MEMBLOCK_FRAGMENTED = (new Kotlin.Long(-2147352351, 0)).toInt();
    this.ERROR_KERNEL_MEMBLOCK_CANNOT_JOINT = (new Kotlin.Long(-2147352350, 0)).toInt();
    this.ERROR_KERNEL_MEMBLOCK_CANNOT_SEPARATE = (new Kotlin.Long(-2147352349, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_ALIGNMENT_SIZE = (new Kotlin.Long(-2147352348, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_DEVKIT_VER = (new Kotlin.Long(-2147352347, 0)).toInt();
    this.ERROR_KERNEL_MODULE_LINK_ERROR = (new Kotlin.Long(-2147352276, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_OBJECT_FORMAT = (new Kotlin.Long(-2147352275, 0)).toInt();
    this.ERROR_KERNEL_UNKNOWN_MODULE = (new Kotlin.Long(-2147352274, 0)).toInt();
    this.ERROR_KERNEL_UNKNOWN_MODULE_FILE = (new Kotlin.Long(-2147352273, 0)).toInt();
    this.ERROR_KERNEL_FILE_READ_ERROR = (new Kotlin.Long(-2147352272, 0)).toInt();
    this.ERROR_KERNEL_MEMORY_IN_USE = (new Kotlin.Long(-2147352271, 0)).toInt();
    this.ERROR_KERNEL_PARTITION_MISMATCH = (new Kotlin.Long(-2147352270, 0)).toInt();
    this.ERROR_KERNEL_MODULE_ALREADY_STARTED = (new Kotlin.Long(-2147352269, 0)).toInt();
    this.ERROR_KERNEL_MODULE_NOT_STARTED = (new Kotlin.Long(-2147352268, 0)).toInt();
    this.ERROR_KERNEL_MODULE_ALREADY_STOPPED = (new Kotlin.Long(-2147352267, 0)).toInt();
    this.ERROR_KERNEL_MODULE_CANNOT_STOP = (new Kotlin.Long(-2147352266, 0)).toInt();
    this.ERROR_KERNEL_MODULE_NOT_STOPPED = (new Kotlin.Long(-2147352265, 0)).toInt();
    this.ERROR_KERNEL_MODULE_CANNOT_REMOVE = (new Kotlin.Long(-2147352264, 0)).toInt();
    this.ERROR_KERNEL_EXCLUSIVE_LOAD = (new Kotlin.Long(-2147352263, 0)).toInt();
    this.ERROR_KERNEL_LIBRARY_IS_NOT_LINKED = (new Kotlin.Long(-2147352262, 0)).toInt();
    this.ERROR_KERNEL_LIBRARY_ALREADY_EXISTS = (new Kotlin.Long(-2147352261, 0)).toInt();
    this.ERROR_KERNEL_LIBRARY_NOT_FOUND = (new Kotlin.Long(-2147352260, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_LIBRARY_HEADER = (new Kotlin.Long(-2147352259, 0)).toInt();
    this.ERROR_KERNEL_LIBRARY_IN_USE = (new Kotlin.Long(-2147352258, 0)).toInt();
    this.ERROR_KERNEL_MODULE_ALREADY_STOPPING = (new Kotlin.Long(-2147352257, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_OFFSET_VALUE = (new Kotlin.Long(-2147352256, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_POSITION_CODE = (new Kotlin.Long(-2147352255, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_ACCESS_CODE = (new Kotlin.Long(-2147352254, 0)).toInt();
    this.ERROR_KERNEL_MODULE_MANAGER_BUSY = (new Kotlin.Long(-2147352253, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_FLAG = (new Kotlin.Long(-2147352252, 0)).toInt();
    this.ERROR_KERNEL_CANNOT_GET_MODULE_LIST = (new Kotlin.Long(-2147352251, 0)).toInt();
    this.ERROR_KERNEL_PROHIBIT_LOADMODULE_DEVICE = (new Kotlin.Long(-2147352250, 0)).toInt();
    this.ERROR_KERNEL_PROHIBIT_LOADEXEC_DEVICE = (new Kotlin.Long(-2147352249, 0)).toInt();
    this.ERROR_KERNEL_UNSUPPORTED_PRX_TYPE = (new Kotlin.Long(-2147352248, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_PERMISSION_CALL = (new Kotlin.Long(-2147352247, 0)).toInt();
    this.ERROR_KERNEL_CANNOT_GET_MODULE_INFO = (new Kotlin.Long(-2147352246, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_LOADEXEC_BUFFER = (new Kotlin.Long(-2147352245, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_LOADEXEC_FILENAME = (new Kotlin.Long(-2147352244, 0)).toInt();
    this.ERROR_KERNEL_NO_EXIT_CALLBACK = (new Kotlin.Long(-2147352243, 0)).toInt();
    this.ERROR_KERNEL_MEDIA_CHANGED = (new Kotlin.Long(-2147352242, 0)).toInt();
    this.ERROR_KERNEL_CANNOT_USE_BETA_VER_MODULE = (new Kotlin.Long(-2147352241, 0)).toInt();
    this.ERROR_KERNEL_NO_MEMORY = (new Kotlin.Long(-2147352176, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_ATTR = (new Kotlin.Long(-2147352175, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_THREAD_ENTRY_ADDR = (new Kotlin.Long(-2147352174, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_PRIORITY = (new Kotlin.Long(-2147352173, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_STACK_SIZE = (new Kotlin.Long(-2147352172, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_MODE = (new Kotlin.Long(-2147352171, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_MASK = (new Kotlin.Long(-2147352170, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_THREAD = (new Kotlin.Long(-2147352169, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_THREAD = (new Kotlin.Long(-2147352168, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_SEMAPHORE = (new Kotlin.Long(-2147352167, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_EVENT_FLAG = (new Kotlin.Long(-2147352166, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_MESSAGE_BOX = (new Kotlin.Long(-2147352165, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_VPOOL = (new Kotlin.Long(-2147352164, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_FPOOL = (new Kotlin.Long(-2147352163, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_MESSAGE_PIPE = (new Kotlin.Long(-2147352162, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_ALARM = (new Kotlin.Long(-2147352161, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_THREAD_EVENT_HANDLER = (new Kotlin.Long(-2147352160, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_CALLBACK = (new Kotlin.Long(-2147352159, 0)).toInt();
    this.ERROR_KERNEL_THREAD_ALREADY_DORMANT = (new Kotlin.Long(-2147352158, 0)).toInt();
    this.ERROR_KERNEL_THREAD_ALREADY_SUSPEND = (new Kotlin.Long(-2147352157, 0)).toInt();
    this.ERROR_KERNEL_THREAD_IS_NOT_DORMANT = (new Kotlin.Long(-2147352156, 0)).toInt();
    this.ERROR_KERNEL_THREAD_IS_NOT_SUSPEND = (new Kotlin.Long(-2147352155, 0)).toInt();
    this.ERROR_KERNEL_THREAD_IS_NOT_WAIT = (new Kotlin.Long(-2147352154, 0)).toInt();
    this.ERROR_KERNEL_WAIT_CAN_NOT_WAIT = (new Kotlin.Long(-2147352153, 0)).toInt();
    this.ERROR_KERNEL_WAIT_TIMEOUT = (new Kotlin.Long(-2147352152, 0)).toInt();
    this.ERROR_KERNEL_WAIT_CANCELLED = (new Kotlin.Long(-2147352151, 0)).toInt();
    this.ERROR_KERNEL_WAIT_STATUS_RELEASED = (new Kotlin.Long(-2147352150, 0)).toInt();
    this.ERROR_KERNEL_WAIT_STATUS_RELEASED_CALLBACK = (new Kotlin.Long(-2147352149, 0)).toInt();
    this.ERROR_KERNEL_THREAD_IS_TERMINATED = (new Kotlin.Long(-2147352148, 0)).toInt();
    this.ERROR_KERNEL_SEMA_ZERO = (new Kotlin.Long(-2147352147, 0)).toInt();
    this.ERROR_KERNEL_SEMA_OVERFLOW = (new Kotlin.Long(-2147352146, 0)).toInt();
    this.ERROR_KERNEL_EVENT_FLAG_POLL_FAILED = (new Kotlin.Long(-2147352145, 0)).toInt();
    this.ERROR_KERNEL_EVENT_FLAG_NO_MULTI_PERM = (new Kotlin.Long(-2147352144, 0)).toInt();
    this.ERROR_KERNEL_EVENT_FLAG_ILLEGAL_WAIT_PATTERN = (new Kotlin.Long(-2147352143, 0)).toInt();
    this.ERROR_KERNEL_MESSAGEBOX_NO_MESSAGE = (new Kotlin.Long(-2147352142, 0)).toInt();
    this.ERROR_KERNEL_MESSAGE_PIPE_FULL = (new Kotlin.Long(-2147352141, 0)).toInt();
    this.ERROR_KERNEL_MESSAGE_PIPE_EMPTY = (new Kotlin.Long(-2147352140, 0)).toInt();
    this.ERROR_KERNEL_WAIT_DELETE = (new Kotlin.Long(-2147352139, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_MEMBLOCK = (new Kotlin.Long(-2147352138, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_MEMSIZE = (new Kotlin.Long(-2147352137, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_SCRATCHPAD_ADDR = (new Kotlin.Long(-2147352136, 0)).toInt();
    this.ERROR_KERNEL_SCRATCHPAD_IN_USE = (new Kotlin.Long(-2147352135, 0)).toInt();
    this.ERROR_KERNEL_SCRATCHPAD_NOT_IN_USE = (new Kotlin.Long(-2147352134, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_TYPE = (new Kotlin.Long(-2147352133, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_SIZE = (new Kotlin.Long(-2147352132, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_COUNT = (new Kotlin.Long(-2147352131, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_VTIMER = (new Kotlin.Long(-2147352130, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_VTIMER = (new Kotlin.Long(-2147352129, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_KTLS = (new Kotlin.Long(-2147352128, 0)).toInt();
    this.ERROR_KERNEL_KTLS_IS_FULL = (new Kotlin.Long(-2147352127, 0)).toInt();
    this.ERROR_KERNEL_KTLS_IS_BUSY = (new Kotlin.Long(-2147352126, 0)).toInt();
    this.ERROR_KERNEL_MUTEX_NOT_FOUND = (new Kotlin.Long(-2147352125, 0)).toInt();
    this.ERROR_KERNEL_MUTEX_LOCKED = (new Kotlin.Long(-2147352124, 0)).toInt();
    this.ERROR_KERNEL_MUTEX_UNLOCKED = (new Kotlin.Long(-2147352123, 0)).toInt();
    this.ERROR_KERNEL_MUTEX_LOCK_OVERFLOW = (new Kotlin.Long(-2147352122, 0)).toInt();
    this.ERROR_KERNEL_MUTEX_UNLOCK_UNDERFLOW = (new Kotlin.Long(-2147352121, 0)).toInt();
    this.ERROR_KERNEL_MUTEX_RECURSIVE_NOT_ALLOWED = (new Kotlin.Long(-2147352120, 0)).toInt();
    this.ERROR_KERNEL_MESSAGEBOX_DUPLICATE_MESSAGE = (new Kotlin.Long(-2147352119, 0)).toInt();
    this.ERROR_KERNEL_LWMUTEX_NOT_FOUND = (new Kotlin.Long(-2147352118, 0)).toInt();
    this.ERROR_KERNEL_LWMUTEX_LOCKED = (new Kotlin.Long(-2147352117, 0)).toInt();
    this.ERROR_KERNEL_LWMUTEX_UNLOCKED = (new Kotlin.Long(-2147352116, 0)).toInt();
    this.ERROR_KERNEL_LWMUTEX_LOCK_OVERFLOW = (new Kotlin.Long(-2147352115, 0)).toInt();
    this.ERROR_KERNEL_LWMUTEX_UNLOCK_UNDERFLOW = (new Kotlin.Long(-2147352114, 0)).toInt();
    this.ERROR_KERNEL_LWMUTEX_RECURSIVE_NOT_ALLOWED = (new Kotlin.Long(-2147352113, 0)).toInt();
    this.ERROR_KERNEL_POWER_CANNOT_CANCEL = (new Kotlin.Long(-2147351967, 0)).toInt();
    this.ERROR_KERNEL_TOO_MANY_OPEN_FILES = (new Kotlin.Long(-2147351776, 0)).toInt();
    this.ERROR_KERNEL_NO_SUCH_DEVICE = (new Kotlin.Long(-2147351775, 0)).toInt();
    this.ERROR_KERNEL_BAD_FILE_DESCRIPTOR = (new Kotlin.Long(-2147351773, 0)).toInt();
    this.ERROR_KERNEL_UNSUPPORTED_OPERATION = (new Kotlin.Long(-2147351771, 0)).toInt();
    this.ERROR_KERNEL_NOCWD = (new Kotlin.Long(-2147351764, 0)).toInt();
    this.ERROR_KERNEL_FILENAME_TOO_LONG = (new Kotlin.Long(-2147351763, 0)).toInt();
    this.ERROR_KERNEL_ASYNC_BUSY = (new Kotlin.Long(-2147351767, 0)).toInt();
    this.ERROR_KERNEL_NO_ASYNC_OP = (new Kotlin.Long(-2147351766, 0)).toInt();
    this.ERROR_KERNEL_NOT_CACHE_ALIGNED = (new Kotlin.Long(-2147351476, 0)).toInt();
    this.ERROR_KERNEL_MAX_ERROR = (new Kotlin.Long(-2147351475, 0)).toInt();
    this.ERROR_UTILITY_INVALID_STATUS = (new Kotlin.Long(-2146369535, 0)).toInt();
    this.ERROR_UTILITY_INVALID_PARAM_ADDR = (new Kotlin.Long(-2146369534, 0)).toInt();
    this.ERROR_UTILITY_IS_UNKNOWN = (new Kotlin.Long(-2146369533, 0)).toInt();
    this.ERROR_UTILITY_INVALID_PARAM_SIZE = (new Kotlin.Long(-2146369532, 0)).toInt();
    this.ERROR_UTILITY_WRONG_TYPE = (new Kotlin.Long(-2146369531, 0)).toInt();
    this.ERROR_UTILITY_MODULE_NOT_FOUND = (new Kotlin.Long(-2146369530, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_NO_MEMSTICK = (new Kotlin.Long(-2146368767, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_MEMSTICK_REMOVED = (new Kotlin.Long(-2146368766, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_ACCESS_ERROR = (new Kotlin.Long(-2146368763, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_DATA_BROKEN = (new Kotlin.Long(-2146368762, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_NO_DATA = (new Kotlin.Long(-2146368761, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_BAD_PARAMS = (new Kotlin.Long(-2146368760, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_NO_UMD = (new Kotlin.Long(-2146368759, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_INTERNAL_ERROR = (new Kotlin.Long(-2146368759, 0)).toInt();
    this.ERROR_SAVEDATA_RW_NO_MEMSTICK = (new Kotlin.Long(-2146368735, 0)).toInt();
    this.ERROR_SAVEDATA_RW_MEMSTICK_REMOVED = (new Kotlin.Long(-2146368734, 0)).toInt();
    this.ERROR_SAVEDATA_RW_MEMSTICK_FULL = (new Kotlin.Long(-2146368733, 0)).toInt();
    this.ERROR_SAVEDATA_RW_MEMSTICK_PROTECTED = (new Kotlin.Long(-2146368732, 0)).toInt();
    this.ERROR_SAVEDATA_RW_ACCESS_ERROR = (new Kotlin.Long(-2146368731, 0)).toInt();
    this.ERROR_SAVEDATA_RW_DATA_BROKEN = (new Kotlin.Long(-2146368730, 0)).toInt();
    this.ERROR_SAVEDATA_RW_NO_DATA = (new Kotlin.Long(-2146368729, 0)).toInt();
    this.ERROR_SAVEDATA_RW_BAD_PARAMS = (new Kotlin.Long(-2146368728, 0)).toInt();
    this.ERROR_SAVEDATA_RW_FILE_NOT_FOUND = (new Kotlin.Long(-2146368727, 0)).toInt();
    this.ERROR_SAVEDATA_RW_CAN_NOT_SUSPEND = (new Kotlin.Long(-2146368726, 0)).toInt();
    this.ERROR_SAVEDATA_RW_INTERNAL_ERROR = (new Kotlin.Long(-2146368725, 0)).toInt();
    this.ERROR_SAVEDATA_RW_BAD_STATUS = (new Kotlin.Long(-2146368724, 0)).toInt();
    this.ERROR_SAVEDATA_RW_SECURE_FILE_FULL = (new Kotlin.Long(-2146368723, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_NO_MEMSTICK = (new Kotlin.Long(-2146368703, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_MEMSTICK_REMOVED = (new Kotlin.Long(-2146368702, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_MEMSTICK_PROTECTED = (new Kotlin.Long(-2146368700, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_ACCESS_ERROR = (new Kotlin.Long(-2146368699, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_DATA_BROKEN = (new Kotlin.Long(-2146368698, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_NO_DATA = (new Kotlin.Long(-2146368697, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_BAD_PARAMS = (new Kotlin.Long(-2146368696, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_INTERNAL_ERROR = (new Kotlin.Long(-2146368693, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_NO_MEMSTICK = (new Kotlin.Long(-2146368639, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_MEMSTICK_REMOVED = (new Kotlin.Long(-2146368638, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_NO_SPACE = (new Kotlin.Long(-2146368637, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_MEMSTICK_PROTECTED = (new Kotlin.Long(-2146368636, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_ACCESS_ERROR = (new Kotlin.Long(-2146368635, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_BAD_PARAMS = (new Kotlin.Long(-2146368632, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_NO_UMD = (new Kotlin.Long(-2146368631, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_WRONG_UMD = (new Kotlin.Long(-2146368630, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_INTERNAL_ERROR = (new Kotlin.Long(-2146368629, 0)).toInt();
    this.ERROR_SAVEDATA_SIZES_NO_MEMSTICK = (new Kotlin.Long(-2146368575, 0)).toInt();
    this.ERROR_SAVEDATA_SIZES_MEMSTICK_REMOVED = (new Kotlin.Long(-2146368574, 0)).toInt();
    this.ERROR_SAVEDATA_SIZES_ACCESS_ERROR = (new Kotlin.Long(-2146368571, 0)).toInt();
    this.ERROR_SAVEDATA_SIZES_DATA_BROKEN = (new Kotlin.Long(-2146368570, 0)).toInt();
    this.ERROR_SAVEDATA_SIZES_NO_DATA = (new Kotlin.Long(-2146368569, 0)).toInt();
    this.ERROR_SAVEDATA_SIZES_BAD_PARAMS = (new Kotlin.Long(-2146368568, 0)).toInt();
    this.ERROR_SAVEDATA_SIZES_INTERNAL_ERROR = (new Kotlin.Long(-2146368565, 0)).toInt();
    this.ERROR_NETPARAM_BAD_NETCONF = (new Kotlin.Long(-2146367999, 0)).toInt();
    this.ERROR_NETPARAM_BAD_PARAM = (new Kotlin.Long(-2146367996, 0)).toInt();
    this.ERROR_NET_MODULE_BAD_ID = (new Kotlin.Long(-2146367487, 0)).toInt();
    this.ERROR_NET_MODULE_ALREADY_LOADED = (new Kotlin.Long(-2146367486, 0)).toInt();
    this.ERROR_NET_MODULE_NOT_LOADED = (new Kotlin.Long(-2146367485, 0)).toInt();
    this.ERROR_AV_MODULE_BAD_ID = (new Kotlin.Long(-2146367231, 0)).toInt();
    this.ERROR_AV_MODULE_ALREADY_LOADED = (new Kotlin.Long(-2146367230, 0)).toInt();
    this.ERROR_AV_MODULE_NOT_LOADED = (new Kotlin.Long(-2146367229, 0)).toInt();
    this.ERROR_MODULE_BAD_ID = (new Kotlin.Long(-2146365183, 0)).toInt();
    this.ERROR_MODULE_ALREADY_LOADED = (new Kotlin.Long(-2146365182, 0)).toInt();
    this.ERROR_MODULE_NOT_LOADED = (new Kotlin.Long(-2146365181, 0)).toInt();
    this.ERROR_SCREENSHOT_CONT_MODE_NOT_INIT = (new Kotlin.Long(-2146364887, 0)).toInt();
    this.ERROR_UMD_NOT_READY = (new Kotlin.Long(-2145320959, 0)).toInt();
    this.ERROR_UMD_LBA_OUT_OF_BOUNDS = (new Kotlin.Long(-2145320958, 0)).toInt();
    this.ERROR_UMD_NO_DISC = (new Kotlin.Long(-2145320957, 0)).toInt();
    this.ERROR_MEMSTICK_DEVCTL_BAD_PARAMS = (new Kotlin.Long(-2145255295, 0)).toInt();
    this.ERROR_MEMSTICK_DEVCTL_TOO_MANY_CALLBACKS = (new Kotlin.Long(-2145255294, 0)).toInt();
    this.ERROR_AUDIO_CHANNEL_NOT_INIT = (new Kotlin.Long(-2144993279, 0)).toInt();
    this.ERROR_AUDIO_CHANNEL_BUSY = (new Kotlin.Long(-2144993278, 0)).toInt();
    this.ERROR_AUDIO_INVALID_CHANNEL = (new Kotlin.Long(-2144993277, 0)).toInt();
    this.ERROR_AUDIO_PRIV_REQUIRED = (new Kotlin.Long(-2144993276, 0)).toInt();
    this.ERROR_AUDIO_NO_CHANNELS_AVAILABLE = (new Kotlin.Long(-2144993275, 0)).toInt();
    this.ERROR_AUDIO_OUTPUT_SAMPLE_DATA_SIZE_NOT_ALIGNED = (new Kotlin.Long(-2144993274, 0)).toInt();
    this.ERROR_AUDIO_INVALID_FORMAT = (new Kotlin.Long(-2144993273, 0)).toInt();
    this.ERROR_AUDIO_CHANNEL_NOT_RESERVED = (new Kotlin.Long(-2144993272, 0)).toInt();
    this.ERROR_AUDIO_NOT_OUTPUT = (new Kotlin.Long(-2144993271, 0)).toInt();
    this.ERROR_POWER_VMEM_IN_USE = (new Kotlin.Long(-2144665088, 0)).toInt();
    this.ERROR_NET_RESOLVER_BAD_ID = (new Kotlin.Long(-2143222776, 0)).toInt();
    this.ERROR_NET_RESOLVER_ALREADY_STOPPED = (new Kotlin.Long(-2143222774, 0)).toInt();
    this.ERROR_NET_RESOLVER_INVALID_HOST = (new Kotlin.Long(-2143222764, 0)).toInt();
    this.ERROR_WLAN_BAD_PARAMS = (new Kotlin.Long(-2143220461, 0)).toInt();
    this.ERROR_HTTP_NOT_INIT = (new Kotlin.Long(-2143088639, 0)).toInt();
    this.ERROR_HTTP_ALREADY_INIT = (new Kotlin.Long(-2143088608, 0)).toInt();
    this.ERROR_HTTP_NO_MEMORY = (new Kotlin.Long(-2143088521, 0)).toInt();
    this.ERROR_HTTP_SYSTEM_COOKIE_NOT_LOADED = (new Kotlin.Long(-2143088520, 0)).toInt();
    this.ERROR_HTTP_INVALID_PARAMETER = (new Kotlin.Long(-2143088130, 0)).toInt();
    this.ERROR_SSL_NOT_INIT = (new Kotlin.Long(-2143072255, 0)).toInt();
    this.ERROR_SSL_ALREADY_INIT = (new Kotlin.Long(-2143072224, 0)).toInt();
    this.ERROR_SSL_OUT_OF_MEMORY = (new Kotlin.Long(-2143072222, 0)).toInt();
    this.ERROR_HTTPS_CERT_ERROR = (new Kotlin.Long(-2143072160, 0)).toInt();
    this.ERROR_HTTPS_HANDSHAKE_ERROR = (new Kotlin.Long(-2143072159, 0)).toInt();
    this.ERROR_HTTPS_IO_ERROR = (new Kotlin.Long(-2143072158, 0)).toInt();
    this.ERROR_HTTPS_INTERNAL_ERROR = (new Kotlin.Long(-2143072157, 0)).toInt();
    this.ERROR_HTTPS_PROXY_ERROR = (new Kotlin.Long(-2143072156, 0)).toInt();
    this.ERROR_SSL_INVALID_PARAMETER = (new Kotlin.Long(-2143071746, 0)).toInt();
    this.ERROR_WAVE_NOT_INIT = (new Kotlin.Long(-2143027199, 0)).toInt();
    this.ERROR_WAVE_FAILED_EXIT = (new Kotlin.Long(-2143027198, 0)).toInt();
    this.ERROR_WAVE_BAD_VOL = (new Kotlin.Long(-2143027190, 0)).toInt();
    this.ERROR_WAVE_INVALID_CHANNEL = (new Kotlin.Long(-2143027184, 0)).toInt();
    this.ERROR_WAVE_INVALID_SAMPLE_COUNT = (new Kotlin.Long(-2143027183, 0)).toInt();
    this.ERROR_FONT_INVALID_LIBID = (new Kotlin.Long(-2142896126, 0)).toInt();
    this.ERROR_FONT_INVALID_PARAMETER = (new Kotlin.Long(-2142896125, 0)).toInt();
    this.ERROR_FONT_TOO_MANY_OPEN_FONTS = (new Kotlin.Long(-2142896119, 0)).toInt();
    this.ERROR_MPEG_BAD_VERSION = (new Kotlin.Long(-2141126654, 0)).toInt();
    this.ERROR_MPEG_NO_MEMORY = (new Kotlin.Long(-2141126622, 0)).toInt();
    this.ERROR_MPEG_INVALID_ADDR = (new Kotlin.Long(-2141126397, 0)).toInt();
    this.ERROR_MPEG_INVALID_VALUE = (new Kotlin.Long(-2141126146, 0)).toInt();
    this.ERROR_PSMF_NOT_INITIALIZED = (new Kotlin.Long(-2141106175, 0)).toInt();
    this.ERROR_PSMF_BAD_VERSION = (new Kotlin.Long(-2141106174, 0)).toInt();
    this.ERROR_PSMF_NOT_FOUND = (new Kotlin.Long(-2141106139, 0)).toInt();
    this.ERROR_PSMF_INVALID_ID = (new Kotlin.Long(-2141105920, 0)).toInt();
    this.ERROR_PSMF_INVALID_VALUE = (new Kotlin.Long(-2141105666, 0)).toInt();
    this.ERROR_PSMF_INVALID_TIMESTAMP = (new Kotlin.Long(-2141104896, 0)).toInt();
    this.ERROR_PSMF_INVALID_PSMF = (new Kotlin.Long(-2141104895, 0)).toInt();
    this.ERROR_PSMFPLAYER_NOT_INITIALIZED = (new Kotlin.Long(-2141102079, 0)).toInt();
    this.ERROR_PSMFPLAYER_NO_MORE_DATA = (new Kotlin.Long(-2141102068, 0)).toInt();
    this.ERROR_MPEG_NO_DATA = (new Kotlin.Long(-2141093887, 0)).toInt();
    this.ERROR_AVC_VIDEO_FATAL = (new Kotlin.Long(-2141028350, 0)).toInt();
    this.ERROR_ATRAC_NO_ID = (new Kotlin.Long(-2140995581, 0)).toInt();
    this.ERROR_ATRAC_INVALID_CODEC = (new Kotlin.Long(-2140995580, 0)).toInt();
    this.ERROR_ATRAC_BAD_ID = (new Kotlin.Long(-2140995579, 0)).toInt();
    this.ERROR_ATRAC_ALL_DATA_LOADED = (new Kotlin.Long(-2140995575, 0)).toInt();
    this.ERROR_ATRAC_NO_DATA = (new Kotlin.Long(-2140995568, 0)).toInt();
    this.ERROR_ATRAC_SECOND_BUFFER_NEEDED = (new Kotlin.Long(-2140995566, 0)).toInt();
    this.ERROR_ATRAC_SECOND_BUFFER_NOT_NEEDED = (new Kotlin.Long(-2140995550, 0)).toInt();
    this.ERROR_ATRAC_BUFFER_IS_EMPTY = (new Kotlin.Long(-2140995549, 0)).toInt();
    this.ERROR_ATRAC_ALL_DATA_DECODED = (new Kotlin.Long(-2140995548, 0)).toInt();
    this.ERROR_CODEC_AUDIO_FATAL = (new Kotlin.Long(-2139160324, 0)).toInt();
    this.FATAL_UMD_UNKNOWN_MEDIUM = (new Kotlin.Long(-1071579132, 0)).toInt();
    this.FATAL_UMD_HARDWARE_FAILURE = (new Kotlin.Long(-1071579131, 0)).toInt();
    this.ERROR_AUDIO_INVALID_FREQUENCY = (new Kotlin.Long(-2144993270, 0)).toInt();
    this.ERROR_AUDIO_INVALID_VOLUME = (new Kotlin.Long(-2144993269, 0)).toInt();
    this.ERROR_AUDIO_CHANNEL_ALREADY_RESERVED = (new Kotlin.Long(-2144960510, 0)).toInt();
    this.PSP_AUDIO_ERROR_SRC_FORMAT_4 = (new Kotlin.Long(-2147483645, 0)).toInt();
    this.ATRAC_ERROR_API_FAIL = (new Kotlin.Long(-2140995582, 0)).toInt();
    this.ATRAC_ERROR_NO_ATRACID = (new Kotlin.Long(-2140995581, 0)).toInt();
    this.ATRAC_ERROR_INVALID_CODECTYPE = (new Kotlin.Long(-2140995580, 0)).toInt();
    this.ATRAC_ERROR_BAD_ATRACID = (new Kotlin.Long(-2140995579, 0)).toInt();
    this.ATRAC_ERROR_ALL_DATA_LOADED = (new Kotlin.Long(-2140995575, 0)).toInt();
    this.ATRAC_ERROR_NO_DATA = (new Kotlin.Long(-2140995568, 0)).toInt();
    this.ATRAC_ERROR_SECOND_BUFFER_NEEDED = (new Kotlin.Long(-2140995566, 0)).toInt();
    this.ATRAC_ERROR_INCORRECT_READ_SIZE = (new Kotlin.Long(-2140995565, 0)).toInt();
    this.ATRAC_ERROR_ADD_DATA_IS_TOO_BIG = (new Kotlin.Long(-2140995560, 0)).toInt();
    this.ATRAC_ERROR_UNSET_PARAM = (new Kotlin.Long(-2140995551, 0)).toInt();
    this.ATRAC_ERROR_SECOND_BUFFER_NOT_NEEDED = (new Kotlin.Long(-2140995550, 0)).toInt();
    this.ATRAC_ERROR_BUFFER_IS_EMPTY = (new Kotlin.Long(-2140995549, 0)).toInt();
    this.ATRAC_ERROR_ALL_DATA_DECODED = (new Kotlin.Long(-2140995548, 0)).toInt();
    this.PSP_SYSTEMPARAM_RETVAL = (new Kotlin.Long(-2146369277, 0)).toInt();
    this.ERROR_SAS_INVALID_VOICE = (new Kotlin.Long(-2143158256, 0)).toInt();
    this.ERROR_SAS_INVALID_ADSR_CURVE_MODE = (new Kotlin.Long(-2143158253, 0)).toInt();
    this.ERROR_SAS_INVALID_PARAMETER = (new Kotlin.Long(-2143158252, 0)).toInt();
    this.ERROR_SAS_INVALID_LOOP_POS = (new Kotlin.Long(-2143158251, 0)).toInt();
    this.ERROR_SAS_VOICE_PAUSED = (new Kotlin.Long(-2143158250, 0)).toInt();
    this.ERROR_SAS_BUSY = (new Kotlin.Long(-2143158224, 0)).toInt();
    this.ERROR_SAS_NOT_INIT = (new Kotlin.Long(-2143158016, 0)).toInt();
    this.ERROR_SAS_INVALID_GRAIN = (new Kotlin.Long(-2143158271, 0)).toInt();
    this.ERROR_SAS_INVALID_MAX_VOICES = (new Kotlin.Long(-2143158270, 0)).toInt();
    this.ERROR_SAS_INVALID_OUTPUT_MODE = (new Kotlin.Long(-2143158269, 0)).toInt();
    this.ERROR_SAS_INVALID_SAMPLE_RATE = (new Kotlin.Long(-2143158268, 0)).toInt();
    this.ERROR_SAS_INVALID_ADDRESS = (new Kotlin.Long(-2143158267, 0)).toInt();
    this.ERROR_SAS_INVALID_VOICE_INDEX = (new Kotlin.Long(-2143158256, 0)).toInt();
    this.ERROR_SAS_INVALID_NOISE_CLOCK = (new Kotlin.Long(-2143158255, 0)).toInt();
    this.ERROR_SAS_INVALID_PITCH_VAL = (new Kotlin.Long(-2143158254, 0)).toInt();
    this.ERROR_SAS_INVALID_ADPCM_SIZE = (new Kotlin.Long(-2143158252, 0)).toInt();
    this.ERROR_SAS_INVALID_LOOP_MODE = (new Kotlin.Long(-2143158251, 0)).toInt();
    this.ERROR_SAS_INVALID_VOLUME_VAL = (new Kotlin.Long(-2143158248, 0)).toInt();
    this.ERROR_SAS_INVALID_ADSR_VAL = (new Kotlin.Long(-2143158247, 0)).toInt();
    this.ERROR_SAS_INVALID_SIZE = (new Kotlin.Long(-2143158246, 0)).toInt();
    this.ERROR_SAS_INVALID_FX_TYPE = (new Kotlin.Long(-2143158240, 0)).toInt();
    this.ERROR_SAS_INVALID_FX_FEEDBACK = (new Kotlin.Long(-2143158239, 0)).toInt();
    this.ERROR_SAS_INVALID_FX_DELAY = (new Kotlin.Long(-2143158238, 0)).toInt();
    this.ERROR_SAS_INVALID_FX_VOLUME_VAL = (new Kotlin.Long(-2143158237, 0)).toInt();
    this.ERROR_SAS_ALREADY_INIT = (new Kotlin.Long(-2143158015, 0)).toInt();
    this.PSP_POWER_ERROR_TAKEN_SLOT = (new Kotlin.Long(-2147483616, 0)).toInt();
    this.PSP_POWER_ERROR_SLOTS_FULL = (new Kotlin.Long(-2147483614, 0)).toInt();
    this.PSP_POWER_ERROR_PRIVATE_SLOT = (new Kotlin.Long(-2147483613, 0)).toInt();
    this.PSP_POWER_ERROR_EMPTY_SLOT = (new Kotlin.Long(-2147483611, 0)).toInt();
    this.PSP_POWER_ERROR_INVALID_CB = (new Kotlin.Long(-2147483392, 0)).toInt();
    this.PSP_POWER_ERROR_INVALID_SLOT = (new Kotlin.Long(-2147483390, 0)).toInt();
  }
  SceKernelErrors.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'SceKernelErrors',
    interfaces: []
  };
  var SceKernelErrors_instance = null;
  function SceKernelErrors_getInstance() {
    if (SceKernelErrors_instance === null) {
      new SceKernelErrors();
    }
    return SceKernelErrors_instance;
  }
  function CallbackManager(emulator) {
    Manager.call(this, 'Callback', emulator);
  }
  CallbackManager.prototype.create_6bdwcc$ = function (name, func, arg) {
    return new PspCallback(this, this.allocId_8be2vx$(), name, func, arg);
  };
  CallbackManager.prototype.queueFunction1_vux9f0$ = function (funcPC, funcARG) {
  };
  CallbackManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CallbackManager',
    interfaces: [Manager]
  };
  function PspCallback(callbackManager, id, name, func, arg) {
    Resource.call(this, callbackManager, id, name);
    this.callbackManager = callbackManager;
    this.func = func;
    this.arg = arg;
  }
  PspCallback.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspCallback',
    interfaces: [Resource]
  };
  function DeviceManager(emulator) {
    this.emulator = emulator;
    this.dummy = MemoryVfs();
    this.root = MountableVfsSync(DeviceManager$root$lambda(this));
    var tmp$;
    this.mountable = Kotlin.isType(tmp$ = this.root.vfs, MountableSync) ? tmp$ : throwCCE();
  }
  DeviceManager.prototype.mount_hem4eq$ = function (name, vfs) {
    this.mountable.mount_hem4eq$(name, vfs);
  };
  function DeviceManager$root$lambda(this$DeviceManager) {
    return function ($receiver) {
      $receiver.mount_hem4eq$('fatms0:', this$DeviceManager.dummy);
      $receiver.mount_hem4eq$('ms0:', this$DeviceManager.dummy);
      $receiver.mount_hem4eq$('mscmhc0:', this$DeviceManager.dummy);
      $receiver.mount_hem4eq$('host0:', this$DeviceManager.dummy);
      $receiver.mount_hem4eq$('flash0:', this$DeviceManager.dummy);
      $receiver.mount_hem4eq$('emulator:', this$DeviceManager.dummy);
      $receiver.mount_hem4eq$('kemulator:', this$DeviceManager.dummy);
      $receiver.mount_hem4eq$('disc0:', this$DeviceManager.dummy);
      $receiver.mount_hem4eq$('umd0:', this$DeviceManager.dummy);
      return Unit;
    };
  }
  DeviceManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DeviceManager',
    interfaces: []
  };
  function FileManager(emulator) {
    this.emulator = emulator;
    this.currentDirectory = 'umd0:/';
    this.fileDescriptors = new ResourceList('FileDescriptor', FileManager$fileDescriptors$lambda);
  }
  Object.defineProperty(FileManager.prototype, 'deviceManager', {
    get: function () {
      return this.emulator.deviceManager;
    }
  });
  FileManager.prototype.resolvePath_61zpoe$ = function (path) {
    if (contains(path, 58)) {
      return path;
    }
     else {
      if (startsWith(path, 47)) {
        return first(split(this.currentDirectory, Kotlin.charArrayOf(58))) + ':' + path;
      }
       else {
        return vfs.VfsUtil.combine_puj7f4$(this.currentDirectory, path);
      }
    }
  };
  FileManager.prototype.resolve_61zpoe$ = function (path) {
    var resolvedPath = this.resolvePath_61zpoe$(path);
    return this.deviceManager.root.get_61zpoe$(resolvedPath);
  };
  function FileManager$fileDescriptors$lambda(it) {
    return new FileDescriptor(it);
  }
  FileManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FileManager',
    interfaces: []
  };
  function FileDescriptor(id) {
    this.id_ocopab$_0 = id;
    this.file_xftuwy$_0 = this.file_xftuwy$_0;
    this.stream_clsh1a$_0 = this.stream_clsh1a$_0;
  }
  Object.defineProperty(FileDescriptor.prototype, 'id', {
    get: function () {
      return this.id_ocopab$_0;
    }
  });
  Object.defineProperty(FileDescriptor.prototype, 'file', {
    get: function () {
      if (this.file_xftuwy$_0 == null)
        return throwUPAE('file');
      return this.file_xftuwy$_0;
    },
    set: function (file) {
      this.file_xftuwy$_0 = file;
    }
  });
  Object.defineProperty(FileDescriptor.prototype, 'stream', {
    get: function () {
      if (this.stream_clsh1a$_0 == null)
        return throwUPAE('stream');
      return this.stream_clsh1a$_0;
    },
    set: function (stream) {
      this.stream_clsh1a$_0 = stream;
    }
  });
  FileDescriptor.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FileDescriptor',
    interfaces: [ResourceItem]
  };
  function Manager(name, emulator) {
    this.name = name;
    this.emulator_k3sv7h$_0 = emulator;
    this.lastId_8be2vx$ = 0;
    this.freeIds_8be2vx$ = Pool_init(void 0, Manager$freeIds$lambda(this));
    this.resourcesById_8be2vx$ = LinkedHashMap_init();
  }
  Object.defineProperty(Manager.prototype, 'emulator', {
    get: function () {
      return this.emulator_k3sv7h$_0;
    }
  });
  Object.defineProperty(Manager.prototype, 'resourcesCount', {
    get: function () {
      return this.resourcesById_8be2vx$.size;
    }
  });
  Manager.prototype.allocId_8be2vx$ = function () {
    return this.freeIds_8be2vx$.alloc();
  };
  Manager.prototype.tryGetByName_61zpoe$ = function (name) {
    var $receiver = this.resourcesById_8be2vx$.values;
    var firstOrNull$result;
    firstOrNull$break: do {
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (equals(element.name, name)) {
          firstOrNull$result = element;
          break firstOrNull$break;
        }
      }
      firstOrNull$result = null;
    }
     while (false);
    return firstOrNull$result;
  };
  Manager.prototype.getById_za3lpa$ = function (id) {
    var tmp$;
    return (tmp$ = this.resourcesById_8be2vx$.get_11rb$(id)) != null ? tmp$ : invalidOp("Can't find " + this.name + ' ' + id);
  };
  function Manager$freeIds$lambda(this$Manager) {
    return function () {
      var tmp$;
      return tmp$ = this$Manager.lastId_8be2vx$, this$Manager.lastId_8be2vx$ = tmp$ + 1 | 0, tmp$;
    };
  }
  Manager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Manager',
    interfaces: [WithEmulator]
  };
  function Resource(manager, id, name) {
    this.manager = manager;
    this.id = id;
    this.name = name;
    var tmp$;
    var $receiver = Kotlin.isType(tmp$ = this.manager.resourcesById_8be2vx$, LinkedHashMap) ? tmp$ : throwCCE();
    var key = this.id;
    $receiver.put_xwzc9p$(key, this);
  }
  Object.defineProperty(Resource.prototype, 'emulator', {
    get: function () {
      return this.manager.emulator;
    }
  });
  Resource.prototype.free = function () {
    this.manager.freeIds_8be2vx$.free_11rb$(this.id);
    this.manager.resourcesById_8be2vx$.remove_11rb$(this.id);
  };
  Resource.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Resource',
    interfaces: [WithEmulator]
  };
  function MemoryManager(emulator) {
    this.emulator = emulator;
    this.memoryPartitionsUid = LinkedHashMap_init();
    var tmp$ = this.memoryPartitionsUid;
    var tmp$_0 = MemoryPartitions$Companion_getInstance().Kernel0;
    var name = 'Kernel Partition 1';
    var low = new Kotlin.Long(-2013265920, 0);
    var high = new Kotlin.Long(-2010120192, 0);
    var value = new MemoryPartition(name, numberToDouble(low), numberToDouble(high), false, null);
    tmp$.put_xwzc9p$(tmp$_0, value);
    var tmp$_1 = this.memoryPartitionsUid;
    var tmp$_2 = MemoryPartitions$Companion_getInstance().User;
    var name_0 = 'User Partition';
    var high_0 = 142606336 + (1048576 * 24 | 0) | 0;
    var value_0 = new MemoryPartition(name_0, numberToDouble(142606336), numberToDouble(high_0), false, null);
    tmp$_1.put_xwzc9p$(tmp$_2, value_0);
    var tmp$_3 = this.memoryPartitionsUid;
    var tmp$_4 = MemoryPartitions$Companion_getInstance().UserStacks;
    var name_1 = 'User Stacks Partition';
    var high_1 = 142606336 + (1048576 * 24 | 0) | 0;
    var value_1 = new MemoryPartition(name_1, numberToDouble(142606336), numberToDouble(high_1), false, null);
    tmp$_3.put_xwzc9p$(tmp$_4, value_1);
    var tmp$_5 = this.memoryPartitionsUid;
    var tmp$_6 = MemoryPartitions$Companion_getInstance().VolatilePartition;
    var value_2 = new MemoryPartition('Volatile Partition', numberToDouble(138412032), numberToDouble(142606336), false, null);
    tmp$_5.put_xwzc9p$(tmp$_6, value_2);
  }
  Object.defineProperty(MemoryManager.prototype, 'kernelPartition', {
    get: function () {
      return ensureNotNull(this.memoryPartitionsUid.get_11rb$(MemoryPartitions$Companion_getInstance().Kernel0));
    }
  });
  Object.defineProperty(MemoryManager.prototype, 'userPartition', {
    get: function () {
      return ensureNotNull(this.memoryPartitionsUid.get_11rb$(MemoryPartitions$Companion_getInstance().User));
    }
  });
  Object.defineProperty(MemoryManager.prototype, 'stackPartition', {
    get: function () {
      return ensureNotNull(this.memoryPartitionsUid.get_11rb$(MemoryPartitions$Companion_getInstance().UserStacks));
    }
  });
  MemoryManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemoryManager',
    interfaces: []
  };
  function MemoryPartitions(id) {
    MemoryPartitions$Companion_getInstance();
    this.id = id;
  }
  function MemoryPartitions$Companion() {
    MemoryPartitions$Companion_instance = this;
    this.Kernel0 = 0;
    this.User = 2;
    this.VolatilePartition = 5;
    this.UserStacks = 6;
  }
  MemoryPartitions$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var MemoryPartitions$Companion_instance = null;
  function MemoryPartitions$Companion_getInstance() {
    if (MemoryPartitions$Companion_instance === null) {
      new MemoryPartitions$Companion();
    }
    return MemoryPartitions$Companion_instance;
  }
  MemoryPartitions.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemoryPartitions',
    interfaces: []
  };
  function MemoryAnchor(name, ordinal, id) {
    Enum.call(this);
    this.id = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function MemoryAnchor_initFields() {
    MemoryAnchor_initFields = function () {
    };
    MemoryAnchor$Low_instance = new MemoryAnchor('Low', 0, 0);
    MemoryAnchor$High_instance = new MemoryAnchor('High', 1, 1);
    MemoryAnchor$Address_instance = new MemoryAnchor('Address', 2, 2);
    MemoryAnchor$LowAligned_instance = new MemoryAnchor('LowAligned', 3, 3);
    MemoryAnchor$HighAligned_instance = new MemoryAnchor('HighAligned', 4, 4);
    MemoryAnchor$Companion_getInstance();
  }
  var MemoryAnchor$Low_instance;
  function MemoryAnchor$Low_getInstance() {
    MemoryAnchor_initFields();
    return MemoryAnchor$Low_instance;
  }
  var MemoryAnchor$High_instance;
  function MemoryAnchor$High_getInstance() {
    MemoryAnchor_initFields();
    return MemoryAnchor$High_instance;
  }
  var MemoryAnchor$Address_instance;
  function MemoryAnchor$Address_getInstance() {
    MemoryAnchor_initFields();
    return MemoryAnchor$Address_instance;
  }
  var MemoryAnchor$LowAligned_instance;
  function MemoryAnchor$LowAligned_getInstance() {
    MemoryAnchor_initFields();
    return MemoryAnchor$LowAligned_instance;
  }
  var MemoryAnchor$HighAligned_instance;
  function MemoryAnchor$HighAligned_getInstance() {
    MemoryAnchor_initFields();
    return MemoryAnchor$HighAligned_instance;
  }
  function MemoryAnchor$Companion() {
    MemoryAnchor$Companion_instance = this;
    var $receiver = MemoryAnchor$values();
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.id, item));
    }
    this.BY_ID = toMap(destination);
  }
  MemoryAnchor$Companion.prototype.invoke_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this.BY_ID.get_11rb$(index)) != null ? tmp$ : invalidOp("Can't find index " + index + ' in class');
  };
  MemoryAnchor$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var MemoryAnchor$Companion_instance = null;
  function MemoryAnchor$Companion_getInstance() {
    MemoryAnchor_initFields();
    if (MemoryAnchor$Companion_instance === null) {
      new MemoryAnchor$Companion();
    }
    return MemoryAnchor$Companion_instance;
  }
  MemoryAnchor.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemoryAnchor',
    interfaces: [Enum]
  };
  function MemoryAnchor$values() {
    return [MemoryAnchor$Low_getInstance(), MemoryAnchor$High_getInstance(), MemoryAnchor$Address_getInstance(), MemoryAnchor$LowAligned_getInstance(), MemoryAnchor$HighAligned_getInstance()];
  }
  MemoryAnchor.values = MemoryAnchor$values;
  function MemoryAnchor$valueOf(name) {
    switch (name) {
      case 'Low':
        return MemoryAnchor$Low_getInstance();
      case 'High':
        return MemoryAnchor$High_getInstance();
      case 'Address':
        return MemoryAnchor$Address_getInstance();
      case 'LowAligned':
        return MemoryAnchor$LowAligned_getInstance();
      case 'HighAligned':
        return MemoryAnchor$HighAligned_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.manager.MemoryAnchor.' + name);
    }
  }
  MemoryAnchor.valueOf_61zpoe$ = MemoryAnchor$valueOf;
  function OutOfMemoryError(message) {
    Exception.call(this, message);
    this.name = 'OutOfMemoryError';
  }
  OutOfMemoryError.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'OutOfMemoryError',
    interfaces: [Exception]
  };
  function MemoryPartition(name, low, high, allocated, parent) {
    MemoryPartition$Companion_getInstance();
    if (parent === void 0)
      parent = null;
    this.name = name;
    this.low = low;
    this.high = high;
    this.allocated = allocated;
    this.parent = parent;
    this.address = this.low;
    this._childPartitions_0 = ArrayList_init();
  }
  function MemoryPartition$Companion() {
    MemoryPartition$Companion_instance = this;
    this.DUMMY = new MemoryPartition('dummy', 0.0, 0.0, false, null);
  }
  MemoryPartition$Companion.prototype.invoke_irad7e$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.hle.manager.MemoryPartition.Companion.invoke_irad7e$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var MemoryPartition_init = _.com.soywiz.kpspemu.hle.manager.MemoryPartition;
    return function (name, low, high, allocated, parent) {
      if (parent === void 0)
        parent = null;
      return new MemoryPartition_init(name, numberToDouble(low), numberToDouble(high), allocated, parent);
    };
  }));
  MemoryPartition$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var MemoryPartition$Companion_instance = null;
  function MemoryPartition$Companion_getInstance() {
    if (MemoryPartition$Companion_instance === null) {
      new MemoryPartition$Companion();
    }
    return MemoryPartition$Companion_instance;
  }
  Object.defineProperty(MemoryPartition.prototype, 'free', {
    get: function () {
      return !this.allocated;
    }
  });
  Object.defineProperty(MemoryPartition.prototype, 'size', {
    get: function () {
      return this.high - this.low;
    }
  });
  Object.defineProperty(MemoryPartition.prototype, 'root', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.root : null) != null ? tmp$_0 : this;
    }
  });
  Object.defineProperty(MemoryPartition.prototype, 'childPartitions', {
    get: function () {
      if (this._childPartitions_0.isEmpty()) {
        this._childPartitions_0.add_11rb$(new MemoryPartition('', this.low, this.high, false, this));
      }
      return this._childPartitions_0;
    }
  });
  MemoryPartition.prototype.contains_14dthe$ = function (address) {
    return address >= this.low && address < this.high;
  };
  MemoryPartition.prototype.deallocate = function () {
    var tmp$;
    this.allocated = false;
    (tmp$ = this.parent) != null ? (tmp$.cleanup_0(), Unit) : null;
  };
  MemoryPartition.prototype.allocate_sin65v$ = function (size, anchor, address, name) {
    if (address === void 0)
      address = 0.0;
    if (name === void 0)
      name = '';
    if (equals(anchor, MemoryAnchor$LowAligned_getInstance()) || equals(anchor, MemoryAnchor$Low_getInstance()))
      return this.allocateLow_t0es5s$(size, name);
    else if (equals(anchor, MemoryAnchor$High_getInstance()))
      return this.allocateHigh_tdm7pe$(size, name);
    else if (equals(anchor, MemoryAnchor$Address_getInstance()))
      return this.allocateSet_rpaqe6$(size, address, name);
    else
      throw new Error_0(format('Not implemented anchor %d:%s', [anchor, anchor]));
  };
  MemoryPartition.prototype.allocateSet_7prga6$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.hle.manager.MemoryPartition.allocateSet_7prga6$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function (size, addressLow, name) {
      if (name === void 0)
        name = '';
      return this.allocateSet_rpaqe6$(numberToDouble(size), numberToDouble(addressLow), name);
    };
  }));
  MemoryPartition.prototype.allocateLow_xfy9o8$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.hle.manager.MemoryPartition.allocateLow_xfy9o8$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function (size, name) {
      if (name === void 0)
        name = '';
      return this.allocateLow_t0es5s$(numberToDouble(size), name);
    };
  }));
  MemoryPartition.prototype.allocateHigh_oj6pkq$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.hle.manager.MemoryPartition.allocateHigh_oj6pkq$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function (size, name, alignment) {
      if (name === void 0)
        name = '';
      if (alignment === void 0)
        alignment = 1;
      return this.allocateHigh_tdm7pe$(numberToDouble(size), name);
    };
  }));
  MemoryPartition.prototype.allocateSet_rpaqe6$ = function (size, addressLow, name) {
    if (name === void 0)
      name = '';
    var childs = this.childPartitions;
    var addressHigh = addressLow + size;
    if (!this.contains_14dthe$(addressLow) || !this.contains_14dthe$(addressHigh)) {
      throw new OutOfMemoryError(format("Can't allocate [%08X-%08X] in [%08X-%08X]", [addressLow, addressHigh, this.low, this.high]));
    }
    var indexOfFirst$result;
    indexOfFirst$break: do {
      var tmp$;
      var index = 0;
      tmp$ = childs.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        if (item.contains_14dthe$(addressLow)) {
          indexOfFirst$result = index;
          break indexOfFirst$break;
        }
        index = index + 1 | 0;
      }
      indexOfFirst$result = -1;
    }
     while (false);
    var index_0 = indexOfFirst$result;
    if (index_0 < 0) {
      println(format('address: %08X, size: %d', [addressLow, size]));
      println(this);
      throw new Error_0("Can't find the segment");
    }
    var child = childs.get_za3lpa$(index_0);
    if (child.allocated)
      throw new Error_0('Memory already allocated');
    if (!child.contains_14dthe$(addressHigh - 1))
      throw new Error_0("Can't fit memory");
    var p1 = new MemoryPartition('', child.low, addressLow, false, this);
    var p2 = new MemoryPartition(name, addressLow, addressHigh, true, this);
    var p3 = new MemoryPartition('', addressHigh, child.high, false, this);
    splice(childs, index_0, 1, [p1, p2, p3]);
    this.cleanup_0();
    return p2;
  };
  MemoryPartition.prototype.allocateLow_t0es5s$ = function (size, name) {
    if (name === void 0)
      name = '';
    return this.allocateLowHigh_0(size, true, name);
  };
  MemoryPartition.prototype.allocateHigh_tdm7pe$ = function (size, name, alignment) {
    if (name === void 0)
      name = '';
    if (alignment === void 0)
      alignment = 1;
    return this.allocateLowHigh_0(size, false, name);
  };
  MemoryPartition.prototype._validateChilds_0 = function () {
    var tmp$;
    var childs = this.childPartitions;
    if (childs.get_za3lpa$(0).low !== this.low)
      throw new Error_0("First child low doesn't match container low");
    if (childs.get_za3lpa$(childs.size - 1 | 0).high !== this.high)
      throw new Error_0("Last child high doesn't match container high");
    tmp$ = childs.size - 1 | 0;
    for (var n = 0; n < tmp$; n++) {
      if (childs.get_za3lpa$(n + 0 | 0).high !== childs.get_za3lpa$(n + 1 | 0).low)
        throw new Error_0('Children at ' + n + ' are not contiguous');
    }
  };
  MemoryPartition.prototype.allocateLowHigh_0 = function (size, low, name) {
    if (name === void 0)
      name = '';
    var childs = this.childPartitions;
    var indexOfFirst$result;
    indexOfFirst$break: do {
      var tmp$;
      var index = 0;
      tmp$ = childs.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        if (item.free && item.size >= size) {
          indexOfFirst$result = index;
          break indexOfFirst$break;
        }
        index = index + 1 | 0;
      }
      indexOfFirst$result = -1;
    }
     while (false);
    var index_0 = indexOfFirst$result;
    if (index_0 < 0)
      throw new OutOfMemoryError("Can't find a partition with " + size + ' available');
    var child = childs.get_za3lpa$(index_0);
    var unallocatedChild;
    var allocatedChild;
    if (low) {
      var p1 = child.low;
      var p2 = child.low + size;
      var p3 = child.high;
      allocatedChild = new MemoryPartition(name, p1, p2, true, this);
      unallocatedChild = new MemoryPartition('', p2, p3, false, this);
      splice(childs, index_0, 1, [allocatedChild, unallocatedChild]);
    }
     else {
      var p1_0 = child.low;
      var p2_0 = child.high - size;
      var p3_0 = child.high;
      unallocatedChild = new MemoryPartition('', p1_0, p2_0, false, this);
      allocatedChild = new MemoryPartition(name, p2_0, p3_0, true, this);
      splice(childs, index_0, 1, [unallocatedChild, allocatedChild]);
    }
    this.cleanup_0();
    return allocatedChild;
  };
  MemoryPartition.prototype.unallocate = function () {
    var tmp$;
    this.name = '';
    this.allocated = false;
    (tmp$ = this.parent) != null ? (tmp$.cleanup_0(), Unit) : null;
  };
  MemoryPartition.prototype.cleanup_0 = function () {
    var startTotalFreeMemory = this.getTotalFreeMemory();
    this._validateChilds_0();
    var childs = {v: this.childPartitions};
    if (childs.v.size >= 2) {
      var n = 0;
      while (n < (childs.v.size - 1 | 0)) {
        var l = childs.v.get_za3lpa$(n + 0 | 0);
        var r = childs.v.get_za3lpa$(n + 1 | 0);
        if (!l.allocated && !r.allocated) {
          var new_0 = new MemoryPartition('', l.low, r.high, false, this);
          splice(childs.v, n, 2, [new_0]);
        }
         else {
          n = n + 1 | 0;
        }
      }
    }
    var n_0 = 0;
    while (n_0 < childs.v.size) {
      var child = childs.v.get_za3lpa$(n_0);
      if (!child.allocated && child.size === 0.0) {
        splice(childs.v, n_0, 1, []);
      }
       else {
        n_0 = n_0 + 1 | 0;
      }
    }
    this._validateChilds_0();
    var endTotalFreeMemory = this.getTotalFreeMemory();
    if (endTotalFreeMemory !== startTotalFreeMemory) {
      println('assertion failed [1]! : ' + startTotalFreeMemory + ',' + endTotalFreeMemory);
    }
  };
  Object.defineProperty(MemoryPartition.prototype, 'nonAllocatedPartitions', {
    get: function () {
      var $receiver = this.childPartitions;
      var destination = ArrayList_init();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (!element.allocated)
          destination.add_11rb$(element);
      }
      return destination;
    }
  });
  function MemoryPartition$getTotalFreeMemory$lambda(prev, item) {
    return item.size + prev;
  }
  MemoryPartition.prototype.getTotalFreeMemory = function () {
    return reduceAcumulate(this.nonAllocatedPartitions, 0.0, MemoryPartition$getTotalFreeMemory$lambda);
  };
  MemoryPartition.prototype.getMaxContiguousFreeMemory = function () {
    var tmp$, tmp$_0;
    var $receiver = this.nonAllocatedPartitions;
    var maxBy$result;
    maxBy$break: do {
      var iterator = $receiver.iterator();
      if (!iterator.hasNext()) {
        maxBy$result = null;
        break maxBy$break;
      }
      var maxElem = iterator.next();
      var maxValue = maxElem.size;
      while (iterator.hasNext()) {
        var e = iterator.next();
        var v = e.size;
        if (Kotlin.compareTo(maxValue, v) < 0) {
          maxElem = e;
          maxValue = v;
        }
      }
      maxBy$result = maxElem;
    }
     while (false);
    return (tmp$_0 = (tmp$ = maxBy$result) != null ? tmp$.size : null) != null ? tmp$_0 : 0.0;
  };
  MemoryPartition.prototype.getTotalFreeMemoryInt = function () {
    return numberToInt(this.getTotalFreeMemory());
  };
  MemoryPartition.prototype.getMaxContiguousFreeMemoryInt = function () {
    return numberToInt(this.getMaxContiguousFreeMemory());
  };
  MemoryPartition.prototype.findFreeChildWithSize_0 = function (size) {
  };
  MemoryPartition.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemoryPartition',
    interfaces: []
  };
  MemoryPartition.prototype.component1 = function () {
    return this.name;
  };
  MemoryPartition.prototype.component2 = function () {
    return this.low;
  };
  MemoryPartition.prototype.component3 = function () {
    return this.high;
  };
  MemoryPartition.prototype.component4 = function () {
    return this.allocated;
  };
  MemoryPartition.prototype.component5 = function () {
    return this.parent;
  };
  MemoryPartition.prototype.copy_xwah62$ = function (name, low, high, allocated, parent) {
    return new MemoryPartition(name === void 0 ? this.name : name, low === void 0 ? this.low : low, high === void 0 ? this.high : high, allocated === void 0 ? this.allocated : allocated, parent === void 0 ? this.parent : parent);
  };
  MemoryPartition.prototype.toString = function () {
    return 'MemoryPartition(name=' + Kotlin.toString(this.name) + (', low=' + Kotlin.toString(this.low)) + (', high=' + Kotlin.toString(this.high)) + (', allocated=' + Kotlin.toString(this.allocated)) + (', parent=' + Kotlin.toString(this.parent)) + ')';
  };
  MemoryPartition.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.low) | 0;
    result = result * 31 + Kotlin.hashCode(this.high) | 0;
    result = result * 31 + Kotlin.hashCode(this.allocated) | 0;
    result = result * 31 + Kotlin.hashCode(this.parent) | 0;
    return result;
  };
  MemoryPartition.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.low, other.low) && Kotlin.equals(this.high, other.high) && Kotlin.equals(this.allocated, other.allocated) && Kotlin.equals(this.parent, other.parent)))));
  };
  function ModuleManager(emulator) {
    this.emulator = emulator;
    this.e = this.emulator;
    this.modules = LinkedHashMap_init();
  }
  ModuleManager.prototype.register_q5jrol$ = function (module_0) {
    var $receiver = this.modules;
    var key = module_0.name;
    $receiver.put_xwzc9p$(key, module_0);
    module_0.registerPspModule();
  };
  ModuleManager.prototype.getByName_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.modules.get_11rb$(name)) != null ? tmp$ : invalidOp("Can't find module '" + name + "'");
  };
  ModuleManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ModuleManager',
    interfaces: []
  };
  function SyscallManager() {
    this.lasSyscallId = 1;
    this.syscallToFunc = LinkedHashMap_init();
  }
  SyscallManager.prototype.unhandled_acv9wa$ = function (state, id) {
    println(format('%08X: Called syscall: ### %04X', [state.PC, id]));
  };
  SyscallManager.prototype.register_p42kcx$ = function (id, callback) {
    if (id === void 0)
      id = -1;
    var tmp$;
    var syscallId = id < 0 ? (tmp$ = this.lasSyscallId, this.lasSyscallId = tmp$ + 1 | 0, tmp$) : id;
    this.syscallToFunc.put_xwzc9p$(syscallId, callback);
    return syscallId;
  };
  function SyscallManager$register$lambda(closure$nfunc) {
    return function (cpu, f) {
      closure$nfunc.function(cpu);
      return Unit;
    };
  }
  SyscallManager.prototype.register_u5woyh$ = function (nfunc, id) {
    if (id === void 0)
      id = -1;
    return this.register_p42kcx$(id, SyscallManager$register$lambda(nfunc));
  };
  SyscallManager.prototype.syscall_acv9wa$ = function (state, id) {
    var tmp$;
    var func = (tmp$ = this.syscallToFunc.get_11rb$(id)) != null ? tmp$ : getCallableRef('unhandled', function ($receiver, state, id) {
      return $receiver.unhandled_acv9wa$(state, id), Unit;
    }.bind(null, this));
    func(state, id);
  };
  SyscallManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SyscallManager',
    interfaces: [Syscalls]
  };
  var INSTRUCTIONS_PER_STEP;
  var HashMap_init = Kotlin.kotlin.collections.HashMap_init_q3lmfv$;
  function ThreadManager(emulator) {
    Manager.call(this, 'Thread', emulator);
    this.traces = HashMap_init();
  }
  Object.defineProperty(ThreadManager.prototype, 'threads', {
    get: function () {
      return this.resourcesById_8be2vx$.values;
    }
  });
  var Collection = Kotlin.kotlin.collections.Collection;
  Object.defineProperty(ThreadManager.prototype, 'aliveThreadCount', {
    get: function () {
      var $receiver = this.resourcesById_8be2vx$.values;
      var count$result;
      count$break: do {
        var tmp$;
        if (Kotlin.isType($receiver, Collection) && $receiver.isEmpty()) {
          count$result = 0;
          break count$break;
        }
        var count = 0;
        tmp$ = $receiver.iterator();
        while (tmp$.hasNext()) {
          var element = tmp$.next();
          if (element.running || element.waiting) {
            count = count + 1 | 0;
          }
        }
        count$result = count;
      }
       while (false);
      return count$result;
    }
  });
  ThreadManager.prototype.create_7jlznu$ = function (name, entryPoint, initPriority, stackSize, attributes, optionPtr) {
    var $this = get_memoryManager(this).userPartition;
    var name_0 = name + '_stack';
    var stack = $this.allocateHigh_tdm7pe$(numberToDouble(stackSize), name_0);
    return new PspThread(this, this.allocId_8be2vx$(), name, entryPoint, stack, initPriority, attributes, optionPtr);
  };
  ThreadManager.prototype.suspend = function () {
    throw new CpuBreakException(CpuBreakException$Companion_getInstance().THREAD_WAIT);
  };
  ThreadManager.prototype.vblank = function () {
    var tmp$;
    var $receiver = this.resourcesById_8be2vx$.values;
    var destination = ArrayList_init();
    var tmp$_0;
    tmp$_0 = $receiver.iterator();
    while (tmp$_0.hasNext()) {
      var element = tmp$_0.next();
      if (Kotlin.isType(element.waitObject, WaitObject$VBLANK))
        destination.add_11rb$(element);
    }
    tmp$ = destination.iterator();
    while (tmp$.hasNext()) {
      var t = tmp$.next();
      t.resume();
    }
  };
  function ThreadManager$step$lambda(it) {
    return it.priority;
  }
  var compareBy$lambda_0 = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  function Comparator$ObjectLiteral_0(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_0.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_0.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  ThreadManager.prototype.step = function () {
    var tmp$, tmp$_0, tmp$_1;
    var now = get_timeManager(this).getTimeInMicroseconds();
    var $receiver = this.resourcesById_8be2vx$.values;
    var destination = ArrayList_init();
    var tmp$_2;
    tmp$_2 = $receiver.iterator();
    while (tmp$_2.hasNext()) {
      var element = tmp$_2.next();
      if (Kotlin.isType(element.waitObject, WaitObject$TIME))
        destination.add_11rb$(element);
    }
    tmp$ = destination.iterator();
    while (tmp$.hasNext()) {
      var t = tmp$.next();
      var time = (Kotlin.isType(tmp$_0 = t.waitObject, WaitObject$TIME) ? tmp$_0 : throwCCE()).instant;
      if (now.compareTo_11rb$(time) >= 0) {
        t.resume();
      }
    }
    var $receiver_0 = this.resourcesById_8be2vx$.values;
    var destination_0 = ArrayList_init();
    var tmp$_3;
    tmp$_3 = $receiver_0.iterator();
    while (tmp$_3.hasNext()) {
      var element_0 = tmp$_3.next();
      if (element_0.running)
        destination_0.add_11rb$(element_0);
    }
    var availableThreads = sortedWith(destination_0, new Comparator$ObjectLiteral_0(compareBy$lambda_0(ThreadManager$step$lambda)));
    tmp$_1 = availableThreads.iterator();
    while (tmp$_1.hasNext()) {
      var t_0 = tmp$_1.next();
      t_0.step_s8cxhz$(now);
    }
  };
  ThreadManager.prototype.trace_ivxn3r$ = function (name, trace) {
    if (trace === void 0)
      trace = true;
    var tmp$;
    if (trace) {
      this.traces.put_xwzc9p$(name, true);
    }
     else {
      this.traces.remove_11rb$(name);
    }
    (tmp$ = this.tryGetByName_61zpoe$(name)) != null ? (tmp$.updateTrace(), Unit) : null;
  };
  ThreadManager.prototype.stopAllThreads = function () {
    var tmp$;
    tmp$ = toList_2(this.resourcesById_8be2vx$.values).iterator();
    while (tmp$.hasNext()) {
      var t = tmp$.next();
      t.exitAndKill();
    }
    throw new CpuBreakException(CpuBreakException$Companion_getInstance().THREAD_EXIT_KILL);
  };
  ThreadManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadManager',
    interfaces: [Manager]
  };
  function WaitObject() {
  }
  function WaitObject$TIME(instant) {
    WaitObject.call(this);
    this.instant = instant;
  }
  WaitObject$TIME.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TIME',
    interfaces: [WaitObject]
  };
  function WaitObject$PROMISE(promise) {
    WaitObject.call(this);
    this.promise = promise;
  }
  WaitObject$PROMISE.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PROMISE',
    interfaces: [WaitObject]
  };
  function WaitObject$SLEEP() {
    WaitObject$SLEEP_instance = this;
    WaitObject.call(this);
  }
  WaitObject$SLEEP.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'SLEEP',
    interfaces: [WaitObject]
  };
  var WaitObject$SLEEP_instance = null;
  function WaitObject$SLEEP_getInstance() {
    if (WaitObject$SLEEP_instance === null) {
      new WaitObject$SLEEP();
    }
    return WaitObject$SLEEP_instance;
  }
  function WaitObject$VBLANK() {
    WaitObject$VBLANK_instance = this;
    WaitObject.call(this);
  }
  WaitObject$VBLANK.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'VBLANK',
    interfaces: [WaitObject]
  };
  var WaitObject$VBLANK_instance = null;
  function WaitObject$VBLANK_getInstance() {
    if (WaitObject$VBLANK_instance === null) {
      new WaitObject$VBLANK();
    }
    return WaitObject$VBLANK_instance;
  }
  WaitObject.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WaitObject',
    interfaces: []
  };
  function PspThread(threadManager, id, name, entryPoint, stack, initPriority, attributes, optionPtr) {
    Resource.call(this, threadManager, id, name);
    this.threadManager = threadManager;
    this.entryPoint = entryPoint;
    this.stack = stack;
    this.initPriority = initPriority;
    this.attributes = attributes;
    this.optionPtr = optionPtr;
    this.onEnd = new Signal();
    this.logger = PspLogger$Companion_getInstance().invoke_61zpoe$('PspThread');
    this.acceptingCallbacks = false;
    this.waitObject = null;
    this.phase = PspThread$Phase$STOPPED_getInstance();
    this.priority = this.initPriority;
    var $receiver = new CpuState(this.emulator.mem, this.emulator.syscalls);
    set__thread($receiver, this);
    $receiver.setPC_za3lpa$(this.entryPoint);
    set_SP($receiver, numberToInt(this.stack.high));
    this.state = $receiver;
    this.interpreter = new CpuInterpreter(this.state);
    this.updateTrace();
    set_RA(this.state, this.putWordsInStack_pmhfmb$(new Int32Array([13 | CpuBreakException$Companion_getInstance().THREAD_EXIT_KILL << 6, 0, 0, 0])).addr);
  }
  function PspThread$Phase(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PspThread$Phase_initFields() {
    PspThread$Phase_initFields = function () {
    };
    PspThread$Phase$STOPPED_instance = new PspThread$Phase('STOPPED', 0);
    PspThread$Phase$RUNNING_instance = new PspThread$Phase('RUNNING', 1);
    PspThread$Phase$WAITING_instance = new PspThread$Phase('WAITING', 2);
    PspThread$Phase$DELETED_instance = new PspThread$Phase('DELETED', 3);
  }
  var PspThread$Phase$STOPPED_instance;
  function PspThread$Phase$STOPPED_getInstance() {
    PspThread$Phase_initFields();
    return PspThread$Phase$STOPPED_instance;
  }
  var PspThread$Phase$RUNNING_instance;
  function PspThread$Phase$RUNNING_getInstance() {
    PspThread$Phase_initFields();
    return PspThread$Phase$RUNNING_instance;
  }
  var PspThread$Phase$WAITING_instance;
  function PspThread$Phase$WAITING_getInstance() {
    PspThread$Phase_initFields();
    return PspThread$Phase$WAITING_instance;
  }
  var PspThread$Phase$DELETED_instance;
  function PspThread$Phase$DELETED_getInstance() {
    PspThread$Phase_initFields();
    return PspThread$Phase$DELETED_instance;
  }
  PspThread$Phase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Phase',
    interfaces: [Enum]
  };
  function PspThread$Phase$values() {
    return [PspThread$Phase$STOPPED_getInstance(), PspThread$Phase$RUNNING_getInstance(), PspThread$Phase$WAITING_getInstance(), PspThread$Phase$DELETED_getInstance()];
  }
  PspThread$Phase.values = PspThread$Phase$values;
  function PspThread$Phase$valueOf(name) {
    switch (name) {
      case 'STOPPED':
        return PspThread$Phase$STOPPED_getInstance();
      case 'RUNNING':
        return PspThread$Phase$RUNNING_getInstance();
      case 'WAITING':
        return PspThread$Phase$WAITING_getInstance();
      case 'DELETED':
        return PspThread$Phase$DELETED_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.manager.PspThread.Phase.' + name);
    }
  }
  PspThread$Phase.valueOf_61zpoe$ = PspThread$Phase$valueOf;
  Object.defineProperty(PspThread.prototype, 'running', {
    get: function () {
      return this.phase === PspThread$Phase$RUNNING_getInstance();
    }
  });
  Object.defineProperty(PspThread.prototype, 'waiting', {
    get: function () {
      return this.waitObject != null;
    }
  });
  Object.defineProperty(PspThread.prototype, 'emulator', {
    get: function () {
      return this.manager.emulator;
    }
  });
  PspThread.prototype.updateTrace = function () {
    this.interpreter.trace = this.threadManager.traces.get_11rb$(this.name) === true;
  };
  PspThread.prototype.putDataInStack_fqrh44$ = function (bytes) {
    var tmp$;
    tmp$ = this.state;
    set_SP(tmp$, get_SP(tmp$) - nextAlignedTo_0(bytes.length, 16) | 0);
    get_mem(this).write_3fge6q$(get_SP(this.state), bytes);
    return ptr(get_mem(this), get_SP(this.state));
  };
  PspThread.prototype.putWordInStack_za3lpa$ = function (word) {
    var tmp$;
    tmp$ = this.state;
    set_SP(tmp$, get_SP(tmp$) - nextAlignedTo_0(4, 16) | 0);
    get_mem(this).sw_vux9f0$(get_SP(this.state), word);
    return ptr(get_mem(this), get_SP(this.state));
  };
  PspThread.prototype.putWordsInStack_pmhfmb$ = function (words) {
    var tmp$;
    tmp$ = this.state;
    set_SP(tmp$, get_SP(tmp$) - nextAlignedTo_0(words.length * 4 | 0, 16) | 0);
    for (var n = 0; n < words.length; n++)
      get_mem(this).sw_vux9f0$(get_SP(this.state) + (n * 4 | 0) | 0, words[n]);
    return ptr(get_mem(this), get_SP(this.state));
  };
  PspThread.prototype.start = function () {
    this.resume();
  };
  PspThread.prototype.resume = function () {
    this.phase = PspThread$Phase$RUNNING_getInstance();
    this.waitObject = null;
    this.acceptingCallbacks = false;
  };
  PspThread.prototype.stop = function () {
    if (this.phase !== PspThread$Phase$STOPPED_getInstance()) {
      this.phase = PspThread$Phase$STOPPED_getInstance();
      this.onEnd.invoke_11rb$(Unit);
    }
  };
  PspThread.prototype.delete = function () {
    this.stop();
    this.phase = PspThread$Phase$DELETED_getInstance();
    this.manager.freeIds_8be2vx$.free_11rb$(this.id);
    this.manager.resourcesById_8be2vx$.remove_11rb$(this.id);
  };
  PspThread.prototype.exitAndKill = function () {
    this.stop();
    this.delete();
  };
  PspThread.prototype.step_s8cxhz$ = function (now) {
    var tmp$;
    try {
      this.interpreter.steps_za3lpa$(INSTRUCTIONS_PER_STEP);
    }
     catch (e) {
      if (Kotlin.isType(e, CpuBreakException)) {
        tmp$ = e.id;
        if (tmp$ === CpuBreakException$Companion_getInstance().THREAD_EXIT_KILL) {
          this.logger.info_61zpoe$('BREAK: THREAD_EXIT_KILL');
          this.exitAndKill();
        }
         else if (tmp$ !== CpuBreakException$Companion_getInstance().THREAD_WAIT)
          throw e;
      }
       else
        throw e;
    }
  };
  PspThread.prototype.markWaiting_p514vg$ = function (wait, cb) {
    this.waitObject = wait;
    this.phase = PspThread$Phase$WAITING_getInstance();
    this.acceptingCallbacks = cb;
  };
  function PspThread$suspend$lambda(this$PspThread) {
    return function (it) {
      this$PspThread.resume();
      return Unit;
    };
  }
  PspThread.prototype.suspend_p514vg$ = function (wait, cb) {
    this.markWaiting_p514vg$(wait, cb);
    if (Kotlin.isType(wait, WaitObject$PROMISE)) {
      wait.promise.then_qlkmfe$(PspThread$suspend$lambda(this));
    }
    this.threadManager.suspend();
  };
  PspThread.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspThread',
    interfaces: [Resource, WithEmulator]
  };
  function _thread$lambda() {
    return null;
  }
  var _thread;
  var Any = Object;
  function get__thread($receiver) {
    var property = new PropertyMetadata('_thread');
    var getValue_uu943u$result;
    getValue_uu943u$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = _thread.name) != null ? tmp$ : property.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = _thread.defaultGen();
        var tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
        if ($receiver.extra == null)
          $receiver.extra = lmapOf([]);
        tmp$_7 = $receiver.extra;
        tmp$_4 = (tmp$_3 = _thread.name) != null ? tmp$_3 : property.callableName;
        tmp$_6 = (tmp$_5 = r) == null || Kotlin.isType(tmp$_5, Any) ? tmp$_5 : throwCCE();
        if (tmp$_7 != null) {
          tmp$_7.put_xwzc9p$(tmp$_4, tmp$_6);
        }
        getValue_uu943u$result = r;
        break getValue_uu943u$break;
      }
      getValue_uu943u$result = res;
    }
     while (false);
    return getValue_uu943u$result;
  }
  function set__thread($receiver, _thread_0) {
    var property = new PropertyMetadata('_thread');
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    if ($receiver.extra == null)
      $receiver.extra = lmapOf([]);
    tmp$_3 = $receiver.extra;
    tmp$_0 = (tmp$ = _thread.name) != null ? tmp$ : property.callableName;
    tmp$_2 = (tmp$_1 = _thread_0) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
    if (tmp$_3 != null) {
      tmp$_3.put_xwzc9p$(tmp$_0, tmp$_2);
    }
  }
  function get_thread($receiver) {
    var tmp$;
    return (tmp$ = get__thread($receiver)) != null ? tmp$ : invalidOp("CpuState doesn't have a thread attached");
  }
  function TimeManager(emulator) {
    this.emulator_gqh32o$_0 = emulator;
  }
  Object.defineProperty(TimeManager.prototype, 'emulator', {
    get: function () {
      return this.emulator_gqh32o$_0;
    }
  });
  TimeManager.prototype.getTimeInMicroseconds = function () {
    return currentTimeMicro(klock.Klock);
  };
  TimeManager.prototype.getTimeInSeconds = function () {
    return klock.Klock.currentTimeMillis().div(Kotlin.Long.fromInt(1000)).toInt();
  };
  TimeManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TimeManager',
    interfaces: [WithEmulator]
  };
  function IoFileMgrForUser(emulator) {
    IoFileMgrForUser$Companion_getInstance();
    SceModule.call(this, emulator, 'IoFileMgrForUser', 1073807377, 'iofilemgr.prx', 'sceIOFileManager');
  }
  function IoFileMgrForUser$Companion() {
    IoFileMgrForUser$Companion_instance = this;
    this.EMULATOR_DEVCTL__GET_HAS_DISPLAY = 1;
    this.EMULATOR_DEVCTL__SEND_OUTPUT = 2;
    this.EMULATOR_DEVCTL__IS_EMULATOR = 3;
    this.EMULATOR_DEVCTL__SEND_CTRLDATA = 16;
    this.EMULATOR_DEVCTL__EMIT_SCREENSHOT = 32;
  }
  IoFileMgrForUser$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var IoFileMgrForUser$Companion_instance = null;
  function IoFileMgrForUser$Companion_getInstance() {
    if (IoFileMgrForUser$Companion_instance === null) {
      new IoFileMgrForUser$Companion();
    }
    return IoFileMgrForUser$Companion_instance;
  }
  Object.defineProperty(IoFileMgrForUser.prototype, 'fileDescriptors', {
    get: function () {
      return this.emulator.fileManager.fileDescriptors;
    }
  });
  IoFileMgrForUser.prototype._resolve_0 = function (path) {
    var resolved = get_fileManager(this).resolve_61zpoe$(path);
    var $this = this.logger;
    var level = PspLogLevel.ERROR;
    if (level.index <= $this.processedLevel.index) {
      $this.actualLog_138x2s$(level, 'resolved:' + resolved);
    }
    return resolved;
  };
  IoFileMgrForUser.prototype.resolve_0 = function (path) {
    var $this = this.logger;
    var level = PspLogLevel.ERROR;
    if (level.index <= $this.processedLevel.index) {
      $this.actualLog_138x2s$(level, 'resolve:' + toString(path));
    }
    return this._resolve_0(ensureNotNull(path));
  };
  function IoFileMgrForUser$FileOpenFlags() {
    IoFileMgrForUser$FileOpenFlags_instance = this;
    this.Read = 1;
    this.Write = 2;
    this.ReadWrite = this.Read | this.Write;
    this.NoBlock = 4;
    this._InternalDirOpen = 8;
    this.Append = 256;
    this.Create = 512;
    this.Truncate = 1024;
    this.Excl = 2048;
    this.Unknown1 = 16384;
    this.NoWait = 32768;
    this.Unknown2 = 983040;
    this.Unknown3 = 33554432;
  }
  IoFileMgrForUser$FileOpenFlags.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'FileOpenFlags',
    interfaces: []
  };
  var IoFileMgrForUser$FileOpenFlags_instance = null;
  function IoFileMgrForUser$FileOpenFlags_getInstance() {
    if (IoFileMgrForUser$FileOpenFlags_instance === null) {
      new IoFileMgrForUser$FileOpenFlags();
    }
    return IoFileMgrForUser$FileOpenFlags_instance;
  }
  function IoFileMgrForUser$IOFileModes() {
    IoFileMgrForUser$IOFileModes_instance = this;
    this.FormatMask = 56;
    this.SymbolicLink = 8;
    this.Directory = 16;
    this.File = 32;
    this.CanRead = 4;
    this.CanWrite = 2;
    this.CanExecute = 1;
  }
  IoFileMgrForUser$IOFileModes.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'IOFileModes',
    interfaces: []
  };
  var IoFileMgrForUser$IOFileModes_instance = null;
  function IoFileMgrForUser$IOFileModes_getInstance() {
    if (IoFileMgrForUser$IOFileModes_instance === null) {
      new IoFileMgrForUser$IOFileModes();
    }
    return IoFileMgrForUser$IOFileModes_instance;
  }
  IoFileMgrForUser.prototype.sceIoOpen_hs9j5r$ = function (fileName_0, flags_0, mode_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoOpen_hs9j5r$(this, fileName_0, flags_0, mode_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoOpen_hs9j5r$($this, fileName_0, flags_0, mode_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 5;
    this.$this = $this;
    this.local$file = void 0;
    this.local$fileName = fileName_0;
    this.local$flags = flags_0;
    this.local$mode = mode_0;
  }
  Coroutine$sceIoOpen_hs9j5r$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoOpen_hs9j5r$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoOpen_hs9j5r$.prototype.constructor = Coroutine$sceIoOpen_hs9j5r$;
  Coroutine$sceIoOpen_hs9j5r$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.$this.logger.error_61zpoe$('WIP: sceIoOpen: ' + toString(this.local$fileName) + ', ' + this.local$flags + ', ' + this.local$mode);
            this.exceptionState_0 = 2;
            this.local$file = this.$this.fileDescriptors.alloc();
            this.local$file.file = this.$this.resolve_0(this.local$fileName);
            if ((this.local$flags & IoFileMgrForUser$FileOpenFlags_getInstance().Truncate) !== 0)
              tmp$ = VfsOpenMode.CREATE_OR_TRUNCATE;
            else if ((this.local$flags & IoFileMgrForUser$FileOpenFlags_getInstance().Create) !== 0)
              tmp$ = VfsOpenMode.CREATE;
            else if ((this.local$flags & IoFileMgrForUser$FileOpenFlags_getInstance().Write) !== 0)
              tmp$ = VfsOpenMode.WRITE;
            else
              tmp$ = VfsOpenMode.READ;
            var flags2 = tmp$;
            this.state_0 = 1;
            this.result_0 = this.local$file.file.open_7c7tmz$(flags2, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            this.local$file.stream = this.result_0;
            return this.local$file.id;
          case 2:
            this.exceptionState_0 = 5;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              println('Error openingfile: ' + toString(this.local$fileName));
              printStackTrace(e);
              return SceKernelErrors_getInstance().ERROR_ERRNO_FILE_NOT_FOUND;
            }
             else {
              throw e;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            return;
          case 5:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 5)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$SceIoStat(mode, attributes, size, timeCreation, timeLastAccess, timeLastModifications, device) {
    if (device === void 0)
      device = new Int32Array(6);
    this.mode = mode;
    this.attributes = attributes;
    this.size = size;
    this.timeCreation = timeCreation;
    this.timeLastAccess = timeLastAccess;
    this.timeLastModifications = timeLastModifications;
    this.device = device;
  }
  IoFileMgrForUser$SceIoStat.prototype.write_39qel5$ = function (s) {
    write32_le(s, this.mode);
    write32_le(s, this.attributes);
    write64_le(s, this.size);
    this.timeCreation.write_39qel5$(s);
    this.timeLastAccess.write_39qel5$(s);
    this.timeLastModifications.write_39qel5$(s);
    for (var n = 0; n < 6; n++)
      write32_le(s, this.device[n]);
  };
  IoFileMgrForUser$SceIoStat.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SceIoStat',
    interfaces: []
  };
  IoFileMgrForUser.prototype.sceIoGetstat_ejruhl$ = function (fileName_0, ptr_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoGetstat_ejruhl$(this, fileName_0, ptr_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoGetstat_ejruhl$($this, fileName_0, ptr_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fileName = fileName_0;
    this.local$ptr = ptr_0;
  }
  Coroutine$sceIoGetstat_ejruhl$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoGetstat_ejruhl$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoGetstat_ejruhl$.prototype.constructor = Coroutine$sceIoGetstat_ejruhl$;
  Coroutine$sceIoGetstat_ejruhl$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var file = this.$this.resolve_0(this.local$fileName);
            this.state_0 = 2;
            this.result_0 = file.stat(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var fstat = this.result_0;
            var stat = new IoFileMgrForUser$SceIoStat(IoFileMgrForUser$IOFileModes_getInstance().File, 0, fstat.size, ScePspDateTime_init(get_createDate(fstat)), ScePspDateTime_init(get_lastAccessDate(fstat)), ScePspDateTime_init(get_modifiedDate(fstat)));
            stat.write_39qel5$(openSync_1(this.local$ptr));
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$SeekType() {
    IoFileMgrForUser$SeekType_instance = this;
    this.Set = 0;
    this.Cur = 1;
    this.End = 2;
    this.Tell = 65536;
  }
  IoFileMgrForUser$SeekType.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'SeekType',
    interfaces: []
  };
  var IoFileMgrForUser$SeekType_instance = null;
  function IoFileMgrForUser$SeekType_getInstance() {
    if (IoFileMgrForUser$SeekType_instance === null) {
      new IoFileMgrForUser$SeekType();
    }
    return IoFileMgrForUser$SeekType_instance;
  }
  IoFileMgrForUser.prototype.sceIoLseek32_qt1dr2$ = function (fileId_0, offset_0, whence_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoLseek32_qt1dr2$(this, fileId_0, offset_0, whence_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoLseek32_qt1dr2$($this, fileId_0, offset_0, whence_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fileId = fileId_0;
    this.local$offset = offset_0;
    this.local$whence = whence_0;
  }
  Coroutine$sceIoLseek32_qt1dr2$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoLseek32_qt1dr2$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoLseek32_qt1dr2$.prototype.constructor = Coroutine$sceIoLseek32_qt1dr2$;
  Coroutine$sceIoLseek32_qt1dr2$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this._sceIoLseek_6bixgx$(this.local$fileId, Kotlin.Long.fromInt(this.local$offset), this.local$whence, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.toInt();
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoLseek_6bixgx$ = function (fileId, offset, whence, continuation) {
    return this._sceIoLseek_6bixgx$(fileId, offset, whence, continuation);
  };
  IoFileMgrForUser.prototype._sceIoLseek_6bixgx$ = function (fileId_0, offset_0, whence_0, continuation_0, suspended) {
    var instance = new Coroutine$_sceIoLseek_6bixgx$(this, fileId_0, offset_0, whence_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_sceIoLseek_6bixgx$($this, fileId_0, offset_0, whence_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$stream = void 0;
    this.local$fileId = fileId_0;
    this.local$offset = offset_0;
    this.local$whence = whence_0;
  }
  Coroutine$_sceIoLseek_6bixgx$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_sceIoLseek_6bixgx$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_sceIoLseek_6bixgx$.prototype.constructor = Coroutine$_sceIoLseek_6bixgx$;
  Coroutine$_sceIoLseek_6bixgx$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.logger.error_61zpoe$('WIP: _sceIoLseek: ' + this.local$fileId + ', ' + this.local$offset + ', ' + this.local$whence);
            this.local$stream = this.$this.fileDescriptors.get_za3lpa$(this.local$fileId).stream;
            if (this.local$whence === IoFileMgrForUser$SeekType_getInstance().Set) {
              this.local$tmp$ = this.local$offset;
              this.state_0 = 5;
              continue;
            }
             else {
              if (this.local$whence === IoFileMgrForUser$SeekType_getInstance().Cur) {
                this.local$tmp$ = this.local$stream.position.add(this.local$offset);
                this.state_0 = 4;
                continue;
              }
               else {
                if (this.local$whence === IoFileMgrForUser$SeekType_getInstance().End) {
                  this.state_0 = 2;
                  this.result_0 = this.local$stream.size(this);
                  if (this.result_0 === COROUTINE_SUSPENDED)
                    return COROUTINE_SUSPENDED;
                  break;
                }
                 else {
                  if (this.local$whence === IoFileMgrForUser$SeekType_getInstance().Tell)
                    this.local$tmp$ = this.local$stream.position;
                  else
                    this.local$tmp$ = invalidOp('Invalid sceIoLseek32');
                  this.state_0 = 3;
                  continue;
                }
              }
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = this.result_0.add(this.local$offset);
            this.state_0 = 3;
            continue;
          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            this.local$stream.position = this.local$tmp$;
            return this.local$stream.position;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoRead_xjseqw$ = function (fileId_0, dst_0, dstLen_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoRead_xjseqw$(this, fileId_0, dst_0, dstLen_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoRead_xjseqw$($this, fileId_0, dst_0, dstLen_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$out = void 0;
    this.local$fileId = fileId_0;
    this.local$dst = dst_0;
    this.local$dstLen = dstLen_0;
  }
  Coroutine$sceIoRead_xjseqw$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoRead_xjseqw$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoRead_xjseqw$.prototype.constructor = Coroutine$sceIoRead_xjseqw$;
  Coroutine$sceIoRead_xjseqw$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.logger.error_61zpoe$('WIP: sceIoRead: ' + this.local$fileId + ', ' + this.local$dst + ', ' + this.local$dstLen);
            var stream = this.$this.fileDescriptors.get_za3lpa$(this.local$fileId).stream;
            this.local$out = new Int8Array(this.local$dstLen);
            this.state_0 = 2;
            this.result_0 = stream.read_mj6st8$(this.local$out, 0, this.local$dstLen, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var read = this.result_0;
            writeBytes(this.local$dst, this.local$out, 0, read);
            return read;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoWrite_xjseqw$ = function (fileId_0, ptr_0, size_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoWrite_xjseqw$(this, fileId_0, ptr_0, size_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoWrite_xjseqw$($this, fileId_0, ptr_0, size_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fileId = fileId_0;
    this.local$ptr = ptr_0;
    this.local$size = size_0;
  }
  Coroutine$sceIoWrite_xjseqw$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoWrite_xjseqw$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoWrite_xjseqw$.prototype.constructor = Coroutine$sceIoWrite_xjseqw$;
  Coroutine$sceIoWrite_xjseqw$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.logger.error_61zpoe$('WIP: sceIoWrite: ' + this.local$fileId + ', ' + this.local$ptr + ', ' + this.local$size);
            var stream = this.$this.fileDescriptors.get_za3lpa$(this.local$fileId).stream;
            var bytes = readBytes_1(this.local$ptr, this.local$size);
            this.state_0 = 2;
            this.result_0 = stream.write_mj6st8$(bytes, void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoClose_za3lpa$ = function (fileId, continuation) {
    this.logger.error_61zpoe$('WIP: sceIoClose: ' + fileId);
    this.fileDescriptors.freeById_za3lpa$(fileId);
    return 0;
  };
  IoFileMgrForUser.prototype.sceIoDevctl_cza7g9$ = function (deviceName, command, inputPointer, inputLength, outputPointer, outputLength, continuation) {
    if (equals(deviceName, 'kemulator:') || equals(deviceName, 'emulator:')) {
      if (command === IoFileMgrForUser$Companion_getInstance().EMULATOR_DEVCTL__IS_EMULATOR)
        return 0;
      else if (command === IoFileMgrForUser$Companion_getInstance().EMULATOR_DEVCTL__GET_HAS_DISPLAY) {
        outputPointer.sw_vux9f0$(0, get_display(this).exposeDisplay ? 1 : 0);
        return 0;
      }
       else if (command === IoFileMgrForUser$Companion_getInstance().EMULATOR_DEVCTL__SEND_OUTPUT) {
        this.emulator.output.append_gw00v9$(toString_0(readBytes_1(inputPointer, inputLength), lang.UTF8));
        return 0;
      }
       else if (command === IoFileMgrForUser$Companion_getInstance().EMULATOR_DEVCTL__SEND_CTRLDATA) {
        println('EMULATOR_DEVCTL__SEND_CTRLDATA');
        return 0;
      }
       else if (command === IoFileMgrForUser$Companion_getInstance().EMULATOR_DEVCTL__EMIT_SCREENSHOT) {
        println('EMULATOR_DEVCTL__EMIT_SCREENSHOT');
        return 0;
      }
       else {
        println('Unhandled emulator command ' + command);
        return -1;
      }
    }
    this.logger.error_61zpoe$('WIP: sceIoDevctl: ' + toString(deviceName) + ', ' + command + ', ' + inputPointer + ', ' + inputLength + ', ' + outputPointer + ', ' + outputLength);
    return -1;
  };
  IoFileMgrForUser.prototype.sceIoDopen_pdl1vj$ = function (path, continuation) {
    var $this = this.logger;
    var level = PspLogLevel.ERROR;
    if (level.index <= $this.processedLevel.index) {
      $this.actualLog_138x2s$(level, 'sceIoDopen:' + toString(path));
    }
    return 77;
  };
  IoFileMgrForUser.prototype.sceIoDread_o62i3q$ = function (id, ptr, continuation) {
    var $this = this.logger;
    var level = PspLogLevel.ERROR;
    if (level.index <= $this.processedLevel.index) {
      $this.actualLog_138x2s$(level, 'sceIoDread:' + id + ',' + ptr);
    }
    return 0;
  };
  IoFileMgrForUser.prototype.sceIoDclose_za3lpa$ = function (id, continuation) {
    var $this = this.logger;
    var level = PspLogLevel.ERROR;
    if (level.index <= $this.processedLevel.index) {
      $this.actualLog_138x2s$(level, 'sceIoDclose:' + id);
    }
    return 0;
  };
  IoFileMgrForUser.prototype.sceIoChdir_pdl1vj$ = function (path, continuation) {
    var $this = this.logger;
    var level = PspLogLevel.ERROR;
    if (level.index <= $this.processedLevel.index) {
      $this.actualLog_138x2s$(level, 'sceIoChdir:' + toString(path));
    }
    return 0;
  };
  IoFileMgrForUser.prototype.sceIoRmdir_pdl1vj$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoRmdir_pdl1vj$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoRmdir_pdl1vj$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$sceIoRmdir_pdl1vj$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoRmdir_pdl1vj$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoRmdir_pdl1vj$.prototype.constructor = Coroutine$sceIoRmdir_pdl1vj$;
  Coroutine$sceIoRmdir_pdl1vj$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $this = this.$this.logger;
            var level = PspLogLevel.ERROR;
            if (level.index <= $this.processedLevel.index) {
              $this.actualLog_138x2s$(level, 'sceIoRmdir:' + toString(this.local$path));
            }

            this.state_0 = 2;
            this.result_0 = this.$this.resolve_0(this.local$path).delete(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoMkdir_pdl1vj$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoMkdir_pdl1vj$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoMkdir_pdl1vj$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$sceIoMkdir_pdl1vj$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoMkdir_pdl1vj$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoMkdir_pdl1vj$.prototype.constructor = Coroutine$sceIoMkdir_pdl1vj$;
  Coroutine$sceIoMkdir_pdl1vj$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $this = this.$this.logger;
            var level = PspLogLevel.ERROR;
            if (level.index <= $this.processedLevel.index) {
              $this.actualLog_138x2s$(level, 'sceIoMkdir:' + toString(this.local$path));
            }

            this.state_0 = 2;
            this.result_0 = this.$this.resolve_0(this.local$path).mkdir_uzmvfn$([], this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoGetDevType_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(146633588);
  };
  IoFileMgrForUser.prototype.sceIoWriteAsync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(262974233);
  };
  IoFileMgrForUser.prototype.sceIoLseek32Async_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(456678799);
  };
  IoFileMgrForUser.prototype.sceIoPollAsync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(844229206);
  };
  IoFileMgrForUser.prototype.sceIoWaitAsyncCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(903599942);
  };
  IoFileMgrForUser.prototype.sceIoGetFdList_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1546379980);
  };
  IoFileMgrForUser.prototype.sceIoIoctl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1667441737);
  };
  IoFileMgrForUser.prototype.sceIoUnassign_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1829283953);
  };
  IoFileMgrForUser.prototype.sceIoLseekAsync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1907465847);
  };
  IoFileMgrForUser.prototype.sceIoRename_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2005992352);
  };
  IoFileMgrForUser.prototype.sceIoOpenAsync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1985308410, 0));
  };
  IoFileMgrForUser.prototype.sceIoReadAsync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1598707774, 0));
  };
  IoFileMgrForUser.prototype.sceIoSetAsyncCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1591081708, 0));
  };
  IoFileMgrForUser.prototype.sceIoSync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1416215681, 0));
  };
  IoFileMgrForUser.prototype.sceIoChangeAsyncPriority_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1298959745, 0));
  };
  IoFileMgrForUser.prototype.sceIoAssign_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1297733439, 0));
  };
  IoFileMgrForUser.prototype.sceIoChstat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1196998412, 0));
  };
  IoFileMgrForUser.prototype.sceIoGetAsyncStat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-888801066, 0));
  };
  IoFileMgrForUser.prototype.sceIoWaitAsync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-499192781, 0));
  };
  IoFileMgrForUser.prototype.sceIoCancel_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-390306447, 0));
  };
  IoFileMgrForUser.prototype.sceIoIoctlAsync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-379977429, 0));
  };
  IoFileMgrForUser.prototype.sceIoRemove_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-226845615, 0));
  };
  IoFileMgrForUser.prototype.sceIoCloseAsync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-10927946, 0));
  };
  function IoFileMgrForUser$registerModule$lambda(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda;
  Coroutine$IoFileMgrForUser$registerModule$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoDevctl_cza7g9$(this.local$$receiver.str, this.local$$receiver.int, this.local$$receiver.ptr, this.local$$receiver.int, this.local$$receiver.ptr, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_0(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_0(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_0(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_0.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_0;
  Coroutine$IoFileMgrForUser$registerModule$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoOpen_hs9j5r$(this.local$$receiver.str, this.local$$receiver.int, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_1(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_1(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_1(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_1.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_1;
  Coroutine$IoFileMgrForUser$registerModule$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoLseek32_qt1dr2$(this.local$$receiver.int, this.local$$receiver.int, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_2(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_2(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_2(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_2.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_2;
  Coroutine$IoFileMgrForUser$registerModule$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoLseek_6bixgx$(this.local$$receiver.int, this.local$$receiver.long, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_3(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_3(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_3(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_3.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_3;
  Coroutine$IoFileMgrForUser$registerModule$lambda_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoWrite_xjseqw$(this.local$$receiver.int, this.local$$receiver.ptr, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_4(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_4(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_4(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_4.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_4.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_4.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_4;
  Coroutine$IoFileMgrForUser$registerModule$lambda_4.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoRead_xjseqw$(this.local$$receiver.int, this.local$$receiver.ptr, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_5(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_5(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_5(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_5.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_5.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_5.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_5;
  Coroutine$IoFileMgrForUser$registerModule$lambda_5.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoClose_za3lpa$(this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_6(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_6(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_6(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_6.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_6.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_6.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_6;
  Coroutine$IoFileMgrForUser$registerModule$lambda_6.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoGetstat_ejruhl$(this.local$$receiver.str, this.local$$receiver.ptr, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_7(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_7(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_7(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_7.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_7.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_7.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_7;
  Coroutine$IoFileMgrForUser$registerModule$lambda_7.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoDopen_pdl1vj$(this.local$$receiver.str, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_8(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_8(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_8(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_8.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_8.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_8.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_8;
  Coroutine$IoFileMgrForUser$registerModule$lambda_8.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoDread_o62i3q$(this.local$$receiver.int, this.local$$receiver.ptr, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_9(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_9(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_9(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_9.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_9.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_9.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_9;
  Coroutine$IoFileMgrForUser$registerModule$lambda_9.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoDclose_za3lpa$(this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_10(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_10(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_10(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_10.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_10.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_10.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_10;
  Coroutine$IoFileMgrForUser$registerModule$lambda_10.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoMkdir_pdl1vj$(this.local$$receiver.str, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_11(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_11(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_11(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_11.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_11.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_11.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_11;
  Coroutine$IoFileMgrForUser$registerModule$lambda_11.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoRmdir_pdl1vj$(this.local$$receiver.str, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_12(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_12(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_12(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_12.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_12.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_12.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_12;
  Coroutine$IoFileMgrForUser$registerModule$lambda_12.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoChdir_pdl1vj$(this.local$$receiver.str, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_13(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoGetDevType_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_14(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoWriteAsync_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_15(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoLseek32Async_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_16(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoPollAsync_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_17(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoWaitAsyncCB_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_18(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoGetFdList_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_19(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoIoctl_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_20(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoUnassign_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_21(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoLseekAsync_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_22(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoRename_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_23(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoOpenAsync_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_24(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoReadAsync_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_25(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoSetAsyncCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_26(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoSync_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_27(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoChangeAsyncPriority_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_28(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoAssign_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_29(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoChstat_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_30(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoGetAsyncStat_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_31(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoWaitAsync_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_32(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoCancel_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_33(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoIoctlAsync_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_34(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoRemove_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_35(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoCloseAsync_xt3zvs$(it);
      return Unit;
    };
  }
  IoFileMgrForUser.prototype.registerModule = function () {
    this.registerFunctionSuspendInt_q1rm4a$('sceIoDevctl', Kotlin.Long.fromInt(1425406737), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoOpen', Kotlin.Long.fromInt(278876348), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_0(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoLseek32', Kotlin.Long.fromInt(1754673956), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_1(this));
    this.registerFunctionSuspendLong_q4vilx$('sceIoLseek', Kotlin.Long.fromInt(669722552), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_2(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoWrite', Kotlin.Long.fromInt(1122763692), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_3(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoRead', Kotlin.Long.fromInt(1784909187), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_4(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoClose', new Kotlin.Long(-2129900605, 0), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_5(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoGetstat', new Kotlin.Long(-1393998104, 0), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_6(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoDopen', new Kotlin.Long(-1298276452, 0), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_7(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoDread', new Kotlin.Long(-471138228, 0), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_8(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoDclose', new Kotlin.Long(-351722391, 0), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_9(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoMkdir', Kotlin.Long.fromInt(111607812), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_10(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoRmdir', Kotlin.Long.fromInt(286770783), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_11(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoChdir', Kotlin.Long.fromInt(1442083197), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceIoGetDevType', Kotlin.Long.fromInt(146633588), 150, void 0, IoFileMgrForUser$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceIoWriteAsync', Kotlin.Long.fromInt(262974233), 150, void 0, IoFileMgrForUser$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceIoLseek32Async', Kotlin.Long.fromInt(456678799), 150, void 0, IoFileMgrForUser$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceIoPollAsync', Kotlin.Long.fromInt(844229206), 150, void 0, IoFileMgrForUser$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceIoWaitAsyncCB', Kotlin.Long.fromInt(903599942), 150, void 0, IoFileMgrForUser$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceIoGetFdList', Kotlin.Long.fromInt(1546379980), 150, void 0, IoFileMgrForUser$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceIoIoctl', Kotlin.Long.fromInt(1667441737), 150, void 0, IoFileMgrForUser$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceIoUnassign', Kotlin.Long.fromInt(1829283953), 150, void 0, IoFileMgrForUser$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceIoLseekAsync', Kotlin.Long.fromInt(1907465847), 150, void 0, IoFileMgrForUser$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceIoRename', Kotlin.Long.fromInt(2005992352), 150, void 0, IoFileMgrForUser$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceIoOpenAsync', new Kotlin.Long(-1985308410, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceIoReadAsync', new Kotlin.Long(-1598707774, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('sceIoSetAsyncCallback', new Kotlin.Long(-1591081708, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('sceIoSync', new Kotlin.Long(-1416215681, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('sceIoChangeAsyncPriority', new Kotlin.Long(-1298959745, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('sceIoAssign', new Kotlin.Long(-1297733439, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('sceIoChstat', new Kotlin.Long(-1196998412, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('sceIoGetAsyncStat', new Kotlin.Long(-888801066, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('sceIoWaitAsync', new Kotlin.Long(-499192781, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('sceIoCancel', new Kotlin.Long(-390306447, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_32(this));
    this.registerFunctionRaw_gh35x6$('sceIoIoctlAsync', new Kotlin.Long(-379977429, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_33(this));
    this.registerFunctionRaw_gh35x6$('sceIoRemove', new Kotlin.Long(-226845615, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_34(this));
    this.registerFunctionRaw_gh35x6$('sceIoCloseAsync', new Kotlin.Long(-10927946, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_35(this));
  };
  IoFileMgrForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IoFileMgrForUser',
    interfaces: [SceModule]
  };
  function LoadExecForUser(emulator) {
    SceModule.call(this, emulator, 'LoadExecForUser', 1073807377, 'loadexec_02g.prx', 'sceLoadExec');
  }
  LoadExecForUser.prototype.sceKernelExitGame_6r5tao$ = function (currentThread) {
    var $this = this.logger;
    var level = PspLogLevel.INFO;
    if (level.index <= $this.processedLevel.index) {
      $this.actualLog_138x2s$(level, "sceKernelExitGame: '" + currentThread.name + "'");
    }
    var $this_0 = this.logger;
    var level_0 = PspLogLevel.INFO;
    if (level_0.index <= $this_0.processedLevel.index) {
      $this_0.actualLog_138x2s$(level_0, getPrintInstructionAt(get_mem(this), currentThread.state.PC));
    }
    var $this_1 = this.logger;
    var level_1 = PspLogLevel.INFO;
    if (level_1.index <= $this_1.processedLevel.index) {
      $this_1.actualLog_138x2s$(level_1, getPrintInstructionAt(get_mem(this), get_RA(currentThread.state)));
    }
    get_threadManager(this).stopAllThreads();
  };
  LoadExecForUser.prototype.sceKernelExitGameWithStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(717854027);
  };
  LoadExecForUser.prototype.LoadExecForUser_362A956B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(908760427);
  };
  LoadExecForUser.prototype.sceKernelRegisterExitCallback_za3lpa$ = function (callbackId) {
    println('Unimplemented: sceKernelRegisterExitCallback: ' + callbackId);
    return 0;
  };
  LoadExecForUser.prototype.LoadExecForUser_8ADA38D3_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1965410093, 0));
  };
  LoadExecForUser.prototype.sceKernelLoadExec_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1120989036, 0));
  };
  LoadExecForUser.prototype.LoadExecForUser_D1FB50DC_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-772058916, 0));
  };
  function LoadExecForUser$registerModule$lambda(this$LoadExecForUser) {
    return function ($receiver, it) {
      return this$LoadExecForUser.sceKernelRegisterExitCallback_za3lpa$($receiver.int);
    };
  }
  function LoadExecForUser$registerModule$lambda_0(this$LoadExecForUser) {
    return function ($receiver, it) {
      this$LoadExecForUser.sceKernelExitGame_6r5tao$($receiver.thread);
      return Unit;
    };
  }
  function LoadExecForUser$registerModule$lambda_1(this$LoadExecForUser) {
    return function (it) {
      this$LoadExecForUser.sceKernelExitGameWithStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadExecForUser$registerModule$lambda_2(this$LoadExecForUser) {
    return function (it) {
      this$LoadExecForUser.LoadExecForUser_362A956B_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadExecForUser$registerModule$lambda_3(this$LoadExecForUser) {
    return function (it) {
      this$LoadExecForUser.LoadExecForUser_8ADA38D3_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadExecForUser$registerModule$lambda_4(this$LoadExecForUser) {
    return function (it) {
      this$LoadExecForUser.sceKernelLoadExec_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadExecForUser$registerModule$lambda_5(this$LoadExecForUser) {
    return function (it) {
      this$LoadExecForUser.LoadExecForUser_D1FB50DC_xt3zvs$(it);
      return Unit;
    };
  }
  LoadExecForUser.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceKernelRegisterExitCallback', Kotlin.Long.fromInt(1254455619), 150, void 0, LoadExecForUser$registerModule$lambda(this));
    this.registerFunctionVoid_dc3d86$('sceKernelExitGame', Kotlin.Long.fromInt(89598559), 150, void 0, LoadExecForUser$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceKernelExitGameWithStatus', Kotlin.Long.fromInt(717854027), 150, void 0, LoadExecForUser$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('LoadExecForUser_362A956B', Kotlin.Long.fromInt(908760427), 150, void 0, LoadExecForUser$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('LoadExecForUser_8ADA38D3', new Kotlin.Long(-1965410093, 0), 150, void 0, LoadExecForUser$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLoadExec', new Kotlin.Long(-1120989036, 0), 150, void 0, LoadExecForUser$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('LoadExecForUser_D1FB50DC', new Kotlin.Long(-772058916, 0), 150, void 0, LoadExecForUser$registerModule$lambda_5(this));
  };
  LoadExecForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LoadExecForUser',
    interfaces: [SceModule]
  };
  function ModuleMgrForUser(emulator) {
    SceModule.call(this, emulator, 'ModuleMgrForUser', 1073807377, 'modulemgr.prx', 'sceModuleManager');
  }
  ModuleMgrForUser.prototype.sceKernelLoadModuleBufferMs_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(295061294);
  };
  ModuleMgrForUser.prototype.sceKernelLoadModuleBufferApp_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(619447873);
  };
  ModuleMgrForUser.prototype.sceKernelUnloadModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(772346282);
  };
  ModuleMgrForUser.prototype.sceKernelStartModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1357955564);
  };
  ModuleMgrForUser.prototype.sceKernelGetModuleIdList_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1682150882);
  };
  ModuleMgrForUser.prototype.sceKernelLoadModuleMs_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1896833461);
  };
  ModuleMgrForUser.prototype.sceKernelQueryModuleInfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1955380953);
  };
  ModuleMgrForUser.prototype.ModuleMgrForUser_8F2DF740_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1892812992, 0));
  };
  ModuleMgrForUser.prototype.sceKernelLoadModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1753357434, 0));
  };
  ModuleMgrForUser.prototype.sceKernelLoadModuleByID_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1208719848, 0));
  };
  ModuleMgrForUser.prototype.sceKernelStopUnloadSelfModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-870500711, 0));
  };
  ModuleMgrForUser.prototype.sceKernelStopModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-771778518, 0));
  };
  ModuleMgrForUser.prototype.sceKernelGetModuleGPByAddress_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-755250857, 0));
  };
  ModuleMgrForUser.prototype.sceKernelSelfStopUnloadModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-696915016, 0));
  };
  ModuleMgrForUser.prototype.sceKernelGetModuleIdByAddress_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-659082969, 0));
  };
  ModuleMgrForUser.prototype.ModuleMgrForUser_E4C4211C_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-456908516, 0));
  };
  ModuleMgrForUser.prototype.sceKernelGetModuleId_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-257793131, 0));
  };
  ModuleMgrForUser.prototype.ModuleMgrForUser_F2D8D1B4_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-220671564, 0));
  };
  ModuleMgrForUser.prototype.sceKernelLoadModuleBufferUsbWlan_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-114860648, 0));
  };
  ModuleMgrForUser.prototype.ModuleMgrForUser_FBE27467_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-69045145, 0));
  };
  ModuleMgrForUser.prototype.ModuleMgrForUser_FEF27DC1_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-17662527, 0));
  };
  function ModuleMgrForUser$registerModule$lambda(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelLoadModuleBufferMs_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_0(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelLoadModuleBufferApp_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_1(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelUnloadModule_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_2(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelStartModule_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_3(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelGetModuleIdList_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_4(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelLoadModuleMs_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_5(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelQueryModuleInfo_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_6(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.ModuleMgrForUser_8F2DF740_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_7(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelLoadModule_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_8(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelLoadModuleByID_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_9(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelStopUnloadSelfModule_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_10(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelStopModule_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_11(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelGetModuleGPByAddress_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_12(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelSelfStopUnloadModule_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_13(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelGetModuleIdByAddress_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_14(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.ModuleMgrForUser_E4C4211C_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_15(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelGetModuleId_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_16(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.ModuleMgrForUser_F2D8D1B4_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_17(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelLoadModuleBufferUsbWlan_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_18(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.ModuleMgrForUser_FBE27467_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_19(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.ModuleMgrForUser_FEF27DC1_xt3zvs$(it);
      return Unit;
    };
  }
  ModuleMgrForUser.prototype.registerModule = function () {
    this.registerFunctionRaw_gh35x6$('sceKernelLoadModuleBufferMs', Kotlin.Long.fromInt(295061294), 150, void 0, ModuleMgrForUser$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLoadModuleBufferApp', Kotlin.Long.fromInt(619447873), 150, void 0, ModuleMgrForUser$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUnloadModule', Kotlin.Long.fromInt(772346282), 150, void 0, ModuleMgrForUser$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStartModule', Kotlin.Long.fromInt(1357955564), 150, void 0, ModuleMgrForUser$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetModuleIdList', Kotlin.Long.fromInt(1682150882), 150, void 0, ModuleMgrForUser$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLoadModuleMs', Kotlin.Long.fromInt(1896833461), 150, void 0, ModuleMgrForUser$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceKernelQueryModuleInfo', Kotlin.Long.fromInt(1955380953), 150, void 0, ModuleMgrForUser$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('ModuleMgrForUser_8F2DF740', new Kotlin.Long(-1892812992, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLoadModule', new Kotlin.Long(-1753357434, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLoadModuleByID', new Kotlin.Long(-1208719848, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStopUnloadSelfModule', new Kotlin.Long(-870500711, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStopModule', new Kotlin.Long(-771778518, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetModuleGPByAddress', new Kotlin.Long(-755250857, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSelfStopUnloadModule', new Kotlin.Long(-696915016, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetModuleIdByAddress', new Kotlin.Long(-659082969, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('ModuleMgrForUser_E4C4211C', new Kotlin.Long(-456908516, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetModuleId', new Kotlin.Long(-257793131, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('ModuleMgrForUser_F2D8D1B4', new Kotlin.Long(-220671564, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLoadModuleBufferUsbWlan', new Kotlin.Long(-114860648, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('ModuleMgrForUser_FBE27467', new Kotlin.Long(-69045145, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('ModuleMgrForUser_FEF27DC1', new Kotlin.Long(-17662527, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_19(this));
  };
  ModuleMgrForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ModuleMgrForUser',
    interfaces: [SceModule]
  };
  function StdioForUser(emulator) {
    SceModule.call(this, emulator, 'StdioForUser', 1073807377, 'iofilemgr.prx', 'sceIOFileManager');
    var $receiver = this.fileDescriptors.alloc();
    $receiver.stream = toAsyncStream(new StdioForUser$StdioStream(1));
    $receiver.file = asVfsFile($receiver.stream, '/dev/stdin');
    this.stdin_0 = $receiver;
    var $receiver_0 = this.fileDescriptors.alloc();
    $receiver_0.stream = toAsyncStream(new StdioForUser$StdioStream(2));
    $receiver_0.file = asVfsFile($receiver_0.stream, '/dev/stdout');
    this.stdout_0 = $receiver_0;
    var $receiver_1 = this.fileDescriptors.alloc();
    $receiver_1.stream = toAsyncStream(new StdioForUser$StdioStream(3));
    $receiver_1.file = asVfsFile($receiver_1.stream, '/dev/stderr');
    this.stderr_0 = $receiver_1;
  }
  Object.defineProperty(StdioForUser.prototype, 'fileDescriptors', {
    get: function () {
      return this.emulator.fileManager.fileDescriptors;
    }
  });
  function StdioForUser$StdioStream(id) {
    AsyncStreamBase.call(this);
    this.id = id;
  }
  StdioForUser$StdioStream.prototype.close = function (continuation) {
    return Unit;
  };
  StdioForUser$StdioStream.prototype.getLength = function (continuation) {
    return Kotlin.Long.ZERO;
  };
  StdioForUser$StdioStream.prototype.setLength_s8cxhz$ = function (value, continuation) {
    return Unit;
  };
  StdioForUser$StdioStream.prototype.read_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    throw new NotImplementedError_init('An operation is not implemented: ' + 'Not implemented StdioStream.read');
  };
  StdioForUser$StdioStream.prototype.write_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    print(toString_0(readByteArray(buffer, offset, len), lang.UTF8));
  };
  StdioForUser$StdioStream.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StdioStream',
    interfaces: [AsyncStreamBase]
  };
  StdioForUser.prototype.sceKernelStdin = function () {
    return this.stdin_0.id;
  };
  StdioForUser.prototype.sceKernelStdout = function () {
    return this.stdout_0.id;
  };
  StdioForUser.prototype.sceKernelStderr = function () {
    return this.stderr_0.id;
  };
  StdioForUser.prototype.sceKernelStdioLseek_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(213583217);
  };
  StdioForUser.prototype.sceKernelStdioRead_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(810865784);
  };
  StdioForUser.prototype.sceKernelRegisterStdoutPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1127059292);
  };
  StdioForUser.prototype.sceKernelRegisterStderrPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1870233091);
  };
  StdioForUser.prototype.sceKernelStdioOpen_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1840596383, 0));
  };
  StdioForUser.prototype.sceKernelStdioClose_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1660543975, 0));
  };
  StdioForUser.prototype.sceKernelStdioWrite_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1548144165, 0));
  };
  StdioForUser.prototype.sceKernelStdioSendChar_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1536719415, 0));
  };
  function StdioForUser$registerModule$lambda(this$StdioForUser) {
    return function ($receiver, it) {
      return this$StdioForUser.sceKernelStdin();
    };
  }
  function StdioForUser$registerModule$lambda_0(this$StdioForUser) {
    return function ($receiver, it) {
      return this$StdioForUser.sceKernelStdout();
    };
  }
  function StdioForUser$registerModule$lambda_1(this$StdioForUser) {
    return function ($receiver, it) {
      return this$StdioForUser.sceKernelStderr();
    };
  }
  function StdioForUser$registerModule$lambda_2(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelStdioLseek_xt3zvs$(it);
      return Unit;
    };
  }
  function StdioForUser$registerModule$lambda_3(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelStdioRead_xt3zvs$(it);
      return Unit;
    };
  }
  function StdioForUser$registerModule$lambda_4(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelRegisterStdoutPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function StdioForUser$registerModule$lambda_5(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelRegisterStderrPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function StdioForUser$registerModule$lambda_6(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelStdioOpen_xt3zvs$(it);
      return Unit;
    };
  }
  function StdioForUser$registerModule$lambda_7(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelStdioClose_xt3zvs$(it);
      return Unit;
    };
  }
  function StdioForUser$registerModule$lambda_8(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelStdioWrite_xt3zvs$(it);
      return Unit;
    };
  }
  function StdioForUser$registerModule$lambda_9(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelStdioSendChar_xt3zvs$(it);
      return Unit;
    };
  }
  StdioForUser.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceKernelStdin', Kotlin.Long.fromInt(388837742), 150, void 0, StdioForUser$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceKernelStdout', new Kotlin.Long(-1497713943, 0), 150, void 0, StdioForUser$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceKernelStderr', new Kotlin.Long(-141842166, 0), 150, void 0, StdioForUser$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStdioLseek', Kotlin.Long.fromInt(213583217), 150, void 0, StdioForUser$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStdioRead', Kotlin.Long.fromInt(810865784), 150, void 0, StdioForUser$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceKernelRegisterStdoutPipe', Kotlin.Long.fromInt(1127059292), 150, void 0, StdioForUser$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceKernelRegisterStderrPipe', Kotlin.Long.fromInt(1870233091), 150, void 0, StdioForUser$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStdioOpen', new Kotlin.Long(-1840596383, 0), 150, void 0, StdioForUser$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStdioClose', new Kotlin.Long(-1660543975, 0), 150, void 0, StdioForUser$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStdioWrite', new Kotlin.Long(-1548144165, 0), 150, void 0, StdioForUser$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStdioSendChar', new Kotlin.Long(-1536719415, 0), 150, void 0, StdioForUser$registerModule$lambda_9(this));
  };
  StdioForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StdioForUser',
    interfaces: [SceModule]
  };
  function SysMemUserForUser(emulator) {
    SceModule.call(this, emulator, 'SysMemUserForUser', 1073741841, 'sysmem.prx', 'sceSystemMemoryManager');
    this.partitions = new ResourceList('Partition', SysMemUserForUser$partitions$lambda);
  }
  function SysMemUserForUser$Partition(id) {
    this.id_1jexkx$_0 = id;
    this.part_c9wul3$_0 = this.part_c9wul3$_0;
  }
  Object.defineProperty(SysMemUserForUser$Partition.prototype, 'id', {
    get: function () {
      return this.id_1jexkx$_0;
    }
  });
  Object.defineProperty(SysMemUserForUser$Partition.prototype, 'part', {
    get: function () {
      if (this.part_c9wul3$_0 == null)
        return throwUPAE('part');
      return this.part_c9wul3$_0;
    },
    set: function (part) {
      this.part_c9wul3$_0 = part;
    }
  });
  SysMemUserForUser$Partition.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Partition',
    interfaces: [ResourceItem]
  };
  SysMemUserForUser.prototype.sceKernelAllocPartitionMemory_jvlrdv$ = function (partitionId, name, anchor, size, address) {
    var tmp$;
    this.logger.info_61zpoe$('WIP: sceKernelAllocPartitionMemory(' + partitionId + ', ' + toString(name) + ', ' + anchor + ', ' + size + ', ' + get_hex(address) + ')');
    try {
      var parentPartition = (tmp$ = get_memoryManager(this).memoryPartitionsUid.get_11rb$(partitionId)) != null ? tmp$ : invalidOp('Invalid partition ' + partitionId);
      var allocatedPartition = parentPartition.allocate_sin65v$(size, MemoryAnchor$Companion_getInstance().invoke_za3lpa$(anchor), address, name != null ? name : 'block');
      var $receiver = this.partitions.alloc();
      $receiver.part = allocatedPartition;
      return $receiver.id;
    }
     catch (e) {
      if (Kotlin.isType(e, OutOfMemoryError)) {
        return -1;
      }
       else
        throw e;
    }
  };
  SysMemUserForUser.prototype.sceKernelGetBlockHeadAddr_za3lpa$ = function (partitionId) {
    var partition = this.partitions.get_za3lpa$(partitionId);
    return numberToInt(partition.part.low);
  };
  SysMemUserForUser.prototype.sceKernelMaxFreeMemSize = function () {
    return get_memoryManager(this).userPartition.getMaxContiguousFreeMemoryInt();
  };
  SysMemUserForUser.prototype.SysMemUserForUser_057E7380_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(92173184);
  };
  SysMemUserForUser.prototype.sceKernelPrintf_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(329624559);
  };
  SysMemUserForUser.prototype.sceKernelQueryMemoryInfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(708727424);
  };
  SysMemUserForUser.prototype.SysMemUserForUser_315AD3A0_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(828036000);
  };
  SysMemUserForUser.prototype.SysMemUserForUser_342061E5_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(874537445);
  };
  SysMemUserForUser.prototype.sceKernelDevkitVersion_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1070181994);
  };
  SysMemUserForUser.prototype.SysMemUserForUser_50F61D8A_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1358306698);
  };
  SysMemUserForUser.prototype.sceKernelSetCompiledSdkVersion_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1972488155);
  };
  SysMemUserForUser.prototype.SysMemUserForUser_91DE343C_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1847708612, 0));
  };
  SysMemUserForUser.prototype.SysMemUserForUser_A6848DF8_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1501262344, 0));
  };
  SysMemUserForUser.prototype.SysMemUserForUser_ACBD88CA_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1396864822, 0));
  };
  SysMemUserForUser.prototype.sceKernelFreePartitionMemory_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1227481854, 0));
  };
  SysMemUserForUser.prototype.SysMemUserForUser_D8DE5C1E_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-656516066, 0));
  };
  SysMemUserForUser.prototype.SysMemUserForUser_DB83A952_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-612128430, 0));
  };
  SysMemUserForUser.prototype.SysMemUserForUser_EBD5C3E6_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-338312218, 0));
  };
  SysMemUserForUser.prototype.sceKernelSetCompilerVersion_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-142772277, 0));
  };
  SysMemUserForUser.prototype.sceKernelTotalFreeMemSize_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-115739096, 0));
  };
  SysMemUserForUser.prototype.sceKernelGetCompiledSdkVersion_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-65976973, 0));
  };
  SysMemUserForUser.prototype.SysMemUserForUser_FE707FDF_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-26181665, 0));
  };
  function SysMemUserForUser$registerModule$lambda(this$SysMemUserForUser) {
    return function ($receiver, it) {
      return this$SysMemUserForUser.sceKernelAllocPartitionMemory_jvlrdv$($receiver.int, $receiver.str, $receiver.int, $receiver.int, $receiver.int);
    };
  }
  function SysMemUserForUser$registerModule$lambda_0(this$SysMemUserForUser) {
    return function ($receiver, it) {
      return this$SysMemUserForUser.sceKernelGetBlockHeadAddr_za3lpa$($receiver.int);
    };
  }
  function SysMemUserForUser$registerModule$lambda_1(this$SysMemUserForUser) {
    return function ($receiver, it) {
      return this$SysMemUserForUser.sceKernelMaxFreeMemSize();
    };
  }
  function SysMemUserForUser$registerModule$lambda_2(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_057E7380_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_3(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.sceKernelPrintf_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_4(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.sceKernelQueryMemoryInfo_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_5(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_315AD3A0_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_6(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_342061E5_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_7(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.sceKernelDevkitVersion_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_8(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_50F61D8A_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_9(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.sceKernelSetCompiledSdkVersion_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_10(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_91DE343C_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_11(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_A6848DF8_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_12(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_ACBD88CA_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_13(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.sceKernelFreePartitionMemory_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_14(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_D8DE5C1E_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_15(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_DB83A952_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_16(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_EBD5C3E6_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_17(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.sceKernelSetCompilerVersion_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_18(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.sceKernelTotalFreeMemSize_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_19(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.sceKernelGetCompiledSdkVersion_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_20(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_FE707FDF_xt3zvs$(it);
      return Unit;
    };
  }
  SysMemUserForUser.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceKernelAllocPartitionMemory', Kotlin.Long.fromInt(595443023), 150, void 0, SysMemUserForUser$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceKernelGetBlockHeadAddr', new Kotlin.Long(-1650828383, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceKernelMaxFreeMemSize', new Kotlin.Long(-1567493881, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_057E7380', Kotlin.Long.fromInt(92173184), 150, void 0, SysMemUserForUser$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceKernelPrintf', Kotlin.Long.fromInt(329624559), 150, void 0, SysMemUserForUser$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceKernelQueryMemoryInfo', Kotlin.Long.fromInt(708727424), 150, void 0, SysMemUserForUser$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_315AD3A0', Kotlin.Long.fromInt(828036000), 150, void 0, SysMemUserForUser$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_342061E5', Kotlin.Long.fromInt(874537445), 150, void 0, SysMemUserForUser$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDevkitVersion', Kotlin.Long.fromInt(1070181994), 150, void 0, SysMemUserForUser$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_50F61D8A', Kotlin.Long.fromInt(1358306698), 150, void 0, SysMemUserForUser$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetCompiledSdkVersion', Kotlin.Long.fromInt(1972488155), 150, void 0, SysMemUserForUser$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_91DE343C', new Kotlin.Long(-1847708612, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_A6848DF8', new Kotlin.Long(-1501262344, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_ACBD88CA', new Kotlin.Long(-1396864822, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceKernelFreePartitionMemory', new Kotlin.Long(-1227481854, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_D8DE5C1E', new Kotlin.Long(-656516066, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_DB83A952', new Kotlin.Long(-612128430, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_EBD5C3E6', new Kotlin.Long(-338312218, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetCompilerVersion', new Kotlin.Long(-142772277, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceKernelTotalFreeMemSize', new Kotlin.Long(-115739096, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetCompiledSdkVersion', new Kotlin.Long(-65976973, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_FE707FDF', new Kotlin.Long(-26181665, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_20(this));
  };
  function SysMemUserForUser$partitions$lambda(it) {
    return new SysMemUserForUser$Partition(it);
  }
  SysMemUserForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SysMemUserForUser',
    interfaces: [SceModule]
  };
  function ThreadManForUser(emulator) {
    SceModule.call(this, emulator, 'ThreadManForUser', 1073807377, 'threadman.prx', 'sceThreadManager');
    this.eventFlags = new ResourceList('EventFlag', ThreadManForUser$eventFlags$lambda);
  }
  ThreadManForUser.prototype.sceKernelCreateThread_4ssxzt$ = function (name, entryPoint, initPriority, stackSize, attributes, optionPtr) {
    var thread = get_threadManager(this).create_7jlznu$(name != null ? name : 'unknown', entryPoint, initPriority, stackSize, attributes, optionPtr);
    return thread.id;
  };
  ThreadManForUser.prototype.sceKernelStartThread_uv9tso$ = function (currentThread, threadId, userDataLength, userDataPtr) {
    var thread = get_threadManager(this).getById_za3lpa$(threadId);
    if (get_isNotNull(userDataPtr)) {
      var localUserDataPtr = thread.putDataInStack_fqrh44$(readBytes_1(userDataPtr, userDataLength));
      thread.state.r4 = userDataLength;
      thread.state.r5 = localUserDataPtr.addr;
    }
     else {
      thread.state.r4 = 0;
      thread.state.r5 = 0;
    }
    set_GP(thread.state, get_GP(currentThread.state));
    thread.start();
    return 0;
  };
  ThreadManForUser.prototype._sceKernelSleepThread_ctrw0n$ = function (currentThread, cb) {
    currentThread.suspend_p514vg$(WaitObject$SLEEP_getInstance(), cb);
    return 0;
  };
  ThreadManForUser.prototype.sceKernelSleepThread_6r5tao$ = function (currentThread) {
    return this._sceKernelSleepThread_ctrw0n$(currentThread, false);
  };
  ThreadManForUser.prototype.sceKernelSleepThreadCB_6r5tao$ = function (currentThread) {
    return this._sceKernelSleepThread_ctrw0n$(currentThread, true);
  };
  ThreadManForUser.prototype.sceKernelGetThreadCurrentPriority_6r5tao$ = function (thread) {
    return thread.priority;
  };
  ThreadManForUser.prototype.sceKernelGetSystemTimeWide = function () {
    return get_rtc(this).getTimeInMicroseconds();
  };
  ThreadManForUser.prototype.sceKernelGetSystemTimeLow = function () {
    return get_rtc(this).getTimeInMicroseconds().toInt();
  };
  ThreadManForUser.prototype.sceKernelCreateCallback_z7cldz$ = function (name, func, arg) {
    var callback = get_callbackManager(this).create_6bdwcc$(name != null ? name : 'callback', func, arg);
    return callback.id;
  };
  ThreadManForUser.prototype.sceKernelCreateEventFlag_2pq1yf$ = function (name, attributes, bitPattern, optionsPtr) {
    var $receiver = this.eventFlags.alloc();
    $receiver.name = name != null ? name : 'eventFlag';
    $receiver.attributes = attributes;
    $receiver.bitPattern = bitPattern;
    $receiver.optionsPtr = optionsPtr;
    return $receiver.id;
  };
  ThreadManForUser.prototype._sceKernelDelayThread_s7iag9$ = function (thread, microseconds, cb) {
    thread.suspend_p514vg$(new WaitObject$TIME(get_rtc(this).getTimeInMicroseconds().add(Kotlin.Long.fromInt(microseconds))), cb);
    return 0;
  };
  ThreadManForUser.prototype.sceKernelDelayThreadCB_3bjp42$ = function (thread, microseconds) {
    return this._sceKernelDelayThread_s7iag9$(thread, microseconds, true);
  };
  ThreadManForUser.prototype.sceKernelDelayThread_3bjp42$ = function (thread, microseconds) {
    return this._sceKernelDelayThread_s7iag9$(thread, microseconds, false);
  };
  ThreadManForUser.prototype._sceKernelWaitThreadEnd_cyzw2l$ = function (currentThread, threadId, timeout, cb) {
    var thread = get_threadManager(this).getById_za3lpa$(threadId);
    currentThread.suspend_p514vg$(new WaitObject$PROMISE(waitOnePromise(thread.onEnd)), cb);
    return 0;
  };
  ThreadManForUser.prototype.sceKernelWaitThreadEnd_3b407q$ = function (currentThread, threadId, timeout) {
    return this._sceKernelWaitThreadEnd_cyzw2l$(currentThread, threadId, timeout, false);
  };
  ThreadManForUser.prototype.sceKernelWaitThreadEndCB_3b407q$ = function (currentThread, threadId, timeout) {
    return this._sceKernelWaitThreadEnd_cyzw2l$(currentThread, threadId, timeout, true);
  };
  ThreadManForUser.prototype.sceKernelReferThreadStatus_o62i3q$ = function (threadId, out) {
    this.logger.fatal_61zpoe$('Not implemented: sceKernelReferThreadStatus');
    return 0;
  };
  ThreadManForUser.prototype.sceKernelGetThreadId_6r5tao$ = function (thread) {
    return thread.id;
  };
  ThreadManForUser.prototype.sceKernelGetVTimerTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(55218719);
  };
  ThreadManForUser.prototype.sceKernelRegisterThreadEventHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(202403411);
  };
  ThreadManForUser.prototype.sceKernelPollMbx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(226586986);
  };
  ThreadManForUser.prototype.sceKernelTryLockMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(232575689);
  };
  ThreadManForUser.prototype._sceKernelReturnFromTimerHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(244480749);
  };
  ThreadManForUser.prototype.sceKernelUSec2SysClock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(286125210);
  };
  ThreadManForUser.prototype.sceKernelDelaySysClockThreadCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(293726563);
  };
  ThreadManForUser.prototype.sceKernelReceiveMbx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(405144948);
  };
  ThreadManForUser.prototype.sceKernelCreateLwMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(433058117);
  };
  ThreadManForUser.prototype.sceKernelDonateWakeupThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(452545795);
  };
  ThreadManForUser.prototype.sceKernelCancelVpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(490150794);
  };
  ThreadManForUser.prototype.sceKernelSetEventFlag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(531716658);
  };
  ThreadManForUser.prototype.sceKernelCreateVTimer_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(553645408);
  };
  ThreadManForUser.prototype.sceKernelResumeDispatchThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(669134530);
  };
  ThreadManForUser.prototype.sceKernelDeleteSema_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(683034780);
  };
  ThreadManForUser.prototype.sceKernelGetCallbackCount_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(708658431);
  };
  ThreadManForUser.prototype.sceKernelReleaseWaitThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(741662803);
  };
  ThreadManForUser.prototype.sceKernelPollEventFlag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(821905648);
  };
  ThreadManForUser.prototype.ThreadManForUser_31327F19_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(825392921);
  };
  ThreadManForUser.prototype.sceKernelWaitEventFlagCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(848057450);
  };
  ThreadManForUser.prototype.sceKernelDeleteVTimer_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(848272978);
  };
  ThreadManForUser.prototype.sceKernelReferMsgPipeStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(868106276);
  };
  ThreadManForUser.prototype.sceKernelCancelMsgPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(882607693);
  };
  ThreadManForUser.prototype.sceKernelCheckCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(882732396);
  };
  ThreadManForUser.prototype.sceKernelReferThreadEventHandlerStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(916384619);
  };
  ThreadManForUser.prototype.sceKernelTerminateDeleteThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(943684556);
  };
  ThreadManForUser.prototype.sceKernelReferVplStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(964756069);
  };
  ThreadManForUser.prototype.sceKernelSuspendDispatchThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(987073420);
  };
  ThreadManForUser.prototype.sceKernelGetThreadExitStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(991444518);
  };
  ThreadManForUser.prototype.sceKernelSignalSema_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1062463040);
  };
  ThreadManForUser.prototype.sceKernelWaitEventFlag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1076875042);
  };
  ThreadManForUser.prototype.sceKernelReferLwMutexStatusByID_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1276401988);
  };
  ThreadManForUser.prototype.sceKernelWaitSema_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1312428293);
  };
  ThreadManForUser.prototype.sceKernelGetThreadStackFreeSize_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1376296097);
  };
  ThreadManForUser.prototype._sceKernelExitThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1395282478);
  };
  ThreadManForUser.prototype.sceKernelSetVTimerHandlerWide_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1404047002);
  };
  ThreadManForUser.prototype.sceKernelSetVTimerTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1412093488);
  };
  ThreadManForUser.prototype.sceKernelCreateVpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1455438261);
  };
  ThreadManForUser.prototype.sceKernelGetThreadmanIdType_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1473209053);
  };
  ThreadManForUser.prototype.sceKernelPollSema_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1488058679);
  };
  ThreadManForUser.prototype.sceKernelLockMutexCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1542774055);
  };
  ThreadManForUser.prototype.sceKernelReferVTimerStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1597161130);
  };
  ThreadManForUser.prototype.sceKernelDeleteLwMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1611691318);
  };
  ThreadManForUser.prototype.sceKernelTerminateThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1633944506);
  };
  ThreadManForUser.prototype.sceKernelTryAllocateFpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1648027237);
  };
  ThreadManForUser.prototype.sceKernelReferSystemStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1652453178);
  };
  ThreadManForUser.prototype.sceKernelReferThreadProfiler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1691636750);
  };
  ThreadManForUser.prototype.sceKernelSetAlarm_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1716697290);
  };
  ThreadManForUser.prototype.sceKernelUnlockMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1798311951);
  };
  ThreadManForUser.prototype.sceKernelWaitSemaCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1830890412);
  };
  ThreadManForUser.prototype._sceKernelReturnFromCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1855890256);
  };
  ThreadManForUser.prototype.ThreadManForUser_71040D5C_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1896090972);
  };
  ThreadManForUser.prototype.sceKernelChangeThreadPriority_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1908185201);
  };
  ThreadManForUser.prototype.sceKernelReleaseThreadEventHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1928577349);
  };
  ThreadManForUser.prototype.sceKernelReferCallbackStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1930352828);
  };
  ThreadManForUser.prototype.sceKernelReceiveMsgPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1954716534);
  };
  ThreadManForUser.prototype.sceKernelResumeThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1964338831);
  };
  ThreadManForUser.prototype.sceKernelCreateMsgPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2081276576);
  };
  ThreadManForUser.prototype.sceKernelSendMsgPipeCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2084696770);
  };
  ThreadManForUser.prototype.ThreadManForUser_7CFF8CF3_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2097122547);
  };
  ThreadManForUser.prototype.sceKernelCancelAlarm_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2120595865);
  };
  ThreadManForUser.prototype.sceKernelExitDeleteThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2137202021, 0));
  };
  ThreadManForUser.prototype.sceKernelClearEventFlag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2128394524, 0));
  };
  ThreadManForUser.prototype.sceKernelCreateMbx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2128272867, 0));
  };
  ThreadManForUser.prototype.sceKernelReferGlobalProfiler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2112310051, 0));
  };
  ThreadManForUser.prototype.sceKernelDeleteMbx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2044372262, 0));
  };
  ThreadManForUser.prototype.ThreadManForUser_8672E3D0_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2039290928, 0));
  };
  ThreadManForUser.prototype.sceKernelSendMsgPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2022850643, 0));
  };
  ThreadManForUser.prototype.sceKernelCancelReceiveMbx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2016092874, 0));
  };
  ThreadManForUser.prototype.sceKernelCancelMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2015813060, 0));
  };
  ThreadManForUser.prototype.sceKernelTrySendMsgPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2008244336, 0));
  };
  ThreadManForUser.prototype.sceKernelDeleteVpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1984703348, 0));
  };
  ThreadManForUser.prototype.sceKernelCancelSema_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1879180894, 0));
  };
  ThreadManForUser.prototype.sceKernelRotateThreadReadyQueue_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1859955545, 0));
  };
  ThreadManForUser.prototype.sceKernelGetThreadmanIdList_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1807654608, 0));
  };
  ThreadManForUser.prototype.sceKernelSuspendThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1723534561, 0));
  };
  ThreadManForUser.prototype.sceKernelSleepThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1697770722, 0));
  };
  ThreadManForUser.prototype.sceKernelDeleteThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1616888621, 0));
  };
  ThreadManForUser.prototype.sceKernelReferEventFlagStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1502936800, 0));
  };
  ThreadManForUser.prototype.sceKernelCancelFpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1465231073, 0));
  };
  ThreadManForUser.prototype.sceKernelReferMbxStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1461139386, 0));
  };
  ThreadManForUser.prototype.sceKernelReferMutexStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1446851686, 0));
  };
  ThreadManForUser.prototype.sceKernelExitThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1435252427, 0));
  };
  ThreadManForUser.prototype.sceKernelTryAllocateVpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1355360504, 0));
  };
  ThreadManForUser.prototype.sceKernelLockMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1341017825, 0));
  };
  ThreadManForUser.prototype.sceKernelSetSysClockAlarm_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1295888046, 0));
  };
  ThreadManForUser.prototype.sceKernelGetVTimerBase_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1280992912, 0));
  };
  ThreadManForUser.prototype.sceKernelFreeVpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1221137921, 0));
  };
  ThreadManForUser.prototype.sceKernelGetVTimerBaseWide_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1212052617, 0));
  };
  ThreadManForUser.prototype.sceKernelCreateMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1211066170, 0));
  };
  ThreadManForUser.prototype.sceKernelCancelCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1170189866, 0));
  };
  ThreadManForUser.prototype.sceKernelSysClock2USec_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1167355166, 0));
  };
  ThreadManForUser.prototype.sceKernelReferSemaStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1133515835, 0));
  };
  ThreadManForUser.prototype.sceKernelDelaySysClockThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1122878050, 0));
  };
  ThreadManForUser.prototype.sceKernelAllocateVpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1093503947, 0));
  };
  ThreadManForUser.prototype.ThreadManForUser_BEED3A47_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1091749305, 0));
  };
  ThreadManForUser.prototype.sceKernelCreateFpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1065634704, 0));
  };
  ThreadManForUser.prototype.sceKernelGetVTimerTimeWide_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1061945390, 0));
  };
  ThreadManForUser.prototype.sceKernelNotifyCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1055151932, 0));
  };
  ThreadManForUser.prototype.sceKernelStartVTimer_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-963800009, 0));
  };
  ThreadManForUser.prototype.sceKernelUSec2SysClockWide_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-926083700, 0));
  };
  ThreadManForUser.prototype.sceKernelCancelEventFlag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-853527918, 0));
  };
  ThreadManForUser.prototype.sceKernelStopVTimer_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-793842041, 0));
  };
  ThreadManForUser.prototype.sceKernelCheckThreadStack_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-784605547, 0));
  };
  ThreadManForUser.prototype.sceKernelCancelVTimerHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-757721617, 0));
  };
  ThreadManForUser.prototype.sceKernelWakeupThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-711021265, 0));
  };
  ThreadManForUser.prototype.sceKernelCreateSema_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-690336863, 0));
  };
  ThreadManForUser.prototype.sceKernelReferFplStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-669409716, 0));
  };
  ThreadManForUser.prototype.sceKernelSetVTimerHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-659383890, 0));
  };
  ThreadManForUser.prototype.sceKernelAllocateFpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-646321729, 0));
  };
  ThreadManForUser.prototype.sceKernelReferAlarmStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-626789020, 0));
  };
  ThreadManForUser.prototype.sceKernelGetSystemTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-613183691, 0));
  };
  ThreadManForUser.prototype.sceKernelTryReceiveMsgPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-548271729, 0));
  };
  ThreadManForUser.prototype.sceKernelSysClock2USecWide_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-513696388, 0));
  };
  ThreadManForUser.prototype.sceKernelAllocateFplCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-416797514, 0));
  };
  ThreadManForUser.prototype.sceKernelSendMbx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-374143458, 0));
  };
  ThreadManForUser.prototype.sceKernelChangeCurrentThreadAttr_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-361460175, 0));
  };
  ThreadManForUser.prototype.sceKernelAllocateVplCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-334862017, 0));
  };
  ThreadManForUser.prototype.sceKernelDeleteFpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-317452064, 0));
  };
  ThreadManForUser.prototype.sceKernelDeleteCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-306554812, 0));
  };
  ThreadManForUser.prototype.sceKernelDeleteEventFlag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-274838416, 0));
  };
  ThreadManForUser.prototype.sceKernelDeleteMsgPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-256386532, 0));
  };
  ThreadManForUser.prototype.sceKernelReceiveMbxCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-208116862, 0));
  };
  ThreadManForUser.prototype.sceKernelFreeFpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-163493263, 0));
  };
  ThreadManForUser.prototype.sceKernelDeleteMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-132706370, 0));
  };
  ThreadManForUser.prototype.sceKernelSetVTimerTimeWide_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-77322813, 0));
  };
  ThreadManForUser.prototype.sceKernelReceiveMsgPipeCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-67475075, 0));
  };
  ThreadManForUser.prototype.sceKernelCancelWakeupThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-53498586, 0));
  };
  ThreadManForUser.prototype.sceKernelReferThreadRunStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-3970540, 0));
  };
  function ThreadManForUser$registerModule$lambda(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelGetSystemTimeWide();
    };
  }
  function ThreadManForUser$registerModule$lambda_0(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelGetSystemTimeLow();
    };
  }
  function ThreadManForUser$registerModule$lambda_1(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelCreateThread_4ssxzt$($receiver.str, $receiver.int, $receiver.int, $receiver.int, $receiver.int, $receiver.ptr);
    };
  }
  function ThreadManForUser$registerModule$lambda_2(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelStartThread_uv9tso$($receiver.thread, $receiver.int, $receiver.int, $receiver.ptr);
    };
  }
  function ThreadManForUser$registerModule$lambda_3(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelGetThreadCurrentPriority_6r5tao$($receiver.thread);
    };
  }
  function ThreadManForUser$registerModule$lambda_4(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelSleepThread_6r5tao$($receiver.thread);
    };
  }
  function ThreadManForUser$registerModule$lambda_5(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelSleepThreadCB_6r5tao$($receiver.thread);
    };
  }
  function ThreadManForUser$registerModule$lambda_6(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelDelayThreadCB_3bjp42$($receiver.thread, $receiver.int);
    };
  }
  function ThreadManForUser$registerModule$lambda_7(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelDelayThread_3bjp42$($receiver.thread, $receiver.int);
    };
  }
  function ThreadManForUser$registerModule$lambda_8(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelWaitThreadEnd_3b407q$($receiver.thread, $receiver.int, $receiver.ptr);
    };
  }
  function ThreadManForUser$registerModule$lambda_9(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelWaitThreadEndCB_3b407q$($receiver.thread, $receiver.int, $receiver.ptr);
    };
  }
  function ThreadManForUser$registerModule$lambda_10(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelReferThreadStatus_o62i3q$($receiver.int, $receiver.ptr);
    };
  }
  function ThreadManForUser$registerModule$lambda_11(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelGetThreadId_6r5tao$($receiver.thread);
    };
  }
  function ThreadManForUser$registerModule$lambda_12(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelCreateCallback_z7cldz$($receiver.str, $receiver.ptr, $receiver.int);
    };
  }
  function ThreadManForUser$registerModule$lambda_13(this$ThreadManForUser) {
    return function ($receiver, it) {
      return this$ThreadManForUser.sceKernelCreateEventFlag_2pq1yf$($receiver.str, $receiver.int, $receiver.int, $receiver.ptr);
    };
  }
  function ThreadManForUser$registerModule$lambda_14(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetVTimerTime_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_15(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelRegisterThreadEventHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_16(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelPollMbx_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_17(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelTryLockMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_18(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser._sceKernelReturnFromTimerHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_19(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelUSec2SysClock_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_20(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDelaySysClockThreadCB_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_21(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReceiveMbx_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_22(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCreateLwMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_23(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDonateWakeupThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_24(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCancelVpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_25(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSetEventFlag_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_26(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCreateVTimer_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_27(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelResumeDispatchThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_28(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDeleteSema_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_29(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetCallbackCount_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_30(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReleaseWaitThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_31(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelPollEventFlag_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_32(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.ThreadManForUser_31327F19_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_33(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelWaitEventFlagCB_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_34(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDeleteVTimer_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_35(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferMsgPipeStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_36(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCancelMsgPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_37(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCheckCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_38(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferThreadEventHandlerStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_39(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelTerminateDeleteThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_40(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferVplStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_41(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSuspendDispatchThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_42(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetThreadExitStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_43(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSignalSema_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_44(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelWaitEventFlag_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_45(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferLwMutexStatusByID_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_46(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelWaitSema_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_47(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetThreadStackFreeSize_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_48(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser._sceKernelExitThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_49(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSetVTimerHandlerWide_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_50(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSetVTimerTime_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_51(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCreateVpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_52(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetThreadmanIdType_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_53(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelPollSema_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_54(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelLockMutexCB_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_55(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferVTimerStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_56(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDeleteLwMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_57(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelTerminateThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_58(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelTryAllocateFpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_59(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferSystemStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_60(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferThreadProfiler_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_61(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSetAlarm_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_62(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelUnlockMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_63(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelWaitSemaCB_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_64(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser._sceKernelReturnFromCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_65(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.ThreadManForUser_71040D5C_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_66(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelChangeThreadPriority_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_67(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReleaseThreadEventHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_68(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferCallbackStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_69(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReceiveMsgPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_70(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelResumeThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_71(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCreateMsgPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_72(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSendMsgPipeCB_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_73(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.ThreadManForUser_7CFF8CF3_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_74(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCancelAlarm_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_75(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelExitDeleteThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_76(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelClearEventFlag_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_77(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCreateMbx_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_78(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferGlobalProfiler_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_79(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDeleteMbx_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_80(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.ThreadManForUser_8672E3D0_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_81(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSendMsgPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_82(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCancelReceiveMbx_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_83(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCancelMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_84(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelTrySendMsgPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_85(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDeleteVpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_86(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCancelSema_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_87(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelRotateThreadReadyQueue_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_88(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetThreadmanIdList_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_89(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSuspendThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_90(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDeleteThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_91(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferEventFlagStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_92(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCancelFpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_93(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferMbxStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_94(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferMutexStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_95(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelExitThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_96(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelTryAllocateVpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_97(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelLockMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_98(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSetSysClockAlarm_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_99(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetVTimerBase_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_100(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelFreeVpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_101(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetVTimerBaseWide_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_102(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCreateMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_103(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCancelCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_104(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSysClock2USec_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_105(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferSemaStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_106(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDelaySysClockThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_107(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelAllocateVpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_108(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.ThreadManForUser_BEED3A47_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_109(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCreateFpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_110(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetVTimerTimeWide_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_111(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelNotifyCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_112(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelStartVTimer_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_113(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelUSec2SysClockWide_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_114(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCancelEventFlag_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_115(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelStopVTimer_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_116(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCheckThreadStack_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_117(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCancelVTimerHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_118(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelWakeupThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_119(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCreateSema_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_120(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferFplStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_121(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSetVTimerHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_122(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelAllocateFpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_123(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferAlarmStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_124(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetSystemTime_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_125(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelTryReceiveMsgPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_126(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSysClock2USecWide_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_127(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelAllocateFplCB_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_128(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSendMbx_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_129(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelChangeCurrentThreadAttr_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_130(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelAllocateVplCB_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_131(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDeleteFpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_132(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDeleteCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_133(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDeleteEventFlag_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_134(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDeleteMsgPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_135(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReceiveMbxCB_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_136(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelFreeFpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_137(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDeleteMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_138(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSetVTimerTimeWide_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_139(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReceiveMsgPipeCB_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_140(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCancelWakeupThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_141(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferThreadRunStatus_xt3zvs$(it);
      return Unit;
    };
  }
  ThreadManForUser.prototype.registerModule = function () {
    this.registerFunctionLong_d75y9q$('sceKernelGetSystemTimeWide', new Kotlin.Long(-2101586057, 0), 150, void 0, ThreadManForUser$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceKernelGetSystemTimeLow', Kotlin.Long.fromInt(916379037), 150, void 0, ThreadManForUser$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceKernelCreateThread', Kotlin.Long.fromInt(1148030438), 150, void 0, ThreadManForUser$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('sceKernelStartThread', new Kotlin.Long(-193624995, 0), 150, void 0, ThreadManForUser$registerModule$lambda_2(this));
    this.registerFunctionInt_9l82lv$('sceKernelGetThreadCurrentPriority', new Kotlin.Long(-1800773138, 0), 150, void 0, ThreadManForUser$registerModule$lambda_3(this));
    this.registerFunctionInt_9l82lv$('sceKernelSleepThread', new Kotlin.Long(-1697770722, 0), 150, void 0, ThreadManForUser$registerModule$lambda_4(this));
    this.registerFunctionInt_9l82lv$('sceKernelSleepThreadCB', new Kotlin.Long(-2105381008, 0), 150, void 0, ThreadManForUser$registerModule$lambda_5(this));
    this.registerFunctionInt_9l82lv$('sceKernelDelayThreadCB', Kotlin.Long.fromInt(1759157814), 150, void 0, ThreadManForUser$registerModule$lambda_6(this));
    this.registerFunctionInt_9l82lv$('sceKernelDelayThread', new Kotlin.Long(-827462841, 0), 150, void 0, ThreadManForUser$registerModule$lambda_7(this));
    this.registerFunctionInt_9l82lv$('sceKernelWaitThreadEnd', Kotlin.Long.fromInt(663490037), 150, void 0, ThreadManForUser$registerModule$lambda_8(this));
    this.registerFunctionInt_9l82lv$('sceKernelWaitThreadEndCB', new Kotlin.Long(-2079424205, 0), 150, void 0, ThreadManForUser$registerModule$lambda_9(this));
    this.registerFunctionInt_9l82lv$('sceKernelReferThreadStatus', Kotlin.Long.fromInt(398551118), 150, void 0, ThreadManForUser$registerModule$lambda_10(this));
    this.registerFunctionInt_9l82lv$('sceKernelGetThreadId', Kotlin.Long.fromInt(691750328), 150, void 0, ThreadManForUser$registerModule$lambda_11(this));
    this.registerFunctionInt_9l82lv$('sceKernelCreateCallback', new Kotlin.Long(-400773233, 0), 150, void 0, ThreadManForUser$registerModule$lambda_12(this));
    this.registerFunctionInt_9l82lv$('sceKernelCreateEventFlag', Kotlin.Long.fromInt(1438779904), 150, void 0, ThreadManForUser$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetVTimerTime', Kotlin.Long.fromInt(55218719), 150, void 0, ThreadManForUser$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceKernelRegisterThreadEventHandler', Kotlin.Long.fromInt(202403411), 150, void 0, ThreadManForUser$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceKernelPollMbx', Kotlin.Long.fromInt(226586986), 150, void 0, ThreadManForUser$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceKernelTryLockMutex', Kotlin.Long.fromInt(232575689), 150, void 0, ThreadManForUser$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('_sceKernelReturnFromTimerHandler', Kotlin.Long.fromInt(244480749), 150, void 0, ThreadManForUser$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUSec2SysClock', Kotlin.Long.fromInt(286125210), 150, void 0, ThreadManForUser$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDelaySysClockThreadCB', Kotlin.Long.fromInt(293726563), 150, void 0, ThreadManForUser$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReceiveMbx', Kotlin.Long.fromInt(405144948), 150, void 0, ThreadManForUser$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCreateLwMutex', Kotlin.Long.fromInt(433058117), 150, void 0, ThreadManForUser$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDonateWakeupThread', Kotlin.Long.fromInt(452545795), 150, void 0, ThreadManForUser$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCancelVpl', Kotlin.Long.fromInt(490150794), 150, void 0, ThreadManForUser$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetEventFlag', Kotlin.Long.fromInt(531716658), 150, void 0, ThreadManForUser$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCreateVTimer', Kotlin.Long.fromInt(553645408), 150, void 0, ThreadManForUser$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('sceKernelResumeDispatchThread', Kotlin.Long.fromInt(669134530), 150, void 0, ThreadManForUser$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDeleteSema', Kotlin.Long.fromInt(683034780), 150, void 0, ThreadManForUser$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetCallbackCount', Kotlin.Long.fromInt(708658431), 150, void 0, ThreadManForUser$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReleaseWaitThread', Kotlin.Long.fromInt(741662803), 150, void 0, ThreadManForUser$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('sceKernelPollEventFlag', Kotlin.Long.fromInt(821905648), 150, void 0, ThreadManForUser$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('ThreadManForUser_31327F19', Kotlin.Long.fromInt(825392921), 150, void 0, ThreadManForUser$registerModule$lambda_32(this));
    this.registerFunctionRaw_gh35x6$('sceKernelWaitEventFlagCB', Kotlin.Long.fromInt(848057450), 150, void 0, ThreadManForUser$registerModule$lambda_33(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDeleteVTimer', Kotlin.Long.fromInt(848272978), 150, void 0, ThreadManForUser$registerModule$lambda_34(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferMsgPipeStatus', Kotlin.Long.fromInt(868106276), 150, void 0, ThreadManForUser$registerModule$lambda_35(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCancelMsgPipe', Kotlin.Long.fromInt(882607693), 150, void 0, ThreadManForUser$registerModule$lambda_36(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCheckCallback', Kotlin.Long.fromInt(882732396), 150, void 0, ThreadManForUser$registerModule$lambda_37(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferThreadEventHandlerStatus', Kotlin.Long.fromInt(916384619), 150, void 0, ThreadManForUser$registerModule$lambda_38(this));
    this.registerFunctionRaw_gh35x6$('sceKernelTerminateDeleteThread', Kotlin.Long.fromInt(943684556), 150, void 0, ThreadManForUser$registerModule$lambda_39(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferVplStatus', Kotlin.Long.fromInt(964756069), 150, void 0, ThreadManForUser$registerModule$lambda_40(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSuspendDispatchThread', Kotlin.Long.fromInt(987073420), 150, void 0, ThreadManForUser$registerModule$lambda_41(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetThreadExitStatus', Kotlin.Long.fromInt(991444518), 150, void 0, ThreadManForUser$registerModule$lambda_42(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSignalSema', Kotlin.Long.fromInt(1062463040), 150, void 0, ThreadManForUser$registerModule$lambda_43(this));
    this.registerFunctionRaw_gh35x6$('sceKernelWaitEventFlag', Kotlin.Long.fromInt(1076875042), 150, void 0, ThreadManForUser$registerModule$lambda_44(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferLwMutexStatusByID', Kotlin.Long.fromInt(1276401988), 150, void 0, ThreadManForUser$registerModule$lambda_45(this));
    this.registerFunctionRaw_gh35x6$('sceKernelWaitSema', Kotlin.Long.fromInt(1312428293), 150, void 0, ThreadManForUser$registerModule$lambda_46(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetThreadStackFreeSize', Kotlin.Long.fromInt(1376296097), 150, void 0, ThreadManForUser$registerModule$lambda_47(this));
    this.registerFunctionRaw_gh35x6$('_sceKernelExitThread', Kotlin.Long.fromInt(1395282478), 150, void 0, ThreadManForUser$registerModule$lambda_48(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetVTimerHandlerWide', Kotlin.Long.fromInt(1404047002), 150, void 0, ThreadManForUser$registerModule$lambda_49(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetVTimerTime', Kotlin.Long.fromInt(1412093488), 150, void 0, ThreadManForUser$registerModule$lambda_50(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCreateVpl', Kotlin.Long.fromInt(1455438261), 150, void 0, ThreadManForUser$registerModule$lambda_51(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetThreadmanIdType', Kotlin.Long.fromInt(1473209053), 150, void 0, ThreadManForUser$registerModule$lambda_52(this));
    this.registerFunctionRaw_gh35x6$('sceKernelPollSema', Kotlin.Long.fromInt(1488058679), 150, void 0, ThreadManForUser$registerModule$lambda_53(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLockMutexCB', Kotlin.Long.fromInt(1542774055), 150, void 0, ThreadManForUser$registerModule$lambda_54(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferVTimerStatus', Kotlin.Long.fromInt(1597161130), 150, void 0, ThreadManForUser$registerModule$lambda_55(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDeleteLwMutex', Kotlin.Long.fromInt(1611691318), 150, void 0, ThreadManForUser$registerModule$lambda_56(this));
    this.registerFunctionRaw_gh35x6$('sceKernelTerminateThread', Kotlin.Long.fromInt(1633944506), 150, void 0, ThreadManForUser$registerModule$lambda_57(this));
    this.registerFunctionRaw_gh35x6$('sceKernelTryAllocateFpl', Kotlin.Long.fromInt(1648027237), 150, void 0, ThreadManForUser$registerModule$lambda_58(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferSystemStatus', Kotlin.Long.fromInt(1652453178), 150, void 0, ThreadManForUser$registerModule$lambda_59(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferThreadProfiler', Kotlin.Long.fromInt(1691636750), 150, void 0, ThreadManForUser$registerModule$lambda_60(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetAlarm', Kotlin.Long.fromInt(1716697290), 150, void 0, ThreadManForUser$registerModule$lambda_61(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUnlockMutex', Kotlin.Long.fromInt(1798311951), 150, void 0, ThreadManForUser$registerModule$lambda_62(this));
    this.registerFunctionRaw_gh35x6$('sceKernelWaitSemaCB', Kotlin.Long.fromInt(1830890412), 150, void 0, ThreadManForUser$registerModule$lambda_63(this));
    this.registerFunctionRaw_gh35x6$('_sceKernelReturnFromCallback', Kotlin.Long.fromInt(1855890256), 150, void 0, ThreadManForUser$registerModule$lambda_64(this));
    this.registerFunctionRaw_gh35x6$('ThreadManForUser_71040D5C', Kotlin.Long.fromInt(1896090972), 150, void 0, ThreadManForUser$registerModule$lambda_65(this));
    this.registerFunctionRaw_gh35x6$('sceKernelChangeThreadPriority', Kotlin.Long.fromInt(1908185201), 150, void 0, ThreadManForUser$registerModule$lambda_66(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReleaseThreadEventHandler', Kotlin.Long.fromInt(1928577349), 150, void 0, ThreadManForUser$registerModule$lambda_67(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferCallbackStatus', Kotlin.Long.fromInt(1930352828), 150, void 0, ThreadManForUser$registerModule$lambda_68(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReceiveMsgPipe', Kotlin.Long.fromInt(1954716534), 150, void 0, ThreadManForUser$registerModule$lambda_69(this));
    this.registerFunctionRaw_gh35x6$('sceKernelResumeThread', Kotlin.Long.fromInt(1964338831), 150, void 0, ThreadManForUser$registerModule$lambda_70(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCreateMsgPipe', Kotlin.Long.fromInt(2081276576), 150, void 0, ThreadManForUser$registerModule$lambda_71(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSendMsgPipeCB', Kotlin.Long.fromInt(2084696770), 150, void 0, ThreadManForUser$registerModule$lambda_72(this));
    this.registerFunctionRaw_gh35x6$('ThreadManForUser_7CFF8CF3', Kotlin.Long.fromInt(2097122547), 150, void 0, ThreadManForUser$registerModule$lambda_73(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCancelAlarm', Kotlin.Long.fromInt(2120595865), 150, void 0, ThreadManForUser$registerModule$lambda_74(this));
    this.registerFunctionRaw_gh35x6$('sceKernelExitDeleteThread', new Kotlin.Long(-2137202021, 0), 150, void 0, ThreadManForUser$registerModule$lambda_75(this));
    this.registerFunctionRaw_gh35x6$('sceKernelClearEventFlag', new Kotlin.Long(-2128394524, 0), 150, void 0, ThreadManForUser$registerModule$lambda_76(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCreateMbx', new Kotlin.Long(-2128272867, 0), 150, void 0, ThreadManForUser$registerModule$lambda_77(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferGlobalProfiler', new Kotlin.Long(-2112310051, 0), 150, void 0, ThreadManForUser$registerModule$lambda_78(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDeleteMbx', new Kotlin.Long(-2044372262, 0), 150, void 0, ThreadManForUser$registerModule$lambda_79(this));
    this.registerFunctionRaw_gh35x6$('ThreadManForUser_8672E3D0', new Kotlin.Long(-2039290928, 0), 150, void 0, ThreadManForUser$registerModule$lambda_80(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSendMsgPipe', new Kotlin.Long(-2022850643, 0), 150, void 0, ThreadManForUser$registerModule$lambda_81(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCancelReceiveMbx', new Kotlin.Long(-2016092874, 0), 150, void 0, ThreadManForUser$registerModule$lambda_82(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCancelMutex', new Kotlin.Long(-2015813060, 0), 150, void 0, ThreadManForUser$registerModule$lambda_83(this));
    this.registerFunctionRaw_gh35x6$('sceKernelTrySendMsgPipe', new Kotlin.Long(-2008244336, 0), 150, void 0, ThreadManForUser$registerModule$lambda_84(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDeleteVpl', new Kotlin.Long(-1984703348, 0), 150, void 0, ThreadManForUser$registerModule$lambda_85(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCancelSema', new Kotlin.Long(-1879180894, 0), 150, void 0, ThreadManForUser$registerModule$lambda_86(this));
    this.registerFunctionRaw_gh35x6$('sceKernelRotateThreadReadyQueue', new Kotlin.Long(-1859955545, 0), 150, void 0, ThreadManForUser$registerModule$lambda_87(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetThreadmanIdList', new Kotlin.Long(-1807654608, 0), 150, void 0, ThreadManForUser$registerModule$lambda_88(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSuspendThread', new Kotlin.Long(-1723534561, 0), 150, void 0, ThreadManForUser$registerModule$lambda_89(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDeleteThread', new Kotlin.Long(-1616888621, 0), 150, void 0, ThreadManForUser$registerModule$lambda_90(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferEventFlagStatus', new Kotlin.Long(-1502936800, 0), 150, void 0, ThreadManForUser$registerModule$lambda_91(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCancelFpl', new Kotlin.Long(-1465231073, 0), 150, void 0, ThreadManForUser$registerModule$lambda_92(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferMbxStatus', new Kotlin.Long(-1461139386, 0), 150, void 0, ThreadManForUser$registerModule$lambda_93(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferMutexStatus', new Kotlin.Long(-1446851686, 0), 150, void 0, ThreadManForUser$registerModule$lambda_94(this));
    this.registerFunctionRaw_gh35x6$('sceKernelExitThread', new Kotlin.Long(-1435252427, 0), 150, void 0, ThreadManForUser$registerModule$lambda_95(this));
    this.registerFunctionRaw_gh35x6$('sceKernelTryAllocateVpl', new Kotlin.Long(-1355360504, 0), 150, void 0, ThreadManForUser$registerModule$lambda_96(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLockMutex', new Kotlin.Long(-1341017825, 0), 150, void 0, ThreadManForUser$registerModule$lambda_97(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetSysClockAlarm', new Kotlin.Long(-1295888046, 0), 150, void 0, ThreadManForUser$registerModule$lambda_98(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetVTimerBase', new Kotlin.Long(-1280992912, 0), 150, void 0, ThreadManForUser$registerModule$lambda_99(this));
    this.registerFunctionRaw_gh35x6$('sceKernelFreeVpl', new Kotlin.Long(-1221137921, 0), 150, void 0, ThreadManForUser$registerModule$lambda_100(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetVTimerBaseWide', new Kotlin.Long(-1212052617, 0), 150, void 0, ThreadManForUser$registerModule$lambda_101(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCreateMutex', new Kotlin.Long(-1211066170, 0), 150, void 0, ThreadManForUser$registerModule$lambda_102(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCancelCallback', new Kotlin.Long(-1170189866, 0), 150, void 0, ThreadManForUser$registerModule$lambda_103(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSysClock2USec', new Kotlin.Long(-1167355166, 0), 150, void 0, ThreadManForUser$registerModule$lambda_104(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferSemaStatus', new Kotlin.Long(-1133515835, 0), 150, void 0, ThreadManForUser$registerModule$lambda_105(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDelaySysClockThread', new Kotlin.Long(-1122878050, 0), 150, void 0, ThreadManForUser$registerModule$lambda_106(this));
    this.registerFunctionRaw_gh35x6$('sceKernelAllocateVpl', new Kotlin.Long(-1093503947, 0), 150, void 0, ThreadManForUser$registerModule$lambda_107(this));
    this.registerFunctionRaw_gh35x6$('ThreadManForUser_BEED3A47', new Kotlin.Long(-1091749305, 0), 150, void 0, ThreadManForUser$registerModule$lambda_108(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCreateFpl', new Kotlin.Long(-1065634704, 0), 150, void 0, ThreadManForUser$registerModule$lambda_109(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetVTimerTimeWide', new Kotlin.Long(-1061945390, 0), 150, void 0, ThreadManForUser$registerModule$lambda_110(this));
    this.registerFunctionRaw_gh35x6$('sceKernelNotifyCallback', new Kotlin.Long(-1055151932, 0), 150, void 0, ThreadManForUser$registerModule$lambda_111(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStartVTimer', new Kotlin.Long(-963800009, 0), 150, void 0, ThreadManForUser$registerModule$lambda_112(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUSec2SysClockWide', new Kotlin.Long(-926083700, 0), 150, void 0, ThreadManForUser$registerModule$lambda_113(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCancelEventFlag', new Kotlin.Long(-853527918, 0), 150, void 0, ThreadManForUser$registerModule$lambda_114(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStopVTimer', new Kotlin.Long(-793842041, 0), 150, void 0, ThreadManForUser$registerModule$lambda_115(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCheckThreadStack', new Kotlin.Long(-784605547, 0), 150, void 0, ThreadManForUser$registerModule$lambda_116(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCancelVTimerHandler', new Kotlin.Long(-757721617, 0), 150, void 0, ThreadManForUser$registerModule$lambda_117(this));
    this.registerFunctionRaw_gh35x6$('sceKernelWakeupThread', new Kotlin.Long(-711021265, 0), 150, void 0, ThreadManForUser$registerModule$lambda_118(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCreateSema', new Kotlin.Long(-690336863, 0), 150, void 0, ThreadManForUser$registerModule$lambda_119(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferFplStatus', new Kotlin.Long(-669409716, 0), 150, void 0, ThreadManForUser$registerModule$lambda_120(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetVTimerHandler', new Kotlin.Long(-659383890, 0), 150, void 0, ThreadManForUser$registerModule$lambda_121(this));
    this.registerFunctionRaw_gh35x6$('sceKernelAllocateFpl', new Kotlin.Long(-646321729, 0), 150, void 0, ThreadManForUser$registerModule$lambda_122(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferAlarmStatus', new Kotlin.Long(-626789020, 0), 150, void 0, ThreadManForUser$registerModule$lambda_123(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetSystemTime', new Kotlin.Long(-613183691, 0), 150, void 0, ThreadManForUser$registerModule$lambda_124(this));
    this.registerFunctionRaw_gh35x6$('sceKernelTryReceiveMsgPipe', new Kotlin.Long(-548271729, 0), 150, void 0, ThreadManForUser$registerModule$lambda_125(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSysClock2USecWide', new Kotlin.Long(-513696388, 0), 150, void 0, ThreadManForUser$registerModule$lambda_126(this));
    this.registerFunctionRaw_gh35x6$('sceKernelAllocateFplCB', new Kotlin.Long(-416797514, 0), 150, void 0, ThreadManForUser$registerModule$lambda_127(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSendMbx', new Kotlin.Long(-374143458, 0), 150, void 0, ThreadManForUser$registerModule$lambda_128(this));
    this.registerFunctionRaw_gh35x6$('sceKernelChangeCurrentThreadAttr', new Kotlin.Long(-361460175, 0), 150, void 0, ThreadManForUser$registerModule$lambda_129(this));
    this.registerFunctionRaw_gh35x6$('sceKernelAllocateVplCB', new Kotlin.Long(-334862017, 0), 150, void 0, ThreadManForUser$registerModule$lambda_130(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDeleteFpl', new Kotlin.Long(-317452064, 0), 150, void 0, ThreadManForUser$registerModule$lambda_131(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDeleteCallback', new Kotlin.Long(-306554812, 0), 150, void 0, ThreadManForUser$registerModule$lambda_132(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDeleteEventFlag', new Kotlin.Long(-274838416, 0), 150, void 0, ThreadManForUser$registerModule$lambda_133(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDeleteMsgPipe', new Kotlin.Long(-256386532, 0), 150, void 0, ThreadManForUser$registerModule$lambda_134(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReceiveMbxCB', new Kotlin.Long(-208116862, 0), 150, void 0, ThreadManForUser$registerModule$lambda_135(this));
    this.registerFunctionRaw_gh35x6$('sceKernelFreeFpl', new Kotlin.Long(-163493263, 0), 150, void 0, ThreadManForUser$registerModule$lambda_136(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDeleteMutex', new Kotlin.Long(-132706370, 0), 150, void 0, ThreadManForUser$registerModule$lambda_137(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetVTimerTimeWide', new Kotlin.Long(-77322813, 0), 150, void 0, ThreadManForUser$registerModule$lambda_138(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReceiveMsgPipeCB', new Kotlin.Long(-67475075, 0), 150, void 0, ThreadManForUser$registerModule$lambda_139(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCancelWakeupThread', new Kotlin.Long(-53498586, 0), 150, void 0, ThreadManForUser$registerModule$lambda_140(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferThreadRunStatus', new Kotlin.Long(-3970540, 0), 150, void 0, ThreadManForUser$registerModule$lambda_141(this));
  };
  function ThreadManForUser$eventFlags$lambda(it) {
    return new PspEventFlag(it);
  }
  ThreadManForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadManForUser',
    interfaces: [SceModule]
  };
  function PspEventFlag(id) {
    this.id_shyrxz$_0 = id;
    this.name = '';
    this.attributes = 0;
    this.bitPattern = 0;
    this.optionsPtr = null;
  }
  Object.defineProperty(PspEventFlag.prototype, 'id', {
    get: function () {
      return this.id_shyrxz$_0;
    }
  });
  PspEventFlag.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspEventFlag',
    interfaces: [ResourceItem]
  };
  PspEventFlag.prototype.component1 = function () {
    return this.id;
  };
  PspEventFlag.prototype.copy_za3lpa$ = function (id) {
    return new PspEventFlag(id === void 0 ? this.id : id);
  };
  PspEventFlag.prototype.toString = function () {
    return 'PspEventFlag(id=' + Kotlin.toString(this.id) + ')';
  };
  PspEventFlag.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  PspEventFlag.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function UtilsForKernel(emulator) {
    SceModule.call(this, emulator, 'UtilsForKernel', 589841, 'sysmem.prx', 'sceSystemMemoryManager');
  }
  UtilsForKernel.prototype.sceKernelIcacheInvalidateRange_vux9f0$ = function (ptr, size) {
    this.emulator.invalidateIcache_vux9f0$(ptr, size);
  };
  UtilsForKernel.prototype.UtilsForKernel_004D4DEE_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(5066222);
  };
  UtilsForKernel.prototype.sceKernelUtilsMt19937UInt_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(117148259);
  };
  UtilsForKernel.prototype.sceKernelSetPTRIGMask_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(326050841);
  };
  UtilsForKernel.prototype.UtilsForKernel_157A383A_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(360331322);
  };
  UtilsForKernel.prototype.sceKernelDcacheReadTag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(375659888);
  };
  UtilsForKernel.prototype.sceKernelSetGPIMask_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(423444534);
  };
  UtilsForKernel.prototype.UtilsForKernel_1B0592A3_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(453350051);
  };
  UtilsForKernel.prototype.sceKernelRegisterRtcFunc_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(597738938);
  };
  UtilsForKernel.prototype.sceKernelGzipGetCompressedData_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(603965480);
  };
  UtilsForKernel.prototype.sceKernelLibcTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(667703280);
  };
  UtilsForKernel.prototype.sceKernelUtilsSha1BlockUpdate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(879717800);
  };
  UtilsForKernel.prototype.sceKernelDcacheWritebackInvalidateRange_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(884603550);
  };
  UtilsForKernel.prototype.sceKernelGetGPI_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(939220034);
  };
  UtilsForKernel.prototype.sceKernelGetPTRIG_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(972330512);
  };
  UtilsForKernel.prototype.sceKernelDcacheWritebackRange_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1055066145);
  };
  UtilsForKernel.prototype.UtilsForKernel_3FD3D324_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1070846756);
  };
  UtilsForKernel.prototype.sceKernelReleaseRtcFunc_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1099464436);
  };
  UtilsForKernel.prototype.UtilsForKernel_43C9A8DB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1137289435);
  };
  UtilsForKernel.prototype.sceKernelIcacheProbe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1339235485);
  };
  UtilsForKernel.prototype.UtilsForKernel_515B4FAF_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1364938671);
  };
  UtilsForKernel.prototype.sceKernelUtilsSha1BlockResult_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1482628105);
  };
  UtilsForKernel.prototype.UtilsForKernel_5C7F2B1A_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1551837978);
  };
  UtilsForKernel.prototype.sceKernelUtilsMd5BlockUpdate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1642194213);
  };
  UtilsForKernel.prototype.sceKernelSetPTRIG_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1647421213);
  };
  UtilsForKernel.prototype.sceKernelSetGPO_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1792230871);
  };
  UtilsForKernel.prototype.UtilsForKernel_6C6887EE_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1818789870);
  };
  UtilsForKernel.prototype.sceKernelLibcGettimeofday_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1911308913);
  };
  UtilsForKernel.prototype.UtilsForKernel_7333E539_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1932780857);
  };
  UtilsForKernel.prototype.UtilsForKernel_740DF7F0_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1947072496);
  };
  UtilsForKernel.prototype.sceKernelDcacheProbeRange_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2011164807);
  };
  UtilsForKernel.prototype.sceKernelGzipDecompress_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2022918209);
  };
  UtilsForKernel.prototype.sceKernelDcacheWritebackAll_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2043790330);
  };
  UtilsForKernel.prototype.sceKernelDcacheProbe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2147476404, 0));
  };
  UtilsForKernel.prototype.sceKernelUtilsSha1Digest_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2080220687, 0));
  };
  UtilsForKernel.prototype.sceKernelDcacheInvalidateAll_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2041930382, 0));
  };
  UtilsForKernel.prototype.sceKernelPutUserLog_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2014833311, 0));
  };
  UtilsForKernel.prototype.sceKernelGzipGetComment_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1944076796, 0));
  };
  UtilsForKernel.prototype.sceKernelLibcClock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1847265625, 0));
  };
  UtilsForKernel.prototype.sceKernelIcacheInvalidateAll_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1844506550, 0));
  };
  UtilsForKernel.prototype.sceKernelRegisterUserLogHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1842861497, 0));
  };
  UtilsForKernel.prototype.sceKernelSetGPOMask_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1794940945, 0));
  };
  UtilsForKernel.prototype.UtilsForKernel_99134C3F_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1726788545, 0));
  };
  UtilsForKernel.prototype.sceKernelUtilsMd5BlockInit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1638117242, 0));
  };
  UtilsForKernel.prototype.UtilsForKernel_AA9AF5CF_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1432685105, 0));
  };
  UtilsForKernel.prototype.sceKernelGetGPO_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1355409728, 0));
  };
  UtilsForKernel.prototype.UtilsForKernel_AF3766BB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1355323717, 0));
  };
  UtilsForKernel.prototype.sceKernelGzipGetInfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1326857441, 0));
  };
  UtilsForKernel.prototype.sceKernelDcacheWritebackInvalidateAll_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1271537979, 0));
  };
  UtilsForKernel.prototype.UtilsForKernel_B83A1E76_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1204150666, 0));
  };
  UtilsForKernel.prototype.sceKernelUtilsMd5BlockResult_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1194176904, 0));
  };
  UtilsForKernel.prototype.sceKernelRtcGetTick_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1111504247, 0));
  };
  UtilsForKernel.prototype.sceKernelDcacheInvalidateRange_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1079410590, 0));
  };
  UtilsForKernel.prototype.sceKernelUtilsMd5Digest_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-937924008, 0));
  };
  UtilsForKernel.prototype.UtilsForKernel_DBBE9A46_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-608265658, 0));
  };
  UtilsForKernel.prototype.sceKernelGzipIsValid_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-523354583, 0));
  };
  UtilsForKernel.prototype.sceKernelGzipGetName_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-521749866, 0));
  };
  UtilsForKernel.prototype.sceKernelUtilsMt19937Init_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-396302498, 0));
  };
  UtilsForKernel.prototype.sceKernelDeflateDecompress_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-388285210, 0));
  };
  UtilsForKernel.prototype.UtilsForKernel_F0155BCA_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-267035702, 0));
  };
  UtilsForKernel.prototype.sceKernelUtilsSha1BlockInit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-117647942, 0));
  };
  UtilsForKernel.prototype.sceKernelIcacheReadTag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-83494192, 0));
  };
  function UtilsForKernel$registerModule$lambda(this$UtilsForKernel) {
    return function ($receiver, it) {
      this$UtilsForKernel.sceKernelIcacheInvalidateRange_vux9f0$($receiver.int, $receiver.int);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_0(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_004D4DEE_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_1(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelUtilsMt19937UInt_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_2(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelSetPTRIGMask_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_3(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_157A383A_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_4(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelDcacheReadTag_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_5(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelSetGPIMask_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_6(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_1B0592A3_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_7(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelRegisterRtcFunc_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_8(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelGzipGetCompressedData_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_9(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelLibcTime_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_10(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelUtilsSha1BlockUpdate_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_11(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelDcacheWritebackInvalidateRange_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_12(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelGetGPI_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_13(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelGetPTRIG_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_14(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelDcacheWritebackRange_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_15(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_3FD3D324_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_16(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelReleaseRtcFunc_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_17(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_43C9A8DB_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_18(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelIcacheProbe_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_19(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_515B4FAF_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_20(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelUtilsSha1BlockResult_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_21(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_5C7F2B1A_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_22(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelUtilsMd5BlockUpdate_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_23(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelSetPTRIG_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_24(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelSetGPO_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_25(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_6C6887EE_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_26(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelLibcGettimeofday_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_27(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_7333E539_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_28(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_740DF7F0_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_29(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelDcacheProbeRange_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_30(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelGzipDecompress_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_31(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelDcacheWritebackAll_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_32(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelDcacheProbe_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_33(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelUtilsSha1Digest_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_34(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelDcacheInvalidateAll_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_35(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelPutUserLog_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_36(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelGzipGetComment_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_37(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelLibcClock_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_38(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelIcacheInvalidateAll_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_39(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelRegisterUserLogHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_40(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelSetGPOMask_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_41(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_99134C3F_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_42(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelUtilsMd5BlockInit_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_43(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_AA9AF5CF_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_44(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelGetGPO_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_45(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_AF3766BB_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_46(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelGzipGetInfo_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_47(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelDcacheWritebackInvalidateAll_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_48(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_B83A1E76_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_49(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelUtilsMd5BlockResult_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_50(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelRtcGetTick_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_51(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelDcacheInvalidateRange_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_52(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelUtilsMd5Digest_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_53(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_DBBE9A46_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_54(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelGzipIsValid_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_55(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelGzipGetName_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_56(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelUtilsMt19937Init_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_57(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelDeflateDecompress_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_58(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.UtilsForKernel_F0155BCA_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_59(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelUtilsSha1BlockInit_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForKernel$registerModule$lambda_60(this$UtilsForKernel) {
    return function (it) {
      this$UtilsForKernel.sceKernelIcacheReadTag_xt3zvs$(it);
      return Unit;
    };
  }
  UtilsForKernel.prototype.registerModule = function () {
    this.registerFunctionVoid_dc3d86$('sceKernelIcacheInvalidateRange', new Kotlin.Long(-1025542386, 0), 150, void 0, UtilsForKernel$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_004D4DEE', Kotlin.Long.fromInt(5066222), 150, void 0, UtilsForKernel$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsMt19937UInt', Kotlin.Long.fromInt(117148259), 150, void 0, UtilsForKernel$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetPTRIGMask', Kotlin.Long.fromInt(326050841), 150, void 0, UtilsForKernel$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_157A383A', Kotlin.Long.fromInt(360331322), 150, void 0, UtilsForKernel$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheReadTag', Kotlin.Long.fromInt(375659888), 150, void 0, UtilsForKernel$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetGPIMask', Kotlin.Long.fromInt(423444534), 150, void 0, UtilsForKernel$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_1B0592A3', Kotlin.Long.fromInt(453350051), 150, void 0, UtilsForKernel$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceKernelRegisterRtcFunc', Kotlin.Long.fromInt(597738938), 150, void 0, UtilsForKernel$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGzipGetCompressedData', Kotlin.Long.fromInt(603965480), 150, void 0, UtilsForKernel$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLibcTime', Kotlin.Long.fromInt(667703280), 150, void 0, UtilsForKernel$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsSha1BlockUpdate', Kotlin.Long.fromInt(879717800), 150, void 0, UtilsForKernel$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheWritebackInvalidateRange', Kotlin.Long.fromInt(884603550), 150, void 0, UtilsForKernel$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetGPI', Kotlin.Long.fromInt(939220034), 150, void 0, UtilsForKernel$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetPTRIG', Kotlin.Long.fromInt(972330512), 150, void 0, UtilsForKernel$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheWritebackRange', Kotlin.Long.fromInt(1055066145), 150, void 0, UtilsForKernel$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_3FD3D324', Kotlin.Long.fromInt(1070846756), 150, void 0, UtilsForKernel$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReleaseRtcFunc', Kotlin.Long.fromInt(1099464436), 150, void 0, UtilsForKernel$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_43C9A8DB', Kotlin.Long.fromInt(1137289435), 150, void 0, UtilsForKernel$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceKernelIcacheProbe', Kotlin.Long.fromInt(1339235485), 150, void 0, UtilsForKernel$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_515B4FAF', Kotlin.Long.fromInt(1364938671), 150, void 0, UtilsForKernel$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsSha1BlockResult', Kotlin.Long.fromInt(1482628105), 150, void 0, UtilsForKernel$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_5C7F2B1A', Kotlin.Long.fromInt(1551837978), 150, void 0, UtilsForKernel$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsMd5BlockUpdate', Kotlin.Long.fromInt(1642194213), 150, void 0, UtilsForKernel$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetPTRIG', Kotlin.Long.fromInt(1647421213), 150, void 0, UtilsForKernel$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetGPO', Kotlin.Long.fromInt(1792230871), 150, void 0, UtilsForKernel$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_6C6887EE', Kotlin.Long.fromInt(1818789870), 150, void 0, UtilsForKernel$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLibcGettimeofday', Kotlin.Long.fromInt(1911308913), 150, void 0, UtilsForKernel$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_7333E539', Kotlin.Long.fromInt(1932780857), 150, void 0, UtilsForKernel$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_740DF7F0', Kotlin.Long.fromInt(1947072496), 150, void 0, UtilsForKernel$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheProbeRange', Kotlin.Long.fromInt(2011164807), 150, void 0, UtilsForKernel$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGzipDecompress', Kotlin.Long.fromInt(2022918209), 150, void 0, UtilsForKernel$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheWritebackAll', Kotlin.Long.fromInt(2043790330), 150, void 0, UtilsForKernel$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheProbe', new Kotlin.Long(-2147476404, 0), 150, void 0, UtilsForKernel$registerModule$lambda_32(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsSha1Digest', new Kotlin.Long(-2080220687, 0), 150, void 0, UtilsForKernel$registerModule$lambda_33(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheInvalidateAll', new Kotlin.Long(-2041930382, 0), 150, void 0, UtilsForKernel$registerModule$lambda_34(this));
    this.registerFunctionRaw_gh35x6$('sceKernelPutUserLog', new Kotlin.Long(-2014833311, 0), 150, void 0, UtilsForKernel$registerModule$lambda_35(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGzipGetComment', new Kotlin.Long(-1944076796, 0), 150, void 0, UtilsForKernel$registerModule$lambda_36(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLibcClock', new Kotlin.Long(-1847265625, 0), 150, void 0, UtilsForKernel$registerModule$lambda_37(this));
    this.registerFunctionRaw_gh35x6$('sceKernelIcacheInvalidateAll', new Kotlin.Long(-1844506550, 0), 150, void 0, UtilsForKernel$registerModule$lambda_38(this));
    this.registerFunctionRaw_gh35x6$('sceKernelRegisterUserLogHandler', new Kotlin.Long(-1842861497, 0), 150, void 0, UtilsForKernel$registerModule$lambda_39(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetGPOMask', new Kotlin.Long(-1794940945, 0), 150, void 0, UtilsForKernel$registerModule$lambda_40(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_99134C3F', new Kotlin.Long(-1726788545, 0), 150, void 0, UtilsForKernel$registerModule$lambda_41(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsMd5BlockInit', new Kotlin.Long(-1638117242, 0), 150, void 0, UtilsForKernel$registerModule$lambda_42(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_AA9AF5CF', new Kotlin.Long(-1432685105, 0), 150, void 0, UtilsForKernel$registerModule$lambda_43(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetGPO', new Kotlin.Long(-1355409728, 0), 150, void 0, UtilsForKernel$registerModule$lambda_44(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_AF3766BB', new Kotlin.Long(-1355323717, 0), 150, void 0, UtilsForKernel$registerModule$lambda_45(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGzipGetInfo', new Kotlin.Long(-1326857441, 0), 150, void 0, UtilsForKernel$registerModule$lambda_46(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheWritebackInvalidateAll', new Kotlin.Long(-1271537979, 0), 150, void 0, UtilsForKernel$registerModule$lambda_47(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_B83A1E76', new Kotlin.Long(-1204150666, 0), 150, void 0, UtilsForKernel$registerModule$lambda_48(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsMd5BlockResult', new Kotlin.Long(-1194176904, 0), 150, void 0, UtilsForKernel$registerModule$lambda_49(this));
    this.registerFunctionRaw_gh35x6$('sceKernelRtcGetTick', new Kotlin.Long(-1111504247, 0), 150, void 0, UtilsForKernel$registerModule$lambda_50(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheInvalidateRange', new Kotlin.Long(-1079410590, 0), 150, void 0, UtilsForKernel$registerModule$lambda_51(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsMd5Digest', new Kotlin.Long(-937924008, 0), 150, void 0, UtilsForKernel$registerModule$lambda_52(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_DBBE9A46', new Kotlin.Long(-608265658, 0), 150, void 0, UtilsForKernel$registerModule$lambda_53(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGzipIsValid', new Kotlin.Long(-523354583, 0), 150, void 0, UtilsForKernel$registerModule$lambda_54(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGzipGetName', new Kotlin.Long(-521749866, 0), 150, void 0, UtilsForKernel$registerModule$lambda_55(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsMt19937Init', new Kotlin.Long(-396302498, 0), 150, void 0, UtilsForKernel$registerModule$lambda_56(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDeflateDecompress', new Kotlin.Long(-388285210, 0), 150, void 0, UtilsForKernel$registerModule$lambda_57(this));
    this.registerFunctionRaw_gh35x6$('UtilsForKernel_F0155BCA', new Kotlin.Long(-267035702, 0), 150, void 0, UtilsForKernel$registerModule$lambda_58(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsSha1BlockInit', new Kotlin.Long(-117647942, 0), 150, void 0, UtilsForKernel$registerModule$lambda_59(this));
    this.registerFunctionRaw_gh35x6$('sceKernelIcacheReadTag', new Kotlin.Long(-83494192, 0), 150, void 0, UtilsForKernel$registerModule$lambda_60(this));
  };
  UtilsForKernel.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UtilsForKernel',
    interfaces: [SceModule]
  };
  function UtilsForUser(emulator) {
    SceModule.call(this, emulator, 'UtilsForUser', 1073807377, 'sysmem.prx', 'sceSystemMemoryManager');
    this.random = MtRand_init(0);
  }
  UtilsForUser.prototype.sceKernelUtilsMt19937Init_1fpi1a$ = function (ctx, seed) {
    println('Not implemented UtilsForUser.sceKernelUtilsMt19937Init');
    return 0;
  };
  UtilsForUser.prototype.sceKernelUtilsMt19937UInt_xnxgf8$ = function (ctx) {
    var value = this.random.nextInt();
    return value;
  };
  UtilsForUser.prototype.sceKernelLibcGettimeofday_dyqe6s$ = function (timevalPtr, timezonePtr) {
    if (get_isNotNull(timevalPtr)) {
      var totalMilliseconds = currentTimeMicro(klock.Klock);
      var totalSeconds = totalMilliseconds.div(Kotlin.Long.fromInt(1000));
      var milliseconds = totalMilliseconds.modulo(Kotlin.Long.fromInt(1000));
      var microseconds = milliseconds.multiply(Kotlin.Long.fromInt(1000));
      timevalPtr.sw_vux9f0$(0, totalSeconds.toInt());
      timevalPtr.sw_vux9f0$(4, microseconds.toInt());
    }
    if (get_isNotNull(timezonePtr)) {
      var minutesWest = 0;
      var dstTime = 0;
      timevalPtr.sw_vux9f0$(0, minutesWest);
      timevalPtr.sw_vux9f0$(4, dstTime);
    }
    return 0;
  };
  UtilsForUser.prototype.sceKernelLibcTime_xnxgf8$ = function (ptr) {
    var seconds = get_rtc(this).getTimeInSeconds();
    if (get_isNotNull(ptr)) {
      ptr.sw_vux9f0$(0, seconds);
    }
    return seconds;
  };
  UtilsForUser.prototype.sceKernelDcacheWritebackAll = function () {
    this.emulator.invalidateDcache_vux9f0$(0, 2147483647);
    return 0;
  };
  UtilsForUser.prototype.UtilsForUser_004D4DEE_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(5066222);
  };
  UtilsForUser.prototype.sceKernelUtilsMt19937UInt_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(117148259);
  };
  UtilsForUser.prototype.UtilsForUser_157A383A_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(360331322);
  };
  UtilsForUser.prototype.sceKernelDcacheReadTag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(375659888);
  };
  UtilsForUser.prototype.UtilsForUser_1B0592A3_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(453350051);
  };
  UtilsForUser.prototype.sceKernelUtilsSha1BlockUpdate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(879717800);
  };
  UtilsForUser.prototype.sceKernelDcacheWritebackInvalidateRange_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(884603550);
  };
  UtilsForUser.prototype.sceKernelGetGPI_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(939220034);
  };
  UtilsForUser.prototype.UtilsForUser_39F49610_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(972330512);
  };
  UtilsForUser.prototype.sceKernelDcacheWritebackRange_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1055066145);
  };
  UtilsForUser.prototype.UtilsForUser_3FD3D324_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1070846756);
  };
  UtilsForUser.prototype.UtilsForUser_43C9A8DB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1137289435);
  };
  UtilsForUser.prototype.sceKernelIcacheProbe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1339235485);
  };
  UtilsForUser.prototype.UtilsForUser_515B4FAF_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1364938671);
  };
  UtilsForUser.prototype.sceKernelUtilsSha1BlockResult_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1482628105);
  };
  UtilsForUser.prototype.UtilsForUser_5C7F2B1A_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1551837978);
  };
  UtilsForUser.prototype.sceKernelUtilsMd5BlockUpdate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1642194213);
  };
  UtilsForUser.prototype.UtilsForUser_6231A71D_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1647421213);
  };
  UtilsForUser.prototype.sceKernelSetGPO_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1792230871);
  };
  UtilsForUser.prototype.UtilsForUser_7333E539_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1932780857);
  };
  UtilsForUser.prototype.UtilsForUser_740DF7F0_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1947072496);
  };
  UtilsForUser.prototype.sceKernelDcacheProbeRange_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2011164807);
  };
  UtilsForUser.prototype.sceKernelDcacheProbe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2147476404, 0));
  };
  UtilsForUser.prototype.sceKernelUtilsSha1Digest_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2080220687, 0));
  };
  UtilsForUser.prototype.sceKernelPutUserLog_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2014833311, 0));
  };
  UtilsForUser.prototype.sceKernelLibcClock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1847265625, 0));
  };
  UtilsForUser.prototype.sceKernelIcacheInvalidateAll_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1844506550, 0));
  };
  UtilsForUser.prototype.UtilsForUser_99134C3F_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1726788545, 0));
  };
  UtilsForUser.prototype.sceKernelUtilsMd5BlockInit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1638117242, 0));
  };
  UtilsForUser.prototype.UtilsForUser_AF3766BB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1355323717, 0));
  };
  UtilsForUser.prototype.sceKernelDcacheWritebackInvalidateAll_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1271537979, 0));
  };
  UtilsForUser.prototype.UtilsForUser_B83A1E76_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1204150666, 0));
  };
  UtilsForUser.prototype.sceKernelUtilsMd5BlockResult_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1194176904, 0));
  };
  UtilsForUser.prototype.sceKernelDcacheInvalidateRange_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1079410590, 0));
  };
  UtilsForUser.prototype.sceKernelIcacheInvalidateRange_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1025542386, 0));
  };
  UtilsForUser.prototype.sceKernelUtilsMd5Digest_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-937924008, 0));
  };
  UtilsForUser.prototype.UtilsForUser_DBBE9A46_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-608265658, 0));
  };
  UtilsForUser.prototype.sceKernelUtilsMt19937Init_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-396302498, 0));
  };
  UtilsForUser.prototype.UtilsForUser_F0155BCA_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-267035702, 0));
  };
  UtilsForUser.prototype.sceKernelUtilsSha1BlockInit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-117647942, 0));
  };
  UtilsForUser.prototype.sceKernelIcacheReadTag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-83494192, 0));
  };
  function UtilsForUser$registerModule$lambda(this$UtilsForUser) {
    return function ($receiver, it) {
      return this$UtilsForUser.sceKernelUtilsMt19937Init_1fpi1a$($receiver.ptr, $receiver.int);
    };
  }
  function UtilsForUser$registerModule$lambda_0(this$UtilsForUser) {
    return function ($receiver, it) {
      return this$UtilsForUser.sceKernelUtilsMt19937UInt_xnxgf8$($receiver.ptr);
    };
  }
  function UtilsForUser$registerModule$lambda_1(this$UtilsForUser) {
    return function ($receiver, it) {
      return this$UtilsForUser.sceKernelLibcGettimeofday_dyqe6s$($receiver.ptr, $receiver.ptr);
    };
  }
  function UtilsForUser$registerModule$lambda_2(this$UtilsForUser) {
    return function ($receiver, it) {
      return this$UtilsForUser.sceKernelLibcTime_xnxgf8$($receiver.ptr);
    };
  }
  function UtilsForUser$registerModule$lambda_3(this$UtilsForUser) {
    return function ($receiver, it) {
      return this$UtilsForUser.sceKernelDcacheWritebackAll();
    };
  }
  function UtilsForUser$registerModule$lambda_4(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_004D4DEE_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_5(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_157A383A_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_6(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelDcacheReadTag_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_7(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_1B0592A3_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_8(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelUtilsSha1BlockUpdate_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_9(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelDcacheWritebackInvalidateRange_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_10(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelGetGPI_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_11(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_39F49610_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_12(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelDcacheWritebackRange_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_13(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_3FD3D324_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_14(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_43C9A8DB_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_15(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelIcacheProbe_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_16(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_515B4FAF_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_17(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelUtilsSha1BlockResult_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_18(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_5C7F2B1A_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_19(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelUtilsMd5BlockUpdate_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_20(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_6231A71D_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_21(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelSetGPO_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_22(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_7333E539_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_23(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_740DF7F0_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_24(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelDcacheProbeRange_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_25(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelDcacheProbe_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_26(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelUtilsSha1Digest_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_27(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelPutUserLog_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_28(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelLibcClock_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_29(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelIcacheInvalidateAll_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_30(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_99134C3F_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_31(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelUtilsMd5BlockInit_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_32(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_AF3766BB_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_33(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelDcacheWritebackInvalidateAll_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_34(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_B83A1E76_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_35(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelUtilsMd5BlockResult_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_36(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelDcacheInvalidateRange_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_37(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelIcacheInvalidateRange_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_38(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelUtilsMd5Digest_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_39(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_DBBE9A46_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_40(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.UtilsForUser_F0155BCA_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_41(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelUtilsSha1BlockInit_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsForUser$registerModule$lambda_42(this$UtilsForUser) {
    return function (it) {
      this$UtilsForUser.sceKernelIcacheReadTag_xt3zvs$(it);
      return Unit;
    };
  }
  UtilsForUser.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceKernelUtilsMt19937Init', new Kotlin.Long(-396302498, 0), 150, 8383, UtilsForUser$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceKernelUtilsMt19937UInt', Kotlin.Long.fromInt(117148259), 150, 8384, UtilsForUser$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceKernelLibcGettimeofday', Kotlin.Long.fromInt(1911308913), 150, void 0, UtilsForUser$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('sceKernelLibcTime', Kotlin.Long.fromInt(667703280), 150, void 0, UtilsForUser$registerModule$lambda_2(this));
    this.registerFunctionInt_9l82lv$('sceKernelDcacheWritebackAll', Kotlin.Long.fromInt(2043790330), 150, void 0, UtilsForUser$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_004D4DEE', Kotlin.Long.fromInt(5066222), 150, void 0, UtilsForUser$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_157A383A', Kotlin.Long.fromInt(360331322), 150, void 0, UtilsForUser$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheReadTag', Kotlin.Long.fromInt(375659888), 150, void 0, UtilsForUser$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_1B0592A3', Kotlin.Long.fromInt(453350051), 150, void 0, UtilsForUser$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsSha1BlockUpdate', Kotlin.Long.fromInt(879717800), 150, void 0, UtilsForUser$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheWritebackInvalidateRange', Kotlin.Long.fromInt(884603550), 150, void 0, UtilsForUser$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetGPI', Kotlin.Long.fromInt(939220034), 150, void 0, UtilsForUser$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_39F49610', Kotlin.Long.fromInt(972330512), 150, void 0, UtilsForUser$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheWritebackRange', Kotlin.Long.fromInt(1055066145), 150, void 0, UtilsForUser$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_3FD3D324', Kotlin.Long.fromInt(1070846756), 150, void 0, UtilsForUser$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_43C9A8DB', Kotlin.Long.fromInt(1137289435), 150, void 0, UtilsForUser$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceKernelIcacheProbe', Kotlin.Long.fromInt(1339235485), 150, void 0, UtilsForUser$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_515B4FAF', Kotlin.Long.fromInt(1364938671), 150, void 0, UtilsForUser$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsSha1BlockResult', Kotlin.Long.fromInt(1482628105), 150, void 0, UtilsForUser$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_5C7F2B1A', Kotlin.Long.fromInt(1551837978), 150, void 0, UtilsForUser$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsMd5BlockUpdate', Kotlin.Long.fromInt(1642194213), 150, void 0, UtilsForUser$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_6231A71D', Kotlin.Long.fromInt(1647421213), 150, void 0, UtilsForUser$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetGPO', Kotlin.Long.fromInt(1792230871), 150, void 0, UtilsForUser$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_7333E539', Kotlin.Long.fromInt(1932780857), 150, void 0, UtilsForUser$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_740DF7F0', Kotlin.Long.fromInt(1947072496), 150, void 0, UtilsForUser$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheProbeRange', Kotlin.Long.fromInt(2011164807), 150, void 0, UtilsForUser$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheProbe', new Kotlin.Long(-2147476404, 0), 150, void 0, UtilsForUser$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsSha1Digest', new Kotlin.Long(-2080220687, 0), 150, void 0, UtilsForUser$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('sceKernelPutUserLog', new Kotlin.Long(-2014833311, 0), 150, void 0, UtilsForUser$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLibcClock', new Kotlin.Long(-1847265625, 0), 150, void 0, UtilsForUser$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('sceKernelIcacheInvalidateAll', new Kotlin.Long(-1844506550, 0), 150, void 0, UtilsForUser$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_99134C3F', new Kotlin.Long(-1726788545, 0), 150, void 0, UtilsForUser$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsMd5BlockInit', new Kotlin.Long(-1638117242, 0), 150, void 0, UtilsForUser$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_AF3766BB', new Kotlin.Long(-1355323717, 0), 150, void 0, UtilsForUser$registerModule$lambda_32(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheWritebackInvalidateAll', new Kotlin.Long(-1271537979, 0), 150, void 0, UtilsForUser$registerModule$lambda_33(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_B83A1E76', new Kotlin.Long(-1204150666, 0), 150, void 0, UtilsForUser$registerModule$lambda_34(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsMd5BlockResult', new Kotlin.Long(-1194176904, 0), 150, void 0, UtilsForUser$registerModule$lambda_35(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheInvalidateRange', new Kotlin.Long(-1079410590, 0), 150, void 0, UtilsForUser$registerModule$lambda_36(this));
    this.registerFunctionRaw_gh35x6$('sceKernelIcacheInvalidateRange', new Kotlin.Long(-1025542386, 0), 150, void 0, UtilsForUser$registerModule$lambda_37(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsMd5Digest', new Kotlin.Long(-937924008, 0), 150, void 0, UtilsForUser$registerModule$lambda_38(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_DBBE9A46', new Kotlin.Long(-608265658, 0), 150, void 0, UtilsForUser$registerModule$lambda_39(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_F0155BCA', new Kotlin.Long(-267035702, 0), 150, void 0, UtilsForUser$registerModule$lambda_40(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsSha1BlockInit', new Kotlin.Long(-117647942, 0), 150, void 0, UtilsForUser$registerModule$lambda_41(this));
    this.registerFunctionRaw_gh35x6$('sceKernelIcacheReadTag', new Kotlin.Long(-83494192, 0), 150, void 0, UtilsForUser$registerModule$lambda_42(this));
  };
  UtilsForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UtilsForUser',
    interfaces: [SceModule]
  };
  function sceAudio(emulator) {
    SceModule.call(this, emulator, 'sceAudio', 1073807377, 'popsman.prx', 'scePops_Manager');
  }
  function sceAudio$AudioFormat() {
    sceAudio$AudioFormat_instance = this;
    this.Stereo = 0;
    this.Mono = 16;
  }
  sceAudio$AudioFormat.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'AudioFormat',
    interfaces: []
  };
  var sceAudio$AudioFormat_instance = null;
  function sceAudio$AudioFormat_getInstance() {
    if (sceAudio$AudioFormat_instance === null) {
      new sceAudio$AudioFormat();
    }
    return sceAudio$AudioFormat_instance;
  }
  sceAudio.prototype.sceAudioChReserve_qt1dr2$ = function (channelId, sampleCount, audioFormat) {
    this.logger.info_61zpoe$('WIP: sceAudioChReserve');
    return 0;
  };
  sceAudio.prototype.sceAudioOutputPannedBlocking_xkocyi$ = function (channelId, leftVolume, rightVolume, ptr, continuation_0, suspended) {
    var instance = new Coroutine$sceAudioOutputPannedBlocking_xkocyi$(this, channelId, leftVolume, rightVolume, ptr, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceAudioOutputPannedBlocking_xkocyi$($this, channelId, leftVolume, rightVolume, ptr, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$sceAudioOutputPannedBlocking_xkocyi$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceAudioOutputPannedBlocking_xkocyi$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceAudioOutputPannedBlocking_xkocyi$.prototype.constructor = Coroutine$sceAudioOutputPannedBlocking_xkocyi$;
  Coroutine$sceAudioOutputPannedBlocking_xkocyi$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.logger.info_61zpoe$('WIP: sceAudioOutputPannedBlocking');
            this.state_0 = 2;
            this.result_0 = getCoroutineContext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = sleep_0(this.result_0, 10, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  sceAudio.prototype.sceAudioChReserve_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1590172757);
  };
  sceAudio.prototype.sceAudioOutput2Reserve_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(22424483);
  };
  sceAudio.prototype.sceAudioInputBlocking_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(141449365);
  };
  sceAudio.prototype.sceAudioOutputBlocking_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(325889873);
  };
  sceAudio.prototype.sceAudioOutput2OutputBlocking_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(760476526);
  };
  sceAudio.prototype.sceAudioSRCChReserve_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(945107217);
  };
  sceAudio.prototype.sceAudioOneshotOutput_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1106226663);
  };
  sceAudio.prototype.sceAudioOutput2Release_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1125738565);
  };
  sceAudio.prototype.sceAudioSRCChRelease_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1547157678);
  };
  sceAudio.prototype.sceAudioOutput2ChangeLength_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1676839068);
  };
  sceAudio.prototype.sceAudioOutput2GetRestSample_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1685909299);
  };
  sceAudio.prototype.sceAudioInput_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1833692264);
  };
  sceAudio.prototype.sceAudioChRelease_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1875142739);
  };
  sceAudio.prototype.sceAudioInputInit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2112231048);
  };
  sceAudio.prototype.sceAudioWaitInputEnd_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2018318767, 0));
  };
  sceAudio.prototype.sceAudioOutput_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1945105998, 0));
  };
  sceAudio.prototype.sceAudioChangeChannelConfig_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1778578387, 0));
  };
  sceAudio.prototype.sceAudioPollInputEnd_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1506605938, 0));
  };
  sceAudio.prototype.sceAudioGetInputLength_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1492597082, 0));
  };
  sceAudio.prototype.sceAudioGetChannelRestLength_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1341025745, 0));
  };
  sceAudio.prototype.sceAudioChangeChannelVolume_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1209935641, 0));
  };
  sceAudio.prototype.sceAudioSetChannelDataLen_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-886160482, 0));
  };
  sceAudio.prototype.sceAudioSRCOutputBlocking_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-529371050, 0));
  };
  sceAudio.prototype.sceAudioOutputPanned_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-489329875, 0));
  };
  sceAudio.prototype.sceAudioInputInitEx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-383331333, 0));
  };
  sceAudio.prototype.sceAudioGetChannelRestLen_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-371623679, 0));
  };
  function sceAudio$registerModule$lambda(this$sceAudio) {
    return function ($receiver, it) {
      return this$sceAudio.sceAudioChReserve_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceAudio$registerModule$lambda_0(this$sceAudio_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$sceAudio$registerModule$lambda(this$sceAudio_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceAudio$registerModule$lambda(this$sceAudio_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceAudio = this$sceAudio_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceAudio$registerModule$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceAudio$registerModule$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceAudio$registerModule$lambda.prototype.constructor = Coroutine$sceAudio$registerModule$lambda;
  Coroutine$sceAudio$registerModule$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceAudio.sceAudioOutputPannedBlocking_xkocyi$(this.local$$receiver.int, this.local$$receiver.int, this.local$$receiver.int, this.local$$receiver.ptr, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceAudio$registerModule$lambda_1(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutput2Reserve_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_2(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioInputBlocking_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_3(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutputBlocking_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_4(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutput2OutputBlocking_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_5(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioSRCChReserve_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_6(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOneshotOutput_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_7(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutput2Release_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_8(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioSRCChRelease_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_9(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutput2ChangeLength_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_10(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutput2GetRestSample_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_11(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioInput_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_12(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioChRelease_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_13(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioInputInit_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_14(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioWaitInputEnd_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_15(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutput_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_16(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioChangeChannelConfig_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_17(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioPollInputEnd_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_18(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioGetInputLength_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_19(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioGetChannelRestLength_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_20(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioChangeChannelVolume_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_21(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioSetChannelDataLen_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_22(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioSRCOutputBlocking_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_23(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutputPanned_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_24(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioInputInitEx_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_25(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioGetChannelRestLen_xt3zvs$(it);
      return Unit;
    };
  }
  sceAudio.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceAudioChReserve', Kotlin.Long.fromInt(1590172757), 150, void 0, sceAudio$registerModule$lambda(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceAudioOutputPannedBlocking', Kotlin.Long.fromInt(334860988), 150, void 0, void 0, sceAudio$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutput2Reserve', Kotlin.Long.fromInt(22424483), 150, void 0, sceAudio$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceAudioInputBlocking', Kotlin.Long.fromInt(141449365), 150, void 0, sceAudio$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutputBlocking', Kotlin.Long.fromInt(325889873), 150, void 0, sceAudio$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutput2OutputBlocking', Kotlin.Long.fromInt(760476526), 150, void 0, sceAudio$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceAudioSRCChReserve', Kotlin.Long.fromInt(945107217), 150, void 0, sceAudio$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOneshotOutput', Kotlin.Long.fromInt(1106226663), 150, void 0, sceAudio$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutput2Release', Kotlin.Long.fromInt(1125738565), 150, void 0, sceAudio$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceAudioSRCChRelease', Kotlin.Long.fromInt(1547157678), 150, void 0, sceAudio$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutput2ChangeLength', Kotlin.Long.fromInt(1676839068), 150, void 0, sceAudio$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutput2GetRestSample', Kotlin.Long.fromInt(1685909299), 150, void 0, sceAudio$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceAudioInput', Kotlin.Long.fromInt(1833692264), 150, void 0, sceAudio$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceAudioChRelease', Kotlin.Long.fromInt(1875142739), 150, void 0, sceAudio$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceAudioInputInit', Kotlin.Long.fromInt(2112231048), 150, void 0, sceAudio$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceAudioWaitInputEnd', new Kotlin.Long(-2018318767, 0), 150, void 0, sceAudio$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutput', new Kotlin.Long(-1945105998, 0), 150, void 0, sceAudio$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceAudioChangeChannelConfig', new Kotlin.Long(-1778578387, 0), 150, void 0, sceAudio$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceAudioPollInputEnd', new Kotlin.Long(-1506605938, 0), 150, void 0, sceAudio$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceAudioGetInputLength', new Kotlin.Long(-1492597082, 0), 150, void 0, sceAudio$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceAudioGetChannelRestLength', new Kotlin.Long(-1341025745, 0), 150, void 0, sceAudio$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceAudioChangeChannelVolume', new Kotlin.Long(-1209935641, 0), 150, void 0, sceAudio$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceAudioSetChannelDataLen', new Kotlin.Long(-886160482, 0), 150, void 0, sceAudio$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceAudioSRCOutputBlocking', new Kotlin.Long(-529371050, 0), 150, void 0, sceAudio$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutputPanned', new Kotlin.Long(-489329875, 0), 150, void 0, sceAudio$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceAudioInputInitEx', new Kotlin.Long(-383331333, 0), 150, void 0, sceAudio$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('sceAudioGetChannelRestLen', new Kotlin.Long(-371623679, 0), 150, void 0, sceAudio$registerModule$lambda_25(this));
  };
  sceAudio.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceAudio',
    interfaces: [SceModule]
  };
  function sceCtrl(emulator) {
    SceModule.call(this, emulator, 'sceCtrl', 1073807377, 'ctrl.prx', 'sceController_Service');
  }
  sceCtrl.prototype.sceCtrlPeekBufferPositive_1fpi1a$ = function (sceCtrlDataPtr, count) {
    var pos = 0;
    for (var n = 0; n < count; n++) {
      sceCtrlDataPtr.sw_vux9f0$(pos + 0 | 0, 0);
      sceCtrlDataPtr.sw_vux9f0$(pos + 4 | 0, get_controller(this).buttons);
      sceCtrlDataPtr.sb_vux9f0$(pos + 8 | 0, get_controller(this).lx);
      sceCtrlDataPtr.sb_vux9f0$(pos + 9 | 0, get_controller(this).ly);
      pos = pos + 16 | 0;
    }
    return count;
  };
  sceCtrl.prototype.sceCtrlReadBufferPositive_1fpi1a$ = function (sceCtrlDataPtr, count) {
    return this.sceCtrlPeekBufferPositive_1fpi1a$(sceCtrlDataPtr, count);
  };
  sceCtrl.prototype.sceCtrlSetSamplingCycle_za3lpa$ = function (samplingCycle) {
    get_controller(this).samplingCycle = samplingCycle;
    return 0;
  };
  sceCtrl.prototype.sceCtrlSetSamplingMode_za3lpa$ = function (samplingMode) {
    get_controller(this).samplingMode = samplingMode;
    return 0;
  };
  sceCtrl.prototype.sceCtrlGetSamplingCycle_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(45788561);
  };
  sceCtrl.prototype.sceCtrlReadLatch_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(190350593);
  };
  sceCtrl.prototype.sceCtrl_348D99D4_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(881695188);
  };
  sceCtrl.prototype.sceCtrlPeekBufferPositive_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(979510608);
  };
  sceCtrl.prototype.sceCtrlReadBufferNegative_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1622679430);
  };
  sceCtrl.prototype.sceCtrlSetRapidFire_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1749138970);
  };
  sceCtrl.prototype.sceCtrlGetIdleCancelThreshold_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1752588538);
  };
  sceCtrl.prototype.sceCtrlClearRapidFire_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1500523936, 0));
  };
  sceCtrl.prototype.sceCtrlSetIdleCancelThreshold_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1491843072, 0));
  };
  sceCtrl.prototype.sceCtrl_AF5960F3_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1353096973, 0));
  };
  sceCtrl.prototype.sceCtrlPeekLatch_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1311709747, 0));
  };
  sceCtrl.prototype.sceCtrlPeekBufferNegative_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1051588598, 0));
  };
  sceCtrl.prototype.sceCtrlGetSamplingMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-630491487, 0));
  };
  function sceCtrl$registerModule$lambda(this$sceCtrl) {
    return function ($receiver, it) {
      return this$sceCtrl.sceCtrlPeekBufferPositive_1fpi1a$($receiver.ptr, $receiver.int);
    };
  }
  function sceCtrl$registerModule$lambda_0(this$sceCtrl) {
    return function ($receiver, it) {
      return this$sceCtrl.sceCtrlReadBufferPositive_1fpi1a$($receiver.ptr, $receiver.int);
    };
  }
  function sceCtrl$registerModule$lambda_1(this$sceCtrl) {
    return function ($receiver, it) {
      return this$sceCtrl.sceCtrlSetSamplingCycle_za3lpa$($receiver.int);
    };
  }
  function sceCtrl$registerModule$lambda_2(this$sceCtrl) {
    return function ($receiver, it) {
      return this$sceCtrl.sceCtrlSetSamplingMode_za3lpa$($receiver.int);
    };
  }
  function sceCtrl$registerModule$lambda_3(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlGetSamplingCycle_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_4(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlReadLatch_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_5(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrl_348D99D4_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_6(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlReadBufferNegative_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_7(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlSetRapidFire_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_8(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlGetIdleCancelThreshold_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_9(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlClearRapidFire_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_10(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlSetIdleCancelThreshold_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_11(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrl_AF5960F3_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_12(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlPeekLatch_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_13(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlPeekBufferNegative_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_14(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlGetSamplingMode_xt3zvs$(it);
      return Unit;
    };
  }
  sceCtrl.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceCtrlPeekBufferPositive', Kotlin.Long.fromInt(979510608), 150, 8528, sceCtrl$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceCtrlReadBufferPositive', Kotlin.Long.fromInt(528496952), 150, void 0, sceCtrl$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceCtrlSetSamplingCycle', Kotlin.Long.fromInt(1780970739), 150, void 0, sceCtrl$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('sceCtrlSetSamplingMode', Kotlin.Long.fromInt(524292582), 150, void 0, sceCtrl$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlGetSamplingCycle', Kotlin.Long.fromInt(45788561), 150, void 0, sceCtrl$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlReadLatch', Kotlin.Long.fromInt(190350593), 150, void 0, sceCtrl$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceCtrl_348D99D4', Kotlin.Long.fromInt(881695188), 150, void 0, sceCtrl$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlReadBufferNegative', Kotlin.Long.fromInt(1622679430), 150, void 0, sceCtrl$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlSetRapidFire', Kotlin.Long.fromInt(1749138970), 150, void 0, sceCtrl$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlGetIdleCancelThreshold', Kotlin.Long.fromInt(1752588538), 150, void 0, sceCtrl$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlClearRapidFire', new Kotlin.Long(-1500523936, 0), 150, void 0, sceCtrl$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlSetIdleCancelThreshold', new Kotlin.Long(-1491843072, 0), 150, void 0, sceCtrl$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceCtrl_AF5960F3', new Kotlin.Long(-1353096973, 0), 150, void 0, sceCtrl$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlPeekLatch', new Kotlin.Long(-1311709747, 0), 150, void 0, sceCtrl$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlPeekBufferNegative', new Kotlin.Long(-1051588598, 0), 150, void 0, sceCtrl$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlGetSamplingMode', new Kotlin.Long(-630491487, 0), 150, void 0, sceCtrl$registerModule$lambda_14(this));
  };
  sceCtrl.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceCtrl',
    interfaces: [SceModule]
  };
  function sceDisplay(emulator) {
    SceModule.call(this, emulator, 'sceDisplay', 1073807377, 'display_02g.prx', 'sceDisplay_Service');
  }
  sceDisplay.prototype.sceDisplaySetMode_qt1dr2$ = function (mode, width, height) {
    get_display(this).displayMode = mode;
    get_display(this).displayWidth = width;
    get_display(this).displayHeight = height;
    return 0;
  };
  sceDisplay.prototype.sceDisplayWaitVblankStart = function (continuation_0, suspended) {
    var instance = new Coroutine$sceDisplayWaitVblankStart(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceDisplayWaitVblankStart($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$sceDisplayWaitVblankStart.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceDisplayWaitVblankStart.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceDisplayWaitVblankStart.prototype.constructor = Coroutine$sceDisplayWaitVblankStart;
  Coroutine$sceDisplayWaitVblankStart.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = waitOne(get_display(this.$this).onVsync, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  sceDisplay.prototype.sceDisplayWaitVblank = function (continuation) {
    return 0;
  };
  sceDisplay.prototype.sceDisplaySetFrameBuf_tjonv8$ = function (address, bufferWidth, pixelFormat, sync) {
    get_display(this).address = address;
    get_display(this).bufferWidth = bufferWidth;
    get_display(this).pixelFormat = PixelFormat$Companion_getInstance().invoke_za3lpa$(pixelFormat);
    get_display(this).sync = sync;
    return 0;
  };
  sceDisplay.prototype.sceDisplayIsVsync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(553879827);
  };
  sceDisplay.prototype.sceDisplayGetAccumulatedHcount_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(554609466);
  };
  sceDisplay.prototype.sceDisplayGetBrightness_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(834976424);
  };
  sceDisplay.prototype.sceDisplay_40F1469C_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1089554076);
  };
  sceDisplay.prototype.sceDisplayIsVblank_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1296961772);
  };
  sceDisplay.prototype.sceDisplayGetVblankRest_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1773483329);
  };
  sceDisplay.prototype.sceDisplayGetCurrentHcount_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2000540579);
  };
  sceDisplay.prototype.sceDisplay_77ED8B3A_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2012056378);
  };
  sceDisplay.prototype.sceDisplaySetHoldMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2127928260);
  };
  sceDisplay.prototype.sceDisplayGetVcount_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1670468905, 0));
  };
  sceDisplay.prototype.sceDisplaySetResumeMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1522219898, 0));
  };
  sceDisplay.prototype.sceDisplayAdjustAccumulatedHcount_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1472270023, 0));
  };
  sceDisplay.prototype.sceDisplayIsForeground_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1259112198, 0));
  };
  sceDisplay.prototype.sceDisplayGetResumeMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1082526138, 0));
  };
  sceDisplay.prototype.sceDisplayGetFramePerSec_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-609827644, 0));
  };
  sceDisplay.prototype.sceDisplayGetMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-559835180, 0));
  };
  sceDisplay.prototype.sceDisplayGetFrameBuf_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-287691180, 0));
  };
  function sceDisplay$registerModule$lambda(this$sceDisplay) {
    return function ($receiver, it) {
      return this$sceDisplay.sceDisplaySetMode_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceDisplay$registerModule$lambda_0(this$sceDisplay) {
    return function ($receiver, it) {
      return this$sceDisplay.sceDisplaySetFrameBuf_tjonv8$($receiver.int, $receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceDisplay$registerModule$lambda_1(this$sceDisplay_0) {
    return function ($receiver, it, continuation_0, suspended) {
      var instance = new Coroutine$sceDisplay$registerModule$lambda(this$sceDisplay_0, $receiver, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceDisplay$registerModule$lambda(this$sceDisplay_0, $receiver, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceDisplay = this$sceDisplay_0;
  }
  Coroutine$sceDisplay$registerModule$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceDisplay$registerModule$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceDisplay$registerModule$lambda.prototype.constructor = Coroutine$sceDisplay$registerModule$lambda;
  Coroutine$sceDisplay$registerModule$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceDisplay.sceDisplayWaitVblank(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceDisplay$registerModule$lambda_2(this$sceDisplay_0) {
    return function ($receiver, it, continuation_0, suspended) {
      var instance = new Coroutine$sceDisplay$registerModule$lambda_0(this$sceDisplay_0, $receiver, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceDisplay$registerModule$lambda_0(this$sceDisplay_0, $receiver, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceDisplay = this$sceDisplay_0;
  }
  Coroutine$sceDisplay$registerModule$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceDisplay$registerModule$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceDisplay$registerModule$lambda_0.prototype.constructor = Coroutine$sceDisplay$registerModule$lambda_0;
  Coroutine$sceDisplay$registerModule$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceDisplay.sceDisplayWaitVblank(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceDisplay$registerModule$lambda_3(this$sceDisplay_0) {
    return function ($receiver, it, continuation_0, suspended) {
      var instance = new Coroutine$sceDisplay$registerModule$lambda_1(this$sceDisplay_0, $receiver, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceDisplay$registerModule$lambda_1(this$sceDisplay_0, $receiver, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceDisplay = this$sceDisplay_0;
  }
  Coroutine$sceDisplay$registerModule$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceDisplay$registerModule$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceDisplay$registerModule$lambda_1.prototype.constructor = Coroutine$sceDisplay$registerModule$lambda_1;
  Coroutine$sceDisplay$registerModule$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceDisplay.sceDisplayWaitVblankStart(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceDisplay$registerModule$lambda_4(this$sceDisplay_0) {
    return function ($receiver, it, continuation_0, suspended) {
      var instance = new Coroutine$sceDisplay$registerModule$lambda_2(this$sceDisplay_0, $receiver, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceDisplay$registerModule$lambda_2(this$sceDisplay_0, $receiver, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceDisplay = this$sceDisplay_0;
  }
  Coroutine$sceDisplay$registerModule$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceDisplay$registerModule$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceDisplay$registerModule$lambda_2.prototype.constructor = Coroutine$sceDisplay$registerModule$lambda_2;
  Coroutine$sceDisplay$registerModule$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceDisplay.sceDisplayWaitVblankStart(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceDisplay$registerModule$lambda_5(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayIsVsync_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_6(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetAccumulatedHcount_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_7(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetBrightness_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_8(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplay_40F1469C_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_9(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayIsVblank_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_10(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetVblankRest_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_11(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetCurrentHcount_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_12(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplay_77ED8B3A_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_13(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplaySetHoldMode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_14(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetVcount_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_15(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplaySetResumeMode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_16(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayAdjustAccumulatedHcount_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_17(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayIsForeground_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_18(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetResumeMode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_19(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetFramePerSec_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_20(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetMode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_21(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetFrameBuf_xt3zvs$(it);
      return Unit;
    };
  }
  sceDisplay.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceDisplaySetMode', Kotlin.Long.fromInt(237039991), 150, 8506, sceDisplay$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceDisplaySetFrameBuf', Kotlin.Long.fromInt(681411326), 150, 8511, sceDisplay$registerModule$lambda_0(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceDisplayWaitVblank', Kotlin.Long.fromInt(919468766), 150, void 0, false, sceDisplay$registerModule$lambda_1(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceDisplayWaitVblankCB', new Kotlin.Long(-1900417975, 0), 150, void 0, true, sceDisplay$registerModule$lambda_2(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceDisplayWaitVblankStart', new Kotlin.Long(-1739839513, 0), 150, 8519, false, sceDisplay$registerModule$lambda_3(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceDisplayWaitVblankStartCB', Kotlin.Long.fromInt(1190233795), 150, void 0, true, sceDisplay$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayIsVsync', Kotlin.Long.fromInt(553879827), 150, void 0, sceDisplay$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetAccumulatedHcount', Kotlin.Long.fromInt(554609466), 150, void 0, sceDisplay$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetBrightness', Kotlin.Long.fromInt(834976424), 150, void 0, sceDisplay$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceDisplay_40F1469C', Kotlin.Long.fromInt(1089554076), 150, void 0, sceDisplay$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayIsVblank', Kotlin.Long.fromInt(1296961772), 150, void 0, sceDisplay$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetVblankRest', Kotlin.Long.fromInt(1773483329), 150, void 0, sceDisplay$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetCurrentHcount', Kotlin.Long.fromInt(2000540579), 150, void 0, sceDisplay$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceDisplay_77ED8B3A', Kotlin.Long.fromInt(2012056378), 150, void 0, sceDisplay$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceDisplaySetHoldMode', Kotlin.Long.fromInt(2127928260), 150, void 0, sceDisplay$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetVcount', new Kotlin.Long(-1670468905, 0), 150, void 0, sceDisplay$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceDisplaySetResumeMode', new Kotlin.Long(-1522219898, 0), 150, void 0, sceDisplay$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayAdjustAccumulatedHcount', new Kotlin.Long(-1472270023, 0), 150, void 0, sceDisplay$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayIsForeground', new Kotlin.Long(-1259112198, 0), 150, void 0, sceDisplay$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetResumeMode', new Kotlin.Long(-1082526138, 0), 150, void 0, sceDisplay$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetFramePerSec', new Kotlin.Long(-609827644, 0), 150, void 0, sceDisplay$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetMode', new Kotlin.Long(-559835180, 0), 150, void 0, sceDisplay$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetFrameBuf', new Kotlin.Long(-287691180, 0), 150, void 0, sceDisplay$registerModule$lambda_21(this));
  };
  sceDisplay.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceDisplay',
    interfaces: [SceModule]
  };
  function sceGe_user(emulator) {
    SceModule.call(this, emulator, 'sceGe_user', 1073807377, 'ge.prx', 'sceGE_Manager');
    this.geCallbacks = new ResourceList('GeCallback', sceGe_user$geCallbacks$lambda);
  }
  sceGe_user.prototype.sceGeEdramGetAddr = function () {
    return 67108864;
  };
  sceGe_user.prototype.sceGeSetCallback_xnxgf8$ = function (callbackDataPtr) {
    var $receiver = this.geCallbacks.alloc();
    $receiver.signal_func = callbackDataPtr.lw_za3lpa$(0);
    $receiver.signal_arg = callbackDataPtr.lw_za3lpa$(4);
    $receiver.finish_func = callbackDataPtr.lw_za3lpa$(8);
    $receiver.finish_arg = callbackDataPtr.lw_za3lpa$(12);
    return $receiver.id;
  };
  sceGe_user.prototype.sceGeUnsetCallback_za3lpa$ = function (callbackId) {
    this.geCallbacks.freeById_za3lpa$(callbackId);
    return 0;
  };
  sceGe_user.prototype.sceGeListEnQueue_dv45i2$ = function (start, stall, callbackId, pspGeListArgs) {
    return get_ge(this).listEnqueue_56435g$(start.addr, stall.addr, this.geCallbacks.get_za3lpa$(callbackId), pspGeListArgs.addr).id;
  };
  sceGe_user.prototype.sceGeListUpdateStallAddr_o62i3q$ = function (displayListId, stall) {
    var list = get_ge(this).lists.get_za3lpa$(displayListId);
    list.stall = stall.addr;
    list.run();
    return 0;
  };
  sceGe_user.prototype.sceGeListSync_vux9f0$ = function (displayListId, syncType) {
    var displayList = get_ge(this).lists.get_za3lpa$(displayListId);
    displayList.sync_za3lpa$(syncType);
    return 0;
  };
  sceGe_user.prototype.sceGeDrawSync_za3lpa$ = function (syncType) {
    get_ge(this).sync_za3lpa$(syncType);
    return 0;
  };
  sceGe_user.prototype.sceGeSaveContext_xnxgf8$ = function (ptr) {
    var tmp$;
    tmp$ = GeState$Companion_getInstance().STATE_NWORDS;
    for (var n = 0; n < tmp$; n++)
      ptr.sw_vux9f0$(n * 4 | 0, get_ge(this).state.data[n]);
    return 0;
  };
  sceGe_user.prototype.sceGeRestoreContext_xnxgf8$ = function (ptr) {
    var tmp$;
    tmp$ = GeState$Companion_getInstance().STATE_NWORDS;
    for (var n = 0; n < tmp$; n++)
      get_ge(this).state.data[n] = ptr.lw_za3lpa$(n * 4 | 0);
    return 0;
  };
  sceGe_user.prototype.sceGeListEnQueueHead_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(470652326);
  };
  sceGe_user.prototype.sceGeEdramGetSize_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(526865069);
  };
  sceGe_user.prototype.sceGeContinue_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1275520114);
  };
  sceGe_user.prototype.sceGeGetMtx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1472762971);
  };
  sceGe_user.prototype.sceGeListDeQueue_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1605921456);
  };
  sceGe_user.prototype.sceGeBreak_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1270289395, 0));
  };
  sceGe_user.prototype.sceGeEdramSetAddrTranslation_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1216805398, 0));
  };
  sceGe_user.prototype.sceGeGetCmd_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-594292753, 0));
  };
  sceGe_user.prototype.sceGeGetStack_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-429082322, 0));
  };
  function sceGe_user$registerModule$lambda(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeEdramGetAddr();
    };
  }
  function sceGe_user$registerModule$lambda_0(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeListUpdateStallAddr_o62i3q$($receiver.int, $receiver.ptr);
    };
  }
  function sceGe_user$registerModule$lambda_1(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeListEnQueue_dv45i2$($receiver.ptr, $receiver.ptr, $receiver.int, $receiver.ptr);
    };
  }
  function sceGe_user$registerModule$lambda_2(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeListSync_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceGe_user$registerModule$lambda_3(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeDrawSync_za3lpa$($receiver.int);
    };
  }
  function sceGe_user$registerModule$lambda_4(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeSetCallback_xnxgf8$($receiver.ptr);
    };
  }
  function sceGe_user$registerModule$lambda_5(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeUnsetCallback_za3lpa$($receiver.int);
    };
  }
  function sceGe_user$registerModule$lambda_6(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeSaveContext_xnxgf8$($receiver.ptr);
    };
  }
  function sceGe_user$registerModule$lambda_7(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeRestoreContext_xnxgf8$($receiver.ptr);
    };
  }
  function sceGe_user$registerModule$lambda_8(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeListEnQueueHead_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_9(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeEdramGetSize_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_10(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeContinue_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_11(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeGetMtx_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_12(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeListDeQueue_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_13(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeBreak_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_14(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeEdramSetAddrTranslation_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_15(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeGetCmd_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_16(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeGetStack_xt3zvs$(it);
      return Unit;
    };
  }
  sceGe_user.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceGeEdramGetAddr', new Kotlin.Long(-461487900, 0), 150, void 0, sceGe_user$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceGeListUpdateStallAddr', new Kotlin.Long(-522813112, 0), 150, void 0, sceGe_user$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceGeListEnQueue', new Kotlin.Long(-1421219990, 0), 150, void 0, sceGe_user$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('sceGeListSync', Kotlin.Long.fromInt(54808244), 150, void 0, sceGe_user$registerModule$lambda_2(this));
    this.registerFunctionInt_9l82lv$('sceGeDrawSync', new Kotlin.Long(-1299727007, 0), 150, void 0, sceGe_user$registerModule$lambda_3(this));
    this.registerFunctionInt_9l82lv$('sceGeSetCallback', new Kotlin.Long(-1526987100, 0), 150, void 0, sceGe_user$registerModule$lambda_4(this));
    this.registerFunctionInt_9l82lv$('sceGeUnsetCallback', Kotlin.Long.fromInt(98247374), 150, void 0, sceGe_user$registerModule$lambda_5(this));
    this.registerFunctionInt_9l82lv$('sceGeSaveContext', Kotlin.Long.fromInt(1133131866), 150, void 0, sceGe_user$registerModule$lambda_6(this));
    this.registerFunctionInt_9l82lv$('sceGeRestoreContext', Kotlin.Long.fromInt(200673531), 150, void 0, sceGe_user$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceGeListEnQueueHead', Kotlin.Long.fromInt(470652326), 150, void 0, sceGe_user$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceGeEdramGetSize', Kotlin.Long.fromInt(526865069), 150, void 0, sceGe_user$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceGeContinue', Kotlin.Long.fromInt(1275520114), 150, void 0, sceGe_user$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceGeGetMtx', Kotlin.Long.fromInt(1472762971), 150, void 0, sceGe_user$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceGeListDeQueue', Kotlin.Long.fromInt(1605921456), 150, void 0, sceGe_user$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceGeBreak', new Kotlin.Long(-1270289395, 0), 150, void 0, sceGe_user$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceGeEdramSetAddrTranslation', new Kotlin.Long(-1216805398, 0), 150, void 0, sceGe_user$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceGeGetCmd', new Kotlin.Long(-594292753, 0), 150, void 0, sceGe_user$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceGeGetStack', new Kotlin.Long(-429082322, 0), 150, void 0, sceGe_user$registerModule$lambda_16(this));
  };
  function sceGe_user$geCallbacks$lambda(it) {
    return new GeCallback(it);
  }
  sceGe_user.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceGe_user',
    interfaces: [SceModule]
  };
  function sceNetInet(emulator) {
    SceModule.call(this, emulator, 'sceNetInet', 65553, 'pspnet_inet.prx', 'sceNetInet_Library');
  }
  sceNetInet.prototype.sceNetInetSendto_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(84119495);
  };
  sceNetInet.prototype.sceNetInetGetsockname_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(372142037);
  };
  sceNetInet.prototype.sceNetInetInit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(395588505);
  };
  sceNetInet.prototype.sceNetInetBind_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(439613870);
  };
  sceNetInet.prototype.sceNetInetInetAton_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(467623187);
  };
  sceNetInet.prototype.sceNetInet_1D023504_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(486683908);
  };
  sceNetInet.prototype.sceNetInet_2D5868C0_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(760768704);
  };
  sceNetInet.prototype.sceNetInetSetsockopt_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(803676135);
  };
  sceNetInet.prototype.sceNetInetGetUdpcbstat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(967886803);
  };
  sceNetInet.prototype.sceNetInetConnect_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1091253418);
  };
  sceNetInet.prototype.sceNetInetGetsockopt_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1242647676);
  };
  sceNetInet.prototype.sceNetInetShutdown_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1291734614);
  };
  sceNetInet.prototype.sceNetInetSelect_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1541985685);
  };
  sceNetInet.prototype.sceNetInetSendmsg_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2001614580);
  };
  sceNetInet.prototype.sceNetInetSend_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2057728444);
  };
  sceNetInet.prototype.sceNetInetCloseWithRST_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2141912355, 0));
  };
  sceNetInet.prototype.sceNetInetSocketAbort_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2136859971, 0));
  };
  sceNetInet.prototype.sceNetInetSocket_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1954864625, 0));
  };
  sceNetInet.prototype.sceNetInetGetPspError_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1935431298, 0));
  };
  sceNetInet.prototype.sceNetInetClose_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1921874710, 0));
  };
  sceNetInet.prototype.sceNetInetTerm_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1444059463, 0));
  };
  sceNetInet.prototype.sceNetInetGetTcpcbstat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1282897196, 0));
  };
  sceNetInet.prototype.sceNetInetInetAddr_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1218618614, 0));
  };
  sceNetInet.prototype.sceNetInetRecvfrom_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-921615644, 0));
  };
  sceNetInet.prototype.sceNetInet_CCC18C45_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-859730875, 0));
  };
  sceNetInet.prototype.sceNetInetRecv_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-844604263, 0));
  };
  sceNetInet.prototype.sceNetInetInetNtop_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-797366682, 0));
  };
  sceNetInet.prototype.sceNetInetListen_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-787867014, 0));
  };
  sceNetInet.prototype.sceNetInetAccept_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-620147173, 0));
  };
  sceNetInet.prototype.sceNetInetGetpeername_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-498616618, 0));
  };
  sceNetInet.prototype.sceNetInetInetPton_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-485782503, 0));
  };
  sceNetInet.prototype.sceNetInetRecvmsg_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-288464430, 0));
  };
  sceNetInet.prototype.sceNetInetPoll_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-89411107, 0));
  };
  sceNetInet.prototype.sceNetInetGetErrno_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-72621039, 0));
  };
  function sceNetInet$registerModule$lambda(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetSendto_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_0(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetGetsockname_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_1(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetInit_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_2(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetBind_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_3(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetInetAton_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_4(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInet_1D023504_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_5(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInet_2D5868C0_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_6(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetSetsockopt_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_7(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetGetUdpcbstat_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_8(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetConnect_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_9(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetGetsockopt_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_10(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetShutdown_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_11(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetSelect_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_12(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetSendmsg_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_13(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetSend_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_14(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetCloseWithRST_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_15(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetSocketAbort_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_16(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetSocket_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_17(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetGetPspError_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_18(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetClose_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_19(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetTerm_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_20(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetGetTcpcbstat_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_21(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetInetAddr_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_22(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetRecvfrom_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_23(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInet_CCC18C45_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_24(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetRecv_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_25(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetInetNtop_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_26(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetListen_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_27(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetAccept_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_28(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetGetpeername_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_29(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetInetPton_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_30(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetRecvmsg_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_31(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetPoll_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_32(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetGetErrno_xt3zvs$(it);
      return Unit;
    };
  }
  sceNetInet.prototype.registerModule = function () {
    this.registerFunctionRaw_gh35x6$('sceNetInetSendto', Kotlin.Long.fromInt(84119495), 150, void 0, sceNetInet$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetGetsockname', Kotlin.Long.fromInt(372142037), 150, void 0, sceNetInet$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetInit', Kotlin.Long.fromInt(395588505), 150, void 0, sceNetInet$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetBind', Kotlin.Long.fromInt(439613870), 150, void 0, sceNetInet$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetInetAton', Kotlin.Long.fromInt(467623187), 150, void 0, sceNetInet$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceNetInet_1D023504', Kotlin.Long.fromInt(486683908), 150, void 0, sceNetInet$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceNetInet_2D5868C0', Kotlin.Long.fromInt(760768704), 150, void 0, sceNetInet$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetSetsockopt', Kotlin.Long.fromInt(803676135), 150, void 0, sceNetInet$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetGetUdpcbstat', Kotlin.Long.fromInt(967886803), 150, void 0, sceNetInet$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetConnect', Kotlin.Long.fromInt(1091253418), 150, void 0, sceNetInet$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetGetsockopt', Kotlin.Long.fromInt(1242647676), 150, void 0, sceNetInet$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetShutdown', Kotlin.Long.fromInt(1291734614), 150, void 0, sceNetInet$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetSelect', Kotlin.Long.fromInt(1541985685), 150, void 0, sceNetInet$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetSendmsg', Kotlin.Long.fromInt(2001614580), 150, void 0, sceNetInet$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetSend', Kotlin.Long.fromInt(2057728444), 150, void 0, sceNetInet$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetCloseWithRST', new Kotlin.Long(-2141912355, 0), 150, void 0, sceNetInet$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetSocketAbort', new Kotlin.Long(-2136859971, 0), 150, void 0, sceNetInet$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetSocket', new Kotlin.Long(-1954864625, 0), 150, void 0, sceNetInet$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetGetPspError', new Kotlin.Long(-1935431298, 0), 150, void 0, sceNetInet$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetClose', new Kotlin.Long(-1921874710, 0), 150, void 0, sceNetInet$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetTerm', new Kotlin.Long(-1444059463, 0), 150, void 0, sceNetInet$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetGetTcpcbstat', new Kotlin.Long(-1282897196, 0), 150, void 0, sceNetInet$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetInetAddr', new Kotlin.Long(-1218618614, 0), 150, void 0, sceNetInet$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetRecvfrom', new Kotlin.Long(-921615644, 0), 150, void 0, sceNetInet$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceNetInet_CCC18C45', new Kotlin.Long(-859730875, 0), 150, void 0, sceNetInet$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetRecv', new Kotlin.Long(-844604263, 0), 150, void 0, sceNetInet$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetInetNtop', new Kotlin.Long(-797366682, 0), 150, void 0, sceNetInet$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetListen', new Kotlin.Long(-787867014, 0), 150, void 0, sceNetInet$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetAccept', new Kotlin.Long(-620147173, 0), 150, void 0, sceNetInet$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetGetpeername', new Kotlin.Long(-498616618, 0), 150, void 0, sceNetInet$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetInetPton', new Kotlin.Long(-485782503, 0), 150, void 0, sceNetInet$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetRecvmsg', new Kotlin.Long(-288464430, 0), 150, void 0, sceNetInet$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetPoll', new Kotlin.Long(-89411107, 0), 150, void 0, sceNetInet$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetGetErrno', new Kotlin.Long(-72621039, 0), 150, void 0, sceNetInet$registerModule$lambda_32(this));
  };
  sceNetInet.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceNetInet',
    interfaces: [SceModule]
  };
  function scePower(emulator) {
    SceModule.call(this, emulator, 'scePower', 1073807377, 'power.prx', 'scePower_Service');
    this.cpuMult_0 = 511.0;
    this.pllFreq_0 = 222.0;
    this.busFreq_0 = 111.0;
  }
  scePower.prototype._getCpuMult = function () {
    return 0.43444228 * (this.busFreq_0 / 111.0);
  };
  scePower.prototype._getCpuFreq = function () {
    return this.cpuMult_0 * this._getCpuMult();
  };
  scePower.prototype._setCpuFreq_za3lpa$ = function (cpuFreq) {
    var tmp$;
    if (cpuFreq > 222)
      tmp$ = this.cpuMult_0;
    else if (cpuFreq === 222)
      tmp$ = 511.0;
    else
      tmp$ = cpuFreq / this._getCpuMult();
    this.cpuMult_0 = tmp$;
  };
  scePower.prototype.scePowerGetCpuClockFrequencyInt = function () {
    return numberToInt(this._getCpuFreq());
  };
  scePower.prototype.scePowerGetResumeCount_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(7663515);
  };
  scePower.prototype.scePowerRequestColdReset_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(71489618);
  };
  scePower.prototype.scePowerRegisterCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(79132270);
  };
  scePower.prototype.scePowerIsBatteryExist_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(184356235);
  };
  scePower.prototype.scePowerSetPowerSwMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(215096095);
  };
  scePower.prototype.scePowerGetPowerSwMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(375185541);
  };
  scePower.prototype.scePowerIsBatteryCharging_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(508101633);
  };
  scePower.prototype.scePowerGetBatteryLifePercent_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(545640797);
  };
  scePower.prototype.scePowerGetInnerTemp_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(591620682);
  };
  scePower.prototype.scePowerVolatileMemLock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(599990270);
  };
  scePower.prototype.scePowerBatteryUpdateInfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(670247212);
  };
  scePower.prototype.scePower_2875994B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(678795595);
  };
  scePower.prototype.scePowerGetBatteryTemp_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(685842467);
  };
  scePower.prototype.scePower_2B51FE2F_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(726793775);
  };
  scePower.prototype.scePowerRequestStandby_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(729578740);
  };
  scePower.prototype.scePowerGetPllClockFrequencyInt_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(888783971);
  };
  scePower.prototype.scePowerWaitRequestCompletion_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(961654611);
  };
  scePower.prototype.scePowerGetBacklightMaximum_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1143733164);
  };
  scePower.prototype.scePowerGetBusClockFrequency_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1200613109);
  };
  scePower.prototype.scePowerGetBatteryVolt_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1211951211);
  };
  scePower.prototype.scePower_545A7F3C_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1415216956);
  };
  scePower.prototype.scePowerSetClockFrequency_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1937016562);
  };
  scePower.prototype.scePowerIsSuspendRequired_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2023860118);
  };
  scePower.prototype.scePowerIdleTimerEnable_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2133898161);
  };
  scePower.prototype.scePowerIsRequest_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2141456093);
  };
  scePower.prototype.scePowerSetCpuClockFrequency_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2076197053, 0));
  };
  scePower.prototype.scePowerGetBatteryElec_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2044010074, 0));
  };
  scePower.prototype.scePowerIsPowerOnline_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2025582754, 0));
  };
  scePower.prototype.scePowerGetBatteryLifeTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1896136798, 0));
  };
  scePower.prototype.scePowerGetBatteryRemainCapacity_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1795840705, 0));
  };
  scePower.prototype.scePowerIdleTimerDisable_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1758664383, 0));
  };
  scePower.prototype.scePowerGetBusClockFrequencyFloat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1683115029, 0));
  };
  scePower.prototype.scePower_A4E93389_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1528220791, 0));
  };
  scePower.prototype.scePowerSetCallbackMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1445846478, 0));
  };
  scePower.prototype.scePowerRequestSuspend_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1405957684, 0));
  };
  scePower.prototype.scePowerGetCpuClockFrequencyFloat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1314575229, 0));
  };
  scePower.prototype.scePowerVolatileMemUnlock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1276258303, 0));
  };
  scePower.prototype.scePowerGetBatteryChargingStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1270666296, 0));
  };
  scePower.prototype.scePowerSetBusClockFrequency_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1193823237, 0));
  };
  scePower.prototype.scePowerGetLowBatteryCapacity_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1181149108, 0));
  };
  scePower.prototype.scePowerGetCallbackMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1158005264, 0));
  };
  scePower.prototype.scePowerGetBusClockFrequencyInt_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1117251223, 0));
  };
  scePower.prototype.scePowerUnlock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-901958463, 0));
  };
  scePower.prototype.scePowerGetBatteryChargeCycle_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-884345394, 0));
  };
  scePower.prototype.scePowerIsLowBattery_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-754493146, 0));
  };
  scePower.prototype.scePowerLock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-691005713, 0));
  };
  scePower.prototype.scePowerCancelRequest_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-614282801, 0));
  };
  scePower.prototype.scePowerUnregitserCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-610457379, 0));
  };
  scePower.prototype.scePowerUnregisterCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-542590216, 0));
  };
  scePower.prototype.scePower_E8E4E204_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-387653116, 0));
  };
  scePower.prototype.scePowerGetPllClockFrequencyFloat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-365417945, 0));
  };
  scePower.prototype.scePower_EBD177D6_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-338593834, 0));
  };
  scePower.prototype.scePowerGetIdleTimer_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-306102299, 0));
  };
  scePower.prototype.scePowerTick_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-271333021, 0));
  };
  scePower.prototype.scePowerVolatileMemTryLock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-90724967, 0));
  };
  scePower.prototype.scePowerGetBatteryFullCapacity_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-48717569, 0));
  };
  scePower.prototype.scePowerGetCpuClockFrequency_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-18859473, 0));
  };
  function scePower$registerModule$lambda(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerGetCpuClockFrequencyInt();
    };
  }
  function scePower$registerModule$lambda_0(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetResumeCount_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_1(this$scePower) {
    return function (it) {
      this$scePower.scePowerRequestColdReset_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_2(this$scePower) {
    return function (it) {
      this$scePower.scePowerRegisterCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_3(this$scePower) {
    return function (it) {
      this$scePower.scePowerIsBatteryExist_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_4(this$scePower) {
    return function (it) {
      this$scePower.scePowerSetPowerSwMode_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_5(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetPowerSwMode_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_6(this$scePower) {
    return function (it) {
      this$scePower.scePowerIsBatteryCharging_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_7(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBatteryLifePercent_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_8(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetInnerTemp_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_9(this$scePower) {
    return function (it) {
      this$scePower.scePowerVolatileMemLock_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_10(this$scePower) {
    return function (it) {
      this$scePower.scePowerBatteryUpdateInfo_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_11(this$scePower) {
    return function (it) {
      this$scePower.scePower_2875994B_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_12(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBatteryTemp_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_13(this$scePower) {
    return function (it) {
      this$scePower.scePower_2B51FE2F_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_14(this$scePower) {
    return function (it) {
      this$scePower.scePowerRequestStandby_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_15(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetPllClockFrequencyInt_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_16(this$scePower) {
    return function (it) {
      this$scePower.scePowerWaitRequestCompletion_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_17(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBacklightMaximum_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_18(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBusClockFrequency_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_19(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBatteryVolt_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_20(this$scePower) {
    return function (it) {
      this$scePower.scePower_545A7F3C_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_21(this$scePower) {
    return function (it) {
      this$scePower.scePowerSetClockFrequency_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_22(this$scePower) {
    return function (it) {
      this$scePower.scePowerIsSuspendRequired_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_23(this$scePower) {
    return function (it) {
      this$scePower.scePowerIdleTimerEnable_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_24(this$scePower) {
    return function (it) {
      this$scePower.scePowerIsRequest_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_25(this$scePower) {
    return function (it) {
      this$scePower.scePowerSetCpuClockFrequency_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_26(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBatteryElec_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_27(this$scePower) {
    return function (it) {
      this$scePower.scePowerIsPowerOnline_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_28(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBatteryLifeTime_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_29(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBatteryRemainCapacity_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_30(this$scePower) {
    return function (it) {
      this$scePower.scePowerIdleTimerDisable_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_31(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBusClockFrequencyFloat_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_32(this$scePower) {
    return function (it) {
      this$scePower.scePower_A4E93389_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_33(this$scePower) {
    return function (it) {
      this$scePower.scePowerSetCallbackMode_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_34(this$scePower) {
    return function (it) {
      this$scePower.scePowerRequestSuspend_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_35(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetCpuClockFrequencyFloat_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_36(this$scePower) {
    return function (it) {
      this$scePower.scePowerVolatileMemUnlock_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_37(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBatteryChargingStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_38(this$scePower) {
    return function (it) {
      this$scePower.scePowerSetBusClockFrequency_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_39(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetLowBatteryCapacity_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_40(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetCallbackMode_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_41(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBusClockFrequencyInt_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_42(this$scePower) {
    return function (it) {
      this$scePower.scePowerUnlock_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_43(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBatteryChargeCycle_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_44(this$scePower) {
    return function (it) {
      this$scePower.scePowerIsLowBattery_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_45(this$scePower) {
    return function (it) {
      this$scePower.scePowerLock_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_46(this$scePower) {
    return function (it) {
      this$scePower.scePowerCancelRequest_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_47(this$scePower) {
    return function (it) {
      this$scePower.scePowerUnregitserCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_48(this$scePower) {
    return function (it) {
      this$scePower.scePowerUnregisterCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_49(this$scePower) {
    return function (it) {
      this$scePower.scePower_E8E4E204_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_50(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetPllClockFrequencyFloat_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_51(this$scePower) {
    return function (it) {
      this$scePower.scePower_EBD177D6_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_52(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetIdleTimer_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_53(this$scePower) {
    return function (it) {
      this$scePower.scePowerTick_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_54(this$scePower) {
    return function (it) {
      this$scePower.scePowerVolatileMemTryLock_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_55(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBatteryFullCapacity_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_56(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetCpuClockFrequency_xt3zvs$(it);
      return Unit;
    };
  }
  scePower.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('scePowerGetCpuClockFrequencyInt', new Kotlin.Long(-38420503, 0), 150, void 0, scePower$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetResumeCount', Kotlin.Long.fromInt(7663515), 150, void 0, scePower$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('scePowerRequestColdReset', Kotlin.Long.fromInt(71489618), 150, void 0, scePower$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('scePowerRegisterCallback', Kotlin.Long.fromInt(79132270), 150, void 0, scePower$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('scePowerIsBatteryExist', Kotlin.Long.fromInt(184356235), 150, void 0, scePower$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('scePowerSetPowerSwMode', Kotlin.Long.fromInt(215096095), 150, void 0, scePower$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetPowerSwMode', Kotlin.Long.fromInt(375185541), 150, void 0, scePower$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('scePowerIsBatteryCharging', Kotlin.Long.fromInt(508101633), 150, void 0, scePower$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBatteryLifePercent', Kotlin.Long.fromInt(545640797), 150, void 0, scePower$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetInnerTemp', Kotlin.Long.fromInt(591620682), 150, void 0, scePower$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('scePowerVolatileMemLock', Kotlin.Long.fromInt(599990270), 150, void 0, scePower$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('scePowerBatteryUpdateInfo', Kotlin.Long.fromInt(670247212), 150, void 0, scePower$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('scePower_2875994B', Kotlin.Long.fromInt(678795595), 150, void 0, scePower$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBatteryTemp', Kotlin.Long.fromInt(685842467), 150, void 0, scePower$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('scePower_2B51FE2F', Kotlin.Long.fromInt(726793775), 150, void 0, scePower$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('scePowerRequestStandby', Kotlin.Long.fromInt(729578740), 150, void 0, scePower$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetPllClockFrequencyInt', Kotlin.Long.fromInt(888783971), 150, void 0, scePower$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('scePowerWaitRequestCompletion', Kotlin.Long.fromInt(961654611), 150, void 0, scePower$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBacklightMaximum', Kotlin.Long.fromInt(1143733164), 150, void 0, scePower$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBusClockFrequency', Kotlin.Long.fromInt(1200613109), 150, void 0, scePower$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBatteryVolt', Kotlin.Long.fromInt(1211951211), 150, void 0, scePower$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('scePower_545A7F3C', Kotlin.Long.fromInt(1415216956), 150, void 0, scePower$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('scePowerSetClockFrequency', Kotlin.Long.fromInt(1937016562), 150, void 0, scePower$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('scePowerIsSuspendRequired', Kotlin.Long.fromInt(2023860118), 150, void 0, scePower$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('scePowerIdleTimerEnable', Kotlin.Long.fromInt(2133898161), 150, void 0, scePower$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('scePowerIsRequest', Kotlin.Long.fromInt(2141456093), 150, void 0, scePower$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('scePowerSetCpuClockFrequency', new Kotlin.Long(-2076197053, 0), 150, void 0, scePower$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBatteryElec', new Kotlin.Long(-2044010074, 0), 150, void 0, scePower$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('scePowerIsPowerOnline', new Kotlin.Long(-2025582754, 0), 150, void 0, scePower$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBatteryLifeTime', new Kotlin.Long(-1896136798, 0), 150, void 0, scePower$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBatteryRemainCapacity', new Kotlin.Long(-1795840705, 0), 150, void 0, scePower$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('scePowerIdleTimerDisable', new Kotlin.Long(-1758664383, 0), 150, void 0, scePower$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBusClockFrequencyFloat', new Kotlin.Long(-1683115029, 0), 150, void 0, scePower$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('scePower_A4E93389', new Kotlin.Long(-1528220791, 0), 150, void 0, scePower$registerModule$lambda_32(this));
    this.registerFunctionRaw_gh35x6$('scePowerSetCallbackMode', new Kotlin.Long(-1445846478, 0), 150, void 0, scePower$registerModule$lambda_33(this));
    this.registerFunctionRaw_gh35x6$('scePowerRequestSuspend', new Kotlin.Long(-1405957684, 0), 150, void 0, scePower$registerModule$lambda_34(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetCpuClockFrequencyFloat', new Kotlin.Long(-1314575229, 0), 150, void 0, scePower$registerModule$lambda_35(this));
    this.registerFunctionRaw_gh35x6$('scePowerVolatileMemUnlock', new Kotlin.Long(-1276258303, 0), 150, void 0, scePower$registerModule$lambda_36(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBatteryChargingStatus', new Kotlin.Long(-1270666296, 0), 150, void 0, scePower$registerModule$lambda_37(this));
    this.registerFunctionRaw_gh35x6$('scePowerSetBusClockFrequency', new Kotlin.Long(-1193823237, 0), 150, void 0, scePower$registerModule$lambda_38(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetLowBatteryCapacity', new Kotlin.Long(-1181149108, 0), 150, void 0, scePower$registerModule$lambda_39(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetCallbackMode', new Kotlin.Long(-1158005264, 0), 150, void 0, scePower$registerModule$lambda_40(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBusClockFrequencyInt', new Kotlin.Long(-1117251223, 0), 150, void 0, scePower$registerModule$lambda_41(this));
    this.registerFunctionRaw_gh35x6$('scePowerUnlock', new Kotlin.Long(-901958463, 0), 150, void 0, scePower$registerModule$lambda_42(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBatteryChargeCycle', new Kotlin.Long(-884345394, 0), 150, void 0, scePower$registerModule$lambda_43(this));
    this.registerFunctionRaw_gh35x6$('scePowerIsLowBattery', new Kotlin.Long(-754493146, 0), 150, void 0, scePower$registerModule$lambda_44(this));
    this.registerFunctionRaw_gh35x6$('scePowerLock', new Kotlin.Long(-691005713, 0), 150, void 0, scePower$registerModule$lambda_45(this));
    this.registerFunctionRaw_gh35x6$('scePowerCancelRequest', new Kotlin.Long(-614282801, 0), 150, void 0, scePower$registerModule$lambda_46(this));
    this.registerFunctionRaw_gh35x6$('scePowerUnregitserCallback', new Kotlin.Long(-610457379, 0), 150, void 0, scePower$registerModule$lambda_47(this));
    this.registerFunctionRaw_gh35x6$('scePowerUnregisterCallback', new Kotlin.Long(-542590216, 0), 150, void 0, scePower$registerModule$lambda_48(this));
    this.registerFunctionRaw_gh35x6$('scePower_E8E4E204', new Kotlin.Long(-387653116, 0), 150, void 0, scePower$registerModule$lambda_49(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetPllClockFrequencyFloat', new Kotlin.Long(-365417945, 0), 150, void 0, scePower$registerModule$lambda_50(this));
    this.registerFunctionRaw_gh35x6$('scePower_EBD177D6', new Kotlin.Long(-338593834, 0), 150, void 0, scePower$registerModule$lambda_51(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetIdleTimer', new Kotlin.Long(-306102299, 0), 150, void 0, scePower$registerModule$lambda_52(this));
    this.registerFunctionRaw_gh35x6$('scePowerTick', new Kotlin.Long(-271333021, 0), 150, void 0, scePower$registerModule$lambda_53(this));
    this.registerFunctionRaw_gh35x6$('scePowerVolatileMemTryLock', new Kotlin.Long(-90724967, 0), 150, void 0, scePower$registerModule$lambda_54(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBatteryFullCapacity', new Kotlin.Long(-48717569, 0), 150, void 0, scePower$registerModule$lambda_55(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetCpuClockFrequency', new Kotlin.Long(-18859473, 0), 150, void 0, scePower$registerModule$lambda_56(this));
  };
  scePower.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'scePower',
    interfaces: [SceModule]
  };
  function sceRtc(emulator) {
    SceModule.call(this, emulator, 'sceRtc', 1073807377, 'rtc.prx', 'sceRTC_Service');
  }
  sceRtc.prototype.sceRtcGetCurrentTick_xnxgf8$ = function (ptr) {
    ptr.sdw_6svq3l$(0, get_timeManager(this).getTimeInMicroseconds());
    return 0;
  };
  sceRtc.prototype.sceRtcGetTickResolution = function () {
    return 1000000;
  };
  sceRtc.prototype.sceRtcGetDayOfWeek_qt1dr2$ = function (year, month, day) {
    return DateTime.Companion.invoke_ui44o2$(year, month, day).dayOfWeekInt;
  };
  sceRtc.prototype.sceRtcGetDaysInMonth_vux9f0$ = function (year, month) {
    return Month.Companion.days_vux9f0$(month, year);
  };
  sceRtc.prototype.sceRtcSetTick_dyqe6s$ = function (datePtr, ticksPtr) {
    var ticks = ticksPtr.ldw_za3lpa$(0);
    var time = ScePspDateTime_init(DateTime.Companion.invoke_s8cxhz$(ticks));
    time.write_39qel5$(openSync_1(datePtr));
    return 0;
  };
  sceRtc.prototype.sceRtcGetTick_dyqe6s$ = function (datePtr, ticksPtr) {
    var date = ScePspDateTime$Companion_getInstance().read_39qel5$(openSync_1(datePtr));
    ticksPtr.sdw_6svq3l$(0, date.date.unix.multiply(Kotlin.Long.fromInt(1000)));
    return 0;
  };
  sceRtc.prototype.sceRtcGetCurrentClock_1fpi1a$ = function (date, timezone) {
    if (get_isNotNull(date))
      ScePspDateTime_init(DateTime.Companion.now().addOffset_za3lpa$(clamp(timezone, -600000, 600000))).write_39qel5$(openSync_1(date));
    return 0;
  };
  sceRtc.prototype.sceRtcGetCurrentClockLocalTime_xnxgf8$ = function (date) {
    if (get_isNotNull(date))
      ScePspDateTime_init(DateTime.Companion.now().toLocal()).write_39qel5$(openSync_1(date));
    return 0;
  };
  sceRtc.prototype.sceRtcGetAccumulativeTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(18809793);
  };
  sceRtc.prototype.sceRtcGetAccumlativeTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(43819955);
  };
  sceRtc.prototype.sceRtcFormatRFC3339_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(77134652);
  };
  sceRtc.prototype.sceRtcSetTime64_t_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(420071835);
  };
  sceRtc.prototype.sceRtcGetLastReincarnatedTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(540863245);
  };
  sceRtc.prototype.sceRtcTickAddMicroseconds_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(651319901);
  };
  sceRtc.prototype.sceRtcTickAddHours_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(651665994);
  };
  sceRtc.prototype.sceRtcGetTime_t_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(667179340);
  };
  sceRtc.prototype.sceRtcFormatRFC3339LocalTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(670664003);
  };
  sceRtc.prototype.sceRtcParseRFC3339_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(685894024);
  };
  sceRtc.prototype.sceRtcConvertUtcToLocalTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(881352205);
  };
  sceRtc.prototype.sceRtcGetDosTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(906450279);
  };
  sceRtc.prototype.sceRtcSetTime_t_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(981499080);
  };
  sceRtc.prototype.sceRtcIsLeapYear_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1110473239);
  };
  sceRtc.prototype.sceRtcTickAddYears_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1115958391);
  };
  sceRtc.prototype.sceRtcTickAddTicks_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1156865541);
  };
  sceRtc.prototype.sceRtcCheckValid_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1260084866);
  };
  sceRtc.prototype.sceRtcGetLastAdjustedTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1651007128);
  };
  sceRtc.prototype.sceRtcUnregisterCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1785163053);
  };
  sceRtc.prototype.sceRtcConvertLocalTimeToUTC_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2006074018);
  };
  sceRtc.prototype.sceRtcSetWin32FileTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2060340228);
  };
  sceRtc.prototype.sceRtc_7D1FBED3_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2099232467);
  };
  sceRtc.prototype.sceRtcFormatRFC2822LocalTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2112254235);
  };
  sceRtc.prototype.sceRtcIsAlarmed_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2114135500, 0));
  };
  sceRtc.prototype.sceRtcCompareTick_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1630491001, 0));
  };
  sceRtc.prototype.sceRtc_A93CF7D8_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1455622184, 0));
  };
  sceRtc.prototype.sceRtc_C2DDBEB5_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1025655115, 0));
  };
  sceRtc.prototype.sceRtcFormatRFC2822_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-966544455, 0));
  };
  sceRtc.prototype.sceRtcTickAddWeeks_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-818271064, 0));
  };
  sceRtc.prototype.sceRtcGetWin32FileTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-816441197, 0));
  };
  sceRtc.prototype.sceRtcTickAddMonths_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-604549349, 0));
  };
  sceRtc.prototype.sceRtcParseDateTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-541303018, 0));
  };
  sceRtc.prototype.sceRtcGetTime64_t_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-506905017, 0));
  };
  sceRtc.prototype.sceRtcTickAddDays_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-451196038, 0));
  };
  sceRtc.prototype.sceRtcTickAddMinutes_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-429892662, 0));
  };
  sceRtc.prototype.sceRtcSetDosTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-267980188, 0));
  };
  sceRtc.prototype.sceRtcTickAddSeconds_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-224088091, 0));
  };
  sceRtc.prototype.sceRtc_F5FCC995_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-167982699, 0));
  };
  sceRtc.prototype.sceRtcRegisterCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-80013107, 0));
  };
  function sceRtc$registerModule$lambda(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcGetCurrentTick_xnxgf8$($receiver.ptr);
    };
  }
  function sceRtc$registerModule$lambda_0(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcGetTickResolution();
    };
  }
  function sceRtc$registerModule$lambda_1(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcGetDayOfWeek_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceRtc$registerModule$lambda_2(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcGetDaysInMonth_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceRtc$registerModule$lambda_3(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcSetTick_dyqe6s$($receiver.ptr, $receiver.ptr);
    };
  }
  function sceRtc$registerModule$lambda_4(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcGetTick_dyqe6s$($receiver.ptr, $receiver.ptr);
    };
  }
  function sceRtc$registerModule$lambda_5(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcGetCurrentClock_1fpi1a$($receiver.ptr, $receiver.int);
    };
  }
  function sceRtc$registerModule$lambda_6(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcGetCurrentClockLocalTime_xnxgf8$($receiver.ptr);
    };
  }
  function sceRtc$registerModule$lambda_7(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetAccumulativeTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_8(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetAccumlativeTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_9(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcFormatRFC3339_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_10(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcSetTime64_t_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_11(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetLastReincarnatedTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_12(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcTickAddMicroseconds_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_13(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcTickAddHours_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_14(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetTime_t_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_15(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcFormatRFC3339LocalTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_16(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcParseRFC3339_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_17(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcConvertUtcToLocalTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_18(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetDosTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_19(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcSetTime_t_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_20(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcIsLeapYear_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_21(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcTickAddYears_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_22(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcTickAddTicks_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_23(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcCheckValid_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_24(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetLastAdjustedTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_25(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcUnregisterCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_26(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcConvertLocalTimeToUTC_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_27(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcSetWin32FileTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_28(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtc_7D1FBED3_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_29(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcFormatRFC2822LocalTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_30(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcIsAlarmed_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_31(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcCompareTick_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_32(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtc_A93CF7D8_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_33(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtc_C2DDBEB5_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_34(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcFormatRFC2822_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_35(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcTickAddWeeks_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_36(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetWin32FileTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_37(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcTickAddMonths_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_38(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcParseDateTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_39(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetTime64_t_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_40(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcTickAddDays_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_41(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcTickAddMinutes_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_42(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcSetDosTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_43(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcTickAddSeconds_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_44(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtc_F5FCC995_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_45(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcRegisterCallback_xt3zvs$(it);
      return Unit;
    };
  }
  sceRtc.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceRtcGetCurrentTick', Kotlin.Long.fromInt(1065015143), 150, void 0, sceRtc$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceRtcGetTickResolution', new Kotlin.Long(-1004787629, 0), 150, void 0, sceRtc$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceRtcGetDayOfWeek', Kotlin.Long.fromInt(1467116481), 150, void 0, sceRtc$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('sceRtcGetDaysInMonth', Kotlin.Long.fromInt(99562028), 150, void 0, sceRtc$registerModule$lambda_2(this));
    this.registerFunctionInt_9l82lv$('sceRtcSetTick', Kotlin.Long.fromInt(2127732288), 150, void 0, sceRtc$registerModule$lambda_3(this));
    this.registerFunctionInt_9l82lv$('sceRtcGetTick', Kotlin.Long.fromInt(1878264524), 150, void 0, sceRtc$registerModule$lambda_4(this));
    this.registerFunctionInt_9l82lv$('sceRtcGetCurrentClock', Kotlin.Long.fromInt(1291474864), 150, void 0, sceRtc$registerModule$lambda_5(this));
    this.registerFunctionInt_9l82lv$('sceRtcGetCurrentClockLocalTime', new Kotlin.Long(-406684389, 0), 150, void 0, sceRtc$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetAccumulativeTime', Kotlin.Long.fromInt(18809793), 150, void 0, sceRtc$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetAccumlativeTime', Kotlin.Long.fromInt(43819955), 150, void 0, sceRtc$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceRtcFormatRFC3339', Kotlin.Long.fromInt(77134652), 150, void 0, sceRtc$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceRtcSetTime64_t', Kotlin.Long.fromInt(420071835), 150, void 0, sceRtc$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetLastReincarnatedTime', Kotlin.Long.fromInt(540863245), 150, void 0, sceRtc$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceRtcTickAddMicroseconds', Kotlin.Long.fromInt(651319901), 150, void 0, sceRtc$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceRtcTickAddHours', Kotlin.Long.fromInt(651665994), 150, void 0, sceRtc$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetTime_t', Kotlin.Long.fromInt(667179340), 150, void 0, sceRtc$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceRtcFormatRFC3339LocalTime', Kotlin.Long.fromInt(670664003), 150, void 0, sceRtc$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceRtcParseRFC3339', Kotlin.Long.fromInt(685894024), 150, void 0, sceRtc$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceRtcConvertUtcToLocalTime', Kotlin.Long.fromInt(881352205), 150, void 0, sceRtc$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetDosTime', Kotlin.Long.fromInt(906450279), 150, void 0, sceRtc$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceRtcSetTime_t', Kotlin.Long.fromInt(981499080), 150, void 0, sceRtc$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceRtcIsLeapYear', Kotlin.Long.fromInt(1110473239), 150, void 0, sceRtc$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceRtcTickAddYears', Kotlin.Long.fromInt(1115958391), 150, void 0, sceRtc$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceRtcTickAddTicks', Kotlin.Long.fromInt(1156865541), 150, void 0, sceRtc$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceRtcCheckValid', Kotlin.Long.fromInt(1260084866), 150, void 0, sceRtc$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetLastAdjustedTime', Kotlin.Long.fromInt(1651007128), 150, void 0, sceRtc$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('sceRtcUnregisterCallback', Kotlin.Long.fromInt(1785163053), 150, void 0, sceRtc$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('sceRtcConvertLocalTimeToUTC', Kotlin.Long.fromInt(2006074018), 150, void 0, sceRtc$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('sceRtcSetWin32FileTime', Kotlin.Long.fromInt(2060340228), 150, void 0, sceRtc$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('sceRtc_7D1FBED3', Kotlin.Long.fromInt(2099232467), 150, void 0, sceRtc$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('sceRtcFormatRFC2822LocalTime', Kotlin.Long.fromInt(2112254235), 150, void 0, sceRtc$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('sceRtcIsAlarmed', new Kotlin.Long(-2114135500, 0), 150, void 0, sceRtc$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('sceRtcCompareTick', new Kotlin.Long(-1630491001, 0), 150, void 0, sceRtc$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('sceRtc_A93CF7D8', new Kotlin.Long(-1455622184, 0), 150, void 0, sceRtc$registerModule$lambda_32(this));
    this.registerFunctionRaw_gh35x6$('sceRtc_C2DDBEB5', new Kotlin.Long(-1025655115, 0), 150, void 0, sceRtc$registerModule$lambda_33(this));
    this.registerFunctionRaw_gh35x6$('sceRtcFormatRFC2822', new Kotlin.Long(-966544455, 0), 150, void 0, sceRtc$registerModule$lambda_34(this));
    this.registerFunctionRaw_gh35x6$('sceRtcTickAddWeeks', new Kotlin.Long(-818271064, 0), 150, void 0, sceRtc$registerModule$lambda_35(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetWin32FileTime', new Kotlin.Long(-816441197, 0), 150, void 0, sceRtc$registerModule$lambda_36(this));
    this.registerFunctionRaw_gh35x6$('sceRtcTickAddMonths', new Kotlin.Long(-604549349, 0), 150, void 0, sceRtc$registerModule$lambda_37(this));
    this.registerFunctionRaw_gh35x6$('sceRtcParseDateTime', new Kotlin.Long(-541303018, 0), 150, void 0, sceRtc$registerModule$lambda_38(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetTime64_t', new Kotlin.Long(-506905017, 0), 150, void 0, sceRtc$registerModule$lambda_39(this));
    this.registerFunctionRaw_gh35x6$('sceRtcTickAddDays', new Kotlin.Long(-451196038, 0), 150, void 0, sceRtc$registerModule$lambda_40(this));
    this.registerFunctionRaw_gh35x6$('sceRtcTickAddMinutes', new Kotlin.Long(-429892662, 0), 150, void 0, sceRtc$registerModule$lambda_41(this));
    this.registerFunctionRaw_gh35x6$('sceRtcSetDosTime', new Kotlin.Long(-267980188, 0), 150, void 0, sceRtc$registerModule$lambda_42(this));
    this.registerFunctionRaw_gh35x6$('sceRtcTickAddSeconds', new Kotlin.Long(-224088091, 0), 150, void 0, sceRtc$registerModule$lambda_43(this));
    this.registerFunctionRaw_gh35x6$('sceRtc_F5FCC995', new Kotlin.Long(-167982699, 0), 150, void 0, sceRtc$registerModule$lambda_44(this));
    this.registerFunctionRaw_gh35x6$('sceRtcRegisterCallback', new Kotlin.Long(-80013107, 0), 150, void 0, sceRtc$registerModule$lambda_45(this));
  };
  sceRtc.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceRtc',
    interfaces: [SceModule]
  };
  function ScePspDateTime(year, month, day, hour, minute, second, microsecond) {
    ScePspDateTime$Companion_getInstance();
    this.year = year;
    this.month = month;
    this.day = day;
    this.hour = hour;
    this.minute = minute;
    this.second = second;
    this.microsecond = microsecond;
  }
  Object.defineProperty(ScePspDateTime.prototype, 'date', {
    get: function () {
      return DateTime.Companion.createAdjusted_ui44o2$(this.year, this.month, this.day, this.hour, this.minute, this.second, this.microsecond / 1000 | 0);
    }
  });
  function ScePspDateTime$Companion() {
    ScePspDateTime$Companion_instance = this;
  }
  ScePspDateTime$Companion.prototype.read_39qel5$ = function (s) {
    return new ScePspDateTime(readU16_le(s), readU16_le(s), readU16_le(s), readU16_le(s), readU16_le(s), readU16_le(s), readS32_le_0(s));
  };
  ScePspDateTime$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ScePspDateTime$Companion_instance = null;
  function ScePspDateTime$Companion_getInstance() {
    if (ScePspDateTime$Companion_instance === null) {
      new ScePspDateTime$Companion();
    }
    return ScePspDateTime$Companion_instance;
  }
  ScePspDateTime.prototype.write_39qel5$ = function (s) {
    write16_le(s, this.year);
    write16_le(s, this.month);
    write16_le(s, this.day);
    write16_le(s, this.hour);
    write16_le(s, this.minute);
    write16_le(s, this.second);
    write32_le(s, this.microsecond);
    return s;
  };
  ScePspDateTime.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ScePspDateTime',
    interfaces: []
  };
  function ScePspDateTime_init(date, $this) {
    $this = $this || Object.create(ScePspDateTime.prototype);
    ScePspDateTime.call($this, date.year, date.month, date.dayOfMonth, date.hours, date.minutes, date.seconds, date.milliseconds * 1000 | 0);
    return $this;
  }
  function ScePspDateTime_init_0(ticks, $this) {
    $this = $this || Object.create(ScePspDateTime.prototype);
    ScePspDateTime_init(DateTime.Companion.invoke_s8cxhz$(ticks), $this);
    return $this;
  }
  function LibDoc() {
    LibDoc_instance = this;
  }
  function LibDoc$Entry() {
  }
  LibDoc$Entry.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Entry',
    interfaces: []
  };
  function LibDoc$Function(nid, name) {
    this.nid_ymg15s$_0 = nid;
    this.name_7uza74$_0 = name;
  }
  Object.defineProperty(LibDoc$Function.prototype, 'nid', {
    get: function () {
      return this.nid_ymg15s$_0;
    }
  });
  Object.defineProperty(LibDoc$Function.prototype, 'name', {
    get: function () {
      return this.name_7uza74$_0;
    }
  });
  LibDoc$Function.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Function',
    interfaces: [LibDoc$Entry]
  };
  LibDoc$Function.prototype.component1 = function () {
    return this.nid;
  };
  LibDoc$Function.prototype.component2 = function () {
    return this.name;
  };
  LibDoc$Function.prototype.copy_19mbxw$ = function (nid, name) {
    return new LibDoc$Function(nid === void 0 ? this.nid : nid, name === void 0 ? this.name : name);
  };
  LibDoc$Function.prototype.toString = function () {
    return 'Function(nid=' + Kotlin.toString(this.nid) + (', name=' + Kotlin.toString(this.name)) + ')';
  };
  LibDoc$Function.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.nid) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    return result;
  };
  LibDoc$Function.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.nid, other.nid) && Kotlin.equals(this.name, other.name)))));
  };
  function LibDoc$Variable(nid, name) {
    this.nid_ms230c$_0 = nid;
    this.name_45gum4$_0 = name;
  }
  Object.defineProperty(LibDoc$Variable.prototype, 'nid', {
    get: function () {
      return this.nid_ms230c$_0;
    }
  });
  Object.defineProperty(LibDoc$Variable.prototype, 'name', {
    get: function () {
      return this.name_45gum4$_0;
    }
  });
  LibDoc$Variable.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Variable',
    interfaces: [LibDoc$Entry]
  };
  LibDoc$Variable.prototype.component1 = function () {
    return this.nid;
  };
  LibDoc$Variable.prototype.component2 = function () {
    return this.name;
  };
  LibDoc$Variable.prototype.copy_19mbxw$ = function (nid, name) {
    return new LibDoc$Variable(nid === void 0 ? this.nid : nid, name === void 0 ? this.name : name);
  };
  LibDoc$Variable.prototype.toString = function () {
    return 'Variable(nid=' + Kotlin.toString(this.nid) + (', name=' + Kotlin.toString(this.name)) + ')';
  };
  LibDoc$Variable.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.nid) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    return result;
  };
  LibDoc$Variable.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.nid, other.nid) && Kotlin.equals(this.name, other.name)))));
  };
  function LibDoc$Library(name, flags, functions, variables) {
    if (functions === void 0) {
      functions = ArrayList_init();
    }
    if (variables === void 0) {
      variables = ArrayList_init();
    }
    this.name = name;
    this.flags = flags;
    this.functions = functions;
    this.variables = variables;
  }
  LibDoc$Library.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Library',
    interfaces: []
  };
  LibDoc$Library.prototype.component1 = function () {
    return this.name;
  };
  LibDoc$Library.prototype.component2 = function () {
    return this.flags;
  };
  LibDoc$Library.prototype.component3 = function () {
    return this.functions;
  };
  LibDoc$Library.prototype.component4 = function () {
    return this.variables;
  };
  LibDoc$Library.prototype.copy_l3vpxw$ = function (name, flags, functions, variables) {
    return new LibDoc$Library(name === void 0 ? this.name : name, flags === void 0 ? this.flags : flags, functions === void 0 ? this.functions : functions, variables === void 0 ? this.variables : variables);
  };
  LibDoc$Library.prototype.toString = function () {
    return 'Library(name=' + Kotlin.toString(this.name) + (', flags=' + Kotlin.toString(this.flags)) + (', functions=' + Kotlin.toString(this.functions)) + (', variables=' + Kotlin.toString(this.variables)) + ')';
  };
  LibDoc$Library.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    result = result * 31 + Kotlin.hashCode(this.functions) | 0;
    result = result * 31 + Kotlin.hashCode(this.variables) | 0;
    return result;
  };
  LibDoc$Library.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.flags, other.flags) && Kotlin.equals(this.functions, other.functions) && Kotlin.equals(this.variables, other.variables)))));
  };
  function LibDoc$Prx(fileName, name, libraries) {
    if (libraries === void 0) {
      libraries = ArrayList_init();
    }
    this.fileName = fileName;
    this.name = name;
    this.libraries = libraries;
  }
  LibDoc$Prx.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Prx',
    interfaces: []
  };
  LibDoc$Prx.prototype.component1 = function () {
    return this.fileName;
  };
  LibDoc$Prx.prototype.component2 = function () {
    return this.name;
  };
  LibDoc$Prx.prototype.component3 = function () {
    return this.libraries;
  };
  LibDoc$Prx.prototype.copy_ihrspz$ = function (fileName, name, libraries) {
    return new LibDoc$Prx(fileName === void 0 ? this.fileName : fileName, name === void 0 ? this.name : name, libraries === void 0 ? this.libraries : libraries);
  };
  LibDoc$Prx.prototype.toString = function () {
    return 'Prx(fileName=' + Kotlin.toString(this.fileName) + (', name=' + Kotlin.toString(this.name)) + (', libraries=' + Kotlin.toString(this.libraries)) + ')';
  };
  LibDoc$Prx.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.fileName) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.libraries) | 0;
    return result;
  };
  LibDoc$Prx.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.fileName, other.fileName) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.libraries, other.libraries)))));
  };
  function LibDoc$Doc(prxs) {
    if (prxs === void 0) {
      prxs = ArrayList_init();
    }
    this.prxs = prxs;
  }
  var addAll = Kotlin.kotlin.collections.addAll_ipc267$;
  Object.defineProperty(LibDoc$Doc.prototype, 'allLibraries', {
    get: function () {
      var $receiver = this.prxs;
      var destination = ArrayList_init();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        var list = element.libraries;
        addAll(destination, list);
      }
      return destination;
    }
  });
  LibDoc$Doc.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Doc',
    interfaces: []
  };
  LibDoc$Doc.prototype.component1 = function () {
    return this.prxs;
  };
  LibDoc$Doc.prototype.copy_cemo9y$ = function (prxs) {
    return new LibDoc$Doc(prxs === void 0 ? this.prxs : prxs);
  };
  LibDoc$Doc.prototype.toString = function () {
    return 'Doc(prxs=' + Kotlin.toString(this.prxs) + ')';
  };
  LibDoc$Doc.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.prxs) | 0;
    return result;
  };
  LibDoc$Doc.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.prxs, other.prxs))));
  };
  LibDoc.prototype.parse_473e7m$ = function (PSPLIBDOC) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var doc = new LibDoc$Doc();
    tmp$ = get_0(PSPLIBDOC.get_61zpoe$('PRXFILES'), 'PRXFILE').iterator();
    while (tmp$.hasNext()) {
      var PRXFILE = tmp$.next();
      var prxFile = first_0(PRXFILE.get_61zpoe$('prx')).text;
      var prxName = first_0(PRXFILE.get_61zpoe$('prxname')).text;
      var $receiver = new LibDoc$Prx(prxFile, prxName);
      doc.prxs.add_11rb$($receiver);
      var prx = $receiver;
      tmp$_0 = get_0(PRXFILE.get_61zpoe$('LIBRARIES'), 'LIBRARY').iterator();
      while (tmp$_0.hasNext()) {
        var LIBRARY = tmp$_0.next();
        var libraryName = first_0(LIBRARY.get_61zpoe$('name')).text;
        var libraryFlags = parseInt(first_0(LIBRARY.get_61zpoe$('flags')).text);
        var $receiver_0 = new LibDoc$Library(libraryName, libraryFlags);
        prx.libraries.add_11rb$($receiver_0);
        var library = $receiver_0;
        tmp$_1 = get_0(LIBRARY.get_61zpoe$('FUNCTIONS'), 'FUNCTION').iterator();
        while (tmp$_1.hasNext()) {
          var FUNCTION = tmp$_1.next();
          var functionNid = parseInt(first_0(FUNCTION.get_61zpoe$('nid')).text);
          var functionName = first_0(FUNCTION.get_61zpoe$('name')).text;
          var $receiver_1 = new LibDoc$Function(functionNid, functionName);
          library.functions.add_11rb$($receiver_1);
          var function_0 = $receiver_1;
        }
        tmp$_2 = get_0(LIBRARY.get_61zpoe$('VARIABLES'), 'VARIABLE').iterator();
        while (tmp$_2.hasNext()) {
          var VARIABLE = tmp$_2.next();
          var variableNid = parseInt(first_0(VARIABLE.get_61zpoe$('nid')).text);
          var variableName = first_0(VARIABLE.get_61zpoe$('name')).text;
          var $receiver_2 = new LibDoc$Variable(variableNid, variableName);
          library.variables.add_11rb$($receiver_2);
          var variable = $receiver_2;
        }
      }
    }
    return doc;
  };
  LibDoc.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'LibDoc',
    interfaces: []
  };
  var LibDoc_instance = null;
  function LibDoc_getInstance() {
    if (LibDoc_instance === null) {
      new LibDoc();
    }
    return LibDoc_instance;
  }
  function dump($receiver) {
    println('    - ' + $receiver);
  }
  function dump_0($receiver) {
    var tmp$, tmp$_0;
    println('  - name=' + $receiver.name + ', flags=' + $receiver.flags);
    tmp$ = $receiver.functions.iterator();
    while (tmp$.hasNext()) {
      var function_0 = tmp$.next();
      dump(function_0);
    }
    tmp$_0 = $receiver.variables.iterator();
    while (tmp$_0.hasNext()) {
      var variable = tmp$_0.next();
      dump(variable);
    }
  }
  function dump_1($receiver) {
    var tmp$;
    println('- fileName=' + $receiver.fileName + ', name=' + $receiver.name);
    tmp$ = $receiver.libraries.iterator();
    while (tmp$.hasNext()) {
      var library = tmp$.next();
      dump_0(library);
    }
  }
  function dump_2($receiver) {
    var tmp$;
    tmp$ = $receiver.prxs.iterator();
    while (tmp$.hasNext()) {
      var prx = tmp$.next();
      dump_1(prx);
    }
  }
  var MEMORY_MASK;
  var MASK;
  var LWR_MASK;
  var LWR_SHIFT;
  var LWL_MASK;
  var LWL_SHIFT;
  var SWL_MASK;
  var SWL_SHIFT;
  var SWR_MASK;
  var SWR_SHIFT;
  function Memory(dummy) {
    Memory$Companion_getInstance();
  }
  function Memory$Companion() {
    Memory$Companion_instance = this;
    this.MASK = MEMORY_MASK;
    this.MAIN_OFFSET = 134217728;
    this.SCRATCHPAD = new Memory$MemorySegment('scatchpad', until(0, 65536));
    this.VIDEOMEM = new Memory$MemorySegment('videomem', until(67108864, 69206016));
    this.MAINMEM = new Memory$MemorySegment('mainmem', until(this.MAIN_OFFSET, 167772160));
  }
  Memory$Companion.prototype.invoke = function () {
    return new FastMemory();
  };
  Memory$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Memory$Companion_instance = null;
  function Memory$Companion_getInstance() {
    if (Memory$Companion_instance === null) {
      new Memory$Companion();
    }
    return Memory$Companion_instance;
  }
  function Memory$MemorySegment(name, range) {
    this.name = name;
    this.range = range;
  }
  Object.defineProperty(Memory$MemorySegment.prototype, 'start', {
    get: function () {
      return this.range.start;
    }
  });
  Object.defineProperty(Memory$MemorySegment.prototype, 'end', {
    get: function () {
      return this.range.endInclusive + 1 | 0;
    }
  });
  Object.defineProperty(Memory$MemorySegment.prototype, 'size', {
    get: function () {
      return this.end - this.start | 0;
    }
  });
  Memory$MemorySegment.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemorySegment',
    interfaces: []
  };
  Memory$MemorySegment.prototype.component1 = function () {
    return this.name;
  };
  Memory$MemorySegment.prototype.component2 = function () {
    return this.range;
  };
  Memory$MemorySegment.prototype.copy_olwhvr$ = function (name, range) {
    return new Memory$MemorySegment(name === void 0 ? this.name : name, range === void 0 ? this.range : range);
  };
  Memory$MemorySegment.prototype.toString = function () {
    return 'MemorySegment(name=' + Kotlin.toString(this.name) + (', range=' + Kotlin.toString(this.range)) + ')';
  };
  Memory$MemorySegment.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.range) | 0;
    return result;
  };
  Memory$MemorySegment.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.range, other.range)))));
  };
  Memory.prototype.readBytes_vux9f0$ = function (srcPos, count) {
    var $receiver = new Int8Array(count);
    this.read_3fge6q$(srcPos, $receiver, 0, count);
    return $receiver;
  };
  Memory.prototype.write_3fge6q$$default = function (dstPos, src, srcPos, len) {
    for (var n = 0; n < len; n++)
      this.sb_vux9f0$(dstPos + n | 0, src[srcPos + n | 0]);
  };
  Memory.prototype.write_3fge6q$ = function (dstPos, src, srcPos, len, callback$default) {
    if (srcPos === void 0)
      srcPos = 0;
    if (len === void 0)
      len = src.length - srcPos | 0;
    callback$default ? callback$default(dstPos, src, srcPos, len) : this.write_3fge6q$$default(dstPos, src, srcPos, len);
  };
  Memory.prototype.read_3fge6q$$default = function (srcPos, dst, dstPos, len) {
    for (var n = 0; n < len; n++)
      dst[dstPos + n | 0] = toByte(this.lb_za3lpa$(srcPos + n | 0));
  };
  Memory.prototype.read_3fge6q$ = function (srcPos, dst, dstPos, len, callback$default) {
    if (dstPos === void 0)
      dstPos = 0;
    if (len === void 0)
      len = dst.length - dstPos | 0;
    callback$default ? callback$default(srcPos, dst, dstPos, len) : this.read_3fge6q$$default(srcPos, dst, dstPos, len);
  };
  Memory.prototype.write_coga0j$$default = function (dstPos, src, srcPos, len) {
    for (var n = 0; n < len; n++)
      this.sw_vux9f0$(dstPos + (n * 4 | 0) | 0, src[srcPos + n | 0]);
  };
  Memory.prototype.write_coga0j$ = function (dstPos, src, srcPos, len, callback$default) {
    if (srcPos === void 0)
      srcPos = 0;
    if (len === void 0)
      len = src.length - srcPos | 0;
    callback$default ? callback$default(dstPos, src, srcPos, len) : this.write_coga0j$$default(dstPos, src, srcPos, len);
  };
  Memory.prototype.read_coga0j$$default = function (srcPos, dst, dstPos, len) {
    for (var n = 0; n < len; n++)
      dst[dstPos + n | 0] = this.lw_za3lpa$(srcPos + (n * 4 | 0) | 0);
  };
  Memory.prototype.read_coga0j$ = function (srcPos, dst, dstPos, len, callback$default) {
    if (dstPos === void 0)
      dstPos = 0;
    if (len === void 0)
      len = dst.length - dstPos | 0;
    callback$default ? callback$default(srcPos, dst, dstPos, len) : this.read_coga0j$$default(srcPos, dst, dstPos, len);
  };
  Memory.prototype.lwl_vux9f0$ = function (address, value) {
    var align = address & 3;
    var oldvalue = this.lw_za3lpa$(address & ~3);
    return oldvalue << LWL_SHIFT[align] | value & LWL_MASK[align];
  };
  Memory.prototype.lwr_vux9f0$ = function (address, value) {
    var align = address & 3;
    var oldvalue = this.lw_za3lpa$(address & ~3);
    return oldvalue >>> LWR_SHIFT[align] | value & LWR_MASK[align];
  };
  Memory.prototype.swl_vux9f0$ = function (address, value) {
    var align = address & 3;
    var aadress = address & ~3;
    var vwrite = value >>> SWL_SHIFT[align] | this.lw_za3lpa$(aadress) & SWL_MASK[align];
    this.sw_vux9f0$(aadress, vwrite);
  };
  Memory.prototype.swr_vux9f0$ = function (address, value) {
    var align = address & 3;
    var aadress = address & ~3;
    var vwrite = value << SWR_SHIFT[align] | this.lw_za3lpa$(aadress) & SWR_MASK[align];
    this.sw_vux9f0$(aadress, vwrite);
  };
  Memory.prototype.lbu_za3lpa$ = function (address) {
    return this.lb_za3lpa$(address) & 255;
  };
  Memory.prototype.lhu_za3lpa$ = function (address) {
    return this.lh_za3lpa$(address) & 65535;
  };
  Memory.prototype.memset_qt1dr2$ = function (address, value, size) {
    for (var n = 0; n < size; n++)
      this.sb_vux9f0$(address, value);
  };
  Memory.prototype.copy_qt1dr2$ = function (srcPos, dstPos, size) {
    for (var n = 0; n < size; n++)
      this.sb_vux9f0$(dstPos + n | 0, this.lb_za3lpa$(srcPos + n | 0));
  };
  Memory.prototype.getPointerStream_vux9f0$ = function (address, size) {
    return sliceWithSize_0(openSync_0(this), address, size);
  };
  Memory.prototype.readStringzOrNull_za3lpa$ = function (offset) {
    if (offset === 0)
      return null;
    else
      return this.readStringz_za3lpa$(offset);
  };
  Memory.prototype.readStringz_za3lpa$ = function (offset) {
    return readStringz(sliceWithStart(openSync_0(this), Kotlin.Long.fromInt(offset)));
  };
  Memory.prototype.fill_qt1dr2$ = function (value, offset, size) {
    for (var n = 0; n < offset; n++)
      this.sb_vux9f0$(offset + n | 0, value);
  };
  Memory.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Memory',
    interfaces: []
  };
  function DummyMemory() {
    Memory.call(this, true);
  }
  DummyMemory.prototype.sb_vux9f0$ = function (address, value) {
  };
  DummyMemory.prototype.sh_vux9f0$ = function (address, value) {
  };
  DummyMemory.prototype.sw_vux9f0$ = function (address, value) {
  };
  DummyMemory.prototype.lb_za3lpa$ = function (address) {
    return 0;
  };
  DummyMemory.prototype.lh_za3lpa$ = function (address) {
    return 0;
  };
  DummyMemory.prototype.lw_za3lpa$ = function (address) {
    return 0;
  };
  DummyMemory.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DummyMemory',
    interfaces: [Memory]
  };
  function trace($receiver, traceWrites, traceReads) {
    if (traceWrites === void 0)
      traceWrites = true;
    if (traceReads === void 0)
      traceReads = false;
    return new TraceMemory($receiver, traceWrites, traceReads);
  }
  function TraceMemory(parent, traceWrites, traceReads) {
    if (parent === void 0)
      parent = Memory$Companion_getInstance().invoke();
    if (traceWrites === void 0)
      traceWrites = true;
    if (traceReads === void 0)
      traceReads = false;
    Memory.call(this, true);
    this.parent = parent;
    this.traceWrites = traceWrites;
    this.traceReads = traceReads;
  }
  TraceMemory.prototype.normalized_za3lpa$ = function (address) {
    return address & Memory$Companion_getInstance().MASK;
  };
  TraceMemory.prototype.sb_vux9f0$ = function (address, value) {
    if (this.traceWrites)
      println(format('sb(0x%08X) = %d', [this.normalized_za3lpa$(address), value]));
    this.parent.sb_vux9f0$(address, value);
  };
  TraceMemory.prototype.sh_vux9f0$ = function (address, value) {
    if (this.traceWrites)
      println(format('sh(0x%08X) = %d', [this.normalized_za3lpa$(address), value]));
    this.parent.sh_vux9f0$(address, value);
  };
  TraceMemory.prototype.sw_vux9f0$ = function (address, value) {
    if (this.traceWrites)
      println(format('sw(0x%08X) = %d', [this.normalized_za3lpa$(address), value]));
    this.parent.sw_vux9f0$(address, value);
  };
  TraceMemory.prototype.lb_za3lpa$ = function (address) {
    if (this.traceReads)
      println(format('lb(0x%08X)', [this.normalized_za3lpa$(address)]));
    var res = this.parent.lb_za3lpa$(address);
    if (this.traceReads)
      println(format('-> %d', [res]));
    return res;
  };
  TraceMemory.prototype.lh_za3lpa$ = function (address) {
    if (this.traceReads)
      println(format('lh(0x%08X)', [this.normalized_za3lpa$(address)]));
    var res = this.parent.lh_za3lpa$(address);
    if (this.traceReads)
      println(format('-> %d', [res]));
    return res;
  };
  TraceMemory.prototype.lw_za3lpa$ = function (address) {
    if (this.traceReads)
      println(format('lw(0x%08X)', [this.normalized_za3lpa$(address)]));
    var res = this.parent.lw_za3lpa$(address);
    if (this.traceReads)
      println(format('-> %d', [res]));
    return res;
  };
  TraceMemory.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TraceMemory',
    interfaces: [Memory]
  };
  function openSync$ObjectLiteral(closure$mem) {
    this.closure$mem = closure$mem;
    SyncStreamBase.call(this);
  }
  Object.defineProperty(openSync$ObjectLiteral.prototype, 'length', {
    get: function () {
      return new Kotlin.Long(-1, 0);
    },
    set: function (value) {
      error.invalidOp;
    }
  });
  openSync$ObjectLiteral.prototype.close = function () {
  };
  openSync$ObjectLiteral.prototype.read_4m9kcn$ = function (position, buffer, offset, len) {
    this.closure$mem.read_3fge6q$(position.toInt(), buffer, offset, len);
    return len;
  };
  openSync$ObjectLiteral.prototype.write_4m9kcn$ = function (position, buffer, offset, len) {
    this.closure$mem.write_3fge6q$(position.toInt(), buffer, offset, len);
  };
  openSync$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [SyncStreamBase]
  };
  function openSync_0($receiver) {
    var mem = $receiver;
    return new SyncStream(new openSync$ObjectLiteral(mem));
  }
  function FastMemoryBacked() {
    Memory.call(this, true);
  }
  FastMemoryBacked.prototype.sb_vux9f0$ = function (address, value) {
    this.buffer.set_vux9f0$(this.index_za3lpa$(address), value);
  };
  FastMemoryBacked.prototype.sh_vux9f0$ = function (address, value) {
    this.buffer.setAlignedInt16_2bqt6h$(this.index_za3lpa$(address) >>> 1, toShort(value));
  };
  FastMemoryBacked.prototype.sw_vux9f0$ = function (address, value) {
    this.buffer.setAlignedInt32_vux9f0$(this.index_za3lpa$(address) >>> 2, value);
  };
  FastMemoryBacked.prototype.lb_za3lpa$ = function (address) {
    return this.buffer.get_za3lpa$(this.index_za3lpa$(address));
  };
  FastMemoryBacked.prototype.lh_za3lpa$ = function (address) {
    return this.buffer.getAlignedInt16_za3lpa$(this.index_za3lpa$(address) >>> 1);
  };
  FastMemoryBacked.prototype.lw_za3lpa$ = function (address) {
    return this.buffer.getAlignedInt32_za3lpa$(this.index_za3lpa$(address) >>> 2);
  };
  FastMemoryBacked.prototype.copy_qt1dr2$ = function (srcPos, dstPos, size) {
    KorioNative$FastMemory.Companion.copy_pfo4ta$(this.buffer, this.index_za3lpa$(srcPos), this.buffer, this.index_za3lpa$(dstPos), size);
  };
  FastMemoryBacked.prototype.read_3fge6q$$default = function (srcPos, dst, dstPos, len) {
    this.buffer.getArrayInt8_3fge6q$(srcPos, dst, dstPos, len);
  };
  FastMemoryBacked.prototype.read_coga0j$$default = function (srcPos, dst, dstPos, len) {
    this.buffer.getAlignedArrayInt32_coga0j$(this.index_za3lpa$(srcPos) >>> 2, dst, dstPos, len);
  };
  FastMemoryBacked.prototype.write_3fge6q$$default = function (dstPos, src, srcPos, len) {
    this.buffer.setAlignedArrayInt8_3fge6q$(dstPos, src, srcPos, len);
  };
  FastMemoryBacked.prototype.write_coga0j$$default = function (dstPos, src, srcPos, len) {
    this.buffer.setAlignedArrayInt32_coga0j$(dstPos >>> 2, src, srcPos, len);
  };
  FastMemoryBacked.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FastMemoryBacked',
    interfaces: [Memory]
  };
  function FastMemory() {
    FastMemoryBacked.call(this);
    this.buffer_x89o85$_0 = KorioNative$FastMemory.Companion.alloc_za3lpa$(167772160);
  }
  Object.defineProperty(FastMemory.prototype, 'buffer', {
    get: function () {
      return this.buffer_x89o85$_0;
    }
  });
  FastMemory.prototype.index_za3lpa$ = function (address) {
    return address & Memory$Companion_getInstance().MASK;
  };
  FastMemory.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FastMemory',
    interfaces: [FastMemoryBacked]
  };
  function SmallMemory() {
    FastMemoryBacked.call(this);
    this.buffer_kb847y$_0 = KorioNative$FastMemory.Companion.alloc_za3lpa$(33554432 + 2097152 + 65536 | 0);
  }
  Object.defineProperty(SmallMemory.prototype, 'buffer', {
    get: function () {
      return this.buffer_kb847y$_0;
    }
  });
  SmallMemory.prototype.index_za3lpa$ = function (address) {
    if (address >= 134217728)
      return address - 134217728 | 0;
    else if (address >= 67108864)
      return address - 67108864 + 33554432 | 0;
    else
      return address + 67108864 + 33554432 | 0;
  };
  SmallMemory.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SmallMemory',
    interfaces: [FastMemoryBacked]
  };
  function Ptr() {
  }
  Ptr.prototype.sdw_6svq3l$ = function (offset, value) {
    this.sw_vux9f0$(offset + 0 | 0, value.shiftRightUnsigned(0).toInt());
    this.sw_vux9f0$(offset + 4 | 0, value.shiftRightUnsigned(32).toInt());
  };
  Ptr.prototype.ldw_za3lpa$ = function (offset) {
    var low = get_unsigned(this.lw_za3lpa$(offset + 0 | 0));
    var high = get_unsigned(this.lw_za3lpa$(offset + 4 | 0));
    return high.shiftLeft(32).or(low);
  };
  Ptr.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Ptr',
    interfaces: []
  };
  function MemPtr(mem, addr) {
    this.mem = mem;
    this.addr_xq0922$_0 = addr;
  }
  Object.defineProperty(MemPtr.prototype, 'addr', {
    get: function () {
      return this.addr_xq0922$_0;
    }
  });
  MemPtr.prototype.sb_vux9f0$ = function (offset, value) {
    this.mem.sb_vux9f0$(this.addr + offset | 0, value);
  };
  MemPtr.prototype.sh_vux9f0$ = function (offset, value) {
    this.mem.sh_vux9f0$(this.addr + offset | 0, value);
  };
  MemPtr.prototype.sw_vux9f0$ = function (offset, value) {
    this.mem.sw_vux9f0$(this.addr + offset | 0, value);
  };
  MemPtr.prototype.lb_za3lpa$ = function (offset) {
    return this.mem.lb_za3lpa$(this.addr + offset | 0);
  };
  MemPtr.prototype.lh_za3lpa$ = function (offset) {
    return this.mem.lh_za3lpa$(this.addr + offset | 0);
  };
  MemPtr.prototype.lw_za3lpa$ = function (offset) {
    return this.mem.lw_za3lpa$(this.addr + offset | 0);
  };
  MemPtr.prototype.toString = function () {
    return format('Ptr(0x%08X)', [this.addr]);
  };
  MemPtr.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemPtr',
    interfaces: [Ptr]
  };
  MemPtr.prototype.component1 = function () {
    return this.mem;
  };
  MemPtr.prototype.component2 = function () {
    return this.addr;
  };
  MemPtr.prototype.copy_ktor8l$ = function (mem, addr) {
    return new MemPtr(mem === void 0 ? this.mem : mem, addr === void 0 ? this.addr : addr);
  };
  MemPtr.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.mem) | 0;
    result = result * 31 + Kotlin.hashCode(this.addr) | 0;
    return result;
  };
  MemPtr.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.mem, other.mem) && Kotlin.equals(this.addr, other.addr)))));
  };
  function ptr($receiver, addr) {
    return new MemPtr($receiver, addr);
  }
  function get_isNotNull($receiver) {
    return $receiver.addr !== 0;
  }
  function get_isNull($receiver) {
    return $receiver.addr === 0;
  }
  function writeBytes($receiver, bytes, offset, size) {
    if (offset === void 0)
      offset = 0;
    if (size === void 0)
      size = bytes.length - offset | 0;
    for (var n = 0; n < size; n++)
      $receiver.sb_vux9f0$(n, bytes[offset + n | 0]);
  }
  function readBytes_1($receiver, count, offset) {
    if (offset === void 0)
      offset = 0;
    var out = new Int8Array(count);
    for (var n = 0; n < count; n++)
      out[n] = toByte($receiver.lb_za3lpa$(offset + n | 0));
    return out;
  }
  function openSync$ObjectLiteral_0(this$openSync) {
    this.this$openSync = this$openSync;
    SyncStreamBase.call(this);
    this.length_o2qtui$_0 = new Kotlin.Long(-1, 2147483647);
  }
  Object.defineProperty(openSync$ObjectLiteral_0.prototype, 'length', {
    get: function () {
      return this.length_o2qtui$_0;
    },
    set: function (length) {
      this.length_o2qtui$_0 = length;
    }
  });
  openSync$ObjectLiteral_0.prototype.close = function () {
  };
  openSync$ObjectLiteral_0.prototype.read_4m9kcn$ = function (position, buffer, offset, len) {
    var start = position.toInt();
    for (var n = 0; n < len; n++)
      buffer[offset + n | 0] = toByte(this.this$openSync.lb_za3lpa$(start + n | 0));
    return len;
  };
  openSync$ObjectLiteral_0.prototype.write_4m9kcn$ = function (position, buffer, offset, len) {
    var start = position.toInt();
    for (var n = 0; n < len; n++)
      this.this$openSync.sb_vux9f0$(start + n | 0, buffer[offset + n | 0]);
  };
  openSync$ObjectLiteral_0.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [SyncStreamBase]
  };
  function openSync_1($receiver) {
    return toSyncStream(new openSync$ObjectLiteral_0($receiver), Kotlin.Long.ZERO);
  }
  function CurrentVfs$lambda() {
    return LocalVfs(KPspEmuNative_getInstance().getCurrentDirectory());
  }
  var CurrentVfs;
  function get_CurrentVfs() {
    new PropertyMetadata('CurrentVfs');
    return CurrentVfs.value;
  }
  function setAlpha($receiver, value) {
    var tmp$;
    tmp$ = $receiver.data.length;
    for (var n = 0; n < tmp$; n++)
      $receiver.data[n] = $receiver.data[n] & 16777215 | value << 24;
  }
  var toInt_0 = defineInlineFunction('kpspemu.com.soywiz.kpspemu.util.toInt_1v8dcc$', function ($receiver) {
    return $receiver ? 1 : 0;
  });
  function NumericEnum_0() {
  }
  NumericEnum_0.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'NumericEnum',
    interfaces: []
  };
  function Flags() {
  }
  Flags.prototype.hasFlag_fzutc1$ = function (item) {
    return (this.id & item.id) === item.id;
  };
  Flags.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Flags',
    interfaces: [NumericEnum_0]
  };
  function IdEnum() {
  }
  function IdEnum$SmallCompanion(values) {
    this.values = values;
    this.defaultValue_wuqee8$_0 = first_1(this.values);
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var $receiver = this.values;
    var destination = ArrayList_init($receiver.length);
    var tmp$_3;
    for (tmp$_3 = 0; tmp$_3 !== $receiver.length; ++tmp$_3) {
      var item = $receiver[tmp$_3];
      destination.add_11rb$(item.id);
    }
    this.MAX_ID_u3x086$_0 = (tmp$ = max(destination)) != null ? tmp$ : 0;
    this.valuesById_39p2yk$_0 = ArrayList_init();
    tmp$_0 = this.MAX_ID_u3x086$_0 + 1 | 0;
    for (var n = 0; n < tmp$_0; n++)
      this.valuesById_39p2yk$_0.add_11rb$(this.defaultValue_wuqee8$_0);
    tmp$_1 = this.values;
    for (tmp$_2 = 0; tmp$_2 !== tmp$_1.length; ++tmp$_2) {
      var v = tmp$_1[tmp$_2];
      this.valuesById_39p2yk$_0.set_wxm5ur$(v.id, v);
    }
  }
  var get_lastIndex = Kotlin.kotlin.collections.get_lastIndex_55thoc$;
  IdEnum$SmallCompanion.prototype.invoke_za3lpa$ = function (id) {
    var $receiver = this.valuesById_39p2yk$_0;
    return id >= 0 && id <= get_lastIndex($receiver) ? $receiver.get_za3lpa$(id) : this.defaultValue_wuqee8$_0;
  };
  IdEnum$SmallCompanion.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SmallCompanion',
    interfaces: []
  };
  IdEnum.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'IdEnum',
    interfaces: []
  };
  function clamp_0($receiver, min, max) {
    if ($receiver < min)
      return min;
    else if ($receiver > max)
      return max;
    else
      return $receiver;
  }
  function isNanOrInfinite($receiver) {
    return isNaN_0($receiver) || isInfinite($receiver);
  }
  function imul32_64(a, b, result) {
    if (result === void 0)
      result = new Int32Array(2);
    if (a === 0) {
      result[0] = 0;
      result[1] = 0;
      return result;
    }
    if (b === 0) {
      result[0] = 0;
      result[1] = 0;
      return result;
    }
    if (a >= -32768 && a <= 32767 && (b >= -32768 && b <= 32767)) {
      result[0] = Kotlin.imul(a, b);
      result[1] = result[0] < 0 ? -1 : 0;
      return result;
    }
    var doNegate = a < 0 ^ b < 0;
    umul32_64(abs(a), abs(b), result);
    if (doNegate) {
      result[0] = ~result[0];
      result[1] = ~result[1];
      result[0] = result[0] + 1 | 0;
      if (result[0] === 0)
        result[1] = result[1] + 1 | 0;
    }
    return result;
  }
  function umul32_64(a, b, result) {
    if (result === void 0)
      result = new Int32Array(2);
    var tmp$ = (a ^ -2147483648) < (32767 ^ -2147483648);
    if (tmp$) {
      tmp$ = (b ^ -2147483648) < (65536 ^ -2147483648);
    }
    if (tmp$) {
      result[0] = Kotlin.imul(a, b);
      result[1] = result[0] < 0 ? -1 : 0;
      return result;
    }
    var a00 = a & 65535;
    var a16 = a >>> 16;
    var b00 = b & 65535;
    var b16 = b >>> 16;
    var c00 = Kotlin.imul(a00, b00);
    var c16 = (c00 >>> 16) + Kotlin.imul(a16, b00) | 0;
    var c32 = c16 >>> 16;
    c16 = (c16 & 65535) + Kotlin.imul(a00, b16) | 0;
    c32 = c32 + (c16 >>> 16) | 0;
    var c48 = c32 >>> 16;
    c32 = (c32 & 65535) + Kotlin.imul(a16, b16) | 0;
    c48 = c48 + (c32 >>> 16) | 0;
    result[0] = (c16 & 65535) << 16 | c00 & 65535;
    result[1] = (c48 & 65535) << 16 | c32 & 65535;
    return result;
  }
  function get_unsigned($receiver) {
    return Kotlin.Long.fromInt($receiver).and(new Kotlin.Long(-1, 0));
  }
  function BitUtils() {
    BitUtils_instance = this;
  }
  BitUtils.prototype.mask_za3lpa$ = function (value) {
    return (1 << value) - 1 | 0;
  };
  BitUtils.prototype.bitrev32_za3lpa$ = function (x) {
    var v = x;
    v = v >>> 1 & 1431655765 | (v & 1431655765) << 1;
    v = v >>> 2 & 858993459 | (v & 858993459) << 2;
    v = v >>> 4 & 252645135 | (v & 252645135) << 4;
    v = v >>> 8 & 16711935 | (v & 16711935) << 8;
    v = v >>> 16 & 65535 | (v & 65535) << 16;
    return v;
  };
  BitUtils.prototype.rotr_vux9f0$ = function (value, offset) {
    return value >>> offset | value << 32 - offset;
  };
  BitUtils.prototype.clz32_za3lpa$ = function (x) {
    var v = {v: x};
    if (v.v === 0)
      return 32;
    var result = {v: 0};
    if ((v.v & (new Kotlin.Long(-65536, 0)).toInt()) === 0) {
      v.v = v.v << 16;
      result.v = result.v + 16 | 0;
    }
    if ((v.v & (new Kotlin.Long(-16777216, 0)).toInt()) === 0) {
      v.v = v.v << 8;
      result.v = result.v + 8 | 0;
    }
    if ((v.v & (new Kotlin.Long(-268435456, 0)).toInt()) === 0) {
      v.v = v.v << 4;
      result.v = result.v + 4 | 0;
    }
    if ((v.v & (new Kotlin.Long(-1073741824, 0)).toInt()) === 0) {
      v.v = v.v << 2;
      result.v = result.v + 2 | 0;
    }
    if ((v.v & (new Kotlin.Long(-2147483648, 0)).toInt()) === 0) {
      v.v = v.v << 1;
      result.v = result.v + 1 | 0;
    }
    return result.v;
  };
  BitUtils.prototype.clo_za3lpa$ = function (x) {
    return this.clz32_za3lpa$(~x);
  };
  BitUtils.prototype.clz_za3lpa$ = function (x) {
    return this.clz32_za3lpa$(x);
  };
  BitUtils.prototype.seb_za3lpa$ = function (x) {
    return x << 24 >> 24;
  };
  BitUtils.prototype.seh_za3lpa$ = function (x) {
    return x << 16 >> 16;
  };
  BitUtils.prototype.wsbh_za3lpa$ = function (v) {
    return (v & (new Kotlin.Long(-16711936, 0)).toInt()) >>> 8 | (v & 16711935) << 8;
  };
  BitUtils.prototype.wsbw_za3lpa$ = function (v) {
    return (v & (new Kotlin.Long(-16777216, 0)).toInt()) >>> 24 | (v & 16711680) >>> 8 | (v & 65280) << 8 | (v & 255) << 24;
  };
  BitUtils.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'BitUtils',
    interfaces: []
  };
  var BitUtils_instance = null;
  function BitUtils_getInstance() {
    if (BitUtils_instance === null) {
      new BitUtils();
    }
    return BitUtils_instance;
  }
  function compareToUnsigned($receiver, that) {
    return util.IntEx.compareUnsigned_vux9f0$($receiver, that);
  }
  var ult = defineInlineFunction('kpspemu.com.soywiz.kpspemu.util.ult_dqglrj$', function ($receiver, that) {
    return ($receiver ^ -2147483648) < (that ^ -2147483648);
  });
  function ule($receiver, that) {
    return util.IntEx.compareUnsigned_vux9f0$($receiver, that) <= 0;
  }
  function ugt($receiver, that) {
    return util.IntEx.compareUnsigned_vux9f0$($receiver, that) > 0;
  }
  function uge($receiver, that) {
    return util.IntEx.compareUnsigned_vux9f0$($receiver, that) >= 0;
  }
  function extractBool($receiver, offset) {
    return extract($receiver, offset, 1) !== 0;
  }
  function bitReverse($receiver) {
    return BitUtils_getInstance().bitrev32_za3lpa$($receiver);
  }
  function countLeadingZeros($receiver) {
    return BitUtils_getInstance().clz_za3lpa$($receiver);
  }
  function countTrailingZeros($receiver) {
    var count = 0;
    var v = $receiver;
    while ((v & 1) === 0) {
      v = v >> 1;
      count = count + 1 | 0;
    }
    return count;
  }
  function hasFlag($receiver, bits) {
    return ($receiver & bits) === bits;
  }
  function IntMap() {
    this.map = LinkedHashMap_init();
  }
  IntMap.prototype.remove_za3lpa$ = function (key) {
    return this.map.remove_11rb$(key);
  };
  IntMap.prototype.get_za3lpa$ = function (key) {
    return this.map.get_11rb$(key);
  };
  IntMap.prototype.set_wxm5ur$ = function (key, value) {
    this.map.put_xwzc9p$(key, value);
  };
  IntMap.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IntMap',
    interfaces: []
  };
  function currentTimeMicro($receiver) {
    return millisecondsToMicroseconds($receiver, $receiver.currentTimeMillis());
  }
  function millisecondsToMicroseconds($receiver, millis) {
    return millis.multiply(Kotlin.Long.fromInt(1000));
  }
  function MathFloat() {
    MathFloat_instance = this;
  }
  MathFloat.prototype.handleCastInfinite_mx4ult$ = function (value) {
    return value < 0 ? -2147483648 : 2147483647;
  };
  MathFloat.prototype.rintDouble_14dthe$ = function (value) {
    var twoToThe52 = Math_0.pow(2.0, 52);
    var sign = Math_0.sign(value);
    var rvalue = Math_0.abs(value);
    if (rvalue < twoToThe52)
      rvalue = twoToThe52 + rvalue - twoToThe52;
    return sign * rvalue;
  };
  MathFloat.prototype.rint_mx4ult$ = function (value) {
    if (isNanOrInfinite(value))
      return this.handleCastInfinite_mx4ult$(value);
    return numberToInt(this.rintDouble_14dthe$(value));
  };
  MathFloat.prototype.cast_mx4ult$ = function (value) {
    if (isNanOrInfinite(value))
      return this.handleCastInfinite_mx4ult$(value);
    return value < 0 ? numberToInt(Math_0.ceil(value)) : numberToInt(Math_0.floor(value));
  };
  MathFloat.prototype.trunc_mx4ult$ = function (value) {
    if (isNanOrInfinite(value))
      return this.handleCastInfinite_mx4ult$(value);
    if (value < 0) {
      return numberToInt(Math_0.ceil(value));
    }
     else {
      return numberToInt(Math_0.floor(value));
    }
  };
  var round = Kotlin.kotlin.math.round_14dthe$;
  MathFloat.prototype.round_mx4ult$ = function (value) {
    if (isNanOrInfinite(value))
      return this.handleCastInfinite_mx4ult$(value);
    return numberToInt(round(value));
  };
  MathFloat.prototype.floor_mx4ult$ = function (value) {
    if (isNanOrInfinite(value))
      return this.handleCastInfinite_mx4ult$(value);
    return numberToInt(Math_0.floor(value));
  };
  MathFloat.prototype.ceil_mx4ult$ = function (value) {
    if (isNanOrInfinite(value))
      return this.handleCastInfinite_mx4ult$(value);
    return numberToInt(Math_0.ceil(value));
  };
  MathFloat.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'MathFloat',
    interfaces: []
  };
  var MathFloat_instance = null;
  function MathFloat_getInstance() {
    if (MathFloat_instance === null) {
      new MathFloat();
    }
    return MathFloat_instance;
  }
  function isAlmostZero($receiver) {
    return Math_0.abs($receiver) <= 1.0E-19;
  }
  function splice($receiver, removeOffset, removeCount, itemsToAdd) {
    for (var n = 0; n < removeCount; n++)
      $receiver.removeAt_za3lpa$(removeOffset);
    for (var n_0 = 0; n_0 < itemsToAdd.length; n_0++) {
      $receiver.add_wxm5ur$(removeOffset + n_0 | 0, itemsToAdd[n_0]);
    }
  }
  function reduceAcumulate($receiver, init, reductor) {
    var tmp$;
    var acc = init;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      acc = reductor(acc, item);
    }
    return acc;
  }
  function PspLoggerManager() {
    PspLoggerManager_instance = this;
    this.loggers = LinkedHashMap_init();
    this.defaultLevel = null;
  }
  PspLoggerManager.prototype.getLogger_61zpoe$ = function (name) {
    var $receiver = this.loggers;
    var tmp$;
    var value = $receiver.get_11rb$(name);
    if (value == null) {
      var answer = new PspLogger(name, true);
      $receiver.put_xwzc9p$(name, answer);
      tmp$ = answer;
    }
     else {
      tmp$ = value;
    }
    return tmp$;
  };
  PspLoggerManager.prototype.setLevel_ymssuk$ = function (name, level) {
    var $receiver = this.getLogger_61zpoe$(name);
    $receiver.level = level;
    return $receiver;
  };
  PspLoggerManager.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'PspLoggerManager',
    interfaces: []
  };
  var PspLoggerManager_instance = null;
  function PspLoggerManager_getInstance() {
    if (PspLoggerManager_instance === null) {
      new PspLoggerManager();
    }
    return PspLoggerManager_instance;
  }
  function PspLogLevel(name, ordinal, index) {
    Enum.call(this);
    this.index = index;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PspLogLevel_initFields() {
    PspLogLevel_initFields = function () {
    };
    PspLogLevel$NONE_instance = new PspLogLevel('NONE', 0, 0);
    PspLogLevel$FATAL_instance = new PspLogLevel('FATAL', 1, 1);
    PspLogLevel$ERROR_instance = new PspLogLevel('ERROR', 2, 2);
    PspLogLevel$WARN_instance = new PspLogLevel('WARN', 3, 3);
    PspLogLevel$INFO_instance = new PspLogLevel('INFO', 4, 4);
    PspLogLevel$TRACE_instance = new PspLogLevel('TRACE', 5, 5);
  }
  var PspLogLevel$NONE_instance;
  function PspLogLevel$NONE_getInstance() {
    PspLogLevel_initFields();
    return PspLogLevel$NONE_instance;
  }
  var PspLogLevel$FATAL_instance;
  function PspLogLevel$FATAL_getInstance() {
    PspLogLevel_initFields();
    return PspLogLevel$FATAL_instance;
  }
  var PspLogLevel$ERROR_instance;
  function PspLogLevel$ERROR_getInstance() {
    PspLogLevel_initFields();
    return PspLogLevel$ERROR_instance;
  }
  var PspLogLevel$WARN_instance;
  function PspLogLevel$WARN_getInstance() {
    PspLogLevel_initFields();
    return PspLogLevel$WARN_instance;
  }
  var PspLogLevel$INFO_instance;
  function PspLogLevel$INFO_getInstance() {
    PspLogLevel_initFields();
    return PspLogLevel$INFO_instance;
  }
  var PspLogLevel$TRACE_instance;
  function PspLogLevel$TRACE_getInstance() {
    PspLogLevel_initFields();
    return PspLogLevel$TRACE_instance;
  }
  PspLogLevel.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspLogLevel',
    interfaces: [Enum]
  };
  function PspLogLevel$values() {
    return [PspLogLevel$NONE_getInstance(), PspLogLevel$FATAL_getInstance(), PspLogLevel$ERROR_getInstance(), PspLogLevel$WARN_getInstance(), PspLogLevel$INFO_getInstance(), PspLogLevel$TRACE_getInstance()];
  }
  PspLogLevel.values = PspLogLevel$values;
  function PspLogLevel$valueOf(name) {
    switch (name) {
      case 'NONE':
        return PspLogLevel$NONE_getInstance();
      case 'FATAL':
        return PspLogLevel$FATAL_getInstance();
      case 'ERROR':
        return PspLogLevel$ERROR_getInstance();
      case 'WARN':
        return PspLogLevel$WARN_getInstance();
      case 'INFO':
        return PspLogLevel$INFO_getInstance();
      case 'TRACE':
        return PspLogLevel$TRACE_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.util.PspLogLevel.' + name);
    }
  }
  PspLogLevel.valueOf_61zpoe$ = PspLogLevel$valueOf;
  function PspLogger(name, dummy) {
    PspLogger$Companion_getInstance();
    this.name = name;
    this.dummy = dummy;
    var $receiver = PspLoggerManager_getInstance().loggers;
    var key = this.name;
    $receiver.put_xwzc9p$(key, this);
    this.level = null;
  }
  function PspLogger$Companion() {
    PspLogger$Companion_instance = this;
  }
  PspLogger$Companion.prototype.invoke_61zpoe$ = function (name) {
    return PspLoggerManager_getInstance().getLogger_61zpoe$(name);
  };
  PspLogger$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var PspLogger$Companion_instance = null;
  function PspLogger$Companion_getInstance() {
    if (PspLogger$Companion_instance === null) {
      new PspLogger$Companion();
    }
    return PspLogger$Companion_instance;
  }
  Object.defineProperty(PspLogger.prototype, 'processedLevel', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.level) != null ? tmp$ : PspLoggerManager_getInstance().defaultLevel) != null ? tmp$_0 : PspLogLevel$WARN_getInstance();
    }
  });
  PspLogger.prototype.actualLog_138x2s$ = function (level, msg) {
    var line = '[' + this.name + ']: ' + msg;
    if (equals(level, PspLogLevel$ERROR_getInstance()))
      lang.Console.error_s8jyv4$(line);
    else
      lang.Console.log_s8jyv4$(line);
  };
  PspLogger.prototype.log_kpfy3w$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.util.PspLogger.log_kpfy3w$', function (level, msg) {
    if (level.index <= this.processedLevel.index) {
      this.actualLog_138x2s$(level, msg());
    }
  });
  PspLogger.prototype.fatal_61zpoe$ = function (msg) {
    var level = PspLogLevel$FATAL_getInstance();
    if (level.index <= this.processedLevel.index) {
      this.actualLog_138x2s$.call(this, level, msg);
    }
  };
  PspLogger.prototype.error_61zpoe$ = function (msg) {
    var level = PspLogLevel$ERROR_getInstance();
    if (level.index <= this.processedLevel.index) {
      this.actualLog_138x2s$.call(this, level, msg);
    }
  };
  PspLogger.prototype.warn_61zpoe$ = function (msg) {
    var level = PspLogLevel$WARN_getInstance();
    if (level.index <= this.processedLevel.index) {
      this.actualLog_138x2s$.call(this, level, msg);
    }
  };
  PspLogger.prototype.info_61zpoe$ = function (msg) {
    var level = PspLogLevel$INFO_getInstance();
    if (level.index <= this.processedLevel.index) {
      this.actualLog_138x2s$.call(this, level, msg);
    }
  };
  PspLogger.prototype.trace_61zpoe$ = function (msg) {
    var level = PspLogLevel$TRACE_getInstance();
    if (level.index <= this.processedLevel.index) {
      this.actualLog_138x2s$.call(this, level, msg);
    }
  };
  PspLogger.prototype.fatal_h4ejuu$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.util.PspLogger.fatal_h4ejuu$', wrapFunction(function () {
    var PspLogLevel = _.com.soywiz.kpspemu.util.PspLogLevel;
    return function (msg) {
      var level = PspLogLevel.FATAL;
      if (level.index <= this.processedLevel.index) {
        this.actualLog_138x2s$(level, msg());
      }
    };
  }));
  PspLogger.prototype.error_h4ejuu$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.util.PspLogger.error_h4ejuu$', wrapFunction(function () {
    var PspLogLevel = _.com.soywiz.kpspemu.util.PspLogLevel;
    return function (msg) {
      var level = PspLogLevel.ERROR;
      if (level.index <= this.processedLevel.index) {
        this.actualLog_138x2s$(level, msg());
      }
    };
  }));
  PspLogger.prototype.warn_h4ejuu$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.util.PspLogger.warn_h4ejuu$', wrapFunction(function () {
    var PspLogLevel = _.com.soywiz.kpspemu.util.PspLogLevel;
    return function (msg) {
      var level = PspLogLevel.WARN;
      if (level.index <= this.processedLevel.index) {
        this.actualLog_138x2s$(level, msg());
      }
    };
  }));
  PspLogger.prototype.info_h4ejuu$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.util.PspLogger.info_h4ejuu$', wrapFunction(function () {
    var PspLogLevel = _.com.soywiz.kpspemu.util.PspLogLevel;
    return function (msg) {
      var level = PspLogLevel.INFO;
      if (level.index <= this.processedLevel.index) {
        this.actualLog_138x2s$(level, msg());
      }
    };
  }));
  PspLogger.prototype.trace_h4ejuu$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.util.PspLogger.trace_h4ejuu$', wrapFunction(function () {
    var PspLogLevel = _.com.soywiz.kpspemu.util.PspLogLevel;
    return function (msg) {
      var level = PspLogLevel.TRACE;
      if (level.index <= this.processedLevel.index) {
        this.actualLog_138x2s$(level, msg());
      }
    };
  }));
  PspLogger.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspLogger',
    interfaces: []
  };
  function quote_0($receiver, str) {
    var regex = Regex('[.?*+^$\\[\\]\\\\(){}|\\-]');
    var replace_20wsma$result;
    replace_20wsma$break: do {
      var match = regex.find_905azu$(str);
      if (match == null) {
        replace_20wsma$result = str.toString();
        break replace_20wsma$break;
      }
      var lastStart = 0;
      var length = str.length;
      var sb = StringBuilder_init(length);
      do {
        var foundMatch = match != null ? match : throwNPE();
        sb.append_ezbsdh$(str, lastStart, foundMatch.range.start);
        sb.append_gw00v9$('\\' + foundMatch.value);
        lastStart = foundMatch.range.endInclusive + 1 | 0;
        match = foundMatch.next();
      }
       while (lastStart < length && match != null);
      if (lastStart < length) {
        sb.append_ezbsdh$(str, lastStart, length);
      }
      replace_20wsma$result = sb.toString();
    }
     while (false);
    return replace_20wsma$result;
  }
  function ResourceItem() {
  }
  ResourceItem.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'ResourceItem',
    interfaces: []
  };
  function ResourceList(name, create) {
    this.name = name;
    this.create_0 = create;
    this.items_0 = LinkedHashMap_init();
    this.lastId_0 = 1;
    this.freeList_0 = Pool_init(void 0, ResourceList$freeList$lambda(this));
  }
  ResourceList.prototype.alloc = function () {
    var item = this.freeList_0.alloc();
    var $receiver = this.items_0;
    var key = item.id;
    $receiver.put_xwzc9p$(key, item);
    return item;
  };
  ResourceList.prototype.free_51l2nw$ = function (item) {
    this.freeList_0.free_11rb$(item);
    this.items_0.remove_11rb$(item.id);
  };
  ResourceList.prototype.freeById_za3lpa$ = function (id) {
    this.free_51l2nw$(this.get_za3lpa$(id));
  };
  ResourceList.prototype.tryGetById_za3lpa$ = function (id) {
    return this.items_0.get_11rb$(id);
  };
  ResourceList.prototype.get_za3lpa$ = function (id) {
    var tmp$;
    return (tmp$ = this.tryGetById_za3lpa$(id)) != null ? tmp$ : invalidOp("Can't find " + this.name + ' with id ' + id);
  };
  function ResourceList$freeList$lambda(this$ResourceList) {
    return function () {
      var tmp$;
      return this$ResourceList.create_0((tmp$ = this$ResourceList.lastId_0, this$ResourceList.lastId_0 = tmp$ + 1 | 0, tmp$));
    };
  }
  ResourceList.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ResourceList',
    interfaces: []
  };
  function waitOnePromise$lambda(closure$close, closure$deferred) {
    return function (it) {
      var tmp$;
      (tmp$ = closure$close.v) != null ? (tmp$.close(), Unit) : null;
      closure$deferred.resolve_11rb$(it);
      return Unit;
    };
  }
  function waitOnePromise$lambda_0(closure$close) {
    return function (it) {
      closure$close.v.close();
      return Unit;
    };
  }
  function waitOnePromise($receiver) {
    var deferred = new Promise$Deferred();
    var close = {v: null};
    close.v = $receiver.once_qlkmfe$(waitOnePromise$lambda(close, deferred));
    deferred.onCancel.invoke_qlkmfe$(waitOnePromise$lambda_0(close));
    return deferred.promise;
  }
  function parseInt($receiver) {
    if (startsWith_0($receiver, '0x', true)) {
      return toLong($receiver.substring(2), 16).toInt();
    }
     else
      return toInt($receiver);
  }
  function get_quoted($receiver) {
    return quote($receiver);
  }
  function get_hex($receiver) {
    return format('0x%08X', [$receiver]);
  }
  function get_hex_0($receiver) {
    return get_hexString($receiver);
  }
  function asVfsFile($receiver, name) {
    if (name === void 0)
      name = 'unknown.bin';
    return MemoryVfs(mapOf(to(name, $receiver))).get_61zpoe$(name);
  }
  function MountableVfsSync$ObjectLiteral() {
    Vfs$Proxy.call(this);
    this.mounts_0 = ArrayList_init();
  }
  MountableVfsSync$ObjectLiteral.prototype.mount_hem4eq$ = function (folder, file) {
    this._unmount_0(folder);
    var $receiver = this.mounts_0;
    var element = to(vfs.VfsUtil.normalize_61zpoe$(folder), file);
    $receiver.add_11rb$(element);
    this.resort_0();
    return this;
  };
  MountableVfsSync$ObjectLiteral.prototype.unmount_61zpoe$ = function (folder) {
    this._unmount_0(folder);
    this.resort_0();
    return this;
  };
  function MountableVfsSync$ObjectLiteral$_unmount$lambda(closure$folder) {
    return function (it) {
      return equals(it.first, vfs.VfsUtil.normalize_61zpoe$(closure$folder));
    };
  }
  MountableVfsSync$ObjectLiteral.prototype._unmount_0 = function (folder) {
    removeAll(this.mounts_0, MountableVfsSync$ObjectLiteral$_unmount$lambda(folder));
  };
  function MountableVfsSync$ObjectLiteral$resort$lambda(it) {
    return -it.first.length;
  }
  var sortWith = Kotlin.kotlin.collections.sortWith_nqfjgj$;
  var compareBy$lambda_1 = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  function Comparator$ObjectLiteral_1(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_1.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_1.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  MountableVfsSync$ObjectLiteral.prototype.resort_0 = function () {
    var $receiver = this.mounts_0;
    if ($receiver.size > 1) {
      sortWith($receiver, new Comparator$ObjectLiteral_1(compareBy$lambda_1(MountableVfsSync$ObjectLiteral$resort$lambda)));
    }
  };
  MountableVfsSync$ObjectLiteral.prototype.access_61zpoe$ = function (path, continuation) {
    var tmp$;
    var rpath = vfs.VfsUtil.normalize_61zpoe$(path);
    tmp$ = this.mounts_0.iterator();
    while (tmp$.hasNext()) {
      var tmp$_0 = tmp$.next();
      var base = tmp$_0.component1()
      , file = tmp$_0.component2();
      if (startsWith_0(rpath, base)) {
        var startIndex = base.length;
        return file.get_61zpoe$(rpath.substring(startIndex));
      }
    }
    throw new FileNotFoundException(path);
  };
  MountableVfsSync$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [MountableSync, Vfs$Proxy]
  };
  function MountableVfsSync(callback) {
    var mount = new MountableVfsSync$ObjectLiteral();
    callback(mount);
    return mount.root;
  }
  function MountableSync() {
  }
  MountableSync.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'MountableSync',
    interfaces: []
  };
  function ZipVfs2$normalizeName($receiver) {
    return trim($receiver, Kotlin.charArrayOf(47)).toLowerCase();
  }
  function ZipVfs2$ZipEntry(path, compressionMethod, isDirectory, time, offset, inode, headerEntry, compressedSize, uncompressedSize) {
    this.path = path;
    this.compressionMethod = compressionMethod;
    this.isDirectory = isDirectory;
    this.time = time;
    this.offset = offset;
    this.inode = inode;
    this.headerEntry = headerEntry;
    this.compressedSize = compressedSize;
    this.uncompressedSize = uncompressedSize;
  }
  ZipVfs2$ZipEntry.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ZipEntry',
    interfaces: []
  };
  function ZipVfs2$toStat($receiver, file) {
    var tmp$;
    var vfs = file.vfs;
    if ($receiver != null) {
      tmp$ = vfs.createExistsStat_sjl0ub$(file.path, $receiver.isDirectory, $receiver.uncompressedSize, void 0, $receiver.inode, void 0, void 0, void 0, $receiver.time.utcTimestamp);
    }
     else {
      tmp$ = vfs.createNonExistsStat_4w9ihe$(file.path);
    }
    return tmp$;
  }
  var Map = Kotlin.kotlin.collections.Map;
  function ZipVfs2$Impl(closure$files, closure$normalizeName, closure$toStat, closure$filesPerFolder, closure$zipFile) {
    this.closure$files = closure$files;
    this.closure$normalizeName = closure$normalizeName;
    this.closure$toStat = closure$toStat;
    this.closure$filesPerFolder = closure$filesPerFolder;
    this.closure$zipFile = closure$zipFile;
    Vfs.call(this);
    this.vfs = this;
  }
  ZipVfs2$Impl.prototype.open_j4ip3x$ = function (path_0, mode_0, continuation_0, suspended) {
    var instance = new Coroutine$open_j4ip3x$(this, path_0, mode_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$open_j4ip3x$($this, path_0, mode_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$entry = void 0;
    this.local$base = void 0;
    this.local$closure$continuation = void 0;
    this.local$uncompressedSize = void 0;
    this.local$fileNameLength = void 0;
    this.local$extraLength = void 0;
    this.local$path = path_0;
    this.local$mode = mode_0;
  }
  Coroutine$open_j4ip3x$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$open_j4ip3x$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$open_j4ip3x$.prototype.constructor = Coroutine$open_j4ip3x$;
  Coroutine$open_j4ip3x$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            tmp$ = this.$this.closure$files.get_11rb$(this.$this.closure$normalizeName(this.local$path));
            if (tmp$ == null) {
              throw new FileNotFoundException("Path: '" + this.local$path + "'");
            }

            this.local$entry = tmp$;
            if (this.local$entry.isDirectory)
              throw new IOException("Can't open a zip directory for " + this.local$mode);
            this.state_0 = 2;
            this.result_0 = slice_0(this.local$entry.headerEntry, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$base = this.result_0;
            this.local$closure$continuation = this;
            var block$result;
            var tmp$_0;
            this.state_0 = 3;
            this.result_0 = this.local$base.getAvailable(this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            if (this.local$closure$continuation.result_0.compareTo_11rb$(Kotlin.Long.fromInt(16)) < 0)
              throw new IllegalStateException('Chunk to small to be a ZIP chunk');
            this.state_0 = 4;
            this.result_0 = readS32_be_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            if (this.local$closure$continuation.result_0 !== 1347093252)
              throw new IllegalStateException('Not a zip file');
            this.state_0 = 5;
            this.result_0 = readU16_le_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 5:
            var version = this.local$closure$continuation.result_0;
            this.state_0 = 6;
            this.result_0 = readU16_le_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 6:
            var flags = this.local$closure$continuation.result_0;
            this.state_0 = 7;
            this.result_0 = readU16_le_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 7:
            var compressionType = this.local$closure$continuation.result_0;
            this.state_0 = 8;
            this.result_0 = readU16_le_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 8:
            var fileTime = this.local$closure$continuation.result_0;
            this.state_0 = 9;
            this.result_0 = readU16_le_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 9:
            var fileDate = this.local$closure$continuation.result_0;
            this.state_0 = 10;
            this.result_0 = readS32_le(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 10:
            var crc = this.local$closure$continuation.result_0;
            this.state_0 = 11;
            this.result_0 = readS32_le(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 11:
            var compressedSize = this.local$closure$continuation.result_0;
            this.state_0 = 12;
            this.result_0 = readS32_le(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 12:
            this.local$uncompressedSize = this.local$closure$continuation.result_0;
            this.state_0 = 13;
            this.result_0 = readU16_le_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 13:
            this.local$fileNameLength = this.local$closure$continuation.result_0;
            this.state_0 = 14;
            this.result_0 = readU16_le_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 14:
            this.local$extraLength = this.local$closure$continuation.result_0;
            this.state_0 = 15;
            this.result_0 = readString_0(this.local$base, this.local$fileNameLength, void 0, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 15:
            var name = this.local$closure$continuation.result_0;
            this.state_0 = 16;
            this.result_0 = readBytes_0(this.local$base, this.local$extraLength, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 16:
            var extra = this.local$closure$continuation.result_0;
            this.state_0 = 17;
            this.result_0 = readSlice_0(this.local$base, this.local$entry.compressedSize, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 17:
            var compressedData = this.local$closure$continuation.result_0;
            tmp$_0 = this.local$entry.compressionMethod;
            if (tmp$_0 === 0) {
              block$result = compressedData;
            }
             else if (tmp$_0 === 8) {
              block$result = toAsyncStream_0(new InflateAsyncStream(compressedData, new KorioNative$Inflater(true), Kotlin.Long.fromInt(this.local$uncompressedSize)));
            }
             else {
              throw new NotImplementedError_init('An operation is not implemented: ' + ('Not implemented zip method ' + this.local$entry.compressionMethod));
            }

            return block$result;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ZipVfs2$Impl.prototype.stat_61zpoe$ = function (path, continuation) {
    return this.closure$toStat(this.closure$files.get_11rb$(this.closure$normalizeName(path)), this.get_61zpoe$(path));
  };
  function ZipVfs2$Impl$list$lambda$lambda(closure$filesPerFolder_0, closure$path_0, closure$normalizeName_0, this$Impl_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$ZipVfs2$Impl$list$lambda$lambda(closure$filesPerFolder_0, closure$path_0, closure$normalizeName_0, this$Impl_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ZipVfs2$Impl$list$lambda$lambda(closure$filesPerFolder_0, closure$path_0, closure$normalizeName_0, this$Impl_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$filesPerFolder = closure$filesPerFolder_0;
    this.local$closure$path = closure$path_0;
    this.local$closure$normalizeName = closure$normalizeName_0;
    this.local$this$Impl = this$Impl_0;
    this.local$tmp$_0 = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ZipVfs2$Impl$list$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ZipVfs2$Impl$list$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ZipVfs2$Impl$list$lambda$lambda.prototype.constructor = Coroutine$ZipVfs2$Impl$list$lambda$lambda;
  Coroutine$ZipVfs2$Impl$list$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.local$tmp$_0 = ((tmp$ = this.local$closure$filesPerFolder.get_11rb$(this.local$closure$normalizeName(this.local$closure$path))) != null ? tmp$ : lmapOf([])).entries.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$tmp$_0.hasNext()) {
              this.state_0 = 4;
              continue;
            }

            var tmp$_0 = this.local$tmp$_0.next();
            var name = tmp$_0.key;
            var entry = tmp$_0.value;
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.yield_11rb$(this.local$this$Impl.vfs.get_61zpoe$(entry.path), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ZipVfs2$Impl$list$lambda(closure$filesPerFolder_0, closure$path_0, closure$normalizeName_0, this$Impl_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$ZipVfs2$Impl$list$lambda(closure$filesPerFolder_0, closure$path_0, closure$normalizeName_0, this$Impl_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ZipVfs2$Impl$list$lambda(closure$filesPerFolder_0, closure$path_0, closure$normalizeName_0, this$Impl_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$filesPerFolder = closure$filesPerFolder_0;
    this.local$closure$path = closure$path_0;
    this.local$closure$normalizeName = closure$normalizeName_0;
    this.local$this$Impl = this$Impl_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ZipVfs2$Impl$list$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ZipVfs2$Impl$list$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ZipVfs2$Impl$list$lambda.prototype.constructor = Coroutine$ZipVfs2$Impl$list$lambda;
  Coroutine$ZipVfs2$Impl$list$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return asyncGenerate(this.local$$receiver, ZipVfs2$Impl$list$lambda$lambda(this.local$closure$filesPerFolder, this.local$closure$path, this.local$closure$normalizeName, this.local$this$Impl));
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ZipVfs2$Impl.prototype.list_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$list_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$list_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$list_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$list_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$list_61zpoe$.prototype.constructor = Coroutine$list_61zpoe$;
  Coroutine$list_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = withCoroutineContext(ZipVfs2$Impl$list$lambda(this.$this.closure$filesPerFolder, this.local$path, this.$this.closure$normalizeName, this.$this), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ZipVfs2$Impl.prototype.toString = function () {
    return 'ZipVfs(' + toString(this.closure$zipFile) + ')';
  };
  ZipVfs2$Impl.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Impl',
    interfaces: [Vfs]
  };
  function ZipVfs2(s_0, zipFile_0, continuation_0, suspended) {
    var instance = new Coroutine$ZipVfs2(s_0, zipFile_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$ZipVfs2(s_0, zipFile_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$tmp$_0 = void 0;
    this.local$endBytes = void 0;
    this.local$PK_END = void 0;
    this.local$pk_endIndex = void 0;
    this.local$chunkSize = void 0;
    this.local$normalizeName = void 0;
    this.local$toStat = void 0;
    this.local$files = void 0;
    this.local$filesPerFolder = void 0;
    this.local$closure$continuation = void 0;
    this.local$entriesInDirectory = void 0;
    this.local$ds = void 0;
    this.local$tmp$_1 = void 0;
    this.local$tmp$_2 = void 0;
    this.local$n = void 0;
    this.local$compressionMethod = void 0;
    this.local$compressedSize = void 0;
    this.local$uncompressedSize = void 0;
    this.local$headerOffset = void 0;
    this.local$name = void 0;
    this.local$isDirectory = void 0;
    this.local$normalizedName = void 0;
    this.local$baseName = void 0;
    this.local$folder = void 0;
    this.local$s = s_0;
    this.local$zipFile = zipFile_0;
  }
  Coroutine$ZipVfs2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ZipVfs2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ZipVfs2.prototype.constructor = Coroutine$ZipVfs2;
  Coroutine$ZipVfs2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$zipFile === void 0)
              this.local$zipFile = null;
            this.local$endBytes = stream.EMPTY_BYTE_ARRAY;
            this.local$PK_END = new Int8Array([80, 75, 5, 6]);
            this.local$pk_endIndex = -1;
            this.local$tmp$ = listOf([22, 256, 4096, 65536]).iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 8;
              continue;
            }

            this.local$chunkSize = this.local$tmp$.next();
            this.local$tmp$_0 = Kotlin.Long.ZERO;
            this.state_0 = 3;
            this.result_0 = this.local$s.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.local$s.setPosition_s8cxhz$(max_0(Math_0, this.local$tmp$_0, this.result_0.subtract(Kotlin.Long.fromInt(this.local$chunkSize))), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$s.getAvailable(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 5:
            var b = toIntClamp(this.result_0);
            this.state_0 = 6;
            this.result_0 = readBytesExact(this.local$s, Math_0.max(this.local$chunkSize, b), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 6:
            this.local$endBytes = this.result_0;
            this.local$pk_endIndex = indexOf(this.local$endBytes, this.local$PK_END);
            if (this.local$pk_endIndex >= 0) {
              this.state_0 = 8;
              continue;
            }
             else {
              this.state_0 = 7;
              continue;
            }

          case 7:
            this.state_0 = 2;
            continue;
          case 8:
            if (this.local$pk_endIndex < 0)
              throw new IllegalArgumentException('Not a zip file');
            var $receiver = this.local$endBytes;
            var fromIndex = this.local$pk_endIndex;
            var toIndex = this.local$endBytes.length;
            var data = openSync($receiver.slice(fromIndex, toIndex));
            this.local$normalizeName = ZipVfs2$normalizeName;
            this.local$toStat = ZipVfs2$toStat;
            this.local$files = lmapOf([]);
            this.local$filesPerFolder = lmapOf([]);
            this.local$closure$continuation = this;
            if (readS32_be(data) !== 1347093766)
              throw new IllegalStateException('Not a zip file');
            var diskNumber = readU16_le(data);
            var startDiskNumber = readU16_le(data);
            var entriesOnDisk = readU16_le(data);
            this.local$entriesInDirectory = readU16_le(data);
            var directorySize = readS32_le_0(data);
            var directoryOffset = readS32_le_0(data);
            var commentLength = readU16_le(data);
            this.state_0 = 9;
            this.result_0 = sliceWithSize_1(this.local$s, Kotlin.Long.fromInt(directoryOffset), Kotlin.Long.fromInt(directorySize), this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 9:
            this.state_0 = 10;
            this.result_0 = readAvailable(this.local$closure$continuation.result_0, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 10:
            this.local$ds = openSync(this.local$closure$continuation.result_0);
            var tmp$;
            this.local$n = 0;
            this.state_0 = 11;
            continue;
          case 11:
            if (this.local$n >= this.local$entriesInDirectory) {
              this.state_0 = 14;
              continue;
            }

            if (readS32_be(this.local$ds) !== 1347092738)
              throw new IllegalStateException('Not a zip file record');
            var versionMade = readU16_le(this.local$ds);
            var versionExtract = readU16_le(this.local$ds);
            var flags = readU16_le(this.local$ds);
            this.local$compressionMethod = readU16_le(this.local$ds);
            var fileTime = readU16_le(this.local$ds);
            var fileDate = readU16_le(this.local$ds);
            var crc = readS32_le_0(this.local$ds);
            this.local$compressedSize = readS32_le_0(this.local$ds);
            this.local$uncompressedSize = readS32_le_0(this.local$ds);
            var fileNameLength = readU16_le(this.local$ds);
            var extraLength = readU16_le(this.local$ds);
            var fileCommentLength = readU16_le(this.local$ds);
            var diskNumberStart = readU16_le(this.local$ds);
            var internalAttributes = readU16_le(this.local$ds);
            var externalAttributes = readS32_le_0(this.local$ds);
            this.local$headerOffset = readS32_le_0(this.local$ds);
            this.local$name = readString(this.local$ds, fileNameLength);
            var extra = readBytes(this.local$ds, extraLength);
            this.local$isDirectory = endsWith(this.local$name, '/');
            this.local$normalizedName = this.local$normalizeName(this.local$name);
            var baseFolder = substringBeforeLast(this.local$normalizedName, 47, '');
            this.local$baseName = substringAfterLast(this.local$normalizedName, 47);
            var tmp$_0;
            var value = this.local$filesPerFolder.get_11rb$(baseFolder);
            if (value == null) {
              var answer = lmapOf([]);
              this.local$filesPerFolder.put_xwzc9p$(baseFolder, answer);
              tmp$_0 = answer;
            }
             else {
              tmp$_0 = value;
            }

            this.local$folder = tmp$_0;
            this.local$tmp$_1 = new DosFileDateTime(fileTime, fileDate);
            this.local$tmp$_2 = Kotlin.Long.fromInt(this.local$n);
            this.state_0 = 12;
            this.result_0 = sliceWithStart_0(this.local$s, toUInt(this.local$headerOffset), this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 12:
            var entry = new ZipVfs2$ZipEntry(this.local$name, this.local$compressionMethod, this.local$isDirectory, this.local$tmp$_1, this.local$headerOffset, this.local$tmp$_2, this.local$closure$continuation.result_0, toUInt(this.local$compressedSize), toUInt(this.local$uncompressedSize));
            var components = plus(listOf_0(''), (new PathInfo(this.local$normalizedName)).getFullComponents());
            tmp$ = components.size;
            for (var m = 1; m < tmp$; m++) {
              var f = components.get_za3lpa$(m - 1 | 0);
              var c = components.get_za3lpa$(m);
              var tmp$_1;
              if (!(Kotlin.isType(tmp$_1 = this.local$files, Map) ? tmp$_1 : throwCCE()).containsKey_11rb$(c)) {
                var tmp$_2;
                var value_0 = this.local$filesPerFolder.get_11rb$(f);
                if (value_0 == null) {
                  var answer_0 = lmapOf([]);
                  this.local$filesPerFolder.put_xwzc9p$(f, answer_0);
                  tmp$_2 = answer_0;
                }
                 else {
                  tmp$_2 = value_0;
                }
                var folder2 = tmp$_2;
                var entry2 = new ZipVfs2$ZipEntry(c, 0, true, new DosFileDateTime(0, 0), 0, Kotlin.Long.ZERO, openAsync(new Int8Array([])), Kotlin.Long.ZERO, Kotlin.Long.ZERO);
                var key = (new PathInfo(c)).basename;
                folder2.put_xwzc9p$(key, entry2);
                this.local$files.put_xwzc9p$(c, entry2);
              }
            }

            this.local$folder.put_xwzc9p$(this.local$baseName, entry);
            var key_0 = this.local$normalizeName(this.local$normalizedName);
            this.local$files.put_xwzc9p$(key_0, entry);
            this.state_0 = 13;
            continue;
          case 13:
            this.local$n++;
            this.state_0 = 11;
            continue;
          case 14:
            var value_1 = new ZipVfs2$ZipEntry('', 0, true, new DosFileDateTime(0, 0), 0, Kotlin.Long.ZERO, openAsync(new Int8Array([])), Kotlin.Long.ZERO, Kotlin.Long.ZERO);
            this.local$files.put_xwzc9p$('', value_1);
            return (new ZipVfs2$Impl(this.local$files, this.local$normalizeName, this.local$toStat, this.local$filesPerFolder, this.local$zipFile)).root;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DosFileDateTime(dosTime, dosDate) {
    this.dosTime = dosTime;
    this.dosDate = dosDate;
    this.date_ui42e0$_0 = lazy(DosFileDateTime$date$lambda(this));
    this.utcTimestamp_ff6w1o$_0 = lazy(DosFileDateTime$utcTimestamp$lambda(this));
  }
  Object.defineProperty(DosFileDateTime.prototype, 'seconds', {
    get: function () {
      return 2 * getBits(this.dosTime, 0, 5) | 0;
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'minutes', {
    get: function () {
      return getBits(this.dosTime, 5, 6);
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'hours', {
    get: function () {
      return getBits(this.dosTime, 11, 5);
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'day', {
    get: function () {
      return getBits(this.dosDate, 0, 5);
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'month1', {
    get: function () {
      return getBits(this.dosDate, 5, 4);
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'fullYear', {
    get: function () {
      return 1980 + getBits(this.dosDate, 9, 7) | 0;
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'date', {
    get: function () {
      var $receiver = this.date_ui42e0$_0;
      new PropertyMetadata('date');
      return $receiver.value;
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'utcTimestamp', {
    get: function () {
      var $receiver = this.utcTimestamp_ff6w1o$_0;
      new PropertyMetadata('utcTimestamp');
      return $receiver.value;
    }
  });
  function DosFileDateTime$date$lambda(this$DosFileDateTime) {
    return function () {
      return DateTime.Companion.createAdjusted_ui44o2$(this$DosFileDateTime.fullYear, this$DosFileDateTime.month1, this$DosFileDateTime.day, this$DosFileDateTime.hours, this$DosFileDateTime.minutes, this$DosFileDateTime.seconds);
    };
  }
  function DosFileDateTime$utcTimestamp$lambda(this$DosFileDateTime) {
    return function () {
      return this$DosFileDateTime.date.unix;
    };
  }
  DosFileDateTime.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DosFileDateTime',
    interfaces: []
  };
  function KPspEmuNative() {
    KPspEmuNative_instance = this;
  }
  KPspEmuNative.prototype.getCurrentDirectory = function () {
    return '.';
  };
  KPspEmuNative.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'KPspEmuNative',
    interfaces: []
  };
  var KPspEmuNative_instance = null;
  function KPspEmuNative_getInstance() {
    if (KPspEmuNative_instance === null) {
      new KPspEmuNative();
    }
    return KPspEmuNative_instance;
  }
  Object.defineProperty(AGRenderer, 'Companion', {
    get: AGRenderer$Companion_getInstance
  });
  AGRenderer.Stats = AGRenderer$Stats;
  $$importsForInline$$['korag-js'] = $module$korag_js;
  $$importsForInline$$.kpspemu = _;
  AGRenderer.ProgramLayout = AGRenderer$ProgramLayout;
  var package$com = _.com || (_.com = {});
  var package$soywiz = package$com.soywiz || (package$com.soywiz = {});
  var package$kpspemu = package$soywiz.kpspemu || (package$soywiz.kpspemu = {});
  package$kpspemu.AGRenderer = AGRenderer;
  package$kpspemu.Emulator = Emulator;
  package$kpspemu.WithEmulator = WithEmulator;
  package$kpspemu.get_mem_gja2zf$ = get_mem;
  package$kpspemu.get_ge_gja2zf$ = get_ge;
  package$kpspemu.get_gpu_gja2zf$ = get_gpu;
  package$kpspemu.get_controller_gja2zf$ = get_controller;
  package$kpspemu.get_coroutineContext_gja2zf$ = get_coroutineContext;
  package$kpspemu.get_display_gja2zf$ = get_display;
  package$kpspemu.get_deviceManager_gja2zf$ = get_deviceManager;
  package$kpspemu.get_memoryManager_gja2zf$ = get_memoryManager;
  package$kpspemu.get_timeManager_gja2zf$ = get_timeManager;
  package$kpspemu.get_fileManager_gja2zf$ = get_fileManager;
  package$kpspemu.get_rtc_gja2zf$ = get_rtc;
  package$kpspemu.get_threadManager_gja2zf$ = get_threadManager;
  package$kpspemu.get_callbackManager_gja2zf$ = get_callbackManager;
  Object.defineProperty(package$kpspemu, 'Kpspemu', {
    get: Kpspemu_getInstance
  });
  Object.defineProperty(package$kpspemu, 'KPSPEMU_VERSION', {
    get: function () {
      return KPSPEMU_VERSION;
    }
  });
  package$kpspemu.main_kand9s$ = main;
  Object.defineProperty(package$kpspemu, 'Main', {
    get: Main_getInstance
  });
  Object.defineProperty(package$kpspemu, 'KpspemuModule', {
    get: KpspemuModule_getInstance
  });
  $$importsForInline$$['korge-js'] = $module$korge_js;
  $$importsForInline$$['korma-js'] = $module$korma_js;
  package$kpspemu.KpspemuMainScene = KpspemuMainScene;
  package$kpspemu.loadExecutableAndStart_9ayj51$ = loadExecutableAndStart;
  package$kpspemu.simpleButton_p55u7q$ = simpleButton;
  Object.defineProperty(CpuBreakException, 'Companion', {
    get: CpuBreakException$Companion_getInstance
  });
  var package$cpu = package$kpspemu.cpu || (package$kpspemu.cpu = {});
  package$cpu.CpuBreakException = CpuBreakException;
  package$cpu.get_K0_he8x89$ = get_K0;
  package$cpu.set_K0_shbxjr$ = set_K0;
  package$cpu.get_K1_he8x89$ = get_K1;
  package$cpu.set_K1_shbxjr$ = set_K1;
  package$cpu.get_GP_he8x89$ = get_GP;
  package$cpu.set_GP_shbxjr$ = set_GP;
  package$cpu.get_SP_he8x89$ = get_SP;
  package$cpu.set_SP_shbxjr$ = set_SP;
  package$cpu.get_FP_he8x89$ = get_FP;
  package$cpu.set_FP_shbxjr$ = set_FP;
  package$cpu.get_RA_he8x89$ = get_RA;
  package$cpu.set_RA_shbxjr$ = set_RA;
  CpuState.Gpr = CpuState$Gpr;
  CpuState.FprI = CpuState$FprI;
  package$cpu.CpuState = CpuState;
  $$importsForInline$$['korio-js'] = $module$korio_js;
  package$cpu.InstructionDecoder = InstructionDecoder;
  package$cpu.InstructionDispatcher = InstructionDispatcher;
  package$cpu.dispatch_jlbamt$ = dispatch;
  package$cpu.InstructionEvaluator = InstructionEvaluator;
  Object.defineProperty(package$cpu, 'InstructionOpcodeDecoder', {
    get: InstructionOpcodeDecoder_getInstance
  });
  Object.defineProperty(package$cpu, 'Instructions', {
    get: Instructions_getInstance
  });
  Object.defineProperty(package$cpu, 'ADDR_TYPE_NONE', {
    get: function () {
      return ADDR_TYPE_NONE;
    }
  });
  Object.defineProperty(package$cpu, 'ADDR_TYPE_REG', {
    get: function () {
      return ADDR_TYPE_REG;
    }
  });
  Object.defineProperty(package$cpu, 'ADDR_TYPE_16', {
    get: function () {
      return ADDR_TYPE_16;
    }
  });
  Object.defineProperty(package$cpu, 'ADDR_TYPE_26', {
    get: function () {
      return ADDR_TYPE_26;
    }
  });
  Object.defineProperty(package$cpu, 'INSTR_TYPE_PSP', {
    get: function () {
      return INSTR_TYPE_PSP;
    }
  });
  Object.defineProperty(package$cpu, 'INSTR_TYPE_SYSCALL', {
    get: function () {
      return INSTR_TYPE_SYSCALL;
    }
  });
  Object.defineProperty(package$cpu, 'INSTR_TYPE_B', {
    get: function () {
      return INSTR_TYPE_B;
    }
  });
  Object.defineProperty(package$cpu, 'INSTR_TYPE_LIKELY', {
    get: function () {
      return INSTR_TYPE_LIKELY;
    }
  });
  Object.defineProperty(package$cpu, 'INSTR_TYPE_JAL', {
    get: function () {
      return INSTR_TYPE_JAL;
    }
  });
  Object.defineProperty(package$cpu, 'INSTR_TYPE_JUMP', {
    get: function () {
      return INSTR_TYPE_JUMP;
    }
  });
  Object.defineProperty(package$cpu, 'INSTR_TYPE_BREAK', {
    get: function () {
      return INSTR_TYPE_BREAK;
    }
  });
  package$cpu.ValueMask = ValueMask;
  package$cpu.InstructionType = InstructionType;
  package$cpu.kescape_pdl1vz$ = kescape;
  package$cpu.Syscalls = Syscalls;
  package$cpu.TraceSyscallHandler = TraceSyscallHandler;
  var package$dis = package$cpu.dis || (package$cpu.dis = {});
  Object.defineProperty(package$dis, 'Disassembler', {
    get: Disassembler_getInstance
  });
  package$dis.disasm_w2yn32$ = disasm;
  package$dis.disasmMacro_w2yn32$ = disasmMacro;
  package$dis.getPrintInstructionAt_w2yn32$ = getPrintInstructionAt;
  package$dis.printInstructionAt_w2yn32$ = printInstructionAt;
  var package$interpreter = package$cpu.interpreter || (package$cpu.interpreter = {});
  package$interpreter.CpuInterpreter = CpuInterpreter;
  Object.defineProperty(InstructionInterpreter.prototype, 'VectorSize', {
    get: InstructionInterpreter$VectorSize_getInstance
  });
  Object.defineProperty(InstructionInterpreter.prototype, 'MatrixSize', {
    get: InstructionInterpreter$MatrixSize_getInstance
  });
  Object.defineProperty(package$interpreter, 'InstructionInterpreter', {
    get: InstructionInterpreter_getInstance
  });
  var package$ctrl = package$kpspemu.ctrl || (package$kpspemu.ctrl = {});
  package$ctrl.PspController = PspController;
  Object.defineProperty(PspCtrlButtons, 'none', {
    get: PspCtrlButtons$none_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'select', {
    get: PspCtrlButtons$select_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'start', {
    get: PspCtrlButtons$start_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'up', {
    get: PspCtrlButtons$up_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'right', {
    get: PspCtrlButtons$right_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'down', {
    get: PspCtrlButtons$down_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'left', {
    get: PspCtrlButtons$left_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'leftTrigger', {
    get: PspCtrlButtons$leftTrigger_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'rightTrigger', {
    get: PspCtrlButtons$rightTrigger_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'triangle', {
    get: PspCtrlButtons$triangle_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'circle', {
    get: PspCtrlButtons$circle_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'cross', {
    get: PspCtrlButtons$cross_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'square', {
    get: PspCtrlButtons$square_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'home', {
    get: PspCtrlButtons$home_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'hold', {
    get: PspCtrlButtons$hold_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'wirelessLanUp', {
    get: PspCtrlButtons$wirelessLanUp_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'remote', {
    get: PspCtrlButtons$remote_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'volumeUp', {
    get: PspCtrlButtons$volumeUp_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'volumeDown', {
    get: PspCtrlButtons$volumeDown_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'screen', {
    get: PspCtrlButtons$screen_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'note', {
    get: PspCtrlButtons$note_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'discPresent', {
    get: PspCtrlButtons$discPresent_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'memoryStickPresent', {
    get: PspCtrlButtons$memoryStickPresent_getInstance
  });
  package$ctrl.PspCtrlButtons = PspCtrlButtons;
  var package$display = package$kpspemu.display || (package$kpspemu.display = {});
  package$display.PspDisplay = PspDisplay;
  var package$format = package$kpspemu.format || (package$kpspemu.format = {});
  package$format.Cso = Cso;
  Object.defineProperty(Pbp, 'Companion', {
    get: Pbp$Companion_getInstance
  });
  package$format.Pbp = Pbp;
  Object.defineProperty(Psf$DataType, 'Companion', {
    get: Psf$DataType$Companion_getInstance
  });
  Psf.DataType = Psf$DataType;
  Object.defineProperty(Psf$HeaderStruct, 'Companion', {
    get: Psf$HeaderStruct$Companion_getInstance
  });
  Psf.HeaderStruct = Psf$HeaderStruct;
  Psf.IEntryStruct = Psf$IEntryStruct;
  Object.defineProperty(Psf$EntryStruct, 'Companion', {
    get: Psf$EntryStruct$Companion_getInstance
  });
  Psf.EntryStruct = Psf$EntryStruct;
  Object.defineProperty(Psf, 'Companion', {
    get: Psf$Companion_getInstance
  });
  package$format.Psf = Psf;
  Object.defineProperty(Elf, 'Companion', {
    get: Elf$Companion_getInstance
  });
  Object.defineProperty(Elf$Header, 'Companion', {
    get: Elf$Header$Companion_getInstance
  });
  Elf.Header = Elf$Header;
  var package$elf = package$format.elf || (package$format.elf = {});
  package$elf.Elf = Elf;
  Object.defineProperty(ElfProgramHeaderType, 'Companion', {
    get: ElfProgramHeaderType$Companion_getInstance
  });
  package$elf.ElfProgramHeaderType = ElfProgramHeaderType;
  Object.defineProperty(ElfSectionHeaderType, 'Companion', {
    get: ElfSectionHeaderType$Companion_getInstance
  });
  package$elf.ElfSectionHeaderType = ElfSectionHeaderType;
  Object.defineProperty(ElfSectionHeaderFlags, 'Companion', {
    get: ElfSectionHeaderFlags$Companion_getInstance
  });
  package$elf.ElfSectionHeaderFlags = ElfSectionHeaderFlags;
  Object.defineProperty(ElfProgramHeaderFlags, 'Companion', {
    get: ElfProgramHeaderFlags$Companion_getInstance
  });
  package$elf.ElfProgramHeaderFlags = ElfProgramHeaderFlags;
  Object.defineProperty(ElfType, 'Executable', {
    get: ElfType$Executable_getInstance
  });
  Object.defineProperty(ElfType, 'Prx', {
    get: ElfType$Prx_getInstance
  });
  Object.defineProperty(ElfType, 'Companion', {
    get: ElfType$Companion_getInstance
  });
  package$elf.ElfType = ElfType;
  Object.defineProperty(ElfMachine, 'ALLEGREX', {
    get: ElfMachine$ALLEGREX_getInstance
  });
  Object.defineProperty(ElfMachine, 'Companion', {
    get: ElfMachine$Companion_getInstance
  });
  package$elf.ElfMachine = ElfMachine;
  Object.defineProperty(ElfPspModuleFlags, 'User', {
    get: ElfPspModuleFlags$User_getInstance
  });
  Object.defineProperty(ElfPspModuleFlags, 'Kernel', {
    get: ElfPspModuleFlags$Kernel_getInstance
  });
  Object.defineProperty(ElfPspModuleFlags, 'Companion', {
    get: ElfPspModuleFlags$Companion_getInstance
  });
  package$elf.ElfPspModuleFlags = ElfPspModuleFlags;
  Object.defineProperty(ElfPspLibFlags, 'DirectJump', {
    get: ElfPspLibFlags$DirectJump_getInstance
  });
  Object.defineProperty(ElfPspLibFlags, 'Syscall', {
    get: ElfPspLibFlags$Syscall_getInstance
  });
  Object.defineProperty(ElfPspLibFlags, 'SysLib', {
    get: ElfPspLibFlags$SysLib_getInstance
  });
  Object.defineProperty(ElfPspLibFlags, 'Companion', {
    get: ElfPspLibFlags$Companion_getInstance
  });
  package$elf.ElfPspLibFlags = ElfPspLibFlags;
  Object.defineProperty(ElfPspModuleNids, 'MODULE_INFO', {
    get: ElfPspModuleNids$MODULE_INFO_getInstance
  });
  Object.defineProperty(ElfPspModuleNids, 'MODULE_BOOTSTART', {
    get: ElfPspModuleNids$MODULE_BOOTSTART_getInstance
  });
  Object.defineProperty(ElfPspModuleNids, 'MODULE_REBOOT_BEFORE', {
    get: ElfPspModuleNids$MODULE_REBOOT_BEFORE_getInstance
  });
  Object.defineProperty(ElfPspModuleNids, 'MODULE_START', {
    get: ElfPspModuleNids$MODULE_START_getInstance
  });
  Object.defineProperty(ElfPspModuleNids, 'MODULE_START_THREAD_PARAMETER', {
    get: ElfPspModuleNids$MODULE_START_THREAD_PARAMETER_getInstance
  });
  Object.defineProperty(ElfPspModuleNids, 'MODULE_STOP', {
    get: ElfPspModuleNids$MODULE_STOP_getInstance
  });
  Object.defineProperty(ElfPspModuleNids, 'MODULE_STOP_THREAD_PARAMETER', {
    get: ElfPspModuleNids$MODULE_STOP_THREAD_PARAMETER_getInstance
  });
  Object.defineProperty(ElfPspModuleNids, 'Companion', {
    get: ElfPspModuleNids$Companion_getInstance
  });
  package$elf.ElfPspModuleNids = ElfPspModuleNids;
  Object.defineProperty(ElfRelocType, 'None', {
    get: ElfRelocType$None_getInstance
  });
  Object.defineProperty(ElfRelocType, 'Mips16', {
    get: ElfRelocType$Mips16_getInstance
  });
  Object.defineProperty(ElfRelocType, 'Mips32', {
    get: ElfRelocType$Mips32_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsRel32', {
    get: ElfRelocType$MipsRel32_getInstance
  });
  Object.defineProperty(ElfRelocType, 'Mips26', {
    get: ElfRelocType$Mips26_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsHi16', {
    get: ElfRelocType$MipsHi16_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsLo16', {
    get: ElfRelocType$MipsLo16_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsGpRel16', {
    get: ElfRelocType$MipsGpRel16_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsLiteral', {
    get: ElfRelocType$MipsLiteral_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsGot16', {
    get: ElfRelocType$MipsGot16_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsPc16', {
    get: ElfRelocType$MipsPc16_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsCall16', {
    get: ElfRelocType$MipsCall16_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsGpRel32', {
    get: ElfRelocType$MipsGpRel32_getInstance
  });
  Object.defineProperty(ElfRelocType, 'StopRelocation', {
    get: ElfRelocType$StopRelocation_getInstance
  });
  Object.defineProperty(ElfRelocType, 'Companion', {
    get: ElfRelocType$Companion_getInstance
  });
  package$elf.ElfRelocType = ElfRelocType;
  Object.defineProperty(ElfReloc, 'Companion', {
    get: ElfReloc$Companion_getInstance
  });
  package$elf.ElfReloc = ElfReloc;
  Object.defineProperty(ElfProgramHeader, 'Companion', {
    get: ElfProgramHeader$Companion_getInstance
  });
  package$elf.ElfProgramHeader = ElfProgramHeader;
  Object.defineProperty(ElfSectionHeader, 'Companion', {
    get: ElfSectionHeader$Companion_getInstance
  });
  package$elf.ElfSectionHeader = ElfSectionHeader;
  package$elf.ElfDwarf = ElfDwarf;
  Object.defineProperty(ElfPspModuleInfo, 'Companion', {
    get: ElfPspModuleInfo$Companion_getInstance
  });
  package$elf.ElfPspModuleInfo = ElfPspModuleInfo;
  Object.defineProperty(ElfPspModuleImport, 'Companion', {
    get: ElfPspModuleImport$Companion_getInstance
  });
  package$elf.ElfPspModuleImport = ElfPspModuleImport;
  Object.defineProperty(ElfPspModuleExport, 'Companion', {
    get: ElfPspModuleExport$Companion_getInstance
  });
  package$elf.ElfPspModuleExport = ElfPspModuleExport;
  Object.defineProperty(ElfPspModuleInfoAtributesEnum, 'Companion', {
    get: ElfPspModuleInfoAtributesEnum$Companion_getInstance
  });
  package$elf.ElfPspModuleInfoAtributesEnum = ElfPspModuleInfoAtributesEnum;
  package$elf.InstructionReader = InstructionReader;
  package$elf.loadElf_9qh7za$ = loadElf;
  package$elf.loadElfAndSetRegisters_o7dcdo$ = loadElfAndSetRegisters;
  Object.defineProperty(PspElf, 'Companion', {
    get: PspElf$Companion_getInstance
  });
  PspElf.Res1 = PspElf$Res1;
  package$elf.PspElf = PspElf;
  package$elf.Bits = Bits;
  package$elf.Instruction = Instruction;
  var package$ge = package$kpspemu.ge || (package$kpspemu.ge = {});
  package$ge.Ge = Ge;
  package$ge.GeCallback = GeCallback;
  Object.defineProperty(PrimAction, 'NOTHING', {
    get: PrimAction$NOTHING_getInstance
  });
  Object.defineProperty(PrimAction, 'FLUSH_PRIM', {
    get: PrimAction$FLUSH_PRIM_getInstance
  });
  package$ge.PrimAction = PrimAction;
  Object.defineProperty(ListSyncKind, 'DONE', {
    get: ListSyncKind$DONE_getInstance
  });
  Object.defineProperty(ListSyncKind, 'QUEUED', {
    get: ListSyncKind$QUEUED_getInstance
  });
  Object.defineProperty(ListSyncKind, 'DRAWING_DONE', {
    get: ListSyncKind$DRAWING_DONE_getInstance
  });
  Object.defineProperty(ListSyncKind, 'STALL_REACHED', {
    get: ListSyncKind$STALL_REACHED_getInstance
  });
  Object.defineProperty(ListSyncKind, 'CANCEL_DONE', {
    get: ListSyncKind$CANCEL_DONE_getInstance
  });
  package$ge.ListSyncKind = ListSyncKind;
  package$ge.GeBatch = GeBatch;
  package$ge.GeBatchBuilder = GeBatchBuilder;
  Object.defineProperty(CullingDirection, 'COUNTER_CLOCK_WISE', {
    get: CullingDirection$COUNTER_CLOCK_WISE_getInstance
  });
  Object.defineProperty(CullingDirection, 'CLOCK_WISE', {
    get: CullingDirection$CLOCK_WISE_getInstance
  });
  Object.defineProperty(CullingDirection, 'Companion', {
    get: CullingDirection$Companion_getInstance
  });
  package$ge.CullingDirection = CullingDirection;
  Object.defineProperty(SyncType, 'WAIT_FOR_COMPLETION', {
    get: SyncType$WAIT_FOR_COMPLETION_getInstance
  });
  Object.defineProperty(SyncType, 'PEEK', {
    get: SyncType$PEEK_getInstance
  });
  Object.defineProperty(SyncType, 'Companion', {
    get: SyncType$Companion_getInstance
  });
  package$ge.SyncType = SyncType;
  Object.defineProperty(DisplayListStatus, 'COMPLETED', {
    get: DisplayListStatus$COMPLETED_getInstance
  });
  Object.defineProperty(DisplayListStatus, 'QUEUED', {
    get: DisplayListStatus$QUEUED_getInstance
  });
  Object.defineProperty(DisplayListStatus, 'DRAWING', {
    get: DisplayListStatus$DRAWING_getInstance
  });
  Object.defineProperty(DisplayListStatus, 'STALLING', {
    get: DisplayListStatus$STALLING_getInstance
  });
  Object.defineProperty(DisplayListStatus, 'PAUSED', {
    get: DisplayListStatus$PAUSED_getInstance
  });
  Object.defineProperty(DisplayListStatus, 'Companion', {
    get: DisplayListStatus$Companion_getInstance
  });
  package$ge.DisplayListStatus = DisplayListStatus;
  Object.defineProperty(IndexEnum, 'VOID', {
    get: IndexEnum$VOID_getInstance
  });
  Object.defineProperty(IndexEnum, 'BYTE', {
    get: IndexEnum$BYTE_getInstance
  });
  Object.defineProperty(IndexEnum, 'SHORT', {
    get: IndexEnum$SHORT_getInstance
  });
  Object.defineProperty(IndexEnum, 'Companion', {
    get: IndexEnum$Companion_getInstance
  });
  package$ge.IndexEnum = IndexEnum;
  Object.defineProperty(NumericEnum, 'VOID', {
    get: NumericEnum$VOID_getInstance
  });
  Object.defineProperty(NumericEnum, 'BYTE', {
    get: NumericEnum$BYTE_getInstance
  });
  Object.defineProperty(NumericEnum, 'SHORT', {
    get: NumericEnum$SHORT_getInstance
  });
  Object.defineProperty(NumericEnum, 'FLOAT', {
    get: NumericEnum$FLOAT_getInstance
  });
  Object.defineProperty(NumericEnum, 'Companion', {
    get: NumericEnum$Companion_getInstance
  });
  package$ge.NumericEnum = NumericEnum;
  Object.defineProperty(ColorEnum, 'VOID', {
    get: ColorEnum$VOID_getInstance
  });
  Object.defineProperty(ColorEnum, 'INVALID1', {
    get: ColorEnum$INVALID1_getInstance
  });
  Object.defineProperty(ColorEnum, 'INVALID2', {
    get: ColorEnum$INVALID2_getInstance
  });
  Object.defineProperty(ColorEnum, 'INVALID3', {
    get: ColorEnum$INVALID3_getInstance
  });
  Object.defineProperty(ColorEnum, 'COLOR5650', {
    get: ColorEnum$COLOR5650_getInstance
  });
  Object.defineProperty(ColorEnum, 'COLOR5551', {
    get: ColorEnum$COLOR5551_getInstance
  });
  Object.defineProperty(ColorEnum, 'COLOR4444', {
    get: ColorEnum$COLOR4444_getInstance
  });
  Object.defineProperty(ColorEnum, 'COLOR8888', {
    get: ColorEnum$COLOR8888_getInstance
  });
  Object.defineProperty(ColorEnum, 'Companion', {
    get: ColorEnum$Companion_getInstance
  });
  package$ge.ColorEnum = ColorEnum;
  Object.defineProperty(LightTypeEnum, 'DIRECTIONAL', {
    get: LightTypeEnum$DIRECTIONAL_getInstance
  });
  Object.defineProperty(LightTypeEnum, 'POINT_LIGHT', {
    get: LightTypeEnum$POINT_LIGHT_getInstance
  });
  Object.defineProperty(LightTypeEnum, 'SPOT_LIGHT', {
    get: LightTypeEnum$SPOT_LIGHT_getInstance
  });
  Object.defineProperty(LightTypeEnum, 'Companion', {
    get: LightTypeEnum$Companion_getInstance
  });
  package$ge.LightTypeEnum = LightTypeEnum;
  Object.defineProperty(LightModelEnum, 'SINGLE_COLOR', {
    get: LightModelEnum$SINGLE_COLOR_getInstance
  });
  Object.defineProperty(LightModelEnum, 'SEPARATE_SPECULAR_COLOR', {
    get: LightModelEnum$SEPARATE_SPECULAR_COLOR_getInstance
  });
  Object.defineProperty(LightModelEnum, 'Companion', {
    get: LightModelEnum$Companion_getInstance
  });
  package$ge.LightModelEnum = LightModelEnum;
  Object.defineProperty(TextureProjectionMapMode, 'GU_POSITION', {
    get: TextureProjectionMapMode$GU_POSITION_getInstance
  });
  Object.defineProperty(TextureProjectionMapMode, 'GU_UV', {
    get: TextureProjectionMapMode$GU_UV_getInstance
  });
  Object.defineProperty(TextureProjectionMapMode, 'GU_NORMALIZED_NORMAL', {
    get: TextureProjectionMapMode$GU_NORMALIZED_NORMAL_getInstance
  });
  Object.defineProperty(TextureProjectionMapMode, 'GU_NORMAL', {
    get: TextureProjectionMapMode$GU_NORMAL_getInstance
  });
  Object.defineProperty(TextureProjectionMapMode, 'Companion', {
    get: TextureProjectionMapMode$Companion_getInstance
  });
  package$ge.TextureProjectionMapMode = TextureProjectionMapMode;
  Object.defineProperty(TextureMapMode, 'GU_TEXTURE_COORDS', {
    get: TextureMapMode$GU_TEXTURE_COORDS_getInstance
  });
  Object.defineProperty(TextureMapMode, 'GU_TEXTURE_MATRIX', {
    get: TextureMapMode$GU_TEXTURE_MATRIX_getInstance
  });
  Object.defineProperty(TextureMapMode, 'GU_ENVIRONMENT_MAP', {
    get: TextureMapMode$GU_ENVIRONMENT_MAP_getInstance
  });
  Object.defineProperty(TextureMapMode, 'Companion', {
    get: TextureMapMode$Companion_getInstance
  });
  package$ge.TextureMapMode = TextureMapMode;
  Object.defineProperty(TextureLevelMode, 'AUTO', {
    get: TextureLevelMode$AUTO_getInstance
  });
  Object.defineProperty(TextureLevelMode, 'CONST', {
    get: TextureLevelMode$CONST_getInstance
  });
  Object.defineProperty(TextureLevelMode, 'SLOPE', {
    get: TextureLevelMode$SLOPE_getInstance
  });
  Object.defineProperty(TextureLevelMode, 'Companion', {
    get: TextureLevelMode$Companion_getInstance
  });
  package$ge.TextureLevelMode = TextureLevelMode;
  Object.defineProperty(TestFunctionEnum, 'NEVER', {
    get: TestFunctionEnum$NEVER_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'ALWAYS', {
    get: TestFunctionEnum$ALWAYS_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'EQUAL', {
    get: TestFunctionEnum$EQUAL_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'NOT_EQUAL', {
    get: TestFunctionEnum$NOT_EQUAL_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'LESS', {
    get: TestFunctionEnum$LESS_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'LESS_OR_EQUAL', {
    get: TestFunctionEnum$LESS_OR_EQUAL_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'GREATER', {
    get: TestFunctionEnum$GREATER_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'GREATER_OR_EQUAL', {
    get: TestFunctionEnum$GREATER_OR_EQUAL_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'Companion', {
    get: TestFunctionEnum$Companion_getInstance
  });
  package$ge.TestFunctionEnum = TestFunctionEnum;
  Object.defineProperty(ShadingModelEnum, 'FLAT', {
    get: ShadingModelEnum$FLAT_getInstance
  });
  Object.defineProperty(ShadingModelEnum, 'SMOOTH', {
    get: ShadingModelEnum$SMOOTH_getInstance
  });
  Object.defineProperty(ShadingModelEnum, 'Companion', {
    get: ShadingModelEnum$Companion_getInstance
  });
  package$ge.ShadingModelEnum = ShadingModelEnum;
  Object.defineProperty(GuBlendingFactor, 'GU_SRC_COLOR', {
    get: GuBlendingFactor$GU_SRC_COLOR_getInstance
  });
  Object.defineProperty(GuBlendingFactor, 'GU_ONE_MINUS_SRC_COLOR', {
    get: GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_getInstance
  });
  Object.defineProperty(GuBlendingFactor, 'GU_SRC_ALPHA', {
    get: GuBlendingFactor$GU_SRC_ALPHA_getInstance
  });
  Object.defineProperty(GuBlendingFactor, 'GU_ONE_MINUS_SRC_ALPHA', {
    get: GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_getInstance
  });
  Object.defineProperty(GuBlendingFactor, 'GU_DST_ALPHA', {
    get: GuBlendingFactor$GU_DST_ALPHA_getInstance
  });
  Object.defineProperty(GuBlendingFactor, 'GU_ONE_MINUS_DST_ALPHA', {
    get: GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_getInstance
  });
  Object.defineProperty(GuBlendingFactor, 'GU_FIX', {
    get: GuBlendingFactor$GU_FIX_getInstance
  });
  Object.defineProperty(GuBlendingFactor, 'Companion', {
    get: GuBlendingFactor$Companion_getInstance
  });
  package$ge.GuBlendingFactor = GuBlendingFactor;
  Object.defineProperty(GuBlendingEquation, 'ADD', {
    get: GuBlendingEquation$ADD_getInstance
  });
  Object.defineProperty(GuBlendingEquation, 'SUBSTRACT', {
    get: GuBlendingEquation$SUBSTRACT_getInstance
  });
  Object.defineProperty(GuBlendingEquation, 'REVERSE_SUBSTRACT', {
    get: GuBlendingEquation$REVERSE_SUBSTRACT_getInstance
  });
  Object.defineProperty(GuBlendingEquation, 'MIN', {
    get: GuBlendingEquation$MIN_getInstance
  });
  Object.defineProperty(GuBlendingEquation, 'MAX', {
    get: GuBlendingEquation$MAX_getInstance
  });
  Object.defineProperty(GuBlendingEquation, 'ABS', {
    get: GuBlendingEquation$ABS_getInstance
  });
  Object.defineProperty(GuBlendingEquation, 'Companion', {
    get: GuBlendingEquation$Companion_getInstance
  });
  package$ge.GuBlendingEquation = GuBlendingEquation;
  Object.defineProperty(StencilOperationEnum, 'KEEP', {
    get: StencilOperationEnum$KEEP_getInstance
  });
  Object.defineProperty(StencilOperationEnum, 'ZERO', {
    get: StencilOperationEnum$ZERO_getInstance
  });
  Object.defineProperty(StencilOperationEnum, 'REPLACE', {
    get: StencilOperationEnum$REPLACE_getInstance
  });
  Object.defineProperty(StencilOperationEnum, 'INVERT', {
    get: StencilOperationEnum$INVERT_getInstance
  });
  Object.defineProperty(StencilOperationEnum, 'INCREMENT', {
    get: StencilOperationEnum$INCREMENT_getInstance
  });
  Object.defineProperty(StencilOperationEnum, 'DECREMENT', {
    get: StencilOperationEnum$DECREMENT_getInstance
  });
  Object.defineProperty(StencilOperationEnum, 'Companion', {
    get: StencilOperationEnum$Companion_getInstance
  });
  package$ge.StencilOperationEnum = StencilOperationEnum;
  Object.defineProperty(WrapMode, 'REPEAT', {
    get: WrapMode$REPEAT_getInstance
  });
  Object.defineProperty(WrapMode, 'CLAMP', {
    get: WrapMode$CLAMP_getInstance
  });
  Object.defineProperty(WrapMode, 'Companion', {
    get: WrapMode$Companion_getInstance
  });
  package$ge.WrapMode = WrapMode;
  Object.defineProperty(TextureEffect, 'MODULATE', {
    get: TextureEffect$MODULATE_getInstance
  });
  Object.defineProperty(TextureEffect, 'DECAL', {
    get: TextureEffect$DECAL_getInstance
  });
  Object.defineProperty(TextureEffect, 'BLEND', {
    get: TextureEffect$BLEND_getInstance
  });
  Object.defineProperty(TextureEffect, 'REPLACE', {
    get: TextureEffect$REPLACE_getInstance
  });
  Object.defineProperty(TextureEffect, 'ADD', {
    get: TextureEffect$ADD_getInstance
  });
  Object.defineProperty(TextureEffect, 'Companion', {
    get: TextureEffect$Companion_getInstance
  });
  package$ge.TextureEffect = TextureEffect;
  Object.defineProperty(TextureFilter, 'NEAREST', {
    get: TextureFilter$NEAREST_getInstance
  });
  Object.defineProperty(TextureFilter, 'LINEAR', {
    get: TextureFilter$LINEAR_getInstance
  });
  Object.defineProperty(TextureFilter, 'NEAREST_MIPMAP_NEAREST', {
    get: TextureFilter$NEAREST_MIPMAP_NEAREST_getInstance
  });
  Object.defineProperty(TextureFilter, 'LINEAR_MIPMAP_NEAREST', {
    get: TextureFilter$LINEAR_MIPMAP_NEAREST_getInstance
  });
  Object.defineProperty(TextureFilter, 'NEAREST_MIPMAP_LINEAR', {
    get: TextureFilter$NEAREST_MIPMAP_LINEAR_getInstance
  });
  Object.defineProperty(TextureFilter, 'LINEAR_MIPMAP_LINEAR', {
    get: TextureFilter$LINEAR_MIPMAP_LINEAR_getInstance
  });
  Object.defineProperty(TextureFilter, 'Companion', {
    get: TextureFilter$Companion_getInstance
  });
  package$ge.TextureFilter = TextureFilter;
  Object.defineProperty(TextureColorComponent, 'RGB', {
    get: TextureColorComponent$RGB_getInstance
  });
  Object.defineProperty(TextureColorComponent, 'RGBA', {
    get: TextureColorComponent$RGBA_getInstance
  });
  Object.defineProperty(TextureColorComponent, 'Companion', {
    get: TextureColorComponent$Companion_getInstance
  });
  package$ge.TextureColorComponent = TextureColorComponent;
  Object.defineProperty(PrimitiveType, 'POINTS', {
    get: PrimitiveType$POINTS_getInstance
  });
  Object.defineProperty(PrimitiveType, 'LINES', {
    get: PrimitiveType$LINES_getInstance
  });
  Object.defineProperty(PrimitiveType, 'LINE_STRIP', {
    get: PrimitiveType$LINE_STRIP_getInstance
  });
  Object.defineProperty(PrimitiveType, 'TRIANGLES', {
    get: PrimitiveType$TRIANGLES_getInstance
  });
  Object.defineProperty(PrimitiveType, 'TRIANGLE_STRIP', {
    get: PrimitiveType$TRIANGLE_STRIP_getInstance
  });
  Object.defineProperty(PrimitiveType, 'TRIANGLE_FAN', {
    get: PrimitiveType$TRIANGLE_FAN_getInstance
  });
  Object.defineProperty(PrimitiveType, 'SPRITES', {
    get: PrimitiveType$SPRITES_getInstance
  });
  Object.defineProperty(PrimitiveType, 'Companion', {
    get: PrimitiveType$Companion_getInstance
  });
  package$ge.PrimitiveType = PrimitiveType;
  Object.defineProperty(package$ge, 'ClearBufferSet', {
    get: ClearBufferSet_getInstance
  });
  package$ge.GeList = GeList;
  Object.defineProperty(package$ge, 'GeOpCodes', {
    get: GeOpCodes_getInstance
  });
  package$ge.bool1_za3lpa$ = bool1;
  package$ge.parambool_vux9f0$ = parambool;
  package$ge.param1_vux9f0$ = param1;
  package$ge.param2_vux9f0$ = param2;
  package$ge.param3_vux9f0$ = param3;
  package$ge.param4_vux9f0$ = param4;
  package$ge.param5_vux9f0$ = param5;
  package$ge.param8_vux9f0$ = param8;
  package$ge.param10_vux9f0$ = param10;
  package$ge.param16_vux9f0$ = param16;
  package$ge.param24_za3lpa$ = param24;
  package$ge.float1_za3lpa$ = float1;
  package$ge.VertexState = VertexState;
  package$ge.ViewPort = ViewPort;
  package$ge.Region = Region;
  Object.defineProperty(Light, 'Companion', {
    get: Light$Companion_getInstance
  });
  package$ge.Light = Light;
  package$ge.Lightning = Lightning;
  package$ge.MipmapState = MipmapState;
  package$ge.ClutState = ClutState;
  package$ge.TextureState = TextureState;
  package$ge.CullingState = CullingState;
  package$ge.DepthTestState = DepthTestState;
  Object.defineProperty(Color, 'Companion', {
    get: Color$Companion_getInstance
  });
  package$ge.Color = Color;
  package$ge.Blending = Blending;
  package$ge.AlphaTest = AlphaTest;
  package$ge.Rectangle = Rectangle;
  package$ge.ClipPlane = ClipPlane;
  package$ge.StencilState = StencilState;
  package$ge.PatchState = PatchState;
  package$ge.Fog = Fog;
  package$ge.LogicOp = LogicOp;
  package$ge.LineSmoothState = LineSmoothState;
  package$ge.PatchCullingState = PatchCullingState;
  package$ge.OffsetState = OffsetState;
  Object.defineProperty(GeState, 'Companion', {
    get: GeState$Companion_getInstance
  });
  package$ge.GeState = GeState;
  package$ge.SkinningState = SkinningState;
  package$ge.ColorTestState = ColorTestState;
  package$ge.DitheringState = DitheringState;
  package$ge.GpuFrameBufferState = GpuFrameBufferState;
  Object.defineProperty(VertexType$Attribute, 'WEIGHTS', {
    get: VertexType$Attribute$WEIGHTS_getInstance
  });
  Object.defineProperty(VertexType$Attribute, 'TEXTURE', {
    get: VertexType$Attribute$TEXTURE_getInstance
  });
  Object.defineProperty(VertexType$Attribute, 'COLOR', {
    get: VertexType$Attribute$COLOR_getInstance
  });
  Object.defineProperty(VertexType$Attribute, 'NORMAL', {
    get: VertexType$Attribute$NORMAL_getInstance
  });
  Object.defineProperty(VertexType$Attribute, 'POSITION', {
    get: VertexType$Attribute$POSITION_getInstance
  });
  Object.defineProperty(VertexType$Attribute, 'END', {
    get: VertexType$Attribute$END_getInstance
  });
  VertexType.Attribute = VertexType$Attribute;
  package$ge.VertexType = VertexType;
  package$ge.init_333mji$ = init;
  package$ge.VertexRaw = VertexRaw;
  package$ge.VertexReader = VertexReader;
  package$ge.Gpu = Gpu;
  package$ge.GpuRenderer = GpuRenderer;
  package$ge.DummyGpuRenderer = DummyGpuRenderer;
  var package$hle = package$kpspemu.hle || (package$kpspemu.hle = {});
  package$hle.registerNativeModules_m3jm4f$ = registerNativeModules;
  package$hle.registerNativeModules_c03h7v$ = registerNativeModules_0;
  package$hle.RegisterReader = RegisterReader;
  package$hle.NativeFunction = NativeFunction;
  package$hle.SceModule = SceModule;
  Object.defineProperty(PixelFormat, 'RGBA_5650', {
    get: PixelFormat$RGBA_5650_getInstance
  });
  Object.defineProperty(PixelFormat, 'RGBA_5551', {
    get: PixelFormat$RGBA_5551_getInstance
  });
  Object.defineProperty(PixelFormat, 'RGBA_4444', {
    get: PixelFormat$RGBA_4444_getInstance
  });
  Object.defineProperty(PixelFormat, 'RGBA_8888', {
    get: PixelFormat$RGBA_8888_getInstance
  });
  Object.defineProperty(PixelFormat, 'PALETTE_T4', {
    get: PixelFormat$PALETTE_T4_getInstance
  });
  Object.defineProperty(PixelFormat, 'PALETTE_T8', {
    get: PixelFormat$PALETTE_T8_getInstance
  });
  Object.defineProperty(PixelFormat, 'PALETTE_T16', {
    get: PixelFormat$PALETTE_T16_getInstance
  });
  Object.defineProperty(PixelFormat, 'PALETTE_T32', {
    get: PixelFormat$PALETTE_T32_getInstance
  });
  Object.defineProperty(PixelFormat, 'COMPRESSED_DXT1', {
    get: PixelFormat$COMPRESSED_DXT1_getInstance
  });
  Object.defineProperty(PixelFormat, 'COMPRESSED_DXT3', {
    get: PixelFormat$COMPRESSED_DXT3_getInstance
  });
  Object.defineProperty(PixelFormat, 'COMPRESSED_DXT5', {
    get: PixelFormat$COMPRESSED_DXT5_getInstance
  });
  Object.defineProperty(PixelFormat, 'Companion', {
    get: PixelFormat$Companion_getInstance
  });
  package$hle.PixelFormat = PixelFormat;
  var package$error = package$hle.error || (package$hle.error = {});
  Object.defineProperty(package$error, 'SceKernelErrors', {
    get: SceKernelErrors_getInstance
  });
  var package$manager = package$hle.manager || (package$hle.manager = {});
  package$manager.CallbackManager = CallbackManager;
  package$manager.PspCallback = PspCallback;
  package$manager.DeviceManager = DeviceManager;
  package$manager.FileManager = FileManager;
  package$manager.FileDescriptor = FileDescriptor;
  package$manager.Manager = Manager;
  package$manager.Resource = Resource;
  package$manager.MemoryManager = MemoryManager;
  Object.defineProperty(MemoryPartitions, 'Companion', {
    get: MemoryPartitions$Companion_getInstance
  });
  package$manager.MemoryPartitions = MemoryPartitions;
  Object.defineProperty(MemoryAnchor, 'Low', {
    get: MemoryAnchor$Low_getInstance
  });
  Object.defineProperty(MemoryAnchor, 'High', {
    get: MemoryAnchor$High_getInstance
  });
  Object.defineProperty(MemoryAnchor, 'Address', {
    get: MemoryAnchor$Address_getInstance
  });
  Object.defineProperty(MemoryAnchor, 'LowAligned', {
    get: MemoryAnchor$LowAligned_getInstance
  });
  Object.defineProperty(MemoryAnchor, 'HighAligned', {
    get: MemoryAnchor$HighAligned_getInstance
  });
  Object.defineProperty(MemoryAnchor, 'Companion', {
    get: MemoryAnchor$Companion_getInstance
  });
  package$manager.MemoryAnchor = MemoryAnchor;
  package$manager.OutOfMemoryError = OutOfMemoryError;
  Object.defineProperty(MemoryPartition, 'Companion', {
    get: MemoryPartition$Companion_getInstance
  });
  package$manager.MemoryPartition = MemoryPartition;
  package$manager.ModuleManager = ModuleManager;
  package$manager.SyscallManager = SyscallManager;
  Object.defineProperty(package$manager, 'INSTRUCTIONS_PER_STEP', {
    get: function () {
      return INSTRUCTIONS_PER_STEP;
    }
  });
  package$manager.ThreadManager = ThreadManager;
  WaitObject.TIME = WaitObject$TIME;
  WaitObject.PROMISE = WaitObject$PROMISE;
  Object.defineProperty(WaitObject, 'SLEEP', {
    get: WaitObject$SLEEP_getInstance
  });
  Object.defineProperty(WaitObject, 'VBLANK', {
    get: WaitObject$VBLANK_getInstance
  });
  package$manager.WaitObject = WaitObject;
  Object.defineProperty(PspThread$Phase, 'STOPPED', {
    get: PspThread$Phase$STOPPED_getInstance
  });
  Object.defineProperty(PspThread$Phase, 'RUNNING', {
    get: PspThread$Phase$RUNNING_getInstance
  });
  Object.defineProperty(PspThread$Phase, 'WAITING', {
    get: PspThread$Phase$WAITING_getInstance
  });
  Object.defineProperty(PspThread$Phase, 'DELETED', {
    get: PspThread$Phase$DELETED_getInstance
  });
  PspThread.Phase = PspThread$Phase;
  package$manager.PspThread = PspThread;
  package$manager.get__thread_he8x89$ = get__thread;
  package$manager.set__thread_fh26zs$ = set__thread;
  package$manager.get_thread_he8x89$ = get_thread;
  package$manager.TimeManager = TimeManager;
  Object.defineProperty(IoFileMgrForUser, 'Companion', {
    get: IoFileMgrForUser$Companion_getInstance
  });
  Object.defineProperty(IoFileMgrForUser, 'FileOpenFlags', {
    get: IoFileMgrForUser$FileOpenFlags_getInstance
  });
  Object.defineProperty(IoFileMgrForUser, 'IOFileModes', {
    get: IoFileMgrForUser$IOFileModes_getInstance
  });
  IoFileMgrForUser.SceIoStat = IoFileMgrForUser$SceIoStat;
  Object.defineProperty(IoFileMgrForUser, 'SeekType', {
    get: IoFileMgrForUser$SeekType_getInstance
  });
  var package$modules = package$hle.modules || (package$hle.modules = {});
  package$modules.IoFileMgrForUser = IoFileMgrForUser;
  package$modules.LoadExecForUser = LoadExecForUser;
  package$modules.ModuleMgrForUser = ModuleMgrForUser;
  StdioForUser.StdioStream = StdioForUser$StdioStream;
  package$modules.StdioForUser = StdioForUser;
  SysMemUserForUser.Partition = SysMemUserForUser$Partition;
  package$modules.SysMemUserForUser = SysMemUserForUser;
  package$modules.ThreadManForUser = ThreadManForUser;
  package$modules.PspEventFlag = PspEventFlag;
  package$modules.UtilsForKernel = UtilsForKernel;
  package$modules.UtilsForUser = UtilsForUser;
  Object.defineProperty(sceAudio, 'AudioFormat', {
    get: sceAudio$AudioFormat_getInstance
  });
  package$modules.sceAudio = sceAudio;
  package$modules.sceCtrl = sceCtrl;
  package$modules.sceDisplay = sceDisplay;
  package$modules.sceGe_user = sceGe_user;
  package$modules.sceNetInet = sceNetInet;
  package$modules.scePower = scePower;
  package$modules.sceRtc = sceRtc;
  Object.defineProperty(ScePspDateTime, 'Companion', {
    get: ScePspDateTime$Companion_getInstance
  });
  package$modules.ScePspDateTime_init_mw5vjr$ = ScePspDateTime_init;
  package$modules.ScePspDateTime_init_s8cxhz$ = ScePspDateTime_init_0;
  package$modules.ScePspDateTime = ScePspDateTime;
  LibDoc.prototype.Entry = LibDoc$Entry;
  LibDoc.prototype.Function = LibDoc$Function;
  LibDoc.prototype.Variable = LibDoc$Variable;
  LibDoc.prototype.Library = LibDoc$Library;
  LibDoc.prototype.Prx = LibDoc$Prx;
  LibDoc.prototype.Doc = LibDoc$Doc;
  var package$psplibdoc = package$hle.psplibdoc || (package$hle.psplibdoc = {});
  Object.defineProperty(package$psplibdoc, 'LibDoc', {
    get: LibDoc_getInstance
  });
  package$psplibdoc.dump_i1u5gc$ = dump;
  package$psplibdoc.dump_xaol4r$ = dump_0;
  package$psplibdoc.dump_67zrc0$ = dump_1;
  package$psplibdoc.dump_687hwi$ = dump_2;
  Object.defineProperty(Memory, 'Companion', {
    get: Memory$Companion_getInstance
  });
  Memory.MemorySegment = Memory$MemorySegment;
  var package$mem = package$kpspemu.mem || (package$kpspemu.mem = {});
  package$mem.Memory = Memory;
  package$mem.DummyMemory = DummyMemory;
  package$mem.trace_w7fru8$ = trace;
  package$mem.TraceMemory = TraceMemory;
  package$mem.openSync_qe2j2c$ = openSync_0;
  package$mem.FastMemoryBacked = FastMemoryBacked;
  package$mem.FastMemory = FastMemory;
  package$mem.SmallMemory = SmallMemory;
  package$mem.Ptr = Ptr;
  package$mem.MemPtr = MemPtr;
  package$mem.ptr_w2yn32$ = ptr;
  package$mem.get_isNotNull_luvok3$ = get_isNotNull;
  package$mem.get_isNull_luvok3$ = get_isNull;
  package$mem.writeBytes_yjewl3$ = writeBytes;
  package$mem.readBytes_gdi75l$ = readBytes_1;
  package$mem.openSync_luvok3$ = openSync_1;
  var package$native = package$kpspemu.native || (package$kpspemu.native = {});
  Object.defineProperty(package$native, 'CurrentVfs', {
    get: get_CurrentVfs
  });
  var package$util = package$kpspemu.util || (package$kpspemu.util = {});
  package$util.setAlpha_1dwlii$ = setAlpha;
  package$util.toInt_1v8dcc$ = toInt_0;
  package$util.NumericEnum = NumericEnum_0;
  package$util.Flags = Flags;
  IdEnum.SmallCompanion = IdEnum$SmallCompanion;
  package$util.IdEnum = IdEnum;
  package$util.clamp_wj6e7o$ = clamp_0;
  package$util.isNanOrInfinite_81szk$ = isNanOrInfinite;
  package$util.imul32_64_nps3vt$ = imul32_64;
  package$util.umul32_64_nps3vt$ = umul32_64;
  package$util.get_unsigned_s8ev3n$ = get_unsigned;
  Object.defineProperty(package$util, 'BitUtils', {
    get: BitUtils_getInstance
  });
  package$util.compareToUnsigned_dqglrj$ = compareToUnsigned;
  package$util.ult_dqglrj$ = ult;
  package$util.ule_dqglrj$ = ule;
  package$util.ugt_dqglrj$ = ugt;
  package$util.uge_dqglrj$ = uge;
  package$util.extractBool_dqglrj$ = extractBool;
  package$util.bitReverse_s8ev3n$ = bitReverse;
  package$util.countLeadingZeros_s8ev3n$ = countLeadingZeros;
  package$util.countTrailingZeros_s8ev3n$ = countTrailingZeros;
  package$util.hasFlag_dqglrj$ = hasFlag;
  package$util.IntMap = IntMap;
  package$util.currentTimeMicro_llmgxl$ = currentTimeMicro;
  package$util.millisecondsToMicroseconds_vgaf26$ = millisecondsToMicroseconds;
  Object.defineProperty(package$util, 'MathFloat', {
    get: MathFloat_getInstance
  });
  package$util.isAlmostZero_81szk$ = isAlmostZero;
  package$util.splice_b7gcku$ = splice;
  package$util.reduceAcumulate_l1hrho$ = reduceAcumulate;
  Object.defineProperty(package$util, 'PspLoggerManager', {
    get: PspLoggerManager_getInstance
  });
  Object.defineProperty(PspLogLevel, 'NONE', {
    get: PspLogLevel$NONE_getInstance
  });
  Object.defineProperty(PspLogLevel, 'FATAL', {
    get: PspLogLevel$FATAL_getInstance
  });
  Object.defineProperty(PspLogLevel, 'ERROR', {
    get: PspLogLevel$ERROR_getInstance
  });
  Object.defineProperty(PspLogLevel, 'WARN', {
    get: PspLogLevel$WARN_getInstance
  });
  Object.defineProperty(PspLogLevel, 'INFO', {
    get: PspLogLevel$INFO_getInstance
  });
  Object.defineProperty(PspLogLevel, 'TRACE', {
    get: PspLogLevel$TRACE_getInstance
  });
  package$util.PspLogLevel = PspLogLevel;
  Object.defineProperty(PspLogger, 'Companion', {
    get: PspLogger$Companion_getInstance
  });
  package$util.PspLogger = PspLogger;
  package$util.quote_9fqtcw$ = quote_0;
  package$util.ResourceItem = ResourceItem;
  package$util.ResourceList = ResourceList;
  package$util.waitOnePromise_b1yv1r$ = waitOnePromise;
  package$util.parseInt_pdl1vz$ = parseInt;
  package$util.get_quoted_pdl1vz$ = get_quoted;
  package$util.get_hex_s8ev3n$ = get_hex;
  package$util.get_hex_964n91$ = get_hex_0;
  package$util.asVfsFile_igl5gt$ = asVfsFile;
  var package$io = package$util.io || (package$util.io = {});
  package$io.MountableVfsSync_d8a1fi$ = MountableVfsSync;
  package$io.MountableSync = MountableSync;
  package$io.ZipVfs2_960o6l$ = ZipVfs2;
  Object.defineProperty(package$native, 'KPspEmuNative', {
    get: KPspEmuNative_getInstance
  });
  ElfProgramHeaderType.prototype.hasFlag_fzutc1$ = Flags.prototype.hasFlag_fzutc1$;
  ElfSectionHeaderType.prototype.hasFlag_fzutc1$ = Flags.prototype.hasFlag_fzutc1$;
  ElfSectionHeaderFlags.prototype.hasFlag_fzutc1$ = Flags.prototype.hasFlag_fzutc1$;
  MemPtr.prototype.sdw_6svq3l$ = Ptr.prototype.sdw_6svq3l$;
  MemPtr.prototype.ldw_za3lpa$ = Ptr.prototype.ldw_za3lpa$;
  KPSPEMU_VERSION = '0.2.0-SNAPSHOT';
  ADDR_TYPE_NONE = 0;
  ADDR_TYPE_REG = 1;
  ADDR_TYPE_16 = 2;
  ADDR_TYPE_26 = 3;
  INSTR_TYPE_PSP = 1 << 0;
  INSTR_TYPE_SYSCALL = 1 << 1;
  INSTR_TYPE_B = 1 << 2;
  INSTR_TYPE_LIKELY = 1 << 3;
  INSTR_TYPE_JAL = 1 << 4;
  INSTR_TYPE_JUMP = 1 << 5;
  INSTR_TYPE_BREAK = 1 << 6;
  INSTRUCTIONS_PER_STEP = 5000000;
  _thread = new Extra$Property(void 0, _thread$lambda);
  MEMORY_MASK = 268435455;
  MASK = MEMORY_MASK;
  LWR_MASK = new Int32Array([0, (new Kotlin.Long(-16777216, 0)).toInt(), (new Kotlin.Long(-65536, 0)).toInt(), (new Kotlin.Long(-256, 0)).toInt()]);
  LWR_SHIFT = new Int32Array([0, 8, 16, 24]);
  LWL_MASK = new Int32Array([16777215, 65535, 255, 0]);
  LWL_SHIFT = new Int32Array([24, 16, 8, 0]);
  SWL_MASK = new Int32Array([(new Kotlin.Long(-256, 0)).toInt(), (new Kotlin.Long(-65536, 0)).toInt(), (new Kotlin.Long(-16777216, 0)).toInt(), 0]);
  SWL_SHIFT = new Int32Array([24, 16, 8, 0]);
  SWR_MASK = new Int32Array([0, 255, 65535, 16777215]);
  SWR_SHIFT = new Int32Array([0, 8, 16, 24]);
  CurrentVfs = lazy(CurrentVfs$lambda);
  main([]);
  Kotlin.defineModule('kpspemu', _);
  return _;
}));
