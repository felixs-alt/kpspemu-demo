(function (root, factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', 'kotlin', 'korge-js', 'korim-js', 'korag-js', 'klogger-js', 'korio-js', 'korma-js', 'korau-atrac3plus-js', 'korinject-js', 'klock-js', 'kds-js', 'kmem-js', 'dynarek-js', 'korau-js', 'krypto-js'], factory);
  else if (typeof exports === 'object')
    factory(module.exports, require('kotlin'), require('korge-js'), require('korim-js'), require('korag-js'), require('klogger-js'), require('korio-js'), require('korma-js'), require('korau-atrac3plus-js'), require('korinject-js'), require('klock-js'), require('kds-js'), require('kmem-js'), require('dynarek-js'), require('korau-js'), require('krypto-js'));
  else {
    if (typeof kotlin === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'kotlin' was not found. Please, check whether 'kotlin' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['korge-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'korge-js' was not found. Please, check whether 'korge-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['korim-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'korim-js' was not found. Please, check whether 'korim-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['korag-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'korag-js' was not found. Please, check whether 'korag-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['klogger-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'klogger-js' was not found. Please, check whether 'klogger-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['korio-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'korio-js' was not found. Please, check whether 'korio-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['korma-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'korma-js' was not found. Please, check whether 'korma-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['korau-atrac3plus-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'korau-atrac3plus-js' was not found. Please, check whether 'korau-atrac3plus-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['korinject-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'korinject-js' was not found. Please, check whether 'korinject-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['klock-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'klock-js' was not found. Please, check whether 'klock-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['kds-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'kds-js' was not found. Please, check whether 'kds-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['kmem-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'kmem-js' was not found. Please, check whether 'kmem-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['dynarek-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'dynarek-js' was not found. Please, check whether 'dynarek-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['korau-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'korau-js' was not found. Please, check whether 'korau-js' is loaded prior to 'kpspemu'.");
    }
    if (typeof this['krypto-js'] === 'undefined') {
      throw new Error("Error loading module 'kpspemu'. Its dependency 'krypto-js' was not found. Please, check whether 'krypto-js' is loaded prior to 'kpspemu'.");
    }
    root.kpspemu = factory(typeof kpspemu === 'undefined' ? {} : kpspemu, kotlin, this['korge-js'], this['korim-js'], this['korag-js'], this['klogger-js'], this['korio-js'], this['korma-js'], this['korau-atrac3plus-js'], this['korinject-js'], this['klock-js'], this['kds-js'], this['kmem-js'], this['dynarek-js'], this['korau-js'], this['krypto-js']);
  }
}(this, function (_, Kotlin, $module$korge_js, $module$korim_js, $module$korag_js, $module$klogger_js, $module$korio_js, $module$korma_js, $module$korau_atrac3plus_js, $module$korinject_js, $module$klock_js, $module$kds_js, $module$kmem_js, $module$dynarek_js, $module$korau_js, $module$krypto_js) {
  'use strict';
  var $$importsForInline$$ = _.$$importsForInline$$ || (_.$$importsForInline$$ = {});
  var Enum = Kotlin.kotlin.Enum;
  var Kind_CLASS = Kotlin.Kind.CLASS;
  var throwISE = Kotlin.throwISE;
  var PropertyMetadata = Kotlin.PropertyMetadata;
  var Unit = Kotlin.kotlin.Unit;
  var throwUPAE = Kotlin.throwUPAE;
  var equals = Kotlin.equals;
  var Texture = $module$korge_js.com.soywiz.korge.render.Texture;
  var ensureNotNull = Kotlin.ensureNotNull;
  var Texture$Base = $module$korge_js.com.soywiz.korge.render.Texture.Base;
  var numberToInt = Kotlin.numberToInt;
  var color = $module$korim_js.com.soywiz.korim.color;
  var setAlpha = $module$korim_js.com.soywiz.korim.bitmap.setAlpha_1dwlii$;
  var AG$Blending = $module$korag_js.com.soywiz.korag.AG.Blending;
  var toList = Kotlin.kotlin.collections.toList_i2lc79$;
  var get_hex = $module$korio_js.com.soywiz.korio.util.get_hex_s8ev3n$;
  var get_hex_0 = $module$korio_js.com.soywiz.korio.util.get_hex_964n91$;
  var openSync = $module$korio_js.com.soywiz.korio.stream.openSync_m1iwyb$;
  var toString = Kotlin.toString;
  var hasFlag = $module$korio_js.com.soywiz.korio.util.hasFlag_dqglrj$;
  var AG$CompareMode = $module$korag_js.com.soywiz.korag.AG.CompareMode;
  var Program = $module$korag_js.com.soywiz.korag.shader.Program;
  var Program$Swizzle = $module$korag_js.com.soywiz.korag.shader.Program.Swizzle;
  var VarType = $module$korag_js.com.soywiz.korag.shader.VarType;
  var listOf = Kotlin.kotlin.collections.listOf_i5x0yv$;
  var Attribute = $module$korag_js.com.soywiz.korag.shader.Attribute;
  var Varying = $module$korag_js.com.soywiz.korag.shader.Varying;
  var Temp = $module$korag_js.com.soywiz.korag.shader.Temp;
  var filterNotNull = Kotlin.kotlin.collections.filterNotNull_m3lr2h$;
  var VertexLayout = $module$korag_js.com.soywiz.korag.shader.VertexLayout;
  var VertexShader = $module$korag_js.com.soywiz.korag.shader.VertexShader_8zzl3$;
  var FragmentShader = $module$korag_js.com.soywiz.korag.shader.FragmentShader_8zzl3$;
  var joinToString = Kotlin.kotlin.collections.joinToString_fmv235$;
  var Logger = $module$klogger_js.com.soywiz.klogger.Logger;
  var Bitmap32 = $module$korim_js.com.soywiz.korim.bitmap.Bitmap32;
  var AG$RenderState = $module$korag_js.com.soywiz.korag.AG.RenderState;
  var Uniform = $module$korag_js.com.soywiz.korag.shader.Uniform;
  var Matrix4 = $module$korma_js.com.soywiz.korma.Matrix4;
  var AG$TextureUnit = $module$korag_js.com.soywiz.korag.AG.TextureUnit;
  var to = Kotlin.kotlin.to_ujzrz7$;
  var mapOf = Kotlin.kotlin.collections.mapOf_qfcya0$;
  var LinkedHashMap_init = Kotlin.kotlin.collections.LinkedHashMap_init_q3lmfv$;
  var AG$BlendEquation = $module$korag_js.com.soywiz.korag.AG.BlendEquation;
  var AG$DrawType = $module$korag_js.com.soywiz.korag.AG.DrawType;
  var AG$BlendFactor = $module$korag_js.com.soywiz.korag.AG.BlendFactor;
  var until = Kotlin.kotlin.ranges.until_dqglrj$;
  var BitmapFont = $module$korim_js.com.soywiz.korim.font.BitmapFont;
  var RectangleInt_init = $module$korma_js.com.soywiz.korma.geom.RectangleInt_init_tjonv8$;
  var BitmapFont$GlyphInfo = $module$korim_js.com.soywiz.korim.font.BitmapFont.GlyphInfo;
  var lazy = Kotlin.kotlin.lazy_klfg04$;
  var format = $module$korim_js.com.soywiz.korim.format;
  var crypto = $module$korio_js.com.soywiz.korio.crypto;
  var Kind_OBJECT = Kotlin.Kind.OBJECT;
  var CoroutineImpl = Kotlin.kotlin.coroutines.experimental.CoroutineImpl;
  var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.experimental.intrinsics.COROUTINE_SUSPENDED;
  var firstOrNull = Kotlin.kotlin.collections.firstOrNull_7wnvza$;
  var println = Kotlin.kotlin.io.println_s8jyv4$;
  var convert = $module$korge_js.com.soywiz.korge.bitmapfont.convert_gcgmrv$;
  var Container = $module$korge_js.com.soywiz.korge.view.Container;
  var AsyncSignal = $module$korio_js.com.soywiz.korio.async.AsyncSignal;
  var text = $module$korge_js.com.soywiz.korge.view.text_ae47yq$;
  var html = $module$korge_js.com.soywiz.korge.html;
  var Html$FontFace$Bitmap = $module$korge_js.com.soywiz.korge.html.Html.FontFace.Bitmap;
  var Html$Format = $module$korge_js.com.soywiz.korge.html.Html.Format;
  var plus = Kotlin.kotlin.collections.plus_qloxvw$;
  var format_0 = $module$korio_js.com.soywiz.korio.lang.format_e33kwl$;
  var toChar = Kotlin.toChar;
  var toBoxedChar = Kotlin.toBoxedChar;
  var withIndex = Kotlin.kotlin.collections.withIndex_7wnvza$;
  var Throwable = Error;
  var Text = $module$korge_js.com.soywiz.korge.view.Text;
  var Scene = $module$korge_js.com.soywiz.korge.scene.Scene;
  var startsWith = Kotlin.kotlin.text.startsWith_7epoxm$;
  var substr = $module$korio_js.com.soywiz.korio.util.substr_6ic1pp$;
  var toIntOrNull = Kotlin.kotlin.text.toIntOrNull_pdl1vz$;
  var kotlin_js_internal_IntCompanionObject = Kotlin.kotlin.js.internal.IntCompanionObject;
  var StringBuilder = Kotlin.kotlin.text.StringBuilder;
  var IMemory = $module$korau_atrac3plus_js.com.soywiz.korau.format.util.IMemory;
  var AsyncDependency = $module$korinject_js.com.soywiz.korinject.AsyncDependency;
  var Kind_INTERFACE = Kotlin.Kind.INTERFACE;
  var korge = $module$korge_js.com.soywiz.korge;
  var AsyncInjector = $module$korinject_js.com.soywiz.korinject.AsyncInjector;
  var getKClass = Kotlin.getKClass;
  var getCoroutineContext = $module$korio_js.com.soywiz.korio.coroutine.getCoroutineContext;
  var Browser = $module$korge_js.com.soywiz.korge.service.Browser;
  var SizeInt = $module$korma_js.com.soywiz.korma.geom.SizeInt;
  var Module = $module$korge_js.com.soywiz.korge.scene.Module;
  var SVG_init = $module$korim_js.com.soywiz.korim.vector.format.SVG_init_61zpoe$;
  var go = $module$korio_js.com.soywiz.korio.async.go_n2b8nk$;
  var Matrix2d = $module$korma_js.com.soywiz.korma.Matrix2d;
  var RenderContext = $module$korge_js.com.soywiz.korge.render.RenderContext;
  var texture = $module$korge_js.com.soywiz.korge.view.texture_q2u7nr$;
  var printStackTrace = $module$korio_js.com.soywiz.korio.lang.printStackTrace_dbl4o4$;
  var klock = $module$klock_js.com.soywiz.klock;
  var sleep = $module$korge_js.com.soywiz.korge.scene.sleep_hnjj7n$;
  var go_0 = $module$korio_js.com.soywiz.korio.async.go_g3zeo5$;
  var setText = $module$korge_js.com.soywiz.korge.view.setText_4h3qbs$;
  var plusAssign = $module$korge_js.com.soywiz.korge.view.plusAssign_5hnngd$;
  var View = $module$korge_js.com.soywiz.korge.view.View;
  var sceneContainer = $module$korge_js.com.soywiz.korge.scene.sceneContainer_jv80cy$;
  var util = $module$korio_js.com.soywiz.korio.util;
  var trim = Kotlin.kotlin.text.trim_wqw3xr$;
  var vfs = $module$korio_js.com.soywiz.korio.vfs;
  var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
  var tween = $module$korge_js.com.soywiz.korge.tween.tween_wrai67$;
  var BitmapFont_0 = $module$korge_js.com.soywiz.korge.bitmapfont.BitmapFont;
  var font = $module$korim_js.com.soywiz.korim.font;
  var image = $module$korge_js.com.soywiz.korge.view.image_knk7mb$;
  var AsyncThread = $module$korio_js.com.soywiz.korio.async.AsyncThread;
  var umod = $module$kds_js.com.soywiz.kds.umod_dqglrj$;
  var roundToInt = Kotlin.kotlin.math.roundToInt_yrwdxr$;
  var readAll = $module$korio_js.com.soywiz.korio.stream.readAll_yjldv$;
  var openAsync = $module$korio_js.com.soywiz.korio.stream.openAsync_m1iwyb$;
  var invalidOp = $module$korio_js.com.soywiz.korio.error.invalidOp_61zpoe$;
  var get_hexString = $module$korio_js.com.soywiz.korio.util.get_hexString_964n91$;
  var listOf_0 = Kotlin.kotlin.collections.listOf_mh5how$;
  var PathInfo = $module$korio_js.com.soywiz.korio.vfs.PathInfo;
  var MergedVfs = $module$korio_js.com.soywiz.korio.vfs.MergedVfs;
  var IdEnum$SmallCompanion = $module$korio_js.com.soywiz.korio.util.IdEnum.SmallCompanion;
  var IdEnum = $module$korio_js.com.soywiz.korio.util.IdEnum;
  var Exception_init = Kotlin.kotlin.Exception_init;
  var Exception = Kotlin.kotlin.Exception;
  var invalidArg = $module$korio_js.com.soywiz.korio.error.invalidArg_61zpoe$;
  var plus_0 = Kotlin.kotlin.collections.plus_mydzjv$;
  var toMap = Kotlin.kotlin.collections.toMap_6hr0sd$;
  var extract = $module$kmem_js.com.soywiz.kmem.extract_dqglrj$;
  var extract_0 = $module$kmem_js.com.soywiz.kmem.extract_e4yvb3$;
  var insert = $module$kmem_js.com.soywiz.kmem.insert_4684dr$;
  var insert_0 = $module$kmem_js.com.soywiz.kmem.insert_kvkj6u$;
  var defineInlineFunction = Kotlin.defineInlineFunction;
  var wrapFunction = Kotlin.wrapFunction;
  var Extra = $module$kds_js.com.soywiz.kds.Extra;
  var Extra$Mixin = $module$kds_js.com.soywiz.kds.Extra.Mixin;
  var kotlin_js_internal_FloatCompanionObject = Kotlin.kotlin.js.internal.FloatCompanionObject;
  var arraycopy = $module$kmem_js.com.soywiz.kmem.arraycopy_kf4lg$;
  var error = $module$korio_js.com.soywiz.korio.error;
  var Exception_init_0 = Kotlin.kotlin.Exception_init_pdl1vj$;
  var split = Kotlin.kotlin.text.split_o64adg$;
  var Regex_init = Kotlin.kotlin.text.Regex_init_61zpoe$;
  var iterator = Kotlin.kotlin.text.iterator_gw00vp$;
  var unboxChar = Kotlin.unboxChar;
  var replace = Kotlin.kotlin.text.replace_r2fvfm$;
  var IndexOutOfBoundsException = Kotlin.kotlin.IndexOutOfBoundsException;
  var lang = $module$korio_js.com.soywiz.korio.lang;
  var dynarek = $module$dynarek_js.com.soywiz.dynarek;
  var DClass = $module$dynarek_js.com.soywiz.dynarek.DClass;
  var DFunction1 = $module$dynarek_js.com.soywiz.dynarek.DFunction1;
  var DLiteral = $module$dynarek_js.com.soywiz.dynarek.DLiteral;
  var IBinop = $module$dynarek_js.com.soywiz.dynarek.IBinop;
  var DBinopInt = $module$dynarek_js.com.soywiz.dynarek.DBinopInt;
  var kotlin = Kotlin.kotlin;
  var StmBuilder = $module$dynarek_js.com.soywiz.dynarek.StmBuilder;
  var udiv = $module$korio_js.com.soywiz.korio.util.udiv_dqglrj$;
  var urem = $module$korio_js.com.soywiz.korio.util.urem_dqglrj$;
  var imul32_64 = $module$korio_js.com.soywiz.korio.util.imul32_64_nps3vt$;
  var umul32_64 = $module$korio_js.com.soywiz.korio.util.umul32_64_nps3vt$;
  var get_unsigned = $module$korio_js.com.soywiz.korio.util.get_unsigned_s8ev3n$;
  var math = $module$korma_js.com.soywiz.korma.math;
  var isNaN_0 = Kotlin.kotlin.isNaN_81szk$;
  var isInfinite = Kotlin.kotlin.isInfinite_81szk$;
  var isAlmostZero = $module$korma_js.com.soywiz.korma.math.isAlmostZero_81szk$;
  var getCallableRef = Kotlin.getCallableRef;
  var extract8 = $module$kmem_js.com.soywiz.kmem.extract8_dqglrj$;
  var extractBool = $module$korio_js.com.soywiz.korio.util.extractBool_dqglrj$;
  var sum = Kotlin.kotlin.collections.sum_lvsncp$;
  var math_0 = Kotlin.kotlin.math;
  var log = Kotlin.kotlin.math.log_lu1900$;
  var clamp = $module$korma_js.com.soywiz.korma.math.clamp_wj6e7o$;
  var readStringz = $module$korio_js.com.soywiz.korio.stream.readStringz_4xit9n$;
  var readS32_le = $module$korio_js.com.soywiz.korio.stream.readS32_le_yjldv$;
  var readS64_le = $module$korio_js.com.soywiz.korio.stream.readS64_le_yjldv$;
  var readU8 = $module$korio_js.com.soywiz.korio.stream.readU8_yjldv$;
  var readS16_le = $module$korio_js.com.soywiz.korio.stream.readS16_le_yjldv$;
  var readIntArray_le = $module$korio_js.com.soywiz.korio.stream.readIntArray_le_a0g59h$;
  var sliceWithBounds = $module$korio_js.com.soywiz.korio.stream.sliceWithBounds_i9mzv9$;
  var uncompressZlibRaw = $module$korio_js.com.soywiz.korio.compression.uncompressZlibRaw_964n91$;
  var arraycopy_0 = $module$kmem_js.com.soywiz.kmem.arraycopy_nlwz52$;
  var AsyncStreamBase = $module$korio_js.com.soywiz.korio.stream.AsyncStreamBase;
  var toAsyncStream = $module$korio_js.com.soywiz.korio.stream.toAsyncStream_ejtyh5$;
  var CacheMap = $module$kds_js.com.soywiz.kds.CacheMap;
  var toList_0 = Kotlin.kotlin.collections.toList_tmsbgo$;
  var zip = Kotlin.kotlin.collections.zip_45mdf7$;
  var readS32_le_0 = $module$korio_js.com.soywiz.korio.stream.readS32_le_p2awyq$;
  var readU16_le = $module$korio_js.com.soywiz.korio.stream.readU16_le_p2awyq$;
  var readU8_0 = $module$korio_js.com.soywiz.korio.stream.readU8_p2awyq$;
  var toInt = Kotlin.kotlin.text.toInt_pdl1vz$;
  var toDouble = Kotlin.kotlin.text.toDouble_pdl1vz$;
  var sliceWithStart = $module$korio_js.com.soywiz.korio.stream.sliceWithStart_gezhyr$;
  var readStringz_0 = $module$korio_js.com.soywiz.korio.stream.readStringz_4zsegu$;
  var sliceWithSize = $module$korio_js.com.soywiz.korio.stream.sliceWithSize_1r8368$;
  var readSlice = $module$korio_js.com.soywiz.korio.stream.readSlice_gezhyr$;
  var readBytesExact = $module$korio_js.com.soywiz.korio.stream.readBytesExact_a0g59h$;
  var readString = $module$korio_js.com.soywiz.korio.stream.readString_6ey4ts$;
  var copyOf = Kotlin.kotlin.collections.copyOf_mrm5p$;
  var toByte = Kotlin.toByte;
  var indexOf = Kotlin.kotlin.collections.indexOf_jlnu8a$;
  var UByteArray = $module$kmem_js.com.soywiz.kmem.UByteArray;
  var sliceWithSize_0 = $module$korio_js.com.soywiz.korio.stream.sliceWithSize_acdave$;
  var readStringz_1 = $module$korio_js.com.soywiz.korio.stream.readStringz_6ey4ts$;
  var readUByteArray = $module$korio_js.com.soywiz.korio.stream.readUByteArray_xpzb7k$;
  var readS16_le_0 = $module$korio_js.com.soywiz.korio.stream.readS16_le_p2awyq$;
  var Flags = $module$korio_js.com.soywiz.korio.util.Flags;
  var NumericEnum = $module$korio_js.com.soywiz.korio.util.NumericEnum;
  var toByteArray = $module$korio_js.com.soywiz.korio.lang.toByteArray_7jlb4b$;
  var join = $module$korio_js.com.soywiz.korio.util.join_q9e4xk$;
  var last = Kotlin.kotlin.collections.last_2p1efm$;
  var nextAlignedTo = $module$korma_js.com.soywiz.korma.numeric.nextAlignedTo_dqglrj$;
  var until_0 = Kotlin.kotlin.ranges.until_ebnic$;
  var Error_init = Kotlin.kotlin.Error_init_pdl1vj$;
  var copyTo = $module$korio_js.com.soywiz.korio.stream.copyTo_y2f6oo$;
  var readAll_0 = $module$korio_js.com.soywiz.korio.stream.readAll_ucmi9i$;
  var slice = $module$korio_js.com.soywiz.korio.stream.slice_i2r7m7$;
  var write32_le = $module$korio_js.com.soywiz.korio.stream.write32_le_n5df9z$;
  var first = Kotlin.kotlin.collections.first_2p1efm$;
  var copyOf_0 = Kotlin.kotlin.collections.copyOf_m2jy6x$;
  var toShort = Kotlin.toShort;
  var FastMemory = $module$kmem_js.com.soywiz.kmem.FastMemory;
  var ColorFormat16 = $module$korim_js.com.soywiz.korim.color.ColorFormat16;
  var ColorFormatBase = $module$korim_js.com.soywiz.korim.color.ColorFormatBase;
  var ColorFormatBase$Mixin = $module$korim_js.com.soywiz.korim.color.ColorFormatBase.Mixin;
  var IntArrayList = $module$kds_js.com.soywiz.kds.IntArrayList;
  var contentHashCode = Kotlin.arrayHashCode;
  var extractScaledf01 = $module$kmem_js.com.soywiz.kmem.extractScaledf01_e4yvb3$;
  var arraycopy_1 = $module$kmem_js.com.soywiz.kmem.arraycopy_lvhpry$;
  var nextAlignedTo_0 = $module$korio_js.com.soywiz.korio.util.nextAlignedTo_dqglrj$;
  var toList_1 = Kotlin.kotlin.collections.toList_rjqryz$;
  var skipToAlign = $module$korio_js.com.soywiz.korio.stream.skipToAlign_hsu5ns$;
  var readS8 = $module$korio_js.com.soywiz.korio.stream.readS8_p2awyq$;
  var readF32_le = $module$korio_js.com.soywiz.korio.stream.readF32_le_p2awyq$;
  var toList_2 = Kotlin.kotlin.collections.toList_us0mfu$;
  var toList_3 = Kotlin.kotlin.collections.toList_7wnvza$;
  var Continuation = Kotlin.kotlin.coroutines.experimental.Continuation;
  var IntMap_init = $module$kds_js.com.soywiz.kds.IntMap_init_42wstk$;
  var Signal = $module$korio_js.com.soywiz.korio.async.Signal;
  var sleep_0 = $module$korio_js.com.soywiz.korio.async.sleep_3e9wbq$;
  var go_1 = $module$korio_js.com.soywiz.korio.async.go_o1g0bv$;
  var MemoryVfsMix = $module$korio_js.com.soywiz.korio.vfs.MemoryVfsMix_t3okmp$;
  var MemoryVfs = $module$korio_js.com.soywiz.korio.vfs.MemoryVfs_r2g07k$;
  var throwCCE = Kotlin.throwCCE;
  var contains = Kotlin.kotlin.text.contains_sgbm27$;
  var startsWith_0 = Kotlin.kotlin.text.startsWith_sgbm27$;
  var Pool_init = $module$kds_js.com.soywiz.kds.Pool_init_rz0iom$;
  var LinkedHashMap = Kotlin.kotlin.collections.LinkedHashMap;
  var splice = $module$kds_js.com.soywiz.kds.splice_b7gcku$;
  var reduceAcumulate = $module$kds_js.com.soywiz.kds.reduceAcumulate_l1hrho$;
  var distinct = Kotlin.kotlin.collections.distinct_7wnvza$;
  var sorted = Kotlin.kotlin.collections.sorted_exjks8$;
  var firstOrNull_0 = Kotlin.kotlin.collections.firstOrNull_2p1efm$;
  var getOrNull = Kotlin.kotlin.collections.getOrNull_yzln2o$;
  var first_0 = Kotlin.kotlin.collections.first_7wnvza$;
  var Extra$Property = $module$kds_js.com.soywiz.kds.Extra.Property;
  var numberToDouble = Kotlin.numberToDouble;
  var DateTime = $module$klock_js.com.soywiz.klock.DateTime;
  var replace_0 = Kotlin.kotlin.text.replace_680rmw$;
  var VfsOpenMode = $module$korio_js.com.soywiz.korio.vfs.VfsOpenMode;
  var get_createDate = $module$korio_js.com.soywiz.korio.vfs.get_createDate_9ayeyb$;
  var get_lastAccessDate = $module$korio_js.com.soywiz.korio.vfs.get_lastAccessDate_9ayeyb$;
  var get_modifiedDate = $module$korio_js.com.soywiz.korio.vfs.get_modifiedDate_9ayeyb$;
  var toString_0 = $module$korio_js.com.soywiz.korio.lang.toString_5kit73$;
  var toList_4 = $module$korio_js.com.soywiz.korio.async.toList_otmutl$;
  var spawn = $module$korio_js.com.soywiz.korio.async.spawn_lnyleu$;
  var until_1 = Kotlin.kotlin.ranges.until_2p08ub$;
  var readByteArray = $module$kmem_js.com.soywiz.kmem.readByteArray_ietg8x$;
  var print = Kotlin.kotlin.io.print_s8jyv4$;
  var asVfsFile = $module$korio_js.com.soywiz.korio.stream.asVfsFile_igl5gt$;
  var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_ww73n8$;
  var IntRange = Kotlin.kotlin.ranges.IntRange;
  var MtRand_init = $module$korma_js.com.soywiz.korma.random.MtRand_init_za3lpa$;
  var Atrac3plusDecoder = $module$korau_atrac3plus_js.com.soywiz.korau.format.atrac3plus.Atrac3plusDecoder;
  var util_0 = $module$korau_atrac3plus_js.com.soywiz.korau.format.atrac3plus.util;
  var Atrac3PlusUtil$AtracFileInfo = $module$korau_atrac3plus_js.com.soywiz.korau.format.atrac3plus.util.Atrac3PlusUtil.AtracFileInfo;
  var toIntCeil = $module$korio_js.com.soywiz.korio.util.toIntCeil_yrwdxr$;
  var NativeAudioStream = $module$korau_js.com.soywiz.korau.sound.NativeAudioStream;
  var arraycopy_2 = $module$kmem_js.com.soywiz.kmem.arraycopy_ai5qaq$;
  var addSamples = $module$korau_js.com.soywiz.korau.sound.addSamples_ippixz$;
  var Month = $module$klock_js.com.soywiz.klock.Month;
  var clamp_0 = $module$korio_js.com.soywiz.korio.util.clamp_e4yvb3$;
  var getOrNull_0 = Kotlin.kotlin.collections.getOrNull_8ujjk8$;
  var withIndex_0 = Kotlin.kotlin.collections.withIndex_us0mfu$;
  var get_indices = Kotlin.kotlin.collections.get_indices_m7z4lg$;
  var CancellationException = $module$korio_js.com.soywiz.korio.CancellationException;
  var arrayListOf = Kotlin.kotlin.collections.arrayListOf_i5x0yv$;
  var get_0 = $module$korio_js.com.soywiz.korio.serialization.xml.get_h00kq4$;
  var parseInt = $module$korio_js.com.soywiz.korio.util.parseInt_pdl1vz$;
  var slice_0 = $module$korio_js.com.soywiz.korio.stream.slice_ucmi9i$;
  var writeBytes = $module$korio_js.com.soywiz.korio.stream.writeBytes_o1e1if$;
  var AES = $module$krypto_js.com.soywiz.krypto.AES;
  var readBytes = $module$korio_js.com.soywiz.korio.stream.readBytes_xpzb7k$;
  var skip = $module$korio_js.com.soywiz.korio.stream.skip_hsu5ns$;
  var hashMapOf = Kotlin.kotlin.collections.hashMapOf_qfcya0$;
  var reverseBytes = $module$korio_js.com.soywiz.korio.math.reverseBytes_s8ev3n$;
  var write32_be = $module$kmem_js.com.soywiz.kmem.write32_be_ietg8x$;
  var arraycopy_3 = $module$kmem_js.com.soywiz.kmem.arraycopy_mwgkm6$;
  var SyncStreamBase = $module$korio_js.com.soywiz.korio.stream.SyncStreamBase;
  var SyncStream = $module$korio_js.com.soywiz.korio.stream.SyncStream;
  var ByteArrayBuilderSmall_init = $module$korio_js.com.soywiz.korio.stream.ByteArrayBuilderSmall_init_za3lpa$;
  var toSyncStream = $module$korio_js.com.soywiz.korio.stream.toSyncStream_wrqxjw$;
  var LocalVfs = $module$korio_js.com.soywiz.korio.vfs.LocalVfs_61zpoe$;
  var AtomicInteger = $module$korio_js.com.soywiz.korio.lang.AtomicInteger;
  var ProduceConsumer = $module$korio_js.com.soywiz.korio.async.ProduceConsumer;
  var hashCode = Kotlin.hashCode;
  var readS32_le_1 = $module$kmem_js.com.soywiz.kmem.readS32_le_mrm5p$;
  var write32_le_0 = $module$kmem_js.com.soywiz.kmem.write32_le_ietg8x$;
  var List = Kotlin.kotlin.collections.List;
  var Map = Kotlin.kotlin.collections.Map;
  var numberToLong = Kotlin.numberToLong;
  var toLongOrNull = Kotlin.kotlin.text.toLongOrNull_pdl1vz$;
  var toDoubleOrNull = Kotlin.kotlin.text.toDoubleOrNull_pdl1vz$;
  var Iterable = Kotlin.kotlin.collections.Iterable;
  var waitOne = $module$korio_js.com.soywiz.korio.async.waitOne_b1yv1r$;
  var toRawBits = Kotlin.floatToRawBits;
  var reinterpretAsFloat = $module$korma_js.com.soywiz.korma.math.reinterpretAsFloat_s8ev3n$;
  var reinterpretAsInt = $module$korma_js.com.soywiz.korma.math.reinterpretAsInt_81szk$;
  var first_1 = Kotlin.kotlin.collections.first_us0mfu$;
  var min = Kotlin.kotlin.collections.min_exjks8$;
  var max = Kotlin.kotlin.collections.max_exjks8$;
  var copyOf_1 = Kotlin.kotlin.collections.copyOf_c03ot6$;
  var triangle = $module$korma_js.com.soywiz.korma.geom.triangle;
  var Closeable = $module$korio_js.com.soywiz.korio.lang.Closeable;
  var LinkedList_init = $module$kds_js.com.soywiz.kds.LinkedList_init_287e2$;
  var get_eventLoop = $module$korio_js.com.soywiz.korio.async.get_eventLoop_45jet4$;
  var Promise$Deferred = $module$korio_js.com.soywiz.korio.async.Promise.Deferred;
  var get_eventLoop_0 = $module$korio_js.com.soywiz.korio.async.get_eventLoop_nrqsqe$;
  var MemorySyncStream = $module$korio_js.com.soywiz.korio.stream.MemorySyncStream_fqrh44$;
  var toByteArray_0 = $module$korio_js.com.soywiz.korio.stream.toByteArray_ucmi9i$;
  var sum_0 = Kotlin.kotlin.collections.sum_plj8ka$;
  var write8 = $module$korio_js.com.soywiz.korio.stream.write8_n5df9z$;
  var write16_le = $module$korio_js.com.soywiz.korio.stream.write16_le_n5df9z$;
  var write32_be_0 = $module$korio_js.com.soywiz.korio.stream.write32_be_n5df9z$;
  var readS32_be = $module$korio_js.com.soywiz.korio.stream.readS32_be_p2awyq$;
  var write64_le = $module$korio_js.com.soywiz.korio.stream.write64_le_7bhjh0$;
  var readS64_le_0 = $module$korio_js.com.soywiz.korio.stream.readS64_le_p2awyq$;
  var writeF32_le = $module$korio_js.com.soywiz.korio.stream.writeF32_le_dpexvo$;
  var writeStringz = $module$korio_js.com.soywiz.korio.stream.writeStringz_61lhbb$;
  var writeStringz_0 = $module$korio_js.com.soywiz.korio.stream.writeStringz_5iah4l$;
  var writeShortArray_le = $module$korio_js.com.soywiz.korio.stream.writeShortArray_le_93fq7f$;
  var readShortArray_le = $module$korio_js.com.soywiz.korio.stream.readShortArray_le_xpzb7k$;
  var writeCharArray_le = $module$korio_js.com.soywiz.korio.stream.writeCharArray_le_zattpx$;
  var readCharArray_le = $module$korio_js.com.soywiz.korio.stream.readCharArray_le_xpzb7k$;
  var writeIntArray_le = $module$korio_js.com.soywiz.korio.stream.writeIntArray_le_4munlu$;
  var readIntArray_le_0 = $module$korio_js.com.soywiz.korio.stream.readIntArray_le_xpzb7k$;
  var Http$Http$Headers_init = $module$korio_js.com.soywiz.korio.net.http.Http.Headers_init_9ih0sy$;
  var Http$Method = $module$korio_js.com.soywiz.korio.net.http.Http.Method;
  var toJsonUntyped = $module$korio_js.com.soywiz.korio.serialization.json.toJsonUntyped_3huzfx$;
  var openAsync_0 = $module$korio_js.com.soywiz.korio.stream.openAsync_7jlb4b$;
  var Http$HttpException = $module$korio_js.com.soywiz.korio.net.http.Http.HttpException;
  var json = $module$korio_js.com.soywiz.korio.serialization.json;
  var mapOf_0 = Kotlin.kotlin.collections.mapOf_x2b85n$;
  var createHttpClient = $module$korio_js.com.soywiz.korio.net.http.createHttpClient;
  var toAsync = $module$korio_js.com.soywiz.korio.async.toAsync_7wnvza$;
  var AsyncQueue = $module$korio_js.com.soywiz.korio.async.AsyncQueue;
  var Vfs = $module$korio_js.com.soywiz.korio.vfs.Vfs;
  var Korio = $module$korio_js.com.soywiz.korio.Korio_6q182l$;
  var KMutableProperty0 = Kotlin.kotlin.reflect.KMutableProperty0;
  var contains_0 = Kotlin.kotlin.collections.contains_mjy6jw$;
  var joinToString_0 = Kotlin.kotlin.collections.joinToString_cgipc5$;
  var RuntimeException_init = Kotlin.kotlin.RuntimeException_init_pdl1vj$;
  var toIntOrNull_0 = Kotlin.kotlin.text.toIntOrNull_6ic1pp$;
  var StrReader = $module$korio_js.com.soywiz.korio.util.StrReader;
  var isLetterDigitOrUnderscore = $module$korio_js.com.soywiz.korio.util.isLetterDigitOrUnderscore_myv2d0$;
  var isDigit = $module$korio_js.com.soywiz.korio.util.isDigit_myv2d0$;
  var unescape = $module$korio_js.com.soywiz.korio.util.unescape_pdl1vz$;
  var ListReader = $module$kds_js.com.soywiz.kds.ListReader;
  var setOf = Kotlin.kotlin.collections.setOf_i5x0yv$;
  var plus_1 = Kotlin.kotlin.collections.plus_q4559j$;
  var noImpl = $module$korio_js.com.soywiz.korio.error.noImpl_61zpoe$;
  var toNumber = $module$korio_js.com.soywiz.korio.util.toNumber_pdl1vz$;
  var toList_5 = Kotlin.kotlin.text.toList_gw00vp$;
  var toList_6 = Kotlin.kotlin.collections.toList_abgq59$;
  var Set = Kotlin.kotlin.collections.Set;
  var quote = $module$korio_js.com.soywiz.korio.util.quote_5cw0du$;
  var toInt_0 = Kotlin.kotlin.text.toInt_6ic1pp$;
  var asyncGenerate = $module$korio_js.com.soywiz.korio.async.asyncGenerate_33q1hl$;
  var withCoroutineContext = $module$korio_js.com.soywiz.korio.coroutine.withCoroutineContext_3hy5wj$;
  var sliceWithSize_1 = $module$korio_js.com.soywiz.korio.stream.sliceWithSize_i9mzv9$;
  var readAvailable = $module$korio_js.com.soywiz.korio.stream.readAvailable_yjldv$;
  var get_eof = $module$korio_js.com.soywiz.korio.stream.get_eof_ucmi9i$;
  var split_0 = Kotlin.kotlin.text.split_ip8yn$;
  var IllegalStateException_init = Kotlin.kotlin.IllegalStateException_init_pdl1vj$;
  var trimStart = Kotlin.kotlin.text.trimStart_wqw3xr$;
  var toLongArray = Kotlin.kotlin.collections.toLongArray_558emf$;
  var readS16_be = $module$korio_js.com.soywiz.korio.stream.readS16_be_p2awyq$;
  var readBytesExact_0 = $module$korio_js.com.soywiz.korio.stream.readBytesExact_xpzb7k$;
  var readStream = $module$korio_js.com.soywiz.korio.stream.readStream_gezhyr$;
  var substringBefore = Kotlin.kotlin.text.substringBefore_8cymmc$;
  var readStream_0 = $module$korio_js.com.soywiz.korio.stream.readStream_hsu5ns$;
  var removeAll = Kotlin.kotlin.collections.removeAll_qafx1e$;
  var FileNotFoundException = $module$korio_js.com.soywiz.korio.FileNotFoundException;
  var Vfs$Proxy = $module$korio_js.com.soywiz.korio.vfs.Vfs.Proxy;
  var stream = $module$korio_js.com.soywiz.korio.stream;
  var toIntClamp = $module$korio_js.com.soywiz.korio.util.toIntClamp_jfhjuu$;
  var indexOf_0 = $module$kmem_js.com.soywiz.kmem.indexOf_ndt7zj$;
  var IllegalArgumentException_init = Kotlin.kotlin.IllegalArgumentException_init_pdl1vj$;
  var endsWith = Kotlin.kotlin.text.endsWith_7epoxm$;
  var substringBeforeLast = Kotlin.kotlin.text.substringBeforeLast_8cymmc$;
  var substringAfterLast = Kotlin.kotlin.text.substringAfterLast_8cymmc$;
  var toUInt = $module$kmem_js.com.soywiz.kmem.toUInt_s8ev3n$;
  var sliceWithStart_0 = $module$korio_js.com.soywiz.korio.stream.sliceWithStart_dqczag$;
  var IOException = $module$korio_js.com.soywiz.korio.IOException;
  var slice_1 = $module$korio_js.com.soywiz.korio.stream.slice_g5ykjz$;
  var readS32_be_0 = $module$korio_js.com.soywiz.korio.stream.readS32_be_yjldv$;
  var readU16_le_0 = $module$korio_js.com.soywiz.korio.stream.readU16_le_yjldv$;
  var readString_0 = $module$korio_js.com.soywiz.korio.stream.readString_4xit9n$;
  var readBytes_0 = $module$korio_js.com.soywiz.korio.stream.readBytes_a0g59h$;
  var readSlice_0 = $module$korio_js.com.soywiz.korio.stream.readSlice_dqczag$;
  var KorioNative$Inflater = $module$korio_js.com.soywiz.korio.KorioNative.Inflater;
  var InflateAsyncStream = $module$korio_js.com.soywiz.korio.vfs.InflateAsyncStream;
  var getBits = $module$kmem_js.com.soywiz.kmem.getBits_e4yvb3$;
  var korioStartCoroutine = $module$korio_js.com.soywiz.korio.coroutine.korioStartCoroutine_xtwlez$;
  AGRenderer$RenderMode.prototype = Object.create(Enum.prototype);
  AGRenderer$RenderMode.prototype.constructor = AGRenderer$RenderMode;
  DebugScene$GprView.prototype = Object.create(Container.prototype);
  DebugScene$GprView.prototype.constructor = DebugScene$GprView;
  DebugScene$GprListView.prototype = Object.create(Container.prototype);
  DebugScene$GprListView.prototype.constructor = DebugScene$GprListView;
  DebugScene$HexdumpLineView.prototype = Object.create(Container.prototype);
  DebugScene$HexdumpLineView.prototype.constructor = DebugScene$HexdumpLineView;
  DebugScene$HexdumpView.prototype = Object.create(Container.prototype);
  DebugScene$HexdumpView.prototype.constructor = DebugScene$HexdumpView;
  DebugScene$DissasemblerLineView.prototype = Object.create(Container.prototype);
  DebugScene$DissasemblerLineView.prototype.constructor = DebugScene$DissasemblerLineView;
  DebugScene$DissasemblerView.prototype = Object.create(Container.prototype);
  DebugScene$DissasemblerView.prototype.constructor = DebugScene$DissasemblerView;
  DebugScene$ThreadView.prototype = Object.create(Container.prototype);
  DebugScene$ThreadView.prototype.constructor = DebugScene$ThreadView;
  DebugScene$ThreadListView.prototype = Object.create(Container.prototype);
  DebugScene$ThreadListView.prototype.constructor = DebugScene$ThreadListView;
  DebugScene.prototype = Object.create(Scene.prototype);
  DebugScene.prototype.constructor = DebugScene;
  evaluateExpr$ObjectLiteral.prototype = Object.create(ExprNode$EvalContext.prototype);
  evaluateExpr$ObjectLiteral.prototype.constructor = evaluateExpr$ObjectLiteral;
  KpspemuModule.prototype = Object.create(Module.prototype);
  KpspemuModule.prototype.constructor = KpspemuModule;
  SceneWithProcess.prototype = Object.create(Scene.prototype);
  SceneWithProcess.prototype.constructor = SceneWithProcess;
  KpspemuMainScene$resetEmulator$ObjectLiteral.prototype = Object.create(GpuRenderer.prototype);
  KpspemuMainScene$resetEmulator$ObjectLiteral.prototype.constructor = KpspemuMainScene$resetEmulator$ObjectLiteral;
  KpspemuMainScene$createEmulatorWithExe$ObjectLiteral.prototype = Object.create(LoadProcess.prototype);
  KpspemuMainScene$createEmulatorWithExe$ObjectLiteral.prototype.constructor = KpspemuMainScene$createEmulatorWithExe$ObjectLiteral;
  KpspemuMainScene$sceneInit$ObjectLiteral.prototype = Object.create(View.prototype);
  KpspemuMainScene$sceneInit$ObjectLiteral.prototype.constructor = KpspemuMainScene$sceneInit$ObjectLiteral;
  KpspemuMainScene.prototype = Object.create(SceneWithProcess.prototype);
  KpspemuMainScene.prototype.constructor = KpspemuMainScene;
  ChargingEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  ChargingEnum$Companion.prototype.constructor = ChargingEnum$Companion;
  ChargingEnum.prototype = Object.create(Enum.prototype);
  ChargingEnum.prototype.constructor = ChargingEnum;
  BatteryStatusEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  BatteryStatusEnum$Companion.prototype.constructor = BatteryStatusEnum$Companion;
  BatteryStatusEnum.prototype = Object.create(Enum.prototype);
  BatteryStatusEnum.prototype.constructor = BatteryStatusEnum;
  EmulatorControlFlowException.prototype = Object.create(Exception.prototype);
  EmulatorControlFlowException.prototype.constructor = EmulatorControlFlowException;
  BreakpointException.prototype = Object.create(EmulatorControlFlowException.prototype);
  BreakpointException.prototype.constructor = BreakpointException;
  CpuBreakException.prototype = Object.create(EmulatorControlFlowException.prototype);
  CpuBreakException.prototype.constructor = CpuBreakException;
  VfpuSourceTargetPrefix.prototype = Object.create(VfpuPrefix.prototype);
  VfpuSourceTargetPrefix.prototype.constructor = VfpuSourceTargetPrefix;
  VfpuDestinationPrefix.prototype = Object.create(VfpuPrefix.prototype);
  VfpuDestinationPrefix.prototype.constructor = VfpuDestinationPrefix;
  VfpuSingleRegisters.prototype = Object.create(Enum.prototype);
  VfpuSingleRegisters.prototype.constructor = VfpuSingleRegisters;
  VfpuPairRegisters.prototype = Object.create(Enum.prototype);
  VfpuPairRegisters.prototype.constructor = VfpuPairRegisters;
  VfpuTripletRegisters.prototype = Object.create(Enum.prototype);
  VfpuTripletRegisters.prototype.constructor = VfpuTripletRegisters;
  InstructionEvaluator.prototype = Object.create(InstructionDecoder.prototype);
  InstructionEvaluator.prototype.constructor = InstructionEvaluator;
  InstructionOpcodeDecoder$ResultInstructionEvaluator.prototype = Object.create(InstructionEvaluator.prototype);
  InstructionOpcodeDecoder$ResultInstructionEvaluator.prototype.constructor = InstructionOpcodeDecoder$ResultInstructionEvaluator;
  Disassembler.prototype = Object.create(InstructionDecoder.prototype);
  Disassembler.prototype.constructor = Disassembler;
  BaseDynarecMethodBuilder.prototype = Object.create(InstructionEvaluator.prototype);
  BaseDynarecMethodBuilder.prototype.constructor = BaseDynarecMethodBuilder;
  DynarekMethodBuilder.prototype = Object.create(BaseDynarecMethodBuilder.prototype);
  DynarekMethodBuilder.prototype.constructor = DynarekMethodBuilder;
  InstructionInterpreter$VfpuConstants.prototype = Object.create(Enum.prototype);
  InstructionInterpreter$VfpuConstants.prototype.constructor = InstructionInterpreter$VfpuConstants;
  InstructionInterpreter.prototype = Object.create(InstructionEvaluator.prototype);
  InstructionInterpreter.prototype.constructor = InstructionInterpreter;
  PspCtrlButtons.prototype = Object.create(Enum.prototype);
  PspCtrlButtons.prototype.constructor = PspCtrlButtons;
  Cso$open$ObjectLiteral.prototype = Object.create(AsyncStreamBase.prototype);
  Cso$open$ObjectLiteral.prototype.constructor = Cso$open$ObjectLiteral;
  PspFileFormat.prototype = Object.create(Enum.prototype);
  PspFileFormat.prototype.constructor = PspFileFormat;
  ElfType.prototype = Object.create(Enum.prototype);
  ElfType.prototype.constructor = ElfType;
  ElfMachine.prototype = Object.create(Enum.prototype);
  ElfMachine.prototype.constructor = ElfMachine;
  ElfPspModuleFlags.prototype = Object.create(Enum.prototype);
  ElfPspModuleFlags.prototype.constructor = ElfPspModuleFlags;
  ElfPspLibFlags.prototype = Object.create(Enum.prototype);
  ElfPspLibFlags.prototype.constructor = ElfPspLibFlags;
  ElfPspModuleNids.prototype = Object.create(Enum.prototype);
  ElfPspModuleNids.prototype.constructor = ElfPspModuleNids;
  ElfRelocType.prototype = Object.create(Enum.prototype);
  ElfRelocType.prototype.constructor = ElfRelocType;
  PrimAction.prototype = Object.create(Enum.prototype);
  PrimAction.prototype.constructor = PrimAction;
  ListSyncKind.prototype = Object.create(Enum.prototype);
  ListSyncKind.prototype.constructor = ListSyncKind;
  CullingDirection$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  CullingDirection$Companion.prototype.constructor = CullingDirection$Companion;
  CullingDirection.prototype = Object.create(Enum.prototype);
  CullingDirection.prototype.constructor = CullingDirection;
  SyncType$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  SyncType$Companion.prototype.constructor = SyncType$Companion;
  SyncType.prototype = Object.create(Enum.prototype);
  SyncType.prototype.constructor = SyncType;
  DisplayListStatus$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  DisplayListStatus$Companion.prototype.constructor = DisplayListStatus$Companion;
  DisplayListStatus.prototype = Object.create(Enum.prototype);
  DisplayListStatus.prototype.constructor = DisplayListStatus;
  IndexEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  IndexEnum$Companion.prototype.constructor = IndexEnum$Companion;
  IndexEnum.prototype = Object.create(Enum.prototype);
  IndexEnum.prototype.constructor = IndexEnum;
  NumericEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  NumericEnum$Companion.prototype.constructor = NumericEnum$Companion;
  NumericEnum_0.prototype = Object.create(Enum.prototype);
  NumericEnum_0.prototype.constructor = NumericEnum_0;
  ColorEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  ColorEnum$Companion.prototype.constructor = ColorEnum$Companion;
  ColorEnum.prototype = Object.create(Enum.prototype);
  ColorEnum.prototype.constructor = ColorEnum;
  LightTypeEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  LightTypeEnum$Companion.prototype.constructor = LightTypeEnum$Companion;
  LightTypeEnum.prototype = Object.create(Enum.prototype);
  LightTypeEnum.prototype.constructor = LightTypeEnum;
  LightModelEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  LightModelEnum$Companion.prototype.constructor = LightModelEnum$Companion;
  LightModelEnum.prototype = Object.create(Enum.prototype);
  LightModelEnum.prototype.constructor = LightModelEnum;
  TextureProjectionMapMode$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  TextureProjectionMapMode$Companion.prototype.constructor = TextureProjectionMapMode$Companion;
  TextureProjectionMapMode.prototype = Object.create(Enum.prototype);
  TextureProjectionMapMode.prototype.constructor = TextureProjectionMapMode;
  TextureMapMode$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  TextureMapMode$Companion.prototype.constructor = TextureMapMode$Companion;
  TextureMapMode.prototype = Object.create(Enum.prototype);
  TextureMapMode.prototype.constructor = TextureMapMode;
  TextureLevelMode$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  TextureLevelMode$Companion.prototype.constructor = TextureLevelMode$Companion;
  TextureLevelMode.prototype = Object.create(Enum.prototype);
  TextureLevelMode.prototype.constructor = TextureLevelMode;
  TestFunctionEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  TestFunctionEnum$Companion.prototype.constructor = TestFunctionEnum$Companion;
  TestFunctionEnum.prototype = Object.create(Enum.prototype);
  TestFunctionEnum.prototype.constructor = TestFunctionEnum;
  ShadingModelEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  ShadingModelEnum$Companion.prototype.constructor = ShadingModelEnum$Companion;
  ShadingModelEnum.prototype = Object.create(Enum.prototype);
  ShadingModelEnum.prototype.constructor = ShadingModelEnum;
  GuBlendingFactor$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  GuBlendingFactor$Companion.prototype.constructor = GuBlendingFactor$Companion;
  GuBlendingFactor.prototype = Object.create(Enum.prototype);
  GuBlendingFactor.prototype.constructor = GuBlendingFactor;
  GuBlendingEquation$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  GuBlendingEquation$Companion.prototype.constructor = GuBlendingEquation$Companion;
  GuBlendingEquation.prototype = Object.create(Enum.prototype);
  GuBlendingEquation.prototype.constructor = GuBlendingEquation;
  StencilOperationEnum$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  StencilOperationEnum$Companion.prototype.constructor = StencilOperationEnum$Companion;
  StencilOperationEnum.prototype = Object.create(Enum.prototype);
  StencilOperationEnum.prototype.constructor = StencilOperationEnum;
  WrapMode$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  WrapMode$Companion.prototype.constructor = WrapMode$Companion;
  WrapMode.prototype = Object.create(Enum.prototype);
  WrapMode.prototype.constructor = WrapMode;
  TextureEffect$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  TextureEffect$Companion.prototype.constructor = TextureEffect$Companion;
  TextureEffect.prototype = Object.create(Enum.prototype);
  TextureEffect.prototype.constructor = TextureEffect;
  TextureFilter$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  TextureFilter$Companion.prototype.constructor = TextureFilter$Companion;
  TextureFilter.prototype = Object.create(Enum.prototype);
  TextureFilter.prototype.constructor = TextureFilter;
  TextureColorComponent$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  TextureColorComponent$Companion.prototype.constructor = TextureColorComponent$Companion;
  TextureColorComponent.prototype = Object.create(Enum.prototype);
  TextureColorComponent.prototype.constructor = TextureColorComponent;
  PrimitiveType$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  PrimitiveType$Companion.prototype.constructor = PrimitiveType$Companion;
  PrimitiveType.prototype = Object.create(Enum.prototype);
  PrimitiveType.prototype.constructor = PrimitiveType;
  PspRGB_565.prototype = Object.create(ColorFormat16.prototype);
  PspRGB_565.prototype.constructor = PspRGB_565;
  PspRGBA_5551.prototype = Object.create(ColorFormat16.prototype);
  PspRGBA_5551.prototype.constructor = PspRGBA_5551;
  PixelFormat$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  PixelFormat$Companion.prototype.constructor = PixelFormat$Companion;
  PixelFormat.prototype = Object.create(Enum.prototype);
  PixelFormat.prototype.constructor = PixelFormat;
  DummyGpuRenderer.prototype = Object.create(GpuRenderer.prototype);
  DummyGpuRenderer.prototype.constructor = DummyGpuRenderer;
  SceSubmodule.prototype = Object.create(BaseSceModule.prototype);
  SceSubmodule.prototype.constructor = SceSubmodule;
  SceModule.prototype = Object.create(BaseSceModule.prototype);
  SceModule.prototype.constructor = SceModule;
  SceKernelException.prototype = Object.create(Exception.prototype);
  SceKernelException.prototype.constructor = SceKernelException;
  CallbackManager.prototype = Object.create(Manager.prototype);
  CallbackManager.prototype.constructor = CallbackManager;
  PspCallback.prototype = Object.create(Resource.prototype);
  PspCallback.prototype.constructor = PspCallback;
  SceIoStat$Companion.prototype = Object.create(Struct.prototype);
  SceIoStat$Companion.prototype.constructor = SceIoStat$Companion;
  HleIoDirent$Companion.prototype = Object.create(Struct.prototype);
  HleIoDirent$Companion.prototype.constructor = HleIoDirent$Companion;
  ResourceNotFoundException.prototype = Object.create(Exception.prototype);
  ResourceNotFoundException.prototype.constructor = ResourceNotFoundException;
  MemoryAnchor.prototype = Object.create(Enum.prototype);
  MemoryAnchor.prototype.constructor = MemoryAnchor;
  OutOfMemoryError.prototype = Object.create(Exception.prototype);
  OutOfMemoryError.prototype.constructor = OutOfMemoryError;
  ThreadManager.prototype = Object.create(Manager.prototype);
  ThreadManager.prototype.constructor = ThreadManager;
  WaitObject$COROUTINE.prototype = Object.create(WaitObject.prototype);
  WaitObject$COROUTINE.prototype.constructor = WaitObject$COROUTINE;
  WaitObject$VBLANK.prototype = Object.create(WaitObject.prototype);
  WaitObject$VBLANK.prototype.constructor = WaitObject$VBLANK;
  PspThread$Phase.prototype = Object.create(Enum.prototype);
  PspThread$Phase.prototype.constructor = PspThread$Phase;
  PspThread.prototype = Object.create(Resource.prototype);
  PspThread.prototype.constructor = PspThread;
  SceKernelThreadInfo$Companion.prototype = Object.create(Struct.prototype);
  SceKernelThreadInfo$Companion.prototype.constructor = SceKernelThreadInfo$Companion;
  ScePspDateTime$Companion.prototype = Object.create(Struct.prototype);
  ScePspDateTime$Companion.prototype.constructor = ScePspDateTime$Companion;
  ExceptionManagerForKernel.prototype = Object.create(SceModule.prototype);
  ExceptionManagerForKernel.prototype.constructor = ExceptionManagerForKernel;
  InterruptManager_0.prototype = Object.create(SceModule.prototype);
  InterruptManager_0.prototype.constructor = InterruptManager_0;
  IoFileMgrForUser.prototype = Object.create(SceModule.prototype);
  IoFileMgrForUser.prototype.constructor = IoFileMgrForUser;
  check$ObjectLiteral.prototype = Object.create(AsyncStreamBase.prototype);
  check$ObjectLiteral.prototype.constructor = check$ObjectLiteral;
  cached$ObjectLiteral.prototype = Object.create(AsyncStreamBase.prototype);
  cached$ObjectLiteral.prototype.constructor = cached$ObjectLiteral;
  Kernel_Library.prototype = Object.create(SceModule.prototype);
  Kernel_Library.prototype.constructor = Kernel_Library;
  LoadCoreForKernel.prototype = Object.create(SceModule.prototype);
  LoadCoreForKernel.prototype.constructor = LoadCoreForKernel;
  LoadExecForUser.prototype = Object.create(SceModule.prototype);
  LoadExecForUser.prototype.constructor = LoadExecForUser;
  ModuleMgrForUser.prototype = Object.create(SceModule.prototype);
  ModuleMgrForUser.prototype.constructor = ModuleMgrForUser;
  StdioForUser$StdioStream.prototype = Object.create(AsyncStreamBase.prototype);
  StdioForUser$StdioStream.prototype.constructor = StdioForUser$StdioStream;
  StdioForUser.prototype = Object.create(SceModule.prototype);
  StdioForUser.prototype.constructor = StdioForUser;
  SysMemUserForUser.prototype = Object.create(SceModule.prototype);
  SysMemUserForUser.prototype.constructor = SysMemUserForUser;
  ThreadManForUser.prototype = Object.create(SceModule.prototype);
  ThreadManForUser.prototype.constructor = ThreadManForUser;
  SceKernelSemaInfo$Companion.prototype = Object.create(Struct.prototype);
  SceKernelSemaInfo$Companion.prototype.constructor = SceKernelSemaInfo$Companion;
  K0Structure$Companion.prototype = Object.create(Struct.prototype);
  K0Structure$Companion.prototype.constructor = K0Structure$Companion;
  ThreadManForUser_Alarm.prototype = Object.create(SceSubmodule.prototype);
  ThreadManForUser_Alarm.prototype.constructor = ThreadManForUser_Alarm;
  ThreadManForUser_Callback.prototype = Object.create(SceSubmodule.prototype);
  ThreadManForUser_Callback.prototype.constructor = ThreadManForUser_Callback;
  ThreadManForUser_EventFlags.prototype = Object.create(SceSubmodule.prototype);
  ThreadManForUser_EventFlags.prototype.constructor = ThreadManForUser_EventFlags;
  ThreadManForUser_Fpl.prototype = Object.create(SceSubmodule.prototype);
  ThreadManForUser_Fpl.prototype.constructor = ThreadManForUser_Fpl;
  ThreadManForUser_Mbx.prototype = Object.create(SceSubmodule.prototype);
  ThreadManForUser_Mbx.prototype.constructor = ThreadManForUser_Mbx;
  ThreadManForUser_Mutex.prototype = Object.create(SceSubmodule.prototype);
  ThreadManForUser_Mutex.prototype.constructor = ThreadManForUser_Mutex;
  ThreadManForUser_Sema$PspSemaphore.prototype = Object.create(Resource.prototype);
  ThreadManForUser_Sema$PspSemaphore.prototype.constructor = ThreadManForUser_Sema$PspSemaphore;
  ThreadManForUser_Sema$SemaphoreManager.prototype = Object.create(Manager.prototype);
  ThreadManForUser_Sema$SemaphoreManager.prototype.constructor = ThreadManForUser_Sema$SemaphoreManager;
  ThreadManForUser_Sema.prototype = Object.create(SceSubmodule.prototype);
  ThreadManForUser_Sema.prototype.constructor = ThreadManForUser_Sema;
  ThreadManForUser_Thread.prototype = Object.create(SceSubmodule.prototype);
  ThreadManForUser_Thread.prototype.constructor = ThreadManForUser_Thread;
  ThreadManForUser_Time.prototype = Object.create(SceSubmodule.prototype);
  ThreadManForUser_Time.prototype.constructor = ThreadManForUser_Time;
  ThreadManForUser_Vpl$SceKernelVplInfo$Companion.prototype = Object.create(Struct.prototype);
  ThreadManForUser_Vpl$SceKernelVplInfo$Companion.prototype.constructor = ThreadManForUser_Vpl$SceKernelVplInfo$Companion;
  ThreadManForUser_Vpl.prototype = Object.create(SceSubmodule.prototype);
  ThreadManForUser_Vpl.prototype.constructor = ThreadManForUser_Vpl;
  UtilsBase.prototype = Object.create(SceModule.prototype);
  UtilsBase.prototype.constructor = UtilsBase;
  UtilsForKernel.prototype = Object.create(UtilsBase.prototype);
  UtilsForKernel.prototype.constructor = UtilsForKernel;
  UtilsForUser.prototype = Object.create(UtilsBase.prototype);
  UtilsForUser.prototype.constructor = UtilsForUser;
  sceAtrac3plus.prototype = Object.create(SceModule.prototype);
  sceAtrac3plus.prototype.constructor = sceAtrac3plus;
  sceAudio.prototype = Object.create(SceModule.prototype);
  sceAudio.prototype.constructor = sceAudio;
  sceCtrl.prototype = Object.create(SceModule.prototype);
  sceCtrl.prototype.constructor = sceCtrl;
  sceDisplay.prototype = Object.create(SceModule.prototype);
  sceDisplay.prototype.constructor = sceDisplay;
  sceDmac.prototype = Object.create(SceModule.prototype);
  sceDmac.prototype.constructor = sceDmac;
  sceGe_user.prototype = Object.create(SceModule.prototype);
  sceGe_user.prototype.constructor = sceGe_user;
  sceHprm.prototype = Object.create(SceModule.prototype);
  sceHprm.prototype.constructor = sceHprm;
  sceImpose.prototype = Object.create(SceModule.prototype);
  sceImpose.prototype.constructor = sceImpose;
  sceMp3.prototype = Object.create(SceModule.prototype);
  sceMp3.prototype.constructor = sceMp3;
  sceMpeg.prototype = Object.create(SceModule.prototype);
  sceMpeg.prototype.constructor = sceMpeg;
  sceNet.prototype = Object.create(SceModule.prototype);
  sceNet.prototype.constructor = sceNet;
  sceNetAdhoc.prototype = Object.create(SceModule.prototype);
  sceNetAdhoc.prototype.constructor = sceNetAdhoc;
  sceNetAdhocMatching.prototype = Object.create(SceModule.prototype);
  sceNetAdhocMatching.prototype.constructor = sceNetAdhocMatching;
  sceNetAdhocctl.prototype = Object.create(SceModule.prototype);
  sceNetAdhocctl.prototype.constructor = sceNetAdhocctl;
  sceNetInet.prototype = Object.create(SceModule.prototype);
  sceNetInet.prototype.constructor = sceNetInet;
  scePower.prototype = Object.create(SceModule.prototype);
  scePower.prototype.constructor = scePower;
  sceReg.prototype = Object.create(SceModule.prototype);
  sceReg.prototype.constructor = sceReg;
  RegParam$Companion.prototype = Object.create(Struct.prototype);
  RegParam$Companion.prototype.constructor = RegParam$Companion;
  sceRtc.prototype = Object.create(SceModule.prototype);
  sceRtc.prototype.constructor = sceRtc;
  sceSasCore$WaveformEffectType$Companion.prototype = Object.create(SmallCompanion2.prototype);
  sceSasCore$WaveformEffectType$Companion.prototype.constructor = sceSasCore$WaveformEffectType$Companion;
  sceSasCore$WaveformEffectType.prototype = Object.create(Enum.prototype);
  sceSasCore$WaveformEffectType.prototype.constructor = sceSasCore$WaveformEffectType;
  sceSasCore$OutputMode$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  sceSasCore$OutputMode$Companion.prototype.constructor = sceSasCore$OutputMode$Companion;
  sceSasCore$OutputMode.prototype = Object.create(Enum.prototype);
  sceSasCore$OutputMode.prototype.constructor = sceSasCore$OutputMode;
  sceSasCore$AdsrCurveMode$Companion.prototype = Object.create(IdEnum$SmallCompanion.prototype);
  sceSasCore$AdsrCurveMode$Companion.prototype.constructor = sceSasCore$AdsrCurveMode$Companion;
  sceSasCore$AdsrCurveMode.prototype = Object.create(Enum.prototype);
  sceSasCore$AdsrCurveMode.prototype.constructor = sceSasCore$AdsrCurveMode;
  sceSasCore.prototype = Object.create(SceModule.prototype);
  sceSasCore.prototype.constructor = sceSasCore;
  sceSuspendForUser.prototype = Object.create(SceModule.prototype);
  sceSuspendForUser.prototype.constructor = sceSuspendForUser;
  sceUmdUser.prototype = Object.create(SceModule.prototype);
  sceUmdUser.prototype.constructor = sceUmdUser;
  sceUtility.prototype = Object.create(SceModule.prototype);
  sceUtility.prototype.constructor = sceUtility;
  PspLanguages$Companion.prototype = Object.create(INT32_ENUM.prototype);
  PspLanguages$Companion.prototype.constructor = PspLanguages$Companion;
  PspLanguages.prototype = Object.create(Enum.prototype);
  PspLanguages.prototype.constructor = PspLanguages;
  PspUtilitySavedataMode$Companion.prototype = Object.create(INT32_ENUM.prototype);
  PspUtilitySavedataMode$Companion.prototype.constructor = PspUtilitySavedataMode$Companion;
  PspUtilitySavedataMode.prototype = Object.create(Enum.prototype);
  PspUtilitySavedataMode.prototype.constructor = PspUtilitySavedataMode;
  PspUtilitySavedataFocus$Companion.prototype = Object.create(INT32_ENUM.prototype);
  PspUtilitySavedataFocus$Companion.prototype.constructor = PspUtilitySavedataFocus$Companion;
  PspUtilitySavedataFocus.prototype = Object.create(Enum.prototype);
  PspUtilitySavedataFocus.prototype.constructor = PspUtilitySavedataFocus;
  PspUtilityDialogCommon$Companion.prototype = Object.create(Struct.prototype);
  PspUtilityDialogCommon$Companion.prototype.constructor = PspUtilityDialogCommon$Companion;
  PspUtilitySavedataSFOParam$Companion.prototype = Object.create(Struct.prototype);
  PspUtilitySavedataSFOParam$Companion.prototype.constructor = PspUtilitySavedataSFOParam$Companion;
  PspUtilitySavedataFileData$Companion.prototype = Object.create(Struct.prototype);
  PspUtilitySavedataFileData$Companion.prototype.constructor = PspUtilitySavedataFileData$Companion;
  SceUtilitySavedataParam$Companion.prototype = Object.create(Struct.prototype);
  SceUtilitySavedataParam$Companion.prototype.constructor = SceUtilitySavedataParam$Companion;
  PspUtilityMsgDialogMode$Companion.prototype = Object.create(INT32_ENUM.prototype);
  PspUtilityMsgDialogMode$Companion.prototype.constructor = PspUtilityMsgDialogMode$Companion;
  PspUtilityMsgDialogMode.prototype = Object.create(Enum.prototype);
  PspUtilityMsgDialogMode.prototype.constructor = PspUtilityMsgDialogMode;
  PspUtilityMsgDialogOption$Companion.prototype = Object.create(INT32_ENUM.prototype);
  PspUtilityMsgDialogOption$Companion.prototype.constructor = PspUtilityMsgDialogOption$Companion;
  PspUtilityMsgDialogOption.prototype = Object.create(Enum.prototype);
  PspUtilityMsgDialogOption.prototype.constructor = PspUtilityMsgDialogOption;
  PspUtilityMsgDialogPressed$Companion.prototype = Object.create(INT32_ENUM.prototype);
  PspUtilityMsgDialogPressed$Companion.prototype.constructor = PspUtilityMsgDialogPressed$Companion;
  PspUtilityMsgDialogPressed.prototype = Object.create(Enum.prototype);
  PspUtilityMsgDialogPressed.prototype.constructor = PspUtilityMsgDialogPressed;
  DialogStepEnum$Companion.prototype = Object.create(INT32_ENUM.prototype);
  DialogStepEnum$Companion.prototype.constructor = DialogStepEnum$Companion;
  DialogStepEnum.prototype = Object.create(Enum.prototype);
  DialogStepEnum.prototype.constructor = DialogStepEnum;
  PspUtilityMsgDialogParams$Companion.prototype = Object.create(Struct.prototype);
  PspUtilityMsgDialogParams$Companion.prototype.constructor = PspUtilityMsgDialogParams$Companion;
  sceVaudio.prototype = Object.create(SceModule.prototype);
  sceVaudio.prototype.constructor = sceVaudio;
  sceWlanDrv.prototype = Object.create(SceModule.prototype);
  sceWlanDrv.prototype.constructor = sceWlanDrv;
  Kirk$KirkMode$Companion.prototype = Object.create(UINT8_ENUM.prototype);
  Kirk$KirkMode$Companion.prototype.constructor = Kirk$KirkMode$Companion;
  Kirk$KirkMode.prototype = Object.create(Enum.prototype);
  Kirk$KirkMode.prototype.constructor = Kirk$KirkMode;
  Kirk$CommandEnum$Companion.prototype = Object.create(UINT8_ENUM.prototype);
  Kirk$CommandEnum$Companion.prototype.constructor = Kirk$CommandEnum$Companion;
  Kirk$CommandEnum.prototype = Object.create(Enum.prototype);
  Kirk$CommandEnum.prototype.constructor = Kirk$CommandEnum;
  Kirk$KIRK_AES128CBC_HEADER$Companion.prototype = Object.create(Struct.prototype);
  Kirk$KIRK_AES128CBC_HEADER$Companion.prototype.constructor = Kirk$KIRK_AES128CBC_HEADER$Companion;
  Kirk$AES128CMACHeader$Companion.prototype = Object.create(Struct.prototype);
  Kirk$AES128CMACHeader$Companion.prototype.constructor = Kirk$AES128CMACHeader$Companion;
  DummyMemory.prototype = Object.create(Memory.prototype);
  DummyMemory.prototype.constructor = DummyMemory;
  TraceMemory.prototype = Object.create(Memory.prototype);
  TraceMemory.prototype.constructor = TraceMemory;
  ListenerMemory.prototype = Object.create(Memory.prototype);
  ListenerMemory.prototype.constructor = ListenerMemory;
  FastMemoryBacked.prototype = Object.create(Memory.prototype);
  FastMemoryBacked.prototype.constructor = FastMemoryBacked;
  NormalMemory.prototype = Object.create(FastMemoryBacked.prototype);
  NormalMemory.prototype.constructor = NormalMemory;
  SmallMemory.prototype = Object.create(FastMemoryBacked.prototype);
  SmallMemory.prototype.constructor = SmallMemory;
  openSync$ObjectLiteral.prototype = Object.create(SyncStreamBase.prototype);
  openSync$ObjectLiteral.prototype.constructor = openSync$ObjectLiteral;
  openSync$ObjectLiteral_0.prototype = Object.create(SyncStreamBase.prototype);
  openSync$ObjectLiteral_0.prototype.constructor = openSync$ObjectLiteral_0;
  p_base.prototype = Object.create(p_void.prototype);
  p_base.prototype.constructor = p_base;
  p_u8.prototype = Object.create(p_base.prototype);
  p_u8.prototype.constructor = p_u8;
  p_u32.prototype = Object.create(p_base.prototype);
  p_u32.prototype.constructor = p_u32;
  TimeoutException.prototype = Object.create(Exception.prototype);
  TimeoutException.prototype.constructor = TimeoutException;
  DropboxVfs$open$ObjectLiteral.prototype = Object.create(AsyncStreamBase.prototype);
  DropboxVfs$open$ObjectLiteral.prototype.constructor = DropboxVfs$open$ObjectLiteral;
  DropboxVfs.prototype = Object.create(Vfs.prototype);
  DropboxVfs.prototype.constructor = DropboxVfs;
  ISO2$openVfs$lambda$ObjectLiteral.prototype = Object.create(Vfs.prototype);
  ISO2$openVfs$lambda$ObjectLiteral.prototype.constructor = ISO2$openVfs$lambda$ObjectLiteral;
  MountableVfsSync$ObjectLiteral.prototype = Object.create(Vfs$Proxy.prototype);
  MountableVfsSync$ObjectLiteral.prototype.constructor = MountableVfsSync$ObjectLiteral;
  ZipVfs2$Impl.prototype = Object.create(Vfs.prototype);
  ZipVfs2$Impl.prototype.constructor = ZipVfs2$Impl;
  function AGRenderer(emulatorContainer, sceneTex) {
    this.emulatorContainer = emulatorContainer;
    this.sceneTex = sceneTex;
    this.renderMode = AGRenderer$RenderMode$AUTO_getInstance();
    this.logger = Logger.Companion.invoke_61zpoe$('AGRenderer');
    this.anyBatch = false;
    this.batchesQueue_0 = ArrayList_init();
    this.tempBmp = new Bitmap32(480, 272);
    this.taskCountFlag = new EventFlag(0);
    this.taskCount_ht70tg$_0 = this.taskCountFlag;
    this.stats = new AGRenderer$Stats();
    this.indexBuffer_0 = null;
    this.vertexBuffer_0 = null;
    this.renderBuffer = null;
    this.geTexture_dxfw6h$_0 = this.geTexture_dxfw6h$_0;
    this.renderScale = 2.0;
    this.frameCount = 0;
    this.WW = 480;
    this.HH = 272;
    this.actualTexture = this.sceneTex;
    this.renderState_0 = new AG$RenderState();
    this.vr_0 = new VertexReader();
    this.vv_0 = new VertexRaw();
    this.batch_0 = new GeBatch();
    this.u_modelViewProjMatrix = new Uniform('u_modelViewProjMatrix', VarType.Mat4);
    this.u_tex = new Uniform('u_tex', VarType.TextureUnit);
    this.u_texMatrix = new Uniform('u_texMatrix', VarType.Mat4);
    this.textureMatrix = new Matrix4();
    this.textureUnit = new AG$TextureUnit(null, false);
    this.uniforms_0 = mapOf([to(this.u_modelViewProjMatrix, this.batch_0.modelViewProjMatrix), to(this.u_tex, this.textureUnit), to(this.u_texMatrix, this.textureMatrix)]);
    this.vtype = new VertexType();
    this.texturesById = LinkedHashMap_init();
    this.programLayoutByVertexType = LinkedHashMap_init();
  }
  function AGRenderer$RenderMode(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function AGRenderer$RenderMode_initFields() {
    AGRenderer$RenderMode_initFields = function () {
    };
    AGRenderer$RenderMode$AUTO_instance = new AGRenderer$RenderMode('AUTO', 0);
    AGRenderer$RenderMode$NORMAL_instance = new AGRenderer$RenderMode('NORMAL', 1);
    AGRenderer$RenderMode$DIRECT_instance = new AGRenderer$RenderMode('DIRECT', 2);
  }
  var AGRenderer$RenderMode$AUTO_instance;
  function AGRenderer$RenderMode$AUTO_getInstance() {
    AGRenderer$RenderMode_initFields();
    return AGRenderer$RenderMode$AUTO_instance;
  }
  var AGRenderer$RenderMode$NORMAL_instance;
  function AGRenderer$RenderMode$NORMAL_getInstance() {
    AGRenderer$RenderMode_initFields();
    return AGRenderer$RenderMode$NORMAL_instance;
  }
  var AGRenderer$RenderMode$DIRECT_instance;
  function AGRenderer$RenderMode$DIRECT_getInstance() {
    AGRenderer$RenderMode_initFields();
    return AGRenderer$RenderMode$DIRECT_instance;
  }
  AGRenderer$RenderMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RenderMode',
    interfaces: [Enum]
  };
  function AGRenderer$RenderMode$values() {
    return [AGRenderer$RenderMode$AUTO_getInstance(), AGRenderer$RenderMode$NORMAL_getInstance(), AGRenderer$RenderMode$DIRECT_getInstance()];
  }
  AGRenderer$RenderMode.values = AGRenderer$RenderMode$values;
  function AGRenderer$RenderMode$valueOf(name) {
    switch (name) {
      case 'AUTO':
        return AGRenderer$RenderMode$AUTO_getInstance();
      case 'NORMAL':
        return AGRenderer$RenderMode$NORMAL_getInstance();
      case 'DIRECT':
        return AGRenderer$RenderMode$DIRECT_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.AGRenderer.RenderMode.' + name);
    }
  }
  AGRenderer$RenderMode.valueOf_61zpoe$ = AGRenderer$RenderMode$valueOf;
  Object.defineProperty(AGRenderer.prototype, 'taskCount', {
    get: function () {
      return this.taskCount_ht70tg$_0.getValue_n5byny$(this, new PropertyMetadata('taskCount'));
    },
    set: function (taskCount) {
      this.taskCount_ht70tg$_0.setValue_sq4zib$(this, new PropertyMetadata('taskCount'), taskCount);
    }
  });
  AGRenderer.prototype.reset = function () {
    var tmp$, tmp$_0;
    tmp$ = this.texturesById.entries.iterator();
    while (tmp$.hasNext()) {
      var tmp$_1 = tmp$.next();
      var tex = tmp$_1.value;
      tex.texture.close();
    }
    tmp$_0 = this.programLayoutByVertexType.entries.iterator();
    while (tmp$_0.hasNext()) {
      var tmp$_2 = tmp$_0.next();
      var vtype = tmp$_2.value;
    }
    this.texturesById.clear();
    this.programLayoutByVertexType.clear();
    this.taskCount = 0;
  };
  AGRenderer.prototype.addBatches_9iyg8u$ = function (batches) {
    this.anyBatch = true;
    this.batchesQueue_0.add_11rb$(batches);
    this.stats.add_9iyg8u$(batches);
    this.updateTaskCount_0();
  };
  AGRenderer.prototype.updateTaskCount_0 = function () {
    this.taskCount = this.batchesQueue_0.size;
  };
  Object.defineProperty(AGRenderer.prototype, 'geTexture', {
    get: function () {
      if (this.geTexture_dxfw6h$_0 == null)
        return throwUPAE('geTexture');
      return this.geTexture_dxfw6h$_0;
    },
    set: function (geTexture) {
      this.geTexture_dxfw6h$_0 = geTexture;
    }
  });
  AGRenderer.prototype.render_djqboz$ = function (views, ctx, m) {
    var tmp$, tmp$_0;
    var ag = ctx.ag;
    ag.checkErrors = false;
    ctx.flush();
    this.frameCount = this.frameCount + 1 | 0;
    tmp$ = this.renderMode;
    if (equals(tmp$, AGRenderer$RenderMode$AUTO_getInstance()))
      tmp$_0 = this.anyBatch;
    else if (equals(tmp$, AGRenderer$RenderMode$NORMAL_getInstance()))
      tmp$_0 = false;
    else if (equals(tmp$, AGRenderer$RenderMode$DIRECT_getInstance()))
      tmp$_0 = true;
    else
      tmp$_0 = Kotlin.noWhenBranchMatched();
    var directFastSharpRendering = tmp$_0;
    if (directFastSharpRendering) {
      if (!this.batchesQueue_0.isEmpty()) {
        if (this.renderBuffer == null) {
          this.renderBuffer = ag.createRenderBuffer();
          this.geTexture = new Texture(new Texture$Base(ensureNotNull(this.renderBuffer).tex, this.WW, this.HH), 0, this.HH, this.WW, 0);
          ensureNotNull(this.renderBuffer).start_vux9f0$(Kotlin.imul(this.WW, numberToInt(this.renderScale)), Kotlin.imul(this.HH, numberToInt(this.renderScale)));
          ag.clear_2lepo2$(color.Colors.BLACK);
          ensureNotNull(this.renderBuffer).end();
        }
        var rb = ensureNotNull(this.renderBuffer);
        rb.start_vux9f0$(Kotlin.imul(this.WW, numberToInt(this.renderScale)), Kotlin.imul(this.HH, numberToInt(this.renderScale)));
        try {
          this.renderBatches_0(views, ctx, this.renderScale);
        }
        finally {
          rb.end();
        }
      }
      this.actualTexture = this.geTexture;
    }
     else {
      if (!this.batchesQueue_0.isEmpty()) {
        for (var n = 0; n < 272; n++) {
          get_mem(this).read_coga0j$(get_display(this).fixedAddress() + ((n * 512 | 0) * 4 | 0) | 0, this.tempBmp.data, Kotlin.imul(this.tempBmp.width, n), this.tempBmp.width);
        }
        var bmp = this.tempBmp;
        var rb_0 = ag.renderBuffers.alloc();
        var oldRendering = ag.renderingToTexture;
        ag.renderingToTexture = true;
        rb_0.start_vux9f0$(bmp.width, bmp.height);
        try {
          ag.clear_2lepo2$(0);
          ag.drawBmp_59u9qz$(this.tempBmp);
          this.renderBatches_0(views, ctx, 1.0);
        }
        finally {
          rb_0.readBitmap_59u9qz$(bmp);
          rb_0.end();
          ag.renderingToTexture = oldRendering;
          ag.renderBuffers.free_11rb$(rb_0);
        }
        for (var n_0 = 0; n_0 < 272; n_0++) {
          get_mem(this).write_coga0j$(get_display(this).fixedAddress() + ((n_0 * 512 | 0) * 4 | 0) | 0, this.tempBmp.data, Kotlin.imul(this.tempBmp.width, 271 - n_0 | 0), this.tempBmp.width);
        }
      }
      if (get_display(this).rawDisplay) {
        get_display(this).decodeToBitmap32_59u9qz$(get_display(this).bmp);
        setAlpha(get_display(this).bmp, 255);
        this.sceneTex.update_hi0ws4$(get_display(this).bmp);
      }
      this.actualTexture = this.sceneTex;
    }
    ctx.flush();
  };
  AGRenderer.prototype.renderTexture_djqboz$ = function (views, ctx, m) {
    ctx.flush();
    ctx.batch.drawQuad_4rxj9x$(this.actualTexture, void 0, void 0, this.WW, this.HH, m, false, void 0, void 0, AG$Blending.Companion.NONE);
    ctx.flush();
  };
  AGRenderer.prototype.renderBatches_0 = function (views, ctx, scale) {
    var tmp$, tmp$_0;
    try {
      tmp$ = this.batchesQueue_0.iterator();
      while (tmp$.hasNext()) {
        var batches = tmp$.next();
        tmp$_0 = batches.iterator();
        while (tmp$_0.hasNext()) {
          var batch = tmp$_0.next();
          this.batch_0.initData_uivub3$(batch, this.emulatorContainer.emulator);
          this.renderBatch_0(views, ctx, this.batch_0, scale);
        }
      }
    }
    finally {
      this.batchesQueue_0.clear();
    }
    this.updateTaskCount_0();
  };
  function AGRenderer$TextureSlot(id, texture, version, frame, hash) {
    if (version === void 0)
      version = 0;
    if (frame === void 0)
      frame = 0;
    if (hash === void 0)
      hash = 0;
    this.id = id;
    this.texture = texture;
    this.version = version;
    this.frame = frame;
    this.hash = hash;
  }
  AGRenderer$TextureSlot.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureSlot',
    interfaces: []
  };
  AGRenderer$TextureSlot.prototype.component1 = function () {
    return this.id;
  };
  AGRenderer$TextureSlot.prototype.component2 = function () {
    return this.texture;
  };
  AGRenderer$TextureSlot.prototype.component3 = function () {
    return this.version;
  };
  AGRenderer$TextureSlot.prototype.component4 = function () {
    return this.frame;
  };
  AGRenderer$TextureSlot.prototype.component5 = function () {
    return this.hash;
  };
  AGRenderer$TextureSlot.prototype.copy_jhvbsb$ = function (id, texture, version, frame, hash) {
    return new AGRenderer$TextureSlot(id === void 0 ? this.id : id, texture === void 0 ? this.texture : texture, version === void 0 ? this.version : version, frame === void 0 ? this.frame : frame, hash === void 0 ? this.hash : hash);
  };
  AGRenderer$TextureSlot.prototype.toString = function () {
    return 'TextureSlot(id=' + Kotlin.toString(this.id) + (', texture=' + Kotlin.toString(this.texture)) + (', version=' + Kotlin.toString(this.version)) + (', frame=' + Kotlin.toString(this.frame)) + (', hash=' + Kotlin.toString(this.hash)) + ')';
  };
  AGRenderer$TextureSlot.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    result = result * 31 + Kotlin.hashCode(this.texture) | 0;
    result = result * 31 + Kotlin.hashCode(this.version) | 0;
    result = result * 31 + Kotlin.hashCode(this.frame) | 0;
    result = result * 31 + Kotlin.hashCode(this.hash) | 0;
    return result;
  };
  AGRenderer$TextureSlot.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.id, other.id) && Kotlin.equals(this.texture, other.texture) && Kotlin.equals(this.version, other.version) && Kotlin.equals(this.frame, other.frame) && Kotlin.equals(this.hash, other.hash)))));
  };
  var LogLevel = $module$klogger_js.com.soywiz.klogger.LogLevel;
  AGRenderer.prototype.renderBatch_0 = function (views, ctx, batch, scale) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5;
    var ag = ctx.ag;
    init(this.vtype, batch.state);
    if (this.indexBuffer_0 == null)
      this.indexBuffer_0 = ag.createIndexBuffer();
    if (this.vertexBuffer_0 == null)
      this.vertexBuffer_0 = ag.createVertexBuffer();
    var state = batch.state;
    ensureNotNull(this.indexBuffer_0).upload_359eei$(batch.indices);
    ensureNotNull(this.vertexBuffer_0).upload_mj6st8$(batch.vertices);
    var $this = this.logger;
    var level = LogLevel.TRACE;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, '----------------');
    }
    var $this_0 = this.logger;
    var level_0 = LogLevel.TRACE;
    if ($this_0.isEnabled_ci8eq1$(level_0)) {
      $this_0.actualLog_t189ph$(level_0, 'indices: ' + toList(batch.indices));
    }
    var $this_1 = this.logger;
    var level_1 = LogLevel.TRACE;
    if ($this_1.isEnabled_ci8eq1$(level_1)) {
      $this_1.actualLog_t189ph$(level_1, 'primitive: ' + toAg_0(batch.primType));
    }
    var $this_2 = this.logger;
    var level_2 = LogLevel.TRACE;
    if ($this_2.isEnabled_ci8eq1$(level_2)) {
      $this_2.actualLog_t189ph$(level_2, 'vertexCount: ' + batch.vertexCount);
    }
    var $this_3 = this.logger;
    var level_3 = LogLevel.TRACE;
    if ($this_3.isEnabled_ci8eq1$(level_3)) {
      $this_3.actualLog_t189ph$(level_3, 'vertexType: ' + get_hex(batch.state.vertexType));
    }
    var $this_4 = this.logger;
    var level_4 = LogLevel.TRACE;
    if ($this_4.isEnabled_ci8eq1$(level_4)) {
      $this_4.actualLog_t189ph$(level_4, 'vertices: ' + get_hex_0(batch.vertices));
    }
    var $this_5 = this.logger;
    var level_5 = LogLevel.TRACE;
    if ($this_5.isEnabled_ci8eq1$(level_5)) {
      $this_5.actualLog_t189ph$(level_5, 'matrix: ' + batch.modelViewProjMatrix);
    }
    var $this_6 = this.logger;
    var level_6 = LogLevel.TRACE;
    if ($this_6.isEnabled_ci8eq1$(level_6)) {
      var tmp$_6 = $this_6.actualLog_t189ph$;
      var vr = new VertexReader();
      tmp$_6.call($this_6, level_6, '' + toString(vr.read_riyqrj$(batch.vtype, batch.vertices.length / batch.vtype.size | 0, openSync(batch.vertices))));
    }
    var $this_7 = this.logger;
    var level_7 = LogLevel.TRACE;
    if ($this_7.isEnabled_ci8eq1$(level_7)) {
      $this_7.actualLog_t189ph$(level_7, 'texture: ' + batch.hasTexture() + ' : ' + batch.getTextureId() + ' : ' + get_hex(batch.state.texture.mipmap.address));
    }
    if (state.clearing) {
      var fixedDepth = state.depthTest.rangeNear;
      this.renderState_0.depthNear = fixedDepth;
      this.renderState_0.depthFar = fixedDepth;
      this.renderState_0.depthMask = hasFlag(state.clearFlags, ClearBufferSet_getInstance().DepthBuffer);
      this.renderState_0.depthFunc = AG$CompareMode.ALWAYS;
      batch.modelViewProjMatrix.setToOrtho_w8lrqs$(0.0, 272.0, 480.0, 0.0, -65535, 0.0);
      var vertex = this.vr_0.readOne_h7y9mx$(openSync(batch.vertices), batch.vtype, this.vv_0);
      var clearFlags = state.clearFlags;
      var clearColor = vertex.color;
      var clearDepth = fixedDepth;
      var clearStencil = state.stencil.funcRef;
      var mustClearColor = hasFlag(clearFlags, ClearBufferSet_getInstance().ColorBuffer);
      var mustClearDepth = hasFlag(clearFlags, ClearBufferSet_getInstance().DepthBuffer);
      var mustClearStencil = hasFlag(clearFlags, ClearBufferSet_getInstance().StencilBuffer);
      ag.clear_2lepo2$(clearColor, clearDepth, clearStencil, mustClearColor, mustClearDepth, mustClearStencil);
      return;
    }
    this.renderState_0.depthNear = state.depthTest.rangeFar;
    this.renderState_0.depthFar = state.depthTest.rangeNear;
    this.renderState_0.depthMask = state.depthTest.mask === 0;
    tmp$_0 = this.renderState_0;
    if (state.depthTest.enabled)
      tmp$ = toInvAg(state.depthTest.func);
    else
      tmp$ = AG$CompareMode.ALWAYS;
    tmp$_0.depthFunc = tmp$;
    this.renderState_0.lineWidth = scale;
    var textureSlot;
    if (batch.hasTexture()) {
      var textureId = batch.getTextureId();
      var $receiver = this.texturesById;
      var tmp$_7;
      var value = $receiver.get_11rb$(textureId);
      if (value == null) {
        var answer = new AGRenderer$TextureSlot(textureId, ag.createTexture_6taknv$(false));
        $receiver.put_xwzc9p$(textureId, answer);
        tmp$_7 = answer;
      }
       else {
        tmp$_7 = value;
      }
      textureSlot = tmp$_7;
      if (textureSlot.frame !== this.frameCount) {
        textureSlot.frame = this.frameCount;
        var texVersion = batch.data.texVersion;
        if (textureSlot.version !== texVersion) {
          textureSlot.version = texVersion;
          var texHash = batch.getTextureHash_lh19bh$(get_mem(this));
          if (textureSlot.hash !== texHash) {
            textureSlot.hash = texHash;
            var bmp = batch.getTextureBitmap_lh19bh$(get_mem(this));
            textureSlot.texture.upload_nn58bg$(bmp);
          }
        }
      }
    }
     else {
      textureSlot = null;
    }
    batch.getEffectiveTextureMatrix_zhv01d$(this.textureMatrix);
    tmp$_1 = state.blending.enabled;
    if (tmp$_1 === false)
      tmp$_2 = AG$Blending.Companion.NONE;
    else if (tmp$_1 === true)
      tmp$_2 = new AG$Blending(toAg_2(state.blending.functionSource), toAg_2(state.blending.functionDestination), toAg_2(state.blending.functionSource), toAg_2(state.blending.functionDestination), toAg(state.blending.equation), toAg(state.blending.equation));
    else
      tmp$_2 = Kotlin.noWhenBranchMatched();
    var blending = tmp$_2;
    var texture = textureSlot != null ? textureSlot.texture : null;
    this.textureUnit.texture = texture;
    this.textureUnit.linear = !state.texture.filterMinification.nearest;
    var pl = this.getProgramLayout_j5wazo$(state);
    tmp$_3 = toAg_0(batch.primType);
    tmp$_4 = ensureNotNull(this.vertexBuffer_0);
    tmp$_5 = ensureNotNull(this.indexBuffer_0);
    ag.draw_n1yu8b$(tmp$_4, pl.program, tmp$_3, pl.layout, batch.vertexCount, tmp$_5, void 0, blending, this.uniforms_0, void 0, void 0, this.renderState_0);
  };
  function AGRenderer$ProgramLayout(program, layout) {
    this.program = program;
    this.layout = layout;
  }
  AGRenderer$ProgramLayout.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ProgramLayout',
    interfaces: []
  };
  AGRenderer$ProgramLayout.prototype.component1 = function () {
    return this.program;
  };
  AGRenderer$ProgramLayout.prototype.component2 = function () {
    return this.layout;
  };
  AGRenderer$ProgramLayout.prototype.copy_pq7j5k$ = function (program, layout) {
    return new AGRenderer$ProgramLayout(program === void 0 ? this.program : program, layout === void 0 ? this.layout : layout);
  };
  AGRenderer$ProgramLayout.prototype.toString = function () {
    return 'ProgramLayout(program=' + Kotlin.toString(this.program) + (', layout=' + Kotlin.toString(this.layout)) + ')';
  };
  AGRenderer$ProgramLayout.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.program) | 0;
    result = result * 31 + Kotlin.hashCode(this.layout) | 0;
    return result;
  };
  AGRenderer$ProgramLayout.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.program, other.program) && Kotlin.equals(this.layout, other.layout)))));
  };
  AGRenderer.prototype.getProgramLayout_j5wazo$ = function (state) {
    var hash = '' + toString(state.vertexType) + '_' + toString(state.texture.effect.id) + '_' + toString(state.alphaTest.hash) + '_' + toString(state.texture.hasAlpha) + '_' + toString(state.texture.effect) + '_' + toString(state.alphaTest.enabled);
    var $receiver = this.programLayoutByVertexType;
    var tmp$;
    var value = $receiver.get_11rb$(hash);
    if (value == null) {
      var $this = this.logger;
      var level = LogLevel.WARN;
      if ($this.isEnabled_ci8eq1$(level)) {
        $this.actualLog_t189ph$(level, 'getProgramLayout[new]: ' + hash);
      }
      var answer = this.createProgramLayout_j5wazo$(state);
      $receiver.put_xwzc9p$(hash, answer);
      tmp$ = answer;
    }
     else {
      tmp$ = value;
    }
    return tmp$;
  };
  AGRenderer.prototype.get_xy_0 = function ($receiver) {
    return new Program$Swizzle($receiver, 'xy');
  };
  AGRenderer.prototype.get_rgb_0 = function ($receiver) {
    return new Program$Swizzle($receiver, 'rgb');
  };
  AGRenderer.prototype.get_a_0 = function ($receiver) {
    return new Program$Swizzle($receiver, 'a');
  };
  AGRenderer.prototype.get_rgba_0 = function ($receiver) {
    return new Program$Swizzle($receiver, 'rgba');
  };
  function AGRenderer$createProgramLayout$lambda(this$AGRenderer, closure$a_Pos, closure$a_Col, closure$v_Col, closure$a_Tex, closure$v_Tex) {
    return function ($receiver) {
      $receiver.SET_q0hzsk$($receiver.out, $receiver.times_2oogdr$(this$AGRenderer.u_modelViewProjMatrix, $receiver.vec4_hywno3$([closure$a_Pos, $receiver.get_lit_81szk$(1.0)])));
      if (closure$a_Col != null) {
        $receiver.SET_q0hzsk$(closure$v_Col, this$AGRenderer.get_rgba_0(closure$a_Col));
      }
      if (closure$a_Tex != null) {
        $receiver.SET_q0hzsk$(closure$v_Tex, $receiver.times_2oogdr$(this$AGRenderer.u_texMatrix, $receiver.vec4_hywno3$([this$AGRenderer.get_xy_0(closure$a_Tex), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0)])));
      }
      return Unit;
    };
  }
  var Program$Program$Builder_init = $module$korag_js.com.soywiz.korag.shader.Program.Builder;
  var Program$Stm$Program$Stm$Stms_init = $module$korag_js.com.soywiz.korag.shader.Program.Stm.Stms;
  var Program$Stm$Program$Stm$If_init = $module$korag_js.com.soywiz.korag.shader.Program.Stm.If;
  function AGRenderer$createProgramLayout$lambda_0(closure$a_Col, closure$v_Col, closure$a_Tex, closure$t_Col, this$AGRenderer, closure$v_Tex, closure$state) {
    return function ($receiver) {
      var tmp$;
      $receiver.SET_q0hzsk$($receiver.out, $receiver.vec4_hywno3$([$receiver.get_lit_81szk$(1.0), $receiver.get_lit_81szk$(1.0), $receiver.get_lit_81szk$(1.0), $receiver.get_lit_81szk$(1.0)]));
      if (closure$a_Col != null) {
        $receiver.SET_q0hzsk$($receiver.out, $receiver.times_2oogdr$($receiver.out, closure$v_Col));
      }
      if (closure$a_Tex != null) {
        $receiver.SET_q0hzsk$(closure$t_Col, $receiver.texture2D_q0hzsk$(this$AGRenderer.u_tex, $receiver.get_hhgt4v$(closure$v_Tex, 'xy')));
        var hasAlpha = closure$state.texture.hasAlpha;
        tmp$ = closure$state.texture.effect;
        if (equals(tmp$, TextureEffect$MODULATE_getInstance())) {
          $receiver.SET_q0hzsk$(this$AGRenderer.get_rgb_0($receiver.out), $receiver.times_2oogdr$(this$AGRenderer.get_rgb_0($receiver.out), this$AGRenderer.get_rgb_0(closure$t_Col)));
          if (hasAlpha)
            $receiver.SET_q0hzsk$(this$AGRenderer.get_a_0($receiver.out), $receiver.times_2oogdr$(this$AGRenderer.get_a_0($receiver.out), this$AGRenderer.get_a_0(closure$t_Col)));
        }
         else if (equals(tmp$, TextureEffect$DECAL_getInstance()))
          if (hasAlpha) {
            $receiver.SET_q0hzsk$(this$AGRenderer.get_rgb_0($receiver.out), $receiver.times_2oogdr$(this$AGRenderer.get_rgb_0($receiver.out), this$AGRenderer.get_rgb_0(closure$t_Col)));
            $receiver.SET_q0hzsk$(this$AGRenderer.get_a_0($receiver.out), this$AGRenderer.get_a_0(closure$t_Col));
          }
           else {
            $receiver.SET_q0hzsk$(this$AGRenderer.get_rgba_0($receiver.out), this$AGRenderer.get_rgba_0(closure$t_Col));
          }
         else if (equals(tmp$, TextureEffect$BLEND_getInstance()))
          $receiver.SET_q0hzsk$($receiver.out, $receiver.mix_qzk4o8$($receiver.out, closure$t_Col, $receiver.get_lit_81szk$(0.5)));
        else if (equals(tmp$, TextureEffect$REPLACE_getInstance())) {
          $receiver.SET_q0hzsk$(this$AGRenderer.get_rgb_0($receiver.out), this$AGRenderer.get_rgb_0(closure$t_Col));
          if (hasAlpha)
            $receiver.SET_q0hzsk$(this$AGRenderer.get_a_0($receiver.out), this$AGRenderer.get_a_0(closure$t_Col));
        }
         else if (equals(tmp$, TextureEffect$ADD_getInstance())) {
          $receiver.SET_q0hzsk$(this$AGRenderer.get_rgb_0($receiver.out), $receiver.plus_2oogdr$(this$AGRenderer.get_rgb_0($receiver.out), this$AGRenderer.get_rgb_0(closure$t_Col)));
          if (hasAlpha)
            $receiver.SET_q0hzsk$(this$AGRenderer.get_a_0($receiver.out), $receiver.times_2oogdr$(this$AGRenderer.get_a_0($receiver.out), this$AGRenderer.get_a_0(closure$t_Col)));
        }
      }
      if (closure$state.alphaTest.enabled) {
        var cond = $receiver.le_2oogdr$(this$AGRenderer.get_a_0($receiver.out), $receiver.get_lit_81szk$(0.0));
        var body = new Program$Program$Builder_init($receiver.type);
        body.DISCARD();
        var stmIf = new Program$Stm$Program$Stm$If_init(cond, new Program$Stm$Program$Stm$Stms_init(body.outputStms));
        $receiver.outputStms.add_11rb$(stmIf);
      }
      return Unit;
    };
  }
  AGRenderer.prototype.createProgramLayout_j5wazo$ = function (state) {
    var tmp$;
    var vtype = init(new VertexType(), state);
    var COUNT2 = listOf([VarType.VOID, VarType.Companion.BYTE_za3lpa$(2), VarType.Companion.SHORT_za3lpa$(2), VarType.Companion.FLOAT_za3lpa$(2)]);
    var COUNT3 = listOf([VarType.VOID, VarType.Companion.BYTE_za3lpa$(3), VarType.Companion.SHORT_za3lpa$(3), VarType.Companion.FLOAT_za3lpa$(3)]);
    var COLORS = listOf([VarType.VOID, VarType.VOID, VarType.VOID, VarType.VOID, VarType.Companion.SHORT_za3lpa$(1), VarType.Companion.SHORT_za3lpa$(1), VarType.Companion.SHORT_za3lpa$(1), VarType.Byte4]);
    var a_Tex = vtype.hasTexture ? new Attribute('a_Tex', COUNT2.get_za3lpa$(vtype.tex.id), false, vtype.texOffset) : null;
    var a_Col = vtype.hasColor ? new Attribute('a_Col', COLORS.get_za3lpa$(vtype.col.id), true, vtype.colOffset) : null;
    var a_Pos = new Attribute('a_Pos', COUNT3.get_za3lpa$(vtype.pos.id), false, vtype.posOffset);
    var v_Tex = new Varying('v_Tex', VarType.Float4);
    var v_Col = new Varying('v_Col', VarType.Byte4);
    var t_Col = new Temp(0, VarType.Byte4);
    var layout = new VertexLayout(filterNotNull(listOf([a_Tex, a_Col, a_Pos])), vtype.size);
    tmp$ = vtype.toString();
    var program = new Program(VertexShader(AGRenderer$createProgramLayout$lambda(this, a_Pos, a_Col, v_Col, a_Tex, v_Tex)), FragmentShader(AGRenderer$createProgramLayout$lambda_0(a_Col, v_Col, a_Tex, t_Col, this, v_Tex, state)), tmp$);
    return new AGRenderer$ProgramLayout(program, layout);
  };
  function AGRenderer$Stats(batches, vertices, batchesPoints, batchesLines, batchesTriangles, batchesSprites, verticesPoints, verticesLines, verticesTriangles, verticesSprites, cpuTime, renderTime) {
    if (batches === void 0)
      batches = 0;
    if (vertices === void 0)
      vertices = 0;
    if (batchesPoints === void 0)
      batchesPoints = 0;
    if (batchesLines === void 0)
      batchesLines = 0;
    if (batchesTriangles === void 0)
      batchesTriangles = 0;
    if (batchesSprites === void 0)
      batchesSprites = 0;
    if (verticesPoints === void 0)
      verticesPoints = 0;
    if (verticesLines === void 0)
      verticesLines = 0;
    if (verticesTriangles === void 0)
      verticesTriangles = 0;
    if (verticesSprites === void 0)
      verticesSprites = 0;
    if (cpuTime === void 0)
      cpuTime = 0;
    if (renderTime === void 0)
      renderTime = 0;
    this.batches = batches;
    this.vertices = vertices;
    this.batchesPoints = batchesPoints;
    this.batchesLines = batchesLines;
    this.batchesTriangles = batchesTriangles;
    this.batchesSprites = batchesSprites;
    this.verticesPoints = verticesPoints;
    this.verticesLines = verticesLines;
    this.verticesTriangles = verticesTriangles;
    this.verticesSprites = verticesSprites;
    this.cpuTime = cpuTime;
    this.renderTime = renderTime;
  }
  AGRenderer$Stats.prototype.reset = function () {
    this.batches = 0;
    this.vertices = 0;
    this.batchesPoints = 0;
    this.batchesLines = 0;
    this.batchesTriangles = 0;
    this.batchesSprites = 0;
    this.verticesPoints = 0;
    this.verticesLines = 0;
    this.verticesTriangles = 0;
    this.verticesSprites = 0;
  };
  AGRenderer$Stats.prototype.toString = function () {
    var lines = ArrayList_init();
    var element = 'Total: ' + this.vertices + ' (' + this.batches + ')';
    lines.add_11rb$(element);
    var element_0 = 'Points: ' + this.verticesPoints + ' (' + this.batchesPoints + ')';
    lines.add_11rb$(element_0);
    var element_1 = 'Lines: ' + this.verticesLines + ' (' + this.batchesLines + ')';
    lines.add_11rb$(element_1);
    var element_2 = 'Triangles: ' + this.verticesTriangles + ' (' + this.batchesTriangles + ')';
    lines.add_11rb$(element_2);
    var element_3 = 'Sprites: ' + this.verticesSprites + ' (' + this.batchesSprites + ')';
    lines.add_11rb$(element_3);
    lines.add_11rb$('');
    var element_4 = 'CpuTime: ' + this.cpuTime;
    lines.add_11rb$(element_4);
    var element_5 = 'RenderTime: ' + this.renderTime;
    lines.add_11rb$(element_5);
    return joinToString(lines, '\n');
  };
  AGRenderer$Stats.prototype.add_9iyg8u$ = function (batches) {
    var tmp$, tmp$_0;
    tmp$ = batches.iterator();
    while (tmp$.hasNext()) {
      var batch = tmp$.next();
      this.batches = this.batches + 1 | 0;
      this.vertices = this.vertices + batch.vertexCount | 0;
      tmp$_0 = batch.primType;
      if (equals(tmp$_0, PrimitiveType$POINTS_getInstance())) {
        this.batchesPoints = this.batchesPoints + 1 | 0;
        this.verticesPoints = this.verticesPoints + batch.vertexCount | 0;
      }
       else if (equals(tmp$_0, PrimitiveType$LINES_getInstance()) || equals(tmp$_0, PrimitiveType$LINE_STRIP_getInstance())) {
        this.batchesLines = this.batchesLines + 1 | 0;
        this.verticesLines = this.verticesLines + batch.vertexCount | 0;
      }
       else if (equals(tmp$_0, PrimitiveType$TRIANGLES_getInstance()) || equals(tmp$_0, PrimitiveType$TRIANGLE_STRIP_getInstance()) || equals(tmp$_0, PrimitiveType$TRIANGLE_FAN_getInstance())) {
        this.batchesTriangles = this.batchesTriangles + 1 | 0;
        this.verticesTriangles = this.verticesTriangles + batch.vertexCount | 0;
      }
       else if (equals(tmp$_0, PrimitiveType$SPRITES_getInstance())) {
        this.batchesSprites = this.batchesSprites + 1 | 0;
        this.verticesSprites = this.verticesSprites + batch.vertexCount | 0;
      }
    }
  };
  AGRenderer$Stats.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Stats',
    interfaces: []
  };
  AGRenderer$Stats.prototype.component1 = function () {
    return this.batches;
  };
  AGRenderer$Stats.prototype.component2 = function () {
    return this.vertices;
  };
  AGRenderer$Stats.prototype.component3 = function () {
    return this.batchesPoints;
  };
  AGRenderer$Stats.prototype.component4 = function () {
    return this.batchesLines;
  };
  AGRenderer$Stats.prototype.component5 = function () {
    return this.batchesTriangles;
  };
  AGRenderer$Stats.prototype.component6 = function () {
    return this.batchesSprites;
  };
  AGRenderer$Stats.prototype.component7 = function () {
    return this.verticesPoints;
  };
  AGRenderer$Stats.prototype.component8 = function () {
    return this.verticesLines;
  };
  AGRenderer$Stats.prototype.component9 = function () {
    return this.verticesTriangles;
  };
  AGRenderer$Stats.prototype.component10 = function () {
    return this.verticesSprites;
  };
  AGRenderer$Stats.prototype.component11 = function () {
    return this.cpuTime;
  };
  AGRenderer$Stats.prototype.component12 = function () {
    return this.renderTime;
  };
  AGRenderer$Stats.prototype.copy_a6199o$ = function (batches, vertices, batchesPoints, batchesLines, batchesTriangles, batchesSprites, verticesPoints, verticesLines, verticesTriangles, verticesSprites, cpuTime, renderTime) {
    return new AGRenderer$Stats(batches === void 0 ? this.batches : batches, vertices === void 0 ? this.vertices : vertices, batchesPoints === void 0 ? this.batchesPoints : batchesPoints, batchesLines === void 0 ? this.batchesLines : batchesLines, batchesTriangles === void 0 ? this.batchesTriangles : batchesTriangles, batchesSprites === void 0 ? this.batchesSprites : batchesSprites, verticesPoints === void 0 ? this.verticesPoints : verticesPoints, verticesLines === void 0 ? this.verticesLines : verticesLines, verticesTriangles === void 0 ? this.verticesTriangles : verticesTriangles, verticesSprites === void 0 ? this.verticesSprites : verticesSprites, cpuTime === void 0 ? this.cpuTime : cpuTime, renderTime === void 0 ? this.renderTime : renderTime);
  };
  AGRenderer$Stats.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.batches) | 0;
    result = result * 31 + Kotlin.hashCode(this.vertices) | 0;
    result = result * 31 + Kotlin.hashCode(this.batchesPoints) | 0;
    result = result * 31 + Kotlin.hashCode(this.batchesLines) | 0;
    result = result * 31 + Kotlin.hashCode(this.batchesTriangles) | 0;
    result = result * 31 + Kotlin.hashCode(this.batchesSprites) | 0;
    result = result * 31 + Kotlin.hashCode(this.verticesPoints) | 0;
    result = result * 31 + Kotlin.hashCode(this.verticesLines) | 0;
    result = result * 31 + Kotlin.hashCode(this.verticesTriangles) | 0;
    result = result * 31 + Kotlin.hashCode(this.verticesSprites) | 0;
    result = result * 31 + Kotlin.hashCode(this.cpuTime) | 0;
    result = result * 31 + Kotlin.hashCode(this.renderTime) | 0;
    return result;
  };
  AGRenderer$Stats.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.batches, other.batches) && Kotlin.equals(this.vertices, other.vertices) && Kotlin.equals(this.batchesPoints, other.batchesPoints) && Kotlin.equals(this.batchesLines, other.batchesLines) && Kotlin.equals(this.batchesTriangles, other.batchesTriangles) && Kotlin.equals(this.batchesSprites, other.batchesSprites) && Kotlin.equals(this.verticesPoints, other.verticesPoints) && Kotlin.equals(this.verticesLines, other.verticesLines) && Kotlin.equals(this.verticesTriangles, other.verticesTriangles) && Kotlin.equals(this.verticesSprites, other.verticesSprites) && Kotlin.equals(this.cpuTime, other.cpuTime) && Kotlin.equals(this.renderTime, other.renderTime)))));
  };
  Object.defineProperty(AGRenderer.prototype, 'emulator', {
    get: function () {
      return this.emulatorContainer.emulator;
    }
  });
  AGRenderer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AGRenderer',
    interfaces: [WithEmulator]
  };
  function toAg($receiver) {
    if (equals($receiver, GuBlendingEquation$ADD_getInstance()))
      return AG$BlendEquation.ADD;
    else if (equals($receiver, GuBlendingEquation$SUBSTRACT_getInstance()))
      return AG$BlendEquation.SUBTRACT;
    else if (equals($receiver, GuBlendingEquation$REVERSE_SUBSTRACT_getInstance()))
      return AG$BlendEquation.REVERSE_SUBTRACT;
    else if (equals($receiver, GuBlendingEquation$MIN_getInstance()))
      return AG$BlendEquation.ADD;
    else if (equals($receiver, GuBlendingEquation$MAX_getInstance()))
      return AG$BlendEquation.ADD;
    else if (equals($receiver, GuBlendingEquation$ABS_getInstance()))
      return AG$BlendEquation.ADD;
    else
      return Kotlin.noWhenBranchMatched();
  }
  function toAg_0($receiver) {
    if (equals($receiver, PrimitiveType$POINTS_getInstance()))
      return AG$DrawType.POINTS;
    else if (equals($receiver, PrimitiveType$LINES_getInstance()))
      return AG$DrawType.LINES;
    else if (equals($receiver, PrimitiveType$LINE_STRIP_getInstance()))
      return AG$DrawType.LINE_STRIP;
    else if (equals($receiver, PrimitiveType$TRIANGLES_getInstance()))
      return AG$DrawType.TRIANGLES;
    else if (equals($receiver, PrimitiveType$TRIANGLE_STRIP_getInstance()))
      return AG$DrawType.TRIANGLE_STRIP;
    else if (equals($receiver, PrimitiveType$TRIANGLE_FAN_getInstance()))
      return AG$DrawType.TRIANGLE_FAN;
    else if (equals($receiver, PrimitiveType$SPRITES_getInstance()))
      return AG$DrawType.TRIANGLES;
    else
      return Kotlin.noWhenBranchMatched();
  }
  function toAg_1($receiver) {
    if (equals($receiver, TestFunctionEnum$NEVER_getInstance()))
      return AG$CompareMode.NEVER;
    else if (equals($receiver, TestFunctionEnum$ALWAYS_getInstance()))
      return AG$CompareMode.ALWAYS;
    else if (equals($receiver, TestFunctionEnum$EQUAL_getInstance()))
      return AG$CompareMode.EQUAL;
    else if (equals($receiver, TestFunctionEnum$NOT_EQUAL_getInstance()))
      return AG$CompareMode.NOT_EQUAL;
    else if (equals($receiver, TestFunctionEnum$LESS_getInstance()))
      return AG$CompareMode.LESS;
    else if (equals($receiver, TestFunctionEnum$LESS_OR_EQUAL_getInstance()))
      return AG$CompareMode.LESS_EQUAL;
    else if (equals($receiver, TestFunctionEnum$GREATER_getInstance()))
      return AG$CompareMode.GREATER;
    else if (equals($receiver, TestFunctionEnum$GREATER_OR_EQUAL_getInstance()))
      return AG$CompareMode.GREATER_EQUAL;
    else
      return Kotlin.noWhenBranchMatched();
  }
  function toInvAg($receiver) {
    if (equals($receiver, TestFunctionEnum$NEVER_getInstance()))
      return AG$CompareMode.NEVER;
    else if (equals($receiver, TestFunctionEnum$ALWAYS_getInstance()))
      return AG$CompareMode.ALWAYS;
    else if (equals($receiver, TestFunctionEnum$EQUAL_getInstance()))
      return AG$CompareMode.EQUAL;
    else if (equals($receiver, TestFunctionEnum$NOT_EQUAL_getInstance()))
      return AG$CompareMode.NOT_EQUAL;
    else if (equals($receiver, TestFunctionEnum$LESS_getInstance()))
      return AG$CompareMode.GREATER;
    else if (equals($receiver, TestFunctionEnum$LESS_OR_EQUAL_getInstance()))
      return AG$CompareMode.GREATER_EQUAL;
    else if (equals($receiver, TestFunctionEnum$GREATER_getInstance()))
      return AG$CompareMode.LESS;
    else if (equals($receiver, TestFunctionEnum$GREATER_OR_EQUAL_getInstance()))
      return AG$CompareMode.LESS_EQUAL;
    else
      return Kotlin.noWhenBranchMatched();
  }
  function toAg_2($receiver) {
    if (equals($receiver, GuBlendingFactor$GU_SRC_COLOR_getInstance()))
      return AG$BlendFactor.SOURCE_COLOR;
    else if (equals($receiver, GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_getInstance()))
      return AG$BlendFactor.ONE_MINUS_SOURCE_COLOR;
    else if (equals($receiver, GuBlendingFactor$GU_SRC_ALPHA_getInstance()))
      return AG$BlendFactor.SOURCE_ALPHA;
    else if (equals($receiver, GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_getInstance()))
      return AG$BlendFactor.ONE_MINUS_SOURCE_ALPHA;
    else if (equals($receiver, GuBlendingFactor$GU_DST_ALPHA_getInstance()))
      return AG$BlendFactor.DESTINATION_ALPHA;
    else if (equals($receiver, GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_getInstance()))
      return AG$BlendFactor.ONE_MINUS_DESTINATION_ALPHA;
    else if (equals($receiver, GuBlendingFactor$GU_FIX_getInstance()))
      return AG$BlendFactor.SOURCE_COLOR;
    else
      return Kotlin.noWhenBranchMatched();
  }
  function DebugBitmapFont() {
    DebugBitmapFont_instance = this;
    this.DEBUG_BMP_FONT_gmqa9d$_0 = lazy(DebugBitmapFont$DEBUG_BMP_FONT$lambda(this));
    this.DEBUG_FONT_BMP_tbit1f$_0 = lazy(DebugBitmapFont$DEBUG_FONT_BMP$lambda(this));
    this.DEBUG_FONT_BYTES_mi084j$_0 = lazy(DebugBitmapFont$DEBUG_FONT_BYTES$lambda);
  }
  Object.defineProperty(DebugBitmapFont.prototype, 'DEBUG_BMP_FONT', {
    get: function () {
      var $receiver = this.DEBUG_BMP_FONT_gmqa9d$_0;
      new PropertyMetadata('DEBUG_BMP_FONT');
      return $receiver.value;
    }
  });
  Object.defineProperty(DebugBitmapFont.prototype, 'DEBUG_FONT_BMP', {
    get: function () {
      var $receiver = this.DEBUG_FONT_BMP_tbit1f$_0;
      new PropertyMetadata('DEBUG_FONT_BMP');
      return $receiver.value;
    }
  });
  Object.defineProperty(DebugBitmapFont.prototype, 'DEBUG_FONT_BYTES', {
    get: function () {
      var $receiver = this.DEBUG_FONT_BYTES_mi084j$_0;
      new PropertyMetadata('DEBUG_FONT_BYTES');
      return $receiver.value;
    }
  });
  var collectionSizeOrDefault = Kotlin.kotlin.collections.collectionSizeOrDefault_ba2ldo$;
  function DebugBitmapFont$DEBUG_BMP_FONT$lambda(this$DebugBitmapFont) {
    return function () {
      var fntAdvance = 7;
      var fntWidth = 8;
      var fntHeight = 8;
      var tmp$ = this$DebugBitmapFont.DEBUG_FONT_BMP;
      var $receiver = until(0, 256);
      var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
      var tmp$_0;
      tmp$_0 = $receiver.iterator();
      while (tmp$_0.hasNext()) {
        var item = tmp$_0.next();
        var x = item % 16;
        var y = item / 16 | 0;
        destination.add_11rb$(new BitmapFont$GlyphInfo(item, RectangleInt_init(Kotlin.imul(x, fntWidth), Kotlin.imul(y, fntHeight), fntWidth, fntHeight), fntAdvance));
      }
      return new BitmapFont(tmp$, fntHeight, fntHeight, destination);
    };
  }
  function DebugBitmapFont$DEBUG_FONT_BMP$lambda(this$DebugBitmapFont) {
    return function () {
      return format.PNG.decode_pdgdrr$(this$DebugBitmapFont.DEBUG_FONT_BYTES).toBMP32().premultipliedIfRequired();
    };
  }
  function DebugBitmapFont$DEBUG_FONT_BYTES$lambda() {
    return crypto.Base64.decode_61zpoe$('' + 'iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAMAAAD04JH5AAAAGXRFWHRTb2Z0d2Fy' + 'ZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAAZQTFRF////////VXz1bAAAAAJ0Uk5T' + '/wDltzBKAAAG40lEQVR42uybiXLjOAxEH///p7cmsUQA3SApJ5nU1q7KCW2dIIiz' + 'ATGujY8tjn8+H0fuE0b8HS8D93ve0D3g8/bzwnx9uM919x0BN93XvT9HrkuuLxc1' + 'n1MMBHwcmwcSwcMScpP3uur1PK6nfNx0EiAsnicuOFDHIQzOM/088zVkAuKT8uq8' + 'LmXy5HriuB8ohGwIoDwrE4AjYMSFpLL8NavAgfUShGeKWIyTJag8M+NSCOvSp+lc' + 'ghaFULWkbiKEazWkCmv4YfZnARlBY1T60g06zpxuFCZkoUmfSm9Vz0kIda5xQkE0' + 'p1BP5kVDlT9D5l8Zg+VtJCsYtqJVUb10Ceb3oUtw6fprVLthZAMz32RhhGWBABXW' + 'cvmaA9XEqwyoFuQlKIbIOSvykJe0EG60IAvh9SUuIcW0fEkLrGZs9UX1/90N/U7x' + 'nMKlxjLyUwQQbCyBLnnwlAhOKWJBQFGj6eWhm/gqcOmmTy8PFHc6ose1Vy0ttxEZ' + 'xoqAdAHpH80iPuQAm5NIscPlD4xB3MkAXu7ohFCdR/DtM/hobnig6nxdd75savI0' + '1aRa4SvhsZjk3izhl+ClZIm/Er7nJRDeYc8fGxNNVqlbx41uMY1FjRR9vtFbyKhV' + 'KRvJbCh+rBqLrN/IknEoAtHmkckvYdeg2oM6U3YOkdXzL6tmbmifsSGARRiPid2S' + 'FqRQKQccWcoXWtMIH6O3XPyW/ls7UGRJ1bzEgnn1gqQk950TubnkageKu2G/36uf' + 'laOXuE+hD3Yg+P1647yPGER4R1n8toQZhH+BqjxLFDsxSAnitrEZXtUQUnATORBN' + '3RkHMueqO8a5PeryoKw8kYHRy4A1zywISCznSAtGdmfNEhGQFkNABSh+a6OCTv43' + '1FyhHzNAgSY2Nu9r1JCkPpaATl5og1bxBQsCRuOMkogjd8Z7AhdWqxC2IZkSwCoE' + 'YuV8MLnJzWfkWpyaRtSAdby9iRaomE/WZbW2OBrkbM4C9wzV3dDdKh4I6QIJeFLw' + 'xzrdd5z2T+i/QUR7eILFKeCzRFjiHYuoaMuodVLd5Yz7DBXjZx12lGLBGz8yIGyR' + 'zVtmMtzvGKJOxjidnLE6pEDUkhiFq7KUUk6G9w0uKC5aoIphCRgNATlHzCeCsWwl' + 'gDGE8YiA4LglEBil+iXSbpcmYcNCwJfjgRYlfIYe8k3nNDQOk3Pa9fwRAnyKRo6X' + 'mRXSUHii1g8W8UCVQ81B+xxxlkJCUST8tj5Z4gGahHln0plRcSHAW75VPOAzpDUH' + 'CAJRi4/DJXmkGomGi4rhnBNQsVZbARl3aKzxAA2EY7XA1PdqZfB77cI5PlCrURKs' + 'NsLcnCdQr8iKsfkPoOTD83DV3uS06UxpLdWakdUoBcxajTPZKhb18iNjh5j6koo6' + 'o+JVWwy45oxN0VvhuEIAKauO0mDT//ZvbIr8Ow7EnDeLa4Veu3GEQmIjAwU/xIAX' + 'PPXfWVq/CU10NspXVY2BW0Bz2ZAaQ0mHJPsckSFFbTUs1gZQwa2ElUdLZatSD4xq' + 'VTNMDCtZvzR1oC1YxuQejRnBrbDjtANRoWmgtrdGH8XbGKvR9f04cn+A7G9xxFsy' + 'Svwfu5M4svlFCF21TZbA5XNfCQTOw+kbysfEjzS9Ujk/ayskW7twHPNXWAtqFrav' + 't8g1yVukiBZooAxWkMauUSHJK62hc4i6B69BnZYrTEaMCm3uM8DgCpCs0+AgActJ' + 'R2mrNBxAy8Gd3odWqS5lq2yOxn4hA7kJsDe9XZtfwxiw5dW/hhPCQTdHRMuJXbXL' + 'kLSTe+xxDMIu6hoKaHe29HcIOOVAKqH7tsb0oOTUy/4lB2Jv7yEHaEsi2P3POGB9' + 'oPRHNzOl66eO4/sygNh4lrKwcldvacH3EPAFGfguDuxarlqrv1O73e9/MQG3lyDV' + 'neSdgHmef2ega2J/zoHD0kkb37htt7/OvJvpCQeOQowji8gj37CtUP13CNi713F0' + 'fPv+kRQtizr9LgFGKAWFdse7CuxPcIAf4UC37WCy5ppxcFzz6uOY7yDGy3jk/wQ8' + 'I2CRXnCSfiAFQhrw3lfPXUunqSMRgykY/XsJJe4eXauJKVy4pDaCThF8qDVjqYjE' + 'F4CGZMLkrLdE+aW5vYYwUuUDVw/IjYwl6W1wwVLMyBk3LFsIqD2FuZXzMQcqnNK+' + '0NBgzKwLodiOiURAAc/7ggRFNqHpdUG6Lh8gBbxZLzwJGNtSa62G7xuPgmKLmRCP' + 'pl2xWjPD0UN572id+rDrUPIv1fRwJ7VdaJt74TClQw4UGNH3cnmgU7p8KgF7GWhr' + 'xquSrDVUGw6c5PHZMm6wYg7QdUytzL5RSasFYxOzvqeenQ99hhMenPSPAAMAPncv' + 'sT1xehsAAAAASUVORK5CYII=');
  }
  DebugBitmapFont.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'DebugBitmapFont',
    interfaces: []
  };
  var DebugBitmapFont_instance = null;
  function DebugBitmapFont_getInstance() {
    if (DebugBitmapFont_instance === null) {
      new DebugBitmapFont();
    }
    return DebugBitmapFont_instance;
  }
  function DebugScene(browser, emulator) {
    Scene.call(this);
    this.browser = browser;
    this.emulator = emulator;
    this.viewAddress = 0;
    this.registerList_tfv6jh$_0 = this.registerList_tfv6jh$_0;
    this.disassembler_skal70$_0 = this.disassembler_skal70$_0;
    this.threadList_bql2vq$_0 = this.threadList_bql2vq$_0;
    this.hexdump_yjp6c9$_0 = this.hexdump_yjp6c9$_0;
    this.font_ofks7l$_0 = this.font_ofks7l$_0;
  }
  Object.defineProperty(DebugScene.prototype, 'registerList', {
    get: function () {
      if (this.registerList_tfv6jh$_0 == null)
        return throwUPAE('registerList');
      return this.registerList_tfv6jh$_0;
    },
    set: function (registerList) {
      this.registerList_tfv6jh$_0 = registerList;
    }
  });
  Object.defineProperty(DebugScene.prototype, 'disassembler', {
    get: function () {
      if (this.disassembler_skal70$_0 == null)
        return throwUPAE('disassembler');
      return this.disassembler_skal70$_0;
    },
    set: function (disassembler) {
      this.disassembler_skal70$_0 = disassembler;
    }
  });
  Object.defineProperty(DebugScene.prototype, 'threadList', {
    get: function () {
      if (this.threadList_bql2vq$_0 == null)
        return throwUPAE('threadList');
      return this.threadList_bql2vq$_0;
    },
    set: function (threadList) {
      this.threadList_bql2vq$_0 = threadList;
    }
  });
  Object.defineProperty(DebugScene.prototype, 'hexdump', {
    get: function () {
      if (this.hexdump_yjp6c9$_0 == null)
        return throwUPAE('hexdump');
      return this.hexdump_yjp6c9$_0;
    },
    set: function (hexdump) {
      this.hexdump_yjp6c9$_0 = hexdump;
    }
  });
  Object.defineProperty(DebugScene.prototype, 'font', {
    get: function () {
      if (this.font_ofks7l$_0 == null)
        return throwUPAE('font');
      return this.font_ofks7l$_0;
    },
    set: function (font) {
      this.font_ofks7l$_0 = font;
    }
  });
  DebugScene.prototype.askGoto = function (continuation_0, suspended) {
    var instance = new Coroutine$askGoto(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$askGoto($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$thread = void 0;
  }
  Coroutine$askGoto.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$askGoto.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$askGoto.prototype.constructor = Coroutine$askGoto;
  Coroutine$askGoto.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.local$thread = firstOrNull(this.$this.emulator.threadManager.threads);
            this.state_0 = 2;
            this.result_0 = this.$this.browser.prompt_puj7f4$('Address', get_hex(this.$this.viewAddress), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var exprStr = this.result_0;
            var addr = evaluateIntExpr((tmp$ = this.local$thread != null ? this.local$thread.state : null) != null ? tmp$ : CpuState$Companion_getInstance().dummy, exprStr) & ~3;
            println('Expr: ' + exprStr);
            println('Address: ' + get_hex(addr));
            this.$this.viewAddress = addr;
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DebugScene.prototype.askEval = function (continuation_0, suspended) {
    var instance = new Coroutine$askEval(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$askEval($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$thread = void 0;
  }
  Coroutine$askEval.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$askEval.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$askEval.prototype.constructor = Coroutine$askEval;
  Coroutine$askEval.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.local$thread = firstOrNull(this.$this.emulator.threadManager.threads);
            this.state_0 = 2;
            this.result_0 = this.$this.browser.prompt_puj7f4$('Expression', get_hex(this.$this.viewAddress), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var exprStr = this.result_0;
            var value = evaluateIntExpr((tmp$ = this.local$thread != null ? this.local$thread.state : null) != null ? tmp$ : CpuState$Companion_getInstance().dummy, exprStr) & ~3;
            println('Expr: ' + exprStr);
            println('Result: ' + get_hex(value));
            this.state_0 = 3;
            this.result_0 = this.$this.browser.alert_61zpoe$('Expr: ' + exprStr + '\n' + 'Result: ' + get_hex(value), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DebugScene$sceneInit$lambda(closure$sceneView_0, this$DebugScene_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$sceneInit$lambda(closure$sceneView_0, this$DebugScene_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$sceneInit$lambda(closure$sceneView_0, this$DebugScene_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$sceneView = closure$sceneView_0;
    this.local$this$DebugScene = this$DebugScene_0;
    this.local$it = it_0;
  }
  Coroutine$DebugScene$sceneInit$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$sceneInit$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$sceneInit$lambda.prototype.constructor = Coroutine$DebugScene$sceneInit$lambda;
  Coroutine$DebugScene$sceneInit$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            if (this.local$it.keyCode === PspEmuKeys_getInstance().F2) {
              return this.local$closure$sceneView.visible = !this.local$closure$sceneView.visible, Unit;
            }
             else {
              if (this.local$closure$sceneView.visible) {
                tmp$ = this.local$it.keyCode;
                if (tmp$ === PspEmuKeys_getInstance().E) {
                  this.state_0 = 10;
                  this.result_0 = this.local$this$DebugScene.askEval(this);
                  if (this.result_0 === COROUTINE_SUSPENDED)
                    return COROUTINE_SUSPENDED;
                  break;
                }
                 else {
                  if (tmp$ === PspEmuKeys_getInstance().G) {
                    this.state_0 = 8;
                    this.result_0 = this.local$this$DebugScene.askGoto(this);
                    if (this.result_0 === COROUTINE_SUSPENDED)
                      return COROUTINE_SUSPENDED;
                    break;
                  }
                   else {
                    if (tmp$ === PspEmuKeys_getInstance().UP) {
                      return this.local$this$DebugScene.moveUp_0(), Unit;
                    }
                     else {
                      if (tmp$ === PspEmuKeys_getInstance().DOWN) {
                        return this.local$this$DebugScene.moveDown_0(), Unit;
                      }
                       else {
                        if (tmp$ === PspEmuKeys_getInstance().PGUP) {
                          return this.local$this$DebugScene.moveUp_0(16), Unit;
                        }
                         else {
                          if (tmp$ === PspEmuKeys_getInstance().PGDOWN) {
                            return this.local$this$DebugScene.moveDown_0(16), Unit;
                          }
                           else {
                            if (tmp$ === PspEmuKeys_getInstance().T) {
                              return this.local$this$DebugScene.toggle_0(), Unit;
                            }
                             else {
                              if (tmp$ === PspEmuKeys_getInstance().F3) {
                                return this.local$this$DebugScene.toggle_0(), Unit;
                              }
                               else {
                                return println('onKeyDown: ' + this.local$it.keyCode), Unit;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
               else {
                this.state_0 = 12;
                continue;
              }
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            continue;
          case 6:
            this.state_0 = 7;
            continue;
          case 7:
            this.state_0 = 9;
            continue;
          case 8:
            return Unit;
          case 9:
            this.state_0 = 11;
            continue;
          case 10:
            return Unit;
          case 11:
            this.state_0 = 12;
            continue;
          case 12:
            this.state_0 = 13;
            continue;
          case 13:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DebugScene$sceneInit$lambda$lambda(this$DebugScene_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$sceneInit$lambda$lambda(this$DebugScene_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$sceneInit$lambda$lambda(this$DebugScene_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$DebugScene = this$DebugScene_0;
  }
  Coroutine$DebugScene$sceneInit$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$sceneInit$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$sceneInit$lambda$lambda.prototype.constructor = Coroutine$DebugScene$sceneInit$lambda$lambda;
  Coroutine$DebugScene$sceneInit$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$DebugScene.askGoto(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  var get_mouse = $module$korge_js.com.soywiz.korge.input.get_mouse_gohfi1$;
  var addSuspend = $module$korge_js.$$importsForInline$$['korio-js'].com.soywiz.korio.async.addSuspend_vumi11$;
  function DebugScene$sceneInit$lambda$lambda_0(this$DebugScene_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$sceneInit$lambda$lambda_0(this$DebugScene_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$sceneInit$lambda$lambda_0(this$DebugScene_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$DebugScene = this$DebugScene_0;
  }
  Coroutine$DebugScene$sceneInit$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$sceneInit$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$sceneInit$lambda$lambda_0.prototype.constructor = Coroutine$DebugScene$sceneInit$lambda$lambda_0;
  Coroutine$DebugScene$sceneInit$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$DebugScene.toggle_0(), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DebugScene$sceneInit$lambda_0(closure$sceneView, this$DebugScene) {
    return function (it) {
      var tmp$;
      if (closure$sceneView.visible) {
        var thread = firstOrNull(this$DebugScene.emulator.threadManager.threads);
        var cpu = (tmp$ = thread != null ? thread.state : null) != null ? tmp$ : CpuState$Companion_getInstance().dummy;
        if (this$DebugScene.registerList.visible)
          this$DebugScene.registerList.update_xt3zvs$(cpu);
        if (this$DebugScene.disassembler.visible)
          this$DebugScene.disassembler.update_oilmyj$(this$DebugScene.viewAddress, cpu.mem, cpu);
        if (this$DebugScene.threadList.visible)
          this$DebugScene.threadList.update();
        if (this$DebugScene.hexdump.visible)
          this$DebugScene.hexdump.update_oilmyj$(this$DebugScene.viewAddress, cpu.mem, cpu);
      }
      return Unit;
    };
  }
  var SolidRect_init = $module$korge_js.com.soywiz.korge.view.SolidRect;
  var get_keys = $module$korge_js.com.soywiz.korge.input.get_keys_gohfi1$;
  DebugScene.prototype.sceneInit_f3yb8w$ = function (sceneView_0, continuation_0, suspended) {
    var instance = new Coroutine$sceneInit_f3yb8w$(this, sceneView_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceneInit_f3yb8w$($this, sceneView_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$sceneView = sceneView_0;
  }
  Coroutine$sceneInit_f3yb8w$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceneInit_f3yb8w$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceneInit_f3yb8w$.prototype.constructor = Coroutine$sceneInit_f3yb8w$;
  Coroutine$sceneInit_f3yb8w$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$sceneView.visible = false;
            var $this = this.$this.views;
            var color_0 = color.RGBA.invoke_tjonv8$(255, 255, 255, 175);
            this.local$sceneView.plusAssign_l5rad2$(new SolidRect_init($this, numberToDouble(480), numberToDouble(272), color_0));
            var tmp$, tmp$_0;
            (tmp$_0 = (tmp$ = this.local$sceneView != null ? get_keys(this.local$sceneView) : null) != null ? tmp$.onKeyDown : null) != null ? tmp$_0.add_25kf2w$(DebugScene$sceneInit$lambda(this.local$sceneView, this.$this)) : null;
            this.$this.font = convert(DebugBitmapFont_getInstance().DEBUG_BMP_FONT, this.$this.views.ag, false);
            var $this_0 = this.$this.views;
            var color_1 = color.RGBA.packRGB_A_vux9f0$(color.Colors.BLUE, 95);
            var $receiver = new SolidRect_init($this_0, numberToDouble(480), numberToDouble(272), color_1);
            $receiver.mouseEnabled = false;
            this.local$sceneView.plusAssign_l5rad2$($receiver);
            var $receiver_0 = new DebugScene$GprListView(this.$this.browser, this.$this.views, this.$this.font);
            this.$this.registerList = $receiver_0;
            this.local$sceneView.plusAssign_l5rad2$($receiver_0);
            var $receiver_1 = new DebugScene$DissasemblerView(this.$this.emulator, this.$this.views, this.$this.font);
            this.$this.disassembler = $receiver_1;
            $receiver_1.visible = true;
            $receiver_1.x = 96.0;
            $receiver_1.y = 8.0;
            this.local$sceneView.plusAssign_l5rad2$($receiver_1);
            var $receiver_2 = new DebugScene$ThreadListView(this.$this.emulator, this.$this.views, this.$this.font);
            this.$this.threadList = $receiver_2;
            $receiver_2.visible = true;
            $receiver_2.x = 400.0;
            $receiver_2.y = 8.0;
            this.local$sceneView.plusAssign_l5rad2$($receiver_2);
            var $receiver_3 = new DebugScene$HexdumpView(this.$this.emulator, this.$this.views, this.$this.font);
            this.$this.hexdump = $receiver_3;
            $receiver_3.visible = false;
            $receiver_3.x = 32.0;
            $receiver_3.y = 8.0;
            this.local$sceneView.plusAssign_l5rad2$($receiver_3);
            var $receiver_4 = simpleButton(this.$this.views, '[G]OTO', 48, 8, this.$this.font);
            $receiver_4.x = 96.0;
            $receiver_4.y = 0.0;
            var tmp$_1, tmp$_0_0;
            (tmp$_0_0 = (tmp$_1 = $receiver_4 != null ? get_mouse($receiver_4) : null) != null ? tmp$_1.onClick : null) != null ? addSuspend(tmp$_0_0, $receiver_4.views.coroutineContext, DebugScene$sceneInit$lambda$lambda(this.$this)) : null;
            this.local$sceneView.plusAssign_l5rad2$($receiver_4);
            var $receiver_5 = simpleButton(this.$this.views, 'TOGGLE', 48, 8, this.$this.font);
            $receiver_5.x = 140.0;
            $receiver_5.y = 0.0;
            var tmp$_2, tmp$_0_1;
            (tmp$_0_1 = (tmp$_2 = $receiver_5 != null ? get_mouse($receiver_5) : null) != null ? tmp$_2.onClick : null) != null ? addSuspend(tmp$_0_1, $receiver_5.views.coroutineContext, DebugScene$sceneInit$lambda$lambda_0(this.$this)) : null;
            this.local$sceneView.plusAssign_l5rad2$($receiver_5);
            this.local$sceneView.addUpdatable_b4k9x1$(DebugScene$sceneInit$lambda_0(this.local$sceneView, this.$this));
            return;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Object.defineProperty(DebugScene.prototype, 'disassemblerShowing', {
    get: function () {
      return this.disassembler.visible;
    }
  });
  Object.defineProperty(DebugScene.prototype, 'displaceBytes', {
    get: function () {
      return this.disassemblerShowing ? 4 : 16;
    }
  });
  DebugScene.prototype.moveDir_0 = function (offset) {
    this.viewAddress = this.viewAddress + offset | 0;
  };
  DebugScene.prototype.moveUp_0 = function (scale) {
    if (scale === void 0)
      scale = 1;
    this.moveDir_0(Kotlin.imul(-1 * this.displaceBytes | 0, scale));
  };
  DebugScene.prototype.moveDown_0 = function (scale) {
    if (scale === void 0)
      scale = 1;
    this.moveDir_0(Kotlin.imul(1 * this.displaceBytes | 0, scale));
  };
  DebugScene.prototype.toggle_0 = function () {
    var v = this.disassembler.visible;
    this.registerList.visible = !v;
    this.disassembler.visible = !v;
    this.hexdump.visible = v;
  };
  function DebugScene$GprView(views, font, regName, regSet, regGet) {
    Container.call(this, views);
    this.font = font;
    this.regName = regName;
    this.regSet = regSet;
    this.regGet = regGet;
    this.BG_OVER = color.RGBA.invoke_tjonv8$(0, 0, 255, 255);
    this.BG_OUT = color.RGBA.invoke_tjonv8$(0, 0, 255, 127);
    this.onGprClick = new AsyncSignal();
    var $receiver = text(views, '');
    var get_mouse = _.$$importsForInline$$['korge-js'].com.soywiz.korge.input.get_mouse_gohfi1$;
    var addSuspend = _.$$importsForInline$$['korge-js'].$$importsForInline$$['korio-js'].com.soywiz.korio.async.addSuspend_vumi11$;
    var tmp$;
    this.plusAssign_l5rad2$($receiver);
    $receiver.filtering = false;
    $receiver.x = 0.0;
    html.Html;
    tmp$ = new Html$FontFace$Bitmap(this.font);
    $receiver.format = new Html$Format(void 0, color.Colors.BLACK, tmp$, 8);
    $receiver.autoSize = true;
    $receiver.bgcolor = this.BG_OUT;
    var tmp$_0, tmp$_0_0;
    (tmp$_0_0 = (tmp$_0 = $receiver != null ? get_mouse($receiver) : null) != null ? tmp$_0.onOver : null) != null ? addSuspend(tmp$_0_0, $receiver.views.coroutineContext, DebugScene$GprView$text$lambda$lambda(this, $receiver)) : null;
    var tmp$_1, tmp$_0_1;
    (tmp$_0_1 = (tmp$_1 = $receiver != null ? get_mouse($receiver) : null) != null ? tmp$_1.onOut : null) != null ? addSuspend(tmp$_0_1, $receiver.views.coroutineContext, DebugScene$GprView$text$lambda$lambda_0(this, $receiver)) : null;
    var tmp$_2, tmp$_0_2;
    (tmp$_0_2 = (tmp$_2 = $receiver != null ? get_mouse($receiver) : null) != null ? tmp$_2.onClick : null) != null ? addSuspend(tmp$_0_2, $receiver.views.coroutineContext, DebugScene$GprView$text$lambda$lambda_1(this)) : null;
    this.text = $receiver;
    this.value_ihrvtn$_0 = 0;
    this.value = this.regGet();
  }
  Object.defineProperty(DebugScene$GprView.prototype, 'value', {
    get: function () {
      return this.value_ihrvtn$_0;
    },
    set: function (value) {
      this.regSet(value);
      this.value_ihrvtn$_0 = this.regGet();
      this.text.text = this.regName + '=' + get_shex(this.value_ihrvtn$_0);
    }
  });
  function DebugScene$GprView$text$lambda$lambda(this$GprView_0, this$_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$GprView$text$lambda$lambda(this$GprView_0, this$_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$GprView$text$lambda$lambda(this$GprView_0, this$_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$GprView = this$GprView_0;
    this.local$this$ = this$_0;
  }
  Coroutine$DebugScene$GprView$text$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$GprView$text$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$GprView$text$lambda$lambda.prototype.constructor = Coroutine$DebugScene$GprView$text$lambda$lambda;
  Coroutine$DebugScene$GprView$text$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$.bgcolor = this.local$this$GprView.BG_OVER, Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DebugScene$GprView$text$lambda$lambda_0(this$GprView_0, this$_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$GprView$text$lambda$lambda_0(this$GprView_0, this$_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$GprView$text$lambda$lambda_0(this$GprView_0, this$_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$GprView = this$GprView_0;
    this.local$this$ = this$_0;
  }
  Coroutine$DebugScene$GprView$text$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$GprView$text$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$GprView$text$lambda$lambda_0.prototype.constructor = Coroutine$DebugScene$GprView$text$lambda$lambda_0;
  Coroutine$DebugScene$GprView$text$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$.bgcolor = this.local$this$GprView.BG_OUT, Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DebugScene$GprView$text$lambda$lambda_1(this$GprView_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$GprView$text$lambda$lambda_1(this$GprView_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$GprView$text$lambda$lambda_1(this$GprView_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$GprView = this$GprView_0;
  }
  Coroutine$DebugScene$GprView$text$lambda$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$GprView$text$lambda$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$GprView$text$lambda$lambda_1.prototype.constructor = Coroutine$DebugScene$GprView$text$lambda$lambda_1;
  Coroutine$DebugScene$GprView$text$lambda$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$GprView.onGprClick.invoke_11rb$(this.local$this$GprView, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DebugScene$GprView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GprView',
    interfaces: [Container]
  };
  function DebugScene$GprListView(browser, views, font) {
    Container.call(this, views);
    this.font = font;
    this.state = new CpuState('GprListView', new GlobalCpuState(), DummyMemory_getInstance());
    var $receiver = until(0, 32);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      var tmp$_0 = destination.add_11rb$;
      var $receiver_0 = new DebugScene$GprView(views, this.font, 'r' + item, DebugScene$GprListView$regs$lambda$lambda(this, item), DebugScene$GprListView$regs$lambda$lambda_0(this, item));
      this.plusAssign_l5rad2$($receiver_0);
      $receiver_0.y = item * 8 | 0;
      tmp$_0.call(destination, $receiver_0);
    }
    this.regs = destination;
    var $receiver_1 = new DebugScene$GprView(views, this.font, 'PC', DebugScene$GprListView$pc$lambda(this), DebugScene$GprListView$pc$lambda_0(this));
    this.plusAssign_l5rad2$($receiver_1);
    $receiver_1.y = 32 * 8 | 0;
    this.pc = $receiver_1;
    this.allRegs = plus(this.regs, this.pc);
    var tmp$_1;
    tmp$_1 = this.allRegs.iterator();
    while (tmp$_1.hasNext()) {
      var reg = tmp$_1.next();
      reg.onGprClick.invoke_25kf2w$(DebugScene$DebugScene$GprListView_init$lambda(this, browser, reg));
    }
  }
  DebugScene$GprListView.prototype.update_xt3zvs$ = function (state) {
    this.state = state;
    for (var n = 0; n < 32; n++) {
      this.regs.get_za3lpa$(n).value = state.getGpr_za3lpa$(n);
    }
    this.pc.value = state.PC;
  };
  function DebugScene$GprListView$regs$lambda$lambda(this$GprListView, closure$regIndex) {
    return function (it) {
      this$GprListView.state.setGpr_vux9f0$(closure$regIndex, it);
      return Unit;
    };
  }
  function DebugScene$GprListView$regs$lambda$lambda_0(this$GprListView, closure$regIndex) {
    return function () {
      return this$GprListView.state.getGpr_za3lpa$(closure$regIndex);
    };
  }
  function DebugScene$GprListView$pc$lambda(this$GprListView) {
    return function (it) {
      var $this = this$GprListView.state;
      $this._PC = it;
      $this._nPC = it + 4 | 0;
      return Unit;
    };
  }
  function DebugScene$GprListView$pc$lambda_0(this$GprListView) {
    return function () {
      return this$GprListView.state.PC;
    };
  }
  function DebugScene$DebugScene$GprListView_init$lambda(this$GprListView_0, closure$browser_0, closure$reg_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$DebugScene$GprListView_init$lambda(this$GprListView_0, closure$browser_0, closure$reg_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$DebugScene$GprListView_init$lambda(this$GprListView_0, closure$browser_0, closure$reg_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$GprListView = this$GprListView_0;
    this.local$closure$browser = closure$browser_0;
    this.local$closure$reg = closure$reg_0;
    this.local$tmp$ = void 0;
    this.local$tmp$_0 = void 0;
  }
  Coroutine$DebugScene$DebugScene$GprListView_init$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$DebugScene$GprListView_init$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$DebugScene$GprListView_init$lambda.prototype.constructor = Coroutine$DebugScene$DebugScene$GprListView_init$lambda;
  Coroutine$DebugScene$DebugScene$GprListView_init$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$tmp$_0 = this.local$closure$reg;
            this.local$tmp$ = this.local$this$GprListView.state;
            this.state_0 = 2;
            this.result_0 = this.local$closure$browser.prompt_puj7f4$('Set register ' + this.local$closure$reg.regName, get_hex(this.local$closure$reg.value), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$tmp$_0.value = evaluateIntExpr(this.local$tmp$, this.result_0), Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DebugScene$GprListView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GprListView',
    interfaces: [Container]
  };
  function DebugScene$HexdumpLineView(emulator, views, lineNumber, font) {
    Container.call(this, views);
    this.emulator = emulator;
    this.lineNumber = lineNumber;
    this.font = font;
    var $receiver = text(views, '-');
    var tmp$;
    this.plusAssign_l5rad2$($receiver);
    $receiver.filtering = false;
    $receiver.x = 0.0;
    $receiver.y = this.lineNumber * 8 | 0;
    $receiver.autoSize = true;
    html.Html;
    tmp$ = new Html$FontFace$Bitmap(this.font);
    $receiver.format = new Html$Format(void 0, color.Colors.BLACK, tmp$, 8);
    this.text = $receiver;
  }
  DebugScene$HexdumpLineView.prototype.update_oilmyj$ = function (addr, mem, state) {
    var line = '';
    line += get_shex(addr);
    line += ' | ';
    for (var n = 0; n < 16; n++)
      line += format_0('%02X', [mem.lbuSafe_za3lpa$(addr + n | 0)]);
    line += ' | ';
    for (var n_0 = 0; n_0 < 16; n_0++) {
      var c = mem.lbuSafe_za3lpa$(addr + n_0 | 0);
      line += c < 32 ? '.' : '' + String.fromCharCode(toBoxedChar(toChar(c)));
    }
    this.text.text = line;
  };
  DebugScene$HexdumpLineView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HexdumpLineView',
    interfaces: [Container]
  };
  function DebugScene$HexdumpView(emulator, views, font) {
    Container.call(this, views);
    this.emulator = emulator;
    this.font = font;
    var $receiver = until(0, 32);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(new DebugScene$HexdumpLineView(this.emulator, views, item, this.font));
    }
    this.texts = destination;
    var tmp$_0;
    tmp$_0 = this.texts.iterator();
    while (tmp$_0.hasNext()) {
      var text = tmp$_0.next();
      this.plusAssign_l5rad2$(text);
    }
  }
  DebugScene$HexdumpView.prototype.update_oilmyj$ = function (startAddress, memory, state) {
    var tmp$;
    tmp$ = withIndex(this.texts).iterator();
    while (tmp$.hasNext()) {
      var tmp$_0 = tmp$.next();
      var n = tmp$_0.component1()
      , text = tmp$_0.component2();
      var address = startAddress + (n * 16 | 0) | 0;
      text.update_oilmyj$(address, memory, state);
    }
  };
  DebugScene$HexdumpView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HexdumpView',
    interfaces: [Container]
  };
  function DebugScene$DissasemblerLineView(emulator, views, lineNumber, font) {
    Container.call(this, views);
    this.emulator = emulator;
    this.lineNumber = lineNumber;
    this.font = font;
    this.BG_NORMAL = color.RGBA.invoke_tjonv8$(255, 255, 255, 153);
    this.BG_PC = color.RGBA.invoke_tjonv8$(0, 0, 255, 153);
    this.BG_BREAKPOINT = color.RGBA.invoke_tjonv8$(255, 0, 0, 153);
    this.addr = 0;
    this.onLineClick = new AsyncSignal();
    this.over = false;
    var $receiver = text(views, '-');
    var tmp$;
    this.plusAssign_l5rad2$($receiver);
    $receiver.filtering = false;
    $receiver.x = 0.0;
    $receiver.y = this.lineNumber * 8 | 0;
    $receiver.autoSize = true;
    html.Html;
    tmp$ = new Html$FontFace$Bitmap(this.font);
    $receiver.format = new Html$Format(void 0, color.Colors.BLACK, tmp$, 8);
    var tmp$_0, tmp$_0_0;
    (tmp$_0_0 = (tmp$_0 = $receiver != null ? get_mouse($receiver) : null) != null ? tmp$_0.onOver : null) != null ? addSuspend(tmp$_0_0, $receiver.views.coroutineContext, DebugScene$DissasemblerLineView$text$lambda$lambda(this)) : null;
    var tmp$_1, tmp$_0_1;
    (tmp$_0_1 = (tmp$_1 = $receiver != null ? get_mouse($receiver) : null) != null ? tmp$_1.onOut : null) != null ? addSuspend(tmp$_0_1, $receiver.views.coroutineContext, DebugScene$DissasemblerLineView$text$lambda$lambda_0(this)) : null;
    var tmp$_2, tmp$_0_2;
    (tmp$_0_2 = (tmp$_2 = $receiver != null ? get_mouse($receiver) : null) != null ? tmp$_2.onClick : null) != null ? addSuspend(tmp$_0_2, $receiver.views.coroutineContext, DebugScene$DissasemblerLineView$text$lambda$lambda_1(this)) : null;
    this.text = $receiver;
  }
  DebugScene$DissasemblerLineView.prototype.update_57a32f$ = function (addr, memory, state, emulator) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    this.addr = addr;
    var atPC = addr === state.PC;
    tmp$_0 = this.text;
    if (emulator.breakpoints.get_za3lpa$(addr))
      tmp$ = this.BG_BREAKPOINT;
    else
      tmp$ = this.BG_NORMAL;
    tmp$_0.bgcolor = tmp$;
    if (this.over) {
      this.text.bgcolor = color.RGBA.packRGB_A_vux9f0$(color.RGBA.getRGB_za3lpa$(this.text.bgcolor), 255);
    }
    var prefix = atPC ? '*' : ' ';
    tmp$_3 = this.text;
    tmp$_2 = prefix + get_shex(addr) + ':';
    try {
      tmp$_1 = Disassembler_getInstance().disasm_bdx04b$(addr, memory.lwSafe_za3lpa$(addr), emulator.nameProvider);
    }
     catch (e) {
      if (Kotlin.isType(e, Throwable)) {
        tmp$_1 = 'ERROR';
      }
       else
        throw e;
    }
    tmp$_3.text = tmp$_2 + tmp$_1 + ' ';
  };
  function DebugScene$DissasemblerLineView$text$lambda$lambda(this$DissasemblerLineView_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda(this$DissasemblerLineView_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda(this$DissasemblerLineView_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$DissasemblerLineView = this$DissasemblerLineView_0;
  }
  Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda.prototype.constructor = Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda;
  Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$DissasemblerLineView.over = true, Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DebugScene$DissasemblerLineView$text$lambda$lambda_0(this$DissasemblerLineView_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda_0(this$DissasemblerLineView_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda_0(this$DissasemblerLineView_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$DissasemblerLineView = this$DissasemblerLineView_0;
  }
  Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda_0.prototype.constructor = Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda_0;
  Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$DissasemblerLineView.over = false, Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DebugScene$DissasemblerLineView$text$lambda$lambda_1(this$DissasemblerLineView_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda_1(this$DissasemblerLineView_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda_1(this$DissasemblerLineView_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$DissasemblerLineView = this$DissasemblerLineView_0;
  }
  Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda_1.prototype.constructor = Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda_1;
  Coroutine$DebugScene$DissasemblerLineView$text$lambda$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$DissasemblerLineView.onLineClick.invoke_11rb$(Unit, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DebugScene$DissasemblerLineView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DissasemblerLineView',
    interfaces: [Container]
  };
  function DebugScene$DissasemblerView(emulator, views, font) {
    Container.call(this, views);
    this.emulator = emulator;
    this.font = font;
    var $receiver = until(0, 32);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(new DebugScene$DissasemblerLineView(this.emulator, views, item, this.font));
    }
    this.texts = destination;
    var tmp$_0;
    tmp$_0 = this.texts.iterator();
    while (tmp$_0.hasNext()) {
      var text = tmp$_0.next();
      this.plusAssign_l5rad2$(text);
      text.onLineClick.invoke_25kf2w$(DebugScene$DebugScene$DissasemblerView_init$lambda(this, text));
    }
  }
  DebugScene$DissasemblerView.prototype.update_oilmyj$ = function (startAddress, memory, state) {
    var tmp$;
    tmp$ = withIndex(this.texts).iterator();
    while (tmp$.hasNext()) {
      var tmp$_0 = tmp$.next();
      var n = tmp$_0.component1()
      , text = tmp$_0.component2();
      var address = startAddress + (n * 4 | 0) | 0;
      text.update_57a32f$(address, memory, state, this.emulator);
    }
  };
  function DebugScene$DebugScene$DissasemblerView_init$lambda(this$DissasemblerView_0, closure$text_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$DebugScene$DissasemblerView_init$lambda(this$DissasemblerView_0, closure$text_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$DebugScene$DissasemblerView_init$lambda(this$DissasemblerView_0, closure$text_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$DissasemblerView = this$DissasemblerView_0;
    this.local$closure$text = closure$text_0;
  }
  Coroutine$DebugScene$DebugScene$DissasemblerView_init$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$DebugScene$DissasemblerView_init$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$DebugScene$DissasemblerView_init$lambda.prototype.constructor = Coroutine$DebugScene$DebugScene$DissasemblerView_init$lambda;
  Coroutine$DebugScene$DebugScene$DissasemblerView_init$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$DissasemblerView.emulator.breakpoints.toggle_za3lpa$(this.local$closure$text.addr);
            return println('Toggle breakpoint at: ' + get_hex(this.local$closure$text.addr)), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DebugScene$DissasemblerView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DissasemblerView',
    interfaces: [Container]
  };
  function DebugScene$ThreadView(emulator, views, font) {
    Container.call(this, views);
    this.emulator = emulator;
    this.font = font;
    this.BG_NORMAL = color.RGBA.invoke_tjonv8$(255, 255, 255, 153);
    this.BG_PC = color.RGBA.invoke_tjonv8$(0, 0, 255, 153);
    this.BG_BREAKPOINT = color.RGBA.invoke_tjonv8$(255, 0, 0, 153);
    this.lineId = 0;
    this.lineThread = null;
    this.selected = false;
    this.addr = 0;
    this.onLineClick = new AsyncSignal();
    this.over = false;
    var $receiver = new Text(views);
    var tmp$;
    $receiver.autoSize = true;
    html.Html;
    tmp$ = new Html$FontFace$Bitmap(this.font);
    $receiver.format = new Html$Format(void 0, color.Colors.BLACK, tmp$, 8);
    $receiver.filtering = false;
    var tmp$_0, tmp$_0_0;
    (tmp$_0_0 = (tmp$_0 = $receiver != null ? get_mouse($receiver) : null) != null ? tmp$_0.onOver : null) != null ? addSuspend(tmp$_0_0, $receiver.views.coroutineContext, DebugScene$ThreadView$text$lambda$lambda(this)) : null;
    var tmp$_1, tmp$_0_1;
    (tmp$_0_1 = (tmp$_1 = $receiver != null ? get_mouse($receiver) : null) != null ? tmp$_1.onOut : null) != null ? addSuspend(tmp$_0_1, $receiver.views.coroutineContext, DebugScene$ThreadView$text$lambda$lambda_0(this)) : null;
    var tmp$_2, tmp$_0_2;
    (tmp$_0_2 = (tmp$_2 = $receiver != null ? get_mouse($receiver) : null) != null ? tmp$_2.onClick : null) != null ? addSuspend(tmp$_0_2, $receiver.views.coroutineContext, DebugScene$ThreadView$text$lambda$lambda_1(this)) : null;
    this.plusAssign_l5rad2$($receiver);
    this.text = $receiver;
  }
  DebugScene$ThreadView.prototype.update = function () {
    this.text.bgcolor = this.selected ? this.BG_BREAKPOINT : this.BG_NORMAL;
    if (this.over) {
      this.text.bgcolor = color.RGBA.packRGB_A_vux9f0$(color.RGBA.getRGB_za3lpa$(this.text.bgcolor), 255);
    }
  };
  function DebugScene$ThreadView$text$lambda$lambda(this$ThreadView_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$ThreadView$text$lambda$lambda(this$ThreadView_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$ThreadView$text$lambda$lambda(this$ThreadView_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ThreadView = this$ThreadView_0;
  }
  Coroutine$DebugScene$ThreadView$text$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$ThreadView$text$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$ThreadView$text$lambda$lambda.prototype.constructor = Coroutine$DebugScene$ThreadView$text$lambda$lambda;
  Coroutine$DebugScene$ThreadView$text$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$ThreadView.over = true, Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DebugScene$ThreadView$text$lambda$lambda_0(this$ThreadView_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$ThreadView$text$lambda$lambda_0(this$ThreadView_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$ThreadView$text$lambda$lambda_0(this$ThreadView_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ThreadView = this$ThreadView_0;
  }
  Coroutine$DebugScene$ThreadView$text$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$ThreadView$text$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$ThreadView$text$lambda$lambda_0.prototype.constructor = Coroutine$DebugScene$ThreadView$text$lambda$lambda_0;
  Coroutine$DebugScene$ThreadView$text$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$ThreadView.over = false, Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DebugScene$ThreadView$text$lambda$lambda_1(this$ThreadView_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$ThreadView$text$lambda$lambda_1(this$ThreadView_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$ThreadView$text$lambda$lambda_1(this$ThreadView_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ThreadView = this$ThreadView_0;
  }
  Coroutine$DebugScene$ThreadView$text$lambda$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$ThreadView$text$lambda$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$ThreadView$text$lambda$lambda_1.prototype.constructor = Coroutine$DebugScene$ThreadView$text$lambda$lambda_1;
  Coroutine$DebugScene$ThreadView$text$lambda$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$ThreadView.onLineClick.invoke_11rb$(Unit, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DebugScene$ThreadView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadView',
    interfaces: [Container]
  };
  function DebugScene$ThreadListView(emulator, views, font) {
    Container.call(this, views);
    this.emulator = emulator;
    this.font = font;
    this.viewPool = new AutoArrayList(DebugScene$ThreadListView$viewPool$lambda(this, views));
  }
  DebugScene$ThreadListView.prototype.clickedLine_7w3wtx$ = function (threadView) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var tracing = !((tmp$_0 = (tmp$ = threadView.lineThread) != null ? tmp$.tracing : null) != null ? tmp$_0 : false);
    println('Tracing for thread: ' + toString((tmp$_1 = threadView.lineThread) != null ? tmp$_1.name : null) + ' = ' + tracing);
    (tmp$_2 = threadView.lineThread) != null ? (tmp$_2.tracing = tracing) : null;
  };
  function DebugScene$ThreadListView$update$lambda(it) {
    return it.name;
  }
  var sortedWith = Kotlin.kotlin.collections.sortedWith_eknfly$;
  var compareBy$lambda = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  var Comparator = Kotlin.kotlin.Comparator;
  function Comparator$ObjectLiteral(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  DebugScene$ThreadListView.prototype.update = function () {
    var tmp$;
    this.removeChildren();
    tmp$ = withIndex(sortedWith(this.emulator.threadManager.threads, new Comparator$ObjectLiteral(compareBy$lambda(DebugScene$ThreadListView$update$lambda)))).iterator();
    while (tmp$.hasNext()) {
      var tmp$_0 = tmp$.next();
      var index = tmp$_0.component1()
      , thread = tmp$_0.component2();
      var line = this.viewPool.get_za3lpa$(index);
      line.lineId = index;
      line.lineThread = thread;
      this.addChild_l5rad2$(line);
      line.y = index * 8 | 0;
      line.text.text = thread.name;
      line.selected = thread.tracing;
      line.update();
    }
  };
  function DebugScene$ThreadListView$viewPool$lambda$lambda$lambda(this$_0, this$ThreadListView_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$DebugScene$ThreadListView$viewPool$lambda$lambda$lambda(this$_0, this$ThreadListView_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DebugScene$ThreadListView$viewPool$lambda$lambda$lambda(this$_0, this$ThreadListView_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ = this$_0;
    this.local$this$ThreadListView = this$ThreadListView_0;
  }
  Coroutine$DebugScene$ThreadListView$viewPool$lambda$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DebugScene$ThreadListView$viewPool$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DebugScene$ThreadListView$viewPool$lambda$lambda$lambda.prototype.constructor = Coroutine$DebugScene$ThreadListView$viewPool$lambda$lambda$lambda;
  Coroutine$DebugScene$ThreadListView$viewPool$lambda$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$ThreadListView.clickedLine_7w3wtx$(this.local$this$), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DebugScene$ThreadListView$viewPool$lambda(this$ThreadListView, closure$views) {
    return function (it) {
      var $receiver = new DebugScene$ThreadView(this$ThreadListView.emulator, closure$views, this$ThreadListView.font);
      $receiver.onLineClick.invoke_25kf2w$(DebugScene$ThreadListView$viewPool$lambda$lambda$lambda($receiver, this$ThreadListView));
      return $receiver;
    };
  }
  DebugScene$ThreadListView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadListView',
    interfaces: [Container]
  };
  DebugScene.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DebugScene',
    interfaces: [Scene]
  };
  function evaluateExpr$ObjectLiteral(closure$state) {
    this.closure$state = closure$state;
    ExprNode$EvalContext.call(this);
  }
  evaluateExpr$ObjectLiteral.prototype.getProp_61zpoe$ = function (name) {
    var out = this.getProp2_61zpoe$(name);
    println('getProp: ' + name + ' -> ' + toString(out));
    return out;
  };
  evaluateExpr$ObjectLiteral.prototype.getProp2_61zpoe$ = function (name) {
    var tmp$, tmp$_0, tmp$_1;
    var rname = name.toLowerCase();
    if (startsWith(rname, 'r')) {
      var tmp$_2;
      if ((tmp$ = toIntOrNull(substr(rname, 1))) != null) {
        this.closure$state;
        tmp$_2 = this.closure$state.getGprProp_za3lpa$(tmp$);
      }
       else
        tmp$_2 = null;
      return tmp$_2;
    }
    if (equals(rname, 'pc'))
      tmp$_1 = this.closure$state.getPCRef();
    else {
      var tmp$_3;
      if ((tmp$_0 = CpuState$Companion_getInstance().gprInfosByMnemonic.get_11rb$(rname)) != null) {
        this.closure$state;
        tmp$_3 = this.closure$state.getGprProp_za3lpa$(tmp$_0.index);
      }
       else
        tmp$_3 = null;
      tmp$_1 = tmp$_3;
    }
    return tmp$_1;
  };
  evaluateExpr$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [ExprNode$EvalContext]
  };
  function evaluateExpr(state, str) {
    return ExprNode$Companion_getInstance().parse_61zpoe$(str).eval_g9fpaa$(new evaluateExpr$ObjectLiteral(state));
  }
  function evaluateIntExpr(state, str) {
    return toDynamicInt(evaluateExpr(state, str));
  }
  function Emulator(coroutineContext, syscalls, mem, gpuRenderer) {
    if (syscalls === void 0)
      syscalls = new SyscallManager();
    if (mem === void 0)
      mem = Memory$Companion_getInstance().invoke();
    if (gpuRenderer === void 0)
      gpuRenderer = new DummyGpuRenderer();
    this.coroutineContext = coroutineContext;
    this.syscalls = syscalls;
    this.mem = mem;
    this.gpuRenderer = gpuRenderer;
    this.logger = Logger.Companion.invoke_61zpoe$('Emulator');
    this.timeManager = new TimeManager(this);
    this.nameProvider = new AddressInfo();
    this.breakpoints = new Breakpoints();
    this.globalCpuState = new GlobalCpuState();
    this.output = new StringBuilder();
    this.ge = new Ge(this);
    this.gpu = new Gpu(this);
    this.battery = new PspBattery(this);
    this.interruptManager = new InterruptManager(this);
    this.display = new PspDisplay(this);
    this.deviceManager = new DeviceManager(this);
    this.configManager = new ConfigManager();
    this.memoryManager = new MemoryManager(this);
    this.threadManager = new ThreadManager(this);
    this.moduleManager = new ModuleManager(this);
    this.callbackManager = new CallbackManager(this);
    this.controller = new PspController(this);
    this.fileManager = new FileManager(this);
    this.imem = new Emulator$imem$ObjectLiteral(this);
    this.globalTrace = false;
    this.sdkVersion = 150;
    CpuBreakException$Companion_getInstance().initialize_lh19bh$(this.mem);
  }
  function Emulator$init$lambda(this$Emulator) {
    return function (it) {
      this$Emulator.deviceManager.setStorage_61zpoe$(it);
      return Unit;
    };
  }
  Emulator.prototype.init = function (continuation_0, suspended) {
    var instance = new Coroutine$init(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$init($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$init.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$init.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$init.prototype.constructor = Coroutine$init;
  Coroutine$init.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.configManager.init(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this.deviceManager.init(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.$this.configManager.storage.subscribe_ep0k5p$(Emulator$init$lambda(this.$this), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Object.defineProperty(Emulator.prototype, 'running', {
    get: function () {
      return this.threadManager.aliveThreadCount >= 1;
    }
  });
  Emulator.prototype.invalidateInstructionCache_vux9f0$ = function (ptr, size) {
    if (ptr === void 0)
      ptr = 0;
    if (size === void 0)
      size = kotlin_js_internal_IntCompanionObject.MAX_VALUE;
    var $this = this.logger;
    var level = LogLevel.TRACE;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'invalidateInstructionCache(' + ptr + ', ' + size + ')');
    }
  };
  Emulator.prototype.dataCache_wnu51o$ = function (ptr, size, writeback, invalidate) {
    if (ptr === void 0)
      ptr = 0;
    if (size === void 0)
      size = kotlin_js_internal_IntCompanionObject.MAX_VALUE;
    var $this = this.logger;
    var level = LogLevel.TRACE;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'writebackDataCache(' + ptr + ', ' + size + ', writeback=' + writeback + ', invalidate=' + invalidate + ')');
    }
  };
  Emulator.prototype.reset = function (continuation_0, suspended) {
    var instance = new Coroutine$reset(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$reset($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$reset.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$reset.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$reset.prototype.constructor = Coroutine$reset;
  Coroutine$reset.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.globalTrace = false;
            this.$this.sdkVersion = 150;
            this.$this.syscalls.reset();
            this.$this.mem.reset();
            CpuBreakException$Companion_getInstance().initialize_lh19bh$(this.$this.mem);
            this.$this.gpuRenderer.reset();
            this.$this.timeManager.reset();
            this.$this.nameProvider.reset();
            this.$this.globalCpuState.reset();
            this.$this.output = new StringBuilder();
            this.$this.ge.reset();
            this.$this.gpu.reset();
            this.$this.battery.reset();
            this.$this.interruptManager.reset();
            this.$this.display.reset();
            this.state_0 = 2;
            this.result_0 = this.$this.deviceManager.reset(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.$this.memoryManager.reset();
            this.$this.threadManager.reset();
            this.$this.moduleManager.reset();
            this.$this.callbackManager.reset();
            this.$this.controller.reset();
            this.$this.fileManager.reset();
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Emulator$imem$ObjectLiteral(this$Emulator) {
    this.this$Emulator = this$Emulator;
  }
  Emulator$imem$ObjectLiteral.prototype.read8_za3lpa$ = function (addr) {
    return this.this$Emulator.mem.lbu_za3lpa$(addr);
  };
  Emulator$imem$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [IMemory]
  };
  Emulator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Emulator',
    interfaces: [AsyncDependency]
  };
  function WithEmulator() {
  }
  WithEmulator.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'WithEmulator',
    interfaces: []
  };
  var HashMap_init = Kotlin.kotlin.collections.HashMap_init_q3lmfv$;
  function AddressInfo() {
    this.names = HashMap_init();
  }
  AddressInfo.prototype.getName_za3lpa$ = function (addr) {
    return this.names.get_11rb$(addr);
  };
  AddressInfo.prototype.reset = function () {
    this.names.clear();
  };
  AddressInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AddressInfo',
    interfaces: [NameProvider]
  };
  function get_mem($receiver) {
    return $receiver.emulator.mem;
  }
  function get_imem($receiver) {
    return $receiver.emulator.imem;
  }
  function get_ge($receiver) {
    return $receiver.emulator.ge;
  }
  function get_gpu($receiver) {
    return $receiver.emulator.gpu;
  }
  function get_controller($receiver) {
    return $receiver.emulator.controller;
  }
  function get_coroutineContext($receiver) {
    return $receiver.emulator.coroutineContext;
  }
  function get_display($receiver) {
    return $receiver.emulator.display;
  }
  function get_deviceManager($receiver) {
    return $receiver.emulator.deviceManager;
  }
  function get_memoryManager($receiver) {
    return $receiver.emulator.memoryManager;
  }
  function get_timeManager($receiver) {
    return $receiver.emulator.timeManager;
  }
  function get_fileManager($receiver) {
    return $receiver.emulator.fileManager;
  }
  function get_rtc($receiver) {
    return $receiver.emulator.timeManager;
  }
  function get_threadManager($receiver) {
    return $receiver.emulator.threadManager;
  }
  function get_callbackManager($receiver) {
    return $receiver.emulator.callbackManager;
  }
  function get_breakpoints($receiver) {
    return $receiver.emulator.breakpoints;
  }
  function Kpspemu() {
    Kpspemu_instance = this;
    this.VERSION = KPSPEMU_VERSION;
  }
  Kpspemu.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Kpspemu',
    interfaces: []
  };
  var Kpspemu_instance = null;
  function Kpspemu_getInstance() {
    if (Kpspemu_instance === null) {
      new Kpspemu();
    }
    return Kpspemu_instance;
  }
  function KpspemuAssets() {
    KpspemuAssets_instance = this;
    this.LOGO = '<svg id="7fe010bd-4468-4253-af77-c0b7be09145b" data-name="Capa 1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="462" height="462" viewBox="0 0 462 462">\n  <defs>\n    <linearGradient id="943f5ba0-08c6-4338-98b9-f347b4e8a88b" data-name="Degradado sin nombre 6" x1="16.79" y1="91.98" x2="231.92" y2="91.98" gradientTransform="translate(-10.42 21.95)" gradientUnits="userSpaceOnUse">\n      <stop offset="0" stop-color="#0071bc"/>\n      <stop offset="1" stop-color="#1b1464"/>\n    <\/linearGradient>\n    <linearGradient id="1dc29aca-506d-4532-94fb-b659ac65b67f" data-name="Degradado sin nombre 13" x1="19.32" y1="418.94" x2="234.45" y2="418.94" gradientTransform="translate(-12.95 -70.87)" gradientUnits="userSpaceOnUse">\n      <stop offset="0" stop-color="#f7931e"/>\n      <stop offset="1" stop-color="#f15a24"/>\n    <\/linearGradient>\n    <linearGradient id="04b2fd55-c3cf-4419-87c5-84e3e25bbd9b" x1="240.5" y1="113.93" x2="455.63" y2="113.93" gradientTransform="matrix(1, 0, 0, 1, 0, 0)" xlink:href="#1dc29aca-506d-4532-94fb-b659ac65b67f"/>\n    <linearGradient id="cd92637f-6abd-45fb-92c8-f0cf8f946c8d" x1="240.5" y1="348.07" x2="455.63" y2="348.07" gradientTransform="matrix(1, 0, 0, 1, 0, 0)" xlink:href="#943f5ba0-08c6-4338-98b9-f347b4e8a88b"/>\n  <\/defs>\n  <title>icon<\/title>\n  <g>\n    <polygon points="107.17 221.5 6.37 120.91 121.16 6.37 221.5 107.03 221.5 221.5 107.17 221.5" fill="url(#943f5ba0-08c6-4338-98b9-f347b4e8a88b)"/>\n    <path d="M145.15,36.73,241,132.89V241H133L36.74,144.91,145.15,36.73m0-12.73L24,144.91,129.07,249.76V250H250V129.17L145.16,24Z" transform="translate(-24 -24)" fill="#1b1464"/>\n  <\/g>\n  <g>\n    <polygon points="6.37 340.85 107.03 240.5 221.5 240.5 221.5 354.83 120.91 455.63 6.37 340.85" fill="url(#1dc29aca-506d-4532-94fb-b659ac65b67f)"/>\n    <path d="M241,269V377l-96.09,96.29L36.73,364.85,132.89,269H241m9-9H129.17L24,364.84,144.91,486,249.76,380.93H250V260Z" transform="translate(-24 -24)" fill="#f15a24"/>\n  <\/g>\n  <g>\n    <polygon points="240.5 107.17 341.09 6.37 455.63 121.15 354.73 221.31 240.5 221.49 240.5 107.17" fill="url(#04b2fd55-c3cf-4419-87c5-84e3e25bbd9b)"/>\n    <path d="M365.09,36.74,473.26,145.13l-96.39,95.69L269,241V133l96.09-96.29m0-12.74L260.24,129.07H260V250l120.58-.19L486,145.16,365.09,24Z" transform="translate(-24 -24)" fill="#f15a24"/>\n  <\/g>\n  <g>\n    <polygon points="240.5 354.97 240.5 240.5 354.83 240.5 455.63 341.09 340.85 455.63 240.5 354.97" fill="url(#cd92637f-6abd-45fb-92c8-f0cf8f946c8d)"/>\n    <path d="M377,269l96.29,96.09L364.85,473.27,269,377.11V269H377m4-9H260V380.83L364.84,486,486,365.09,380.93,260.24V260Z" transform="translate(-24 -24)" fill="#1b1464"/>\n  <\/g>\n<\/svg>\n\t';
  }
  KpspemuAssets.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'KpspemuAssets',
    interfaces: []
  };
  var KpspemuAssets_instance = null;
  function KpspemuAssets_getInstance() {
    if (KpspemuAssets_instance === null) {
      new KpspemuAssets();
    }
    return KpspemuAssets_instance;
  }
  var KPSPEMU_VERSION;
  function main(args) {
    Main_getInstance().main_kand9s$(args);
  }
  function Main() {
    Main_instance = this;
  }
  function Main$main$lambda($receiver, continuation_0, suspended) {
    var instance = new Coroutine$Main$main$lambda($receiver, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$Main$main$lambda($receiver, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
  }
  Coroutine$Main$main$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Main$main$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Main$main$lambda.prototype.constructor = Coroutine$Main$main$lambda;
  Coroutine$Main$main$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = getCoroutineContext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return new Emulator(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Main$main$lambda_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$Main$main$lambda_0($receiver_0, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$Main$main$lambda_0($receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$Main$main$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Main$main$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Main$main$lambda_0.prototype.constructor = Coroutine$Main$main$lambda_0;
  Coroutine$Main$main$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.get_wx4qjr$(getKClass(Browser), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.get_wx4qjr$(getKClass(Emulator), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return new PromptConfigurator(this.local$tmp$, this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Main$main$lambda_1($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$Main$main$lambda_1($receiver_0, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$Main$main$lambda_1($receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$tmp$_0 = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$Main$main$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Main$main$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Main$main$lambda_1.prototype.constructor = Coroutine$Main$main$lambda_1;
  Coroutine$Main$main$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.get_wx4qjr$(getKClass(Browser), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.get_wx4qjr$(getKClass(Emulator), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.local$tmp$_0 = this.result_0;
            this.state_0 = 4;
            this.result_0 = this.local$$receiver.get_wx4qjr$(getKClass(PromptConfigurator), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            return new KpspemuMainScene(this.local$tmp$, this.local$tmp$_0, this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Main$main$lambda_2($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$Main$main$lambda_2($receiver_0, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$Main$main$lambda_2($receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$Main$main$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Main$main$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Main$main$lambda_2.prototype.constructor = Coroutine$Main$main$lambda_2;
  Coroutine$Main$main$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.get_wx4qjr$(getKClass(Browser), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.get_wx4qjr$(getKClass(Emulator), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return new DebugScene(this.local$tmp$, this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Main$main$lambda_3($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$Main$main$lambda_3($receiver_0, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$Main$main$lambda_3($receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$Main$main$lambda_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Main$main$lambda_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Main$main$lambda_3.prototype.constructor = Coroutine$Main$main$lambda_3;
  Coroutine$Main$main$lambda_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.get_wx4qjr$(getKClass(AsyncInjector), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return new Browser(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Main.prototype.main_kand9s$ = function (args) {
    korge.Korge.invoke_s7k2f4$(KpspemuModule_getInstance(), void 0, void 0, void 0, void 0, void 0, (new AsyncInjector()).mapSingleton_siz2e9$(getKClass(Emulator), Main$main$lambda).mapSingleton_siz2e9$(getKClass(PromptConfigurator), Main$main$lambda_0).mapPrototype_siz2e9$(getKClass(KpspemuMainScene), Main$main$lambda_1).mapPrototype_siz2e9$(getKClass(DebugScene), Main$main$lambda_2).mapSingleton_siz2e9$(getKClass(Browser), Main$main$lambda_3));
  };
  Main.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Main',
    interfaces: []
  };
  var Main_instance = null;
  function Main_getInstance() {
    if (Main_instance === null) {
      new Main();
    }
    return Main_instance;
  }
  function KpspemuModule() {
    KpspemuModule_instance = this;
    Module.call(this);
    this.clearEachFrame_drvy51$_0 = true;
    this.mainScene_x1qskp$_0 = getKClass(KpspemuMainScene);
    this.title_f8gi32$_0 = 'kpspemu - 0.5.0-SNAPSHOT';
    this.iconImage_hhmu94$_0 = SVG_init(KpspemuAssets_getInstance().LOGO);
  }
  Object.defineProperty(KpspemuModule.prototype, 'clearEachFrame', {
    get: function () {
      return this.clearEachFrame_drvy51$_0;
    }
  });
  Object.defineProperty(KpspemuModule.prototype, 'mainScene', {
    get: function () {
      return this.mainScene_x1qskp$_0;
    }
  });
  Object.defineProperty(KpspemuModule.prototype, 'title', {
    get: function () {
      return this.title_f8gi32$_0;
    }
  });
  Object.defineProperty(KpspemuModule.prototype, 'iconImage', {
    get: function () {
      return this.iconImage_hhmu94$_0;
    }
  });
  Object.defineProperty(KpspemuModule.prototype, 'size', {
    get: function () {
      return new SizeInt(480, 272);
    }
  });
  Object.defineProperty(KpspemuModule.prototype, 'windowSize', {
    get: function () {
      return new SizeInt(480 * 2 | 0, 272 * 2 | 0);
    }
  });
  KpspemuModule.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'KpspemuModule',
    interfaces: [Module]
  };
  var KpspemuModule_instance = null;
  function KpspemuModule_getInstance() {
    if (KpspemuModule_instance === null) {
      new KpspemuModule();
    }
    return KpspemuModule_instance;
  }
  function SceneWithProcess() {
    Scene.call(this);
    this.processes_v46n91$_0 = ArrayList_init();
  }
  function SceneWithProcess$registerSceneProcess$lambda(closure$callback_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$SceneWithProcess$registerSceneProcess$lambda(closure$callback_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$SceneWithProcess$registerSceneProcess$lambda(closure$callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$SceneWithProcess$registerSceneProcess$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SceneWithProcess$registerSceneProcess$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SceneWithProcess$registerSceneProcess$lambda.prototype.constructor = Coroutine$SceneWithProcess$registerSceneProcess$lambda;
  Coroutine$SceneWithProcess$registerSceneProcess$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SceneWithProcess.prototype.registerSceneProcess_g2bo5h$ = function (callback) {
    var $receiver = this.processes_v46n91$_0;
    var element = go(this, SceneWithProcess$registerSceneProcess$lambda(callback));
    $receiver.add_11rb$(element);
  };
  SceneWithProcess.prototype.sceneDestroy = function (continuation_0, suspended) {
    var instance = new Coroutine$sceneDestroy(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceneDestroy($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$sceneDestroy.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceneDestroy.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceneDestroy.prototype.constructor = Coroutine$sceneDestroy;
  Coroutine$sceneDestroy.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = Scene.prototype.sceneDestroy.call(this.$this, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            tmp$ = this.$this.processes_v46n91$_0.iterator();
            while (tmp$.hasNext()) {
              var process = tmp$.next();
              process.cancel_tcv7n7$();
            }

            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SceneWithProcess.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SceneWithProcess',
    interfaces: [Scene]
  };
  function KpspemuMainScene(browser, emulator, promptConfigurator) {
    KpspemuMainScene$Companion_getInstance();
    SceneWithProcess.call(this);
    this.browser = browser;
    this.emulator_s1jj94$_0 = emulator;
    this.promptConfigurator = promptConfigurator;
    this.tex_t00rkw$_0 = lazy(KpspemuMainScene$tex$lambda(this));
    this.agRenderer_d575ks$_0 = lazy(KpspemuMainScene$agRenderer$lambda(this));
    this.hudFont_nslosf$_0 = lazy(KpspemuMainScene$hudFont$lambda(this));
    this.running = true;
    this.ended = false;
    this.paused = false;
    this.forceSteps = 0;
    this.icon0Texture = null;
    this.icon0Image_7qelyh$_0 = lazy(KpspemuMainScene$icon0Image$lambda(this));
    this.titleText_aoe5zy$_0 = lazy(KpspemuMainScene$titleText$lambda(this));
    this.hud_sztf4g$_0 = this.hud_sztf4g$_0;
    this.debugSceneContainer_btkfj5$_0 = this.debugSceneContainer_btkfj5$_0;
    this.fpsCounter = new FpsCounter();
    this.hudQueue = new AsyncThread();
  }
  Object.defineProperty(KpspemuMainScene.prototype, 'emulator', {
    get: function () {
      return this.emulator_s1jj94$_0;
    }
  });
  var TimeSpan = $module$korge_js.com.soywiz.korge.time.TimeSpan;
  function KpspemuMainScene$Companion() {
    KpspemuMainScene$Companion_instance = this;
    this.logger = Logger.Companion.invoke_61zpoe$('KpspemuMainScene');
    this.MS_0 = TimeSpan.Companion.fromMilliseconds_za3lpa$(numberToInt(0));
    this.MS_1 = TimeSpan.Companion.fromMilliseconds_za3lpa$(numberToInt(1));
    this.MS_2 = TimeSpan.Companion.fromMilliseconds_za3lpa$(numberToInt(2));
    this.MS_10 = TimeSpan.Companion.fromMilliseconds_za3lpa$(numberToInt(10));
    this.MS_15 = TimeSpan.Companion.fromMilliseconds_za3lpa$(numberToInt(15));
  }
  KpspemuMainScene$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var KpspemuMainScene$Companion_instance = null;
  function KpspemuMainScene$Companion_getInstance() {
    if (KpspemuMainScene$Companion_instance === null) {
      new KpspemuMainScene$Companion();
    }
    return KpspemuMainScene$Companion_instance;
  }
  Object.defineProperty(KpspemuMainScene.prototype, 'tex', {
    get: function () {
      var $receiver = this.tex_t00rkw$_0;
      new PropertyMetadata('tex');
      return $receiver.value;
    }
  });
  Object.defineProperty(KpspemuMainScene.prototype, 'agRenderer', {
    get: function () {
      var $receiver = this.agRenderer_d575ks$_0;
      new PropertyMetadata('agRenderer');
      return $receiver.value;
    }
  });
  Object.defineProperty(KpspemuMainScene.prototype, 'hudFont', {
    get: function () {
      var $receiver = this.hudFont_nslosf$_0;
      new PropertyMetadata('hudFont');
      return $receiver.value;
    }
  });
  function KpspemuMainScene$resetEmulator$ObjectLiteral(this$KpspemuMainScene) {
    this.this$KpspemuMainScene = this$KpspemuMainScene;
    GpuRenderer.call(this);
    this.identity_0 = new Matrix2d();
    this.renderContext_0 = new RenderContext(this$KpspemuMainScene.views.ag);
  }
  Object.defineProperty(KpspemuMainScene$resetEmulator$ObjectLiteral.prototype, 'queuedJobs', {
    get: function () {
      return this.this$KpspemuMainScene.agRenderer.taskCountFlag;
    }
  });
  KpspemuMainScene$resetEmulator$ObjectLiteral.prototype.render_9iyg8u$ = function (batches) {
    this.this$KpspemuMainScene.agRenderer.addBatches_9iyg8u$(batches);
  };
  KpspemuMainScene$resetEmulator$ObjectLiteral.prototype.reset = function () {
    GpuRenderer.prototype.reset.call(this);
    this.this$KpspemuMainScene.agRenderer.reset();
  };
  function KpspemuMainScene$resetEmulator$ObjectLiteral$tryExecuteNow$lambda(this$KpspemuMainScene, this$) {
    return function () {
      this$KpspemuMainScene.agRenderer.render_djqboz$(this$KpspemuMainScene.views, this$.renderContext_0, this$.identity_0);
      return Unit;
    };
  }
  KpspemuMainScene$resetEmulator$ObjectLiteral.prototype.tryExecuteNow = function () {
    this.this$KpspemuMainScene.views.ag.offscreenRendering_o14v8n$(KpspemuMainScene$resetEmulator$ObjectLiteral$tryExecuteNow$lambda(this.this$KpspemuMainScene, this));
  };
  KpspemuMainScene$resetEmulator$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [GpuRenderer]
  };
  KpspemuMainScene.prototype.resetEmulator = function (continuation_0, suspended) {
    var instance = new Coroutine$resetEmulator(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$resetEmulator($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$resetEmulator.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$resetEmulator.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$resetEmulator.prototype.constructor = Coroutine$resetEmulator;
  Coroutine$resetEmulator.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.running = true;
            this.$this.ended = false;
            this.state_0 = 2;
            this.result_0 = this.$this.emulator.reset(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.$this.emulator.gpuRenderer = new KpspemuMainScene$resetEmulator$ObjectLiteral(this.$this);
            this.$this.agRenderer.anyBatch = false;
            this.$this.agRenderer.reset();
            this.$this.setIcon0Bitmap_uler2c$(new Bitmap32(1, 1));
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Object.defineProperty(KpspemuMainScene.prototype, 'icon0Image', {
    get: function () {
      var $receiver = this.icon0Image_7qelyh$_0;
      new PropertyMetadata('icon0Image');
      return $receiver.value;
    }
  });
  Object.defineProperty(KpspemuMainScene.prototype, 'titleText', {
    get: function () {
      var $receiver = this.titleText_aoe5zy$_0;
      new PropertyMetadata('titleText');
      return $receiver.value;
    }
  });
  KpspemuMainScene.prototype.setIcon0Bitmap_uler2c$ = function (bmp) {
    var tmp$;
    this.icon0Image.tex = texture(this.views, bmp);
    (tmp$ = this.icon0Texture) != null ? (tmp$.close(), Unit) : null;
    this.icon0Texture = this.icon0Image.tex;
  };
  function KpspemuMainScene$createEmulatorWithExe$ObjectLiteral(this$KpspemuMainScene) {
    this.this$KpspemuMainScene = this$KpspemuMainScene;
    LoadProcess.call(this);
  }
  KpspemuMainScene$createEmulatorWithExe$ObjectLiteral.prototype.readIcon0_fqrh44$ = function (icon0, continuation) {
    try {
      this.this$KpspemuMainScene.setIcon0Bitmap_uler2c$(format.PNG.read_nwlife$(icon0, 'file.png').toBMP32());
    }
     catch (e) {
      if (Kotlin.isType(e, Throwable)) {
        println('ERROR at loadExecutableAndStart');
        printStackTrace(e);
      }
       else
        throw e;
    }
  };
  KpspemuMainScene$createEmulatorWithExe$ObjectLiteral.prototype.readParamSfo_i9kez$ = function (psf, continuation) {
    var tmp$, tmp$_0, tmp$_1;
    var $this = KpspemuMainScene$Companion_getInstance().logger;
    var level = LogLevel.WARN;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'PARAM.SFO:');
    }
    tmp$ = psf.entriesByName.entries.iterator();
    while (tmp$.hasNext()) {
      var tmp$_2 = tmp$.next();
      var key = tmp$_2.key;
      var value = tmp$_2.value;
      var $this_0 = KpspemuMainScene$Companion_getInstance().logger;
      var level_0 = LogLevel.WARN;
      if ($this_0.isEnabled_ci8eq1$(level_0)) {
        $this_0.actualLog_t189ph$(level_0, 'PSF: ' + key + ' = ' + toString(value));
      }
    }
    this.this$KpspemuMainScene.titleText.text = (tmp$_1 = (tmp$_0 = psf.entriesByName.get_11rb$('TITLE')) != null ? tmp$_0.toString() : null) != null ? tmp$_1 : '';
  };
  KpspemuMainScene$createEmulatorWithExe$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [LoadProcess]
  };
  KpspemuMainScene.prototype.createEmulatorWithExe_phxig4$ = function (exeFile_0, continuation_0, suspended) {
    var instance = new Coroutine$createEmulatorWithExe_phxig4$(this, exeFile_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$createEmulatorWithExe_phxig4$($this, exeFile_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$exeFile = exeFile_0;
  }
  Coroutine$createEmulatorWithExe_phxig4$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$createEmulatorWithExe_phxig4$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$createEmulatorWithExe_phxig4$.prototype.constructor = Coroutine$createEmulatorWithExe_phxig4$;
  Coroutine$createEmulatorWithExe_phxig4$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.setIcon0Bitmap_uler2c$(new Bitmap32(144, 80));
            this.$this.titleText.text = '';
            this.state_0 = 2;
            this.result_0 = this.$this.resetEmulator(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            registerNativeModules(this.$this.emulator);
            this.state_0 = 3;
            this.result_0 = loadExecutableAndStart(this.$this.emulator, this.local$exeFile, new KpspemuMainScene$createEmulatorWithExe$ObjectLiteral(this.$this), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Object.defineProperty(KpspemuMainScene.prototype, 'hud', {
    get: function () {
      if (this.hud_sztf4g$_0 == null)
        return throwUPAE('hud');
      return this.hud_sztf4g$_0;
    },
    set: function (hud) {
      this.hud_sztf4g$_0 = hud;
    }
  });
  KpspemuMainScene.prototype.cpuProcess = function (continuation_0, suspended) {
    var instance = new Coroutine$cpuProcess(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$cpuProcess($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 9;
    this.$this = $this;
    this.local$startTime = void 0;
  }
  Coroutine$cpuProcess.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$cpuProcess.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$cpuProcess.prototype.constructor = Coroutine$cpuProcess;
  Coroutine$cpuProcess.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 1;
            continue;
          case 1:
            if (!this.$this.paused || this.$this.forceSteps > 0) {
              if (this.$this.forceSteps > 0) {
                this.$this.forceSteps = this.$this.forceSteps - 1 | 0;
              }
              if (this.$this.running && this.$this.emulator.running) {
                this.local$startTime = klock.Klock.currentTimeMillis();
                this.exceptionState_0 = 4;
                this.state_0 = 3;
                this.result_0 = this.$this.emulator.threadManager.step(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                break;
              }
               else {
                if (!this.$this.ended) {
                  this.$this.ended = true;
                  println('COMPLETED');
                  get_display(this.$this).crash();
                }
                this.state_0 = 6;
                continue;
              }
            }
             else {
              this.state_0 = 2;
              this.result_0 = sleep(this.$this, KpspemuMainScene$Companion_getInstance().MS_10, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }

          case 2:
            this.state_0 = 8;
            continue;
          case 3:
            this.exceptionState_0 = 9;
            this.state_0 = 5;
            continue;
          case 4:
            this.exceptionState_0 = 9;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              println('ERROR at cpuProcess');
              printStackTrace(e);
              this.$this.running = false;
            }
             else
              throw e;
            this.state_0 = 5;
            continue;
          case 5:
            var endTime = klock.Klock.currentTimeMillis();
            this.$this.agRenderer.stats.cpuTime = endTime.subtract(this.local$startTime).toInt();
            this.state_0 = 6;
            continue;
          case 6:
            this.state_0 = 7;
            this.result_0 = this.$this.emulator.threadManager.waitThreadChange(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 7:
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 1;
            continue;
          case 9:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 9)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  KpspemuMainScene.prototype.displayProcess = function (continuation_0, suspended) {
    var instance = new Coroutine$displayProcess(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$displayProcess($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$displayProcess.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$displayProcess.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$displayProcess.prototype.constructor = Coroutine$displayProcess;
  Coroutine$displayProcess.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            get_controller(this.$this).startFrame_za3lpa$(get_timeManager(this.$this).getTimeInMicrosecondsInt());
            this.$this.emulator.interruptManager.dispatchVsync();
            this.state_0 = 3;
            this.result_0 = sleep(this.$this, KpspemuMainScene$Companion_getInstance().MS_15, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            get_controller(this.$this).endFrame();
            this.state_0 = 2;
            continue;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$lambda(this$KpspemuMainScene_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda(this$KpspemuMainScene_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda(this$KpspemuMainScene_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda;
  Coroutine$KpspemuMainScene$sceneInit$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$KpspemuMainScene.cpuProcess(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$lambda_0(this$KpspemuMainScene_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_0(this$KpspemuMainScene_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_0(this$KpspemuMainScene_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_0.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_0;
  Coroutine$KpspemuMainScene$sceneInit$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$KpspemuMainScene.displayProcess(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$updateKey$lambda(this$KpspemuMainScene_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$updateKey$lambda(this$KpspemuMainScene_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$updateKey$lambda(this$KpspemuMainScene_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$updateKey$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$updateKey$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$updateKey$lambda.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$updateKey$lambda;
  Coroutine$KpspemuMainScene$sceneInit$updateKey$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$KpspemuMainScene.promptConfigurator.prompt(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$updateKey$lambda_0(this$KpspemuMainScene_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$updateKey$lambda_0(this$KpspemuMainScene_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$updateKey$lambda_0(this$KpspemuMainScene_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$updateKey$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$updateKey$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$updateKey$lambda_0.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$updateKey$lambda_0;
  Coroutine$KpspemuMainScene$sceneInit$updateKey$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$KpspemuMainScene.toggleHud(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$updateKey(closure$keys, this$KpspemuMainScene) {
    return function (keyCode, pressed) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      closure$keys[keyCode & 255] = pressed;
      if (keyCode === PspEmuKeys_getInstance().RETURN)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$start_getInstance(), pressed);
      else if (keyCode === PspEmuKeys_getInstance().SPACE)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$select_getInstance(), pressed);
      else if (keyCode === PspEmuKeys_getInstance().W)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$triangle_getInstance(), pressed);
      else if (keyCode === PspEmuKeys_getInstance().A)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$square_getInstance(), pressed);
      else if (keyCode === PspEmuKeys_getInstance().S)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$cross_getInstance(), pressed);
      else if (keyCode === PspEmuKeys_getInstance().D)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$circle_getInstance(), pressed);
      else if (keyCode === PspEmuKeys_getInstance().Q)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$leftTrigger_getInstance(), pressed);
      else if (keyCode === PspEmuKeys_getInstance().E)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$rightTrigger_getInstance(), pressed);
      else if (keyCode === PspEmuKeys_getInstance().LEFT)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$left_getInstance(), pressed);
      else if (keyCode === PspEmuKeys_getInstance().UP)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$up_getInstance(), pressed);
      else if (keyCode === PspEmuKeys_getInstance().RIGHT)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$right_getInstance(), pressed);
      else if (keyCode === PspEmuKeys_getInstance().DOWN)
        get_controller(this$KpspemuMainScene).updateButton_yw5fnw$(PspCtrlButtons$down_getInstance(), pressed);
      else if (keyCode !== PspEmuKeys_getInstance().I && keyCode !== PspEmuKeys_getInstance().J && keyCode !== PspEmuKeys_getInstance().K && keyCode !== PspEmuKeys_getInstance().L) {
        var $this = KpspemuMainScene$Companion_getInstance().logger;
        var level = LogLevel.TRACE;
        if ($this.isEnabled_ci8eq1$(level)) {
          $this.actualLog_t189ph$(level, 'UnhandledKey(' + pressed + '): ' + keyCode);
        }
      }
      if (pressed) {
        if (keyCode === PspEmuKeys_getInstance().F7)
          go_0(this$KpspemuMainScene.coroutineContext, KpspemuMainScene$sceneInit$updateKey$lambda(this$KpspemuMainScene));
        else if (keyCode === PspEmuKeys_getInstance().F9)
          this$KpspemuMainScene.emulator.globalTrace = !this$KpspemuMainScene.emulator.globalTrace;
        else if (keyCode === PspEmuKeys_getInstance().F10)
          go_0(this$KpspemuMainScene.coroutineContext, KpspemuMainScene$sceneInit$updateKey$lambda_0(this$KpspemuMainScene));
        else if (keyCode === PspEmuKeys_getInstance().F11) {
          println('THREAD_DUMP:');
          tmp$ = this$KpspemuMainScene.emulator.threadManager.threads.iterator();
          while (tmp$.hasNext()) {
            var thread = tmp$.next();
            println('Thread[' + thread.id + '](' + thread.name + ') : ' + thread.status + ' : ' + toString(thread.waitObject) + ', running = ' + thread.running + ', waiting = ' + thread.waiting + ', priority=' + thread.priority + ', PC=' + get_hex(thread.state.PC) + ', preemptionCount=' + thread.preemptionCount + ', totalExecuted=' + thread.state.totalExecuted);
          }
        }
      }
      tmp$_2 = get_controller(this$KpspemuMainScene);
      if (closure$keys[PspEmuKeys_getInstance().J])
        tmp$_0 = -1.0;
      else if (closure$keys[PspEmuKeys_getInstance().L])
        tmp$_0 = +1.0;
      else
        tmp$_0 = 0.0;
      if (closure$keys[PspEmuKeys_getInstance().I])
        tmp$_1 = -1.0;
      else if (closure$keys[PspEmuKeys_getInstance().K])
        tmp$_1 = +1.0;
      else
        tmp$_1 = 0.0;
      tmp$_2.updateAnalog_dleff0$(tmp$_0, tmp$_1);
    };
  }
  function KpspemuMainScene$sceneInit$getInfoText(this$KpspemuMainScene) {
    return function () {
      var out = ArrayList_init();
      out.add_11rb$('kpspemu');
      var element = Kpspemu_getInstance().VERSION;
      out.add_11rb$(element);
      out.add_11rb$('');
      var element_0 = 'totalThreads=' + this$KpspemuMainScene.emulator.threadManager.totalThreads;
      out.add_11rb$(element_0);
      var element_1 = 'waitingThreads=' + this$KpspemuMainScene.emulator.threadManager.waitingThreads;
      out.add_11rb$(element_1);
      var element_2 = 'activeThreads=' + this$KpspemuMainScene.emulator.threadManager.activeThreads;
      out.add_11rb$(element_2);
      out.add_11rb$('');
      var element_3 = this$KpspemuMainScene.agRenderer.stats.toString();
      out.add_11rb$(element_3);
      out.add_11rb$('');
      var element_4 = 'FPS: ' + this$KpspemuMainScene.fpsCounter.getFpsInt();
      out.add_11rb$(element_4);
      return joinToString(out, '\n');
    };
  }
  function KpspemuMainScene$sceneInit$lambda_1(this$KpspemuMainScene_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_1(this$KpspemuMainScene_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_1(this$KpspemuMainScene_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_1.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_1;
  Coroutine$KpspemuMainScene$sceneInit$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.local$this$KpspemuMainScene.browser.openFile_61zpoe$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            tmp$ = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$this$KpspemuMainScene.createEmulatorWithExe_phxig4$(tmp$, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$lambda_2(this$KpspemuMainScene_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_2(this$KpspemuMainScene_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_2(this$KpspemuMainScene_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
    this.local$it = it_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_2.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_2;
  Coroutine$KpspemuMainScene$sceneInit$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
            tmp$_1 = this.local$this$KpspemuMainScene.agRenderer;
            tmp$ = this.local$this$KpspemuMainScene.agRenderer.renderMode;
            if (equals(tmp$, AGRenderer$RenderMode$AUTO_getInstance()))
              tmp$_0 = AGRenderer$RenderMode$NORMAL_getInstance();
            else if (equals(tmp$, AGRenderer$RenderMode$NORMAL_getInstance()))
              tmp$_0 = AGRenderer$RenderMode$AUTO_getInstance();
            else
              tmp$_0 = AGRenderer$RenderMode$AUTO_getInstance();
            tmp$_1.renderMode = tmp$_0;
            tmp$_4 = this.local$it.view;
            tmp$_2 = this.local$this$KpspemuMainScene.agRenderer.renderMode;
            if (equals(tmp$_2, AGRenderer$RenderMode$AUTO_getInstance()))
              tmp$_3 = 'Auto';
            else if (equals(tmp$_2, AGRenderer$RenderMode$NORMAL_getInstance()))
              tmp$_3 = 'Normal';
            else if (equals(tmp$_2, AGRenderer$RenderMode$DIRECT_getInstance()))
              tmp$_3 = 'Direct';
            else
              tmp$_3 = Kotlin.noWhenBranchMatched();
            return setText(tmp$_4, tmp$_3), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$pause(this$KpspemuMainScene, closure$pauseButton) {
    return function (set) {
      this$KpspemuMainScene.paused = set;
      setText(closure$pauseButton.v == null ? throwUPAE('pauseButton') : closure$pauseButton.v, this$KpspemuMainScene.paused ? 'Resume' : 'Pause');
    };
  }
  function KpspemuMainScene$sceneInit$lambda_3(this$KpspemuMainScene_0, closure$pause_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_3(this$KpspemuMainScene_0, closure$pause_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_3(this$KpspemuMainScene_0, closure$pause_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
    this.local$closure$pause = closure$pause_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_3.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_3;
  Coroutine$KpspemuMainScene$sceneInit$lambda_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$closure$pause(!this.local$this$KpspemuMainScene.paused), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$lambda_4(closure$pause_0, this$KpspemuMainScene_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_4(closure$pause_0, this$KpspemuMainScene_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_4(closure$pause_0, this$KpspemuMainScene_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$pause = closure$pause_0;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_4.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_4.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_4.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_4;
  Coroutine$KpspemuMainScene$sceneInit$lambda_4.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.local$closure$pause(true);
            return tmp$ = this.local$this$KpspemuMainScene.forceSteps, this.local$this$KpspemuMainScene.forceSteps = tmp$ + 1 | 0, tmp$;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$lambda_5(this$KpspemuMainScene_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_5(this$KpspemuMainScene_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_5(this$KpspemuMainScene_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_5.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_5.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_5.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_5;
  Coroutine$KpspemuMainScene$sceneInit$lambda_5.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$KpspemuMainScene.promptConfigurator.prompt(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$ObjectLiteral(this$KpspemuMainScene, closure$getInfoText, closure$infoText, views) {
    this.this$KpspemuMainScene = this$KpspemuMainScene;
    this.closure$getInfoText = closure$getInfoText;
    this.closure$infoText = closure$infoText;
    View.call(this, views);
  }
  KpspemuMainScene$sceneInit$ObjectLiteral.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    out.setTo_6y0v78$(numberToDouble(0), numberToDouble(0), numberToDouble(480), numberToDouble(272));
  };
  KpspemuMainScene$sceneInit$ObjectLiteral.prototype.render_edjgwy$ = function (ctx, m) {
    var startTime = klock.Klock.currentTimeMillis();
    this.this$KpspemuMainScene.fpsCounter.tick_14dthe$(startTime.toNumber());
    this.this$KpspemuMainScene.agRenderer.render_djqboz$(this.views, ctx, m);
    this.this$KpspemuMainScene.agRenderer.renderTexture_djqboz$(this.views, ctx, m);
    var endTime = klock.Klock.currentTimeMillis();
    this.this$KpspemuMainScene.agRenderer.stats.renderTime = endTime.subtract(startTime).toInt();
    this.closure$infoText.text = this.closure$getInfoText();
    this.this$KpspemuMainScene.agRenderer.stats.reset();
  };
  KpspemuMainScene$sceneInit$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [View]
  };
  var scene = $module$korge_js.com.soywiz.korge.scene;
  function KpspemuMainScene$sceneInit$lambda_6(this$KpspemuMainScene_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_6(this$KpspemuMainScene_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_6(this$KpspemuMainScene_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_6.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_6.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_6.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_6;
  Coroutine$KpspemuMainScene$sceneInit$lambda_6.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$KpspemuMainScene.toggleHud(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$lambda_7(closure$updateKey_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_7(closure$updateKey_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_7(closure$updateKey_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$updateKey = closure$updateKey_0;
    this.local$it = it_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_7.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_7.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_7.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_7;
  Coroutine$KpspemuMainScene$sceneInit$lambda_7.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$closure$updateKey(this.local$it.keyCode, true), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$sceneInit$lambda_8(closure$updateKey_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$sceneInit$lambda_8(closure$updateKey_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$sceneInit$lambda_8(closure$updateKey_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$updateKey = closure$updateKey_0;
    this.local$it = it_0;
  }
  Coroutine$KpspemuMainScene$sceneInit$lambda_8.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$sceneInit$lambda_8.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$sceneInit$lambda_8.prototype.constructor = Coroutine$KpspemuMainScene$sceneInit$lambda_8;
  Coroutine$KpspemuMainScene$sceneInit$lambda_8.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$closure$updateKey(this.local$it.keyCode, false), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  var trim_0 = Kotlin.kotlin.text.trim_gw00vp$;
  KpspemuMainScene.prototype.sceneInit_f3yb8w$ = function (sceneView_0, continuation_0, suspended) {
    var instance = new Coroutine$sceneInit_f3yb8w$_0(this, sceneView_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceneInit_f3yb8w$_0($this, sceneView_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$location = void 0;
    this.local$sceneView = sceneView_0;
  }
  Coroutine$sceneInit_f3yb8w$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceneInit_f3yb8w$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceneInit_f3yb8w$_0.prototype.constructor = Coroutine$sceneInit_f3yb8w$_0;
  Coroutine$sceneInit_f3yb8w$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.registerSceneProcess_g2bo5h$(KpspemuMainScene$sceneInit$lambda(this.$this));
            this.$this.registerSceneProcess_g2bo5h$(KpspemuMainScene$sceneInit$lambda_0(this.$this));
            this.state_0 = 2;
            this.result_0 = this.$this.resetEmulator(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            println('KPSPEMU: 0.5.0-SNAPSHOT');
            println('DYNAREK: 0.5.0');
            println('KORINJECT: 0.5.0');
            println('KLOGGER: 0.5.0');
            println('KMEM: 0.5.0');
            println('KLOCK: 0.5.0');
            println('KORMA: 0.20.1');
            println('KORIO: 0.20.1');
            println('KORIM: 0.20.1');
            println('KORAG: 0.20.1');
            println('KORAU: 0.20.1');
            println('KORUI: 0.20.1');
            println('KORGE: 0.20.1');
            this.$this.hud = this.$this.views.container();
            var keys = Kotlin.booleanArray(256);
            var updateKey = KpspemuMainScene$sceneInit$updateKey(keys, this.$this);
            var getInfoText = KpspemuMainScene$sceneInit$getInfoText(this.$this);
            var $receiver = text(this.$this.views, getInfoText(), 8.0, void 0, this.$this.hudFont);
            $receiver.x = 4.0;
            $receiver.y = 4.0;
            var infoText = $receiver;
            var $receiver_0 = simpleButton(this.$this.views, 'Load...', void 0, void 0, this.$this.hudFont);
            $receiver_0.x = 8.0;
            $receiver_0.y = 272.0 - 24.0 * 1;
            var tmp$, tmp$_0;
            (tmp$_0 = (tmp$ = $receiver_0 != null ? get_mouse($receiver_0) : null) != null ? tmp$.onClick : null) != null ? addSuspend(tmp$_0, $receiver_0.views.coroutineContext, KpspemuMainScene$sceneInit$lambda_1(this.$this)) : null;
            var loadButton = $receiver_0;
            var $receiver_1 = simpleButton(this.$this.views, 'Auto', void 0, void 0, this.$this.hudFont);
            $receiver_1.x = 8.0;
            $receiver_1.y = 272.0 - 24.0 * 2;
            var tmp$_1, tmp$_0_0;
            (tmp$_0_0 = (tmp$_1 = $receiver_1 != null ? get_mouse($receiver_1) : null) != null ? tmp$_1.onClick : null) != null ? addSuspend(tmp$_0_0, $receiver_1.views.coroutineContext, KpspemuMainScene$sceneInit$lambda_2(this.$this)) : null;
            var directButton = $receiver_1;
            var pauseButton = {v: null};
            var pause = KpspemuMainScene$sceneInit$pause(this.$this, pauseButton);
            var $receiver_2 = simpleButton(this.$this.views, 'Pause', void 0, void 0, this.$this.hudFont);
            $receiver_2.x = 8.0;
            $receiver_2.y = 272.0 - 24.0 * 3;
            var tmp$_2, tmp$_0_1;
            (tmp$_0_1 = (tmp$_2 = $receiver_2 != null ? get_mouse($receiver_2) : null) != null ? tmp$_2.onClick : null) != null ? addSuspend(tmp$_0_1, $receiver_2.views.coroutineContext, KpspemuMainScene$sceneInit$lambda_3(this.$this, pause)) : null;
            pauseButton.v = ensureNotNull($receiver_2);
            var $receiver_3 = simpleButton(this.$this.views, 'Step', void 0, void 0, this.$this.hudFont);
            $receiver_3.x = 8.0;
            $receiver_3.y = 272.0 - 24.0 * 4;
            var tmp$_3, tmp$_0_2;
            (tmp$_0_2 = (tmp$_3 = $receiver_3 != null ? get_mouse($receiver_3) : null) != null ? tmp$_3.onClick : null) != null ? addSuspend(tmp$_0_2, $receiver_3.views.coroutineContext, KpspemuMainScene$sceneInit$lambda_4(pause, this.$this)) : null;
            var stepButton = $receiver_3;
            var $receiver_4 = simpleButton(this.$this.views, 'prompt', void 0, void 0, this.$this.hudFont);
            $receiver_4.x = 8.0;
            $receiver_4.y = 272.0 - 24.0 * 5;
            var tmp$_4, tmp$_0_3;
            (tmp$_0_3 = (tmp$_4 = $receiver_4 != null ? get_mouse($receiver_4) : null) != null ? tmp$_4.onClick : null) != null ? addSuspend(tmp$_0_3, $receiver_4.views.coroutineContext, KpspemuMainScene$sceneInit$lambda_5(this.$this)) : null;
            var promptButton = $receiver_4;
            var tmp$_5 = this.$this.hud;
            var $this = this.$this.views;
            var color_0 = color.RGBA.invoke_tjonv8$(0, 0, 0, 204);
            var $receiver_5 = new SolidRect_init($this, numberToDouble(96), numberToDouble(272), color_0);
            $receiver_5.enabled = false;
            $receiver_5.mouseEnabled = false;
            tmp$_5.plusAssign_l5rad2$($receiver_5);
            this.$this.hud.plusAssign_l5rad2$(infoText);
            plusAssign(this.$this.hud, loadButton);
            plusAssign(this.$this.hud, directButton);
            this.$this.hud.plusAssign_l5rad2$(pauseButton.v == null ? throwUPAE('pauseButton') : pauseButton.v);
            plusAssign(this.$this.hud, stepButton);
            plusAssign(this.$this.hud, promptButton);
            var tmp$_6 = this.$this.hud;
            var $receiver_6 = this.$this.icon0Image;
            $receiver_6.scale = 0.5;
            $receiver_6.x = 100.0;
            $receiver_6.y = 16.0;
            tmp$_6.plusAssign_l5rad2$($receiver_6);
            var tmp$_7 = this.$this.hud;
            var $receiver_7 = this.$this.titleText;
            $receiver_7.scale = 0.8;
            $receiver_7.x = 100.0;
            $receiver_7.y = 0.0;
            tmp$_7.plusAssign_l5rad2$($receiver_7);
            var displayView = new KpspemuMainScene$sceneInit$ObjectLiteral(this.$this, getInfoText, infoText, this.$this.views);
            this.local$sceneView.plusAssign_l5rad2$(displayView);
            var $receiver_8 = sceneContainer(this.$this.views);
            var injects_0 = [];
            var time_0;
            var transition_0;
            if (time_0 === void 0) {
              time_0 = TimeSpan.Companion.fromMilliseconds_za3lpa$(numberToInt(numberToDouble(0) * 1000.0));
            }

            if (transition_0 === void 0)
              transition_0 = scene.AlphaTransition;
            Kotlin.suspendCall($receiver_8.changeTo_ekc72s$(getKClass(DebugScene), injects_0.slice(), time_0, transition_0, Kotlin.coroutineReceiver()));
            this.result_0 = Kotlin.coroutineResult(Kotlin.coroutineReceiver());
            this.$this.debugSceneContainer = $receiver_8;
            this.local$sceneView.plusAssign_l5rad2$(this.$this.debugSceneContainer);
            this.local$sceneView.plusAssign_l5rad2$(this.$this.hud);
            var tmp$_8, tmp$_0_4;
            (tmp$_0_4 = (tmp$_8 = this.local$sceneView != null ? get_mouse(this.local$sceneView) : null) != null ? tmp$_8.onClick : null) != null ? addSuspend(tmp$_0_4, this.local$sceneView.views.coroutineContext, KpspemuMainScene$sceneInit$lambda_6(this.$this)) : null;
            var tmp$_9, tmp$_0_5;
            (tmp$_0_5 = (tmp$_9 = this.local$sceneView != null ? get_keys(this.local$sceneView) : null) != null ? tmp$_9.onKeyDown : null) != null ? tmp$_0_5.add_25kf2w$(KpspemuMainScene$sceneInit$lambda_7(updateKey)) : null;
            var tmp$_10, tmp$_0_6;
            (tmp$_0_6 = (tmp$_10 = this.local$sceneView != null ? get_keys(this.local$sceneView) : null) != null ? tmp$_10.onKeyUp : null) != null ? tmp$_0_6.add_25kf2w$(KpspemuMainScene$sceneInit$lambda_8(updateKey)) : null;
            if (util.OS.isBrowserJs) {
              var hash = trim(KPspEmuNative_getInstance().documentLocationHash, Kotlin.charArrayOf(35));
              var $receiver_9 = trim(hash, Kotlin.charArrayOf(35));
              var tmp$_11;
              this.local$location = trim_0(Kotlin.isCharSequence(tmp$_11 = $receiver_9) ? tmp$_11 : throwCCE()).toString();
              println('Hash:' + hash + ', Location:' + this.local$location);
              if (this.local$location.length > 0) {
                this.state_0 = 3;
                this.result_0 = this.$this.hudCloseImmediate(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                break;
              }
               else {
                this.state_0 = 5;
                continue;
              }
            }
             else {
              this.state_0 = 6;
              continue;
            }

          case 3:
            this.state_0 = 4;
            this.result_0 = this.$this.createEmulatorWithExe_phxig4$(vfs.localCurrentDirVfs.get_61zpoe$(this.local$location), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            continue;
          case 6:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Object.defineProperty(KpspemuMainScene.prototype, 'debugSceneContainer', {
    get: function () {
      if (this.debugSceneContainer_btkfj5$_0 == null)
        return throwUPAE('debugSceneContainer');
      return this.debugSceneContainer_btkfj5$_0;
    },
    set: function (debugSceneContainer) {
      this.debugSceneContainer_btkfj5$_0 = debugSceneContainer;
    }
  });
  KpspemuMainScene.prototype.toggleHud = function (continuation_0, suspended) {
    var instance = new Coroutine$toggleHud(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$toggleHud($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$toggleHud.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$toggleHud.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$toggleHud.prototype.constructor = Coroutine$toggleHud;
  Coroutine$toggleHud.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.$this.hud.alpha < 0.5) {
              this.state_0 = 3;
              this.result_0 = this.$this.hudOpen(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 2;
              this.result_0 = this.$this.hudClose(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 4;
            continue;
          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  var interpolate = $module$korge_js.$$importsForInline$$['korma-js'].com.soywiz.korma.interpolation.interpolate_yvo9jy$;
  var V2_init = $module$korge_js.com.soywiz.korge.tween.V2;
  function KpspemuMainScene$hudOpen$lambda(this$KpspemuMainScene_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$hudOpen$lambda(this$KpspemuMainScene_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$hudOpen$lambda(this$KpspemuMainScene_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$hudOpen$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$hudOpen$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$hudOpen$lambda.prototype.constructor = Coroutine$KpspemuMainScene$hudOpen$lambda;
  Coroutine$KpspemuMainScene$hudOpen$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$KpspemuMainScene.hud.mouseEnabled = true;
            var tmp$ = this.local$this$KpspemuMainScene.hud;
            var $receiver = getPropertyCallableRef('alpha', 0, function ($receiver) {
              return $receiver.alpha;
            }.bind(null, this.local$this$KpspemuMainScene.hud), function ($receiver, value) {
              $receiver.alpha = value;
            }.bind(null, this.local$this$KpspemuMainScene.hud));
            var tmp$_0 = new V2_init($receiver, $receiver.get(), numberToDouble(1.0), getCallableRef('interpolate', function (v0_0, v1_0, step_0) {
              return interpolate(v0_0, v1_0, step_0);
            }));
            var $receiver_0 = getPropertyCallableRef('x', 0, function ($receiver) {
              return $receiver.x;
            }.bind(null, this.local$this$KpspemuMainScene.hud), function ($receiver, value) {
              $receiver.x = value;
            }.bind(null, this.local$this$KpspemuMainScene.hud));
            this.state_0 = 2;
            this.result_0 = tween(tmp$, [tmp$_0, new V2_init($receiver_0, $receiver_0.get(), numberToDouble(0.0), getCallableRef('interpolate', function (v0_0, v1_0, step_0) {
              return interpolate(v0_0, v1_0, step_0);
            }))], TimeSpan.Companion.fromMilliseconds_za3lpa$(numberToInt(numberToDouble(0.2) * 1000.0)), void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  KpspemuMainScene.prototype.hudOpen = function (continuation_0, suspended) {
    var instance = new Coroutine$hudOpen(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$hudOpen($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$hudOpen.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$hudOpen.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$hudOpen.prototype.constructor = Coroutine$hudOpen;
  Coroutine$hudOpen.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.hudQueue.cancelAndQueue_lnyleu$(KpspemuMainScene$hudOpen$lambda(this.$this), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$hudClose$lambda(this$KpspemuMainScene_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$hudClose$lambda(this$KpspemuMainScene_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$hudClose$lambda(this$KpspemuMainScene_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$hudClose$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$hudClose$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$hudClose$lambda.prototype.constructor = Coroutine$KpspemuMainScene$hudClose$lambda;
  Coroutine$KpspemuMainScene$hudClose$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$KpspemuMainScene.hud.mouseEnabled = false;
            var tmp$ = this.local$this$KpspemuMainScene.hud;
            var $receiver = getPropertyCallableRef('alpha', 0, function ($receiver) {
              return $receiver.alpha;
            }.bind(null, this.local$this$KpspemuMainScene.hud), function ($receiver, value) {
              $receiver.alpha = value;
            }.bind(null, this.local$this$KpspemuMainScene.hud));
            var tmp$_0 = new V2_init($receiver, $receiver.get(), numberToDouble(0.0), getCallableRef('interpolate', function (v0_0, v1_0, step_0) {
              return interpolate(v0_0, v1_0, step_0);
            }));
            var $receiver_0 = getPropertyCallableRef('x', 0, function ($receiver) {
              return $receiver.x;
            }.bind(null, this.local$this$KpspemuMainScene.hud), function ($receiver, value) {
              $receiver.x = value;
            }.bind(null, this.local$this$KpspemuMainScene.hud));
            var end = -32.0;
            this.state_0 = 2;
            this.result_0 = tween(tmp$, [tmp$_0, new V2_init($receiver_0, $receiver_0.get(), numberToDouble(end), getCallableRef('interpolate', function (v0_0, v1_0, step_0) {
              return interpolate(v0_0, v1_0, step_0);
            }))], TimeSpan.Companion.fromMilliseconds_za3lpa$(numberToInt(numberToDouble(0.2) * 1000.0)), void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  KpspemuMainScene.prototype.hudClose = function (continuation_0, suspended) {
    var instance = new Coroutine$hudClose(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$hudClose($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$hudClose.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$hudClose.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$hudClose.prototype.constructor = Coroutine$hudClose;
  Coroutine$hudClose.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.hudQueue.cancelAndQueue_lnyleu$(KpspemuMainScene$hudClose$lambda(this.$this), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KpspemuMainScene$hudCloseImmediate$lambda(this$KpspemuMainScene_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$KpspemuMainScene$hudCloseImmediate$lambda(this$KpspemuMainScene_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KpspemuMainScene$hudCloseImmediate$lambda(this$KpspemuMainScene_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KpspemuMainScene = this$KpspemuMainScene_0;
  }
  Coroutine$KpspemuMainScene$hudCloseImmediate$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KpspemuMainScene$hudCloseImmediate$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KpspemuMainScene$hudCloseImmediate$lambda.prototype.constructor = Coroutine$KpspemuMainScene$hudCloseImmediate$lambda;
  Coroutine$KpspemuMainScene$hudCloseImmediate$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$KpspemuMainScene.hud.mouseEnabled = false;
            this.local$this$KpspemuMainScene.hud.alpha = 0.0;
            return this.local$this$KpspemuMainScene.hud.x = -32.0, Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  KpspemuMainScene.prototype.hudCloseImmediate = function (continuation) {
    return this.hudQueue.cancelAndQueue_lnyleu$(KpspemuMainScene$hudCloseImmediate$lambda(this), continuation);
  };
  function KpspemuMainScene$tex$lambda(this$KpspemuMainScene) {
    return function () {
      return texture(this$KpspemuMainScene.views, get_display(this$KpspemuMainScene).bmp);
    };
  }
  function KpspemuMainScene$agRenderer$lambda(this$KpspemuMainScene) {
    return function () {
      return new AGRenderer(this$KpspemuMainScene, this$KpspemuMainScene.tex);
    };
  }
  function KpspemuMainScene$hudFont$lambda(this$KpspemuMainScene) {
    return function () {
      return BitmapFont_0.Companion.invoke_vefnbj$(this$KpspemuMainScene.views.ag, 'Lucida Console', 32, font.BitmapFontGenerator.LATIN_ALL, false);
    };
  }
  function KpspemuMainScene$icon0Image$lambda(this$KpspemuMainScene) {
    return function () {
      var $receiver = image(this$KpspemuMainScene.views, this$KpspemuMainScene.views.transparentTexture);
      $receiver.alpha = 0.5;
      return $receiver;
    };
  }
  function KpspemuMainScene$titleText$lambda(this$KpspemuMainScene) {
    return function () {
      var $receiver = text(this$KpspemuMainScene.views, '');
      $receiver.alpha = 0.5;
      return $receiver;
    };
  }
  KpspemuMainScene.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KpspemuMainScene',
    interfaces: [WithEmulator, SceneWithProcess]
  };
  function FpsCounter() {
    this.MAX_SAMPLES = 100;
    this.renderTimes = new Float64Array(this.MAX_SAMPLES);
    this.renderTimeOffset = 0;
    this.renderCount = 0;
  }
  FpsCounter.prototype.tick_14dthe$ = function (time) {
    var tmp$;
    this.renderTimes[(tmp$ = this.renderTimeOffset, this.renderTimeOffset = tmp$ + 1 | 0, tmp$) % this.MAX_SAMPLES] = time;
    if (this.renderCount < this.MAX_SAMPLES) {
      this.renderCount = this.renderCount + 1 | 0;
    }
  };
  FpsCounter.prototype.getSample_za3lpa$ = function (offset) {
    return this.renderTimes[umod(this.renderTimeOffset - 1 - offset | 0, this.MAX_SAMPLES)];
  };
  FpsCounter.prototype.getFpsInt = function () {
    return roundToInt(this.getFps());
  };
  FpsCounter.prototype.getFps = function () {
    if (this.renderCount === 0)
      return 0.0;
    var elapsed = this.getSample_za3lpa$(0) - this.getSample_za3lpa$(this.renderCount - 1 | 0);
    return 1000.0 * (this.renderCount / elapsed);
  };
  FpsCounter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FpsCounter',
    interfaces: []
  };
  function preload($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$preload($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$preload($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$preload.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$preload.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$preload.prototype.constructor = Coroutine$preload;
  Coroutine$preload.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readAll(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return openAsync(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function preloadSmall($receiver_0, size_0, continuation_0, suspended) {
    var instance = new Coroutine$preloadSmall($receiver_0, size_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$preloadSmall($receiver_0, size_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$size = size_0;
  }
  Coroutine$preloadSmall.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$preloadSmall.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$preloadSmall.prototype.constructor = Coroutine$preloadSmall;
  Coroutine$preloadSmall.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$size === void 0)
              this.local$size = Kotlin.Long.fromInt(4194304);
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.size(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.result_0.compareTo_11rb$(this.local$size) < 0) {
              this.state_0 = 3;
              this.result_0 = preload(this.local$$receiver, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              return this.local$$receiver;
            }

          case 3:
            return this.result_0;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function LoadProcess() {
  }
  LoadProcess.prototype.readIcon0_fqrh44$ = function (icon0, continuation) {
    return Unit;
  };
  LoadProcess.prototype.readParamSfo_i9kez$ = function (psf, continuation) {
    return Unit;
  };
  LoadProcess.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LoadProcess',
    interfaces: []
  };
  var NotImplementedError_init = Kotlin.kotlin.NotImplementedError;
  function loadExecutableAndStart($receiver_0, file_0, loadProcess_0, continuation_0, suspended) {
    var instance = new Coroutine$loadExecutableAndStart($receiver_0, file_0, loadProcess_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$loadExecutableAndStart($receiver_0, file_0, loadProcess_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$_0 = void 0;
    this.local$tmp$_1 = void 0;
    this.local$tmp$_2 = void 0;
    this.local$tmp$_3 = void 0;
    this.local$tmp$_4 = void 0;
    this.local$tmp$_5 = void 0;
    this.local$stream = void 0;
    this.local$umdLikeStructure = void 0;
    this.local$layerName = void 0;
    this.local$container = void 0;
    this.local$gameName = void 0;
    this.local$$this = void 0;
    this.local$level = void 0;
    this.local$tmp$_9 = void 0;
    this.local$closure$continuation = void 0;
    this.local$format = void 0;
    this.local$$this_0 = void 0;
    this.local$level_0 = void 0;
    this.local$tmp$_10 = void 0;
    this.local$closure$continuation_0 = void 0;
    this.local$afile = void 0;
    this.local$folder = void 0;
    this.local$icon0 = void 0;
    this.local$paramSfo = void 0;
    this.local$pbp = void 0;
    this.local$encryptedData = void 0;
    this.local$decryptedData = void 0;
    this.local$encryptedFile = void 0;
    this.local$decryptedFile = void 0;
    this.local$PSP_GAME_folder = void 0;
    this.local$ms_PSP_GAME_folder = void 0;
    this.local$$receiver = $receiver_0;
    this.local$file = file_0;
    this.local$loadProcess = loadProcess_0;
  }
  Coroutine$loadExecutableAndStart.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$loadExecutableAndStart.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$loadExecutableAndStart.prototype.constructor = Coroutine$loadExecutableAndStart;
  Coroutine$loadExecutableAndStart.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$loadProcess === void 0)
              this.local$loadProcess = new LoadProcess();
            var tmp$;
            var tmp$_0, tmp$_1, tmp$_2;
            this.state_0 = 2;
            this.result_0 = this.local$file.open_7c7tmz$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = preloadSmall(this.result_0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.local$stream = {v: this.result_0};
            this.local$umdLikeStructure = false;
            this.local$layerName = this.local$file.basename;
            this.local$container = this.local$file.parent.jail();
            this.local$gameName = 'virtual';
            var $this = this.local$$receiver.logger;
            var level = LogLevel.WARN;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'Opening ' + this.local$file);
            }

            this.state_0 = 4;
            continue;
          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$stream.v.size(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 5:
            if (this.result_0.compareTo_11rb$(Kotlin.Long.fromInt(16)) < 0) {
              this.local$$this = this.local$$receiver.logger;
              this.local$level = LogLevel.WARN;
              if (this.local$$this.isEnabled_ci8eq1$(this.local$level)) {
                this.local$tmp$_9 = this.local$$this.actualLog_t189ph$;
                this.local$closure$continuation = this;
                this.state_0 = 6;
                this.result_0 = this.local$stream.v.size(this.local$closure$continuation);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                break;
              }
               else {
                this.state_0 = 7;
                continue;
              }
            }
             else {
              this.state_0 = 8;
              continue;
            }

          case 6:
            this.local$tmp$_9.call(this.local$$this, this.local$level, ' - Layer(' + this.local$closure$continuation.result_0 + '): Format ???');
            this.state_0 = 7;
            continue;
          case 7:
            invalidOp('Layer is too small');
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 9;
            this.result_0 = detectPspFormat_1(this.local$stream.v, this.local$layerName, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 9:
            tmp$ = this.result_0;
            this.local$format = tmp$ != null ? tmp$ : invalidOp("Unsupported file format '" + this.local$file + "'");
            this.local$$this_0 = this.local$$receiver.logger;
            this.local$level_0 = LogLevel.WARN;
            if (this.local$$this_0.isEnabled_ci8eq1$(this.local$level_0)) {
              this.local$tmp$_10 = this.local$$this_0.actualLog_t189ph$;
              this.local$closure$continuation_0 = this;
              this.state_0 = 10;
              this.result_0 = this.local$stream.v.size(this.local$closure$continuation_0);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 11;
              continue;
            }

          case 10:
            this.local$tmp$_10.call(this.local$$this_0, this.local$level_0, ' - Layer(' + this.local$closure$continuation_0.result_0 + '): Format ' + this.local$format);
            this.state_0 = 11;
            continue;
          case 11:
            if (equals(this.local$format, PspFileFormat$CSO_getInstance())) {
              this.state_0 = 57;
              this.result_0 = openAsCso(this.local$stream.v, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              if (equals(this.local$format, PspFileFormat$ISO_getInstance()) || equals(this.local$format, PspFileFormat$ZIP_getInstance())) {
                if (equals(this.local$format, PspFileFormat$ISO_getInstance())) {
                  this.state_0 = 33;
                  this.result_0 = openAsIso2(this.local$stream.v, this);
                  if (this.result_0 === COROUTINE_SUSPENDED)
                    return COROUTINE_SUSPENDED;
                  break;
                }
                 else {
                  if (equals(this.local$format, PspFileFormat$ZIP_getInstance())) {
                    this.state_0 = 31;
                    this.result_0 = openAsZip2(this.local$stream.v, void 0, this);
                    if (this.result_0 === COROUTINE_SUSPENDED)
                      return COROUTINE_SUSPENDED;
                    break;
                  }
                   else {
                    throw new NotImplementedError_init('An operation is not implemented: ' + 'Impossible!');
                  }
                }
              }
               else {
                if (equals(this.local$format, PspFileFormat$PBP_getInstance())) {
                  this.state_0 = 22;
                  this.result_0 = Pbp$Companion_getInstance().invoke_axnxby$(this.local$stream.v, this);
                  if (this.result_0 === COROUTINE_SUSPENDED)
                    return COROUTINE_SUSPENDED;
                  break;
                }
                 else {
                  if (equals(this.local$format, PspFileFormat$ENCRYPTED_ELF_getInstance())) {
                    this.state_0 = 16;
                    this.result_0 = readAll(this.local$stream.v, this);
                    if (this.result_0 === COROUTINE_SUSPENDED)
                      return COROUTINE_SUSPENDED;
                    break;
                  }
                   else {
                    if (equals(this.local$format, PspFileFormat$ELF_getInstance())) {
                      if (this.local$umdLikeStructure) {
                        this.local$$receiver.fileManager.currentDirectory = 'umd0:';
                        this.local$$receiver.fileManager.executableFile = 'umd0:/PSP_GAME/USRDIR/EBOOT.BIN';
                        this.local$$receiver.deviceManager.mount_hem4eq$('game0:', this.local$container);
                        this.local$$receiver.deviceManager.mount_hem4eq$('disc0:', this.local$container);
                        this.local$$receiver.deviceManager.mount_hem4eq$('umd0:', this.local$container);
                        this.state_0 = 13;
                        continue;
                      }
                       else {
                        var ngameName = (new PathInfo(this.local$gameName)).basename;
                        this.local$PSP_GAME_folder = 'PSP/GAME/' + ngameName;
                        this.local$ms_PSP_GAME_folder = 'ms0:/' + this.local$PSP_GAME_folder;
                        this.state_0 = 12;
                        this.result_0 = mkdirsSafe(this.local$$receiver.deviceManager.ms.get_61zpoe$(this.local$PSP_GAME_folder), this);
                        if (this.result_0 === COROUTINE_SUSPENDED)
                          return COROUTINE_SUSPENDED;
                        break;
                      }
                    }
                     else {
                      invalidOp('Unhandled format ' + this.local$format);
                      this.state_0 = 15;
                      continue;
                    }
                  }
                }
              }
            }

          case 12:
            this.local$$receiver.fileManager.currentDirectory = this.local$ms_PSP_GAME_folder;
            this.local$$receiver.fileManager.executableFile = this.local$ms_PSP_GAME_folder + '/EBOOT.PBP';
            this.local$$receiver.deviceManager.mount_hem4eq$(this.local$ms_PSP_GAME_folder, (new MergedVfs(listOf([this.local$$receiver.deviceManager.ms.get_61zpoe$(this.local$PSP_GAME_folder).jail(), this.local$container]))).root);
            this.state_0 = 13;
            continue;
          case 13:
            var $this_0 = this.local$$receiver.logger;
            var level_0 = LogLevel.WARN;
            if ($this_0.isEnabled_ci8eq1$(level_0)) {
              $this_0.actualLog_t189ph$(level_0, 'Loading executable mounted at ARG0: ' + this.local$$receiver.fileManager.executableFile + ' : CWD: ' + this.local$$receiver.fileManager.currentDirectory + '...');
            }

            tmp$_2 = this.local$$receiver.deviceManager.mountable.mounts.entries.iterator();
            while (tmp$_2.hasNext()) {
              var mount = tmp$_2.next();
              var $this_1 = this.local$$receiver.logger;
              var level_1 = LogLevel.WARN;
              if ($this_1.isEnabled_ci8eq1$(level_1)) {
                $this_1.actualLog_t189ph$(level_1, '  - Mount: ' + mount.key + '   -->   ' + mount.value);
              }
            }

            this.state_0 = 14;
            this.result_0 = readAll(this.local$stream.v, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 14:
            return loadElfAndSetRegisters(this.local$$receiver, openSync(this.result_0), listOf_0(this.local$$receiver.fileManager.executableFile));
          case 15:
            this.state_0 = 21;
            continue;
          case 16:
            this.local$encryptedData = this.result_0;
            this.state_0 = 17;
            this.result_0 = CryptedElf_getInstance().decrypt_fqrh44$(this.local$encryptedData, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 17:
            this.local$decryptedData = this.result_0;
            if (!equals(detectPspFormat(this.local$decryptedData), PspFileFormat$ELF_getInstance())) {
              this.local$encryptedFile = vfs.tempVfs.get_61zpoe$('BOOT.BIN.encrypted');
              this.local$decryptedFile = vfs.tempVfs.get_61zpoe$('BOOT.BIN.decrypted');
              this.state_0 = 18;
              this.result_0 = this.local$encryptedFile.writeBytes_gssovf$(this.local$encryptedData, [], this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 20;
              continue;
            }

          case 18:
            this.state_0 = 19;
            this.result_0 = this.local$decryptedFile.writeBytes_gssovf$(this.local$decryptedData, [], this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 19:
            invalidOp('Error decrypting file. Written to: ' + this.local$decryptedFile.absolutePath + ' & ' + this.local$encryptedFile.absolutePath);
            this.state_0 = 20;
            continue;
          case 20:
            this.local$stream.v = openAsync(this.local$decryptedData);
            this.state_0 = 21;
            continue;
          case 21:
            this.state_0 = 30;
            continue;
          case 22:
            this.local$pbp = this.result_0;
            this.state_0 = 23;
            this.result_0 = readAll(this.local$pbp.ICON0_PNG, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 23:
            var icon0 = this.result_0;
            if (!(icon0.length === 0)) {
              this.state_0 = 24;
              this.result_0 = this.local$loadProcess.readIcon0_fqrh44$(icon0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 25;
              continue;
            }

          case 24:
            this.state_0 = 25;
            continue;
          case 25:
            this.state_0 = 26;
            this.result_0 = readAll(this.local$pbp.PARAM_SFO, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 26:
            var paramSfo = this.result_0;
            if (!(paramSfo.length === 0)) {
              this.state_0 = 27;
              this.result_0 = Psf$Companion_getInstance().invoke_axnxby$(this.local$pbp.PARAM_SFO, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 29;
              continue;
            }

          case 27:
            var psf = this.result_0;
            this.local$gameName = (tmp$_1 = psf.getString_61zpoe$('DISC_ID')) != null ? tmp$_1 : 'virtual';
            this.state_0 = 28;
            this.result_0 = this.local$loadProcess.readParamSfo_i9kez$(psf, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 28:
            this.state_0 = 29;
            continue;
          case 29:
            this.local$stream.v = this.local$pbp.PSP_DATA;
            this.state_0 = 30;
            continue;
          case 30:
            this.state_0 = 56;
            continue;
          case 31:
            this.local$tmp$_0 = this.result_0;
            this.state_0 = 32;
            continue;
          case 32:
            this.state_0 = 34;
            continue;
          case 33:
            this.local$tmp$_0 = this.result_0;
            this.state_0 = 34;
            continue;
          case 34:
            this.local$container = this.local$tmp$_0;
            this.local$afile = {v: null};
            this.local$tmp$_1 = listOf(['PSP_GAME/SYSDIR', '']).iterator();
            this.state_0 = 35;
            continue;
          case 35:
            if (!this.local$tmp$_1.hasNext()) {
              this.state_0 = 42;
              continue;
            }

            this.local$folder = this.local$tmp$_1.next();
            this.local$umdLikeStructure = this.local$folder.length > 0;
            this.local$tmp$_2 = listOf(['EBOOT.BIN', 'EBOOT.ELF', 'EBOOT.PBP', 'BOOT.BIN']).iterator();
            this.state_0 = 36;
            continue;
          case 36:
            if (!this.local$tmp$_2.hasNext()) {
              this.state_0 = 41;
              continue;
            }

            var filename = this.local$tmp$_2.next();
            this.local$afile.v = this.local$container.get_61zpoe$(this.local$folder + '/' + filename);
            this.state_0 = 37;
            this.result_0 = this.local$afile.v.exists(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 37:
            if (this.result_0) {
              this.state_0 = 38;
              this.result_0 = this.local$afile.v.readRangeBytes_n8acyv$(until(0, 4), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 40;
              continue;
            }

          case 38:
            if (!equals(get_hexString(this.result_0), '00000000')) {
              var $this_2 = this.local$$receiver.logger;
              var level_2 = LogLevel.WARN;
              if ($this_2.isEnabled_ci8eq1$(level_2)) {
                $this_2.actualLog_t189ph$(level_2, 'Using ' + toString(this.local$afile.v) + ' from iso');
              }
              this.state_0 = 42;
              continue;
            }
             else {
              this.state_0 = 39;
              continue;
            }

          case 39:
            this.state_0 = 40;
            continue;
          case 40:
            this.state_0 = 36;
            continue;
          case 41:
            this.state_0 = 35;
            continue;
          case 42:
            if (this.local$afile.v == null)
              invalidOp("Can't find any suitable executable inside " + this.local$format);
            this.local$tmp$_3 = listOf_0(this.local$container.get_61zpoe$('PSP_GAME/ICON0.PNG')).iterator();
            this.state_0 = 43;
            continue;
          case 43:
            if (!this.local$tmp$_3.hasNext()) {
              this.state_0 = 48;
              continue;
            }

            this.local$icon0 = this.local$tmp$_3.next();
            this.state_0 = 44;
            this.result_0 = this.local$icon0.exists(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 44:
            if (this.result_0) {
              this.state_0 = 45;
              this.result_0 = this.local$icon0.readAll(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 47;
              continue;
            }

          case 45:
            this.state_0 = 46;
            this.result_0 = this.local$loadProcess.readIcon0_fqrh44$(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 46:
            this.state_0 = 47;
            continue;
          case 47:
            this.state_0 = 43;
            continue;
          case 48:
            this.local$tmp$_4 = listOf_0(this.local$container.get_61zpoe$('PSP_GAME/PARAM.SFO')).iterator();
            this.state_0 = 49;
            continue;
          case 49:
            if (!this.local$tmp$_4.hasNext()) {
              this.state_0 = 54;
              continue;
            }

            this.local$paramSfo = this.local$tmp$_4.next();
            this.state_0 = 50;
            this.result_0 = this.local$paramSfo.exists(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 50:
            if (this.result_0) {
              this.local$tmp$_5 = Psf$Companion_getInstance();
              this.state_0 = 51;
              this.result_0 = this.local$paramSfo.readAll(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 53;
              continue;
            }

          case 51:
            var psf_0 = this.local$tmp$_5.invoke_fqrh44$(this.result_0);
            this.local$gameName = (tmp$_0 = psf_0.getString_61zpoe$('DISC_ID')) != null ? tmp$_0 : 'virtual';
            this.state_0 = 52;
            this.result_0 = this.local$loadProcess.readParamSfo_i9kez$(psf_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 52:
            this.state_0 = 53;
            continue;
          case 53:
            this.state_0 = 49;
            continue;
          case 54:
            this.state_0 = 55;
            this.result_0 = this.local$afile.v.open_7c7tmz$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 55:
            this.local$stream.v = this.result_0;
            this.state_0 = 56;
            continue;
          case 56:
            this.state_0 = 58;
            continue;
          case 57:
            this.local$stream.v = this.result_0;
            this.local$layerName = this.local$layerName + '.iso';
            this.state_0 = 58;
            continue;
          case 58:
            this.state_0 = 4;
            continue;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function PspBattery(emulator) {
    this.emulator = emulator;
    this.charging = false;
    this.chargedRatio = 1.0;
    this.lifetimeSeconds = 8.0 * 3600.0;
    this.batteryExists = true;
    this.volt = 4135;
    this.temp = 28;
    this.isLowBattery = this.chargedRatio < 0.22;
    this.chargingType = ChargingEnum$Companion_getInstance().invoke_za3lpa$(this.charging ? 1 : 0);
  }
  Object.defineProperty(PspBattery.prototype, 'level', {
    get: function () {
      return this.chargedRatio;
    }
  });
  Object.defineProperty(PspBattery.prototype, 'percentage', {
    get: function () {
      return this.chargedRatio;
    }
  });
  Object.defineProperty(PspBattery.prototype, 'iconStatus', {
    get: function () {
      if (this.chargedRatio < 0.15)
        return BatteryStatusEnum$VeryLow_getInstance();
      else if (this.chargedRatio < 0.3)
        return BatteryStatusEnum$Low_getInstance();
      else if (this.chargedRatio < 0.8)
        return BatteryStatusEnum$PartiallyFilled_getInstance();
      else
        return BatteryStatusEnum$FullyFilled_getInstance();
    }
  });
  PspBattery.prototype.reset = function () {
    this.charging = false;
    this.chargedRatio = 1.0;
    this.lifetimeSeconds = 8.0 * 3600.0;
    this.batteryExists = true;
  };
  PspBattery.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspBattery',
    interfaces: []
  };
  function ChargingEnum(name, ordinal, id) {
    Enum.call(this);
    this.id_8vydxf$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ChargingEnum_initFields() {
    ChargingEnum_initFields = function () {
    };
    ChargingEnum$NotCharging_instance = new ChargingEnum('NotCharging', 0, 0);
    ChargingEnum$Charging_instance = new ChargingEnum('Charging', 1, 1);
    ChargingEnum$Companion_getInstance();
  }
  Object.defineProperty(ChargingEnum.prototype, 'id', {
    get: function () {
      return this.id_8vydxf$_0;
    }
  });
  var ChargingEnum$NotCharging_instance;
  function ChargingEnum$NotCharging_getInstance() {
    ChargingEnum_initFields();
    return ChargingEnum$NotCharging_instance;
  }
  var ChargingEnum$Charging_instance;
  function ChargingEnum$Charging_getInstance() {
    ChargingEnum_initFields();
    return ChargingEnum$Charging_instance;
  }
  function ChargingEnum$Companion() {
    ChargingEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, ChargingEnum$values());
  }
  ChargingEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var ChargingEnum$Companion_instance = null;
  function ChargingEnum$Companion_getInstance() {
    ChargingEnum_initFields();
    if (ChargingEnum$Companion_instance === null) {
      new ChargingEnum$Companion();
    }
    return ChargingEnum$Companion_instance;
  }
  ChargingEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ChargingEnum',
    interfaces: [IdEnum, Enum]
  };
  function ChargingEnum$values() {
    return [ChargingEnum$NotCharging_getInstance(), ChargingEnum$Charging_getInstance()];
  }
  ChargingEnum.values = ChargingEnum$values;
  function ChargingEnum$valueOf(name) {
    switch (name) {
      case 'NotCharging':
        return ChargingEnum$NotCharging_getInstance();
      case 'Charging':
        return ChargingEnum$Charging_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.battery.ChargingEnum.' + name);
    }
  }
  ChargingEnum.valueOf_61zpoe$ = ChargingEnum$valueOf;
  function BatteryStatusEnum(name, ordinal, id) {
    Enum.call(this);
    this.id_dgz3p3$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function BatteryStatusEnum_initFields() {
    BatteryStatusEnum_initFields = function () {
    };
    BatteryStatusEnum$VeryLow_instance = new BatteryStatusEnum('VeryLow', 0, 0);
    BatteryStatusEnum$Low_instance = new BatteryStatusEnum('Low', 1, 1);
    BatteryStatusEnum$PartiallyFilled_instance = new BatteryStatusEnum('PartiallyFilled', 2, 2);
    BatteryStatusEnum$FullyFilled_instance = new BatteryStatusEnum('FullyFilled', 3, 3);
    BatteryStatusEnum$Companion_getInstance();
  }
  Object.defineProperty(BatteryStatusEnum.prototype, 'id', {
    get: function () {
      return this.id_dgz3p3$_0;
    }
  });
  var BatteryStatusEnum$VeryLow_instance;
  function BatteryStatusEnum$VeryLow_getInstance() {
    BatteryStatusEnum_initFields();
    return BatteryStatusEnum$VeryLow_instance;
  }
  var BatteryStatusEnum$Low_instance;
  function BatteryStatusEnum$Low_getInstance() {
    BatteryStatusEnum_initFields();
    return BatteryStatusEnum$Low_instance;
  }
  var BatteryStatusEnum$PartiallyFilled_instance;
  function BatteryStatusEnum$PartiallyFilled_getInstance() {
    BatteryStatusEnum_initFields();
    return BatteryStatusEnum$PartiallyFilled_instance;
  }
  var BatteryStatusEnum$FullyFilled_instance;
  function BatteryStatusEnum$FullyFilled_getInstance() {
    BatteryStatusEnum_initFields();
    return BatteryStatusEnum$FullyFilled_instance;
  }
  function BatteryStatusEnum$Companion() {
    BatteryStatusEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, BatteryStatusEnum$values());
  }
  BatteryStatusEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var BatteryStatusEnum$Companion_instance = null;
  function BatteryStatusEnum$Companion_getInstance() {
    BatteryStatusEnum_initFields();
    if (BatteryStatusEnum$Companion_instance === null) {
      new BatteryStatusEnum$Companion();
    }
    return BatteryStatusEnum$Companion_instance;
  }
  BatteryStatusEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BatteryStatusEnum',
    interfaces: [IdEnum, Enum]
  };
  function BatteryStatusEnum$values() {
    return [BatteryStatusEnum$VeryLow_getInstance(), BatteryStatusEnum$Low_getInstance(), BatteryStatusEnum$PartiallyFilled_getInstance(), BatteryStatusEnum$FullyFilled_getInstance()];
  }
  BatteryStatusEnum.values = BatteryStatusEnum$values;
  function BatteryStatusEnum$valueOf(name) {
    switch (name) {
      case 'VeryLow':
        return BatteryStatusEnum$VeryLow_getInstance();
      case 'Low':
        return BatteryStatusEnum$Low_getInstance();
      case 'PartiallyFilled':
        return BatteryStatusEnum$PartiallyFilled_getInstance();
      case 'FullyFilled':
        return BatteryStatusEnum$FullyFilled_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.battery.BatteryStatusEnum.' + name);
    }
  }
  BatteryStatusEnum.valueOf_61zpoe$ = BatteryStatusEnum$valueOf;
  function Breakpoints() {
    this.breakpoints_0 = LinkedHashMap_init();
    this.enabled_uo1kho$_0 = false;
  }
  Object.defineProperty(Breakpoints.prototype, 'enabled', {
    get: function () {
      return this.enabled_uo1kho$_0;
    },
    set: function (enabled) {
      this.enabled_uo1kho$_0 = enabled;
    }
  });
  Breakpoints.prototype.reset = function () {
    this.clear();
  };
  Breakpoints.prototype.clear = function () {
    this.breakpoints_0.clear();
    this.updateEnabled_0();
  };
  Breakpoints.prototype.get_za3lpa$ = function (addr) {
    var tmp$ = this.enabled;
    if (tmp$) {
      var tmp$_0;
      tmp$ = (tmp$_0 = this.breakpoints_0.get_11rb$(addr)) != null ? tmp$_0 : false;
    }
    return tmp$;
  };
  Breakpoints.prototype.set_fzusl$ = function (addr, enable) {
    if (enable) {
      this.breakpoints_0.put_xwzc9p$(addr, enable);
    }
     else {
      this.breakpoints_0.remove_11rb$(addr);
    }
    this.updateEnabled_0();
  };
  Breakpoints.prototype.toggle_za3lpa$ = function (addr) {
    this.set_fzusl$(addr, !this.get_za3lpa$(addr));
  };
  Breakpoints.prototype.updateEnabled_0 = function () {
    this.enabled = this.breakpoints_0.size !== 0;
  };
  Breakpoints.prototype.copyFrom_qh41ul$ = function (src) {
    this.breakpoints_0.putAll_a2k3zr$(src.breakpoints_0);
    this.updateEnabled_0();
  };
  Breakpoints.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Breakpoints',
    interfaces: [BaseBreakpoints]
  };
  function EmulatorControlFlowException() {
    Exception_init(this);
    this.name = 'EmulatorControlFlowException';
  }
  EmulatorControlFlowException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EmulatorControlFlowException',
    interfaces: [Exception]
  };
  function BreakpointException(cpu, pc) {
    EmulatorControlFlowException.call(this);
    this.cpu = cpu;
    this.pc = pc;
    this.name = 'BreakpointException';
  }
  BreakpointException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BreakpointException',
    interfaces: [EmulatorControlFlowException]
  };
  BreakpointException.prototype.component1 = function () {
    return this.cpu;
  };
  BreakpointException.prototype.component2 = function () {
    return this.pc;
  };
  BreakpointException.prototype.copy_acv9wa$ = function (cpu, pc) {
    return new BreakpointException(cpu === void 0 ? this.cpu : cpu, pc === void 0 ? this.pc : pc);
  };
  BreakpointException.prototype.toString = function () {
    return 'BreakpointException(cpu=' + Kotlin.toString(this.cpu) + (', pc=' + Kotlin.toString(this.pc)) + ')';
  };
  BreakpointException.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.cpu) | 0;
    result = result * 31 + Kotlin.hashCode(this.pc) | 0;
    return result;
  };
  BreakpointException.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.cpu, other.cpu) && Kotlin.equals(this.pc, other.pc)))));
  };
  function CpuBreakException(id) {
    CpuBreakException$Companion_getInstance();
    EmulatorControlFlowException.call(this);
    this.id = id;
    this.name = 'CpuBreakException';
  }
  function CpuBreakException$Companion() {
    CpuBreakException$Companion_instance = this;
    this.THREAD_WAIT = 10001;
    this.THREAD_EXIT_KILL = 10002;
    this.INTERRUPT_RETURN = 10003;
    this.THREAD_WAIT_RA = Memory$Companion_getInstance().MAIN_OFFSET + 0 | 0;
    this.THREAD_EXIT_KIL_RA = Memory$Companion_getInstance().MAIN_OFFSET + 4 | 0;
    this.INTERRUPT_RETURN_RA = Memory$Companion_getInstance().MAIN_OFFSET + 8 | 0;
  }
  CpuBreakException$Companion.prototype.initialize_lh19bh$ = function (mem) {
    mem.sw_vux9f0$(this.THREAD_WAIT_RA, 13 | CpuBreakException$Companion_getInstance().THREAD_WAIT << 6);
    mem.sw_vux9f0$(this.THREAD_EXIT_KIL_RA, 13 | CpuBreakException$Companion_getInstance().THREAD_EXIT_KILL << 6);
    mem.sw_vux9f0$(this.INTERRUPT_RETURN_RA, 13 | CpuBreakException$Companion_getInstance().INTERRUPT_RETURN << 6);
  };
  CpuBreakException$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var CpuBreakException$Companion_instance = null;
  function CpuBreakException$Companion_getInstance() {
    if (CpuBreakException$Companion_instance === null) {
      new CpuBreakException$Companion();
    }
    return CpuBreakException$Companion_instance;
  }
  CpuBreakException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CpuBreakException',
    interfaces: [EmulatorControlFlowException]
  };
  CpuBreakException.prototype.component1 = function () {
    return this.id;
  };
  CpuBreakException.prototype.copy_za3lpa$ = function (id) {
    return new CpuBreakException(id === void 0 ? this.id : id);
  };
  CpuBreakException.prototype.toString = function () {
    return 'CpuBreakException(id=' + Kotlin.toString(this.id) + ')';
  };
  CpuBreakException.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  CpuBreakException.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function get_K0($receiver) {
    return $receiver.r26;
  }
  function set_K0($receiver, value) {
    $receiver.r26 = value;
  }
  function get_K1($receiver) {
    return $receiver.r27;
  }
  function set_K1($receiver, value) {
    $receiver.r27 = value;
  }
  function get_GP($receiver) {
    return $receiver.r28;
  }
  function set_GP($receiver, value) {
    $receiver.r28 = value;
  }
  function get_SP($receiver) {
    return $receiver.r29;
  }
  function set_SP($receiver, value) {
    $receiver.r29 = value;
  }
  function get_FP($receiver) {
    return $receiver.r30;
  }
  function set_FP($receiver, value) {
    $receiver.r30 = value;
  }
  function get_RA($receiver) {
    return $receiver.r31;
  }
  function set_RA($receiver, value) {
    $receiver.r31 = value;
  }
  function get_V0($receiver) {
    return $receiver.r2;
  }
  function set_V0($receiver, value) {
    $receiver.r2 = value;
  }
  function get_V1($receiver) {
    return $receiver.r3;
  }
  function set_V1($receiver, value) {
    $receiver.r3 = value;
  }
  function get_A0($receiver) {
    return $receiver.r4;
  }
  function set_A0($receiver, value) {
    $receiver.r4 = value;
  }
  function get_A1($receiver) {
    return $receiver.r5;
  }
  function set_A1($receiver, value) {
    $receiver.r5 = value;
  }
  function get_A2($receiver) {
    return $receiver.r6;
  }
  function set_A2($receiver, value) {
    $receiver.r6 = value;
  }
  function get_A3($receiver) {
    return $receiver.r7;
  }
  function set_A3($receiver, value) {
    $receiver.r7 = value;
  }
  function RegInfo(index, name, mnemonic, desc) {
    this.index = index;
    this.name = name;
    this.mnemonic = mnemonic;
    this.desc = desc;
  }
  RegInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RegInfo',
    interfaces: []
  };
  RegInfo.prototype.component1 = function () {
    return this.index;
  };
  RegInfo.prototype.component2 = function () {
    return this.name;
  };
  RegInfo.prototype.component3 = function () {
    return this.mnemonic;
  };
  RegInfo.prototype.component4 = function () {
    return this.desc;
  };
  RegInfo.prototype.copy_cgs6fs$ = function (index, name, mnemonic, desc) {
    return new RegInfo(index === void 0 ? this.index : index, name === void 0 ? this.name : name, mnemonic === void 0 ? this.mnemonic : mnemonic, desc === void 0 ? this.desc : desc);
  };
  RegInfo.prototype.toString = function () {
    return 'RegInfo(index=' + Kotlin.toString(this.index) + (', name=' + Kotlin.toString(this.name)) + (', mnemonic=' + Kotlin.toString(this.mnemonic)) + (', desc=' + Kotlin.toString(this.desc)) + ')';
  };
  RegInfo.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.index) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.mnemonic) | 0;
    result = result * 31 + Kotlin.hashCode(this.desc) | 0;
    return result;
  };
  RegInfo.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.index, other.index) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.mnemonic, other.mnemonic) && Kotlin.equals(this.desc, other.desc)))));
  };
  var ArrayBuffer_init = ArrayBuffer;
  var Float32Array_init = Float32Array;
  var Int32Array_init = Int32Array;
  function CpuState(name, globalCpuState, mem, syscalls) {
    CpuState$Companion_getInstance();
    if (syscalls === void 0)
      syscalls = new TraceSyscallHandler();
    this.name = name;
    this.globalCpuState = globalCpuState;
    this.mem = mem;
    this.syscalls = syscalls;
    this.$delegate_xt3zvs$_0 = new Extra$Mixin();
    var tmp$;
    this.id = (tmp$ = CpuState$Companion_getInstance().lastId, CpuState$Companion_getInstance().lastId = tmp$ + 1 | 0, tmp$);
    this.totalExecuted = Kotlin.Long.ZERO;
    this._FMem = new ArrayBuffer_init((32 * 4 | 0) + 15 & ~15);
    var $receiver = this._FMem;
    this._F = new Float32Array_init($receiver, 0 * 4 | 0, ($receiver.byteLength / 4 | 0) - 0 | 0);
    var $receiver_0 = this._FMem;
    this._FI = new Int32Array_init($receiver_0, 0 * 4 | 0, ($receiver_0.byteLength / 4 | 0) - 0 | 0);
    this._VFPRMem = new ArrayBuffer_init((128 * 4 | 0) + 15 & ~15);
    var $receiver_1 = this._VFPRMem;
    var $receiver_2 = new Float32Array_init($receiver_1, 0 * 4 | 0, ($receiver_1.byteLength / 4 | 0) - 0 | 0);
    for (var n = 0; n < 128; n++) {
      $receiver_2[n] = kotlin_js_internal_FloatCompanionObject.NaN;
    }
    this._VFPR = $receiver_2;
    var $receiver_3 = this._VFPRMem;
    this._VFPR_I = new Int32Array_init($receiver_3, 0 * 4 | 0, ($receiver_3.byteLength / 4 | 0) - 0 | 0);
    this.VFPRC = new Int32Array([0, 0, 0, 255, 0, 0, 0, 0, 1065353216, 1065353216, 1065353216, 1065353216, 1065353216, 1065353216, 1065353216, 1065353216]);
    this.fcr0 = 13137;
    this.fcr25 = 0;
    this.fcr26 = 0;
    this.fcr27 = 0;
    this.fcr28 = 0;
    this.fcr31 = 3584;
    this.vpfxs = new VfpuSourceTargetPrefix(this.VFPRC, CpuState$VFPU_CTRL_getInstance().SPREFIX);
    this.vpfxt = new VfpuSourceTargetPrefix(this.VFPRC, CpuState$VFPU_CTRL_getInstance().TPREFIX);
    this.vpfxd = new VfpuDestinationPrefix(this.VFPRC, CpuState$VFPU_CTRL_getInstance().DPREFIX);
    this._R = new Int32Array(32);
    this.IR = 0;
    this._PC = 0;
    this._nPC = 0;
    this.LO = 0;
    this.HI = 0;
    this.IC = 0;
    this.VFPR = new CpuState$VFPRF_Class(this);
    this.VFPRI = new CpuState$VFPRI_Class(this);
  }
  function CpuState$Companion() {
    CpuState$Companion_instance = this;
    this.gprInfos = listOf([new RegInfo(0, 'r0', 'zero', 'Permanently 0'), new RegInfo(1, 'r1', 'at', 'Assembler Temporaty'), new RegInfo(2, 'r2', 'v0', 'Value returned by a subroutine'), new RegInfo(3, 'r3', 'v1', 'Value returned by a subroutine'), new RegInfo(4, 'r4', 'a0', 'Subroutine Arguments'), new RegInfo(5, 'r5', 'a1', 'Subroutine Arguments'), new RegInfo(6, 'r6', 'a2', 'Subroutine Arguments'), new RegInfo(7, 'r7', 'a3', 'Subroutine Arguments'), new RegInfo(8, 'r8', 't0', 'Temporary'), new RegInfo(9, 'r9', 't1', 'Temporary'), new RegInfo(10, 'r10', 't2', 'Temporary'), new RegInfo(11, 'r11', 't3', 'Temporary'), new RegInfo(12, 'r12', 't4', 'Temporary'), new RegInfo(13, 'r13', 't5', 'Temporary'), new RegInfo(14, 'r14', 't6', 'Temporary'), new RegInfo(15, 'r15', 't7', 'Temporary'), new RegInfo(16, 'r16', 's0', 'Saved registers'), new RegInfo(17, 'r17', 's1', 'Saved registers'), new RegInfo(18, 'r18', 's2', 'Saved registers'), new RegInfo(19, 'r19', 's3', 'Saved registers'), new RegInfo(20, 'r20', 's4', 'Saved registers'), new RegInfo(21, 'r21', 's5', 'Saved registers'), new RegInfo(22, 'r22', 's6', 'Saved registers'), new RegInfo(23, 'r23', 's7', 'Saved registers'), new RegInfo(24, 'r24', 't8', 'Temporary'), new RegInfo(25, 'r25', 't9', 'Temporary'), new RegInfo(26, 'r26', 'k0', 'Kernel'), new RegInfo(27, 'r27', 'k1', 'Kernel'), new RegInfo(28, 'r28', 'gp', 'Global Pointer'), new RegInfo(29, 'r29', 'sp', 'Stack Pointer'), new RegInfo(30, 'r30', 'fp', 'Frame Pointer'), new RegInfo(31, 'r31', 'fp', 'Return Address')]);
    var $receiver = this.gprInfos;
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(to(item.mnemonic, item));
    }
    var $receiver_0 = this.gprInfos;
    var destination_0 = ArrayList_init(collectionSizeOrDefault($receiver_0, 10));
    var tmp$_0;
    tmp$_0 = $receiver_0.iterator();
    while (tmp$_0.hasNext()) {
      var item_0 = tmp$_0.next();
      destination_0.add_11rb$(to(item_0.name, item_0));
    }
    this.gprInfosByMnemonic = toMap(plus_0(destination, destination_0));
    this.dummy = new CpuState('dummy', GlobalCpuState$Companion_getInstance().dummy, DummyMemory_getInstance());
    this.lastId = 0;
  }
  CpuState$Companion.prototype.getGprProp_za3lpa$ = function (index) {
    if (index === 0)
      return getPropertyCallableRef('r0', 1, function ($receiver) {
        return $receiver.r0;
      }, function ($receiver, value) {
        $receiver.r0 = value;
      });
    else if (index === 1)
      return getPropertyCallableRef('r1', 1, function ($receiver) {
        return $receiver.r1;
      }, function ($receiver, value) {
        $receiver.r1 = value;
      });
    else if (index === 2)
      return getPropertyCallableRef('r2', 1, function ($receiver) {
        return $receiver.r2;
      }, function ($receiver, value) {
        $receiver.r2 = value;
      });
    else if (index === 3)
      return getPropertyCallableRef('r3', 1, function ($receiver) {
        return $receiver.r3;
      }, function ($receiver, value) {
        $receiver.r3 = value;
      });
    else if (index === 4)
      return getPropertyCallableRef('r4', 1, function ($receiver) {
        return $receiver.r4;
      }, function ($receiver, value) {
        $receiver.r4 = value;
      });
    else if (index === 5)
      return getPropertyCallableRef('r5', 1, function ($receiver) {
        return $receiver.r5;
      }, function ($receiver, value) {
        $receiver.r5 = value;
      });
    else if (index === 6)
      return getPropertyCallableRef('r6', 1, function ($receiver) {
        return $receiver.r6;
      }, function ($receiver, value) {
        $receiver.r6 = value;
      });
    else if (index === 7)
      return getPropertyCallableRef('r7', 1, function ($receiver) {
        return $receiver.r7;
      }, function ($receiver, value) {
        $receiver.r7 = value;
      });
    else if (index === 8)
      return getPropertyCallableRef('r8', 1, function ($receiver) {
        return $receiver.r8;
      }, function ($receiver, value) {
        $receiver.r8 = value;
      });
    else if (index === 9)
      return getPropertyCallableRef('r9', 1, function ($receiver) {
        return $receiver.r9;
      }, function ($receiver, value) {
        $receiver.r9 = value;
      });
    else if (index === 10)
      return getPropertyCallableRef('r10', 1, function ($receiver) {
        return $receiver.r10;
      }, function ($receiver, value) {
        $receiver.r10 = value;
      });
    else if (index === 11)
      return getPropertyCallableRef('r11', 1, function ($receiver) {
        return $receiver.r11;
      }, function ($receiver, value) {
        $receiver.r11 = value;
      });
    else if (index === 12)
      return getPropertyCallableRef('r12', 1, function ($receiver) {
        return $receiver.r12;
      }, function ($receiver, value) {
        $receiver.r12 = value;
      });
    else if (index === 13)
      return getPropertyCallableRef('r13', 1, function ($receiver) {
        return $receiver.r13;
      }, function ($receiver, value) {
        $receiver.r13 = value;
      });
    else if (index === 14)
      return getPropertyCallableRef('r14', 1, function ($receiver) {
        return $receiver.r14;
      }, function ($receiver, value) {
        $receiver.r14 = value;
      });
    else if (index === 15)
      return getPropertyCallableRef('r15', 1, function ($receiver) {
        return $receiver.r15;
      }, function ($receiver, value) {
        $receiver.r15 = value;
      });
    else if (index === 16)
      return getPropertyCallableRef('r16', 1, function ($receiver) {
        return $receiver.r16;
      }, function ($receiver, value) {
        $receiver.r16 = value;
      });
    else if (index === 17)
      return getPropertyCallableRef('r17', 1, function ($receiver) {
        return $receiver.r17;
      }, function ($receiver, value) {
        $receiver.r17 = value;
      });
    else if (index === 18)
      return getPropertyCallableRef('r18', 1, function ($receiver) {
        return $receiver.r18;
      }, function ($receiver, value) {
        $receiver.r18 = value;
      });
    else if (index === 19)
      return getPropertyCallableRef('r19', 1, function ($receiver) {
        return $receiver.r19;
      }, function ($receiver, value) {
        $receiver.r19 = value;
      });
    else if (index === 20)
      return getPropertyCallableRef('r20', 1, function ($receiver) {
        return $receiver.r20;
      }, function ($receiver, value) {
        $receiver.r20 = value;
      });
    else if (index === 21)
      return getPropertyCallableRef('r21', 1, function ($receiver) {
        return $receiver.r21;
      }, function ($receiver, value) {
        $receiver.r21 = value;
      });
    else if (index === 22)
      return getPropertyCallableRef('r22', 1, function ($receiver) {
        return $receiver.r22;
      }, function ($receiver, value) {
        $receiver.r22 = value;
      });
    else if (index === 23)
      return getPropertyCallableRef('r23', 1, function ($receiver) {
        return $receiver.r23;
      }, function ($receiver, value) {
        $receiver.r23 = value;
      });
    else if (index === 24)
      return getPropertyCallableRef('r24', 1, function ($receiver) {
        return $receiver.r24;
      }, function ($receiver, value) {
        $receiver.r24 = value;
      });
    else if (index === 25)
      return getPropertyCallableRef('r25', 1, function ($receiver) {
        return $receiver.r25;
      }, function ($receiver, value) {
        $receiver.r25 = value;
      });
    else if (index === 26)
      return getPropertyCallableRef('r26', 1, function ($receiver) {
        return $receiver.r26;
      }, function ($receiver, value) {
        $receiver.r26 = value;
      });
    else if (index === 27)
      return getPropertyCallableRef('r27', 1, function ($receiver) {
        return $receiver.r27;
      }, function ($receiver, value) {
        $receiver.r27 = value;
      });
    else if (index === 28)
      return getPropertyCallableRef('r28', 1, function ($receiver) {
        return $receiver.r28;
      }, function ($receiver, value) {
        $receiver.r28 = value;
      });
    else if (index === 29)
      return getPropertyCallableRef('r29', 1, function ($receiver) {
        return $receiver.r29;
      }, function ($receiver, value) {
        $receiver.r29 = value;
      });
    else if (index === 30)
      return getPropertyCallableRef('r30', 1, function ($receiver) {
        return $receiver.r30;
      }, function ($receiver, value) {
        $receiver.r30 = value;
      });
    else if (index === 31)
      return getPropertyCallableRef('r31', 1, function ($receiver) {
        return $receiver.r31;
      }, function ($receiver, value) {
        $receiver.r31 = value;
      });
    else
      return invalidArg('Invalid register ' + index);
  };
  CpuState$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var CpuState$Companion_instance = null;
  function CpuState$Companion_getInstance() {
    if (CpuState$Companion_instance === null) {
      new CpuState$Companion();
    }
    return CpuState$Companion_instance;
  }
  CpuState.prototype.getGprProp_za3lpa$ = function (index) {
    if (index === 0)
      return getPropertyCallableRef('r0', 0, function ($receiver) {
        return $receiver.r0;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r0 = value;
      }.bind(null, this));
    else if (index === 1)
      return getPropertyCallableRef('r1', 0, function ($receiver) {
        return $receiver.r1;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r1 = value;
      }.bind(null, this));
    else if (index === 2)
      return getPropertyCallableRef('r2', 0, function ($receiver) {
        return $receiver.r2;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r2 = value;
      }.bind(null, this));
    else if (index === 3)
      return getPropertyCallableRef('r3', 0, function ($receiver) {
        return $receiver.r3;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r3 = value;
      }.bind(null, this));
    else if (index === 4)
      return getPropertyCallableRef('r4', 0, function ($receiver) {
        return $receiver.r4;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r4 = value;
      }.bind(null, this));
    else if (index === 5)
      return getPropertyCallableRef('r5', 0, function ($receiver) {
        return $receiver.r5;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r5 = value;
      }.bind(null, this));
    else if (index === 6)
      return getPropertyCallableRef('r6', 0, function ($receiver) {
        return $receiver.r6;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r6 = value;
      }.bind(null, this));
    else if (index === 7)
      return getPropertyCallableRef('r7', 0, function ($receiver) {
        return $receiver.r7;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r7 = value;
      }.bind(null, this));
    else if (index === 8)
      return getPropertyCallableRef('r8', 0, function ($receiver) {
        return $receiver.r8;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r8 = value;
      }.bind(null, this));
    else if (index === 9)
      return getPropertyCallableRef('r9', 0, function ($receiver) {
        return $receiver.r9;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r9 = value;
      }.bind(null, this));
    else if (index === 10)
      return getPropertyCallableRef('r10', 0, function ($receiver) {
        return $receiver.r10;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r10 = value;
      }.bind(null, this));
    else if (index === 11)
      return getPropertyCallableRef('r11', 0, function ($receiver) {
        return $receiver.r11;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r11 = value;
      }.bind(null, this));
    else if (index === 12)
      return getPropertyCallableRef('r12', 0, function ($receiver) {
        return $receiver.r12;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r12 = value;
      }.bind(null, this));
    else if (index === 13)
      return getPropertyCallableRef('r13', 0, function ($receiver) {
        return $receiver.r13;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r13 = value;
      }.bind(null, this));
    else if (index === 14)
      return getPropertyCallableRef('r14', 0, function ($receiver) {
        return $receiver.r14;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r14 = value;
      }.bind(null, this));
    else if (index === 15)
      return getPropertyCallableRef('r15', 0, function ($receiver) {
        return $receiver.r15;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r15 = value;
      }.bind(null, this));
    else if (index === 16)
      return getPropertyCallableRef('r16', 0, function ($receiver) {
        return $receiver.r16;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r16 = value;
      }.bind(null, this));
    else if (index === 17)
      return getPropertyCallableRef('r17', 0, function ($receiver) {
        return $receiver.r17;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r17 = value;
      }.bind(null, this));
    else if (index === 18)
      return getPropertyCallableRef('r18', 0, function ($receiver) {
        return $receiver.r18;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r18 = value;
      }.bind(null, this));
    else if (index === 19)
      return getPropertyCallableRef('r19', 0, function ($receiver) {
        return $receiver.r19;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r19 = value;
      }.bind(null, this));
    else if (index === 20)
      return getPropertyCallableRef('r20', 0, function ($receiver) {
        return $receiver.r20;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r20 = value;
      }.bind(null, this));
    else if (index === 21)
      return getPropertyCallableRef('r21', 0, function ($receiver) {
        return $receiver.r21;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r21 = value;
      }.bind(null, this));
    else if (index === 22)
      return getPropertyCallableRef('r22', 0, function ($receiver) {
        return $receiver.r22;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r22 = value;
      }.bind(null, this));
    else if (index === 23)
      return getPropertyCallableRef('r23', 0, function ($receiver) {
        return $receiver.r23;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r23 = value;
      }.bind(null, this));
    else if (index === 24)
      return getPropertyCallableRef('r24', 0, function ($receiver) {
        return $receiver.r24;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r24 = value;
      }.bind(null, this));
    else if (index === 25)
      return getPropertyCallableRef('r25', 0, function ($receiver) {
        return $receiver.r25;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r25 = value;
      }.bind(null, this));
    else if (index === 26)
      return getPropertyCallableRef('r26', 0, function ($receiver) {
        return $receiver.r26;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r26 = value;
      }.bind(null, this));
    else if (index === 27)
      return getPropertyCallableRef('r27', 0, function ($receiver) {
        return $receiver.r27;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r27 = value;
      }.bind(null, this));
    else if (index === 28)
      return getPropertyCallableRef('r28', 0, function ($receiver) {
        return $receiver.r28;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r28 = value;
      }.bind(null, this));
    else if (index === 29)
      return getPropertyCallableRef('r29', 0, function ($receiver) {
        return $receiver.r29;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r29 = value;
      }.bind(null, this));
    else if (index === 30)
      return getPropertyCallableRef('r30', 0, function ($receiver) {
        return $receiver.r30;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r30 = value;
      }.bind(null, this));
    else if (index === 31)
      return getPropertyCallableRef('r31', 0, function ($receiver) {
        return $receiver.r31;
      }.bind(null, this), function ($receiver, value) {
        $receiver.r31 = value;
      }.bind(null, this));
    else
      return invalidArg('Invalid register ' + index);
  };
  Object.defineProperty(CpuState.prototype, 'VFPR_CC', {
    get: function () {
      return this.VFPRC[CpuState$VFPU_CTRL_getInstance().CC];
    },
    set: function (value) {
      this.VFPRC[CpuState$VFPU_CTRL_getInstance().CC] = value;
    }
  });
  CpuState.prototype.VFPR_CC_za3lpa$ = function (index) {
    return extract(this.VFPR_CC, index);
  };
  CpuState.prototype.updateFCR31_za3lpa$ = function (value) {
    this.fcr31 = value & 25427967;
  };
  Object.defineProperty(CpuState.prototype, 'fcr31_rm', {
    get: function () {
      return extract_0(this.fcr31, 0, 2);
    },
    set: function (value) {
      this.fcr31 = insert(this.fcr31, value, 0, 2);
    }
  });
  Object.defineProperty(CpuState.prototype, 'fcr31_2_21', {
    get: function () {
      return extract_0(this.fcr31, 2, 21);
    },
    set: function (value) {
      this.fcr31 = insert(this.fcr31, value, 2, 21);
    }
  });
  Object.defineProperty(CpuState.prototype, 'fcr31_cc', {
    get: function () {
      return extract(this.fcr31, 23);
    },
    set: function (value) {
      this.fcr31 = insert_0(this.fcr31, value, 23);
    }
  });
  Object.defineProperty(CpuState.prototype, 'fcr31_fs', {
    get: function () {
      return extract(this.fcr31, 24);
    },
    set: function (value) {
      this.fcr31 = insert_0(this.fcr31, value, 24);
    }
  });
  Object.defineProperty(CpuState.prototype, 'fcr31_25_7', {
    get: function () {
      return extract_0(this.fcr31, 25, 7);
    },
    set: function (value) {
      this.fcr31 = insert(this.fcr31, value, 25, 7);
    }
  });
  Object.defineProperty(CpuState.prototype, 'r0', {
    get: function () {
      return 0;
    },
    set: function (value) {
    }
  });
  Object.defineProperty(CpuState.prototype, 'r1', {
    get: function () {
      return this._R[1];
    },
    set: function (value) {
      this._R[1] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r2', {
    get: function () {
      return this._R[2];
    },
    set: function (value) {
      this._R[2] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r3', {
    get: function () {
      return this._R[3];
    },
    set: function (value) {
      this._R[3] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r4', {
    get: function () {
      return this._R[4];
    },
    set: function (value) {
      this._R[4] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r5', {
    get: function () {
      return this._R[5];
    },
    set: function (value) {
      this._R[5] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r6', {
    get: function () {
      return this._R[6];
    },
    set: function (value) {
      this._R[6] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r7', {
    get: function () {
      return this._R[7];
    },
    set: function (value) {
      this._R[7] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r8', {
    get: function () {
      return this._R[8];
    },
    set: function (value) {
      this._R[8] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r9', {
    get: function () {
      return this._R[9];
    },
    set: function (value) {
      this._R[9] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r10', {
    get: function () {
      return this._R[10];
    },
    set: function (value) {
      this._R[10] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r11', {
    get: function () {
      return this._R[11];
    },
    set: function (value) {
      this._R[11] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r12', {
    get: function () {
      return this._R[12];
    },
    set: function (value) {
      this._R[12] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r13', {
    get: function () {
      return this._R[13];
    },
    set: function (value) {
      this._R[13] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r14', {
    get: function () {
      return this._R[14];
    },
    set: function (value) {
      this._R[14] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r15', {
    get: function () {
      return this._R[15];
    },
    set: function (value) {
      this._R[15] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r16', {
    get: function () {
      return this._R[16];
    },
    set: function (value) {
      this._R[16] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r17', {
    get: function () {
      return this._R[17];
    },
    set: function (value) {
      this._R[17] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r18', {
    get: function () {
      return this._R[18];
    },
    set: function (value) {
      this._R[18] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r19', {
    get: function () {
      return this._R[19];
    },
    set: function (value) {
      this._R[19] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r20', {
    get: function () {
      return this._R[20];
    },
    set: function (value) {
      this._R[20] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r21', {
    get: function () {
      return this._R[21];
    },
    set: function (value) {
      this._R[21] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r22', {
    get: function () {
      return this._R[22];
    },
    set: function (value) {
      this._R[22] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r23', {
    get: function () {
      return this._R[23];
    },
    set: function (value) {
      this._R[23] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r24', {
    get: function () {
      return this._R[24];
    },
    set: function (value) {
      this._R[24] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r25', {
    get: function () {
      return this._R[25];
    },
    set: function (value) {
      this._R[25] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r26', {
    get: function () {
      return this._R[26];
    },
    set: function (value) {
      this._R[26] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r27', {
    get: function () {
      return this._R[27];
    },
    set: function (value) {
      this._R[27] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r28', {
    get: function () {
      return this._R[28];
    },
    set: function (value) {
      this._R[28] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r29', {
    get: function () {
      return this._R[29];
    },
    set: function (value) {
      this._R[29] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r30', {
    get: function () {
      return this._R[30];
    },
    set: function (value) {
      this._R[30] = value;
    }
  });
  Object.defineProperty(CpuState.prototype, 'r31', {
    get: function () {
      return this._R[31];
    },
    set: function (value) {
      this._R[31] = value;
    }
  });
  CpuState.prototype.getGpr_za3lpa$ = function (index) {
    return this._R[index];
  };
  CpuState.prototype.setGpr_vux9f0$ = function (index, v) {
    if (index !== 0)
      this._R[index] = v;
  };
  CpuState.prototype.writeRegisters_qt1dr2$ = function (addr, start, count) {
    if (start === void 0)
      start = 0;
    if (count === void 0)
      count = 32 - start | 0;
    for (var n = 0; n < count; n++)
      this.mem.sw_vux9f0$(addr + (n * 4 | 0) | 0, this.getGpr_za3lpa$(start + n | 0));
  };
  CpuState.prototype.readRegisters_qt1dr2$ = function (addr, start, count) {
    if (start === void 0)
      start = 0;
    if (count === void 0)
      count = 32 - start | 0;
    for (var n = 0; n < count; n++)
      this.setGpr_vux9f0$(start + n | 0, this.mem.lw_za3lpa$(addr + (n * 4 | 0) | 0));
  };
  CpuState.prototype.getPCRef = function () {
    return getPropertyCallableRef('sPC', 0, function ($receiver) {
      return $receiver.sPC;
    }.bind(null, this), function ($receiver, value) {
      $receiver.sPC = value;
    }.bind(null, this));
  };
  Object.defineProperty(CpuState.prototype, 'sPC', {
    get: function () {
      return this.PC;
    },
    set: function (value) {
      this._PC = value;
      this._nPC = value + 4 | 0;
    }
  });
  Object.defineProperty(CpuState.prototype, 'PC', {
    get: function () {
      return this._PC;
    }
  });
  Object.defineProperty(CpuState.prototype, 'HI_LO', {
    get: function () {
      return Kotlin.Long.fromInt(this.HI).shiftLeft(32).or(Kotlin.Long.fromInt(this.LO).and(new Kotlin.Long(-1, 0)));
    },
    set: function (value) {
      this.HI = value.shiftRightUnsigned(32).toInt();
      this.LO = value.shiftRightUnsigned(0).toInt();
    }
  });
  CpuState.prototype.setPC_za3lpa$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.CpuState.setPC_za3lpa$', function (pc) {
    this._PC = pc;
    this._nPC = pc + 4 | 0;
  });
  CpuState.prototype.jump_za3lpa$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.CpuState.jump_za3lpa$', function (pc) {
    this._PC = pc;
    this._nPC = pc + 4 | 0;
  });
  CpuState.prototype.advance_pc_za3lpa$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.CpuState.advance_pc_za3lpa$', function (offset) {
    this._PC = this._nPC;
    this._nPC = this._nPC + offset | 0;
  });
  CpuState.prototype.getFpr_za3lpa$ = function (index) {
    return this._F[index];
  };
  CpuState.prototype.setFpr_24o109$ = function (index, v) {
    this._F[index] = v;
  };
  CpuState.prototype.getFprI_za3lpa$ = function (index) {
    return this._FI[index];
  };
  CpuState.prototype.setFprI_vux9f0$ = function (index, v) {
    this._FI[index] = v;
  };
  CpuState.prototype.setVfpr_24o109$ = function (index, value) {
    this._VFPR[index] = value;
  };
  CpuState.prototype.getVfpr_za3lpa$ = function (index) {
    return this._VFPR[index];
  };
  CpuState.prototype.setVfprI_vux9f0$ = function (index, value) {
    this._VFPR_I[index] = value;
  };
  CpuState.prototype.getVfprI_za3lpa$ = function (index) {
    return this._VFPR_I[index];
  };
  CpuState.prototype.syscall_za3lpa$ = function (syscall) {
    this.syscalls.syscall_acv9wa$(this, syscall);
  };
  function CpuState$VFPRI_Class($outer) {
    this.$outer = $outer;
  }
  CpuState$VFPRI_Class.prototype.get_za3lpa$ = function (index) {
    return this.$outer.getVfprI_za3lpa$(index);
  };
  CpuState$VFPRI_Class.prototype.set_vux9f0$ = function (index, value) {
    this.$outer;
    this.$outer.setVfprI_vux9f0$(index, value);
  };
  CpuState$VFPRI_Class.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VFPRI_Class',
    interfaces: []
  };
  function CpuState$VFPRF_Class($outer) {
    this.$outer = $outer;
  }
  CpuState$VFPRF_Class.prototype.get_za3lpa$ = function (index) {
    return this.$outer.getVfpr_za3lpa$(index);
  };
  CpuState$VFPRF_Class.prototype.set_24o109$ = function (index, value) {
    this.$outer;
    this.$outer.setVfpr_24o109$(index, value);
  };
  CpuState$VFPRF_Class.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VFPRF_Class',
    interfaces: []
  };
  CpuState.prototype.clone = function () {
    var $receiver = new CpuState(this.name + '.cloned', this.globalCpuState, this.mem, this.syscalls);
    this.copyTo_xt3zvs$($receiver);
    return $receiver;
  };
  CpuState.prototype.setTo_xt3zvs$ = function (src) {
    src.copyTo_xt3zvs$(this);
  };
  CpuState.prototype.copyTo_xt3zvs$ = function (dst) {
    var src = this;
    dst._PC = src._PC;
    dst._nPC = src._nPC;
    dst.HI = src.HI;
    dst.LO = src.LO;
    dst.IC = src.IC;
    dst.IR = src.IR;
    dst.fcr0 = src.fcr0;
    dst.fcr25 = src.fcr25;
    dst.fcr26 = src.fcr26;
    dst.fcr27 = src.fcr27;
    dst.fcr28 = src.fcr28;
    dst.fcr31 = src.fcr31;
    for (var n = 0; n < 32; n++)
      dst.setGpr_vux9f0$(n, src.getGpr_za3lpa$(n));
    for (var n_0 = 0; n_0 < 32; n_0++)
      dst.setFpr_24o109$(n_0, src.getFpr_za3lpa$(n_0));
    for (var n_1 = 0; n_1 < 128; n_1++)
      dst.setVfpr_24o109$(n_1, src.getVfpr_za3lpa$(n_1));
  };
  Object.defineProperty(CpuState.prototype, 'summary', {
    get: function () {
      var tmp$ = 'REGS(' + this.name + ':' + this.id + ')[';
      var $receiver = until(0, 32);
      var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
      var tmp$_0;
      tmp$_0 = $receiver.iterator();
      while (tmp$_0.hasNext()) {
        var item = tmp$_0.next();
        destination.add_11rb$(format_0('r%d=0x%08X', [item, this.getGpr_za3lpa$(item)]));
      }
      return tmp$ + joinToString(destination, ', ') + ']';
    }
  });
  CpuState.prototype.dump = function () {
    println(' DUMP:-- ' + this.summary);
  };
  function CpuState$VFPU_CTRL() {
    CpuState$VFPU_CTRL_instance = this;
    this.SPREFIX = 0;
    this.TPREFIX = 1;
    this.DPREFIX = 2;
    this.CC = 3;
    this.INF4 = 4;
    this.RSV5 = 5;
    this.RSV6 = 6;
    this.REV = 7;
    this.RCX0 = 8;
    this.RCX1 = 9;
    this.RCX2 = 10;
    this.RCX3 = 11;
    this.RCX4 = 12;
    this.RCX5 = 13;
    this.RCX6 = 14;
    this.RCX7 = 15;
    this.MAX = 16;
  }
  CpuState$VFPU_CTRL.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'VFPU_CTRL',
    interfaces: []
  };
  var CpuState$VFPU_CTRL_instance = null;
  function CpuState$VFPU_CTRL_getInstance() {
    if (CpuState$VFPU_CTRL_instance === null) {
      new CpuState$VFPU_CTRL();
    }
    return CpuState$VFPU_CTRL_instance;
  }
  function CpuState$VCondition() {
    CpuState$VCondition_instance = this;
    this.FL = 0;
    this.EQ = 1;
    this.LT = 2;
    this.LE = 3;
    this.TR = 4;
    this.NE = 5;
    this.GE = 6;
    this.GT = 7;
    this.EZ = 8;
    this.EN = 9;
    this.EI = 10;
    this.ES = 11;
    this.NZ = 12;
    this.NN = 13;
    this.NI = 14;
    this.NS = 15;
  }
  CpuState$VCondition.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'VCondition',
    interfaces: []
  };
  var CpuState$VCondition_instance = null;
  function CpuState$VCondition_getInstance() {
    if (CpuState$VCondition_instance === null) {
      new CpuState$VCondition();
    }
    return CpuState$VCondition_instance;
  }
  Object.defineProperty(CpuState.prototype, 'extra', {
    get: function () {
      return this.$delegate_xt3zvs$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_xt3zvs$_0.extra = tmp$;
    }
  });
  CpuState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CpuState',
    interfaces: [Extra]
  };
  function VfpuPrefix(defaultValue, array, arrayIndex) {
    this.defaultValue = defaultValue;
    this.array = array;
    this.arrayIndex = arrayIndex;
    this.enabled = false;
  }
  Object.defineProperty(VfpuPrefix.prototype, 'info', {
    get: function () {
      return this.array[this.arrayIndex];
    },
    set: function (value) {
      this.array[this.arrayIndex] = value;
    }
  });
  VfpuPrefix.prototype.setEnable_za3lpa$ = function (v) {
    this.info = v;
    this.enabled = true;
  };
  VfpuPrefix.prototype.consume = function () {
    this.enabled = false;
  };
  VfpuPrefix.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VfpuPrefix',
    interfaces: []
  };
  function VfpuSourceTargetPrefix(array, arrayIndex) {
    VfpuPrefix.call(this, (new Kotlin.Long(-603979548, 0)).toInt(), array, arrayIndex);
    var $receiver = new ArrayBuffer_init((16 * 4 | 0) + 15 & ~15);
    this.temp_0 = new Float32Array_init($receiver, 0 * 4 | 0, ($receiver.byteLength / 4 | 0) - 0 | 0);
  }
  VfpuSourceTargetPrefix.prototype.applyAndConsume_dr4wf9$ = function (inout, size) {
    if (size === void 0) {
      size = inout.length;
    }
    if (!this.enabled)
      return;
    this.apply_dr4wf9$(inout, size);
    this.enabled = false;
  };
  VfpuSourceTargetPrefix.prototype.apply_dr4wf9$ = function (inout, size) {
    if (size === void 0) {
      size = inout.length;
    }
    var tmp$;
    if (!this.enabled)
      return;
    arraycopy(inout, 0, this.temp_0, 0, size);
    for (var n = 0; n < size; n++) {
      var sourceIndex = this.info >>> 0 + (n * 2 | 0) & 3;
      var sourceAbsolute = (this.info >>> 8 + (n * 1 | 0) & 1) !== 0;
      var sourceConstant = (this.info >>> 12 + (n * 1 | 0) & 1) !== 0;
      var sourceNegate = (this.info >>> 16 + (n * 1 | 0) & 1) !== 0;
      if (sourceConstant) {
        if (sourceIndex === 0)
          tmp$ = sourceAbsolute ? 3.0 : 0.0;
        else if (sourceIndex === 1)
          tmp$ = sourceAbsolute ? 1.0 / 3.0 : 1.0;
        else if (sourceIndex === 2)
          tmp$ = sourceAbsolute ? 1.0 / 4.0 : 2.0;
        else if (sourceIndex === 3)
          tmp$ = sourceAbsolute ? 1.0 / 6.0 : 1.0 / 2.0;
        else
          tmp$ = error.invalidOp;
      }
       else {
        tmp$ = sourceAbsolute ? get_pspAbs(this.temp_0[sourceIndex]) : this.temp_0[sourceIndex];
      }
      var value = tmp$;
      inout[n] = sourceNegate ? -value : value;
    }
  };
  VfpuSourceTargetPrefix.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VfpuSourceTargetPrefix',
    interfaces: [VfpuPrefix]
  };
  function VfpuDestinationPrefix(array, arrayIndex) {
    VfpuPrefix.call(this, (new Kotlin.Long(-603979548, 0)).toInt(), array, arrayIndex);
  }
  VfpuDestinationPrefix.prototype.mask_0 = function (n) {
    return (this.info >>> 8 + (n * 1 | 0) & 1) !== 0;
  };
  VfpuDestinationPrefix.prototype.saturation_za3lpa$ = function (n) {
    return this.info >>> 0 + (n * 2 | 0) & 3;
  };
  VfpuDestinationPrefix.prototype.mustWrite_za3lpa$ = function (n) {
    return this.enabled ? !this.mask_0(n) : true;
  };
  VfpuDestinationPrefix.prototype.transform_24o109$ = function (n, value) {
    var tmp$, tmp$_0;
    if (!this.enabled)
      return value;
    tmp$ = this.saturation_za3lpa$(n);
    if (tmp$ === 1)
      tmp$_0 = get_pspSat0(value);
    else if (tmp$ === 3)
      tmp$_0 = get_pspSat1(value);
    else
      tmp$_0 = value;
    return tmp$_0;
  };
  VfpuDestinationPrefix.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VfpuDestinationPrefix',
    interfaces: [VfpuPrefix]
  };
  function VfpuSingleRegisters(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function VfpuSingleRegisters_initFields() {
    VfpuSingleRegisters_initFields = function () {
    };
    VfpuSingleRegisters$S000_instance = new VfpuSingleRegisters('S000', 0);
    VfpuSingleRegisters$S010_instance = new VfpuSingleRegisters('S010', 1);
    VfpuSingleRegisters$S020_instance = new VfpuSingleRegisters('S020', 2);
    VfpuSingleRegisters$S030_instance = new VfpuSingleRegisters('S030', 3);
    VfpuSingleRegisters$S100_instance = new VfpuSingleRegisters('S100', 4);
    VfpuSingleRegisters$S110_instance = new VfpuSingleRegisters('S110', 5);
    VfpuSingleRegisters$S120_instance = new VfpuSingleRegisters('S120', 6);
    VfpuSingleRegisters$S130_instance = new VfpuSingleRegisters('S130', 7);
    VfpuSingleRegisters$S200_instance = new VfpuSingleRegisters('S200', 8);
    VfpuSingleRegisters$S210_instance = new VfpuSingleRegisters('S210', 9);
    VfpuSingleRegisters$S220_instance = new VfpuSingleRegisters('S220', 10);
    VfpuSingleRegisters$S230_instance = new VfpuSingleRegisters('S230', 11);
    VfpuSingleRegisters$S300_instance = new VfpuSingleRegisters('S300', 12);
    VfpuSingleRegisters$S310_instance = new VfpuSingleRegisters('S310', 13);
    VfpuSingleRegisters$S320_instance = new VfpuSingleRegisters('S320', 14);
    VfpuSingleRegisters$S330_instance = new VfpuSingleRegisters('S330', 15);
    VfpuSingleRegisters$S400_instance = new VfpuSingleRegisters('S400', 16);
    VfpuSingleRegisters$S410_instance = new VfpuSingleRegisters('S410', 17);
    VfpuSingleRegisters$S420_instance = new VfpuSingleRegisters('S420', 18);
    VfpuSingleRegisters$S430_instance = new VfpuSingleRegisters('S430', 19);
    VfpuSingleRegisters$S500_instance = new VfpuSingleRegisters('S500', 20);
    VfpuSingleRegisters$S510_instance = new VfpuSingleRegisters('S510', 21);
    VfpuSingleRegisters$S520_instance = new VfpuSingleRegisters('S520', 22);
    VfpuSingleRegisters$S530_instance = new VfpuSingleRegisters('S530', 23);
    VfpuSingleRegisters$S600_instance = new VfpuSingleRegisters('S600', 24);
    VfpuSingleRegisters$S610_instance = new VfpuSingleRegisters('S610', 25);
    VfpuSingleRegisters$S620_instance = new VfpuSingleRegisters('S620', 26);
    VfpuSingleRegisters$S630_instance = new VfpuSingleRegisters('S630', 27);
    VfpuSingleRegisters$S700_instance = new VfpuSingleRegisters('S700', 28);
    VfpuSingleRegisters$S710_instance = new VfpuSingleRegisters('S710', 29);
    VfpuSingleRegisters$S720_instance = new VfpuSingleRegisters('S720', 30);
    VfpuSingleRegisters$S730_instance = new VfpuSingleRegisters('S730', 31);
    VfpuSingleRegisters$S001_instance = new VfpuSingleRegisters('S001', 32);
    VfpuSingleRegisters$S011_instance = new VfpuSingleRegisters('S011', 33);
    VfpuSingleRegisters$S021_instance = new VfpuSingleRegisters('S021', 34);
    VfpuSingleRegisters$S031_instance = new VfpuSingleRegisters('S031', 35);
    VfpuSingleRegisters$S101_instance = new VfpuSingleRegisters('S101', 36);
    VfpuSingleRegisters$S111_instance = new VfpuSingleRegisters('S111', 37);
    VfpuSingleRegisters$S121_instance = new VfpuSingleRegisters('S121', 38);
    VfpuSingleRegisters$S131_instance = new VfpuSingleRegisters('S131', 39);
    VfpuSingleRegisters$S201_instance = new VfpuSingleRegisters('S201', 40);
    VfpuSingleRegisters$S211_instance = new VfpuSingleRegisters('S211', 41);
    VfpuSingleRegisters$S221_instance = new VfpuSingleRegisters('S221', 42);
    VfpuSingleRegisters$S231_instance = new VfpuSingleRegisters('S231', 43);
    VfpuSingleRegisters$S301_instance = new VfpuSingleRegisters('S301', 44);
    VfpuSingleRegisters$S311_instance = new VfpuSingleRegisters('S311', 45);
    VfpuSingleRegisters$S321_instance = new VfpuSingleRegisters('S321', 46);
    VfpuSingleRegisters$S331_instance = new VfpuSingleRegisters('S331', 47);
    VfpuSingleRegisters$S401_instance = new VfpuSingleRegisters('S401', 48);
    VfpuSingleRegisters$S411_instance = new VfpuSingleRegisters('S411', 49);
    VfpuSingleRegisters$S421_instance = new VfpuSingleRegisters('S421', 50);
    VfpuSingleRegisters$S431_instance = new VfpuSingleRegisters('S431', 51);
    VfpuSingleRegisters$S501_instance = new VfpuSingleRegisters('S501', 52);
    VfpuSingleRegisters$S511_instance = new VfpuSingleRegisters('S511', 53);
    VfpuSingleRegisters$S521_instance = new VfpuSingleRegisters('S521', 54);
    VfpuSingleRegisters$S531_instance = new VfpuSingleRegisters('S531', 55);
    VfpuSingleRegisters$S601_instance = new VfpuSingleRegisters('S601', 56);
    VfpuSingleRegisters$S611_instance = new VfpuSingleRegisters('S611', 57);
    VfpuSingleRegisters$S621_instance = new VfpuSingleRegisters('S621', 58);
    VfpuSingleRegisters$S631_instance = new VfpuSingleRegisters('S631', 59);
    VfpuSingleRegisters$S701_instance = new VfpuSingleRegisters('S701', 60);
    VfpuSingleRegisters$S711_instance = new VfpuSingleRegisters('S711', 61);
    VfpuSingleRegisters$S721_instance = new VfpuSingleRegisters('S721', 62);
    VfpuSingleRegisters$S731_instance = new VfpuSingleRegisters('S731', 63);
    VfpuSingleRegisters$S002_instance = new VfpuSingleRegisters('S002', 64);
    VfpuSingleRegisters$S012_instance = new VfpuSingleRegisters('S012', 65);
    VfpuSingleRegisters$S022_instance = new VfpuSingleRegisters('S022', 66);
    VfpuSingleRegisters$S032_instance = new VfpuSingleRegisters('S032', 67);
    VfpuSingleRegisters$S102_instance = new VfpuSingleRegisters('S102', 68);
    VfpuSingleRegisters$S112_instance = new VfpuSingleRegisters('S112', 69);
    VfpuSingleRegisters$S122_instance = new VfpuSingleRegisters('S122', 70);
    VfpuSingleRegisters$S132_instance = new VfpuSingleRegisters('S132', 71);
    VfpuSingleRegisters$S202_instance = new VfpuSingleRegisters('S202', 72);
    VfpuSingleRegisters$S212_instance = new VfpuSingleRegisters('S212', 73);
    VfpuSingleRegisters$S222_instance = new VfpuSingleRegisters('S222', 74);
    VfpuSingleRegisters$S232_instance = new VfpuSingleRegisters('S232', 75);
    VfpuSingleRegisters$S302_instance = new VfpuSingleRegisters('S302', 76);
    VfpuSingleRegisters$S312_instance = new VfpuSingleRegisters('S312', 77);
    VfpuSingleRegisters$S322_instance = new VfpuSingleRegisters('S322', 78);
    VfpuSingleRegisters$S332_instance = new VfpuSingleRegisters('S332', 79);
    VfpuSingleRegisters$S402_instance = new VfpuSingleRegisters('S402', 80);
    VfpuSingleRegisters$S412_instance = new VfpuSingleRegisters('S412', 81);
    VfpuSingleRegisters$S422_instance = new VfpuSingleRegisters('S422', 82);
    VfpuSingleRegisters$S432_instance = new VfpuSingleRegisters('S432', 83);
    VfpuSingleRegisters$S502_instance = new VfpuSingleRegisters('S502', 84);
    VfpuSingleRegisters$S512_instance = new VfpuSingleRegisters('S512', 85);
    VfpuSingleRegisters$S522_instance = new VfpuSingleRegisters('S522', 86);
    VfpuSingleRegisters$S532_instance = new VfpuSingleRegisters('S532', 87);
    VfpuSingleRegisters$S602_instance = new VfpuSingleRegisters('S602', 88);
    VfpuSingleRegisters$S612_instance = new VfpuSingleRegisters('S612', 89);
    VfpuSingleRegisters$S622_instance = new VfpuSingleRegisters('S622', 90);
    VfpuSingleRegisters$S632_instance = new VfpuSingleRegisters('S632', 91);
    VfpuSingleRegisters$S702_instance = new VfpuSingleRegisters('S702', 92);
    VfpuSingleRegisters$S712_instance = new VfpuSingleRegisters('S712', 93);
    VfpuSingleRegisters$S722_instance = new VfpuSingleRegisters('S722', 94);
    VfpuSingleRegisters$S732_instance = new VfpuSingleRegisters('S732', 95);
    VfpuSingleRegisters$S003_instance = new VfpuSingleRegisters('S003', 96);
    VfpuSingleRegisters$S013_instance = new VfpuSingleRegisters('S013', 97);
    VfpuSingleRegisters$S023_instance = new VfpuSingleRegisters('S023', 98);
    VfpuSingleRegisters$S033_instance = new VfpuSingleRegisters('S033', 99);
    VfpuSingleRegisters$S103_instance = new VfpuSingleRegisters('S103', 100);
    VfpuSingleRegisters$S113_instance = new VfpuSingleRegisters('S113', 101);
    VfpuSingleRegisters$S123_instance = new VfpuSingleRegisters('S123', 102);
    VfpuSingleRegisters$S133_instance = new VfpuSingleRegisters('S133', 103);
    VfpuSingleRegisters$S203_instance = new VfpuSingleRegisters('S203', 104);
    VfpuSingleRegisters$S213_instance = new VfpuSingleRegisters('S213', 105);
    VfpuSingleRegisters$S223_instance = new VfpuSingleRegisters('S223', 106);
    VfpuSingleRegisters$S233_instance = new VfpuSingleRegisters('S233', 107);
    VfpuSingleRegisters$S303_instance = new VfpuSingleRegisters('S303', 108);
    VfpuSingleRegisters$S313_instance = new VfpuSingleRegisters('S313', 109);
    VfpuSingleRegisters$S323_instance = new VfpuSingleRegisters('S323', 110);
    VfpuSingleRegisters$S333_instance = new VfpuSingleRegisters('S333', 111);
    VfpuSingleRegisters$S403_instance = new VfpuSingleRegisters('S403', 112);
    VfpuSingleRegisters$S413_instance = new VfpuSingleRegisters('S413', 113);
    VfpuSingleRegisters$S423_instance = new VfpuSingleRegisters('S423', 114);
    VfpuSingleRegisters$S433_instance = new VfpuSingleRegisters('S433', 115);
    VfpuSingleRegisters$S503_instance = new VfpuSingleRegisters('S503', 116);
    VfpuSingleRegisters$S513_instance = new VfpuSingleRegisters('S513', 117);
    VfpuSingleRegisters$S523_instance = new VfpuSingleRegisters('S523', 118);
    VfpuSingleRegisters$S533_instance = new VfpuSingleRegisters('S533', 119);
    VfpuSingleRegisters$S603_instance = new VfpuSingleRegisters('S603', 120);
    VfpuSingleRegisters$S613_instance = new VfpuSingleRegisters('S613', 121);
    VfpuSingleRegisters$S623_instance = new VfpuSingleRegisters('S623', 122);
    VfpuSingleRegisters$S633_instance = new VfpuSingleRegisters('S633', 123);
    VfpuSingleRegisters$S703_instance = new VfpuSingleRegisters('S703', 124);
    VfpuSingleRegisters$S713_instance = new VfpuSingleRegisters('S713', 125);
    VfpuSingleRegisters$S723_instance = new VfpuSingleRegisters('S723', 126);
    VfpuSingleRegisters$S733_instance = new VfpuSingleRegisters('S733', 127);
    VfpuSingleRegisters$Companion_getInstance();
  }
  var VfpuSingleRegisters$S000_instance;
  function VfpuSingleRegisters$S000_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S000_instance;
  }
  var VfpuSingleRegisters$S010_instance;
  function VfpuSingleRegisters$S010_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S010_instance;
  }
  var VfpuSingleRegisters$S020_instance;
  function VfpuSingleRegisters$S020_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S020_instance;
  }
  var VfpuSingleRegisters$S030_instance;
  function VfpuSingleRegisters$S030_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S030_instance;
  }
  var VfpuSingleRegisters$S100_instance;
  function VfpuSingleRegisters$S100_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S100_instance;
  }
  var VfpuSingleRegisters$S110_instance;
  function VfpuSingleRegisters$S110_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S110_instance;
  }
  var VfpuSingleRegisters$S120_instance;
  function VfpuSingleRegisters$S120_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S120_instance;
  }
  var VfpuSingleRegisters$S130_instance;
  function VfpuSingleRegisters$S130_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S130_instance;
  }
  var VfpuSingleRegisters$S200_instance;
  function VfpuSingleRegisters$S200_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S200_instance;
  }
  var VfpuSingleRegisters$S210_instance;
  function VfpuSingleRegisters$S210_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S210_instance;
  }
  var VfpuSingleRegisters$S220_instance;
  function VfpuSingleRegisters$S220_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S220_instance;
  }
  var VfpuSingleRegisters$S230_instance;
  function VfpuSingleRegisters$S230_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S230_instance;
  }
  var VfpuSingleRegisters$S300_instance;
  function VfpuSingleRegisters$S300_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S300_instance;
  }
  var VfpuSingleRegisters$S310_instance;
  function VfpuSingleRegisters$S310_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S310_instance;
  }
  var VfpuSingleRegisters$S320_instance;
  function VfpuSingleRegisters$S320_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S320_instance;
  }
  var VfpuSingleRegisters$S330_instance;
  function VfpuSingleRegisters$S330_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S330_instance;
  }
  var VfpuSingleRegisters$S400_instance;
  function VfpuSingleRegisters$S400_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S400_instance;
  }
  var VfpuSingleRegisters$S410_instance;
  function VfpuSingleRegisters$S410_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S410_instance;
  }
  var VfpuSingleRegisters$S420_instance;
  function VfpuSingleRegisters$S420_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S420_instance;
  }
  var VfpuSingleRegisters$S430_instance;
  function VfpuSingleRegisters$S430_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S430_instance;
  }
  var VfpuSingleRegisters$S500_instance;
  function VfpuSingleRegisters$S500_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S500_instance;
  }
  var VfpuSingleRegisters$S510_instance;
  function VfpuSingleRegisters$S510_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S510_instance;
  }
  var VfpuSingleRegisters$S520_instance;
  function VfpuSingleRegisters$S520_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S520_instance;
  }
  var VfpuSingleRegisters$S530_instance;
  function VfpuSingleRegisters$S530_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S530_instance;
  }
  var VfpuSingleRegisters$S600_instance;
  function VfpuSingleRegisters$S600_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S600_instance;
  }
  var VfpuSingleRegisters$S610_instance;
  function VfpuSingleRegisters$S610_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S610_instance;
  }
  var VfpuSingleRegisters$S620_instance;
  function VfpuSingleRegisters$S620_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S620_instance;
  }
  var VfpuSingleRegisters$S630_instance;
  function VfpuSingleRegisters$S630_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S630_instance;
  }
  var VfpuSingleRegisters$S700_instance;
  function VfpuSingleRegisters$S700_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S700_instance;
  }
  var VfpuSingleRegisters$S710_instance;
  function VfpuSingleRegisters$S710_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S710_instance;
  }
  var VfpuSingleRegisters$S720_instance;
  function VfpuSingleRegisters$S720_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S720_instance;
  }
  var VfpuSingleRegisters$S730_instance;
  function VfpuSingleRegisters$S730_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S730_instance;
  }
  var VfpuSingleRegisters$S001_instance;
  function VfpuSingleRegisters$S001_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S001_instance;
  }
  var VfpuSingleRegisters$S011_instance;
  function VfpuSingleRegisters$S011_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S011_instance;
  }
  var VfpuSingleRegisters$S021_instance;
  function VfpuSingleRegisters$S021_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S021_instance;
  }
  var VfpuSingleRegisters$S031_instance;
  function VfpuSingleRegisters$S031_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S031_instance;
  }
  var VfpuSingleRegisters$S101_instance;
  function VfpuSingleRegisters$S101_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S101_instance;
  }
  var VfpuSingleRegisters$S111_instance;
  function VfpuSingleRegisters$S111_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S111_instance;
  }
  var VfpuSingleRegisters$S121_instance;
  function VfpuSingleRegisters$S121_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S121_instance;
  }
  var VfpuSingleRegisters$S131_instance;
  function VfpuSingleRegisters$S131_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S131_instance;
  }
  var VfpuSingleRegisters$S201_instance;
  function VfpuSingleRegisters$S201_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S201_instance;
  }
  var VfpuSingleRegisters$S211_instance;
  function VfpuSingleRegisters$S211_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S211_instance;
  }
  var VfpuSingleRegisters$S221_instance;
  function VfpuSingleRegisters$S221_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S221_instance;
  }
  var VfpuSingleRegisters$S231_instance;
  function VfpuSingleRegisters$S231_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S231_instance;
  }
  var VfpuSingleRegisters$S301_instance;
  function VfpuSingleRegisters$S301_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S301_instance;
  }
  var VfpuSingleRegisters$S311_instance;
  function VfpuSingleRegisters$S311_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S311_instance;
  }
  var VfpuSingleRegisters$S321_instance;
  function VfpuSingleRegisters$S321_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S321_instance;
  }
  var VfpuSingleRegisters$S331_instance;
  function VfpuSingleRegisters$S331_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S331_instance;
  }
  var VfpuSingleRegisters$S401_instance;
  function VfpuSingleRegisters$S401_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S401_instance;
  }
  var VfpuSingleRegisters$S411_instance;
  function VfpuSingleRegisters$S411_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S411_instance;
  }
  var VfpuSingleRegisters$S421_instance;
  function VfpuSingleRegisters$S421_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S421_instance;
  }
  var VfpuSingleRegisters$S431_instance;
  function VfpuSingleRegisters$S431_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S431_instance;
  }
  var VfpuSingleRegisters$S501_instance;
  function VfpuSingleRegisters$S501_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S501_instance;
  }
  var VfpuSingleRegisters$S511_instance;
  function VfpuSingleRegisters$S511_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S511_instance;
  }
  var VfpuSingleRegisters$S521_instance;
  function VfpuSingleRegisters$S521_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S521_instance;
  }
  var VfpuSingleRegisters$S531_instance;
  function VfpuSingleRegisters$S531_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S531_instance;
  }
  var VfpuSingleRegisters$S601_instance;
  function VfpuSingleRegisters$S601_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S601_instance;
  }
  var VfpuSingleRegisters$S611_instance;
  function VfpuSingleRegisters$S611_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S611_instance;
  }
  var VfpuSingleRegisters$S621_instance;
  function VfpuSingleRegisters$S621_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S621_instance;
  }
  var VfpuSingleRegisters$S631_instance;
  function VfpuSingleRegisters$S631_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S631_instance;
  }
  var VfpuSingleRegisters$S701_instance;
  function VfpuSingleRegisters$S701_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S701_instance;
  }
  var VfpuSingleRegisters$S711_instance;
  function VfpuSingleRegisters$S711_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S711_instance;
  }
  var VfpuSingleRegisters$S721_instance;
  function VfpuSingleRegisters$S721_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S721_instance;
  }
  var VfpuSingleRegisters$S731_instance;
  function VfpuSingleRegisters$S731_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S731_instance;
  }
  var VfpuSingleRegisters$S002_instance;
  function VfpuSingleRegisters$S002_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S002_instance;
  }
  var VfpuSingleRegisters$S012_instance;
  function VfpuSingleRegisters$S012_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S012_instance;
  }
  var VfpuSingleRegisters$S022_instance;
  function VfpuSingleRegisters$S022_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S022_instance;
  }
  var VfpuSingleRegisters$S032_instance;
  function VfpuSingleRegisters$S032_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S032_instance;
  }
  var VfpuSingleRegisters$S102_instance;
  function VfpuSingleRegisters$S102_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S102_instance;
  }
  var VfpuSingleRegisters$S112_instance;
  function VfpuSingleRegisters$S112_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S112_instance;
  }
  var VfpuSingleRegisters$S122_instance;
  function VfpuSingleRegisters$S122_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S122_instance;
  }
  var VfpuSingleRegisters$S132_instance;
  function VfpuSingleRegisters$S132_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S132_instance;
  }
  var VfpuSingleRegisters$S202_instance;
  function VfpuSingleRegisters$S202_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S202_instance;
  }
  var VfpuSingleRegisters$S212_instance;
  function VfpuSingleRegisters$S212_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S212_instance;
  }
  var VfpuSingleRegisters$S222_instance;
  function VfpuSingleRegisters$S222_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S222_instance;
  }
  var VfpuSingleRegisters$S232_instance;
  function VfpuSingleRegisters$S232_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S232_instance;
  }
  var VfpuSingleRegisters$S302_instance;
  function VfpuSingleRegisters$S302_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S302_instance;
  }
  var VfpuSingleRegisters$S312_instance;
  function VfpuSingleRegisters$S312_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S312_instance;
  }
  var VfpuSingleRegisters$S322_instance;
  function VfpuSingleRegisters$S322_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S322_instance;
  }
  var VfpuSingleRegisters$S332_instance;
  function VfpuSingleRegisters$S332_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S332_instance;
  }
  var VfpuSingleRegisters$S402_instance;
  function VfpuSingleRegisters$S402_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S402_instance;
  }
  var VfpuSingleRegisters$S412_instance;
  function VfpuSingleRegisters$S412_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S412_instance;
  }
  var VfpuSingleRegisters$S422_instance;
  function VfpuSingleRegisters$S422_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S422_instance;
  }
  var VfpuSingleRegisters$S432_instance;
  function VfpuSingleRegisters$S432_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S432_instance;
  }
  var VfpuSingleRegisters$S502_instance;
  function VfpuSingleRegisters$S502_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S502_instance;
  }
  var VfpuSingleRegisters$S512_instance;
  function VfpuSingleRegisters$S512_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S512_instance;
  }
  var VfpuSingleRegisters$S522_instance;
  function VfpuSingleRegisters$S522_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S522_instance;
  }
  var VfpuSingleRegisters$S532_instance;
  function VfpuSingleRegisters$S532_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S532_instance;
  }
  var VfpuSingleRegisters$S602_instance;
  function VfpuSingleRegisters$S602_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S602_instance;
  }
  var VfpuSingleRegisters$S612_instance;
  function VfpuSingleRegisters$S612_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S612_instance;
  }
  var VfpuSingleRegisters$S622_instance;
  function VfpuSingleRegisters$S622_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S622_instance;
  }
  var VfpuSingleRegisters$S632_instance;
  function VfpuSingleRegisters$S632_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S632_instance;
  }
  var VfpuSingleRegisters$S702_instance;
  function VfpuSingleRegisters$S702_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S702_instance;
  }
  var VfpuSingleRegisters$S712_instance;
  function VfpuSingleRegisters$S712_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S712_instance;
  }
  var VfpuSingleRegisters$S722_instance;
  function VfpuSingleRegisters$S722_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S722_instance;
  }
  var VfpuSingleRegisters$S732_instance;
  function VfpuSingleRegisters$S732_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S732_instance;
  }
  var VfpuSingleRegisters$S003_instance;
  function VfpuSingleRegisters$S003_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S003_instance;
  }
  var VfpuSingleRegisters$S013_instance;
  function VfpuSingleRegisters$S013_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S013_instance;
  }
  var VfpuSingleRegisters$S023_instance;
  function VfpuSingleRegisters$S023_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S023_instance;
  }
  var VfpuSingleRegisters$S033_instance;
  function VfpuSingleRegisters$S033_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S033_instance;
  }
  var VfpuSingleRegisters$S103_instance;
  function VfpuSingleRegisters$S103_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S103_instance;
  }
  var VfpuSingleRegisters$S113_instance;
  function VfpuSingleRegisters$S113_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S113_instance;
  }
  var VfpuSingleRegisters$S123_instance;
  function VfpuSingleRegisters$S123_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S123_instance;
  }
  var VfpuSingleRegisters$S133_instance;
  function VfpuSingleRegisters$S133_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S133_instance;
  }
  var VfpuSingleRegisters$S203_instance;
  function VfpuSingleRegisters$S203_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S203_instance;
  }
  var VfpuSingleRegisters$S213_instance;
  function VfpuSingleRegisters$S213_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S213_instance;
  }
  var VfpuSingleRegisters$S223_instance;
  function VfpuSingleRegisters$S223_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S223_instance;
  }
  var VfpuSingleRegisters$S233_instance;
  function VfpuSingleRegisters$S233_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S233_instance;
  }
  var VfpuSingleRegisters$S303_instance;
  function VfpuSingleRegisters$S303_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S303_instance;
  }
  var VfpuSingleRegisters$S313_instance;
  function VfpuSingleRegisters$S313_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S313_instance;
  }
  var VfpuSingleRegisters$S323_instance;
  function VfpuSingleRegisters$S323_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S323_instance;
  }
  var VfpuSingleRegisters$S333_instance;
  function VfpuSingleRegisters$S333_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S333_instance;
  }
  var VfpuSingleRegisters$S403_instance;
  function VfpuSingleRegisters$S403_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S403_instance;
  }
  var VfpuSingleRegisters$S413_instance;
  function VfpuSingleRegisters$S413_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S413_instance;
  }
  var VfpuSingleRegisters$S423_instance;
  function VfpuSingleRegisters$S423_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S423_instance;
  }
  var VfpuSingleRegisters$S433_instance;
  function VfpuSingleRegisters$S433_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S433_instance;
  }
  var VfpuSingleRegisters$S503_instance;
  function VfpuSingleRegisters$S503_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S503_instance;
  }
  var VfpuSingleRegisters$S513_instance;
  function VfpuSingleRegisters$S513_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S513_instance;
  }
  var VfpuSingleRegisters$S523_instance;
  function VfpuSingleRegisters$S523_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S523_instance;
  }
  var VfpuSingleRegisters$S533_instance;
  function VfpuSingleRegisters$S533_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S533_instance;
  }
  var VfpuSingleRegisters$S603_instance;
  function VfpuSingleRegisters$S603_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S603_instance;
  }
  var VfpuSingleRegisters$S613_instance;
  function VfpuSingleRegisters$S613_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S613_instance;
  }
  var VfpuSingleRegisters$S623_instance;
  function VfpuSingleRegisters$S623_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S623_instance;
  }
  var VfpuSingleRegisters$S633_instance;
  function VfpuSingleRegisters$S633_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S633_instance;
  }
  var VfpuSingleRegisters$S703_instance;
  function VfpuSingleRegisters$S703_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S703_instance;
  }
  var VfpuSingleRegisters$S713_instance;
  function VfpuSingleRegisters$S713_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S713_instance;
  }
  var VfpuSingleRegisters$S723_instance;
  function VfpuSingleRegisters$S723_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S723_instance;
  }
  var VfpuSingleRegisters$S733_instance;
  function VfpuSingleRegisters$S733_getInstance() {
    VfpuSingleRegisters_initFields();
    return VfpuSingleRegisters$S733_instance;
  }
  function VfpuSingleRegisters$Companion() {
    VfpuSingleRegisters$Companion_instance = this;
    this.values = VfpuSingleRegisters$values();
  }
  VfpuSingleRegisters$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var VfpuSingleRegisters$Companion_instance = null;
  function VfpuSingleRegisters$Companion_getInstance() {
    VfpuSingleRegisters_initFields();
    if (VfpuSingleRegisters$Companion_instance === null) {
      new VfpuSingleRegisters$Companion();
    }
    return VfpuSingleRegisters$Companion_instance;
  }
  VfpuSingleRegisters.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VfpuSingleRegisters',
    interfaces: [Enum]
  };
  function VfpuSingleRegisters$values() {
    return [VfpuSingleRegisters$S000_getInstance(), VfpuSingleRegisters$S010_getInstance(), VfpuSingleRegisters$S020_getInstance(), VfpuSingleRegisters$S030_getInstance(), VfpuSingleRegisters$S100_getInstance(), VfpuSingleRegisters$S110_getInstance(), VfpuSingleRegisters$S120_getInstance(), VfpuSingleRegisters$S130_getInstance(), VfpuSingleRegisters$S200_getInstance(), VfpuSingleRegisters$S210_getInstance(), VfpuSingleRegisters$S220_getInstance(), VfpuSingleRegisters$S230_getInstance(), VfpuSingleRegisters$S300_getInstance(), VfpuSingleRegisters$S310_getInstance(), VfpuSingleRegisters$S320_getInstance(), VfpuSingleRegisters$S330_getInstance(), VfpuSingleRegisters$S400_getInstance(), VfpuSingleRegisters$S410_getInstance(), VfpuSingleRegisters$S420_getInstance(), VfpuSingleRegisters$S430_getInstance(), VfpuSingleRegisters$S500_getInstance(), VfpuSingleRegisters$S510_getInstance(), VfpuSingleRegisters$S520_getInstance(), VfpuSingleRegisters$S530_getInstance(), VfpuSingleRegisters$S600_getInstance(), VfpuSingleRegisters$S610_getInstance(), VfpuSingleRegisters$S620_getInstance(), VfpuSingleRegisters$S630_getInstance(), VfpuSingleRegisters$S700_getInstance(), VfpuSingleRegisters$S710_getInstance(), VfpuSingleRegisters$S720_getInstance(), VfpuSingleRegisters$S730_getInstance(), VfpuSingleRegisters$S001_getInstance(), VfpuSingleRegisters$S011_getInstance(), VfpuSingleRegisters$S021_getInstance(), VfpuSingleRegisters$S031_getInstance(), VfpuSingleRegisters$S101_getInstance(), VfpuSingleRegisters$S111_getInstance(), VfpuSingleRegisters$S121_getInstance(), VfpuSingleRegisters$S131_getInstance(), VfpuSingleRegisters$S201_getInstance(), VfpuSingleRegisters$S211_getInstance(), VfpuSingleRegisters$S221_getInstance(), VfpuSingleRegisters$S231_getInstance(), VfpuSingleRegisters$S301_getInstance(), VfpuSingleRegisters$S311_getInstance(), VfpuSingleRegisters$S321_getInstance(), VfpuSingleRegisters$S331_getInstance(), VfpuSingleRegisters$S401_getInstance(), VfpuSingleRegisters$S411_getInstance(), VfpuSingleRegisters$S421_getInstance(), VfpuSingleRegisters$S431_getInstance(), VfpuSingleRegisters$S501_getInstance(), VfpuSingleRegisters$S511_getInstance(), VfpuSingleRegisters$S521_getInstance(), VfpuSingleRegisters$S531_getInstance(), VfpuSingleRegisters$S601_getInstance(), VfpuSingleRegisters$S611_getInstance(), VfpuSingleRegisters$S621_getInstance(), VfpuSingleRegisters$S631_getInstance(), VfpuSingleRegisters$S701_getInstance(), VfpuSingleRegisters$S711_getInstance(), VfpuSingleRegisters$S721_getInstance(), VfpuSingleRegisters$S731_getInstance(), VfpuSingleRegisters$S002_getInstance(), VfpuSingleRegisters$S012_getInstance(), VfpuSingleRegisters$S022_getInstance(), VfpuSingleRegisters$S032_getInstance(), VfpuSingleRegisters$S102_getInstance(), VfpuSingleRegisters$S112_getInstance(), VfpuSingleRegisters$S122_getInstance(), VfpuSingleRegisters$S132_getInstance(), VfpuSingleRegisters$S202_getInstance(), VfpuSingleRegisters$S212_getInstance(), VfpuSingleRegisters$S222_getInstance(), VfpuSingleRegisters$S232_getInstance(), VfpuSingleRegisters$S302_getInstance(), VfpuSingleRegisters$S312_getInstance(), VfpuSingleRegisters$S322_getInstance(), VfpuSingleRegisters$S332_getInstance(), VfpuSingleRegisters$S402_getInstance(), VfpuSingleRegisters$S412_getInstance(), VfpuSingleRegisters$S422_getInstance(), VfpuSingleRegisters$S432_getInstance(), VfpuSingleRegisters$S502_getInstance(), VfpuSingleRegisters$S512_getInstance(), VfpuSingleRegisters$S522_getInstance(), VfpuSingleRegisters$S532_getInstance(), VfpuSingleRegisters$S602_getInstance(), VfpuSingleRegisters$S612_getInstance(), VfpuSingleRegisters$S622_getInstance(), VfpuSingleRegisters$S632_getInstance(), VfpuSingleRegisters$S702_getInstance(), VfpuSingleRegisters$S712_getInstance(), VfpuSingleRegisters$S722_getInstance(), VfpuSingleRegisters$S732_getInstance(), VfpuSingleRegisters$S003_getInstance(), VfpuSingleRegisters$S013_getInstance(), VfpuSingleRegisters$S023_getInstance(), VfpuSingleRegisters$S033_getInstance(), VfpuSingleRegisters$S103_getInstance(), VfpuSingleRegisters$S113_getInstance(), VfpuSingleRegisters$S123_getInstance(), VfpuSingleRegisters$S133_getInstance(), VfpuSingleRegisters$S203_getInstance(), VfpuSingleRegisters$S213_getInstance(), VfpuSingleRegisters$S223_getInstance(), VfpuSingleRegisters$S233_getInstance(), VfpuSingleRegisters$S303_getInstance(), VfpuSingleRegisters$S313_getInstance(), VfpuSingleRegisters$S323_getInstance(), VfpuSingleRegisters$S333_getInstance(), VfpuSingleRegisters$S403_getInstance(), VfpuSingleRegisters$S413_getInstance(), VfpuSingleRegisters$S423_getInstance(), VfpuSingleRegisters$S433_getInstance(), VfpuSingleRegisters$S503_getInstance(), VfpuSingleRegisters$S513_getInstance(), VfpuSingleRegisters$S523_getInstance(), VfpuSingleRegisters$S533_getInstance(), VfpuSingleRegisters$S603_getInstance(), VfpuSingleRegisters$S613_getInstance(), VfpuSingleRegisters$S623_getInstance(), VfpuSingleRegisters$S633_getInstance(), VfpuSingleRegisters$S703_getInstance(), VfpuSingleRegisters$S713_getInstance(), VfpuSingleRegisters$S723_getInstance(), VfpuSingleRegisters$S733_getInstance()];
  }
  VfpuSingleRegisters.values = VfpuSingleRegisters$values;
  function VfpuSingleRegisters$valueOf(name) {
    switch (name) {
      case 'S000':
        return VfpuSingleRegisters$S000_getInstance();
      case 'S010':
        return VfpuSingleRegisters$S010_getInstance();
      case 'S020':
        return VfpuSingleRegisters$S020_getInstance();
      case 'S030':
        return VfpuSingleRegisters$S030_getInstance();
      case 'S100':
        return VfpuSingleRegisters$S100_getInstance();
      case 'S110':
        return VfpuSingleRegisters$S110_getInstance();
      case 'S120':
        return VfpuSingleRegisters$S120_getInstance();
      case 'S130':
        return VfpuSingleRegisters$S130_getInstance();
      case 'S200':
        return VfpuSingleRegisters$S200_getInstance();
      case 'S210':
        return VfpuSingleRegisters$S210_getInstance();
      case 'S220':
        return VfpuSingleRegisters$S220_getInstance();
      case 'S230':
        return VfpuSingleRegisters$S230_getInstance();
      case 'S300':
        return VfpuSingleRegisters$S300_getInstance();
      case 'S310':
        return VfpuSingleRegisters$S310_getInstance();
      case 'S320':
        return VfpuSingleRegisters$S320_getInstance();
      case 'S330':
        return VfpuSingleRegisters$S330_getInstance();
      case 'S400':
        return VfpuSingleRegisters$S400_getInstance();
      case 'S410':
        return VfpuSingleRegisters$S410_getInstance();
      case 'S420':
        return VfpuSingleRegisters$S420_getInstance();
      case 'S430':
        return VfpuSingleRegisters$S430_getInstance();
      case 'S500':
        return VfpuSingleRegisters$S500_getInstance();
      case 'S510':
        return VfpuSingleRegisters$S510_getInstance();
      case 'S520':
        return VfpuSingleRegisters$S520_getInstance();
      case 'S530':
        return VfpuSingleRegisters$S530_getInstance();
      case 'S600':
        return VfpuSingleRegisters$S600_getInstance();
      case 'S610':
        return VfpuSingleRegisters$S610_getInstance();
      case 'S620':
        return VfpuSingleRegisters$S620_getInstance();
      case 'S630':
        return VfpuSingleRegisters$S630_getInstance();
      case 'S700':
        return VfpuSingleRegisters$S700_getInstance();
      case 'S710':
        return VfpuSingleRegisters$S710_getInstance();
      case 'S720':
        return VfpuSingleRegisters$S720_getInstance();
      case 'S730':
        return VfpuSingleRegisters$S730_getInstance();
      case 'S001':
        return VfpuSingleRegisters$S001_getInstance();
      case 'S011':
        return VfpuSingleRegisters$S011_getInstance();
      case 'S021':
        return VfpuSingleRegisters$S021_getInstance();
      case 'S031':
        return VfpuSingleRegisters$S031_getInstance();
      case 'S101':
        return VfpuSingleRegisters$S101_getInstance();
      case 'S111':
        return VfpuSingleRegisters$S111_getInstance();
      case 'S121':
        return VfpuSingleRegisters$S121_getInstance();
      case 'S131':
        return VfpuSingleRegisters$S131_getInstance();
      case 'S201':
        return VfpuSingleRegisters$S201_getInstance();
      case 'S211':
        return VfpuSingleRegisters$S211_getInstance();
      case 'S221':
        return VfpuSingleRegisters$S221_getInstance();
      case 'S231':
        return VfpuSingleRegisters$S231_getInstance();
      case 'S301':
        return VfpuSingleRegisters$S301_getInstance();
      case 'S311':
        return VfpuSingleRegisters$S311_getInstance();
      case 'S321':
        return VfpuSingleRegisters$S321_getInstance();
      case 'S331':
        return VfpuSingleRegisters$S331_getInstance();
      case 'S401':
        return VfpuSingleRegisters$S401_getInstance();
      case 'S411':
        return VfpuSingleRegisters$S411_getInstance();
      case 'S421':
        return VfpuSingleRegisters$S421_getInstance();
      case 'S431':
        return VfpuSingleRegisters$S431_getInstance();
      case 'S501':
        return VfpuSingleRegisters$S501_getInstance();
      case 'S511':
        return VfpuSingleRegisters$S511_getInstance();
      case 'S521':
        return VfpuSingleRegisters$S521_getInstance();
      case 'S531':
        return VfpuSingleRegisters$S531_getInstance();
      case 'S601':
        return VfpuSingleRegisters$S601_getInstance();
      case 'S611':
        return VfpuSingleRegisters$S611_getInstance();
      case 'S621':
        return VfpuSingleRegisters$S621_getInstance();
      case 'S631':
        return VfpuSingleRegisters$S631_getInstance();
      case 'S701':
        return VfpuSingleRegisters$S701_getInstance();
      case 'S711':
        return VfpuSingleRegisters$S711_getInstance();
      case 'S721':
        return VfpuSingleRegisters$S721_getInstance();
      case 'S731':
        return VfpuSingleRegisters$S731_getInstance();
      case 'S002':
        return VfpuSingleRegisters$S002_getInstance();
      case 'S012':
        return VfpuSingleRegisters$S012_getInstance();
      case 'S022':
        return VfpuSingleRegisters$S022_getInstance();
      case 'S032':
        return VfpuSingleRegisters$S032_getInstance();
      case 'S102':
        return VfpuSingleRegisters$S102_getInstance();
      case 'S112':
        return VfpuSingleRegisters$S112_getInstance();
      case 'S122':
        return VfpuSingleRegisters$S122_getInstance();
      case 'S132':
        return VfpuSingleRegisters$S132_getInstance();
      case 'S202':
        return VfpuSingleRegisters$S202_getInstance();
      case 'S212':
        return VfpuSingleRegisters$S212_getInstance();
      case 'S222':
        return VfpuSingleRegisters$S222_getInstance();
      case 'S232':
        return VfpuSingleRegisters$S232_getInstance();
      case 'S302':
        return VfpuSingleRegisters$S302_getInstance();
      case 'S312':
        return VfpuSingleRegisters$S312_getInstance();
      case 'S322':
        return VfpuSingleRegisters$S322_getInstance();
      case 'S332':
        return VfpuSingleRegisters$S332_getInstance();
      case 'S402':
        return VfpuSingleRegisters$S402_getInstance();
      case 'S412':
        return VfpuSingleRegisters$S412_getInstance();
      case 'S422':
        return VfpuSingleRegisters$S422_getInstance();
      case 'S432':
        return VfpuSingleRegisters$S432_getInstance();
      case 'S502':
        return VfpuSingleRegisters$S502_getInstance();
      case 'S512':
        return VfpuSingleRegisters$S512_getInstance();
      case 'S522':
        return VfpuSingleRegisters$S522_getInstance();
      case 'S532':
        return VfpuSingleRegisters$S532_getInstance();
      case 'S602':
        return VfpuSingleRegisters$S602_getInstance();
      case 'S612':
        return VfpuSingleRegisters$S612_getInstance();
      case 'S622':
        return VfpuSingleRegisters$S622_getInstance();
      case 'S632':
        return VfpuSingleRegisters$S632_getInstance();
      case 'S702':
        return VfpuSingleRegisters$S702_getInstance();
      case 'S712':
        return VfpuSingleRegisters$S712_getInstance();
      case 'S722':
        return VfpuSingleRegisters$S722_getInstance();
      case 'S732':
        return VfpuSingleRegisters$S732_getInstance();
      case 'S003':
        return VfpuSingleRegisters$S003_getInstance();
      case 'S013':
        return VfpuSingleRegisters$S013_getInstance();
      case 'S023':
        return VfpuSingleRegisters$S023_getInstance();
      case 'S033':
        return VfpuSingleRegisters$S033_getInstance();
      case 'S103':
        return VfpuSingleRegisters$S103_getInstance();
      case 'S113':
        return VfpuSingleRegisters$S113_getInstance();
      case 'S123':
        return VfpuSingleRegisters$S123_getInstance();
      case 'S133':
        return VfpuSingleRegisters$S133_getInstance();
      case 'S203':
        return VfpuSingleRegisters$S203_getInstance();
      case 'S213':
        return VfpuSingleRegisters$S213_getInstance();
      case 'S223':
        return VfpuSingleRegisters$S223_getInstance();
      case 'S233':
        return VfpuSingleRegisters$S233_getInstance();
      case 'S303':
        return VfpuSingleRegisters$S303_getInstance();
      case 'S313':
        return VfpuSingleRegisters$S313_getInstance();
      case 'S323':
        return VfpuSingleRegisters$S323_getInstance();
      case 'S333':
        return VfpuSingleRegisters$S333_getInstance();
      case 'S403':
        return VfpuSingleRegisters$S403_getInstance();
      case 'S413':
        return VfpuSingleRegisters$S413_getInstance();
      case 'S423':
        return VfpuSingleRegisters$S423_getInstance();
      case 'S433':
        return VfpuSingleRegisters$S433_getInstance();
      case 'S503':
        return VfpuSingleRegisters$S503_getInstance();
      case 'S513':
        return VfpuSingleRegisters$S513_getInstance();
      case 'S523':
        return VfpuSingleRegisters$S523_getInstance();
      case 'S533':
        return VfpuSingleRegisters$S533_getInstance();
      case 'S603':
        return VfpuSingleRegisters$S603_getInstance();
      case 'S613':
        return VfpuSingleRegisters$S613_getInstance();
      case 'S623':
        return VfpuSingleRegisters$S623_getInstance();
      case 'S633':
        return VfpuSingleRegisters$S633_getInstance();
      case 'S703':
        return VfpuSingleRegisters$S703_getInstance();
      case 'S713':
        return VfpuSingleRegisters$S713_getInstance();
      case 'S723':
        return VfpuSingleRegisters$S723_getInstance();
      case 'S733':
        return VfpuSingleRegisters$S733_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.cpu.VfpuSingleRegisters.' + name);
    }
  }
  VfpuSingleRegisters.valueOf_61zpoe$ = VfpuSingleRegisters$valueOf;
  function VfpuPairRegisters(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function VfpuPairRegisters_initFields() {
    VfpuPairRegisters_initFields = function () {
    };
    VfpuPairRegisters$C000_instance = new VfpuPairRegisters('C000', 0);
    VfpuPairRegisters$C010_instance = new VfpuPairRegisters('C010', 1);
    VfpuPairRegisters$C020_instance = new VfpuPairRegisters('C020', 2);
    VfpuPairRegisters$C030_instance = new VfpuPairRegisters('C030', 3);
    VfpuPairRegisters$C100_instance = new VfpuPairRegisters('C100', 4);
    VfpuPairRegisters$C110_instance = new VfpuPairRegisters('C110', 5);
    VfpuPairRegisters$C120_instance = new VfpuPairRegisters('C120', 6);
    VfpuPairRegisters$C130_instance = new VfpuPairRegisters('C130', 7);
    VfpuPairRegisters$C200_instance = new VfpuPairRegisters('C200', 8);
    VfpuPairRegisters$C210_instance = new VfpuPairRegisters('C210', 9);
    VfpuPairRegisters$C220_instance = new VfpuPairRegisters('C220', 10);
    VfpuPairRegisters$C230_instance = new VfpuPairRegisters('C230', 11);
    VfpuPairRegisters$C300_instance = new VfpuPairRegisters('C300', 12);
    VfpuPairRegisters$C310_instance = new VfpuPairRegisters('C310', 13);
    VfpuPairRegisters$C320_instance = new VfpuPairRegisters('C320', 14);
    VfpuPairRegisters$C330_instance = new VfpuPairRegisters('C330', 15);
    VfpuPairRegisters$C400_instance = new VfpuPairRegisters('C400', 16);
    VfpuPairRegisters$C410_instance = new VfpuPairRegisters('C410', 17);
    VfpuPairRegisters$C420_instance = new VfpuPairRegisters('C420', 18);
    VfpuPairRegisters$C430_instance = new VfpuPairRegisters('C430', 19);
    VfpuPairRegisters$C500_instance = new VfpuPairRegisters('C500', 20);
    VfpuPairRegisters$C510_instance = new VfpuPairRegisters('C510', 21);
    VfpuPairRegisters$C520_instance = new VfpuPairRegisters('C520', 22);
    VfpuPairRegisters$C530_instance = new VfpuPairRegisters('C530', 23);
    VfpuPairRegisters$C600_instance = new VfpuPairRegisters('C600', 24);
    VfpuPairRegisters$C610_instance = new VfpuPairRegisters('C610', 25);
    VfpuPairRegisters$C620_instance = new VfpuPairRegisters('C620', 26);
    VfpuPairRegisters$C630_instance = new VfpuPairRegisters('C630', 27);
    VfpuPairRegisters$C700_instance = new VfpuPairRegisters('C700', 28);
    VfpuPairRegisters$C710_instance = new VfpuPairRegisters('C710', 29);
    VfpuPairRegisters$C720_instance = new VfpuPairRegisters('C720', 30);
    VfpuPairRegisters$C730_instance = new VfpuPairRegisters('C730', 31);
    VfpuPairRegisters$R000_instance = new VfpuPairRegisters('R000', 32);
    VfpuPairRegisters$R001_instance = new VfpuPairRegisters('R001', 33);
    VfpuPairRegisters$R002_instance = new VfpuPairRegisters('R002', 34);
    VfpuPairRegisters$R003_instance = new VfpuPairRegisters('R003', 35);
    VfpuPairRegisters$R100_instance = new VfpuPairRegisters('R100', 36);
    VfpuPairRegisters$R101_instance = new VfpuPairRegisters('R101', 37);
    VfpuPairRegisters$R102_instance = new VfpuPairRegisters('R102', 38);
    VfpuPairRegisters$R103_instance = new VfpuPairRegisters('R103', 39);
    VfpuPairRegisters$R200_instance = new VfpuPairRegisters('R200', 40);
    VfpuPairRegisters$R201_instance = new VfpuPairRegisters('R201', 41);
    VfpuPairRegisters$R202_instance = new VfpuPairRegisters('R202', 42);
    VfpuPairRegisters$R203_instance = new VfpuPairRegisters('R203', 43);
    VfpuPairRegisters$R300_instance = new VfpuPairRegisters('R300', 44);
    VfpuPairRegisters$R301_instance = new VfpuPairRegisters('R301', 45);
    VfpuPairRegisters$R302_instance = new VfpuPairRegisters('R302', 46);
    VfpuPairRegisters$R303_instance = new VfpuPairRegisters('R303', 47);
    VfpuPairRegisters$R400_instance = new VfpuPairRegisters('R400', 48);
    VfpuPairRegisters$R401_instance = new VfpuPairRegisters('R401', 49);
    VfpuPairRegisters$R402_instance = new VfpuPairRegisters('R402', 50);
    VfpuPairRegisters$R403_instance = new VfpuPairRegisters('R403', 51);
    VfpuPairRegisters$R500_instance = new VfpuPairRegisters('R500', 52);
    VfpuPairRegisters$R501_instance = new VfpuPairRegisters('R501', 53);
    VfpuPairRegisters$R502_instance = new VfpuPairRegisters('R502', 54);
    VfpuPairRegisters$R503_instance = new VfpuPairRegisters('R503', 55);
    VfpuPairRegisters$R600_instance = new VfpuPairRegisters('R600', 56);
    VfpuPairRegisters$R601_instance = new VfpuPairRegisters('R601', 57);
    VfpuPairRegisters$R602_instance = new VfpuPairRegisters('R602', 58);
    VfpuPairRegisters$R603_instance = new VfpuPairRegisters('R603', 59);
    VfpuPairRegisters$R700_instance = new VfpuPairRegisters('R700', 60);
    VfpuPairRegisters$R701_instance = new VfpuPairRegisters('R701', 61);
    VfpuPairRegisters$R702_instance = new VfpuPairRegisters('R702', 62);
    VfpuPairRegisters$R703_instance = new VfpuPairRegisters('R703', 63);
    VfpuPairRegisters$C002_instance = new VfpuPairRegisters('C002', 64);
    VfpuPairRegisters$C012_instance = new VfpuPairRegisters('C012', 65);
    VfpuPairRegisters$C022_instance = new VfpuPairRegisters('C022', 66);
    VfpuPairRegisters$C032_instance = new VfpuPairRegisters('C032', 67);
    VfpuPairRegisters$C102_instance = new VfpuPairRegisters('C102', 68);
    VfpuPairRegisters$C112_instance = new VfpuPairRegisters('C112', 69);
    VfpuPairRegisters$C122_instance = new VfpuPairRegisters('C122', 70);
    VfpuPairRegisters$C132_instance = new VfpuPairRegisters('C132', 71);
    VfpuPairRegisters$C202_instance = new VfpuPairRegisters('C202', 72);
    VfpuPairRegisters$C212_instance = new VfpuPairRegisters('C212', 73);
    VfpuPairRegisters$C222_instance = new VfpuPairRegisters('C222', 74);
    VfpuPairRegisters$C232_instance = new VfpuPairRegisters('C232', 75);
    VfpuPairRegisters$C302_instance = new VfpuPairRegisters('C302', 76);
    VfpuPairRegisters$C312_instance = new VfpuPairRegisters('C312', 77);
    VfpuPairRegisters$C322_instance = new VfpuPairRegisters('C322', 78);
    VfpuPairRegisters$C332_instance = new VfpuPairRegisters('C332', 79);
    VfpuPairRegisters$C402_instance = new VfpuPairRegisters('C402', 80);
    VfpuPairRegisters$C412_instance = new VfpuPairRegisters('C412', 81);
    VfpuPairRegisters$C422_instance = new VfpuPairRegisters('C422', 82);
    VfpuPairRegisters$C432_instance = new VfpuPairRegisters('C432', 83);
    VfpuPairRegisters$C502_instance = new VfpuPairRegisters('C502', 84);
    VfpuPairRegisters$C512_instance = new VfpuPairRegisters('C512', 85);
    VfpuPairRegisters$C522_instance = new VfpuPairRegisters('C522', 86);
    VfpuPairRegisters$C532_instance = new VfpuPairRegisters('C532', 87);
    VfpuPairRegisters$C602_instance = new VfpuPairRegisters('C602', 88);
    VfpuPairRegisters$C612_instance = new VfpuPairRegisters('C612', 89);
    VfpuPairRegisters$C622_instance = new VfpuPairRegisters('C622', 90);
    VfpuPairRegisters$C632_instance = new VfpuPairRegisters('C632', 91);
    VfpuPairRegisters$C702_instance = new VfpuPairRegisters('C702', 92);
    VfpuPairRegisters$C712_instance = new VfpuPairRegisters('C712', 93);
    VfpuPairRegisters$C722_instance = new VfpuPairRegisters('C722', 94);
    VfpuPairRegisters$C732_instance = new VfpuPairRegisters('C732', 95);
    VfpuPairRegisters$R020_instance = new VfpuPairRegisters('R020', 96);
    VfpuPairRegisters$R021_instance = new VfpuPairRegisters('R021', 97);
    VfpuPairRegisters$R022_instance = new VfpuPairRegisters('R022', 98);
    VfpuPairRegisters$R023_instance = new VfpuPairRegisters('R023', 99);
    VfpuPairRegisters$R120_instance = new VfpuPairRegisters('R120', 100);
    VfpuPairRegisters$R121_instance = new VfpuPairRegisters('R121', 101);
    VfpuPairRegisters$R122_instance = new VfpuPairRegisters('R122', 102);
    VfpuPairRegisters$R123_instance = new VfpuPairRegisters('R123', 103);
    VfpuPairRegisters$R220_instance = new VfpuPairRegisters('R220', 104);
    VfpuPairRegisters$R221_instance = new VfpuPairRegisters('R221', 105);
    VfpuPairRegisters$R222_instance = new VfpuPairRegisters('R222', 106);
    VfpuPairRegisters$R223_instance = new VfpuPairRegisters('R223', 107);
    VfpuPairRegisters$R320_instance = new VfpuPairRegisters('R320', 108);
    VfpuPairRegisters$R321_instance = new VfpuPairRegisters('R321', 109);
    VfpuPairRegisters$R322_instance = new VfpuPairRegisters('R322', 110);
    VfpuPairRegisters$R323_instance = new VfpuPairRegisters('R323', 111);
    VfpuPairRegisters$R420_instance = new VfpuPairRegisters('R420', 112);
    VfpuPairRegisters$R421_instance = new VfpuPairRegisters('R421', 113);
    VfpuPairRegisters$R422_instance = new VfpuPairRegisters('R422', 114);
    VfpuPairRegisters$R423_instance = new VfpuPairRegisters('R423', 115);
    VfpuPairRegisters$R520_instance = new VfpuPairRegisters('R520', 116);
    VfpuPairRegisters$R521_instance = new VfpuPairRegisters('R521', 117);
    VfpuPairRegisters$R522_instance = new VfpuPairRegisters('R522', 118);
    VfpuPairRegisters$R523_instance = new VfpuPairRegisters('R523', 119);
    VfpuPairRegisters$R620_instance = new VfpuPairRegisters('R620', 120);
    VfpuPairRegisters$R621_instance = new VfpuPairRegisters('R621', 121);
    VfpuPairRegisters$R622_instance = new VfpuPairRegisters('R622', 122);
    VfpuPairRegisters$R623_instance = new VfpuPairRegisters('R623', 123);
    VfpuPairRegisters$R720_instance = new VfpuPairRegisters('R720', 124);
    VfpuPairRegisters$R721_instance = new VfpuPairRegisters('R721', 125);
    VfpuPairRegisters$R722_instance = new VfpuPairRegisters('R722', 126);
    VfpuPairRegisters$R723_instance = new VfpuPairRegisters('R723', 127);
    VfpuPairRegisters$Companion_getInstance();
  }
  var VfpuPairRegisters$C000_instance;
  function VfpuPairRegisters$C000_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C000_instance;
  }
  var VfpuPairRegisters$C010_instance;
  function VfpuPairRegisters$C010_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C010_instance;
  }
  var VfpuPairRegisters$C020_instance;
  function VfpuPairRegisters$C020_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C020_instance;
  }
  var VfpuPairRegisters$C030_instance;
  function VfpuPairRegisters$C030_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C030_instance;
  }
  var VfpuPairRegisters$C100_instance;
  function VfpuPairRegisters$C100_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C100_instance;
  }
  var VfpuPairRegisters$C110_instance;
  function VfpuPairRegisters$C110_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C110_instance;
  }
  var VfpuPairRegisters$C120_instance;
  function VfpuPairRegisters$C120_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C120_instance;
  }
  var VfpuPairRegisters$C130_instance;
  function VfpuPairRegisters$C130_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C130_instance;
  }
  var VfpuPairRegisters$C200_instance;
  function VfpuPairRegisters$C200_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C200_instance;
  }
  var VfpuPairRegisters$C210_instance;
  function VfpuPairRegisters$C210_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C210_instance;
  }
  var VfpuPairRegisters$C220_instance;
  function VfpuPairRegisters$C220_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C220_instance;
  }
  var VfpuPairRegisters$C230_instance;
  function VfpuPairRegisters$C230_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C230_instance;
  }
  var VfpuPairRegisters$C300_instance;
  function VfpuPairRegisters$C300_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C300_instance;
  }
  var VfpuPairRegisters$C310_instance;
  function VfpuPairRegisters$C310_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C310_instance;
  }
  var VfpuPairRegisters$C320_instance;
  function VfpuPairRegisters$C320_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C320_instance;
  }
  var VfpuPairRegisters$C330_instance;
  function VfpuPairRegisters$C330_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C330_instance;
  }
  var VfpuPairRegisters$C400_instance;
  function VfpuPairRegisters$C400_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C400_instance;
  }
  var VfpuPairRegisters$C410_instance;
  function VfpuPairRegisters$C410_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C410_instance;
  }
  var VfpuPairRegisters$C420_instance;
  function VfpuPairRegisters$C420_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C420_instance;
  }
  var VfpuPairRegisters$C430_instance;
  function VfpuPairRegisters$C430_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C430_instance;
  }
  var VfpuPairRegisters$C500_instance;
  function VfpuPairRegisters$C500_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C500_instance;
  }
  var VfpuPairRegisters$C510_instance;
  function VfpuPairRegisters$C510_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C510_instance;
  }
  var VfpuPairRegisters$C520_instance;
  function VfpuPairRegisters$C520_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C520_instance;
  }
  var VfpuPairRegisters$C530_instance;
  function VfpuPairRegisters$C530_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C530_instance;
  }
  var VfpuPairRegisters$C600_instance;
  function VfpuPairRegisters$C600_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C600_instance;
  }
  var VfpuPairRegisters$C610_instance;
  function VfpuPairRegisters$C610_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C610_instance;
  }
  var VfpuPairRegisters$C620_instance;
  function VfpuPairRegisters$C620_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C620_instance;
  }
  var VfpuPairRegisters$C630_instance;
  function VfpuPairRegisters$C630_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C630_instance;
  }
  var VfpuPairRegisters$C700_instance;
  function VfpuPairRegisters$C700_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C700_instance;
  }
  var VfpuPairRegisters$C710_instance;
  function VfpuPairRegisters$C710_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C710_instance;
  }
  var VfpuPairRegisters$C720_instance;
  function VfpuPairRegisters$C720_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C720_instance;
  }
  var VfpuPairRegisters$C730_instance;
  function VfpuPairRegisters$C730_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C730_instance;
  }
  var VfpuPairRegisters$R000_instance;
  function VfpuPairRegisters$R000_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R000_instance;
  }
  var VfpuPairRegisters$R001_instance;
  function VfpuPairRegisters$R001_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R001_instance;
  }
  var VfpuPairRegisters$R002_instance;
  function VfpuPairRegisters$R002_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R002_instance;
  }
  var VfpuPairRegisters$R003_instance;
  function VfpuPairRegisters$R003_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R003_instance;
  }
  var VfpuPairRegisters$R100_instance;
  function VfpuPairRegisters$R100_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R100_instance;
  }
  var VfpuPairRegisters$R101_instance;
  function VfpuPairRegisters$R101_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R101_instance;
  }
  var VfpuPairRegisters$R102_instance;
  function VfpuPairRegisters$R102_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R102_instance;
  }
  var VfpuPairRegisters$R103_instance;
  function VfpuPairRegisters$R103_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R103_instance;
  }
  var VfpuPairRegisters$R200_instance;
  function VfpuPairRegisters$R200_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R200_instance;
  }
  var VfpuPairRegisters$R201_instance;
  function VfpuPairRegisters$R201_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R201_instance;
  }
  var VfpuPairRegisters$R202_instance;
  function VfpuPairRegisters$R202_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R202_instance;
  }
  var VfpuPairRegisters$R203_instance;
  function VfpuPairRegisters$R203_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R203_instance;
  }
  var VfpuPairRegisters$R300_instance;
  function VfpuPairRegisters$R300_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R300_instance;
  }
  var VfpuPairRegisters$R301_instance;
  function VfpuPairRegisters$R301_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R301_instance;
  }
  var VfpuPairRegisters$R302_instance;
  function VfpuPairRegisters$R302_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R302_instance;
  }
  var VfpuPairRegisters$R303_instance;
  function VfpuPairRegisters$R303_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R303_instance;
  }
  var VfpuPairRegisters$R400_instance;
  function VfpuPairRegisters$R400_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R400_instance;
  }
  var VfpuPairRegisters$R401_instance;
  function VfpuPairRegisters$R401_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R401_instance;
  }
  var VfpuPairRegisters$R402_instance;
  function VfpuPairRegisters$R402_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R402_instance;
  }
  var VfpuPairRegisters$R403_instance;
  function VfpuPairRegisters$R403_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R403_instance;
  }
  var VfpuPairRegisters$R500_instance;
  function VfpuPairRegisters$R500_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R500_instance;
  }
  var VfpuPairRegisters$R501_instance;
  function VfpuPairRegisters$R501_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R501_instance;
  }
  var VfpuPairRegisters$R502_instance;
  function VfpuPairRegisters$R502_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R502_instance;
  }
  var VfpuPairRegisters$R503_instance;
  function VfpuPairRegisters$R503_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R503_instance;
  }
  var VfpuPairRegisters$R600_instance;
  function VfpuPairRegisters$R600_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R600_instance;
  }
  var VfpuPairRegisters$R601_instance;
  function VfpuPairRegisters$R601_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R601_instance;
  }
  var VfpuPairRegisters$R602_instance;
  function VfpuPairRegisters$R602_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R602_instance;
  }
  var VfpuPairRegisters$R603_instance;
  function VfpuPairRegisters$R603_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R603_instance;
  }
  var VfpuPairRegisters$R700_instance;
  function VfpuPairRegisters$R700_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R700_instance;
  }
  var VfpuPairRegisters$R701_instance;
  function VfpuPairRegisters$R701_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R701_instance;
  }
  var VfpuPairRegisters$R702_instance;
  function VfpuPairRegisters$R702_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R702_instance;
  }
  var VfpuPairRegisters$R703_instance;
  function VfpuPairRegisters$R703_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R703_instance;
  }
  var VfpuPairRegisters$C002_instance;
  function VfpuPairRegisters$C002_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C002_instance;
  }
  var VfpuPairRegisters$C012_instance;
  function VfpuPairRegisters$C012_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C012_instance;
  }
  var VfpuPairRegisters$C022_instance;
  function VfpuPairRegisters$C022_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C022_instance;
  }
  var VfpuPairRegisters$C032_instance;
  function VfpuPairRegisters$C032_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C032_instance;
  }
  var VfpuPairRegisters$C102_instance;
  function VfpuPairRegisters$C102_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C102_instance;
  }
  var VfpuPairRegisters$C112_instance;
  function VfpuPairRegisters$C112_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C112_instance;
  }
  var VfpuPairRegisters$C122_instance;
  function VfpuPairRegisters$C122_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C122_instance;
  }
  var VfpuPairRegisters$C132_instance;
  function VfpuPairRegisters$C132_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C132_instance;
  }
  var VfpuPairRegisters$C202_instance;
  function VfpuPairRegisters$C202_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C202_instance;
  }
  var VfpuPairRegisters$C212_instance;
  function VfpuPairRegisters$C212_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C212_instance;
  }
  var VfpuPairRegisters$C222_instance;
  function VfpuPairRegisters$C222_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C222_instance;
  }
  var VfpuPairRegisters$C232_instance;
  function VfpuPairRegisters$C232_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C232_instance;
  }
  var VfpuPairRegisters$C302_instance;
  function VfpuPairRegisters$C302_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C302_instance;
  }
  var VfpuPairRegisters$C312_instance;
  function VfpuPairRegisters$C312_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C312_instance;
  }
  var VfpuPairRegisters$C322_instance;
  function VfpuPairRegisters$C322_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C322_instance;
  }
  var VfpuPairRegisters$C332_instance;
  function VfpuPairRegisters$C332_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C332_instance;
  }
  var VfpuPairRegisters$C402_instance;
  function VfpuPairRegisters$C402_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C402_instance;
  }
  var VfpuPairRegisters$C412_instance;
  function VfpuPairRegisters$C412_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C412_instance;
  }
  var VfpuPairRegisters$C422_instance;
  function VfpuPairRegisters$C422_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C422_instance;
  }
  var VfpuPairRegisters$C432_instance;
  function VfpuPairRegisters$C432_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C432_instance;
  }
  var VfpuPairRegisters$C502_instance;
  function VfpuPairRegisters$C502_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C502_instance;
  }
  var VfpuPairRegisters$C512_instance;
  function VfpuPairRegisters$C512_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C512_instance;
  }
  var VfpuPairRegisters$C522_instance;
  function VfpuPairRegisters$C522_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C522_instance;
  }
  var VfpuPairRegisters$C532_instance;
  function VfpuPairRegisters$C532_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C532_instance;
  }
  var VfpuPairRegisters$C602_instance;
  function VfpuPairRegisters$C602_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C602_instance;
  }
  var VfpuPairRegisters$C612_instance;
  function VfpuPairRegisters$C612_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C612_instance;
  }
  var VfpuPairRegisters$C622_instance;
  function VfpuPairRegisters$C622_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C622_instance;
  }
  var VfpuPairRegisters$C632_instance;
  function VfpuPairRegisters$C632_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C632_instance;
  }
  var VfpuPairRegisters$C702_instance;
  function VfpuPairRegisters$C702_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C702_instance;
  }
  var VfpuPairRegisters$C712_instance;
  function VfpuPairRegisters$C712_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C712_instance;
  }
  var VfpuPairRegisters$C722_instance;
  function VfpuPairRegisters$C722_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C722_instance;
  }
  var VfpuPairRegisters$C732_instance;
  function VfpuPairRegisters$C732_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$C732_instance;
  }
  var VfpuPairRegisters$R020_instance;
  function VfpuPairRegisters$R020_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R020_instance;
  }
  var VfpuPairRegisters$R021_instance;
  function VfpuPairRegisters$R021_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R021_instance;
  }
  var VfpuPairRegisters$R022_instance;
  function VfpuPairRegisters$R022_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R022_instance;
  }
  var VfpuPairRegisters$R023_instance;
  function VfpuPairRegisters$R023_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R023_instance;
  }
  var VfpuPairRegisters$R120_instance;
  function VfpuPairRegisters$R120_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R120_instance;
  }
  var VfpuPairRegisters$R121_instance;
  function VfpuPairRegisters$R121_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R121_instance;
  }
  var VfpuPairRegisters$R122_instance;
  function VfpuPairRegisters$R122_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R122_instance;
  }
  var VfpuPairRegisters$R123_instance;
  function VfpuPairRegisters$R123_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R123_instance;
  }
  var VfpuPairRegisters$R220_instance;
  function VfpuPairRegisters$R220_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R220_instance;
  }
  var VfpuPairRegisters$R221_instance;
  function VfpuPairRegisters$R221_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R221_instance;
  }
  var VfpuPairRegisters$R222_instance;
  function VfpuPairRegisters$R222_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R222_instance;
  }
  var VfpuPairRegisters$R223_instance;
  function VfpuPairRegisters$R223_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R223_instance;
  }
  var VfpuPairRegisters$R320_instance;
  function VfpuPairRegisters$R320_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R320_instance;
  }
  var VfpuPairRegisters$R321_instance;
  function VfpuPairRegisters$R321_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R321_instance;
  }
  var VfpuPairRegisters$R322_instance;
  function VfpuPairRegisters$R322_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R322_instance;
  }
  var VfpuPairRegisters$R323_instance;
  function VfpuPairRegisters$R323_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R323_instance;
  }
  var VfpuPairRegisters$R420_instance;
  function VfpuPairRegisters$R420_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R420_instance;
  }
  var VfpuPairRegisters$R421_instance;
  function VfpuPairRegisters$R421_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R421_instance;
  }
  var VfpuPairRegisters$R422_instance;
  function VfpuPairRegisters$R422_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R422_instance;
  }
  var VfpuPairRegisters$R423_instance;
  function VfpuPairRegisters$R423_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R423_instance;
  }
  var VfpuPairRegisters$R520_instance;
  function VfpuPairRegisters$R520_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R520_instance;
  }
  var VfpuPairRegisters$R521_instance;
  function VfpuPairRegisters$R521_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R521_instance;
  }
  var VfpuPairRegisters$R522_instance;
  function VfpuPairRegisters$R522_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R522_instance;
  }
  var VfpuPairRegisters$R523_instance;
  function VfpuPairRegisters$R523_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R523_instance;
  }
  var VfpuPairRegisters$R620_instance;
  function VfpuPairRegisters$R620_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R620_instance;
  }
  var VfpuPairRegisters$R621_instance;
  function VfpuPairRegisters$R621_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R621_instance;
  }
  var VfpuPairRegisters$R622_instance;
  function VfpuPairRegisters$R622_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R622_instance;
  }
  var VfpuPairRegisters$R623_instance;
  function VfpuPairRegisters$R623_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R623_instance;
  }
  var VfpuPairRegisters$R720_instance;
  function VfpuPairRegisters$R720_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R720_instance;
  }
  var VfpuPairRegisters$R721_instance;
  function VfpuPairRegisters$R721_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R721_instance;
  }
  var VfpuPairRegisters$R722_instance;
  function VfpuPairRegisters$R722_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R722_instance;
  }
  var VfpuPairRegisters$R723_instance;
  function VfpuPairRegisters$R723_getInstance() {
    VfpuPairRegisters_initFields();
    return VfpuPairRegisters$R723_instance;
  }
  function VfpuPairRegisters$Companion() {
    VfpuPairRegisters$Companion_instance = this;
    this.values = VfpuPairRegisters$values();
  }
  VfpuPairRegisters$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var VfpuPairRegisters$Companion_instance = null;
  function VfpuPairRegisters$Companion_getInstance() {
    VfpuPairRegisters_initFields();
    if (VfpuPairRegisters$Companion_instance === null) {
      new VfpuPairRegisters$Companion();
    }
    return VfpuPairRegisters$Companion_instance;
  }
  VfpuPairRegisters.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VfpuPairRegisters',
    interfaces: [Enum]
  };
  function VfpuPairRegisters$values() {
    return [VfpuPairRegisters$C000_getInstance(), VfpuPairRegisters$C010_getInstance(), VfpuPairRegisters$C020_getInstance(), VfpuPairRegisters$C030_getInstance(), VfpuPairRegisters$C100_getInstance(), VfpuPairRegisters$C110_getInstance(), VfpuPairRegisters$C120_getInstance(), VfpuPairRegisters$C130_getInstance(), VfpuPairRegisters$C200_getInstance(), VfpuPairRegisters$C210_getInstance(), VfpuPairRegisters$C220_getInstance(), VfpuPairRegisters$C230_getInstance(), VfpuPairRegisters$C300_getInstance(), VfpuPairRegisters$C310_getInstance(), VfpuPairRegisters$C320_getInstance(), VfpuPairRegisters$C330_getInstance(), VfpuPairRegisters$C400_getInstance(), VfpuPairRegisters$C410_getInstance(), VfpuPairRegisters$C420_getInstance(), VfpuPairRegisters$C430_getInstance(), VfpuPairRegisters$C500_getInstance(), VfpuPairRegisters$C510_getInstance(), VfpuPairRegisters$C520_getInstance(), VfpuPairRegisters$C530_getInstance(), VfpuPairRegisters$C600_getInstance(), VfpuPairRegisters$C610_getInstance(), VfpuPairRegisters$C620_getInstance(), VfpuPairRegisters$C630_getInstance(), VfpuPairRegisters$C700_getInstance(), VfpuPairRegisters$C710_getInstance(), VfpuPairRegisters$C720_getInstance(), VfpuPairRegisters$C730_getInstance(), VfpuPairRegisters$R000_getInstance(), VfpuPairRegisters$R001_getInstance(), VfpuPairRegisters$R002_getInstance(), VfpuPairRegisters$R003_getInstance(), VfpuPairRegisters$R100_getInstance(), VfpuPairRegisters$R101_getInstance(), VfpuPairRegisters$R102_getInstance(), VfpuPairRegisters$R103_getInstance(), VfpuPairRegisters$R200_getInstance(), VfpuPairRegisters$R201_getInstance(), VfpuPairRegisters$R202_getInstance(), VfpuPairRegisters$R203_getInstance(), VfpuPairRegisters$R300_getInstance(), VfpuPairRegisters$R301_getInstance(), VfpuPairRegisters$R302_getInstance(), VfpuPairRegisters$R303_getInstance(), VfpuPairRegisters$R400_getInstance(), VfpuPairRegisters$R401_getInstance(), VfpuPairRegisters$R402_getInstance(), VfpuPairRegisters$R403_getInstance(), VfpuPairRegisters$R500_getInstance(), VfpuPairRegisters$R501_getInstance(), VfpuPairRegisters$R502_getInstance(), VfpuPairRegisters$R503_getInstance(), VfpuPairRegisters$R600_getInstance(), VfpuPairRegisters$R601_getInstance(), VfpuPairRegisters$R602_getInstance(), VfpuPairRegisters$R603_getInstance(), VfpuPairRegisters$R700_getInstance(), VfpuPairRegisters$R701_getInstance(), VfpuPairRegisters$R702_getInstance(), VfpuPairRegisters$R703_getInstance(), VfpuPairRegisters$C002_getInstance(), VfpuPairRegisters$C012_getInstance(), VfpuPairRegisters$C022_getInstance(), VfpuPairRegisters$C032_getInstance(), VfpuPairRegisters$C102_getInstance(), VfpuPairRegisters$C112_getInstance(), VfpuPairRegisters$C122_getInstance(), VfpuPairRegisters$C132_getInstance(), VfpuPairRegisters$C202_getInstance(), VfpuPairRegisters$C212_getInstance(), VfpuPairRegisters$C222_getInstance(), VfpuPairRegisters$C232_getInstance(), VfpuPairRegisters$C302_getInstance(), VfpuPairRegisters$C312_getInstance(), VfpuPairRegisters$C322_getInstance(), VfpuPairRegisters$C332_getInstance(), VfpuPairRegisters$C402_getInstance(), VfpuPairRegisters$C412_getInstance(), VfpuPairRegisters$C422_getInstance(), VfpuPairRegisters$C432_getInstance(), VfpuPairRegisters$C502_getInstance(), VfpuPairRegisters$C512_getInstance(), VfpuPairRegisters$C522_getInstance(), VfpuPairRegisters$C532_getInstance(), VfpuPairRegisters$C602_getInstance(), VfpuPairRegisters$C612_getInstance(), VfpuPairRegisters$C622_getInstance(), VfpuPairRegisters$C632_getInstance(), VfpuPairRegisters$C702_getInstance(), VfpuPairRegisters$C712_getInstance(), VfpuPairRegisters$C722_getInstance(), VfpuPairRegisters$C732_getInstance(), VfpuPairRegisters$R020_getInstance(), VfpuPairRegisters$R021_getInstance(), VfpuPairRegisters$R022_getInstance(), VfpuPairRegisters$R023_getInstance(), VfpuPairRegisters$R120_getInstance(), VfpuPairRegisters$R121_getInstance(), VfpuPairRegisters$R122_getInstance(), VfpuPairRegisters$R123_getInstance(), VfpuPairRegisters$R220_getInstance(), VfpuPairRegisters$R221_getInstance(), VfpuPairRegisters$R222_getInstance(), VfpuPairRegisters$R223_getInstance(), VfpuPairRegisters$R320_getInstance(), VfpuPairRegisters$R321_getInstance(), VfpuPairRegisters$R322_getInstance(), VfpuPairRegisters$R323_getInstance(), VfpuPairRegisters$R420_getInstance(), VfpuPairRegisters$R421_getInstance(), VfpuPairRegisters$R422_getInstance(), VfpuPairRegisters$R423_getInstance(), VfpuPairRegisters$R520_getInstance(), VfpuPairRegisters$R521_getInstance(), VfpuPairRegisters$R522_getInstance(), VfpuPairRegisters$R523_getInstance(), VfpuPairRegisters$R620_getInstance(), VfpuPairRegisters$R621_getInstance(), VfpuPairRegisters$R622_getInstance(), VfpuPairRegisters$R623_getInstance(), VfpuPairRegisters$R720_getInstance(), VfpuPairRegisters$R721_getInstance(), VfpuPairRegisters$R722_getInstance(), VfpuPairRegisters$R723_getInstance()];
  }
  VfpuPairRegisters.values = VfpuPairRegisters$values;
  function VfpuPairRegisters$valueOf(name) {
    switch (name) {
      case 'C000':
        return VfpuPairRegisters$C000_getInstance();
      case 'C010':
        return VfpuPairRegisters$C010_getInstance();
      case 'C020':
        return VfpuPairRegisters$C020_getInstance();
      case 'C030':
        return VfpuPairRegisters$C030_getInstance();
      case 'C100':
        return VfpuPairRegisters$C100_getInstance();
      case 'C110':
        return VfpuPairRegisters$C110_getInstance();
      case 'C120':
        return VfpuPairRegisters$C120_getInstance();
      case 'C130':
        return VfpuPairRegisters$C130_getInstance();
      case 'C200':
        return VfpuPairRegisters$C200_getInstance();
      case 'C210':
        return VfpuPairRegisters$C210_getInstance();
      case 'C220':
        return VfpuPairRegisters$C220_getInstance();
      case 'C230':
        return VfpuPairRegisters$C230_getInstance();
      case 'C300':
        return VfpuPairRegisters$C300_getInstance();
      case 'C310':
        return VfpuPairRegisters$C310_getInstance();
      case 'C320':
        return VfpuPairRegisters$C320_getInstance();
      case 'C330':
        return VfpuPairRegisters$C330_getInstance();
      case 'C400':
        return VfpuPairRegisters$C400_getInstance();
      case 'C410':
        return VfpuPairRegisters$C410_getInstance();
      case 'C420':
        return VfpuPairRegisters$C420_getInstance();
      case 'C430':
        return VfpuPairRegisters$C430_getInstance();
      case 'C500':
        return VfpuPairRegisters$C500_getInstance();
      case 'C510':
        return VfpuPairRegisters$C510_getInstance();
      case 'C520':
        return VfpuPairRegisters$C520_getInstance();
      case 'C530':
        return VfpuPairRegisters$C530_getInstance();
      case 'C600':
        return VfpuPairRegisters$C600_getInstance();
      case 'C610':
        return VfpuPairRegisters$C610_getInstance();
      case 'C620':
        return VfpuPairRegisters$C620_getInstance();
      case 'C630':
        return VfpuPairRegisters$C630_getInstance();
      case 'C700':
        return VfpuPairRegisters$C700_getInstance();
      case 'C710':
        return VfpuPairRegisters$C710_getInstance();
      case 'C720':
        return VfpuPairRegisters$C720_getInstance();
      case 'C730':
        return VfpuPairRegisters$C730_getInstance();
      case 'R000':
        return VfpuPairRegisters$R000_getInstance();
      case 'R001':
        return VfpuPairRegisters$R001_getInstance();
      case 'R002':
        return VfpuPairRegisters$R002_getInstance();
      case 'R003':
        return VfpuPairRegisters$R003_getInstance();
      case 'R100':
        return VfpuPairRegisters$R100_getInstance();
      case 'R101':
        return VfpuPairRegisters$R101_getInstance();
      case 'R102':
        return VfpuPairRegisters$R102_getInstance();
      case 'R103':
        return VfpuPairRegisters$R103_getInstance();
      case 'R200':
        return VfpuPairRegisters$R200_getInstance();
      case 'R201':
        return VfpuPairRegisters$R201_getInstance();
      case 'R202':
        return VfpuPairRegisters$R202_getInstance();
      case 'R203':
        return VfpuPairRegisters$R203_getInstance();
      case 'R300':
        return VfpuPairRegisters$R300_getInstance();
      case 'R301':
        return VfpuPairRegisters$R301_getInstance();
      case 'R302':
        return VfpuPairRegisters$R302_getInstance();
      case 'R303':
        return VfpuPairRegisters$R303_getInstance();
      case 'R400':
        return VfpuPairRegisters$R400_getInstance();
      case 'R401':
        return VfpuPairRegisters$R401_getInstance();
      case 'R402':
        return VfpuPairRegisters$R402_getInstance();
      case 'R403':
        return VfpuPairRegisters$R403_getInstance();
      case 'R500':
        return VfpuPairRegisters$R500_getInstance();
      case 'R501':
        return VfpuPairRegisters$R501_getInstance();
      case 'R502':
        return VfpuPairRegisters$R502_getInstance();
      case 'R503':
        return VfpuPairRegisters$R503_getInstance();
      case 'R600':
        return VfpuPairRegisters$R600_getInstance();
      case 'R601':
        return VfpuPairRegisters$R601_getInstance();
      case 'R602':
        return VfpuPairRegisters$R602_getInstance();
      case 'R603':
        return VfpuPairRegisters$R603_getInstance();
      case 'R700':
        return VfpuPairRegisters$R700_getInstance();
      case 'R701':
        return VfpuPairRegisters$R701_getInstance();
      case 'R702':
        return VfpuPairRegisters$R702_getInstance();
      case 'R703':
        return VfpuPairRegisters$R703_getInstance();
      case 'C002':
        return VfpuPairRegisters$C002_getInstance();
      case 'C012':
        return VfpuPairRegisters$C012_getInstance();
      case 'C022':
        return VfpuPairRegisters$C022_getInstance();
      case 'C032':
        return VfpuPairRegisters$C032_getInstance();
      case 'C102':
        return VfpuPairRegisters$C102_getInstance();
      case 'C112':
        return VfpuPairRegisters$C112_getInstance();
      case 'C122':
        return VfpuPairRegisters$C122_getInstance();
      case 'C132':
        return VfpuPairRegisters$C132_getInstance();
      case 'C202':
        return VfpuPairRegisters$C202_getInstance();
      case 'C212':
        return VfpuPairRegisters$C212_getInstance();
      case 'C222':
        return VfpuPairRegisters$C222_getInstance();
      case 'C232':
        return VfpuPairRegisters$C232_getInstance();
      case 'C302':
        return VfpuPairRegisters$C302_getInstance();
      case 'C312':
        return VfpuPairRegisters$C312_getInstance();
      case 'C322':
        return VfpuPairRegisters$C322_getInstance();
      case 'C332':
        return VfpuPairRegisters$C332_getInstance();
      case 'C402':
        return VfpuPairRegisters$C402_getInstance();
      case 'C412':
        return VfpuPairRegisters$C412_getInstance();
      case 'C422':
        return VfpuPairRegisters$C422_getInstance();
      case 'C432':
        return VfpuPairRegisters$C432_getInstance();
      case 'C502':
        return VfpuPairRegisters$C502_getInstance();
      case 'C512':
        return VfpuPairRegisters$C512_getInstance();
      case 'C522':
        return VfpuPairRegisters$C522_getInstance();
      case 'C532':
        return VfpuPairRegisters$C532_getInstance();
      case 'C602':
        return VfpuPairRegisters$C602_getInstance();
      case 'C612':
        return VfpuPairRegisters$C612_getInstance();
      case 'C622':
        return VfpuPairRegisters$C622_getInstance();
      case 'C632':
        return VfpuPairRegisters$C632_getInstance();
      case 'C702':
        return VfpuPairRegisters$C702_getInstance();
      case 'C712':
        return VfpuPairRegisters$C712_getInstance();
      case 'C722':
        return VfpuPairRegisters$C722_getInstance();
      case 'C732':
        return VfpuPairRegisters$C732_getInstance();
      case 'R020':
        return VfpuPairRegisters$R020_getInstance();
      case 'R021':
        return VfpuPairRegisters$R021_getInstance();
      case 'R022':
        return VfpuPairRegisters$R022_getInstance();
      case 'R023':
        return VfpuPairRegisters$R023_getInstance();
      case 'R120':
        return VfpuPairRegisters$R120_getInstance();
      case 'R121':
        return VfpuPairRegisters$R121_getInstance();
      case 'R122':
        return VfpuPairRegisters$R122_getInstance();
      case 'R123':
        return VfpuPairRegisters$R123_getInstance();
      case 'R220':
        return VfpuPairRegisters$R220_getInstance();
      case 'R221':
        return VfpuPairRegisters$R221_getInstance();
      case 'R222':
        return VfpuPairRegisters$R222_getInstance();
      case 'R223':
        return VfpuPairRegisters$R223_getInstance();
      case 'R320':
        return VfpuPairRegisters$R320_getInstance();
      case 'R321':
        return VfpuPairRegisters$R321_getInstance();
      case 'R322':
        return VfpuPairRegisters$R322_getInstance();
      case 'R323':
        return VfpuPairRegisters$R323_getInstance();
      case 'R420':
        return VfpuPairRegisters$R420_getInstance();
      case 'R421':
        return VfpuPairRegisters$R421_getInstance();
      case 'R422':
        return VfpuPairRegisters$R422_getInstance();
      case 'R423':
        return VfpuPairRegisters$R423_getInstance();
      case 'R520':
        return VfpuPairRegisters$R520_getInstance();
      case 'R521':
        return VfpuPairRegisters$R521_getInstance();
      case 'R522':
        return VfpuPairRegisters$R522_getInstance();
      case 'R523':
        return VfpuPairRegisters$R523_getInstance();
      case 'R620':
        return VfpuPairRegisters$R620_getInstance();
      case 'R621':
        return VfpuPairRegisters$R621_getInstance();
      case 'R622':
        return VfpuPairRegisters$R622_getInstance();
      case 'R623':
        return VfpuPairRegisters$R623_getInstance();
      case 'R720':
        return VfpuPairRegisters$R720_getInstance();
      case 'R721':
        return VfpuPairRegisters$R721_getInstance();
      case 'R722':
        return VfpuPairRegisters$R722_getInstance();
      case 'R723':
        return VfpuPairRegisters$R723_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.cpu.VfpuPairRegisters.' + name);
    }
  }
  VfpuPairRegisters.valueOf_61zpoe$ = VfpuPairRegisters$valueOf;
  function VfpuTripletRegisters(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function VfpuTripletRegisters_initFields() {
    VfpuTripletRegisters_initFields = function () {
    };
    VfpuTripletRegisters$C000_instance = new VfpuTripletRegisters('C000', 0);
    VfpuTripletRegisters$C010_instance = new VfpuTripletRegisters('C010', 1);
    VfpuTripletRegisters$C020_instance = new VfpuTripletRegisters('C020', 2);
    VfpuTripletRegisters$C030_instance = new VfpuTripletRegisters('C030', 3);
    VfpuTripletRegisters$C100_instance = new VfpuTripletRegisters('C100', 4);
    VfpuTripletRegisters$C110_instance = new VfpuTripletRegisters('C110', 5);
    VfpuTripletRegisters$C120_instance = new VfpuTripletRegisters('C120', 6);
    VfpuTripletRegisters$C130_instance = new VfpuTripletRegisters('C130', 7);
    VfpuTripletRegisters$C200_instance = new VfpuTripletRegisters('C200', 8);
    VfpuTripletRegisters$C210_instance = new VfpuTripletRegisters('C210', 9);
    VfpuTripletRegisters$C220_instance = new VfpuTripletRegisters('C220', 10);
    VfpuTripletRegisters$C230_instance = new VfpuTripletRegisters('C230', 11);
    VfpuTripletRegisters$C300_instance = new VfpuTripletRegisters('C300', 12);
    VfpuTripletRegisters$C310_instance = new VfpuTripletRegisters('C310', 13);
    VfpuTripletRegisters$C320_instance = new VfpuTripletRegisters('C320', 14);
    VfpuTripletRegisters$C330_instance = new VfpuTripletRegisters('C330', 15);
    VfpuTripletRegisters$C400_instance = new VfpuTripletRegisters('C400', 16);
    VfpuTripletRegisters$C410_instance = new VfpuTripletRegisters('C410', 17);
    VfpuTripletRegisters$C420_instance = new VfpuTripletRegisters('C420', 18);
    VfpuTripletRegisters$C430_instance = new VfpuTripletRegisters('C430', 19);
    VfpuTripletRegisters$C500_instance = new VfpuTripletRegisters('C500', 20);
    VfpuTripletRegisters$C510_instance = new VfpuTripletRegisters('C510', 21);
    VfpuTripletRegisters$C520_instance = new VfpuTripletRegisters('C520', 22);
    VfpuTripletRegisters$C530_instance = new VfpuTripletRegisters('C530', 23);
    VfpuTripletRegisters$C600_instance = new VfpuTripletRegisters('C600', 24);
    VfpuTripletRegisters$C610_instance = new VfpuTripletRegisters('C610', 25);
    VfpuTripletRegisters$C620_instance = new VfpuTripletRegisters('C620', 26);
    VfpuTripletRegisters$C630_instance = new VfpuTripletRegisters('C630', 27);
    VfpuTripletRegisters$C700_instance = new VfpuTripletRegisters('C700', 28);
    VfpuTripletRegisters$C710_instance = new VfpuTripletRegisters('C710', 29);
    VfpuTripletRegisters$C720_instance = new VfpuTripletRegisters('C720', 30);
    VfpuTripletRegisters$C730_instance = new VfpuTripletRegisters('C730', 31);
    VfpuTripletRegisters$R000_instance = new VfpuTripletRegisters('R000', 32);
    VfpuTripletRegisters$R001_instance = new VfpuTripletRegisters('R001', 33);
    VfpuTripletRegisters$R002_instance = new VfpuTripletRegisters('R002', 34);
    VfpuTripletRegisters$R003_instance = new VfpuTripletRegisters('R003', 35);
    VfpuTripletRegisters$R100_instance = new VfpuTripletRegisters('R100', 36);
    VfpuTripletRegisters$R101_instance = new VfpuTripletRegisters('R101', 37);
    VfpuTripletRegisters$R102_instance = new VfpuTripletRegisters('R102', 38);
    VfpuTripletRegisters$R103_instance = new VfpuTripletRegisters('R103', 39);
    VfpuTripletRegisters$R200_instance = new VfpuTripletRegisters('R200', 40);
    VfpuTripletRegisters$R201_instance = new VfpuTripletRegisters('R201', 41);
    VfpuTripletRegisters$R202_instance = new VfpuTripletRegisters('R202', 42);
    VfpuTripletRegisters$R203_instance = new VfpuTripletRegisters('R203', 43);
    VfpuTripletRegisters$R300_instance = new VfpuTripletRegisters('R300', 44);
    VfpuTripletRegisters$R301_instance = new VfpuTripletRegisters('R301', 45);
    VfpuTripletRegisters$R302_instance = new VfpuTripletRegisters('R302', 46);
    VfpuTripletRegisters$R303_instance = new VfpuTripletRegisters('R303', 47);
    VfpuTripletRegisters$R400_instance = new VfpuTripletRegisters('R400', 48);
    VfpuTripletRegisters$R401_instance = new VfpuTripletRegisters('R401', 49);
    VfpuTripletRegisters$R402_instance = new VfpuTripletRegisters('R402', 50);
    VfpuTripletRegisters$R403_instance = new VfpuTripletRegisters('R403', 51);
    VfpuTripletRegisters$R500_instance = new VfpuTripletRegisters('R500', 52);
    VfpuTripletRegisters$R501_instance = new VfpuTripletRegisters('R501', 53);
    VfpuTripletRegisters$R502_instance = new VfpuTripletRegisters('R502', 54);
    VfpuTripletRegisters$R503_instance = new VfpuTripletRegisters('R503', 55);
    VfpuTripletRegisters$R600_instance = new VfpuTripletRegisters('R600', 56);
    VfpuTripletRegisters$R601_instance = new VfpuTripletRegisters('R601', 57);
    VfpuTripletRegisters$R602_instance = new VfpuTripletRegisters('R602', 58);
    VfpuTripletRegisters$R603_instance = new VfpuTripletRegisters('R603', 59);
    VfpuTripletRegisters$R700_instance = new VfpuTripletRegisters('R700', 60);
    VfpuTripletRegisters$R701_instance = new VfpuTripletRegisters('R701', 61);
    VfpuTripletRegisters$R702_instance = new VfpuTripletRegisters('R702', 62);
    VfpuTripletRegisters$R703_instance = new VfpuTripletRegisters('R703', 63);
    VfpuTripletRegisters$C001_instance = new VfpuTripletRegisters('C001', 64);
    VfpuTripletRegisters$C011_instance = new VfpuTripletRegisters('C011', 65);
    VfpuTripletRegisters$C021_instance = new VfpuTripletRegisters('C021', 66);
    VfpuTripletRegisters$C031_instance = new VfpuTripletRegisters('C031', 67);
    VfpuTripletRegisters$C101_instance = new VfpuTripletRegisters('C101', 68);
    VfpuTripletRegisters$C111_instance = new VfpuTripletRegisters('C111', 69);
    VfpuTripletRegisters$C121_instance = new VfpuTripletRegisters('C121', 70);
    VfpuTripletRegisters$C131_instance = new VfpuTripletRegisters('C131', 71);
    VfpuTripletRegisters$C201_instance = new VfpuTripletRegisters('C201', 72);
    VfpuTripletRegisters$C211_instance = new VfpuTripletRegisters('C211', 73);
    VfpuTripletRegisters$C221_instance = new VfpuTripletRegisters('C221', 74);
    VfpuTripletRegisters$C231_instance = new VfpuTripletRegisters('C231', 75);
    VfpuTripletRegisters$C301_instance = new VfpuTripletRegisters('C301', 76);
    VfpuTripletRegisters$C311_instance = new VfpuTripletRegisters('C311', 77);
    VfpuTripletRegisters$C321_instance = new VfpuTripletRegisters('C321', 78);
    VfpuTripletRegisters$C331_instance = new VfpuTripletRegisters('C331', 79);
    VfpuTripletRegisters$C401_instance = new VfpuTripletRegisters('C401', 80);
    VfpuTripletRegisters$C411_instance = new VfpuTripletRegisters('C411', 81);
    VfpuTripletRegisters$C421_instance = new VfpuTripletRegisters('C421', 82);
    VfpuTripletRegisters$C431_instance = new VfpuTripletRegisters('C431', 83);
    VfpuTripletRegisters$C501_instance = new VfpuTripletRegisters('C501', 84);
    VfpuTripletRegisters$C511_instance = new VfpuTripletRegisters('C511', 85);
    VfpuTripletRegisters$C521_instance = new VfpuTripletRegisters('C521', 86);
    VfpuTripletRegisters$C531_instance = new VfpuTripletRegisters('C531', 87);
    VfpuTripletRegisters$C601_instance = new VfpuTripletRegisters('C601', 88);
    VfpuTripletRegisters$C611_instance = new VfpuTripletRegisters('C611', 89);
    VfpuTripletRegisters$C621_instance = new VfpuTripletRegisters('C621', 90);
    VfpuTripletRegisters$C631_instance = new VfpuTripletRegisters('C631', 91);
    VfpuTripletRegisters$C701_instance = new VfpuTripletRegisters('C701', 92);
    VfpuTripletRegisters$C711_instance = new VfpuTripletRegisters('C711', 93);
    VfpuTripletRegisters$C721_instance = new VfpuTripletRegisters('C721', 94);
    VfpuTripletRegisters$C731_instance = new VfpuTripletRegisters('C731', 95);
    VfpuTripletRegisters$R010_instance = new VfpuTripletRegisters('R010', 96);
    VfpuTripletRegisters$R011_instance = new VfpuTripletRegisters('R011', 97);
    VfpuTripletRegisters$R012_instance = new VfpuTripletRegisters('R012', 98);
    VfpuTripletRegisters$R013_instance = new VfpuTripletRegisters('R013', 99);
    VfpuTripletRegisters$R110_instance = new VfpuTripletRegisters('R110', 100);
    VfpuTripletRegisters$R111_instance = new VfpuTripletRegisters('R111', 101);
    VfpuTripletRegisters$R112_instance = new VfpuTripletRegisters('R112', 102);
    VfpuTripletRegisters$R113_instance = new VfpuTripletRegisters('R113', 103);
    VfpuTripletRegisters$R210_instance = new VfpuTripletRegisters('R210', 104);
    VfpuTripletRegisters$R211_instance = new VfpuTripletRegisters('R211', 105);
    VfpuTripletRegisters$R212_instance = new VfpuTripletRegisters('R212', 106);
    VfpuTripletRegisters$R213_instance = new VfpuTripletRegisters('R213', 107);
    VfpuTripletRegisters$R310_instance = new VfpuTripletRegisters('R310', 108);
    VfpuTripletRegisters$R311_instance = new VfpuTripletRegisters('R311', 109);
    VfpuTripletRegisters$R312_instance = new VfpuTripletRegisters('R312', 110);
    VfpuTripletRegisters$R313_instance = new VfpuTripletRegisters('R313', 111);
    VfpuTripletRegisters$R410_instance = new VfpuTripletRegisters('R410', 112);
    VfpuTripletRegisters$R411_instance = new VfpuTripletRegisters('R411', 113);
    VfpuTripletRegisters$R412_instance = new VfpuTripletRegisters('R412', 114);
    VfpuTripletRegisters$R413_instance = new VfpuTripletRegisters('R413', 115);
    VfpuTripletRegisters$R510_instance = new VfpuTripletRegisters('R510', 116);
    VfpuTripletRegisters$R511_instance = new VfpuTripletRegisters('R511', 117);
    VfpuTripletRegisters$R512_instance = new VfpuTripletRegisters('R512', 118);
    VfpuTripletRegisters$R513_instance = new VfpuTripletRegisters('R513', 119);
    VfpuTripletRegisters$R610_instance = new VfpuTripletRegisters('R610', 120);
    VfpuTripletRegisters$R611_instance = new VfpuTripletRegisters('R611', 121);
    VfpuTripletRegisters$R612_instance = new VfpuTripletRegisters('R612', 122);
    VfpuTripletRegisters$R613_instance = new VfpuTripletRegisters('R613', 123);
    VfpuTripletRegisters$R710_instance = new VfpuTripletRegisters('R710', 124);
    VfpuTripletRegisters$R711_instance = new VfpuTripletRegisters('R711', 125);
    VfpuTripletRegisters$R712_instance = new VfpuTripletRegisters('R712', 126);
    VfpuTripletRegisters$R713_instance = new VfpuTripletRegisters('R713', 127);
    VfpuTripletRegisters$Companion_getInstance();
  }
  var VfpuTripletRegisters$C000_instance;
  function VfpuTripletRegisters$C000_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C000_instance;
  }
  var VfpuTripletRegisters$C010_instance;
  function VfpuTripletRegisters$C010_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C010_instance;
  }
  var VfpuTripletRegisters$C020_instance;
  function VfpuTripletRegisters$C020_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C020_instance;
  }
  var VfpuTripletRegisters$C030_instance;
  function VfpuTripletRegisters$C030_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C030_instance;
  }
  var VfpuTripletRegisters$C100_instance;
  function VfpuTripletRegisters$C100_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C100_instance;
  }
  var VfpuTripletRegisters$C110_instance;
  function VfpuTripletRegisters$C110_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C110_instance;
  }
  var VfpuTripletRegisters$C120_instance;
  function VfpuTripletRegisters$C120_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C120_instance;
  }
  var VfpuTripletRegisters$C130_instance;
  function VfpuTripletRegisters$C130_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C130_instance;
  }
  var VfpuTripletRegisters$C200_instance;
  function VfpuTripletRegisters$C200_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C200_instance;
  }
  var VfpuTripletRegisters$C210_instance;
  function VfpuTripletRegisters$C210_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C210_instance;
  }
  var VfpuTripletRegisters$C220_instance;
  function VfpuTripletRegisters$C220_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C220_instance;
  }
  var VfpuTripletRegisters$C230_instance;
  function VfpuTripletRegisters$C230_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C230_instance;
  }
  var VfpuTripletRegisters$C300_instance;
  function VfpuTripletRegisters$C300_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C300_instance;
  }
  var VfpuTripletRegisters$C310_instance;
  function VfpuTripletRegisters$C310_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C310_instance;
  }
  var VfpuTripletRegisters$C320_instance;
  function VfpuTripletRegisters$C320_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C320_instance;
  }
  var VfpuTripletRegisters$C330_instance;
  function VfpuTripletRegisters$C330_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C330_instance;
  }
  var VfpuTripletRegisters$C400_instance;
  function VfpuTripletRegisters$C400_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C400_instance;
  }
  var VfpuTripletRegisters$C410_instance;
  function VfpuTripletRegisters$C410_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C410_instance;
  }
  var VfpuTripletRegisters$C420_instance;
  function VfpuTripletRegisters$C420_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C420_instance;
  }
  var VfpuTripletRegisters$C430_instance;
  function VfpuTripletRegisters$C430_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C430_instance;
  }
  var VfpuTripletRegisters$C500_instance;
  function VfpuTripletRegisters$C500_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C500_instance;
  }
  var VfpuTripletRegisters$C510_instance;
  function VfpuTripletRegisters$C510_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C510_instance;
  }
  var VfpuTripletRegisters$C520_instance;
  function VfpuTripletRegisters$C520_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C520_instance;
  }
  var VfpuTripletRegisters$C530_instance;
  function VfpuTripletRegisters$C530_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C530_instance;
  }
  var VfpuTripletRegisters$C600_instance;
  function VfpuTripletRegisters$C600_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C600_instance;
  }
  var VfpuTripletRegisters$C610_instance;
  function VfpuTripletRegisters$C610_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C610_instance;
  }
  var VfpuTripletRegisters$C620_instance;
  function VfpuTripletRegisters$C620_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C620_instance;
  }
  var VfpuTripletRegisters$C630_instance;
  function VfpuTripletRegisters$C630_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C630_instance;
  }
  var VfpuTripletRegisters$C700_instance;
  function VfpuTripletRegisters$C700_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C700_instance;
  }
  var VfpuTripletRegisters$C710_instance;
  function VfpuTripletRegisters$C710_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C710_instance;
  }
  var VfpuTripletRegisters$C720_instance;
  function VfpuTripletRegisters$C720_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C720_instance;
  }
  var VfpuTripletRegisters$C730_instance;
  function VfpuTripletRegisters$C730_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C730_instance;
  }
  var VfpuTripletRegisters$R000_instance;
  function VfpuTripletRegisters$R000_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R000_instance;
  }
  var VfpuTripletRegisters$R001_instance;
  function VfpuTripletRegisters$R001_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R001_instance;
  }
  var VfpuTripletRegisters$R002_instance;
  function VfpuTripletRegisters$R002_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R002_instance;
  }
  var VfpuTripletRegisters$R003_instance;
  function VfpuTripletRegisters$R003_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R003_instance;
  }
  var VfpuTripletRegisters$R100_instance;
  function VfpuTripletRegisters$R100_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R100_instance;
  }
  var VfpuTripletRegisters$R101_instance;
  function VfpuTripletRegisters$R101_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R101_instance;
  }
  var VfpuTripletRegisters$R102_instance;
  function VfpuTripletRegisters$R102_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R102_instance;
  }
  var VfpuTripletRegisters$R103_instance;
  function VfpuTripletRegisters$R103_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R103_instance;
  }
  var VfpuTripletRegisters$R200_instance;
  function VfpuTripletRegisters$R200_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R200_instance;
  }
  var VfpuTripletRegisters$R201_instance;
  function VfpuTripletRegisters$R201_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R201_instance;
  }
  var VfpuTripletRegisters$R202_instance;
  function VfpuTripletRegisters$R202_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R202_instance;
  }
  var VfpuTripletRegisters$R203_instance;
  function VfpuTripletRegisters$R203_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R203_instance;
  }
  var VfpuTripletRegisters$R300_instance;
  function VfpuTripletRegisters$R300_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R300_instance;
  }
  var VfpuTripletRegisters$R301_instance;
  function VfpuTripletRegisters$R301_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R301_instance;
  }
  var VfpuTripletRegisters$R302_instance;
  function VfpuTripletRegisters$R302_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R302_instance;
  }
  var VfpuTripletRegisters$R303_instance;
  function VfpuTripletRegisters$R303_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R303_instance;
  }
  var VfpuTripletRegisters$R400_instance;
  function VfpuTripletRegisters$R400_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R400_instance;
  }
  var VfpuTripletRegisters$R401_instance;
  function VfpuTripletRegisters$R401_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R401_instance;
  }
  var VfpuTripletRegisters$R402_instance;
  function VfpuTripletRegisters$R402_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R402_instance;
  }
  var VfpuTripletRegisters$R403_instance;
  function VfpuTripletRegisters$R403_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R403_instance;
  }
  var VfpuTripletRegisters$R500_instance;
  function VfpuTripletRegisters$R500_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R500_instance;
  }
  var VfpuTripletRegisters$R501_instance;
  function VfpuTripletRegisters$R501_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R501_instance;
  }
  var VfpuTripletRegisters$R502_instance;
  function VfpuTripletRegisters$R502_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R502_instance;
  }
  var VfpuTripletRegisters$R503_instance;
  function VfpuTripletRegisters$R503_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R503_instance;
  }
  var VfpuTripletRegisters$R600_instance;
  function VfpuTripletRegisters$R600_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R600_instance;
  }
  var VfpuTripletRegisters$R601_instance;
  function VfpuTripletRegisters$R601_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R601_instance;
  }
  var VfpuTripletRegisters$R602_instance;
  function VfpuTripletRegisters$R602_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R602_instance;
  }
  var VfpuTripletRegisters$R603_instance;
  function VfpuTripletRegisters$R603_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R603_instance;
  }
  var VfpuTripletRegisters$R700_instance;
  function VfpuTripletRegisters$R700_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R700_instance;
  }
  var VfpuTripletRegisters$R701_instance;
  function VfpuTripletRegisters$R701_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R701_instance;
  }
  var VfpuTripletRegisters$R702_instance;
  function VfpuTripletRegisters$R702_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R702_instance;
  }
  var VfpuTripletRegisters$R703_instance;
  function VfpuTripletRegisters$R703_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R703_instance;
  }
  var VfpuTripletRegisters$C001_instance;
  function VfpuTripletRegisters$C001_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C001_instance;
  }
  var VfpuTripletRegisters$C011_instance;
  function VfpuTripletRegisters$C011_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C011_instance;
  }
  var VfpuTripletRegisters$C021_instance;
  function VfpuTripletRegisters$C021_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C021_instance;
  }
  var VfpuTripletRegisters$C031_instance;
  function VfpuTripletRegisters$C031_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C031_instance;
  }
  var VfpuTripletRegisters$C101_instance;
  function VfpuTripletRegisters$C101_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C101_instance;
  }
  var VfpuTripletRegisters$C111_instance;
  function VfpuTripletRegisters$C111_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C111_instance;
  }
  var VfpuTripletRegisters$C121_instance;
  function VfpuTripletRegisters$C121_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C121_instance;
  }
  var VfpuTripletRegisters$C131_instance;
  function VfpuTripletRegisters$C131_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C131_instance;
  }
  var VfpuTripletRegisters$C201_instance;
  function VfpuTripletRegisters$C201_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C201_instance;
  }
  var VfpuTripletRegisters$C211_instance;
  function VfpuTripletRegisters$C211_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C211_instance;
  }
  var VfpuTripletRegisters$C221_instance;
  function VfpuTripletRegisters$C221_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C221_instance;
  }
  var VfpuTripletRegisters$C231_instance;
  function VfpuTripletRegisters$C231_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C231_instance;
  }
  var VfpuTripletRegisters$C301_instance;
  function VfpuTripletRegisters$C301_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C301_instance;
  }
  var VfpuTripletRegisters$C311_instance;
  function VfpuTripletRegisters$C311_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C311_instance;
  }
  var VfpuTripletRegisters$C321_instance;
  function VfpuTripletRegisters$C321_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C321_instance;
  }
  var VfpuTripletRegisters$C331_instance;
  function VfpuTripletRegisters$C331_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C331_instance;
  }
  var VfpuTripletRegisters$C401_instance;
  function VfpuTripletRegisters$C401_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C401_instance;
  }
  var VfpuTripletRegisters$C411_instance;
  function VfpuTripletRegisters$C411_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C411_instance;
  }
  var VfpuTripletRegisters$C421_instance;
  function VfpuTripletRegisters$C421_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C421_instance;
  }
  var VfpuTripletRegisters$C431_instance;
  function VfpuTripletRegisters$C431_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C431_instance;
  }
  var VfpuTripletRegisters$C501_instance;
  function VfpuTripletRegisters$C501_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C501_instance;
  }
  var VfpuTripletRegisters$C511_instance;
  function VfpuTripletRegisters$C511_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C511_instance;
  }
  var VfpuTripletRegisters$C521_instance;
  function VfpuTripletRegisters$C521_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C521_instance;
  }
  var VfpuTripletRegisters$C531_instance;
  function VfpuTripletRegisters$C531_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C531_instance;
  }
  var VfpuTripletRegisters$C601_instance;
  function VfpuTripletRegisters$C601_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C601_instance;
  }
  var VfpuTripletRegisters$C611_instance;
  function VfpuTripletRegisters$C611_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C611_instance;
  }
  var VfpuTripletRegisters$C621_instance;
  function VfpuTripletRegisters$C621_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C621_instance;
  }
  var VfpuTripletRegisters$C631_instance;
  function VfpuTripletRegisters$C631_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C631_instance;
  }
  var VfpuTripletRegisters$C701_instance;
  function VfpuTripletRegisters$C701_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C701_instance;
  }
  var VfpuTripletRegisters$C711_instance;
  function VfpuTripletRegisters$C711_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C711_instance;
  }
  var VfpuTripletRegisters$C721_instance;
  function VfpuTripletRegisters$C721_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C721_instance;
  }
  var VfpuTripletRegisters$C731_instance;
  function VfpuTripletRegisters$C731_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$C731_instance;
  }
  var VfpuTripletRegisters$R010_instance;
  function VfpuTripletRegisters$R010_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R010_instance;
  }
  var VfpuTripletRegisters$R011_instance;
  function VfpuTripletRegisters$R011_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R011_instance;
  }
  var VfpuTripletRegisters$R012_instance;
  function VfpuTripletRegisters$R012_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R012_instance;
  }
  var VfpuTripletRegisters$R013_instance;
  function VfpuTripletRegisters$R013_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R013_instance;
  }
  var VfpuTripletRegisters$R110_instance;
  function VfpuTripletRegisters$R110_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R110_instance;
  }
  var VfpuTripletRegisters$R111_instance;
  function VfpuTripletRegisters$R111_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R111_instance;
  }
  var VfpuTripletRegisters$R112_instance;
  function VfpuTripletRegisters$R112_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R112_instance;
  }
  var VfpuTripletRegisters$R113_instance;
  function VfpuTripletRegisters$R113_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R113_instance;
  }
  var VfpuTripletRegisters$R210_instance;
  function VfpuTripletRegisters$R210_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R210_instance;
  }
  var VfpuTripletRegisters$R211_instance;
  function VfpuTripletRegisters$R211_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R211_instance;
  }
  var VfpuTripletRegisters$R212_instance;
  function VfpuTripletRegisters$R212_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R212_instance;
  }
  var VfpuTripletRegisters$R213_instance;
  function VfpuTripletRegisters$R213_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R213_instance;
  }
  var VfpuTripletRegisters$R310_instance;
  function VfpuTripletRegisters$R310_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R310_instance;
  }
  var VfpuTripletRegisters$R311_instance;
  function VfpuTripletRegisters$R311_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R311_instance;
  }
  var VfpuTripletRegisters$R312_instance;
  function VfpuTripletRegisters$R312_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R312_instance;
  }
  var VfpuTripletRegisters$R313_instance;
  function VfpuTripletRegisters$R313_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R313_instance;
  }
  var VfpuTripletRegisters$R410_instance;
  function VfpuTripletRegisters$R410_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R410_instance;
  }
  var VfpuTripletRegisters$R411_instance;
  function VfpuTripletRegisters$R411_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R411_instance;
  }
  var VfpuTripletRegisters$R412_instance;
  function VfpuTripletRegisters$R412_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R412_instance;
  }
  var VfpuTripletRegisters$R413_instance;
  function VfpuTripletRegisters$R413_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R413_instance;
  }
  var VfpuTripletRegisters$R510_instance;
  function VfpuTripletRegisters$R510_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R510_instance;
  }
  var VfpuTripletRegisters$R511_instance;
  function VfpuTripletRegisters$R511_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R511_instance;
  }
  var VfpuTripletRegisters$R512_instance;
  function VfpuTripletRegisters$R512_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R512_instance;
  }
  var VfpuTripletRegisters$R513_instance;
  function VfpuTripletRegisters$R513_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R513_instance;
  }
  var VfpuTripletRegisters$R610_instance;
  function VfpuTripletRegisters$R610_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R610_instance;
  }
  var VfpuTripletRegisters$R611_instance;
  function VfpuTripletRegisters$R611_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R611_instance;
  }
  var VfpuTripletRegisters$R612_instance;
  function VfpuTripletRegisters$R612_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R612_instance;
  }
  var VfpuTripletRegisters$R613_instance;
  function VfpuTripletRegisters$R613_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R613_instance;
  }
  var VfpuTripletRegisters$R710_instance;
  function VfpuTripletRegisters$R710_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R710_instance;
  }
  var VfpuTripletRegisters$R711_instance;
  function VfpuTripletRegisters$R711_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R711_instance;
  }
  var VfpuTripletRegisters$R712_instance;
  function VfpuTripletRegisters$R712_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R712_instance;
  }
  var VfpuTripletRegisters$R713_instance;
  function VfpuTripletRegisters$R713_getInstance() {
    VfpuTripletRegisters_initFields();
    return VfpuTripletRegisters$R713_instance;
  }
  function VfpuTripletRegisters$Companion() {
    VfpuTripletRegisters$Companion_instance = this;
    this.values = VfpuPairRegisters$values();
  }
  VfpuTripletRegisters$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var VfpuTripletRegisters$Companion_instance = null;
  function VfpuTripletRegisters$Companion_getInstance() {
    VfpuTripletRegisters_initFields();
    if (VfpuTripletRegisters$Companion_instance === null) {
      new VfpuTripletRegisters$Companion();
    }
    return VfpuTripletRegisters$Companion_instance;
  }
  VfpuTripletRegisters.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VfpuTripletRegisters',
    interfaces: [Enum]
  };
  function VfpuTripletRegisters$values() {
    return [VfpuTripletRegisters$C000_getInstance(), VfpuTripletRegisters$C010_getInstance(), VfpuTripletRegisters$C020_getInstance(), VfpuTripletRegisters$C030_getInstance(), VfpuTripletRegisters$C100_getInstance(), VfpuTripletRegisters$C110_getInstance(), VfpuTripletRegisters$C120_getInstance(), VfpuTripletRegisters$C130_getInstance(), VfpuTripletRegisters$C200_getInstance(), VfpuTripletRegisters$C210_getInstance(), VfpuTripletRegisters$C220_getInstance(), VfpuTripletRegisters$C230_getInstance(), VfpuTripletRegisters$C300_getInstance(), VfpuTripletRegisters$C310_getInstance(), VfpuTripletRegisters$C320_getInstance(), VfpuTripletRegisters$C330_getInstance(), VfpuTripletRegisters$C400_getInstance(), VfpuTripletRegisters$C410_getInstance(), VfpuTripletRegisters$C420_getInstance(), VfpuTripletRegisters$C430_getInstance(), VfpuTripletRegisters$C500_getInstance(), VfpuTripletRegisters$C510_getInstance(), VfpuTripletRegisters$C520_getInstance(), VfpuTripletRegisters$C530_getInstance(), VfpuTripletRegisters$C600_getInstance(), VfpuTripletRegisters$C610_getInstance(), VfpuTripletRegisters$C620_getInstance(), VfpuTripletRegisters$C630_getInstance(), VfpuTripletRegisters$C700_getInstance(), VfpuTripletRegisters$C710_getInstance(), VfpuTripletRegisters$C720_getInstance(), VfpuTripletRegisters$C730_getInstance(), VfpuTripletRegisters$R000_getInstance(), VfpuTripletRegisters$R001_getInstance(), VfpuTripletRegisters$R002_getInstance(), VfpuTripletRegisters$R003_getInstance(), VfpuTripletRegisters$R100_getInstance(), VfpuTripletRegisters$R101_getInstance(), VfpuTripletRegisters$R102_getInstance(), VfpuTripletRegisters$R103_getInstance(), VfpuTripletRegisters$R200_getInstance(), VfpuTripletRegisters$R201_getInstance(), VfpuTripletRegisters$R202_getInstance(), VfpuTripletRegisters$R203_getInstance(), VfpuTripletRegisters$R300_getInstance(), VfpuTripletRegisters$R301_getInstance(), VfpuTripletRegisters$R302_getInstance(), VfpuTripletRegisters$R303_getInstance(), VfpuTripletRegisters$R400_getInstance(), VfpuTripletRegisters$R401_getInstance(), VfpuTripletRegisters$R402_getInstance(), VfpuTripletRegisters$R403_getInstance(), VfpuTripletRegisters$R500_getInstance(), VfpuTripletRegisters$R501_getInstance(), VfpuTripletRegisters$R502_getInstance(), VfpuTripletRegisters$R503_getInstance(), VfpuTripletRegisters$R600_getInstance(), VfpuTripletRegisters$R601_getInstance(), VfpuTripletRegisters$R602_getInstance(), VfpuTripletRegisters$R603_getInstance(), VfpuTripletRegisters$R700_getInstance(), VfpuTripletRegisters$R701_getInstance(), VfpuTripletRegisters$R702_getInstance(), VfpuTripletRegisters$R703_getInstance(), VfpuTripletRegisters$C001_getInstance(), VfpuTripletRegisters$C011_getInstance(), VfpuTripletRegisters$C021_getInstance(), VfpuTripletRegisters$C031_getInstance(), VfpuTripletRegisters$C101_getInstance(), VfpuTripletRegisters$C111_getInstance(), VfpuTripletRegisters$C121_getInstance(), VfpuTripletRegisters$C131_getInstance(), VfpuTripletRegisters$C201_getInstance(), VfpuTripletRegisters$C211_getInstance(), VfpuTripletRegisters$C221_getInstance(), VfpuTripletRegisters$C231_getInstance(), VfpuTripletRegisters$C301_getInstance(), VfpuTripletRegisters$C311_getInstance(), VfpuTripletRegisters$C321_getInstance(), VfpuTripletRegisters$C331_getInstance(), VfpuTripletRegisters$C401_getInstance(), VfpuTripletRegisters$C411_getInstance(), VfpuTripletRegisters$C421_getInstance(), VfpuTripletRegisters$C431_getInstance(), VfpuTripletRegisters$C501_getInstance(), VfpuTripletRegisters$C511_getInstance(), VfpuTripletRegisters$C521_getInstance(), VfpuTripletRegisters$C531_getInstance(), VfpuTripletRegisters$C601_getInstance(), VfpuTripletRegisters$C611_getInstance(), VfpuTripletRegisters$C621_getInstance(), VfpuTripletRegisters$C631_getInstance(), VfpuTripletRegisters$C701_getInstance(), VfpuTripletRegisters$C711_getInstance(), VfpuTripletRegisters$C721_getInstance(), VfpuTripletRegisters$C731_getInstance(), VfpuTripletRegisters$R010_getInstance(), VfpuTripletRegisters$R011_getInstance(), VfpuTripletRegisters$R012_getInstance(), VfpuTripletRegisters$R013_getInstance(), VfpuTripletRegisters$R110_getInstance(), VfpuTripletRegisters$R111_getInstance(), VfpuTripletRegisters$R112_getInstance(), VfpuTripletRegisters$R113_getInstance(), VfpuTripletRegisters$R210_getInstance(), VfpuTripletRegisters$R211_getInstance(), VfpuTripletRegisters$R212_getInstance(), VfpuTripletRegisters$R213_getInstance(), VfpuTripletRegisters$R310_getInstance(), VfpuTripletRegisters$R311_getInstance(), VfpuTripletRegisters$R312_getInstance(), VfpuTripletRegisters$R313_getInstance(), VfpuTripletRegisters$R410_getInstance(), VfpuTripletRegisters$R411_getInstance(), VfpuTripletRegisters$R412_getInstance(), VfpuTripletRegisters$R413_getInstance(), VfpuTripletRegisters$R510_getInstance(), VfpuTripletRegisters$R511_getInstance(), VfpuTripletRegisters$R512_getInstance(), VfpuTripletRegisters$R513_getInstance(), VfpuTripletRegisters$R610_getInstance(), VfpuTripletRegisters$R611_getInstance(), VfpuTripletRegisters$R612_getInstance(), VfpuTripletRegisters$R613_getInstance(), VfpuTripletRegisters$R710_getInstance(), VfpuTripletRegisters$R711_getInstance(), VfpuTripletRegisters$R712_getInstance(), VfpuTripletRegisters$R713_getInstance()];
  }
  VfpuTripletRegisters.values = VfpuTripletRegisters$values;
  function VfpuTripletRegisters$valueOf(name) {
    switch (name) {
      case 'C000':
        return VfpuTripletRegisters$C000_getInstance();
      case 'C010':
        return VfpuTripletRegisters$C010_getInstance();
      case 'C020':
        return VfpuTripletRegisters$C020_getInstance();
      case 'C030':
        return VfpuTripletRegisters$C030_getInstance();
      case 'C100':
        return VfpuTripletRegisters$C100_getInstance();
      case 'C110':
        return VfpuTripletRegisters$C110_getInstance();
      case 'C120':
        return VfpuTripletRegisters$C120_getInstance();
      case 'C130':
        return VfpuTripletRegisters$C130_getInstance();
      case 'C200':
        return VfpuTripletRegisters$C200_getInstance();
      case 'C210':
        return VfpuTripletRegisters$C210_getInstance();
      case 'C220':
        return VfpuTripletRegisters$C220_getInstance();
      case 'C230':
        return VfpuTripletRegisters$C230_getInstance();
      case 'C300':
        return VfpuTripletRegisters$C300_getInstance();
      case 'C310':
        return VfpuTripletRegisters$C310_getInstance();
      case 'C320':
        return VfpuTripletRegisters$C320_getInstance();
      case 'C330':
        return VfpuTripletRegisters$C330_getInstance();
      case 'C400':
        return VfpuTripletRegisters$C400_getInstance();
      case 'C410':
        return VfpuTripletRegisters$C410_getInstance();
      case 'C420':
        return VfpuTripletRegisters$C420_getInstance();
      case 'C430':
        return VfpuTripletRegisters$C430_getInstance();
      case 'C500':
        return VfpuTripletRegisters$C500_getInstance();
      case 'C510':
        return VfpuTripletRegisters$C510_getInstance();
      case 'C520':
        return VfpuTripletRegisters$C520_getInstance();
      case 'C530':
        return VfpuTripletRegisters$C530_getInstance();
      case 'C600':
        return VfpuTripletRegisters$C600_getInstance();
      case 'C610':
        return VfpuTripletRegisters$C610_getInstance();
      case 'C620':
        return VfpuTripletRegisters$C620_getInstance();
      case 'C630':
        return VfpuTripletRegisters$C630_getInstance();
      case 'C700':
        return VfpuTripletRegisters$C700_getInstance();
      case 'C710':
        return VfpuTripletRegisters$C710_getInstance();
      case 'C720':
        return VfpuTripletRegisters$C720_getInstance();
      case 'C730':
        return VfpuTripletRegisters$C730_getInstance();
      case 'R000':
        return VfpuTripletRegisters$R000_getInstance();
      case 'R001':
        return VfpuTripletRegisters$R001_getInstance();
      case 'R002':
        return VfpuTripletRegisters$R002_getInstance();
      case 'R003':
        return VfpuTripletRegisters$R003_getInstance();
      case 'R100':
        return VfpuTripletRegisters$R100_getInstance();
      case 'R101':
        return VfpuTripletRegisters$R101_getInstance();
      case 'R102':
        return VfpuTripletRegisters$R102_getInstance();
      case 'R103':
        return VfpuTripletRegisters$R103_getInstance();
      case 'R200':
        return VfpuTripletRegisters$R200_getInstance();
      case 'R201':
        return VfpuTripletRegisters$R201_getInstance();
      case 'R202':
        return VfpuTripletRegisters$R202_getInstance();
      case 'R203':
        return VfpuTripletRegisters$R203_getInstance();
      case 'R300':
        return VfpuTripletRegisters$R300_getInstance();
      case 'R301':
        return VfpuTripletRegisters$R301_getInstance();
      case 'R302':
        return VfpuTripletRegisters$R302_getInstance();
      case 'R303':
        return VfpuTripletRegisters$R303_getInstance();
      case 'R400':
        return VfpuTripletRegisters$R400_getInstance();
      case 'R401':
        return VfpuTripletRegisters$R401_getInstance();
      case 'R402':
        return VfpuTripletRegisters$R402_getInstance();
      case 'R403':
        return VfpuTripletRegisters$R403_getInstance();
      case 'R500':
        return VfpuTripletRegisters$R500_getInstance();
      case 'R501':
        return VfpuTripletRegisters$R501_getInstance();
      case 'R502':
        return VfpuTripletRegisters$R502_getInstance();
      case 'R503':
        return VfpuTripletRegisters$R503_getInstance();
      case 'R600':
        return VfpuTripletRegisters$R600_getInstance();
      case 'R601':
        return VfpuTripletRegisters$R601_getInstance();
      case 'R602':
        return VfpuTripletRegisters$R602_getInstance();
      case 'R603':
        return VfpuTripletRegisters$R603_getInstance();
      case 'R700':
        return VfpuTripletRegisters$R700_getInstance();
      case 'R701':
        return VfpuTripletRegisters$R701_getInstance();
      case 'R702':
        return VfpuTripletRegisters$R702_getInstance();
      case 'R703':
        return VfpuTripletRegisters$R703_getInstance();
      case 'C001':
        return VfpuTripletRegisters$C001_getInstance();
      case 'C011':
        return VfpuTripletRegisters$C011_getInstance();
      case 'C021':
        return VfpuTripletRegisters$C021_getInstance();
      case 'C031':
        return VfpuTripletRegisters$C031_getInstance();
      case 'C101':
        return VfpuTripletRegisters$C101_getInstance();
      case 'C111':
        return VfpuTripletRegisters$C111_getInstance();
      case 'C121':
        return VfpuTripletRegisters$C121_getInstance();
      case 'C131':
        return VfpuTripletRegisters$C131_getInstance();
      case 'C201':
        return VfpuTripletRegisters$C201_getInstance();
      case 'C211':
        return VfpuTripletRegisters$C211_getInstance();
      case 'C221':
        return VfpuTripletRegisters$C221_getInstance();
      case 'C231':
        return VfpuTripletRegisters$C231_getInstance();
      case 'C301':
        return VfpuTripletRegisters$C301_getInstance();
      case 'C311':
        return VfpuTripletRegisters$C311_getInstance();
      case 'C321':
        return VfpuTripletRegisters$C321_getInstance();
      case 'C331':
        return VfpuTripletRegisters$C331_getInstance();
      case 'C401':
        return VfpuTripletRegisters$C401_getInstance();
      case 'C411':
        return VfpuTripletRegisters$C411_getInstance();
      case 'C421':
        return VfpuTripletRegisters$C421_getInstance();
      case 'C431':
        return VfpuTripletRegisters$C431_getInstance();
      case 'C501':
        return VfpuTripletRegisters$C501_getInstance();
      case 'C511':
        return VfpuTripletRegisters$C511_getInstance();
      case 'C521':
        return VfpuTripletRegisters$C521_getInstance();
      case 'C531':
        return VfpuTripletRegisters$C531_getInstance();
      case 'C601':
        return VfpuTripletRegisters$C601_getInstance();
      case 'C611':
        return VfpuTripletRegisters$C611_getInstance();
      case 'C621':
        return VfpuTripletRegisters$C621_getInstance();
      case 'C631':
        return VfpuTripletRegisters$C631_getInstance();
      case 'C701':
        return VfpuTripletRegisters$C701_getInstance();
      case 'C711':
        return VfpuTripletRegisters$C711_getInstance();
      case 'C721':
        return VfpuTripletRegisters$C721_getInstance();
      case 'C731':
        return VfpuTripletRegisters$C731_getInstance();
      case 'R010':
        return VfpuTripletRegisters$R010_getInstance();
      case 'R011':
        return VfpuTripletRegisters$R011_getInstance();
      case 'R012':
        return VfpuTripletRegisters$R012_getInstance();
      case 'R013':
        return VfpuTripletRegisters$R013_getInstance();
      case 'R110':
        return VfpuTripletRegisters$R110_getInstance();
      case 'R111':
        return VfpuTripletRegisters$R111_getInstance();
      case 'R112':
        return VfpuTripletRegisters$R112_getInstance();
      case 'R113':
        return VfpuTripletRegisters$R113_getInstance();
      case 'R210':
        return VfpuTripletRegisters$R210_getInstance();
      case 'R211':
        return VfpuTripletRegisters$R211_getInstance();
      case 'R212':
        return VfpuTripletRegisters$R212_getInstance();
      case 'R213':
        return VfpuTripletRegisters$R213_getInstance();
      case 'R310':
        return VfpuTripletRegisters$R310_getInstance();
      case 'R311':
        return VfpuTripletRegisters$R311_getInstance();
      case 'R312':
        return VfpuTripletRegisters$R312_getInstance();
      case 'R313':
        return VfpuTripletRegisters$R313_getInstance();
      case 'R410':
        return VfpuTripletRegisters$R410_getInstance();
      case 'R411':
        return VfpuTripletRegisters$R411_getInstance();
      case 'R412':
        return VfpuTripletRegisters$R412_getInstance();
      case 'R413':
        return VfpuTripletRegisters$R413_getInstance();
      case 'R510':
        return VfpuTripletRegisters$R510_getInstance();
      case 'R511':
        return VfpuTripletRegisters$R511_getInstance();
      case 'R512':
        return VfpuTripletRegisters$R512_getInstance();
      case 'R513':
        return VfpuTripletRegisters$R513_getInstance();
      case 'R610':
        return VfpuTripletRegisters$R610_getInstance();
      case 'R611':
        return VfpuTripletRegisters$R611_getInstance();
      case 'R612':
        return VfpuTripletRegisters$R612_getInstance();
      case 'R613':
        return VfpuTripletRegisters$R613_getInstance();
      case 'R710':
        return VfpuTripletRegisters$R710_getInstance();
      case 'R711':
        return VfpuTripletRegisters$R711_getInstance();
      case 'R712':
        return VfpuTripletRegisters$R712_getInstance();
      case 'R713':
        return VfpuTripletRegisters$R713_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.cpu.VfpuTripletRegisters.' + name);
    }
  }
  VfpuTripletRegisters.valueOf_61zpoe$ = VfpuTripletRegisters$valueOf;
  function GlobalCpuState() {
    GlobalCpuState$Companion_getInstance();
    this.insideInterrupt = false;
    this.interruptFlags = -1;
  }
  function GlobalCpuState$Companion() {
    GlobalCpuState$Companion_instance = this;
    this.dummy = new GlobalCpuState();
  }
  GlobalCpuState$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var GlobalCpuState$Companion_instance = null;
  function GlobalCpuState$Companion_getInstance() {
    if (GlobalCpuState$Companion_instance === null) {
      new GlobalCpuState$Companion();
    }
    return GlobalCpuState$Companion_instance;
  }
  GlobalCpuState.prototype.reset = function () {
    this.insideInterrupt = false;
    this.interruptFlags = -1;
  };
  GlobalCpuState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GlobalCpuState',
    interfaces: []
  };
  function InstructionDecoder() {
  }
  InstructionDecoder.prototype.get_lsb_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_lsb_s8ev3n$', function ($receiver) {
    return $receiver >>> 6 & 31;
  });
  InstructionDecoder.prototype.get_msb_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_msb_s8ev3n$', function ($receiver) {
    return $receiver >>> 11 & 31;
  });
  InstructionDecoder.prototype.get_pos_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_pos_s8ev3n$', function ($receiver) {
    return $receiver >>> 6 & 31;
  });
  InstructionDecoder.prototype.get_size_e_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_size_e_s8ev3n$', function ($receiver) {
    return ($receiver >>> 11 & 31) + 1 | 0;
  });
  InstructionDecoder.prototype.get_size_i_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_size_i_s8ev3n$', function ($receiver) {
    return ($receiver >>> 11 & 31) - ($receiver >>> 6 & 31) + 1 | 0;
  });
  InstructionDecoder.prototype.get_rd_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_rd_s8ev3n$', function ($receiver) {
    return $receiver >>> 11 & 31;
  });
  InstructionDecoder.prototype.get_rt_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_rt_s8ev3n$', function ($receiver) {
    return $receiver >>> 16 & 31;
  });
  InstructionDecoder.prototype.get_rs_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_rs_s8ev3n$', function ($receiver) {
    return $receiver >>> 21 & 31;
  });
  InstructionDecoder.prototype.get_fd_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_fd_s8ev3n$', function ($receiver) {
    return $receiver >>> 6 & 31;
  });
  InstructionDecoder.prototype.get_fs_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_fs_s8ev3n$', function ($receiver) {
    return $receiver >>> 11 & 31;
  });
  InstructionDecoder.prototype.get_ft_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_ft_s8ev3n$', function ($receiver) {
    return $receiver >>> 16 & 31;
  });
  InstructionDecoder.prototype.get_vd_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_vd_s8ev3n$', function ($receiver) {
    return $receiver >>> 0 & 127;
  });
  InstructionDecoder.prototype.get_vs_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_vs_s8ev3n$', function ($receiver) {
    return $receiver >>> 8 & 127;
  });
  InstructionDecoder.prototype.get_vt_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_vt_s8ev3n$', function ($receiver) {
    return $receiver >>> 16 & 127;
  });
  InstructionDecoder.prototype.get_vt1_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_vt1_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 0, 1);
    };
  }));
  InstructionDecoder.prototype.get_vt2_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_vt2_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 0, 2);
    };
  }));
  InstructionDecoder.prototype.get_vt5_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_vt5_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 16, 5);
    };
  }));
  InstructionDecoder.prototype.get_vt5_1_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_vt5_1_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 16, 5) | extract($receiver, 0, 1) << 5;
    };
  }));
  InstructionDecoder.prototype.get_vt5_2_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_vt5_2_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 16, 5) | extract($receiver, 0, 2) << 5;
    };
  }));
  InstructionDecoder.prototype.get_imm8_s8ev3n$ = function ($receiver) {
    return extract_0($receiver, 16, 8);
  };
  InstructionDecoder.prototype.get_imm5_s8ev3n$ = function ($receiver) {
    return extract_0($receiver, 16, 5);
  };
  InstructionDecoder.prototype.get_imm3_s8ev3n$ = function ($receiver) {
    return extract_0($receiver, 16, 3);
  };
  InstructionDecoder.prototype.get_imm7_s8ev3n$ = function ($receiver) {
    return extract_0($receiver, 0, 7);
  };
  InstructionDecoder.prototype.get_imm4_s8ev3n$ = function ($receiver) {
    return extract_0($receiver, 0, 4);
  };
  InstructionDecoder.prototype.get_one_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_one_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 7, 1);
    };
  }));
  InstructionDecoder.prototype.get_two_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_two_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 15, 1);
    };
  }));
  InstructionDecoder.prototype.get_one_two_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_one_two_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver) {
      return 1 + (1 * extract($receiver, 7, 1) | 0) + (2 * extract($receiver, 15, 1) | 0) | 0;
    };
  }));
  InstructionDecoder.prototype.get_syscall_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_syscall_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 6, 20);
    };
  }));
  InstructionDecoder.prototype.get_s_imm16_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_s_imm16_s8ev3n$', function ($receiver) {
    return $receiver << 16 >> 16;
  });
  InstructionDecoder.prototype.get_u_imm16_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_u_imm16_s8ev3n$', function ($receiver) {
    return $receiver & 65535;
  });
  InstructionDecoder.prototype.get_s_imm14_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_s_imm14_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    var signExtend = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.signExtend_dqglrj$;
    return function ($receiver) {
      return signExtend(extract($receiver, 2, 14), 14);
    };
  }));
  InstructionDecoder.prototype.get_u_imm26_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_u_imm26_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 0, 26);
    };
  }));
  InstructionDecoder.prototype.get_jump_address_s8ev3n$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_jump_address_s8ev3n$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver, 0, 26) * 4 | 0;
    };
  }));
  InstructionDecoder.prototype.invoke_6rdgz4$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.invoke_6rdgz4$', function ($receiver, callback) {
    callback($receiver);
    $receiver._PC = $receiver._nPC;
    $receiver._nPC = $receiver._nPC + 4 | 0;
  });
  InstructionDecoder.prototype.preadvance_6rdgz4$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.preadvance_6rdgz4$', function ($receiver, callback) {
    $receiver._PC = $receiver._nPC;
    $receiver._nPC = $receiver._nPC + 4 | 0;
    callback($receiver);
  });
  InstructionDecoder.prototype.normal_6rdgz4$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.normal_6rdgz4$', function ($receiver, callback) {
    callback($receiver);
    $receiver._PC = $receiver._nPC;
    $receiver._nPC = $receiver._nPC + 4 | 0;
  });
  InstructionDecoder.prototype.none_6rdgz4$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.none_6rdgz4$', function ($receiver, callback) {
    callback($receiver);
  });
  InstructionDecoder.prototype.branch_bqb35s$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.branch_bqb35s$', function ($receiver, callback) {
    var result = callback($receiver);
    if (result) {
      var offset = ($receiver.IR << 16 >> 16) * 4 | 0;
      $receiver._PC = $receiver._nPC;
      $receiver._nPC = $receiver._nPC + offset | 0;
    }
     else {
      $receiver._PC = $receiver._nPC;
      $receiver._nPC = $receiver._nPC + 4 | 0;
    }
  });
  InstructionDecoder.prototype.branchLikely_bqb35s$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.branchLikely_bqb35s$', function ($receiver, callback) {
    var result = callback($receiver);
    if (result) {
      var offset = ($receiver.IR << 16 >> 16) * 4 | 0;
      $receiver._PC = $receiver._nPC;
      $receiver._nPC = $receiver._nPC + offset | 0;
    }
     else {
      $receiver._PC = $receiver._nPC + 4 | 0;
      $receiver._nPC = $receiver._PC + 4 | 0;
    }
  });
  InstructionDecoder.prototype.get_VT_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_VT_he8x89$', function ($receiver) {
    return $receiver.getVfpr_za3lpa$($receiver.IR >>> 16 & 127);
  });
  InstructionDecoder.prototype.set_VT_nsu4ru$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_VT_nsu4ru$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setVfpr_24o109$($receiver.IR >>> 16 & 127, value);
    };
  }));
  InstructionDecoder.prototype.get_VD_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_VD_he8x89$', function ($receiver) {
    return $receiver.getVfpr_za3lpa$($receiver.IR >>> 0 & 127);
  });
  InstructionDecoder.prototype.set_VD_nsu4ru$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_VD_nsu4ru$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setVfpr_24o109$($receiver.IR >>> 0 & 127, value);
    };
  }));
  InstructionDecoder.prototype.get_VS_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_VS_he8x89$', function ($receiver) {
    return $receiver.getVfpr_za3lpa$($receiver.IR >>> 8 & 127);
  });
  InstructionDecoder.prototype.set_VS_nsu4ru$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_VS_nsu4ru$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setVfpr_24o109$($receiver.IR >>> 8 & 127, value);
    };
  }));
  InstructionDecoder.prototype.get_VT_I_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_VT_I_he8x89$', function ($receiver) {
    return $receiver.getVfprI_za3lpa$($receiver.IR >>> 16 & 127);
  });
  InstructionDecoder.prototype.set_VT_I_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_VT_I_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setVfprI_vux9f0$($receiver.IR >>> 16 & 127, value);
    };
  }));
  InstructionDecoder.prototype.get_VD_I_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_VD_I_he8x89$', function ($receiver) {
    return $receiver.getVfprI_za3lpa$($receiver.IR >>> 0 & 127);
  });
  InstructionDecoder.prototype.set_VD_I_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_VD_I_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setVfprI_vux9f0$($receiver.IR >>> 0 & 127, value);
    };
  }));
  InstructionDecoder.prototype.get_VS_I_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_VS_I_he8x89$', function ($receiver) {
    return $receiver.getVfprI_za3lpa$($receiver.IR >>> 8 & 127);
  });
  InstructionDecoder.prototype.set_VS_I_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_VS_I_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setVfprI_vux9f0$($receiver.IR >>> 8 & 127, value);
    };
  }));
  InstructionDecoder.prototype.get_RD_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_RD_he8x89$', function ($receiver) {
    return $receiver.getGpr_za3lpa$($receiver.IR >>> 11 & 31);
  });
  InstructionDecoder.prototype.set_RD_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_RD_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setGpr_vux9f0$($receiver.IR >>> 11 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_RT_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_RT_he8x89$', function ($receiver) {
    return $receiver.getGpr_za3lpa$($receiver.IR >>> 16 & 31);
  });
  InstructionDecoder.prototype.set_RT_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_RT_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setGpr_vux9f0$($receiver.IR >>> 16 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_RS_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_RS_he8x89$', function ($receiver) {
    return $receiver.getGpr_za3lpa$($receiver.IR >>> 21 & 31);
  });
  InstructionDecoder.prototype.set_RS_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_RS_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setGpr_vux9f0$($receiver.IR >>> 21 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_FD_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_FD_he8x89$', function ($receiver) {
    return $receiver.getFpr_za3lpa$($receiver.IR >>> 6 & 31);
  });
  InstructionDecoder.prototype.set_FD_nsu4ru$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_FD_nsu4ru$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setFpr_24o109$($receiver.IR >>> 6 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_FT_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_FT_he8x89$', function ($receiver) {
    return $receiver.getFpr_za3lpa$($receiver.IR >>> 16 & 31);
  });
  InstructionDecoder.prototype.set_FT_nsu4ru$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_FT_nsu4ru$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setFpr_24o109$($receiver.IR >>> 16 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_FS_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_FS_he8x89$', function ($receiver) {
    return $receiver.getFpr_za3lpa$($receiver.IR >>> 11 & 31);
  });
  InstructionDecoder.prototype.set_FS_nsu4ru$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_FS_nsu4ru$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setFpr_24o109$($receiver.IR >>> 11 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_FD_I_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_FD_I_he8x89$', function ($receiver) {
    return $receiver.getFprI_za3lpa$($receiver.IR >>> 6 & 31);
  });
  InstructionDecoder.prototype.set_FD_I_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_FD_I_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setFprI_vux9f0$($receiver.IR >>> 6 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_FT_I_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_FT_I_he8x89$', function ($receiver) {
    return $receiver.getFprI_za3lpa$($receiver.IR >>> 16 & 31);
  });
  InstructionDecoder.prototype.set_FT_I_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_FT_I_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setFprI_vux9f0$($receiver.IR >>> 16 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_FS_I_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_FS_I_he8x89$', function ($receiver) {
    return $receiver.getFprI_za3lpa$($receiver.IR >>> 11 & 31);
  });
  InstructionDecoder.prototype.set_FS_I_shbxjr$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.set_FS_I_shbxjr$', wrapFunction(function () {
    return function ($receiver, value) {
      $receiver.setFprI_vux9f0$($receiver.IR >>> 11 & 31, value);
    };
  }));
  InstructionDecoder.prototype.get_RS_IMM16_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_RS_IMM16_he8x89$', function ($receiver) {
    return $receiver.getGpr_za3lpa$($receiver.IR >>> 21 & 31) + ($receiver.IR << 16 >> 16) | 0;
  });
  InstructionDecoder.prototype.get_RS_IMM14_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_RS_IMM14_he8x89$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    var signExtend = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.signExtend_dqglrj$;
    return function ($receiver) {
      return $receiver.getGpr_za3lpa$($receiver.IR >>> 21 & 31) + (signExtend(extract($receiver.IR, 2, 14), 14) * 4 | 0) | 0;
    };
  }));
  InstructionDecoder.prototype.get_S_IMM14_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_S_IMM14_he8x89$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    var signExtend = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.signExtend_dqglrj$;
    return function ($receiver) {
      return signExtend(extract($receiver.IR, 2, 14), 14);
    };
  }));
  InstructionDecoder.prototype.get_S_IMM16_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_S_IMM16_he8x89$', function ($receiver) {
    return $receiver.IR << 16 >> 16;
  });
  InstructionDecoder.prototype.get_U_IMM16_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_U_IMM16_he8x89$', function ($receiver) {
    return $receiver.IR & 65535;
  });
  InstructionDecoder.prototype.get_POS_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_POS_he8x89$', function ($receiver) {
    return $receiver.IR >>> 6 & 31;
  });
  InstructionDecoder.prototype.get_SIZE_E_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_SIZE_E_he8x89$', function ($receiver) {
    return ($receiver.IR >>> 11 & 31) + 1 | 0;
  });
  InstructionDecoder.prototype.get_SIZE_I_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_SIZE_I_he8x89$', function ($receiver) {
    var $receiver_0 = $receiver.IR;
    return ($receiver_0 >>> 11 & 31) - ($receiver_0 >>> 6 & 31) + 1 | 0;
  });
  InstructionDecoder.prototype.get_SYSCALL_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_SYSCALL_he8x89$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver.IR, 6, 20);
    };
  }));
  InstructionDecoder.prototype.get_U_IMM26_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_U_IMM26_he8x89$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver.IR, 0, 26);
    };
  }));
  InstructionDecoder.prototype.get_JUMP_ADDRESS_he8x89$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.InstructionDecoder.get_JUMP_ADDRESS_he8x89$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver) {
      return extract($receiver.IR, 0, 26) * 4 | 0;
    };
  }));
  InstructionDecoder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InstructionDecoder',
    interfaces: []
  };
  function InstructionDispatcher(e) {
    this.e = e;
  }
  InstructionDispatcher.prototype.dispatch_8olpll$ = function (s, pc, i) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12, tmp$_13, tmp$_14, tmp$_15, tmp$_16, tmp$_17, tmp$_18, tmp$_19, tmp$_20, tmp$_21, tmp$_22, tmp$_23, tmp$_24, tmp$_25, tmp$_26, tmp$_27, tmp$_28, tmp$_29, tmp$_30, tmp$_31, tmp$_32, tmp$_33, tmp$_34, tmp$_35, tmp$_36, tmp$_37;
    tmp$ = i >> 26 & 63;
    if (tmp$ === 0) {
      tmp$_0 = i >> 0 & 63;
      if (tmp$_0 === 0)
        return this.e.sll_11rb$(s);
      else if (tmp$_0 === 2) {
        tmp$_1 = i >> 21 & 2047;
        if (tmp$_1 === 0)
          return this.e.srl_11rb$(s);
        else if (tmp$_1 === 1)
          return this.e.rotr_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (0) failed mask 0x%08X', [i, pc, -2097152]));
      }
       else if (tmp$_0 === 3)
        return this.e.sra_11rb$(s);
      else if (tmp$_0 === 4)
        return this.e.sllv_11rb$(s);
      else if (tmp$_0 === 6) {
        tmp$_2 = i >> 6 & 66060319;
        if (tmp$_2 === 0)
          return this.e.srlv_11rb$(s);
        else if (tmp$_2 === 1)
          return this.e.rotrv_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (1) failed mask 0x%08X', [i, pc, -67106880]));
      }
       else if (tmp$_0 === 7)
        return this.e.srav_11rb$(s);
      else if (tmp$_0 === 8)
        return this.e.jr_11rb$(s);
      else if (tmp$_0 === 9)
        return this.e.jalr_11rb$(s);
      else if (tmp$_0 === 10)
        return this.e.movz_11rb$(s);
      else if (tmp$_0 === 11)
        return this.e.movn_11rb$(s);
      else if (tmp$_0 === 12)
        return this.e.syscall_11rb$(s);
      else if (tmp$_0 === 13)
        return this.e._break_11rb$(s);
      else if (tmp$_0 === 15)
        return this.e.sync_11rb$(s);
      else if (tmp$_0 === 16)
        return this.e.mfhi_11rb$(s);
      else if (tmp$_0 === 17)
        return this.e.mthi_11rb$(s);
      else if (tmp$_0 === 18)
        return this.e.mflo_11rb$(s);
      else if (tmp$_0 === 19)
        return this.e.mtlo_11rb$(s);
      else if (tmp$_0 === 22)
        return this.e.clz_11rb$(s);
      else if (tmp$_0 === 23)
        return this.e.clo_11rb$(s);
      else if (tmp$_0 === 24)
        return this.e.mult_11rb$(s);
      else if (tmp$_0 === 25)
        return this.e.multu_11rb$(s);
      else if (tmp$_0 === 26)
        return this.e.div_11rb$(s);
      else if (tmp$_0 === 27)
        return this.e.divu_11rb$(s);
      else if (tmp$_0 === 28)
        return this.e.madd_11rb$(s);
      else if (tmp$_0 === 29)
        return this.e.maddu_11rb$(s);
      else if (tmp$_0 === 32)
        return this.e.add_11rb$(s);
      else if (tmp$_0 === 33)
        return this.e.addu_11rb$(s);
      else if (tmp$_0 === 34)
        return this.e.sub_11rb$(s);
      else if (tmp$_0 === 35)
        return this.e.subu_11rb$(s);
      else if (tmp$_0 === 36)
        return this.e.and_11rb$(s);
      else if (tmp$_0 === 37)
        return this.e.or_11rb$(s);
      else if (tmp$_0 === 38)
        return this.e.xor_11rb$(s);
      else if (tmp$_0 === 39)
        return this.e.nor_11rb$(s);
      else if (tmp$_0 === 42)
        return this.e.slt_11rb$(s);
      else if (tmp$_0 === 43)
        return this.e.sltu_11rb$(s);
      else if (tmp$_0 === 44)
        return this.e.max_11rb$(s);
      else if (tmp$_0 === 45)
        return this.e.min_11rb$(s);
      else if (tmp$_0 === 46)
        return this.e.msub_11rb$(s);
      else if (tmp$_0 === 47)
        return this.e.msubu_11rb$(s);
      else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (2) failed mask 0x%08X', [i, pc, 63]));
    }
     else if (tmp$ === 1) {
      tmp$_3 = i >> 16 & 31;
      if (tmp$_3 === 0)
        return this.e.bltz_11rb$(s);
      else if (tmp$_3 === 1)
        return this.e.bgez_11rb$(s);
      else if (tmp$_3 === 2)
        return this.e.bltzl_11rb$(s);
      else if (tmp$_3 === 3)
        return this.e.bgezl_11rb$(s);
      else if (tmp$_3 === 16)
        return this.e.bltzal_11rb$(s);
      else if (tmp$_3 === 17)
        return this.e.bgezal_11rb$(s);
      else if (tmp$_3 === 18)
        return this.e.bltzall_11rb$(s);
      else if (tmp$_3 === 19)
        return this.e.bgezall_11rb$(s);
      else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (3) failed mask 0x%08X', [i, pc, 2031616]));
    }
     else if (tmp$ === 2)
      return this.e.j_11rb$(s);
    else if (tmp$ === 3)
      return this.e.jal_11rb$(s);
    else if (tmp$ === 4)
      return this.e.beq_11rb$(s);
    else if (tmp$ === 5)
      return this.e.bne_11rb$(s);
    else if (tmp$ === 6)
      return this.e.blez_11rb$(s);
    else if (tmp$ === 7)
      return this.e.bgtz_11rb$(s);
    else if (tmp$ === 8)
      return this.e.addi_11rb$(s);
    else if (tmp$ === 9)
      return this.e.addiu_11rb$(s);
    else if (tmp$ === 10)
      return this.e.slti_11rb$(s);
    else if (tmp$ === 11)
      return this.e.sltiu_11rb$(s);
    else if (tmp$ === 12)
      return this.e.andi_11rb$(s);
    else if (tmp$ === 13)
      return this.e.ori_11rb$(s);
    else if (tmp$ === 14)
      return this.e.xori_11rb$(s);
    else if (tmp$ === 15)
      return this.e.lui_11rb$(s);
    else if (tmp$ === 16) {
      tmp$_4 = i >> 0 & 65013759;
      if (tmp$_4 === 0)
        return this.e.mfc0_11rb$(s);
      else if (tmp$_4 === 4194304)
        return this.e.cfc0_11rb$(s);
      else if (tmp$_4 === 8388608)
        return this.e.mtc0_11rb$(s);
      else if (tmp$_4 === 12582912)
        return this.e.ctc0_11rb$(s);
      else if (tmp$_4 === 33554456)
        return this.e.eret_11rb$(s);
      else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (4) failed mask 0x%08X', [i, pc, 65013759]));
    }
     else if (tmp$ === 17) {
      tmp$_5 = i >> 21 & 31;
      if (tmp$_5 === 0)
        return this.e.mfc1_11rb$(s);
      else if (tmp$_5 === 2)
        return this.e.cfc1_11rb$(s);
      else if (tmp$_5 === 4)
        return this.e.mtc1_11rb$(s);
      else if (tmp$_5 === 6)
        return this.e.ctc1_11rb$(s);
      else if (tmp$_5 === 8) {
        tmp$_6 = i >> 16 & 64543;
        if (tmp$_6 === 17408)
          return this.e.bc1f_11rb$(s);
        else if (tmp$_6 === 17409)
          return this.e.bc1t_11rb$(s);
        else if (tmp$_6 === 17410)
          return this.e.bc1fl_11rb$(s);
        else if (tmp$_6 === 17411)
          return this.e.bc1tl_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (5) failed mask 0x%08X', [i, pc, -65077248]));
      }
       else if (tmp$_5 === 16) {
        tmp$_7 = i >> 0 & -67108801;
        if (tmp$_7 === 1140850688)
          return this.e.add_s_11rb$(s);
        else if (tmp$_7 === 1140850689)
          return this.e.sub_s_11rb$(s);
        else if (tmp$_7 === 1140850690)
          return this.e.mul_s_11rb$(s);
        else if (tmp$_7 === 1140850691)
          return this.e.div_s_11rb$(s);
        else if (tmp$_7 === 1140850692)
          return this.e.sqrt_s_11rb$(s);
        else if (tmp$_7 === 1140850693)
          return this.e.abs_s_11rb$(s);
        else if (tmp$_7 === 1140850694)
          return this.e.mov_s_11rb$(s);
        else if (tmp$_7 === 1140850695)
          return this.e.neg_s_11rb$(s);
        else if (tmp$_7 === 1140850700)
          return this.e.round_w_s_11rb$(s);
        else if (tmp$_7 === 1140850701)
          return this.e.trunc_w_s_11rb$(s);
        else if (tmp$_7 === 1140850702)
          return this.e.ceil_w_s_11rb$(s);
        else if (tmp$_7 === 1140850703)
          return this.e.floor_w_s_11rb$(s);
        else if (tmp$_7 === 1140850724)
          return this.e.cvt_w_s_11rb$(s);
        else if (tmp$_7 === 1140850736)
          return this.e.c_f_s_11rb$(s);
        else if (tmp$_7 === 1140850737)
          return this.e.c_un_s_11rb$(s);
        else if (tmp$_7 === 1140850738)
          return this.e.c_eq_s_11rb$(s);
        else if (tmp$_7 === 1140850739)
          return this.e.c_ueq_s_11rb$(s);
        else if (tmp$_7 === 1140850740)
          return this.e.c_olt_s_11rb$(s);
        else if (tmp$_7 === 1140850741)
          return this.e.c_ult_s_11rb$(s);
        else if (tmp$_7 === 1140850742)
          return this.e.c_ole_s_11rb$(s);
        else if (tmp$_7 === 1140850743)
          return this.e.c_ule_s_11rb$(s);
        else if (tmp$_7 === 1140850744)
          return this.e.c_sf_s_11rb$(s);
        else if (tmp$_7 === 1140850745)
          return this.e.c_ngle_s_11rb$(s);
        else if (tmp$_7 === 1140850746)
          return this.e.c_seq_s_11rb$(s);
        else if (tmp$_7 === 1140850747)
          return this.e.c_ngl_s_11rb$(s);
        else if (tmp$_7 === 1140850748)
          return this.e.c_lt_s_11rb$(s);
        else if (tmp$_7 === 1140850749)
          return this.e.c_nge_s_11rb$(s);
        else if (tmp$_7 === 1140850750)
          return this.e.c_le_s_11rb$(s);
        else if (tmp$_7 === 1140850751)
          return this.e.c_ngt_s_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (6) failed mask 0x%08X', [i, pc, -67108801]));
      }
       else if (tmp$_5 === 20)
        return this.e.cvt_s_w_11rb$(s);
      else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (7) failed mask 0x%08X', [i, pc, 65011712]));
    }
     else if (tmp$ === 18) {
      tmp$_8 = i >> 21 & 31;
      if (tmp$_8 === 3) {
        tmp$_9 = i >> 7 & 33030655;
        if (tmp$_9 === 9437184)
          return this.e.mfv_11rb$(s);
        else if (tmp$_9 === 9437185)
          return this.e.mfvc_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (8) failed mask 0x%08X', [i, pc, -67043456]));
      }
       else if (tmp$_8 === 7) {
        tmp$_10 = i >> 7 & 33030655;
        if (tmp$_10 === 9437184)
          return this.e.mtv_11rb$(s);
        else if (tmp$_10 === 9437185)
          return this.e.mtvc_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (9) failed mask 0x%08X', [i, pc, -67043456]));
      }
       else if (tmp$_8 === 8) {
        tmp$_11 = i >> 16 & 64515;
        if (tmp$_11 === 18432)
          return this.e.bvf_11rb$(s);
        else if (tmp$_11 === 18433)
          return this.e.bvt_11rb$(s);
        else if (tmp$_11 === 18434)
          return this.e.bvfl_11rb$(s);
        else if (tmp$_11 === 18435)
          return this.e.bvtl_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (10) failed mask 0x%08X', [i, pc, -66912256]));
      }
       else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (11) failed mask 0x%08X', [i, pc, 65011712]));
    }
     else if (tmp$ === 20)
      return this.e.beql_11rb$(s);
    else if (tmp$ === 21)
      return this.e.bnel_11rb$(s);
    else if (tmp$ === 22)
      return this.e.blezl_11rb$(s);
    else if (tmp$ === 23)
      return this.e.bgtzl_11rb$(s);
    else if (tmp$ === 24) {
      tmp$_12 = i >> 23 & 7;
      if (tmp$_12 === 0)
        return this.e.vadd_11rb$(s);
      else if (tmp$_12 === 1)
        return this.e.vsub_11rb$(s);
      else if (tmp$_12 === 2)
        return this.e.vsbn_11rb$(s);
      else if (tmp$_12 === 7)
        return this.e.vdiv_11rb$(s);
      else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (12) failed mask 0x%08X', [i, pc, 58720256]));
    }
     else if (tmp$ === 25) {
      tmp$_13 = i >> 23 & 7;
      if (tmp$_13 === 0)
        return this.e.vmul_11rb$(s);
      else if (tmp$_13 === 1)
        return this.e.vdot_11rb$(s);
      else if (tmp$_13 === 2)
        return this.e.vscl_11rb$(s);
      else if (tmp$_13 === 4)
        return this.e.vhdp_11rb$(s);
      else if (tmp$_13 === 5)
        return this.e.vcrs_t_11rb$(s);
      else if (tmp$_13 === 6)
        return this.e.vdet_11rb$(s);
      else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (13) failed mask 0x%08X', [i, pc, 58720256]));
    }
     else if (tmp$ === 26)
      return this.e.mfvme_11rb$(s);
    else if (tmp$ === 27) {
      tmp$_14 = i >> 23 & 7;
      if (tmp$_14 === 0)
        return this.e.vcmp_11rb$(s);
      else if (tmp$_14 === 2)
        return this.e.vmin_11rb$(s);
      else if (tmp$_14 === 3)
        return this.e.vmax_11rb$(s);
      else if (tmp$_14 === 5)
        return this.e.vscmp_11rb$(s);
      else if (tmp$_14 === 6)
        return this.e.vsge_11rb$(s);
      else if (tmp$_14 === 7)
        return this.e.vslt_11rb$(s);
      else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (14) failed mask 0x%08X', [i, pc, 58720256]));
    }
     else if (tmp$ === 28) {
      tmp$_15 = i >> 0 & 2047;
      if (tmp$_15 === 0)
        return this.e.halt_11rb$(s);
      else if (tmp$_15 === 36)
        return this.e.mfic_11rb$(s);
      else if (tmp$_15 === 38)
        return this.e.mtic_11rb$(s);
      else if (tmp$_15 === 61) {
        tmp$_16 = i >> 21 & 2047;
        if (tmp$_16 === 896)
          return this.e.mfdr_11rb$(s);
        else if (tmp$_16 === 900)
          return this.e.mtdr_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (15) failed mask 0x%08X', [i, pc, -2097152]));
      }
       else if (tmp$_15 === 62)
        return this.e.dret_11rb$(s);
      else if (tmp$_15 === 63)
        return this.e.dbreak_11rb$(s);
      else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (16) failed mask 0x%08X', [i, pc, 2047]));
    }
     else if (tmp$ === 31) {
      tmp$_17 = i >> 0 & 63;
      if (tmp$_17 === 0)
        return this.e.ext_11rb$(s);
      else if (tmp$_17 === 4)
        return this.e.ins_11rb$(s);
      else if (tmp$_17 === 32) {
        tmp$_18 = i >> 6 & 67076127;
        if (tmp$_18 === 32505858)
          return this.e.wsbh_11rb$(s);
        else if (tmp$_18 === 32505859)
          return this.e.wsbw_11rb$(s);
        else if (tmp$_18 === 32505872)
          return this.e.seb_11rb$(s);
        else if (tmp$_18 === 32505876)
          return this.e.bitrev_11rb$(s);
        else if (tmp$_18 === 32505880)
          return this.e.seh_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (17) failed mask 0x%08X', [i, pc, -2095168]));
      }
       else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (18) failed mask 0x%08X', [i, pc, 63]));
    }
     else if (tmp$ === 32)
      return this.e.lb_11rb$(s);
    else if (tmp$ === 33)
      return this.e.lh_11rb$(s);
    else if (tmp$ === 34)
      return this.e.lwl_11rb$(s);
    else if (tmp$ === 35)
      return this.e.lw_11rb$(s);
    else if (tmp$ === 36)
      return this.e.lbu_11rb$(s);
    else if (tmp$ === 37)
      return this.e.lhu_11rb$(s);
    else if (tmp$ === 38)
      return this.e.lwr_11rb$(s);
    else if (tmp$ === 40)
      return this.e.sb_11rb$(s);
    else if (tmp$ === 41)
      return this.e.sh_11rb$(s);
    else if (tmp$ === 42)
      return this.e.swl_11rb$(s);
    else if (tmp$ === 43)
      return this.e.sw_11rb$(s);
    else if (tmp$ === 44)
      return this.e.mtvme_11rb$(s);
    else if (tmp$ === 46)
      return this.e.swr_11rb$(s);
    else if (tmp$ === 47)
      return this.e.cache_11rb$(s);
    else if (tmp$ === 48)
      return this.e.ll_11rb$(s);
    else if (tmp$ === 49)
      return this.e.lwc1_11rb$(s);
    else if (tmp$ === 50)
      return this.e.lv_s_11rb$(s);
    else if (tmp$ === 52) {
      tmp$_19 = i >> 24 & 3;
      if (tmp$_19 === 0) {
        tmp$_20 = i >> 21 & 2023;
        if (tmp$_20 === 1664) {
          tmp$_21 = i >> 16 & 799;
          if (tmp$_21 === 0)
            return this.e.vmov_11rb$(s);
          else if (tmp$_21 === 1)
            return this.e.vabs_11rb$(s);
          else if (tmp$_21 === 2)
            return this.e.vneg_11rb$(s);
          else if (tmp$_21 === 3)
            return this.e.vidt_11rb$(s);
          else if (tmp$_21 === 4)
            return this.e.vsat0_11rb$(s);
          else if (tmp$_21 === 5)
            return this.e.vsat1_11rb$(s);
          else if (tmp$_21 === 6)
            return this.e.vzero_11rb$(s);
          else if (tmp$_21 === 7)
            return this.e.vone_11rb$(s);
          else if (tmp$_21 === 16)
            return this.e.vrcp_11rb$(s);
          else if (tmp$_21 === 17)
            return this.e.vrsq_11rb$(s);
          else if (tmp$_21 === 18)
            return this.e.vsin_11rb$(s);
          else if (tmp$_21 === 19)
            return this.e.vcos_11rb$(s);
          else if (tmp$_21 === 20)
            return this.e.vexp2_11rb$(s);
          else if (tmp$_21 === 21)
            return this.e.vlog2_11rb$(s);
          else if (tmp$_21 === 22)
            return this.e.vsqrt_11rb$(s);
          else if (tmp$_21 === 23)
            return this.e.vasin_11rb$(s);
          else if (tmp$_21 === 24)
            return this.e.vnrcp_11rb$(s);
          else if (tmp$_21 === 26)
            return this.e.vnsin_11rb$(s);
          else if (tmp$_21 === 28)
            return this.e.vrexp2_11rb$(s);
          else
            throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (19) failed mask 0x%08X', [i, pc, 52363264]));
        }
         else if (tmp$_20 === 1665) {
          tmp$_22 = i >> 16 & 799;
          if (tmp$_22 === 0)
            return this.e.vrnds_11rb$(s);
          else if (tmp$_22 === 1)
            return this.e.vrndi_11rb$(s);
          else if (tmp$_22 === 2)
            return this.e.vrndf1_11rb$(s);
          else if (tmp$_22 === 3)
            return this.e.vrndf2_11rb$(s);
          else if (tmp$_22 === 18)
            return this.e.vf2h_11rb$(s);
          else if (tmp$_22 === 19)
            return this.e.vh2f_11rb$(s);
          else if (tmp$_22 === 22)
            return this.e.vsbz_11rb$(s);
          else if (tmp$_22 === 23)
            return this.e.vlgb_11rb$(s);
          else if (tmp$_22 === 24)
            return this.e.vuc2i_11rb$(s);
          else if (tmp$_22 === 25)
            return this.e.vc2i_11rb$(s);
          else if (tmp$_22 === 26)
            return this.e.vus2i_11rb$(s);
          else if (tmp$_22 === 27)
            return this.e.vs2i_11rb$(s);
          else if (tmp$_22 === 28)
            return this.e.vi2uc_11rb$(s);
          else if (tmp$_22 === 29)
            return this.e.vi2c_11rb$(s);
          else if (tmp$_22 === 30)
            return this.e.vi2us_11rb$(s);
          else if (tmp$_22 === 31)
            return this.e.vi2s_11rb$(s);
          else
            throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (20) failed mask 0x%08X', [i, pc, 52363264]));
        }
         else if (tmp$_20 === 1666) {
          tmp$_23 = i >> 16 & 799;
          if (tmp$_23 === 0)
            return this.e.vsrt1_11rb$(s);
          else if (tmp$_23 === 1)
            return this.e.vsrt2_11rb$(s);
          else if (tmp$_23 === 2)
            return this.e.vbfy1_11rb$(s);
          else if (tmp$_23 === 3)
            return this.e.vbfy2_11rb$(s);
          else if (tmp$_23 === 4)
            return this.e.vocp_11rb$(s);
          else if (tmp$_23 === 5)
            return this.e.vsocp_11rb$(s);
          else if (tmp$_23 === 6)
            return this.e.vfad_11rb$(s);
          else if (tmp$_23 === 7)
            return this.e.vavg_11rb$(s);
          else if (tmp$_23 === 8)
            return this.e.vsrt3_11rb$(s);
          else if (tmp$_23 === 9)
            return this.e.vsrt4_11rb$(s);
          else if (tmp$_23 === 10)
            return this.e.vsgn_11rb$(s);
          else if (tmp$_23 === 16)
            return this.e.vmfvc_11rb$(s);
          else if (tmp$_23 === 17)
            return this.e.vmtvc_11rb$(s);
          else if (tmp$_23 === 25)
            return this.e.vt4444_q_11rb$(s);
          else if (tmp$_23 === 26)
            return this.e.vt5551_q_11rb$(s);
          else if (tmp$_23 === 27)
            return this.e.vt5650_q_11rb$(s);
          else
            throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (21) failed mask 0x%08X', [i, pc, 52363264]));
        }
         else if (tmp$_20 === 1667)
          return this.e.vcst_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (22) failed mask 0x%08X', [i, pc, -52428800]));
      }
       else if (tmp$_19 === 2) {
        tmp$_24 = i >> 21 & 2023;
        if (tmp$_24 === 1664)
          return this.e.vf2in_11rb$(s);
        else if (tmp$_24 === 1665)
          return this.e.vf2iz_11rb$(s);
        else if (tmp$_24 === 1666)
          return this.e.vf2iu_11rb$(s);
        else if (tmp$_24 === 1667)
          return this.e.vf2id_11rb$(s);
        else if (tmp$_24 === 1668)
          return this.e.vi2f_11rb$(s);
        else if (tmp$_24 === 1669) {
          tmp$_25 = i >> 19 & 99;
          if (tmp$_25 === 64)
            return this.e.vcmovt_11rb$(s);
          else if (tmp$_25 === 65)
            return this.e.vcmovf_11rb$(s);
          else
            throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (23) failed mask 0x%08X', [i, pc, 51904512]));
        }
         else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (24) failed mask 0x%08X', [i, pc, -52428800]));
      }
       else if (tmp$_19 === 3)
        return this.e.vwbn_11rb$(s);
      else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (25) failed mask 0x%08X', [i, pc, 50331648]));
    }
     else if (tmp$ === 53) {
      tmp$_26 = i >> 1 & 1;
      if (tmp$_26 === 0)
        return this.e.lvl_q_11rb$(s);
      else if (tmp$_26 === 1)
        return this.e.lvr_q_11rb$(s);
      else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (26) failed mask 0x%08X', [i, pc, 2]));
    }
     else if (tmp$ === 54)
      return this.e.lv_q_11rb$(s);
    else if (tmp$ === 55) {
      tmp$_27 = i >> 24 & 3;
      if (tmp$_27 === 0)
        return this.e.vpfxs_11rb$(s);
      else if (tmp$_27 === 1)
        return this.e.vpfxt_11rb$(s);
      else if (tmp$_27 === 2)
        return this.e.vpfxd_11rb$(s);
      else if (tmp$_27 === 3) {
        tmp$_28 = i >> 23 & 505;
        if (tmp$_28 === 440)
          return this.e.viim_11rb$(s);
        else if (tmp$_28 === 441)
          return this.e.vfim_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (27) failed mask 0x%08X', [i, pc, -58720256]));
      }
       else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (28) failed mask 0x%08X', [i, pc, 50331648]));
    }
     else if (tmp$ === 56)
      return this.e.sc_11rb$(s);
    else if (tmp$ === 57)
      return this.e.swc1_11rb$(s);
    else if (tmp$ === 58)
      return this.e.sv_s_11rb$(s);
    else if (tmp$ === 60) {
      tmp$_29 = i >> 23 & 7;
      if (tmp$_29 === 0)
        return this.e.vmmul_11rb$(s);
      else if (tmp$_29 === 1) {
        tmp$_30 = i >> 7 & 33030401;
        if (tmp$_30 === 31457280)
          return this.e.vhtfm2_11rb$(s);
        else if (tmp$_30 === 31457281)
          return this.e.vtfm2_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (29) failed mask 0x%08X', [i, pc, -67075968]));
      }
       else if (tmp$_29 === 2) {
        tmp$_31 = i >> 7 & 33030401;
        if (tmp$_31 === 31457281)
          return this.e.vhtfm3_11rb$(s);
        else if (tmp$_31 === 31457536)
          return this.e.vtfm3_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (30) failed mask 0x%08X', [i, pc, -67075968]));
      }
       else if (tmp$_29 === 3) {
        tmp$_32 = i >> 7 & 33030401;
        if (tmp$_32 === 31457536)
          return this.e.vhtfm4_11rb$(s);
        else if (tmp$_32 === 31457537)
          return this.e.vtfm4_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (31) failed mask 0x%08X', [i, pc, -67075968]));
      }
       else if (tmp$_29 === 4)
        return this.e.vmscl_11rb$(s);
      else if (tmp$_29 === 5) {
        tmp$_33 = i >> 7 & 33030401;
        if (tmp$_33 === 31457536)
          return this.e.vcrsp_t_11rb$(s);
        else if (tmp$_33 === 31457537)
          return this.e.vqmul_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (32) failed mask 0x%08X', [i, pc, -67075968]));
      }
       else if (tmp$_29 === 7) {
        tmp$_34 = i >> 21 & 2019;
        if (tmp$_34 === 1920) {
          tmp$_35 = i >> 16 & 927;
          if (tmp$_35 === 896)
            return this.e.vmmov_11rb$(s);
          else if (tmp$_35 === 899)
            return this.e.vmidt_11rb$(s);
          else if (tmp$_35 === 902)
            return this.e.vmzero_11rb$(s);
          else if (tmp$_35 === 903)
            return this.e.vmone_11rb$(s);
          else
            throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (33) failed mask 0x%08X', [i, pc, 60751872]));
        }
         else if (tmp$_34 === 1921)
          return this.e.vrot_11rb$(s);
        else
          throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (34) failed mask 0x%08X', [i, pc, -60817408]));
      }
       else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (35) failed mask 0x%08X', [i, pc, 58720256]));
    }
     else if (tmp$ === 61) {
      tmp$_36 = i >> 1 & 1;
      if (tmp$_36 === 0)
        return this.e.svl_q_11rb$(s);
      else if (tmp$_36 === 1)
        return this.e.svr_q_11rb$(s);
      else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (36) failed mask 0x%08X', [i, pc, 2]));
    }
     else if (tmp$ === 62)
      return this.e.sv_q_11rb$(s);
    else if (tmp$ === 63) {
      tmp$_37 = i >> 0 & 67108863;
      if (tmp$_37 === 67043328)
        return this.e.vnop_11rb$(s);
      else if (tmp$_37 === 67044128)
        return this.e.vsync_11rb$(s);
      else if (tmp$_37 === 67044365)
        return this.e.vflush_11rb$(s);
      else
        throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (37) failed mask 0x%08X', [i, pc, 67108863]));
    }
     else
      throw Exception_init_0(format_0('Invalid instruction 0x%08X at 0x%08X (38) failed mask 0x%08X', [i, pc, -67108864]));
  };
  InstructionDispatcher.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InstructionDispatcher',
    interfaces: []
  };
  function dispatch($receiver, s) {
    s.IR = s.mem.lw_za3lpa$(s._PC);
    $receiver.dispatch_8olpll$(s, s._PC, s.IR);
  }
  function InstructionEvaluator() {
    InstructionDecoder.call(this);
  }
  InstructionEvaluator.prototype.unimplemented_1wp5la$ = function (s, i) {
    throw new NotImplementedError_init('An operation is not implemented: ' + ('unimplemented: ' + i.name + ' : ' + toString(i)));
  };
  InstructionEvaluator.prototype.add_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().add);
  };
  InstructionEvaluator.prototype.addu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().addu);
  };
  InstructionEvaluator.prototype.addi_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().addi);
  };
  InstructionEvaluator.prototype.addiu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().addiu);
  };
  InstructionEvaluator.prototype.sub_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sub);
  };
  InstructionEvaluator.prototype.subu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().subu);
  };
  InstructionEvaluator.prototype.and_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().and);
  };
  InstructionEvaluator.prototype.andi_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().andi);
  };
  InstructionEvaluator.prototype.nor_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().nor);
  };
  InstructionEvaluator.prototype.or_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().or);
  };
  InstructionEvaluator.prototype.ori_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ori);
  };
  InstructionEvaluator.prototype.xor_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().xor);
  };
  InstructionEvaluator.prototype.xori_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().xori);
  };
  InstructionEvaluator.prototype.sll_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sll);
  };
  InstructionEvaluator.prototype.sllv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sllv);
  };
  InstructionEvaluator.prototype.sra_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sra);
  };
  InstructionEvaluator.prototype.srav_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().srav);
  };
  InstructionEvaluator.prototype.srl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().srl);
  };
  InstructionEvaluator.prototype.srlv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().srlv);
  };
  InstructionEvaluator.prototype.rotr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().rotr);
  };
  InstructionEvaluator.prototype.rotrv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().rotrv);
  };
  InstructionEvaluator.prototype.slt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().slt);
  };
  InstructionEvaluator.prototype.slti_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().slti);
  };
  InstructionEvaluator.prototype.sltu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sltu);
  };
  InstructionEvaluator.prototype.sltiu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sltiu);
  };
  InstructionEvaluator.prototype.lui_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lui);
  };
  InstructionEvaluator.prototype.seb_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().seb);
  };
  InstructionEvaluator.prototype.seh_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().seh);
  };
  InstructionEvaluator.prototype.bitrev_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bitrev);
  };
  InstructionEvaluator.prototype.max_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().max);
  };
  InstructionEvaluator.prototype.min_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().min);
  };
  InstructionEvaluator.prototype.div_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().div);
  };
  InstructionEvaluator.prototype.divu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().divu);
  };
  InstructionEvaluator.prototype.mult_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mult);
  };
  InstructionEvaluator.prototype.multu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().multu);
  };
  InstructionEvaluator.prototype.madd_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().madd);
  };
  InstructionEvaluator.prototype.maddu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().maddu);
  };
  InstructionEvaluator.prototype.msub_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().msub);
  };
  InstructionEvaluator.prototype.msubu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().msubu);
  };
  InstructionEvaluator.prototype.mfhi_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfhi);
  };
  InstructionEvaluator.prototype.mflo_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mflo);
  };
  InstructionEvaluator.prototype.mthi_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mthi);
  };
  InstructionEvaluator.prototype.mtlo_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtlo);
  };
  InstructionEvaluator.prototype.movz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().movz);
  };
  InstructionEvaluator.prototype.movn_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().movn);
  };
  InstructionEvaluator.prototype.ext_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ext);
  };
  InstructionEvaluator.prototype.ins_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ins);
  };
  InstructionEvaluator.prototype.clz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().clz);
  };
  InstructionEvaluator.prototype.clo_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().clo);
  };
  InstructionEvaluator.prototype.wsbh_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().wsbh);
  };
  InstructionEvaluator.prototype.wsbw_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().wsbw);
  };
  InstructionEvaluator.prototype.beq_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().beq);
  };
  InstructionEvaluator.prototype.beql_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().beql);
  };
  InstructionEvaluator.prototype.bgez_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bgez);
  };
  InstructionEvaluator.prototype.bgezl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bgezl);
  };
  InstructionEvaluator.prototype.bgezal_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bgezal);
  };
  InstructionEvaluator.prototype.bgezall_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bgezall);
  };
  InstructionEvaluator.prototype.bltz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bltz);
  };
  InstructionEvaluator.prototype.bltzl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bltzl);
  };
  InstructionEvaluator.prototype.bltzal_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bltzal);
  };
  InstructionEvaluator.prototype.bltzall_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bltzall);
  };
  InstructionEvaluator.prototype.blez_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().blez);
  };
  InstructionEvaluator.prototype.blezl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().blezl);
  };
  InstructionEvaluator.prototype.bgtz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bgtz);
  };
  InstructionEvaluator.prototype.bgtzl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bgtzl);
  };
  InstructionEvaluator.prototype.bne_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bne);
  };
  InstructionEvaluator.prototype.bnel_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bnel);
  };
  InstructionEvaluator.prototype.j_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().j);
  };
  InstructionEvaluator.prototype.jr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().jr);
  };
  InstructionEvaluator.prototype.jalr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().jalr);
  };
  InstructionEvaluator.prototype.jal_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().jal);
  };
  InstructionEvaluator.prototype.bc1f_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bc1f);
  };
  InstructionEvaluator.prototype.bc1t_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bc1t);
  };
  InstructionEvaluator.prototype.bc1fl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bc1fl);
  };
  InstructionEvaluator.prototype.bc1tl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bc1tl);
  };
  InstructionEvaluator.prototype.lb_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lb);
  };
  InstructionEvaluator.prototype.lh_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lh);
  };
  InstructionEvaluator.prototype.lw_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lw);
  };
  InstructionEvaluator.prototype.lwl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lwl);
  };
  InstructionEvaluator.prototype.lwr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lwr);
  };
  InstructionEvaluator.prototype.lbu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lbu);
  };
  InstructionEvaluator.prototype.lhu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lhu);
  };
  InstructionEvaluator.prototype.sb_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sb);
  };
  InstructionEvaluator.prototype.sh_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sh);
  };
  InstructionEvaluator.prototype.sw_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sw);
  };
  InstructionEvaluator.prototype.swl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().swl);
  };
  InstructionEvaluator.prototype.swr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().swr);
  };
  InstructionEvaluator.prototype.ll_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ll);
  };
  InstructionEvaluator.prototype.sc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sc);
  };
  InstructionEvaluator.prototype.lwc1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lwc1);
  };
  InstructionEvaluator.prototype.swc1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().swc1);
  };
  InstructionEvaluator.prototype.add_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().add_s);
  };
  InstructionEvaluator.prototype.sub_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sub_s);
  };
  InstructionEvaluator.prototype.mul_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mul_s);
  };
  InstructionEvaluator.prototype.div_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().div_s);
  };
  InstructionEvaluator.prototype.sqrt_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sqrt_s);
  };
  InstructionEvaluator.prototype.abs_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().abs_s);
  };
  InstructionEvaluator.prototype.mov_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mov_s);
  };
  InstructionEvaluator.prototype.neg_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().neg_s);
  };
  InstructionEvaluator.prototype.round_w_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().round_w_s);
  };
  InstructionEvaluator.prototype.trunc_w_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().trunc_w_s);
  };
  InstructionEvaluator.prototype.ceil_w_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ceil_w_s);
  };
  InstructionEvaluator.prototype.floor_w_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().floor_w_s);
  };
  InstructionEvaluator.prototype.cvt_s_w_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().cvt_s_w);
  };
  InstructionEvaluator.prototype.cvt_w_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().cvt_w_s);
  };
  InstructionEvaluator.prototype.mfc1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfc1);
  };
  InstructionEvaluator.prototype.mtc1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtc1);
  };
  InstructionEvaluator.prototype.cfc1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().cfc1);
  };
  InstructionEvaluator.prototype.ctc1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ctc1);
  };
  InstructionEvaluator.prototype.c_f_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_f_s);
  };
  InstructionEvaluator.prototype.c_un_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_un_s);
  };
  InstructionEvaluator.prototype.c_eq_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_eq_s);
  };
  InstructionEvaluator.prototype.c_ueq_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_ueq_s);
  };
  InstructionEvaluator.prototype.c_olt_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_olt_s);
  };
  InstructionEvaluator.prototype.c_ult_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_ult_s);
  };
  InstructionEvaluator.prototype.c_ole_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_ole_s);
  };
  InstructionEvaluator.prototype.c_ule_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_ule_s);
  };
  InstructionEvaluator.prototype.c_sf_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_sf_s);
  };
  InstructionEvaluator.prototype.c_ngle_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_ngle_s);
  };
  InstructionEvaluator.prototype.c_seq_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_seq_s);
  };
  InstructionEvaluator.prototype.c_ngl_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_ngl_s);
  };
  InstructionEvaluator.prototype.c_lt_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_lt_s);
  };
  InstructionEvaluator.prototype.c_nge_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_nge_s);
  };
  InstructionEvaluator.prototype.c_le_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_le_s);
  };
  InstructionEvaluator.prototype.c_ngt_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().c_ngt_s);
  };
  InstructionEvaluator.prototype.syscall_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().syscall);
  };
  InstructionEvaluator.prototype.cache_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().cache);
  };
  InstructionEvaluator.prototype.sync_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sync);
  };
  InstructionEvaluator.prototype._break_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance()._break);
  };
  InstructionEvaluator.prototype.dbreak_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().dbreak);
  };
  InstructionEvaluator.prototype.halt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().halt);
  };
  InstructionEvaluator.prototype.dret_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().dret);
  };
  InstructionEvaluator.prototype.eret_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().eret);
  };
  InstructionEvaluator.prototype.mfic_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfic);
  };
  InstructionEvaluator.prototype.mtic_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtic);
  };
  InstructionEvaluator.prototype.mfdr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfdr);
  };
  InstructionEvaluator.prototype.mtdr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtdr);
  };
  InstructionEvaluator.prototype.cfc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().cfc0);
  };
  InstructionEvaluator.prototype.ctc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ctc0);
  };
  InstructionEvaluator.prototype.mfc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfc0);
  };
  InstructionEvaluator.prototype.mtc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtc0);
  };
  InstructionEvaluator.prototype.mfv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfv);
  };
  InstructionEvaluator.prototype.mfvc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfvc);
  };
  InstructionEvaluator.prototype.mtv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtv);
  };
  InstructionEvaluator.prototype.mtvc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtvc);
  };
  InstructionEvaluator.prototype.lv_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lv_s);
  };
  InstructionEvaluator.prototype.lv_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lv_q);
  };
  InstructionEvaluator.prototype.lvl_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lvl_q);
  };
  InstructionEvaluator.prototype.lvr_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().lvr_q);
  };
  InstructionEvaluator.prototype.sv_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sv_q);
  };
  InstructionEvaluator.prototype.vdot_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vdot);
  };
  InstructionEvaluator.prototype.vscl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vscl);
  };
  InstructionEvaluator.prototype.vsge_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsge);
  };
  InstructionEvaluator.prototype.vslt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vslt);
  };
  InstructionEvaluator.prototype.vrot_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrot);
  };
  InstructionEvaluator.prototype.vzero_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vzero);
  };
  InstructionEvaluator.prototype.vone_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vone);
  };
  InstructionEvaluator.prototype.vmov_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmov);
  };
  InstructionEvaluator.prototype.vabs_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vabs);
  };
  InstructionEvaluator.prototype.vneg_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vneg);
  };
  InstructionEvaluator.prototype.vocp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vocp);
  };
  InstructionEvaluator.prototype.vsgn_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsgn);
  };
  InstructionEvaluator.prototype.vrcp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrcp);
  };
  InstructionEvaluator.prototype.vrsq_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrsq);
  };
  InstructionEvaluator.prototype.vsin_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsin);
  };
  InstructionEvaluator.prototype.vcos_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcos);
  };
  InstructionEvaluator.prototype.vexp2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vexp2);
  };
  InstructionEvaluator.prototype.vlog2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vlog2);
  };
  InstructionEvaluator.prototype.vsqrt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsqrt);
  };
  InstructionEvaluator.prototype.vasin_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vasin);
  };
  InstructionEvaluator.prototype.vnrcp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vnrcp);
  };
  InstructionEvaluator.prototype.vnsin_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vnsin);
  };
  InstructionEvaluator.prototype.vrexp2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrexp2);
  };
  InstructionEvaluator.prototype.vsat0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsat0);
  };
  InstructionEvaluator.prototype.vsat1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsat1);
  };
  InstructionEvaluator.prototype.vcst_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcst);
  };
  InstructionEvaluator.prototype.vmmul_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmmul);
  };
  InstructionEvaluator.prototype.vhdp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vhdp);
  };
  InstructionEvaluator.prototype.vcrs_t_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcrs_t);
  };
  InstructionEvaluator.prototype.vcrsp_t_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcrsp_t);
  };
  InstructionEvaluator.prototype.vi2c_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2c);
  };
  InstructionEvaluator.prototype.vi2uc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2uc);
  };
  InstructionEvaluator.prototype.vtfm2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vtfm2);
  };
  InstructionEvaluator.prototype.vtfm3_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vtfm3);
  };
  InstructionEvaluator.prototype.vtfm4_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vtfm4);
  };
  InstructionEvaluator.prototype.vhtfm2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vhtfm2);
  };
  InstructionEvaluator.prototype.vhtfm3_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vhtfm3);
  };
  InstructionEvaluator.prototype.vhtfm4_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vhtfm4);
  };
  InstructionEvaluator.prototype.vsrt3_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsrt3);
  };
  InstructionEvaluator.prototype.vfad_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vfad);
  };
  InstructionEvaluator.prototype.vmin_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmin);
  };
  InstructionEvaluator.prototype.vmax_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmax);
  };
  InstructionEvaluator.prototype.vadd_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vadd);
  };
  InstructionEvaluator.prototype.vsub_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsub);
  };
  InstructionEvaluator.prototype.vdiv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vdiv);
  };
  InstructionEvaluator.prototype.vmul_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmul);
  };
  InstructionEvaluator.prototype.vidt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vidt);
  };
  InstructionEvaluator.prototype.vmidt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmidt);
  };
  InstructionEvaluator.prototype.viim_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().viim);
  };
  InstructionEvaluator.prototype.vmmov_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmmov);
  };
  InstructionEvaluator.prototype.vmzero_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmzero);
  };
  InstructionEvaluator.prototype.vmone_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmone);
  };
  InstructionEvaluator.prototype.vnop_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vnop);
  };
  InstructionEvaluator.prototype.vsync_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsync);
  };
  InstructionEvaluator.prototype.vflush_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vflush);
  };
  InstructionEvaluator.prototype.vpfxd_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vpfxd);
  };
  InstructionEvaluator.prototype.vpfxs_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vpfxs);
  };
  InstructionEvaluator.prototype.vpfxt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vpfxt);
  };
  InstructionEvaluator.prototype.vdet_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vdet);
  };
  InstructionEvaluator.prototype.vrnds_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrnds);
  };
  InstructionEvaluator.prototype.vrndi_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrndi);
  };
  InstructionEvaluator.prototype.vrndf1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrndf1);
  };
  InstructionEvaluator.prototype.vrndf2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrndf2);
  };
  InstructionEvaluator.prototype.vcmp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcmp);
  };
  InstructionEvaluator.prototype.vcmovf_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcmovf);
  };
  InstructionEvaluator.prototype.vcmovt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vcmovt);
  };
  InstructionEvaluator.prototype.vavg_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vavg);
  };
  InstructionEvaluator.prototype.vf2id_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2id);
  };
  InstructionEvaluator.prototype.vf2in_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2in);
  };
  InstructionEvaluator.prototype.vf2iu_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2iu);
  };
  InstructionEvaluator.prototype.vf2iz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2iz);
  };
  InstructionEvaluator.prototype.vi2f_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2f);
  };
  InstructionEvaluator.prototype.vscmp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vscmp);
  };
  InstructionEvaluator.prototype.vmscl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmscl);
  };
  InstructionEvaluator.prototype.vt4444_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vt4444_q);
  };
  InstructionEvaluator.prototype.vt5551_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vt5551_q);
  };
  InstructionEvaluator.prototype.vt5650_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vt5650_q);
  };
  InstructionEvaluator.prototype.vmfvc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmfvc);
  };
  InstructionEvaluator.prototype.vmtvc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmtvc);
  };
  InstructionEvaluator.prototype.mfvme_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfvme);
  };
  InstructionEvaluator.prototype.mtvme_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtvme);
  };
  InstructionEvaluator.prototype.sv_s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sv_s);
  };
  InstructionEvaluator.prototype.vfim_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vfim);
  };
  InstructionEvaluator.prototype.svl_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().svl_q);
  };
  InstructionEvaluator.prototype.svr_q_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().svr_q);
  };
  InstructionEvaluator.prototype.vbfy1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vbfy1);
  };
  InstructionEvaluator.prototype.vbfy2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vbfy2);
  };
  InstructionEvaluator.prototype.vf2h_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vf2h);
  };
  InstructionEvaluator.prototype.vh2f_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vh2f);
  };
  InstructionEvaluator.prototype.vi2s_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2s);
  };
  InstructionEvaluator.prototype.vi2us_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vi2us);
  };
  InstructionEvaluator.prototype.vlgb_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vlgb);
  };
  InstructionEvaluator.prototype.vqmul_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vqmul);
  };
  InstructionEvaluator.prototype.vs2i_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vs2i);
  };
  InstructionEvaluator.prototype.vc2i_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vc2i);
  };
  InstructionEvaluator.prototype.vuc2i_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vuc2i);
  };
  InstructionEvaluator.prototype.vsbn_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsbn);
  };
  InstructionEvaluator.prototype.vsbz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsbz);
  };
  InstructionEvaluator.prototype.vsocp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsocp);
  };
  InstructionEvaluator.prototype.vsrt1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsrt1);
  };
  InstructionEvaluator.prototype.vsrt2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsrt2);
  };
  InstructionEvaluator.prototype.vsrt4_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsrt4);
  };
  InstructionEvaluator.prototype.vus2i_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vus2i);
  };
  InstructionEvaluator.prototype.vwbn_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vwbn);
  };
  InstructionEvaluator.prototype.bvf_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvf);
  };
  InstructionEvaluator.prototype.bvt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvt);
  };
  InstructionEvaluator.prototype.bvfl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvfl);
  };
  InstructionEvaluator.prototype.bvtl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvtl);
  };
  InstructionEvaluator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InstructionEvaluator',
    interfaces: [InstructionDecoder]
  };
  function InstructionOpcodeDecoder() {
    InstructionOpcodeDecoder_instance = this;
    this.evaluator_0 = new InstructionOpcodeDecoder$ResultInstructionEvaluator();
    this.dispatcher_0 = new InstructionDispatcher(this.evaluator_0);
  }
  function InstructionOpcodeDecoder$Result(result) {
    if (result === void 0)
      result = Instructions_getInstance().add;
    this.result = result;
  }
  InstructionOpcodeDecoder$Result.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Result',
    interfaces: []
  };
  InstructionOpcodeDecoder$Result.prototype.component1 = function () {
    return this.result;
  };
  InstructionOpcodeDecoder$Result.prototype.copy_9b8q6v$ = function (result) {
    return new InstructionOpcodeDecoder$Result(result === void 0 ? this.result : result);
  };
  InstructionOpcodeDecoder$Result.prototype.toString = function () {
    return 'Result(result=' + Kotlin.toString(this.result) + ')';
  };
  InstructionOpcodeDecoder$Result.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.result) | 0;
    return result;
  };
  InstructionOpcodeDecoder$Result.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.result, other.result))));
  };
  function InstructionOpcodeDecoder$ResultInstructionEvaluator() {
    InstructionEvaluator.call(this);
  }
  InstructionOpcodeDecoder$ResultInstructionEvaluator.prototype.unimplemented_1wp5la$ = function (s, i) {
    s.result = i;
  };
  InstructionOpcodeDecoder$ResultInstructionEvaluator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ResultInstructionEvaluator',
    interfaces: [InstructionEvaluator]
  };
  InstructionOpcodeDecoder.prototype.invoke_za3lpa$ = function (i) {
    var $receiver = new InstructionOpcodeDecoder$Result();
    this.dispatcher_0.dispatch_8olpll$($receiver, 0, i);
    return $receiver.result;
  };
  InstructionOpcodeDecoder.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'InstructionOpcodeDecoder',
    interfaces: []
  };
  var InstructionOpcodeDecoder_instance = null;
  function InstructionOpcodeDecoder_getInstance() {
    if (InstructionOpcodeDecoder_instance === null) {
      new InstructionOpcodeDecoder();
    }
    return InstructionOpcodeDecoder_instance;
  }
  function Instructions() {
    Instructions_instance = this;
    this.add = ID('add', VM('000000:rs:rt:rd:00000:100000'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.addu = ID('addu', VM('000000:rs:rt:rd:00000:100001'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.addi = ID('addi', VM('001000:rs:rt:imm16'), '%t, %s, %i', ADDR_TYPE_NONE, 0);
    this.addiu = ID('addiu', VM('001001:rs:rt:imm16'), '%t, %s, %i', ADDR_TYPE_NONE, 0);
    this.sub = ID('sub', VM('000000:rs:rt:rd:00000:100010'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.subu = ID('subu', VM('000000:rs:rt:rd:00000:100011'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.and = ID('and', VM('000000:rs:rt:rd:00000:100100'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.andi = ID('andi', VM('001100:rs:rt:imm16'), '%t, %s, %I', ADDR_TYPE_NONE, 0);
    this.nor = ID('nor', VM('000000:rs:rt:rd:00000:100111'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.or = ID('or', VM('000000:rs:rt:rd:00000:100101'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.ori = ID('ori', VM('001101:rs:rt:imm16'), '%t, %s, %I', ADDR_TYPE_NONE, 0);
    this.xor = ID('xor', VM('000000:rs:rt:rd:00000:100110'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.xori = ID('xori', VM('001110:rs:rt:imm16'), '%t, %s, %I', ADDR_TYPE_NONE, 0);
    this.sll = ID('sll', VM('000000:00000:rt:rd:sa:000000'), '%d, %t, %a', ADDR_TYPE_NONE, 0);
    this.sllv = ID('sllv', VM('000000:rs:rt:rd:00000:000100'), '%d, %t, %s', ADDR_TYPE_NONE, 0);
    this.sra = ID('sra', VM('000000:00000:rt:rd:sa:000011'), '%d, %t, %a', ADDR_TYPE_NONE, 0);
    this.srav = ID('srav', VM('000000:rs:rt:rd:00000:000111'), '%d, %t, %s', ADDR_TYPE_NONE, 0);
    this.srl = ID('srl', VM('000000:00000:rt:rd:sa:000010'), '%d, %t, %a', ADDR_TYPE_NONE, 0);
    this.srlv = ID('srlv', VM('000000:rs:rt:rd:00000:000110'), '%d, %t, %s', ADDR_TYPE_NONE, 0);
    this.rotr = ID('rotr', VM('000000:00001:rt:rd:sa:000010'), '%d, %t, %a', ADDR_TYPE_NONE, 0);
    this.rotrv = ID('rotrv', VM('000000:rs:rt:rd:00001:000110'), '%d, %t, %s', ADDR_TYPE_NONE, 0);
    this.slt = ID('slt', VM('000000:rs:rt:rd:00000:101010'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.slti = ID('slti', VM('001010:rs:rt:imm16'), '%t, %s, %i', ADDR_TYPE_NONE, 0);
    this.sltu = ID('sltu', VM('000000:rs:rt:rd:00000:101011'), '%d, %s, %t', ADDR_TYPE_NONE, 0);
    this.sltiu = ID('sltiu', VM('001011:rs:rt:imm16'), '%t, %s, %i', ADDR_TYPE_NONE, 0);
    this.lui = ID('lui', VM('001111:00000:rt:imm16'), '%t, %I', ADDR_TYPE_NONE, 0);
    this.seb = ID('seb', VM('011111:00000:rt:rd:10000:100000'), '%d, %t', ADDR_TYPE_NONE, 0);
    this.seh = ID('seh', VM('011111:00000:rt:rd:11000:100000'), '%d, %t', ADDR_TYPE_NONE, 0);
    this.bitrev = ID('bitrev', VM('011111:00000:rt:rd:10100:100000'), '%d, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.max = ID('max', VM('000000:rs:rt:rd:00000:101100'), '%d, %s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.min = ID('min', VM('000000:rs:rt:rd:00000:101101'), '%d, %s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.div = ID('div', VM('000000:rs:rt:00000:00000:011010'), '%s, %t', ADDR_TYPE_NONE, 0);
    this.divu = ID('divu', VM('000000:rs:rt:00000:00000:011011'), '%s, %t', ADDR_TYPE_NONE, 0);
    this.mult = ID('mult', VM('000000:rs:rt:00000:00000:011000'), '%s, %t', ADDR_TYPE_NONE, 0);
    this.multu = ID('multu', VM('000000:rs:rt:00000:00000:011001'), '%s, %t', ADDR_TYPE_NONE, 0);
    this.madd = ID('madd', VM('000000:rs:rt:00000:00000:011100'), '%s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.maddu = ID('maddu', VM('000000:rs:rt:00000:00000:011101'), '%s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.msub = ID('msub', VM('000000:rs:rt:00000:00000:101110'), '%s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.msubu = ID('msubu', VM('000000:rs:rt:00000:00000:101111'), '%s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mfhi = ID('mfhi', VM('000000:00000:00000:rd:00000:010000'), '%d', ADDR_TYPE_NONE, 0);
    this.mflo = ID('mflo', VM('000000:00000:00000:rd:00000:010010'), '%d', ADDR_TYPE_NONE, 0);
    this.mthi = ID('mthi', VM('000000:rs:00000:00000:00000:010001'), '%s', ADDR_TYPE_NONE, 0);
    this.mtlo = ID('mtlo', VM('000000:rs:00000:00000:00000:010011'), '%s', ADDR_TYPE_NONE, 0);
    this.movz = ID('movz', VM('000000:rs:rt:rd:00000:001010'), '%d, %s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.movn = ID('movn', VM('000000:rs:rt:rd:00000:001011'), '%d, %s, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.ext = ID('ext', VM('011111:rs:rt:msb:lsb:000000'), '%t, %s, %a, %ne', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.ins = ID('ins', VM('011111:rs:rt:msb:lsb:000100'), '%t, %s, %a, %ni', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.clz = ID('clz', VM('000000:rs:00000:rd:00000:010110'), '%d, %s', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.clo = ID('clo', VM('000000:rs:00000:rd:00000:010111'), '%d, %s', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.wsbh = ID('wsbh', VM('011111:00000:rt:rd:00010:100000'), '%d, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.wsbw = ID('wsbw', VM('011111:00000:rt:rd:00011:100000'), '%d, %t', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.beq = ID('beq', VM('000100:rs:rt:imm16'), '%s, %t, %O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.beql = ID('beql', VM('010100:rs:rt:imm16'), '%s, %t, %O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.bgez = ID('bgez', VM('000001:rs:00001:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.bgezl = ID('bgezl', VM('000001:rs:00011:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.bgezal = ID('bgezal', VM('000001:rs:10001:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_JAL);
    this.bgezall = ID('bgezall', VM('000001:rs:10011:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_LIKELY | INSTR_TYPE_JAL);
    this.bltz = ID('bltz', VM('000001:rs:00000:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.bltzl = ID('bltzl', VM('000001:rs:00010:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.bltzal = ID('bltzal', VM('000001:rs:10000:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_JAL);
    this.bltzall = ID('bltzall', VM('000001:rs:10010:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_LIKELY | INSTR_TYPE_JAL);
    this.blez = ID('blez', VM('000110:rs:00000:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.blezl = ID('blezl', VM('010110:rs:00000:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.bgtz = ID('bgtz', VM('000111:rs:00000:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.bgtzl = ID('bgtzl', VM('010111:rs:00000:imm16'), '%s, %O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.bne = ID('bne', VM('000101:rs:rt:imm16'), '%s, %t, %O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.bnel = ID('bnel', VM('010101:rs:rt:imm16'), '%s, %t, %O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.j = ID('j', VM('000010:imm26'), '%j', ADDR_TYPE_26, INSTR_TYPE_JUMP);
    this.jr = ID('jr', VM('000000:rs:00000:00000:00000:001000'), '%J', ADDR_TYPE_REG, INSTR_TYPE_JUMP);
    this.jalr = ID('jalr', VM('000000:rs:00000:rd:00000:001001'), '%J, %d', ADDR_TYPE_REG, INSTR_TYPE_JAL);
    this.jal = ID('jal', VM('000011:imm26'), '%j', ADDR_TYPE_26, INSTR_TYPE_JAL);
    this.bc1f = ID('bc1f', VM('010001:01000:00000:imm16'), '%O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.bc1t = ID('bc1t', VM('010001:01000:00001:imm16'), '%O', ADDR_TYPE_16, INSTR_TYPE_B);
    this.bc1fl = ID('bc1fl', VM('010001:01000:00010:imm16'), '%O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.bc1tl = ID('bc1tl', VM('010001:01000:00011:imm16'), '%O', ADDR_TYPE_16, INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.lb = ID('lb', VM('100000:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.lh = ID('lh', VM('100001:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.lw = ID('lw', VM('100011:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.lwl = ID('lwl', VM('100010:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.lwr = ID('lwr', VM('100110:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.lbu = ID('lbu', VM('100100:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.lhu = ID('lhu', VM('100101:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.sb = ID('sb', VM('101000:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.sh = ID('sh', VM('101001:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.sw = ID('sw', VM('101011:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.swl = ID('swl', VM('101010:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.swr = ID('swr', VM('101110:rs:rt:imm16'), '%t, %i(%s)', ADDR_TYPE_NONE, 0);
    this.ll = ID('ll', VM('110000:rs:rt:imm16'), '%t, %O', ADDR_TYPE_NONE, 0);
    this.sc = ID('sc', VM('111000:rs:rt:imm16'), '%t, %O', ADDR_TYPE_NONE, 0);
    this.lwc1 = ID('lwc1', VM('110001:rs:ft:imm16'), '%T, %i(%s)', ADDR_TYPE_NONE, 0);
    this.swc1 = ID('swc1', VM('111001:rs:ft:imm16'), '%T, %i(%s)', ADDR_TYPE_NONE, 0);
    this.add_s = ID('add.s', VM('010001:10000:ft:fs:fd:000000'), '%D, %S, %T', ADDR_TYPE_NONE, 0);
    this.sub_s = ID('sub.s', VM('010001:10000:ft:fs:fd:000001'), '%D, %S, %T', ADDR_TYPE_NONE, 0);
    this.mul_s = ID('mul.s', VM('010001:10000:ft:fs:fd:000010'), '%D, %S, %T', ADDR_TYPE_NONE, 0);
    this.div_s = ID('div.s', VM('010001:10000:ft:fs:fd:000011'), '%D, %S, %T', ADDR_TYPE_NONE, 0);
    this.sqrt_s = ID('sqrt.s', VM('010001:10000:00000:fs:fd:000100'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.abs_s = ID('abs.s', VM('010001:10000:00000:fs:fd:000101'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.mov_s = ID('mov.s', VM('010001:10000:00000:fs:fd:000110'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.neg_s = ID('neg.s', VM('010001:10000:00000:fs:fd:000111'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.round_w_s = ID('round.w.s', VM('010001:10000:00000:fs:fd:001100'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.trunc_w_s = ID('trunc.w.s', VM('010001:10000:00000:fs:fd:001101'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.ceil_w_s = ID('ceil.w.s', VM('010001:10000:00000:fs:fd:001110'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.floor_w_s = ID('floor.w.s', VM('010001:10000:00000:fs:fd:001111'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.cvt_s_w = ID('cvt.s.w', VM('010001:10100:00000:fs:fd:100000'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.cvt_w_s = ID('cvt.w.s', VM('010001:10000:00000:fs:fd:100100'), '%D, %S', ADDR_TYPE_NONE, 0);
    this.mfc1 = ID('mfc1', VM('010001:00000:rt:c1dr:00000:000000'), '%t, %S', ADDR_TYPE_NONE, 0);
    this.mtc1 = ID('mtc1', VM('010001:00100:rt:c1dr:00000:000000'), '%t, %S', ADDR_TYPE_NONE, 0);
    this.cfc1 = ID('cfc1', VM('010001:00010:rt:c1cr:00000:000000'), '%t, %p', ADDR_TYPE_NONE, 0);
    this.ctc1 = ID('ctc1', VM('010001:00110:rt:c1cr:00000:000000'), '%t, %p', ADDR_TYPE_NONE, 0);
    this.c_f_s = ID('c.f.s', VM('010001:10000:ft:fs:00000:11:0000'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_un_s = ID('c.un.s', VM('010001:10000:ft:fs:00000:11:0001'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_eq_s = ID('c.eq.s', VM('010001:10000:ft:fs:00000:11:0010'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_ueq_s = ID('c.ueq.s', VM('010001:10000:ft:fs:00000:11:0011'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_olt_s = ID('c.olt.s', VM('010001:10000:ft:fs:00000:11:0100'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_ult_s = ID('c.ult.s', VM('010001:10000:ft:fs:00000:11:0101'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_ole_s = ID('c.ole.s', VM('010001:10000:ft:fs:00000:11:0110'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_ule_s = ID('c.ule.s', VM('010001:10000:ft:fs:00000:11:0111'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_sf_s = ID('c.sf.s', VM('010001:10000:ft:fs:00000:11:1000'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_ngle_s = ID('c.ngle.s', VM('010001:10000:ft:fs:00000:11:1001'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_seq_s = ID('c.seq.s', VM('010001:10000:ft:fs:00000:11:1010'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_ngl_s = ID('c.ngl.s', VM('010001:10000:ft:fs:00000:11:1011'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_lt_s = ID('c.lt.s', VM('010001:10000:ft:fs:00000:11:1100'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_nge_s = ID('c.nge.s', VM('010001:10000:ft:fs:00000:11:1101'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_le_s = ID('c.le.s', VM('010001:10000:ft:fs:00000:11:1110'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.c_ngt_s = ID('c.ngt.s', VM('010001:10000:ft:fs:00000:11:1111'), '%S, %T', ADDR_TYPE_NONE, 0);
    this.syscall = ID('syscall', VM('000000:imm20:001100'), '%C', ADDR_TYPE_NONE, INSTR_TYPE_SYSCALL);
    this.cache = ID('cache', VM('101111:rs:-----:imm16'), '%k, %o', ADDR_TYPE_NONE, 0);
    this.sync = ID('sync', VM('000000:00000:00000:00000:00000:001111'), '', ADDR_TYPE_NONE, 0);
    this._break = ID('break', VM('000000:imm20:001101'), '%c', ADDR_TYPE_NONE, INSTR_TYPE_BREAK);
    this.dbreak = ID('dbreak', VM('011100:00000:00000:00000:00000:111111'), '', ADDR_TYPE_NONE, INSTR_TYPE_PSP | INSTR_TYPE_BREAK);
    this.halt = ID('halt', VM('011100:00000:00000:00000:00000:000000'), '', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.dret = ID('dret', VM('011100:00000:00000:00000:00000:111110'), '', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.eret = ID('eret', VM('010000:10000:00000:00000:00000:011000'), '', ADDR_TYPE_NONE, 0);
    this.mfic = ID('mfic', VM('011100:rt:00000:00000:00000:100100'), '%t, %p', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mtic = ID('mtic', VM('011100:rt:00000:00000:00000:100110'), '%t, %p', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mfdr = ID('mfdr', VM('011100:00000:----------:00000:111101'), '%t, %r', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mtdr = ID('mtdr', VM('011100:00100:----------:00000:111101'), '%t, %r', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.cfc0 = ID('cfc0', VM('010000:00010:----------:00000:000000'), '%t, %p', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.ctc0 = ID('ctc0', VM('010000:00110:----------:00000:000000'), '%t, %p', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mfc0 = ID('mfc0', VM('010000:00000:----------:00000:000000'), '%t, %0', ADDR_TYPE_NONE, 0);
    this.mtc0 = ID('mtc0', VM('010000:00100:----------:00000:000000'), '%t, %0', ADDR_TYPE_NONE, 0);
    this.mfv = ID('mfv', VM('010010:00:011:rt:0:0000000:0:vd'), '%t, %zs', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mfvc = ID('mfvc', VM('010010:00:011:rt:0:0000000:1:vd'), '%t, %2d', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mtv = ID('mtv', VM('010010:00:111:rt:0:0000000:0:vd'), '%t, %zs', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mtvc = ID('mtvc', VM('010010:00:111:rt:0:0000000:1:vd'), '%t, %2d', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.lv_s = ID('lv.s', VM('110010:rs:vt5:imm14:vt2'), '%Xs, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.lv_q = ID('lv.q', VM('110110:rs:vt5:imm14:0:vt1'), '%Xq, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.lvl_q = ID('lvl.q', VM('110101:rs:vt5:imm14:0:vt1'), '%Xq, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.lvr_q = ID('lvr.q', VM('110101:rs:vt5:imm14:1:vt1'), '%Xq, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.sv_q = ID('sv.q', VM('111110:rs:vt5:imm14:0:vt1'), '%Xq, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vdot = ID('vdot', VM('011001:001:vt:two:vs:one:vd'), '%zs, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vscl = ID('vscl', VM('011001:010:vt:two:vs:one:vd'), '%zp, %yp, %xs', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsge = ID('vsge', VM('011011:110:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vslt = ID('vslt', VM('011011:111:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrot = ID('vrot', VM('111100:111:01:imm5:two:vs:one:vd'), '%zp, %ys, %vr', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vzero = ID('vzero', VM('110100:00:000:0:0110:two:0000000:one:vd'), '%zp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vone = ID('vone', VM('110100:00:000:0:0111:two:0000000:one:vd'), '%zp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmov = ID('vmov', VM('110100:00:000:0:0000:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vabs = ID('vabs', VM('110100:00:000:0:0001:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vneg = ID('vneg', VM('110100:00:000:0:0010:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vocp = ID('vocp', VM('110100:00:010:0:0100:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsgn = ID('vsgn', VM('110100:00:010:0:1010:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrcp = ID('vrcp', VM('110100:00:000:1:0000:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrsq = ID('vrsq', VM('110100:00:000:1:0001:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsin = ID('vsin', VM('110100:00:000:1:0010:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vcos = ID('vcos', VM('110100:00:000:1:0011:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vexp2 = ID('vexp2', VM('110100:00:000:1:0100:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vlog2 = ID('vlog2', VM('110100:00:000:1:0101:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsqrt = ID('vsqrt', VM('110100:00:000:1:0110:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vasin = ID('vasin', VM('110100:00:000:1:0111:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vnrcp = ID('vnrcp', VM('110100:00:000:1:1000:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vnsin = ID('vnsin', VM('110100:00:000:1:1010:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrexp2 = ID('vrexp2', VM('110100:00:000:1:1100:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsat0 = ID('vsat0', VM('110100:00:000:0:0100:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsat1 = ID('vsat1', VM('110100:00:000:0:0101:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vcst = ID('vcst', VM('110100:00:011:imm5:two:0000000:one:vd'), '%zp, %vk', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmmul = ID('vmmul', VM('111100:000:vt:two:vs:one:vd'), '%zm, %tym, %xm', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vhdp = ID('vhdp', VM('011001:100:vt:two:vs:one:vd'), '%zs, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vcrs_t = ID('vcrs.t', VM('011001:101:vt:1:vs:0:vd'), '%zt, %yt, %xt', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vcrsp_t = ID('vcrsp.t', VM('111100:101:vt:1:vs:0:vd'), '%zt, %yt, %xt', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vi2c = ID('vi2c', VM('110100:00:001:11:101:two:vs:one:vd'), '%zs, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vi2uc = ID('vi2uc', VM('110100:00:001:11:100:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vtfm2 = ID('vtfm2', VM('111100:001:vt:0:vs:1:vd'), '%zp, %ym, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vtfm3 = ID('vtfm3', VM('111100:010:vt:1:vs:0:vd'), '%zt, %yn, %xt', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vtfm4 = ID('vtfm4', VM('111100:011:vt:1:vs:1:vd'), '%zq, %yo, %xq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vhtfm2 = ID('vhtfm2', VM('111100:001:vt:0:vs:0:vd'), '%zp, %ym, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vhtfm3 = ID('vhtfm3', VM('111100:010:vt:0:vs:1:vd'), '%zt, %yn, %xt', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vhtfm4 = ID('vhtfm4', VM('111100:011:vt:1:vs:0:vd'), '%zq, %yo, %xq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsrt3 = ID('vsrt3', VM('110100:00:010:01000:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vfad = ID('vfad', VM('110100:00:010:00110:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmin = ID('vmin', VM('011011:010:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmax = ID('vmax', VM('011011:011:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vadd = ID('vadd', VM('011000:000:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsub = ID('vsub', VM('011000:001:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vdiv = ID('vdiv', VM('011000:111:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmul = ID('vmul', VM('011001:000:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vidt = ID('vidt', VM('110100:00:000:0:0011:two:0000000:one:vd'), '%zp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmidt = ID('vmidt', VM('111100:111:00:00011:two:0000000:one:vd'), '%zm', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.viim = ID('viim', VM('110111:11:0:vd:imm16'), '%xs, %vi', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmmov = ID('vmmov', VM('111100:111:00:00000:two:vs:one:vd'), '%zm, %ym', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmzero = ID('vmzero', VM('111100:111:00:00110:two:0000000:one:vd'), '%zm', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmone = ID('vmone', VM('111100:111:00:00111:two:0000000:one:vd'), '%zp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vnop = ID('vnop', VM('111111:1111111111:00000:00000000000'), '', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsync = ID('vsync', VM('111111:1111111111:00000:01100100000'), '', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vflush = ID('vflush', VM('111111:1111111111:00000:10000001101'), '', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vpfxd = ID('vpfxd', VM('110111:10:------------:mskw:mskz:msky:mskx:satw:satz:saty:satx'), '[%vp4, %vp5, %vp6, %vp7]', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vpfxs = ID('vpfxs', VM('110111:00:----:negw:negz:negy:negx:cstw:cstz:csty:cstx:absw:absz:absy:absx:swzw:swzz:swzy:swzx'), '[%vp0, %vp1, %vp2, %vp3]', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vpfxt = ID('vpfxt', VM('110111:01:----:negw:negz:negy:negx:cstw:cstz:csty:cstx:absw:absz:absy:absx:swzw:swzz:swzy:swzx'), '[%vp0, %vp1, %vp2, %vp3]', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vdet = ID('vdet', VM('011001:110:vt:two:vs:one:vd'), '%zs, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrnds = ID('vrnds', VM('110100:00:001:00:000:two:vs:one:0000000'), '%ys', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrndi = ID('vrndi', VM('110100:00:001:00:001:two:0000000:one:vd'), '%zp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrndf1 = ID('vrndf1', VM('110100:00:001:00:010:two:0000000:one:vd'), '%zp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vrndf2 = ID('vrndf2', VM('110100:00:001:00:011:two:0000000:one:vd'), '%zp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vcmp = ID('vcmp', VM('011011:000:vt:two:vs:one:000:imm4'), '%Zn, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vcmovf = ID('vcmovf', VM('110100:10:101:01:imm3:two:vs:one:vd'), '%zp, %yp, %v3', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vcmovt = ID('vcmovt', VM('110100:10:101:00:imm3:two:vs:one:vd'), '%zp, %yp, %v3', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vavg = ID('vavg', VM('110100:00:010:00111:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vf2id = ID('vf2id', VM('110100:10:011:imm5:two:vs:one:vd'), '%zp, %yp, %v5', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vf2in = ID('vf2in', VM('110100:10:000:imm5:two:vs:one:vd'), '%zp, %yp, %v5', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vf2iu = ID('vf2iu', VM('110100:10:010:imm5:two:vs:one:vd'), '%zp, %yp, %v5', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vf2iz = ID('vf2iz', VM('110100:10:001:imm5:two:vs:one:vd'), '%zp, %yp, %v5', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vi2f = ID('vi2f', VM('110100:10:100:imm5:two:vs:one:vd'), '%zp, %yp, %v5', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vscmp = ID('vscmp', VM('011011:101:vt:two:vs:one:vd'), '%zp, %yp, %xp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmscl = ID('vmscl', VM('111100:100:vt:two:vs:one:vd'), '%zm, %ym, %xs', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vt4444_q = ID('vt4444.q', VM('110100:00:010:11001:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vt5551_q = ID('vt5551.q', VM('110100:00:010:11010:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vt5650_q = ID('vt5650.q', VM('110100:00:010:11011:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmfvc = ID('vmfvc', VM('110100:00:010:10000:1:imm7:0:vd'), '%zs, %2s', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vmtvc = ID('vmtvc', VM('110100:00:010:10001:0:vs:1:imm7'), '%2d, %ys', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.mfvme = ID('mfvme', VM('011010--------------------------'), '%t, %i', ADDR_TYPE_NONE, 0);
    this.mtvme = ID('mtvme', VM('101100--------------------------'), '%t, %i', ADDR_TYPE_NONE, 0);
    this.sv_s = ID('sv.s', VM('111010:rs:vt5:imm14:vt2'), '%Xs, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vfim = ID('vfim', VM('110111:11:1:vt:imm16'), '%xs, %vh', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.svl_q = ID('svl.q', VM('111101:rs:vt5:imm14:0:vt1'), '%Xq, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.svr_q = ID('svr.q', VM('111101:rs:vt5:imm14:1:vt1'), '%Xq, %Y', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vbfy1 = ID('vbfy1', VM('110100:00:010:00010:two:vs:one:vd'), '%zp, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vbfy2 = ID('vbfy2', VM('110100:00:010:00011:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vf2h = ID('vf2h', VM('110100:00:001:10:010:two:vs:one:vd'), '%zs, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vh2f = ID('vh2f', VM('110100:00:001:10:011:two:vs:one:vd'), '%zq, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vi2s = ID('vi2s', VM('110100:00:001:11:111:two:vs:one:vd'), '%zs, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vi2us = ID('vi2us', VM('110100:00:001:11:110:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vlgb = ID('vlgb', VM('110100:00:001:10:111:two:vs:one:vd'), '%zs, %ys', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vqmul = ID('vqmul', VM('111100:101:vt:1:vs:1:vd'), '%zq, %yq, %xq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vs2i = ID('vs2i', VM('110100:00:001:11:011:two:vs:one:vd'), '%zq, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vc2i = ID('vc2i', VM('110100:00:001:11:001:two:vs:one:vd'), '%zs, %ys, %xs', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vuc2i = ID('vuc2i', VM('110100:00:001:11:000:two:vs:one:vd'), '%zq, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsbn = ID('vsbn', VM('011000:010:vt:two:vs:one:vd'), '%zs, %ys, %xs', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsbz = ID('vsbz', VM('110100:00:001:10110:two:vs:one:vd'), '%zs, %ys', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsocp = ID('vsocp', VM('110100:00:010:00101:two:vs:one:vd'), '%zq, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsrt1 = ID('vsrt1', VM('110100:00:010:00000:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsrt2 = ID('vsrt2', VM('110100:00:010:00001:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vsrt4 = ID('vsrt4', VM('110100:00:010:01001:two:vs:one:vd'), '%zq, %yq', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vus2i = ID('vus2i', VM('110100:00:001:11010:two:vs:one:vd'), '%zq, %yp', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.vwbn = ID('vwbn', VM('110100:11:imm8:two:vs:one:vd'), '%zs, %xs, %I', ADDR_TYPE_NONE, INSTR_TYPE_PSP);
    this.bvf = ID('bvf', VM('010010:01:000:imm3:00:imm16'), '%Zc, %O', ADDR_TYPE_16, INSTR_TYPE_PSP | INSTR_TYPE_B);
    this.bvt = ID('bvt', VM('010010:01:000:imm3:01:imm16'), '%Zc, %O', ADDR_TYPE_16, INSTR_TYPE_PSP | INSTR_TYPE_B);
    this.bvfl = ID('bvfl', VM('010010:01:000:imm3:10:imm16'), '%Zc, %O', ADDR_TYPE_16, INSTR_TYPE_PSP | INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.bvtl = ID('bvtl', VM('010010:01:000:imm3:11:imm16'), '%Zc, %O', ADDR_TYPE_16, INSTR_TYPE_PSP | INSTR_TYPE_B | INSTR_TYPE_LIKELY);
    this.instructions = listOf([this.add, this.addu, this.addi, this.addiu, this.sub, this.subu, this.and, this.andi, this.nor, this.or, this.ori, this.xor, this.xori, this.sll, this.sllv, this.sra, this.srav, this.srl, this.srlv, this.rotr, this.rotrv, this.slt, this.slti, this.sltu, this.sltiu, this.lui, this.seb, this.seh, this.bitrev, this.max, this.min, this.div, this.divu, this.mult, this.multu, this.madd, this.maddu, this.msub, this.msubu, this.mfhi, this.mflo, this.mthi, this.mtlo, this.movz, this.movn, this.ext, this.ins, this.clz, this.clo, this.wsbh, this.wsbw, this.beq, this.beql, this.bgez, this.bgezl, this.bgezal, this.bgezall, this.bltz, this.bltzl, this.bltzal, this.bltzall, this.blez, this.blezl, this.bgtz, this.bgtzl, this.bne, this.bnel, this.j, this.jr, this.jalr, this.jal, this.bc1f, this.bc1t, this.bc1fl, this.bc1tl, this.lb, this.lh, this.lw, this.lwl, this.lwr, this.lbu, this.lhu, this.sb, this.sh, this.sw, this.swl, this.swr, this.ll, this.sc, this.lwc1, this.swc1, this.add_s, this.sub_s, this.mul_s, this.div_s, this.sqrt_s, this.abs_s, this.mov_s, this.neg_s, this.round_w_s, this.trunc_w_s, this.ceil_w_s, this.floor_w_s, this.cvt_s_w, this.cvt_w_s, this.mfc1, this.mtc1, this.cfc1, this.ctc1, this.c_f_s, this.c_un_s, this.c_eq_s, this.c_ueq_s, this.c_olt_s, this.c_ult_s, this.c_ole_s, this.c_ule_s, this.c_sf_s, this.c_ngle_s, this.c_seq_s, this.c_ngl_s, this.c_lt_s, this.c_nge_s, this.c_le_s, this.c_ngt_s, this.syscall, this.cache, this.sync, this._break, this.dbreak, this.halt, this.dret, this.eret, this.mfic, this.mtic, this.mfdr, this.mtdr, this.cfc0, this.ctc0, this.mfc0, this.mtc0, this.mfv, this.mfvc, this.mtv, this.mtvc, this.lv_s, this.lv_q, this.lvl_q, this.lvr_q, this.sv_q, this.vdot, this.vscl, this.vsge, this.vslt, this.vrot, this.vzero, this.vone, this.vmov, this.vabs, this.vneg, this.vocp, this.vsgn, this.vrcp, this.vrsq, this.vsin, this.vcos, this.vexp2, this.vlog2, this.vsqrt, this.vasin, this.vnrcp, this.vnsin, this.vrexp2, this.vsat0, this.vsat1, this.vcst, this.vmmul, this.vhdp, this.vcrs_t, this.vcrsp_t, this.vi2c, this.vi2uc, this.vtfm2, this.vtfm3, this.vtfm4, this.vhtfm2, this.vhtfm3, this.vhtfm4, this.vsrt3, this.vfad, this.vmin, this.vmax, this.vadd, this.vsub, this.vdiv, this.vmul, this.vidt, this.vmidt, this.viim, this.vmmov, this.vmzero, this.vmone, this.vnop, this.vsync, this.vflush, this.vpfxd, this.vpfxs, this.vpfxt, this.vdet, this.vrnds, this.vrndi, this.vrndf1, this.vrndf2, this.vcmp, this.vcmovf, this.vcmovt, this.vavg, this.vf2id, this.vf2in, this.vf2iu, this.vf2iz, this.vi2f, this.vscmp, this.vmscl, this.vt4444_q, this.vt5551_q, this.vt5650_q, this.vmfvc, this.vmtvc, this.mfvme, this.mtvme, this.sv_s, this.vfim, this.svl_q, this.svr_q, this.vbfy1, this.vbfy2, this.vf2h, this.vh2f, this.vi2s, this.vi2us, this.vlgb, this.vqmul, this.vs2i, this.vc2i, this.vuc2i, this.vsbn, this.vsbz, this.vsocp, this.vsrt1, this.vsrt2, this.vsrt4, this.vus2i, this.vwbn, this.bvf, this.bvt, this.bvfl, this.bvtl]);
    var $receiver = this.instructions;
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(to(item.name, item));
    }
    this.instructionsByName = toMap(destination);
  }
  Instructions.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Instructions',
    interfaces: []
  };
  var Instructions_instance = null;
  function Instructions_getInstance() {
    if (Instructions_instance === null) {
      new Instructions();
    }
    return Instructions_instance;
  }
  var ADDR_TYPE_NONE;
  var ADDR_TYPE_REG;
  var ADDR_TYPE_16;
  var ADDR_TYPE_26;
  var INSTR_TYPE_PSP;
  var INSTR_TYPE_SYSCALL;
  var INSTR_TYPE_B;
  var INSTR_TYPE_LIKELY;
  var INSTR_TYPE_JAL;
  var INSTR_TYPE_JUMP;
  var INSTR_TYPE_BREAK;
  function VM(format) {
    return new ValueMask(format);
  }
  function ID(name, vm, format, addressType, instructionType) {
    return new InstructionType(name, vm, format, addressType, instructionType);
  }
  function ValueMask(format) {
    this.format = format;
    this.value = 0;
    this.mask = 0;
    var tmp$, tmp$_0, tmp$_1;
    var counts = mapOf([to('cstw', 1), to('cstz', 1), to('csty', 1), to('cstx', 1), to('absw', 1), to('absz', 1), to('absy', 1), to('absx', 1), to('mskw', 1), to('mskz', 1), to('msky', 1), to('mskx', 1), to('negw', 1), to('negz', 1), to('negy', 1), to('negx', 1), to('one', 1), to('two', 1), to('vt1', 1), to('vt2', 2), to('satw', 2), to('satz', 2), to('saty', 2), to('satx', 2), to('swzw', 2), to('swzz', 2), to('swzy', 2), to('swzx', 2), to('imm3', 3), to('imm4', 4), to('fcond', 4), to('c0dr', 5), to('c0cr', 5), to('c1dr', 5), to('c1cr', 5), to('imm5', 5), to('vt5', 5), to('rs', 5), to('rd', 5), to('rt', 5), to('sa', 5), to('lsb', 5), to('msb', 5), to('fs', 5), to('fd', 5), to('ft', 5), to('vs', 7), to('vt', 7), to('vd', 7), to('imm7', 7), to('imm8', 8), to('imm14', 14), to('imm16', 16), to('imm20', 20), to('imm26', 26)]);
    var value = 0;
    var mask = 0;
    tmp$ = split(this.format, Kotlin.charArrayOf(58)).iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      if (Regex_init('^[01\\-]+$').matches_6bul2c$(item)) {
        tmp$_0 = iterator(item);
        while (tmp$_0.hasNext()) {
          var c = unboxChar(tmp$_0.next());
          value = value << 1;
          mask = mask << 1;
          if (c === 48) {
            value = value | 0;
            mask = mask | 1;
          }
          if (c === 49) {
            value = value | 1;
            mask = mask | 1;
          }
          if (c === 45) {
            value = value | 0;
            mask = mask | 0;
          }
        }
      }
       else {
        tmp$_1 = counts.get_11rb$(item);
        if (tmp$_1 == null) {
          throw Exception_init_0("Invalid item '" + item + "'");
        }
        var displacement = tmp$_1;
        value = value << displacement;
        mask = mask << displacement;
      }
    }
    this.value = value;
    this.mask = mask;
  }
  ValueMask.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ValueMask',
    interfaces: []
  };
  ValueMask.prototype.component1 = function () {
    return this.format;
  };
  ValueMask.prototype.copy_61zpoe$ = function (format) {
    return new ValueMask(format === void 0 ? this.format : format);
  };
  ValueMask.prototype.toString = function () {
    return 'ValueMask(format=' + Kotlin.toString(this.format) + ')';
  };
  ValueMask.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.format) | 0;
    return result;
  };
  ValueMask.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.format, other.format))));
  };
  function InstructionType(name, vm, format, addressType, instructionType) {
    this.name = name;
    this.vm = vm;
    this.format = format;
    this.addressType = addressType;
    this.instructionType = instructionType;
  }
  InstructionType.prototype.match_za3lpa$ = function (i32) {
    return (i32 & this.vm.mask) === (this.vm.value & this.vm.mask);
  };
  InstructionType.prototype.isInstructionType_0 = function (mask) {
    return (this.instructionType & mask) !== 0;
  };
  Object.defineProperty(InstructionType.prototype, 'isSyscall', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_SYSCALL);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isBreak', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_BREAK);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isBranch', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_B);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isCall', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_JAL);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isJump', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_JAL) || this.isInstructionType_0(INSTR_TYPE_JUMP);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isJumpNoLink', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_JUMP);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isJal', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_JAL);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isJumpOrBranch', {
    get: function () {
      return this.isBranch || this.isJump;
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isLikely', {
    get: function () {
      return this.isInstructionType_0(INSTR_TYPE_LIKELY);
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isRegister', {
    get: function () {
      return this.addressType === ADDR_TYPE_REG;
    }
  });
  Object.defineProperty(InstructionType.prototype, 'isFixedAddressJump', {
    get: function () {
      return this.isJumpOrBranch && !this.isRegister;
    }
  });
  Object.defineProperty(InstructionType.prototype, 'hasDelayedBranch', {
    get: function () {
      return this.isJumpOrBranch;
    }
  });
  InstructionType.prototype.toString = function () {
    return "InstructionType('" + this.name + "', " + format_0('%08X', [this.vm.value]) + ', ' + format_0('%08X', [this.vm.mask]) + ')';
  };
  InstructionType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InstructionType',
    interfaces: []
  };
  InstructionType.prototype.component1 = function () {
    return this.name;
  };
  InstructionType.prototype.component2 = function () {
    return this.vm;
  };
  InstructionType.prototype.component3 = function () {
    return this.format;
  };
  InstructionType.prototype.component4 = function () {
    return this.addressType;
  };
  InstructionType.prototype.component5 = function () {
    return this.instructionType;
  };
  InstructionType.prototype.copy_9bnh32$ = function (name, vm, format, addressType, instructionType) {
    return new InstructionType(name === void 0 ? this.name : name, vm === void 0 ? this.vm : vm, format === void 0 ? this.format : format, addressType === void 0 ? this.addressType : addressType, instructionType === void 0 ? this.instructionType : instructionType);
  };
  InstructionType.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.vm) | 0;
    result = result * 31 + Kotlin.hashCode(this.format) | 0;
    result = result * 31 + Kotlin.hashCode(this.addressType) | 0;
    result = result * 31 + Kotlin.hashCode(this.instructionType) | 0;
    return result;
  };
  InstructionType.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.vm, other.vm) && Kotlin.equals(this.format, other.format) && Kotlin.equals(this.addressType, other.addressType) && Kotlin.equals(this.instructionType, other.instructionType)))));
  };
  function kescape($receiver) {
    if (equals($receiver, 'break'))
      return '_' + $receiver;
    else
      return replace($receiver, 46, 95);
  }
  function Syscalls() {
  }
  Syscalls.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Syscalls',
    interfaces: []
  };
  function TraceSyscallHandler() {
  }
  TraceSyscallHandler.prototype.syscall_acv9wa$ = function (state, id) {
    println(format_0('%08X: Called syscall: ### %04X', [state.PC, id]));
  };
  TraceSyscallHandler.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TraceSyscallHandler',
    interfaces: [Syscalls]
  };
  function NameProvider() {
  }
  NameProvider.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'NameProvider',
    interfaces: []
  };
  function DummyNameProvider() {
    DummyNameProvider_instance = this;
  }
  DummyNameProvider.prototype.getName_za3lpa$ = function (addr) {
    return null;
  };
  DummyNameProvider.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'DummyNameProvider',
    interfaces: [NameProvider]
  };
  var DummyNameProvider_instance = null;
  function DummyNameProvider_getInstance() {
    if (DummyNameProvider_instance === null) {
      new DummyNameProvider();
    }
    return DummyNameProvider_instance;
  }
  function Disassembler() {
    Disassembler_instance = this;
    InstructionDecoder.call(this);
    this.PERCENT_REGEX_0 = Regex_init('%\\w+');
  }
  Disassembler.prototype.gprStr_za3lpa$ = function (i) {
    return 'r' + i;
  };
  Disassembler.prototype.fprStr_za3lpa$ = function (i) {
    return 'f' + i;
  };
  Disassembler.prototype.disasmMacro_bdx04b$ = function (pc, i, nameProvider) {
    if (nameProvider === void 0)
      nameProvider = DummyNameProvider_getInstance();
    if (i === 0)
      return 'nop';
    var op = InstructionOpcodeDecoder_getInstance().invoke_za3lpa$(i);
    return this.disasm_oa1ivs$(op, pc, i, nameProvider);
  };
  Disassembler.prototype.disasm_bdx04b$ = function (pc, i, nameProvider) {
    if (nameProvider === void 0)
      nameProvider = DummyNameProvider_getInstance();
    return this.disasm_oa1ivs$(InstructionOpcodeDecoder_getInstance().invoke_za3lpa$(i), pc, i, nameProvider);
  };
  var StringBuilder_init = Kotlin.kotlin.text.StringBuilder_init_za3lpa$;
  Disassembler.prototype.disasm_oa1ivs$ = function (op, pc, i, nameProvider) {
    if (nameProvider === void 0)
      nameProvider = DummyNameProvider_getInstance();
    var comments = {v: ''};
    var $receiver = op.format;
    var regex = this.PERCENT_REGEX_0;
    var replace_20wsma$result;
    replace_20wsma$break: do {
      var match = regex.find_905azu$($receiver);
      if (match == null) {
        replace_20wsma$result = $receiver.toString();
        break replace_20wsma$break;
      }
      var lastStart = 0;
      var length = $receiver.length;
      var sb = StringBuilder_init(length);
      do {
        var foundMatch = ensureNotNull(match);
        sb.append_ezbsdh$($receiver, lastStart, foundMatch.range.start);
        var tmp$ = sb.append_gw00v9$;
        var transform$result;
        var type = foundMatch.groupValues.get_za3lpa$(0);
        if (equals(type, '%j')) {
          var aaddr = pc & -268435456 | (extract_0(i, 0, 26) * 4 | 0);
          var aname = nameProvider.getName_za3lpa$(aaddr);
          if (aname != null)
            comments.v += aname;
          transform$result = format_0('0x%08X', [aaddr]);
        }
         else if (equals(type, '%J')) {
          transform$result = this.gprStr_za3lpa$(i >>> 21 & 31);
        }
         else if (equals(type, '%d')) {
          transform$result = this.gprStr_za3lpa$(i >>> 11 & 31);
        }
         else if (equals(type, '%s')) {
          transform$result = this.gprStr_za3lpa$(i >>> 21 & 31);
        }
         else if (equals(type, '%t')) {
          transform$result = this.gprStr_za3lpa$(i >>> 16 & 31);
        }
         else if (equals(type, '%D')) {
          transform$result = this.fprStr_za3lpa$(i >>> 6 & 31);
        }
         else if (equals(type, '%S')) {
          transform$result = this.fprStr_za3lpa$(i >>> 11 & 31);
        }
         else if (equals(type, '%T')) {
          transform$result = this.fprStr_za3lpa$(i >>> 16 & 31);
        }
         else if (equals(type, '%a')) {
          transform$result = (i >>> 6 & 31).toString();
        }
         else if (equals(type, '%O')) {
          transform$result = 'PC + ' + (i << 16 >> 16);
        }
         else if (equals(type, '%C')) {
          transform$result = format_0('0x%04X', [extract_0(i, 6, 20)]);
        }
         else if (equals(type, '%I')) {
          transform$result = (i & 65535).toString();
        }
         else if (equals(type, '%i')) {
          transform$result = (i << 16 >> 16).toString();
        }
         else {
          transform$result = type;
        }
        tmp$.call(sb, transform$result);
        lastStart = foundMatch.range.endInclusive + 1 | 0;
        match = foundMatch.next();
      }
       while (lastStart < length && match != null);
      if (lastStart < length) {
        sb.append_ezbsdh$($receiver, lastStart, length);
      }
      replace_20wsma$result = sb.toString();
    }
     while (false);
    var params = replace_20wsma$result;
    var out = op.name + ' ' + params;
    if (comments.v.length > 0)
      out += ' ; ' + comments.v;
    return out;
  };
  Disassembler.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Disassembler',
    interfaces: [InstructionDecoder]
  };
  var Disassembler_instance = null;
  function Disassembler_getInstance() {
    if (Disassembler_instance === null) {
      new Disassembler();
    }
    return Disassembler_instance;
  }
  function disasm($receiver, pc, nameProvider) {
    if (nameProvider === void 0)
      nameProvider = DummyNameProvider_getInstance();
    return Disassembler_getInstance().disasm_bdx04b$(pc, $receiver.lw_za3lpa$(pc), nameProvider);
  }
  function disasmMacro($receiver, pc, nameProvider) {
    if (nameProvider === void 0)
      nameProvider = DummyNameProvider_getInstance();
    try {
      return Disassembler_getInstance().disasmMacro_bdx04b$(pc, $receiver.lw_za3lpa$(pc), nameProvider);
    }
     catch (e) {
      if (Kotlin.isType(e, IndexOutOfBoundsException)) {
        return format_0('invalid(PC=0x%08X)', [pc]);
      }
       else if (Kotlin.isType(e, Exception)) {
        return 'error: ' + toString(e.message);
      }
       else
        throw e;
    }
  }
  function getPrintInstructionAt($receiver, address, nameProvider) {
    if (nameProvider === void 0)
      nameProvider = DummyNameProvider_getInstance();
    return get_hex(address) + ' : ' + disasmMacro($receiver, address, nameProvider);
  }
  function printInstructionAt($receiver, address, nameProvider) {
    if (nameProvider === void 0)
      nameProvider = DummyNameProvider_getInstance();
    lang.Console.error_s8jyv4$(getPrintInstructionAt($receiver, address, nameProvider));
  }
  function DynarekMethodBuilder() {
    BaseDynarecMethodBuilder.call(this);
  }
  DynarekMethodBuilder.prototype.add_11rb$ = function (s) {
    this.set_RD_olxlj7$(s, this.plus_hturld$(this.get_RS_ix2bh4$(s), this.get_RT_ix2bh4$(s)));
  };
  DynarekMethodBuilder.prototype.addiu_11rb$ = function (s) {
    this.set_RT_olxlj7$(s, this.plus_hturld$(this.get_RS_ix2bh4$(s), this.get_S_IMM16_ix2bh4$(s)));
  };
  DynarekMethodBuilder.prototype.sll_11rb$ = function (s) {
    this.set_RD_olxlj7$(s, this.shl_hturld$(this.get_RT_ix2bh4$(s), this.get_POS_ix2bh4$(s)));
  };
  DynarekMethodBuilder.prototype.lui_11rb$ = function (s) {
    this.set_RT_olxlj7$(s, this.get_lit_s8ev3n$(this.get_U_IMM16_V_ix2bh4$(s) << 16));
  };
  DynarekMethodBuilder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DynarekMethodBuilder',
    interfaces: [BaseDynarecMethodBuilder]
  };
  function InstructionInfo(PC, IR) {
    this.PC = PC;
    this.IR = IR;
  }
  InstructionInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InstructionInfo',
    interfaces: []
  };
  InstructionInfo.prototype.component1 = function () {
    return this.PC;
  };
  InstructionInfo.prototype.component2 = function () {
    return this.IR;
  };
  InstructionInfo.prototype.copy_vux9f0$ = function (PC, IR) {
    return new InstructionInfo(PC === void 0 ? this.PC : PC, IR === void 0 ? this.IR : IR);
  };
  InstructionInfo.prototype.toString = function () {
    return 'InstructionInfo(PC=' + Kotlin.toString(this.PC) + (', IR=' + Kotlin.toString(this.IR)) + ')';
  };
  InstructionInfo.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.PC) | 0;
    result = result * 31 + Kotlin.hashCode(this.IR) | 0;
    return result;
  };
  InstructionInfo.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.PC, other.PC) && Kotlin.equals(this.IR, other.IR)))));
  };
  function BaseDynarecMethodBuilder() {
    InstructionEvaluator.call(this);
    this.stms = new StmBuilder(getKClass(Object.getPrototypeOf(kotlin.Unit).constructor), getKClass(CpuState), getKClass(Object.getPrototypeOf(kotlin.Unit).constructor));
    this.dispatcher = new InstructionDispatcher(this);
    this.ii_i058s4$_0 = new InstructionInfo(0, 0);
  }
  BaseDynarecMethodBuilder.prototype.generateFunction = function () {
    return new DFunction1(dynarek.DVOID, new DClass(getKClass(CpuState)), this.stms.build());
  };
  BaseDynarecMethodBuilder.prototype.dispatch_vux9f0$ = function (pc, i) {
    this.ii_i058s4$_0.PC = pc;
    this.ii_i058s4$_0.IR = i;
    return this.dispatcher.dispatch_8olpll$(this.ii_i058s4$_0, pc, i);
  };
  var DFieldAccess_init = $module$dynarek_js.com.soywiz.dynarek.DFieldAccess;
  BaseDynarecMethodBuilder.prototype.getRegister_ehxf9o$ = function ($receiver, n) {
    var tmp$;
    if (n === 0)
      tmp$ = $receiver.get_lit_vvk9$(0);
    else {
      var $receiver_0 = $receiver.p0;
      var prop = CpuState$Companion_getInstance().getGprProp_za3lpa$(n);
      tmp$ = new DFieldAccess_init(getKClass(CpuState), $receiver_0, prop);
    }
    return tmp$;
  };
  BaseDynarecMethodBuilder.prototype.setRegister_y6yzln$ = function ($receiver, n, value) {
    if (n !== 0) {
      var $receiver_0 = $receiver.p0;
      var prop = CpuState$Companion_getInstance().getGprProp_za3lpa$(n);
      $receiver.SET_jvnile$(new DFieldAccess_init(getKClass(CpuState), $receiver_0, prop), value);
    }
  };
  BaseDynarecMethodBuilder.prototype.get_RD_ix2bh4$ = function ($receiver) {
    return this.getRegister_ehxf9o$(this.stms, $receiver.IR >>> 11 & 31);
  };
  BaseDynarecMethodBuilder.prototype.set_RD_olxlj7$ = function ($receiver, value) {
    this.setRegister_y6yzln$(this.stms, $receiver.IR >>> 11 & 31, value);
  };
  BaseDynarecMethodBuilder.prototype.get_RS_ix2bh4$ = function ($receiver) {
    return this.getRegister_ehxf9o$(this.stms, $receiver.IR >>> 21 & 31);
  };
  BaseDynarecMethodBuilder.prototype.set_RS_olxlj7$ = function ($receiver, value) {
    this.setRegister_y6yzln$(this.stms, $receiver.IR >>> 21 & 31, value);
  };
  BaseDynarecMethodBuilder.prototype.get_RT_ix2bh4$ = function ($receiver) {
    return this.getRegister_ehxf9o$(this.stms, $receiver.IR >>> 16 & 31);
  };
  BaseDynarecMethodBuilder.prototype.set_RT_olxlj7$ = function ($receiver, value) {
    this.setRegister_y6yzln$(this.stms, $receiver.IR >>> 16 & 31, value);
  };
  BaseDynarecMethodBuilder.prototype.get_POS_ix2bh4$ = function ($receiver) {
    return this.stms.get_lit_vvk9$($receiver.IR >>> 6 & 31);
  };
  BaseDynarecMethodBuilder.prototype.get_S_IMM16_ix2bh4$ = function ($receiver) {
    return this.stms.get_lit_vvk9$($receiver.IR << 16 >> 16);
  };
  BaseDynarecMethodBuilder.prototype.get_U_IMM16_ix2bh4$ = function ($receiver) {
    return this.stms.get_lit_vvk9$($receiver.IR & 65535);
  };
  BaseDynarecMethodBuilder.prototype.get_S_IMM16_V_ix2bh4$ = function ($receiver) {
    return $receiver.IR << 16 >> 16;
  };
  BaseDynarecMethodBuilder.prototype.get_U_IMM16_V_ix2bh4$ = function ($receiver) {
    return $receiver.IR & 65535;
  };
  BaseDynarecMethodBuilder.prototype.get_lit_s8ev3n$ = function ($receiver) {
    return new DLiteral($receiver);
  };
  BaseDynarecMethodBuilder.prototype.plus_hturld$ = function ($receiver, that) {
    return new DBinopInt($receiver, IBinop.ADD, that);
  };
  BaseDynarecMethodBuilder.prototype.shl_hturld$ = function ($receiver, that) {
    return new DBinopInt($receiver, IBinop.SHL, that);
  };
  BaseDynarecMethodBuilder.prototype.invoke_1485oo$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.dynarec.BaseDynarecMethodBuilder.invoke_1485oo$', function ($receiver, callback) {
    callback($receiver);
  });
  BaseDynarecMethodBuilder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BaseDynarecMethodBuilder',
    interfaces: [InstructionEvaluator]
  };
  function CpuInterpreter(cpu, breakpoints, nameProvider, trace) {
    if (trace === void 0)
      trace = false;
    this.cpu = cpu;
    this.breakpoints = breakpoints;
    this.nameProvider = nameProvider;
    this.trace = trace;
    this.dispatcher = new InstructionDispatcher(InstructionInterpreter_getInstance());
  }
  CpuInterpreter.prototype.steps_fzusl$ = function (count, trace) {
    if (trace === void 0)
      trace = false;
    var tmp$;
    var mem = this.cpu.mem.getFastMem();
    if (mem != null) {
      tmp$ = this.stepsFastMem_ci0y70$(mem, this.cpu.mem.getFastMemOffset_za3lpa$(Memory$Companion_getInstance().MAIN_OFFSET) - Memory$Companion_getInstance().MAIN_OFFSET | 0, count, trace);
    }
     else {
      tmp$ = this.stepsNormal_fzusl$(count, trace);
    }
    return tmp$;
  };
  CpuInterpreter.prototype.stepsNormal_fzusl$ = function (count, trace) {
    var dispatcher = this.dispatcher;
    var cpu = this.cpu;
    var mem = cpu.mem;
    var trace_0 = this.trace;
    var sPC = 0;
    var n = 0;
    var breakpointsEnabled = this.breakpoints.enabled;
    try {
      while (n < count) {
        sPC = cpu._PC;
        if (trace_0)
          this.doTrace_0(sPC, cpu);
        if (breakpointsEnabled && this.breakpoints.get_za3lpa$(sPC))
          throw new BreakpointException(cpu, sPC);
        n = n + 1 | 0;
        if (trace_0)
          this.tracePC_0();
        var IR = mem.lw_za3lpa$(sPC);
        cpu.IR = IR;
        dispatcher.dispatch_8olpll$(cpu, sPC, IR);
      }
    }
     catch (e) {
      if (Kotlin.isType(e, Throwable)) {
        this.checkException_0(sPC, e);
      }
       else
        throw e;
    }
    finally {
      cpu.totalExecuted = cpu.totalExecuted.add(Kotlin.Long.fromInt(n));
    }
    return n;
  };
  CpuInterpreter.prototype.stepsFastMem_ci0y70$ = function (mem, memOffset, count, trace) {
    var i32 = mem.i32;
    var cpu = this.cpu;
    var n = 0;
    var sPC = 0;
    var breakpointsEnabled = this.breakpoints.enabled;
    try {
      while (n < count) {
        sPC = cpu._PC & 268435455;
        if (trace)
          this.doTrace_0(sPC, cpu);
        if (breakpointsEnabled && this.breakpoints.get_za3lpa$(sPC))
          throw new BreakpointException(cpu, sPC);
        n = n + 1 | 0;
        var IR = i32[memOffset + sPC >>> 2];
        cpu.IR = IR;
        this.dispatcher.dispatch_8olpll$(cpu, sPC, IR);
      }
    }
     catch (e) {
      if (Kotlin.isType(e, Throwable)) {
        this.checkException_0(sPC, e);
      }
       else
        throw e;
    }
    finally {
      cpu.totalExecuted = cpu.totalExecuted.add(Kotlin.Long.fromInt(n));
    }
    return n;
  };
  CpuInterpreter.prototype.doTrace_0 = function (sPC, state) {
    var tmp$;
    var I = state.globalCpuState.insideInterrupt ? 'I' : '_';
    println('TRACE[' + I + '][' + toString((tmp$ = get__thread(state)) != null ? tmp$.name : null) + ']:' + get_hex(sPC) + ' : ' + disasmMacro(this.cpu.mem, sPC, this.nameProvider));
  };
  CpuInterpreter.prototype.checkException_0 = function (sPC, e) {
    if (!Kotlin.isType(e, EmulatorControlFlowException)) {
      lang.Console.error_s8jyv4$(format_0('There was an error at 0x%08X: %s', [sPC, disasmMacro(this.cpu.mem, sPC, this.nameProvider)]));
      lang.Console.error_s8jyv4$(format_0(' - RA at 0x%08X: %s', [get_RA(this.cpu), disasmMacro(this.cpu.mem, get_RA(this.cpu), this.nameProvider)]));
    }
    throw e;
  };
  CpuInterpreter.prototype.tracePC_0 = function () {
    println(format_0('0x%08X: %s', [this.cpu._PC, disasmMacro(this.cpu.mem, this.cpu._PC, this.nameProvider)]));
  };
  CpuInterpreter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CpuInterpreter',
    interfaces: []
  };
  function InstructionInterpreter() {
    InstructionInterpreter_instance = this;
    InstructionEvaluator.call(this);
    this.itemp = new Int32Array(2);
    this.VDEST2_0 = new IntArray2(4, 4);
    this.VSRC_0 = new Int32Array(16);
    this.mc_0 = new InstructionInterpreter$MatrixContext();
    this.tempRegs_0 = new Int32Array(16);
    this.tempRegs2_0 = new IntArray2(4, 4);
    this.vfpuContext = new InstructionInterpreter$VfpuContext();
  }
  InstructionInterpreter.prototype.unimplemented_1wp5la$ = function (s, i) {
    throw new NotImplementedError_init('An operation is not implemented: ' + ('unimplemented: ' + i.name + ' : ' + toString(i) + (' at ' + format_0('%08X', [s._PC]))));
  };
  InstructionInterpreter.prototype.lui_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, (s.IR & 65535) << 16);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.movz_11rb$ = function (s) {
    if (s.getGpr_za3lpa$(s.IR >>> 16 & 31) === 0) {
      s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31));
    }
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.movn_11rb$ = function (s) {
    if (s.getGpr_za3lpa$(s.IR >>> 16 & 31) !== 0) {
      s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31));
    }
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.ext_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, extract_0(s.getGpr_za3lpa$(s.IR >>> 21 & 31), s.IR >>> 6 & 31, (s.IR >>> 11 & 31) + 1 | 0));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.ins_11rb$ = function (s) {
    var $receiver = s.IR;
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, insert(s.getGpr_za3lpa$(s.IR >>> 16 & 31), s.getGpr_za3lpa$(s.IR >>> 21 & 31), s.IR >>> 6 & 31, ($receiver >>> 11 & 31) - ($receiver >>> 6 & 31) + 1 | 0));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.clz_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, util.BitUtils.clz_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.clo_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, util.BitUtils.clo_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.seb_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, util.BitUtils.seb_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.seh_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, util.BitUtils.seh_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.wsbh_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, util.BitUtils.wsbh_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.wsbw_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, util.BitUtils.wsbw_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  var Math_0 = Math;
  InstructionInterpreter.prototype.max_11rb$ = function (s) {
    var tmp$ = s.getGpr_za3lpa$(s.IR >>> 21 & 31);
    var b = s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, Math_0.max(tmp$, b));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.min_11rb$ = function (s) {
    var tmp$ = s.getGpr_za3lpa$(s.IR >>> 21 & 31);
    var b = s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, Math_0.min(tmp$, b));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.add_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) + s.getGpr_za3lpa$(s.IR >>> 16 & 31) | 0);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.addu_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) + s.getGpr_za3lpa$(s.IR >>> 16 & 31) | 0);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.sub_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) - s.getGpr_za3lpa$(s.IR >>> 16 & 31) | 0);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.subu_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) - s.getGpr_za3lpa$(s.IR >>> 16 & 31) | 0);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.addi_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.addiu_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.div_11rb$ = function (s) {
    s.LO = s.getGpr_za3lpa$(s.IR >>> 21 & 31) / s.getGpr_za3lpa$(s.IR >>> 16 & 31) | 0;
    s.HI = s.getGpr_za3lpa$(s.IR >>> 21 & 31) % s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.divu_11rb$ = function (s) {
    var d = s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    if (d !== 0) {
      s.LO = udiv(s.getGpr_za3lpa$(s.IR >>> 21 & 31), d);
      s.HI = urem(s.getGpr_za3lpa$(s.IR >>> 21 & 31), d);
    }
     else {
      s.LO = 0;
      s.HI = 0;
    }
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.mult_11rb$ = function (s) {
    imul32_64(s.getGpr_za3lpa$(s.IR >>> 21 & 31), s.getGpr_za3lpa$(s.IR >>> 16 & 31), this.itemp);
    s.LO = this.itemp[0];
    s.HI = this.itemp[1];
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.multu_11rb$ = function (s) {
    umul32_64(s.getGpr_za3lpa$(s.IR >>> 21 & 31), s.getGpr_za3lpa$(s.IR >>> 16 & 31), this.itemp);
    s.LO = this.itemp[0];
    s.HI = this.itemp[1];
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.madd_11rb$ = function (s) {
    s.HI_LO = s.HI_LO.add(Kotlin.Long.fromInt(s.getGpr_za3lpa$(s.IR >>> 21 & 31)).multiply(Kotlin.Long.fromInt(s.getGpr_za3lpa$(s.IR >>> 16 & 31))));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.maddu_11rb$ = function (s) {
    s.HI_LO = s.HI_LO.add(get_unsigned(s.getGpr_za3lpa$(s.IR >>> 21 & 31)).multiply(get_unsigned(s.getGpr_za3lpa$(s.IR >>> 16 & 31))));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.msub_11rb$ = function (s) {
    s.HI_LO = s.HI_LO.subtract(Kotlin.Long.fromInt(s.getGpr_za3lpa$(s.IR >>> 21 & 31)).multiply(Kotlin.Long.fromInt(s.getGpr_za3lpa$(s.IR >>> 16 & 31))));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.msubu_11rb$ = function (s) {
    s.HI_LO = s.HI_LO.subtract(get_unsigned(s.getGpr_za3lpa$(s.IR >>> 21 & 31)).multiply(get_unsigned(s.getGpr_za3lpa$(s.IR >>> 16 & 31))));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.mflo_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.LO);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.mfhi_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.HI);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.mfic_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.IC);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.mtlo_11rb$ = function (s) {
    s.LO = s.getGpr_za3lpa$(s.IR >>> 21 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.mthi_11rb$ = function (s) {
    s.HI = s.getGpr_za3lpa$(s.IR >>> 21 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.mtic_11rb$ = function (s) {
    s.IC = s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.or_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) | s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.xor_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) ^ s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.and_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) & s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.nor_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, ~(s.getGpr_za3lpa$(s.IR >>> 21 & 31) | s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.ori_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) | s.IR & 65535);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.xori_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) ^ s.IR & 65535);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.andi_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) & (s.IR & 65535));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.sll_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 16 & 31) << (s.IR >>> 6 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.sra_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 16 & 31) >> (s.IR >>> 6 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.srl_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 16 & 31) >>> (s.IR >>> 6 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.sllv_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 16 & 31) << (s.getGpr_za3lpa$(s.IR >>> 21 & 31) & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.srav_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 16 & 31) >> (s.getGpr_za3lpa$(s.IR >>> 21 & 31) & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.srlv_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 16 & 31) >>> (s.getGpr_za3lpa$(s.IR >>> 21 & 31) & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.bitrev_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, util.BitUtils.bitrev32_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.rotr_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, util.BitUtils.rotr_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 16 & 31), s.IR >>> 6 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.rotrv_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, util.BitUtils.rotr_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 16 & 31), s.getGpr_za3lpa$(s.IR >>> 21 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.lb_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lb_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.lbu_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lbu_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.lh_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lh_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.lhu_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lhu_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.lw_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lw_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.ll_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lw_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.lwl_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lwl_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.lwr_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.mem.lwr_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.swl_11rb$ = function (s) {
    s.mem.swl_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.swr_11rb$ = function (s) {
    s.mem.swr_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.sb_11rb$ = function (s) {
    s.mem.sb_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.sh_11rb$ = function (s) {
    s.mem.sh_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.sw_11rb$ = function (s) {
    s.mem.sw_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.sc_11rb$ = function (s) {
    s.mem.sw_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0, s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, 1);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.lwc1_11rb$ = function (s) {
    s.setFprI_vux9f0$(s.IR >>> 16 & 31, s.mem.lw_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.swc1_11rb$ = function (s) {
    s.mem.sw_vux9f0$(s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (s.IR << 16 >> 16) | 0, s.getFprI_za3lpa$(s.IR >>> 16 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.syscall_11rb$ = function (s) {
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
    s.syscall_za3lpa$(extract_0(s.IR, 6, 20));
  };
  InstructionInterpreter.prototype._break_11rb$ = function (s) {
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
    throw new CpuBreakException(extract_0(s.IR, 6, 20));
  };
  InstructionInterpreter.prototype.slt_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) < s.getGpr_za3lpa$(s.IR >>> 16 & 31) ? 1 : 0);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.sltu_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, (s.getGpr_za3lpa$(s.IR >>> 21 & 31) ^ -2147483648) < (s.getGpr_za3lpa$(s.IR >>> 16 & 31) ^ -2147483648) ? 1 : 0);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.slti_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.getGpr_za3lpa$(s.IR >>> 21 & 31) < s.IR << 16 >> 16 ? 1 : 0);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.sltiu_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, (s.getGpr_za3lpa$(s.IR >>> 21 & 31) ^ -2147483648) < (s.IR << 16 >> 16 ^ -2147483648) ? 1 : 0);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.beq_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) === s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC;
      s._nPC = s._nPC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bne_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) !== s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC;
      s._nPC = s._nPC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bltz_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) < 0;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC;
      s._nPC = s._nPC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.blez_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) <= 0;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC;
      s._nPC = s._nPC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bgtz_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) > 0;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC;
      s._nPC = s._nPC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bgez_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) >= 0;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC;
      s._nPC = s._nPC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bgezal_11rb$ = function (s) {
    set_RA(s, s._nPC + 4 | 0);
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) >= 0;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC;
      s._nPC = s._nPC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bltzal_11rb$ = function (s) {
    set_RA(s, s._nPC + 4 | 0);
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) < 0;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC;
      s._nPC = s._nPC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.beql_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) === s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bnel_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) !== s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bltzl_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) < 0;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.blezl_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) <= 0;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bgtzl_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) > 0;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bgezl_11rb$ = function (s) {
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) >= 0;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bgezall_11rb$ = function (s) {
    set_RA(s, s._nPC + 4 | 0);
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) >= 0;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bltzall_11rb$ = function (s) {
    set_RA(s, s._nPC + 4 | 0);
    var result = s.getGpr_za3lpa$(s.IR >>> 21 & 31) < 0;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bc1f_11rb$ = function (s) {
    var result = !s.fcr31_cc;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC;
      s._nPC = s._nPC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bc1t_11rb$ = function (s) {
    var result = s.fcr31_cc;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC;
      s._nPC = s._nPC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bc1fl_11rb$ = function (s) {
    var result = !s.fcr31_cc;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.bc1tl_11rb$ = function (s) {
    var result = s.fcr31_cc;
    if (result) {
      var offset = (s.IR << 16 >> 16) * 4 | 0;
      s._PC = s._nPC;
      s._nPC = s._nPC + offset | 0;
    }
     else {
      s._PC = s._nPC + 4 | 0;
      s._nPC = s._PC + 4 | 0;
    }
  };
  InstructionInterpreter.prototype.j_11rb$ = function (s) {
    s._PC = s._nPC;
    s._nPC = s._PC & -268435456 | (extract_0(s.IR, 0, 26) * 4 | 0);
  };
  InstructionInterpreter.prototype.jr_11rb$ = function (s) {
    s._PC = s._nPC;
    s._nPC = s.getGpr_za3lpa$(s.IR >>> 21 & 31);
  };
  InstructionInterpreter.prototype.jal_11rb$ = function (s) {
    this.j_11rb$(s);
    set_RA(s, s._PC + 4 | 0);
  };
  InstructionInterpreter.prototype.jalr_11rb$ = function (s) {
    this.jr_11rb$(s);
    s.setGpr_vux9f0$(s.IR >>> 11 & 31, s._PC + 4 | 0);
  };
  InstructionInterpreter.prototype.mfc1_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.getFprI_za3lpa$(s.IR >>> 11 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.mtc1_11rb$ = function (s) {
    s.setFprI_vux9f0$(s.IR >>> 11 & 31, s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.cvt_s_w_11rb$ = function (s) {
    s.setFpr_24o109$(s.IR >>> 6 & 31, s.getFprI_za3lpa$(s.IR >>> 11 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.cvt_w_s_11rb$ = function (s) {
    var tmp$, tmp$_0;
    tmp$ = s.fcr31_rm;
    if (tmp$ === 0) {
      tmp$_0 = math.Math.rint_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    }
     else if (tmp$ === 1) {
      tmp$_0 = math.Math.cast_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    }
     else if (tmp$ === 2) {
      tmp$_0 = math.Math.ceil_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    }
     else if (tmp$ === 3) {
      tmp$_0 = math.Math.floor_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    }
     else {
      tmp$_0 = numberToInt(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    }
    s.setFprI_vux9f0$(s.IR >>> 6 & 31, tmp$_0);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.trunc_w_s_11rb$ = function (s) {
    s.setFprI_vux9f0$(s.IR >>> 6 & 31, math.Math.trunc_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.round_w_s_11rb$ = function (s) {
    s.setFprI_vux9f0$(s.IR >>> 6 & 31, math.Math.round_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.ceil_w_s_11rb$ = function (s) {
    s.setFprI_vux9f0$(s.IR >>> 6 & 31, math.Math.ceil_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.floor_w_s_11rb$ = function (s) {
    s.setFprI_vux9f0$(s.IR >>> 6 & 31, math.Math.floor_mx4ult$(s.getFpr_za3lpa$(s.IR >>> 11 & 31)));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.checkNan_6rdgz4$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.interpreter.InstructionInterpreter.checkNan_6rdgz4$', wrapFunction(function () {
    var isNaN_0 = Kotlin.kotlin.isNaN_81szk$;
    var isInfinite = Kotlin.kotlin.isInfinite_81szk$;
    return function ($receiver, callback) {
      callback($receiver);
      if (isNaN_0($receiver.getFpr_za3lpa$($receiver.IR >>> 6 & 31)))
        $receiver.fcr31 = $receiver.fcr31 | 65600;
      if (isInfinite($receiver.getFpr_za3lpa$($receiver.IR >>> 6 & 31)))
        $receiver.fcr31 = $receiver.fcr31 | 20500;
      $receiver._PC = $receiver._nPC;
      $receiver._nPC = $receiver._nPC + 4 | 0;
    };
  }));
  InstructionInterpreter.prototype.mov_s_11rb$ = function (s) {
    s.setFpr_24o109$(s.IR >>> 6 & 31, s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.add_s_11rb$ = function (s) {
    s.setFpr_24o109$(s.IR >>> 6 & 31, pspAdd(s.getFpr_za3lpa$(s.IR >>> 11 & 31), s.getFpr_za3lpa$(s.IR >>> 16 & 31)));
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.sub_s_11rb$ = function (s) {
    s.setFpr_24o109$(s.IR >>> 6 & 31, pspSub(s.getFpr_za3lpa$(s.IR >>> 11 & 31), s.getFpr_za3lpa$(s.IR >>> 16 & 31)));
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.mul_s_11rb$ = function (s) {
    s.setFpr_24o109$(s.IR >>> 6 & 31, s.getFpr_za3lpa$(s.IR >>> 11 & 31) * s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    var tmp$ = s.fcr31_fs;
    if (tmp$) {
      tmp$ = isAlmostZero(s.getFpr_za3lpa$(s.IR >>> 6 & 31));
    }
    if (tmp$) {
      s.setFpr_24o109$(s.IR >>> 6 & 31, 0.0);
    }
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.div_s_11rb$ = function (s) {
    s.setFpr_24o109$(s.IR >>> 6 & 31, s.getFpr_za3lpa$(s.IR >>> 11 & 31) / s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.neg_s_11rb$ = function (s) {
    s.setFpr_24o109$(s.IR >>> 6 & 31, -s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.abs_s_11rb$ = function (s) {
    var x = s.getFpr_za3lpa$(s.IR >>> 11 & 31);
    s.setFpr_24o109$(s.IR >>> 6 & 31, Math_0.abs(x));
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.sqrt_s_11rb$ = function (s) {
    var x = s.getFpr_za3lpa$(s.IR >>> 11 & 31);
    s.setFpr_24o109$(s.IR >>> 6 & 31, Math_0.sqrt(x));
    if (isNaN_0(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 65600;
    if (isInfinite(s.getFpr_za3lpa$(s.IR >>> 6 & 31)))
      s.fcr31 = s.fcr31 | 20500;
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype._cu_0 = wrapFunction(function () {
    return function ($receiver, callback) {
      var tmp$ = isNaN_0($receiver.getFpr_za3lpa$($receiver.IR >>> 11 & 31));
      if (!tmp$) {
        tmp$ = isNaN_0($receiver.getFpr_za3lpa$($receiver.IR >>> 16 & 31));
      }
      $receiver.fcr31_cc = tmp$ ? true : callback($receiver);
      $receiver._PC = $receiver._nPC;
      $receiver._nPC = $receiver._nPC + 4 | 0;
    };
  });
  InstructionInterpreter.prototype._co_0 = wrapFunction(function () {
    return function ($receiver, callback) {
      var tmp$ = isNaN_0($receiver.getFpr_za3lpa$($receiver.IR >>> 11 & 31));
      if (!tmp$) {
        tmp$ = isNaN_0($receiver.getFpr_za3lpa$($receiver.IR >>> 16 & 31));
      }
      $receiver.fcr31_cc = tmp$ ? false : callback($receiver);
      $receiver._PC = $receiver._nPC;
      $receiver._nPC = $receiver._nPC + 4 | 0;
    };
  });
  InstructionInterpreter.prototype.c_f_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : false;
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_un_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : false;
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_eq_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : s.getFpr_za3lpa$(s.IR >>> 11 & 31) === s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_ueq_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : s.getFpr_za3lpa$(s.IR >>> 11 & 31) === s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_olt_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : s.getFpr_za3lpa$(s.IR >>> 11 & 31) < s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_ult_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : s.getFpr_za3lpa$(s.IR >>> 11 & 31) < s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_ole_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : s.getFpr_za3lpa$(s.IR >>> 11 & 31) <= s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_ule_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : s.getFpr_za3lpa$(s.IR >>> 11 & 31) <= s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_sf_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : false;
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_ngle_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : false;
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_seq_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : s.getFpr_za3lpa$(s.IR >>> 11 & 31) === s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_ngl_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : s.getFpr_za3lpa$(s.IR >>> 11 & 31) === s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_lt_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : s.getFpr_za3lpa$(s.IR >>> 11 & 31) < s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_nge_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : s.getFpr_za3lpa$(s.IR >>> 11 & 31) < s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_le_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? false : s.getFpr_za3lpa$(s.IR >>> 11 & 31) <= s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.c_ngt_s_11rb$ = function (s) {
    var tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 11 & 31));
    if (!tmp$) {
      tmp$ = isNaN_0(s.getFpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s.fcr31_cc = tmp$ ? true : s.getFpr_za3lpa$(s.IR >>> 11 & 31) <= s.getFpr_za3lpa$(s.IR >>> 16 & 31);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.cfc1_11rb$ = function (s) {
    var tmp$;
    tmp$ = s.IR >>> 11 & 31;
    if (tmp$ === 0) {
      s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.fcr0);
    }
     else if (tmp$ === 25) {
      s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.fcr25);
    }
     else if (tmp$ === 26) {
      s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.fcr26);
    }
     else if (tmp$ === 27) {
      s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.fcr27);
    }
     else if (tmp$ === 28) {
      s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.fcr28);
    }
     else if (tmp$ === 31) {
      s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.fcr31);
    }
     else {
      s.setGpr_vux9f0$(s.IR >>> 16 & 31, -1);
    }
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.ctc1_11rb$ = function (s) {
    if ((s.IR >>> 11 & 31) === 31) {
      s.updateFCR31_za3lpa$(s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    }
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  var signExtend = $module$kmem_js.com.soywiz.kmem.signExtend_dqglrj$;
  InstructionInterpreter.prototype._lv_x_0 = function (s, size) {
    var $receiver = s.IR;
    this.getVectorRegisters_nd5v6f$(this.VSRC_0, extract_0($receiver, 16, 5) | extract_0($receiver, 0, 1) << 5, size);
    var start = s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (signExtend(extract_0(s.IR, 2, 14), 14) * 4 | 0) | 0;
    for (var n = 0; n < size; n++)
      s.VFPRI.set_vux9f0$(this.VSRC_0[n], s.mem.lw_za3lpa$(start + (n * 4 | 0) | 0));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype._sv_x_0 = function (s, size) {
    var $receiver = s.IR;
    this.getVectorRegisters_nd5v6f$(this.VSRC_0, extract_0($receiver, 16, 5) | extract_0($receiver, 0, 1) << 5, size);
    var start = s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (signExtend(extract_0(s.IR, 2, 14), 14) * 4 | 0) | 0;
    for (var n = 0; n < size; n++)
      s.mem.sw_vux9f0$(start + (n * 4 | 0) | 0, s.VFPRI.get_za3lpa$(this.VSRC_0[n]));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.lv_s_11rb$ = function (s) {
    this._lv_x_0(s, 1);
  };
  InstructionInterpreter.prototype.lv_q_11rb$ = function (s) {
    this._lv_x_0(s, 4);
  };
  InstructionInterpreter.prototype.sv_s_11rb$ = function (s) {
    this._sv_x_0(s, 1);
  };
  InstructionInterpreter.prototype.sv_q_11rb$ = function (s) {
    this._sv_x_0(s, 4);
  };
  InstructionInterpreter.prototype.lvl_q_11rb$ = function (s) {
    var $receiver = s.IR;
    this.getVectorRegisters_nd5v6f$(this.VSRC_0, extract_0($receiver, 16, 5) | extract_0($receiver, 0, 1) << 5, 4);
    var tmp$ = s.mem;
    var address = s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (signExtend(extract_0(s.IR, 2, 14), 14) * 4 | 0) | 0;
    var k = 3 - (address >>> 2 & 3) | 0;
    var addr = address & ~15;
    for (var n = k; n < 4; n++) {
      var value = tmp$.lw_za3lpa$(addr);
      s.setVfprI_vux9f0$(this.VSRC_0[n], value);
      addr = addr + 4 | 0;
    }
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.lvr_q_11rb$ = function (s) {
    var $receiver = s.IR;
    this.getVectorRegisters_nd5v6f$(this.VSRC_0, extract_0($receiver, 16, 5) | extract_0($receiver, 0, 1) << 5, 4);
    var tmp$ = s.mem;
    var address = s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (signExtend(extract_0(s.IR, 2, 14), 14) * 4 | 0) | 0;
    var k = 4 - (address >>> 2 & 3) | 0;
    var addr = address;
    for (var n = 0; n < k; n++) {
      var value = tmp$.lw_za3lpa$(addr);
      s.setVfprI_vux9f0$(this.VSRC_0[n], value);
      addr = addr + 4 | 0;
    }
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.svl_q_11rb$ = function (s) {
    var $receiver = s.IR;
    this.getVectorRegisters_nd5v6f$(this.VSRC_0, extract_0($receiver, 16, 5) | extract_0($receiver, 0, 1) << 5, 4);
    var tmp$ = s.mem;
    var address = s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (signExtend(extract_0(s.IR, 2, 14), 14) * 4 | 0) | 0;
    var k = 3 - (address >>> 2 & 3) | 0;
    var addr = address & ~15;
    for (var n = k; n < 4; n++) {
      tmp$.sw_vux9f0$(addr, s.getVfprI_za3lpa$(this.VSRC_0[n]));
      addr = addr + 4 | 0;
    }
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.svr_q_11rb$ = function (s) {
    var $receiver = s.IR;
    this.getVectorRegisters_nd5v6f$(this.VSRC_0, extract_0($receiver, 16, 5) | extract_0($receiver, 0, 1) << 5, 4);
    var tmp$ = s.mem;
    var address = s.getGpr_za3lpa$(s.IR >>> 21 & 31) + (signExtend(extract_0(s.IR, 2, 14), 14) * 4 | 0) | 0;
    var k = 4 - (address >>> 2 & 3) | 0;
    var addr = address;
    for (var n = 0; n < k; n++) {
      tmp$.sw_vux9f0$(addr, s.getVfprI_za3lpa$(this.VSRC_0[n]));
      addr = addr + 4 | 0;
    }
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.cc_8888_to_4444_0 = function (i) {
    return 0 | (i >>> 4 & 15) << 0 | (i >>> 12 & 15) << 4 | (i >>> 20 & 15) << 8 | (i >>> 28 & 15) << 12;
  };
  InstructionInterpreter.prototype.cc_8888_to_5551_0 = function (i) {
    return 0 | (i >>> 3 & 31) << 0 | (i >>> 11 & 31) << 5 | (i >>> 19 & 31) << 10 | (i >>> 31 & 1) << 15;
  };
  InstructionInterpreter.prototype.cc_8888_to_5650_0 = function (i) {
    return 0 | (i >>> 3 & 31) << 0 | (i >>> 10 & 63) << 5 | (i >>> 19 & 31) << 11;
  };
  InstructionInterpreter.prototype._vtXXXX_q_0 = function ($receiver, func) {
    var $receiver_0 = $receiver.IR;
    var destSize = (1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0) / 2 | 0;
    var srcSize;
    var $receiver_1 = $receiver.IR;
    srcSize = 1 + (1 * extract_0($receiver_1, 7, 1) | 0) + (2 * extract_0($receiver_1, 15, 1) | 0) | 0;
    var $receiver_2 = this.vfpuContext;
    $receiver_2.vdSize = destSize;
    $receiver_2.readVs_4g7k66$($receiver, void 0, srcSize, false);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_2.vdi;
      var $receiver_3 = this.vfpuContext;
      tmp$[n] = func($receiver_3.vsi[(n * 2 | 0) + 0 | 0]) | func($receiver_3.vsi[(n * 2 | 0) + 1 | 0]) << 16;
    }
    $receiver_2.writeVd_4g7k66$($receiver, void 0, destSize, false);
    this.consumePrefixes_cwqtgi$($receiver, false);
    $receiver._PC = $receiver._nPC;
    $receiver._nPC = $receiver._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vt4444_q_11rb$ = function (s) {
    this._vtXXXX_q_0(s, getCallableRef('cc_8888_to_4444', function ($receiver, i) {
      return $receiver.cc_8888_to_4444_0(i);
    }.bind(null, this)));
  };
  InstructionInterpreter.prototype.vt5551_q_11rb$ = function (s) {
    this._vtXXXX_q_0(s, getCallableRef('cc_8888_to_5551', function ($receiver, i) {
      return $receiver.cc_8888_to_5551_0(i);
    }.bind(null, this)));
  };
  InstructionInterpreter.prototype.vt5650_q_11rb$ = function (s) {
    this._vtXXXX_q_0(s, getCallableRef('cc_8888_to_5650', function ($receiver, i) {
      return $receiver.cc_8888_to_5650_0(i);
    }.bind(null, this)));
  };
  InstructionInterpreter.prototype._vc2i_0 = function (s, func) {
    var $receiver = this.vfpuContext;
    $receiver.vdSize = 4;
    $receiver.readVs_4g7k66$(s, void 0, 1, false);
    for (var n = 0; n < 4; n++) {
      var tmp$ = $receiver.vdi;
      var $receiver_0 = this.vfpuContext;
      tmp$[n] = func(n, $receiver_0.get_x_2t43qp$($receiver_0.vsi));
    }
    $receiver.writeVd_4g7k66$(s, void 0, 4, false);
    this.consumePrefixes_cwqtgi$(s, false);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$vc2i$lambda(index, value) {
    return value << ((3 - index | 0) * 8 | 0) & (new Kotlin.Long(-16777216, 0)).toInt();
  }
  InstructionInterpreter.prototype.vc2i_11rb$ = function (s) {
    this._vc2i_0(s, InstructionInterpreter$vc2i$lambda);
  };
  function InstructionInterpreter$vuc2i$lambda(index, value) {
    return Kotlin.imul(value >>> (index * 8 | 0) & 255, 16843009) >> 1 & ~(new Kotlin.Long(-2147483648, 0)).toInt();
  }
  InstructionInterpreter.prototype.vuc2i_11rb$ = function (s) {
    this._vc2i_0(s, InstructionInterpreter$vuc2i$lambda);
  };
  InstructionInterpreter.prototype._vs2i_0 = function (s, func) {
    var $receiver = s.IR;
    var destSize = (1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0) * 2 | 0;
    var srcSize;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, false);
    for (var n = 0; n < destSize; n++) {
      $receiver_1.vdi[n] = func(n % 2, this.vfpuContext.vsi[n / 2 | 0]);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, false);
    this.consumePrefixes_cwqtgi$(s, false);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$vs2i$lambda(index, value) {
    return extract_0(value, index * 16 | 0, 16) << 16;
  }
  InstructionInterpreter.prototype.vs2i_11rb$ = function (s) {
    this._vs2i_0(s, InstructionInterpreter$vs2i$lambda);
  };
  function InstructionInterpreter$vus2i$lambda(index, value) {
    return extract_0(value, index * 16 | 0, 16) << 15;
  }
  InstructionInterpreter.prototype.vus2i_11rb$ = function (s) {
    this._vs2i_0(s, InstructionInterpreter$vus2i$lambda);
  };
  InstructionInterpreter.prototype._vi2c_0 = function (s, gen) {
    var $receiver = this.vfpuContext;
    $receiver.vdSize = 1;
    $receiver.readVs_4g7k66$(s, void 0, 4, false);
    for (var n = 0; n < 1; n++) {
      var tmp$ = $receiver.vdi;
      var $receiver_0 = this.vfpuContext;
      tmp$[n] = color.RGBA.packFast_tjonv8$(gen($receiver_0.vsi[0]), gen($receiver_0.vsi[1]), gen($receiver_0.vsi[2]), gen($receiver_0.vsi[3]));
    }
    $receiver.writeVd_4g7k66$(s, void 0, 1, false);
    this.consumePrefixes_cwqtgi$(s, false);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$vi2c$lambda(it) {
    return extract8(it, 24);
  }
  InstructionInterpreter.prototype.vi2c_11rb$ = function (s) {
    this._vi2c_0(s, InstructionInterpreter$vi2c$lambda);
  };
  function InstructionInterpreter$vi2uc$lambda(it) {
    return it < 0 ? 0 : extract8(it, 23);
  }
  InstructionInterpreter.prototype.vi2uc_11rb$ = function (s) {
    this._vi2c_0(s, InstructionInterpreter$vi2uc$lambda);
  };
  InstructionInterpreter.prototype._vi2s_0 = function (s, gen) {
    var $receiver = s.IR;
    var destSize = (1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0) / 2 | 0;
    var srcSize;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, false);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vdi;
      var $receiver_2 = this.vfpuContext;
      var l = gen($receiver_2.vsi[(n * 2 | 0) + 0 | 0]);
      var r = gen($receiver_2.vsi[(n * 2 | 0) + 1 | 0]);
      tmp$[n] = l | r << 16;
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, false);
    this.consumePrefixes_cwqtgi$(s, false);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$vi2s$lambda(it) {
    return it >>> 16;
  }
  InstructionInterpreter.prototype.vi2s_11rb$ = function (s) {
    this._vi2s_0(s, InstructionInterpreter$vi2s$lambda);
  };
  function InstructionInterpreter$vi2us$lambda(it) {
    return it < 0 ? 0 : it >> 15;
  }
  InstructionInterpreter.prototype.vi2us_11rb$ = function (s) {
    this._vi2s_0(s, InstructionInterpreter$vi2us$lambda);
  };
  InstructionInterpreter.prototype.vi2f_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, false);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var tmp$_0 = this.vfpuContext.vsi[n];
      var n_0 = -this.get_imm5_s8ev3n$(s.IR);
      tmp$[n] = tmp$_0 * Math_0.pow(2.0, n_0);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, false);
    this.consumePrefixes_cwqtgi$(s, false);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype._vf2ix_0 = function (s, func) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, false);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vdi;
      var $receiver_2 = this.vfpuContext;
      tmp$[n] = isNaN_0($receiver_2.vs[n]) ? 2147483647 : func($receiver_2.vs[n], this.get_imm5_s8ev3n$(s.IR));
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, false);
    this.consumePrefixes_cwqtgi$(s, false);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$vf2id$lambda(value, imm5) {
    var x = value * Math_0.pow(2.0, imm5);
    return numberToInt(Math_0.floor(x));
  }
  InstructionInterpreter.prototype.vf2id_11rb$ = function (s) {
    this._vf2ix_0(s, InstructionInterpreter$vf2id$lambda);
  };
  function InstructionInterpreter$vf2iu$lambda(value, imm5) {
    var x = value * Math_0.pow(2.0, imm5);
    return numberToInt(Math_0.ceil(x));
  }
  InstructionInterpreter.prototype.vf2iu_11rb$ = function (s) {
    this._vf2ix_0(s, InstructionInterpreter$vf2iu$lambda);
  };
  function InstructionInterpreter$vf2in$lambda(value, imm5) {
    return math.Math.rint_mx4ult$(value * Math_0.pow(2.0, imm5));
  }
  InstructionInterpreter.prototype.vf2in_11rb$ = function (s) {
    this._vf2ix_0(s, InstructionInterpreter$vf2in$lambda);
  };
  function InstructionInterpreter$vf2iz$lambda(value, imm5) {
    var rs = value * Math_0.pow(2.0, imm5);
    return value >= 0 ? numberToInt(Math_0.floor(rs)) : numberToInt(Math_0.ceil(rs));
  }
  InstructionInterpreter.prototype.vf2iz_11rb$ = function (s) {
    this._vf2ix_0(s, InstructionInterpreter$vf2iz$lambda);
  };
  InstructionInterpreter.prototype.vf2h_11rb$ = function (s) {
    var $receiver = s.IR;
    var destSize = (1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0) / 2 | 0;
    var srcSize;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, false);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vdi;
      var $receiver_2 = this.vfpuContext;
      var l = HalfFloat$Companion_getInstance().floatBitsToHalfFloatBits_za3lpa$($receiver_2.vsi[(n * 2 | 0) + 0 | 0]);
      var r = HalfFloat$Companion_getInstance().floatBitsToHalfFloatBits_za3lpa$($receiver_2.vsi[(n * 2 | 0) + 1 | 0]);
      tmp$[n] = l | r << 16;
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, false);
    this.consumePrefixes_cwqtgi$(s, false);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vh2f_11rb$ = function (s) {
    var $receiver = s.IR;
    var destSize = (1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0) * 2 | 0;
    var srcSize;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, false);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vdi;
      var $receiver_2 = this.vfpuContext;
      tmp$[n] = HalfFloat$Companion_getInstance().halfFloatBitsToFloatBits_za3lpa$(extract_0($receiver_2.vsi[n / 2 | 0], n % 2 * 16 | 0, 16));
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, false);
    this.consumePrefixes_cwqtgi$(s, false);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.viim_11rb$ = function (s) {
    s.setVfpr_24o109$(s.IR >>> 16 & 127, s.IR << 16 >> 16);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vfim_11rb$ = function (s) {
    s.setVfprI_vux9f0$(s.IR >>> 16 & 127, HalfFloat$Companion_getInstance().halfFloatBitsToFloatBits_za3lpa$(s.IR & 65535));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vcst_11rb$ = function (s) {
    s.setVfpr_24o109$(s.IR >>> 0 & 127, InstructionInterpreter$VfpuConstants$Companion_getInstance().get_za3lpa$(this.get_imm5_s8ev3n$(s.IR)).value);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.mtv_11rb$ = function (s) {
    s.setVfprI_vux9f0$(s.IR >>> 0 & 127, s.getGpr_za3lpa$(s.IR >>> 16 & 31));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vpfxt_11rb$ = function (s) {
    s.vpfxt.setEnable_za3lpa$(s.IR);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vpfxd_11rb$ = function (s) {
    s.vpfxd.setEnable_za3lpa$(s.IR);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vpfxs_11rb$ = function (s) {
    s.vpfxs.setEnable_za3lpa$(s.IR);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$vavg$lambda$lambda$lambda(this$) {
    return function (it) {
      return this$.vs[it] / this$.vsSize;
    };
  }
  InstructionInterpreter.prototype.vavg_11rb$ = function (s) {
    var srcSize;
    var $receiver = s.IR;
    srcSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = this.vfpuContext;
    $receiver_0.vdSize = 1;
    $receiver_0.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < 1; n++) {
      var tmp$ = $receiver_0.vd;
      var $receiver_1 = this.vfpuContext;
      var tmp$_0;
      var out = 0.0;
      tmp$_0 = until(0, $receiver_1.vsSize).iterator();
      while (tmp$_0.hasNext()) {
        var i = tmp$_0.next();
        out += InstructionInterpreter$vavg$lambda$lambda$lambda($receiver_1)(i);
      }
      tmp$[n] = out;
    }
    $receiver_0.writeVd_4g7k66$(s, void 0, 1, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$vfad$lambda$lambda$lambda(this$) {
    return function (it) {
      return this$.vs[it];
    };
  }
  InstructionInterpreter.prototype.vfad_11rb$ = function (s) {
    var srcSize;
    var $receiver = s.IR;
    srcSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = this.vfpuContext;
    $receiver_0.vdSize = 1;
    $receiver_0.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < 1; n++) {
      var tmp$ = $receiver_0.vd;
      var $receiver_1 = this.vfpuContext;
      var tmp$_0;
      var out = 0.0;
      tmp$_0 = until(0, $receiver_1.vsSize).iterator();
      while (tmp$_0.hasNext()) {
        var i = tmp$_0.next();
        out += InstructionInterpreter$vfad$lambda$lambda$lambda($receiver_1)(i);
      }
      tmp$[n] = out;
    }
    $receiver_0.writeVd_4g7k66$(s, void 0, 1, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vrot_11rb$ = function (s) {
    var $receiver = s.IR;
    var vectorSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var imm5 = this.get_imm5_s8ev3n$(s.IR);
    var cosIndex = extract_0(imm5, 0, 2);
    var sinIndex = extract_0(imm5, 2, 2);
    var negateSin = extractBool(imm5, 4);
    var $receiver_0 = this.vfpuContext;
    $receiver_0.vdSize = vectorSize;
    $receiver_0.readVs_4g7k66$(s, void 0, 1, true);
    for (var n = 0; n < vectorSize; n++) {
      var tmp$ = $receiver_0.vd;
      var $receiver_1 = this.vfpuContext;
      var callback$result;
      var sine = sinv1($receiver_1.get_x_948t6k$($receiver_1.vs));
      var cosine = cosv1($receiver_1.get_x_948t6k$($receiver_1.vs));
      if (negateSin)
        sine = -sine;
      if (n === cosIndex) {
        callback$result = cosine;
      }
       else if (n === sinIndex) {
        callback$result = sine;
      }
       else {
        callback$result = sinIndex === cosIndex ? sine : 0.0;
      }
      tmp$[n] = callback$result;
    }
    $receiver_0.writeVd_4g7k66$(s, void 0, vectorSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vzero_11rb$ = function (s) {
    var destSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = this.vfpuContext;
    $receiver_0.vdSize = destSize;
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_0.vd;
      this.vfpuContext;
      tmp$[n] = 0.0;
    }
    $receiver_0.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vone_11rb$ = function (s) {
    var destSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = this.vfpuContext;
    $receiver_0.vdSize = destSize;
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_0.vd;
      this.vfpuContext;
      tmp$[n] = 1.0;
    }
    $receiver_0.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vmov_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      $receiver_1.vd[n] = this.vfpuContext.vs[n];
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vabs_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var x = this.vfpuContext.vs[n];
      tmp$[n] = Math_0.abs(x);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vsqrt_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var x = this.vfpuContext.vs[n];
      tmp$[n] = Math_0.sqrt(x);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vneg_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      $receiver_1.vd[n] = -this.vfpuContext.vs[n];
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vsat0_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      $receiver_1.vd[n] = get_pspSat0(this.vfpuContext.vs[n]);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vsat1_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      $receiver_1.vd[n] = get_pspSat1(this.vfpuContext.vs[n]);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vrcp_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      $receiver_1.vd[n] = 1.0 / this.vfpuContext.vs[n];
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vrsq_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var x = this.vfpuContext.vs[n];
      tmp$[n] = 1.0 / Math_0.sqrt(x);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vsin_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      $receiver_1.vd[n] = sinv1(this.vfpuContext.vs[n]);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vasin_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      $receiver_1.vd[n] = asinv1(this.vfpuContext.vs[n]);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vnsin_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      $receiver_1.vd[n] = -sinv1(this.vfpuContext.vs[n]);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vcos_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      $receiver_1.vd[n] = cosv1(this.vfpuContext.vs[n]);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vexp2_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var x = this.vfpuContext.vs[n];
      tmp$[n] = Math_0.pow(2.0, x);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vrexp2_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var x = this.vfpuContext.vs[n];
      tmp$[n] = 1.0 / Math_0.pow(2.0, x);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vlog2_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var x = this.vfpuContext.vs[n];
      tmp$[n] = Math_0.log2(x);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vnrcp_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      $receiver_1.vd[n] = -1.0 / this.vfpuContext.vs[n];
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vsgn_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      $receiver_1.vd[n] = get_pspSign(this.vfpuContext.vs[n]);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vocp_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      $receiver_1.vd[n] = 1.0 - this.vfpuContext.vs[n];
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vbfy1_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      var callback$result;
      if (n === 0) {
        callback$result = $receiver_2.get_x_948t6k$($receiver_2.vs) + $receiver_2.get_y_948t6k$($receiver_2.vs);
      }
       else if (n === 1) {
        callback$result = $receiver_2.get_x_948t6k$($receiver_2.vs) - $receiver_2.get_y_948t6k$($receiver_2.vs);
      }
       else if (n === 2) {
        callback$result = $receiver_2.get_z_948t6k$($receiver_2.vs) + $receiver_2.get_w_948t6k$($receiver_2.vs);
      }
       else if (n === 3) {
        callback$result = $receiver_2.get_z_948t6k$($receiver_2.vs) - $receiver_2.get_w_948t6k$($receiver_2.vs);
      }
       else {
        callback$result = error.invalidOp;
      }
      tmp$[n] = callback$result;
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vbfy2_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      var callback$result;
      if (n === 0) {
        callback$result = $receiver_2.get_x_948t6k$($receiver_2.vs) + $receiver_2.get_z_948t6k$($receiver_2.vs);
      }
       else if (n === 1) {
        callback$result = $receiver_2.get_y_948t6k$($receiver_2.vs) + $receiver_2.get_w_948t6k$($receiver_2.vs);
      }
       else if (n === 2) {
        callback$result = $receiver_2.get_x_948t6k$($receiver_2.vs) - $receiver_2.get_z_948t6k$($receiver_2.vs);
      }
       else if (n === 3) {
        callback$result = $receiver_2.get_y_948t6k$($receiver_2.vs) - $receiver_2.get_w_948t6k$($receiver_2.vs);
      }
       else {
        callback$result = error.invalidOp;
      }
      tmp$[n] = callback$result;
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vsrt1_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      var callback$result;
      if (n === 0) {
        var a = $receiver_2.get_x_948t6k$($receiver_2.vs);
        var b = $receiver_2.get_y_948t6k$($receiver_2.vs);
        callback$result = Math_0.min(a, b);
      }
       else if (n === 1) {
        var a_0 = $receiver_2.get_x_948t6k$($receiver_2.vs);
        var b_0 = $receiver_2.get_y_948t6k$($receiver_2.vs);
        callback$result = Math_0.max(a_0, b_0);
      }
       else if (n === 2) {
        var a_1 = $receiver_2.get_z_948t6k$($receiver_2.vs);
        var b_1 = $receiver_2.get_w_948t6k$($receiver_2.vs);
        callback$result = Math_0.min(a_1, b_1);
      }
       else if (n === 3) {
        var a_2 = $receiver_2.get_z_948t6k$($receiver_2.vs);
        var b_2 = $receiver_2.get_w_948t6k$($receiver_2.vs);
        callback$result = Math_0.max(a_2, b_2);
      }
       else {
        callback$result = error.invalidOp;
      }
      tmp$[n] = callback$result;
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vsrt2_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      var $receiver_3 = $receiver_2.vs;
      var block$result;
      if (n === 0) {
        var a = $receiver_2.get_x_948t6k$($receiver_3);
        var b = $receiver_2.get_w_948t6k$($receiver_3);
        block$result = Math_0.min(a, b);
      }
       else if (n === 1) {
        var a_0 = $receiver_2.get_y_948t6k$($receiver_3);
        var b_0 = $receiver_2.get_z_948t6k$($receiver_3);
        block$result = Math_0.min(a_0, b_0);
      }
       else if (n === 2) {
        var a_1 = $receiver_2.get_y_948t6k$($receiver_3);
        var b_1 = $receiver_2.get_z_948t6k$($receiver_3);
        block$result = Math_0.max(a_1, b_1);
      }
       else if (n === 3) {
        var a_2 = $receiver_2.get_x_948t6k$($receiver_3);
        var b_2 = $receiver_2.get_w_948t6k$($receiver_3);
        block$result = Math_0.max(a_2, b_2);
      }
       else {
        block$result = error.invalidOp;
      }
      tmp$[n] = block$result;
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vsrt3_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      var callback$result;
      if (n === 0) {
        var a = $receiver_2.get_x_948t6k$($receiver_2.vs);
        var b = $receiver_2.get_y_948t6k$($receiver_2.vs);
        callback$result = Math_0.max(a, b);
      }
       else if (n === 1) {
        var a_0 = $receiver_2.get_x_948t6k$($receiver_2.vs);
        var b_0 = $receiver_2.get_y_948t6k$($receiver_2.vs);
        callback$result = Math_0.min(a_0, b_0);
      }
       else if (n === 2) {
        var a_1 = $receiver_2.get_z_948t6k$($receiver_2.vs);
        var b_1 = $receiver_2.get_w_948t6k$($receiver_2.vs);
        callback$result = Math_0.max(a_1, b_1);
      }
       else if (n === 3) {
        var a_2 = $receiver_2.get_z_948t6k$($receiver_2.vs);
        var b_2 = $receiver_2.get_w_948t6k$($receiver_2.vs);
        callback$result = Math_0.min(a_2, b_2);
      }
       else {
        callback$result = error.invalidOp;
      }
      tmp$[n] = callback$result;
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vsrt4_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      var callback$result;
      if (n === 0) {
        var a = $receiver_2.get_x_948t6k$($receiver_2.vs);
        var b = $receiver_2.get_w_948t6k$($receiver_2.vs);
        callback$result = Math_0.max(a, b);
      }
       else if (n === 1) {
        var a_0 = $receiver_2.get_y_948t6k$($receiver_2.vs);
        var b_0 = $receiver_2.get_z_948t6k$($receiver_2.vs);
        callback$result = Math_0.max(a_0, b_0);
      }
       else if (n === 2) {
        var a_1 = $receiver_2.get_y_948t6k$($receiver_2.vs);
        var b_1 = $receiver_2.get_z_948t6k$($receiver_2.vs);
        callback$result = Math_0.min(a_1, b_1);
      }
       else if (n === 3) {
        var a_2 = $receiver_2.get_x_948t6k$($receiver_2.vs);
        var b_2 = $receiver_2.get_w_948t6k$($receiver_2.vs);
        callback$result = Math_0.min(a_2, b_2);
      }
       else {
        callback$result = error.invalidOp;
      }
      tmp$[n] = callback$result;
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vsge_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_1 = this.vfpuContext;
    this.vfpuContext.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_1.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      tmp$[n] = $receiver_2.vs[n] >= $receiver_2.vt[n] ? 1.0 : 0.0;
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vslt_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_1 = this.vfpuContext;
    this.vfpuContext.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_1.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      tmp$[n] = $receiver_2.vs[n] < $receiver_2.vt[n] ? 1.0 : 0.0;
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vscmp_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_1 = this.vfpuContext;
    this.vfpuContext.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_1.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      tmp$[n] = Kotlin.primitiveCompareTo($receiver_2.vs[n], $receiver_2.vt[n]);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vadd_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_1 = this.vfpuContext;
    this.vfpuContext.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_1.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      tmp$[n] = pspAdd($receiver_2.vs[n], $receiver_2.vt[n]);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vsub_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_1 = this.vfpuContext;
    this.vfpuContext.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_1.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      tmp$[n] = pspSub($receiver_2.vs[n], $receiver_2.vt[n]);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vmul_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_1 = this.vfpuContext;
    this.vfpuContext.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_1.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      tmp$[n] = $receiver_2.vs[n] * $receiver_2.vt[n];
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vdiv_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_1 = this.vfpuContext;
    this.vfpuContext.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_1.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      tmp$[n] = $receiver_2.vs[n] / $receiver_2.vt[n];
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vmin_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_1 = this.vfpuContext;
    this.vfpuContext.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_1.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      var tmp$_0 = $receiver_2.vs[n];
      var b = $receiver_2.vt[n];
      tmp$[n] = Math_0.min(tmp$_0, b);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vmax_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_1 = this.vfpuContext;
    this.vfpuContext.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_1.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      var tmp$_0 = $receiver_2.vs[n];
      var b = $receiver_2.vt[n];
      tmp$[n] = Math_0.max(tmp$_0, b);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vcrs_t_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_1 = this.vfpuContext;
    this.vfpuContext.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_1.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      var callback$result;
      if (n === 0) {
        callback$result = $receiver_2.get_y_948t6k$($receiver_2.vs) * $receiver_2.get_z_948t6k$($receiver_2.vt);
      }
       else if (n === 1) {
        callback$result = $receiver_2.get_z_948t6k$($receiver_2.vs) * $receiver_2.get_x_948t6k$($receiver_2.vt);
      }
       else if (n === 2) {
        callback$result = $receiver_2.get_x_948t6k$($receiver_2.vs) * $receiver_2.get_y_948t6k$($receiver_2.vt);
      }
       else {
        callback$result = error.invalidOp;
      }
      tmp$[n] = callback$result;
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vcrsp_t_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_1 = this.vfpuContext;
    this.vfpuContext.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_1.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      var callback$result;
      if (n === 0) {
        callback$result = +$receiver_2.get_y_948t6k$($receiver_2.vs) * $receiver_2.get_z_948t6k$($receiver_2.vt) - $receiver_2.get_z_948t6k$($receiver_2.vs) * $receiver_2.get_y_948t6k$($receiver_2.vt);
      }
       else if (n === 1) {
        callback$result = +$receiver_2.get_z_948t6k$($receiver_2.vs) * $receiver_2.get_x_948t6k$($receiver_2.vt) - $receiver_2.get_x_948t6k$($receiver_2.vs) * $receiver_2.get_z_948t6k$($receiver_2.vt);
      }
       else if (n === 2) {
        callback$result = +$receiver_2.get_x_948t6k$($receiver_2.vs) * $receiver_2.get_y_948t6k$($receiver_2.vt) - $receiver_2.get_y_948t6k$($receiver_2.vs) * $receiver_2.get_x_948t6k$($receiver_2.vt);
      }
       else {
        callback$result = error.invalidOp;
      }
      tmp$[n] = callback$result;
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vqmul_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_1 = this.vfpuContext;
    this.vfpuContext.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_1.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      var callback$result;
      if (n === 0) {
        callback$result = +$receiver_2.get_x_948t6k$($receiver_2.vs) * $receiver_2.get_w_948t6k$($receiver_2.vt) + $receiver_2.get_y_948t6k$($receiver_2.vs) * $receiver_2.get_z_948t6k$($receiver_2.vt) - $receiver_2.get_z_948t6k$($receiver_2.vs) * $receiver_2.get_y_948t6k$($receiver_2.vt) + $receiver_2.get_w_948t6k$($receiver_2.vs) * $receiver_2.get_x_948t6k$($receiver_2.vt);
      }
       else if (n === 1) {
        callback$result = -$receiver_2.get_x_948t6k$($receiver_2.vs) * $receiver_2.get_z_948t6k$($receiver_2.vt) + $receiver_2.get_y_948t6k$($receiver_2.vs) * $receiver_2.get_w_948t6k$($receiver_2.vt) + $receiver_2.get_z_948t6k$($receiver_2.vs) * $receiver_2.get_x_948t6k$($receiver_2.vt) + $receiver_2.get_w_948t6k$($receiver_2.vs) * $receiver_2.get_y_948t6k$($receiver_2.vt);
      }
       else if (n === 2) {
        callback$result = +$receiver_2.get_x_948t6k$($receiver_2.vs) * $receiver_2.get_y_948t6k$($receiver_2.vt) - $receiver_2.get_y_948t6k$($receiver_2.vs) * $receiver_2.get_x_948t6k$($receiver_2.vt) + $receiver_2.get_z_948t6k$($receiver_2.vs) * $receiver_2.get_w_948t6k$($receiver_2.vt) + $receiver_2.get_w_948t6k$($receiver_2.vs) * $receiver_2.get_z_948t6k$($receiver_2.vt);
      }
       else if (n === 3) {
        callback$result = -$receiver_2.get_x_948t6k$($receiver_2.vs) * $receiver_2.get_x_948t6k$($receiver_2.vt) - $receiver_2.get_y_948t6k$($receiver_2.vs) * $receiver_2.get_y_948t6k$($receiver_2.vt) - $receiver_2.get_z_948t6k$($receiver_2.vs) * $receiver_2.get_z_948t6k$($receiver_2.vt) + $receiver_2.get_w_948t6k$($receiver_2.vs) * $receiver_2.get_w_948t6k$($receiver_2.vt);
      }
       else {
        callback$result = error.invalidOp;
      }
      tmp$[n] = callback$result;
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$vdot$lambda$lambda$lambda(this$) {
    return function (it) {
      return this$.vs[it] * this$.vt[it];
    };
  }
  InstructionInterpreter.prototype.vdot_11rb$ = function (s) {
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    srcSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_0 = this.vfpuContext;
    this.vfpuContext.vdSize = 1;
    $receiver_0.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_0.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < 1; n++) {
      var tmp$ = $receiver_0.vd;
      var $receiver_1 = this.vfpuContext;
      var tmp$_0;
      var out = 0.0;
      tmp$_0 = until(0, $receiver_1.vsSize).iterator();
      while (tmp$_0.hasNext()) {
        var i = tmp$_0.next();
        out += InstructionInterpreter$vdot$lambda$lambda$lambda($receiver_1)(i);
      }
      tmp$[n] = out;
    }
    $receiver_0.writeVd_4g7k66$(s, void 0, 1, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vscl_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    this.vfpuContext.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_1.readVt_4g7k66$(s, void 0, 1, true);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      tmp$[n] = $receiver_2.vs[n] * $receiver_2.get_x_948t6k$($receiver_2.vt);
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$vhdp$lambda$lambda$lambda(this$) {
    return function (it) {
      return this$.vs[it] * this$.vt[it];
    };
  }
  InstructionInterpreter.prototype.vhdp_11rb$ = function (s) {
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    srcSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_0 = this.vfpuContext;
    this.vfpuContext.vdSize = 1;
    $receiver_0.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_0.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < 1; n++) {
      var tmp$ = $receiver_0.vd;
      var $receiver_1 = this.vfpuContext;
      $receiver_1.vs[$receiver_1.vsSize - 1 | 0] = 1.0;
      var tmp$_0;
      var out = 0.0;
      tmp$_0 = until(0, $receiver_1.vsSize).iterator();
      while (tmp$_0.hasNext()) {
        var i = tmp$_0.next();
        out += InstructionInterpreter$vhdp$lambda$lambda$lambda($receiver_1)(i);
      }
      tmp$[n] = out;
    }
    $receiver_0.writeVd_4g7k66$(s, void 0, 1, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vdet_11rb$ = function (s) {
    var srcSize;
    var targetSize;
    var $receiver = s.IR;
    srcSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_0 = this.vfpuContext;
    this.vfpuContext.vdSize = 1;
    $receiver_0.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_0.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < 1; n++) {
      var tmp$ = $receiver_0.vd;
      var $receiver_1 = this.vfpuContext;
      tmp$[n] = $receiver_1.get_x_948t6k$($receiver_1.vs) * $receiver_1.get_y_948t6k$($receiver_1.vt) - $receiver_1.get_y_948t6k$($receiver_1.vs) * $receiver_1.get_x_948t6k$($receiver_1.vt);
    }
    $receiver_0.writeVd_4g7k66$(s, void 0, 1, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vcmp_11rb$ = function (s) {
    var $receiver = s.IR;
    var size = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var cc = {v: 0};
    var destSize;
    var srcSize;
    var targetSize;
    var $receiver_0 = s.IR;
    destSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_1, 7, 1) | 0) + (2 * extract_0($receiver_1, 15, 1) | 0) | 0;
    targetSize = srcSize;
    var $receiver_2 = this.vfpuContext;
    $receiver_2.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_2.readVt_4g7k66$(s, void 0, targetSize, true);
    for (var n = 0; n < destSize; n++) {
      var $receiver_3 = this.vfpuContext;
      var tmp$, tmp$_0;
      tmp$ = this.get_imm4_s8ev3n$(s.IR);
      if (tmp$ === CpuState$VCondition_getInstance().FL)
        tmp$_0 = false;
      else if (tmp$ === CpuState$VCondition_getInstance().EQ) {
        tmp$_0 = $receiver_3.vs[n] === $receiver_3.vt[n];
      }
       else if (tmp$ === CpuState$VCondition_getInstance().LT) {
        tmp$_0 = $receiver_3.vs[n] < $receiver_3.vt[n];
      }
       else if (tmp$ === CpuState$VCondition_getInstance().LE) {
        tmp$_0 = $receiver_3.vs[n] <= $receiver_3.vt[n];
      }
       else if (tmp$ === CpuState$VCondition_getInstance().TR)
        tmp$_0 = true;
      else if (tmp$ === CpuState$VCondition_getInstance().NE) {
        tmp$_0 = $receiver_3.vs[n] !== $receiver_3.vt[n];
      }
       else if (tmp$ === CpuState$VCondition_getInstance().GE) {
        tmp$_0 = $receiver_3.vs[n] >= $receiver_3.vt[n];
      }
       else if (tmp$ === CpuState$VCondition_getInstance().GT) {
        tmp$_0 = $receiver_3.vs[n] > $receiver_3.vt[n];
      }
       else if (tmp$ === CpuState$VCondition_getInstance().EZ) {
        var tmp$_1 = $receiver_3.vs[n] === 0.0;
        if (!tmp$_1) {
          tmp$_1 = $receiver_3.vs[n] === -0.0;
        }
        tmp$_0 = tmp$_1;
      }
       else if (tmp$ === CpuState$VCondition_getInstance().EN) {
        tmp$_0 = isNaN_0($receiver_3.vs[n]);
      }
       else if (tmp$ === CpuState$VCondition_getInstance().EI) {
        tmp$_0 = isInfinite($receiver_3.vs[n]);
      }
       else if (tmp$ === CpuState$VCondition_getInstance().ES) {
        tmp$_0 = isNanOrInfinitef($receiver_3.vs[n]);
      }
       else if (tmp$ === CpuState$VCondition_getInstance().NZ) {
        tmp$_0 = $receiver_3.vs[n] !== 0.0;
      }
       else if (tmp$ === CpuState$VCondition_getInstance().NN) {
        tmp$_0 = !isNaN_0($receiver_3.vs[n]);
      }
       else if (tmp$ === CpuState$VCondition_getInstance().NI) {
        tmp$_0 = !isInfinite($receiver_3.vs[n]);
      }
       else if (tmp$ === CpuState$VCondition_getInstance().NS) {
        tmp$_0 = !isNanOrInfinitef($receiver_3.vs[n]);
      }
       else
        tmp$_0 = false;
      var cond = tmp$_0;
      if (cond) {
        cc.v = cc.v | 1 << n;
      }
    }
    this.consumePrefixes_cwqtgi$(s, true);
    var mask = (1 << size) - 1 | 0;
    var affectedBits = mask | 1 << 4 | 1 << 5;
    if ((cc.v & mask) !== 0)
      cc.v = insert_0(cc.v, true, 4);
    if ((cc.v & mask) === mask)
      cc.v = insert_0(cc.v, true, 5);
    s.VFPR_CC = s.VFPR_CC & ~affectedBits | cc.v;
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype._vcmovtf_0 = function (s, truth) {
    var ccidx = this.get_imm3_s8ev3n$(s.IR);
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    $receiver_1.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, true);
    $receiver_1.readVd_2ug323$(s, void 0, destSize);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vd;
      var $receiver_2 = this.vfpuContext;
      var tmp$_0;
      if (ccidx === 0 || ccidx === 1 || ccidx === 2 || ccidx === 3 || ccidx === 4 || ccidx === 5)
        tmp$_0 = s.VFPR_CC_za3lpa$(ccidx);
      else if (ccidx === 6)
        tmp$_0 = s.VFPR_CC_za3lpa$(n);
      else if (ccidx === 7)
        tmp$_0 = true;
      else
        tmp$_0 = false;
      var cond = tmp$_0;
      tmp$[n] = cond !== truth ? $receiver_2.vs[n] : $receiver_2.vd[n];
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, true);
    this.consumePrefixes_cwqtgi$(s, true);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vcmovf_11rb$ = function (s) {
    this._vcmovtf_0(s, true);
  };
  InstructionInterpreter.prototype.vcmovt_11rb$ = function (s) {
    this._vcmovtf_0(s, false);
  };
  InstructionInterpreter.prototype.vwbn_11rb$ = function (s) {
    var srcSize;
    var $receiver = s.IR;
    srcSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = this.vfpuContext;
    $receiver_0.vdSize = 1;
    $receiver_0.readVs_4g7k66$(s, void 0, srcSize, false);
    for (var n = 0; n < 1; n++) {
      var tmp$ = $receiver_0.vdi;
      var $receiver_1 = this.vfpuContext;
      var callback$result;
      var exp = this.get_imm8_s8ev3n$(s.IR);
      var sigbit = $receiver_1.vsi[n] & (new Kotlin.Long(-2147483648, 0)).toInt();
      var prevExp = ($receiver_1.vsi[n] & 2139095040) >>> 23;
      var mantissa = $receiver_1.vsi[n] & 8388607 | 8388608;
      if (prevExp !== 255 && prevExp !== 0) {
        if (exp > prevExp) {
          var shift = exp - prevExp & 15;
          mantissa = mantissa >>> shift;
        }
         else {
          var shift_0 = prevExp - exp & 15;
          mantissa = mantissa << shift_0;
        }
        callback$result = sigbit | mantissa & 8388607 | exp << 23;
      }
       else {
        callback$result = $receiver_1.vsi[n] | exp << 23;
      }
      tmp$[n] = callback$result;
    }
    $receiver_0.writeVd_4g7k66$(s, void 0, 1, false);
    this.consumePrefixes_cwqtgi$(s, false);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vsbn_11rb$ = function (s) {
    var destSize;
    var srcSize;
    var $receiver = s.IR;
    destSize = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    var $receiver_0 = s.IR;
    srcSize = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    var $receiver_1 = this.vfpuContext;
    this.vfpuContext.vdSize = destSize;
    $receiver_1.readVs_4g7k66$(s, void 0, srcSize, false);
    $receiver_1.readVt_4g7k66$(s, void 0, 1, false);
    for (var n = 0; n < destSize; n++) {
      var tmp$ = $receiver_1.vdi;
      var $receiver_2 = this.vfpuContext;
      var callback$result;
      var exp = 127 + $receiver_2.vti[0] & 255;
      var prev = $receiver_2.vsi[n] & 2139095040;
      if (prev !== 0 && prev !== 2139095040) {
        callback$result = $receiver_2.vsi[n] & ~2139095040 | exp << 23;
      }
       else {
        callback$result = $receiver_2.vsi[n];
      }
      tmp$[n] = callback$result;
    }
    $receiver_1.writeVd_4g7k66$(s, void 0, destSize, false);
    this.consumePrefixes_cwqtgi$(s, false);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$vmzero$lambda$lambda($receiver) {
    return 0.0;
  }
  InstructionInterpreter.prototype.vmzero_11rb$ = function (s) {
    this.setMatrixVD_93vsdt$(s, void 0, InstructionInterpreter$vmzero$lambda$lambda);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$vmone$lambda$lambda($receiver) {
    return 1.0;
  }
  InstructionInterpreter.prototype.vmone_11rb$ = function (s) {
    this.setMatrixVD_93vsdt$(s, void 0, InstructionInterpreter$vmone$lambda$lambda);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$vmidt$lambda$lambda($receiver) {
    return $receiver.row === $receiver.col ? 1.0 : 0.0;
  }
  InstructionInterpreter.prototype.vmidt_11rb$ = function (s) {
    this.setMatrixVD_93vsdt$(s, void 0, InstructionInterpreter$vmidt$lambda$lambda);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$vmmov$lambda$lambda($receiver) {
    return $receiver.ms.get_vux9f0$($receiver.col, $receiver.row);
  }
  InstructionInterpreter.prototype.vmmov_11rb$ = function (s) {
    this.setMatrixVD_VS_93vsdt$(s, void 0, InstructionInterpreter$vmmov$lambda$lambda);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$vmmul$lambda$lambda($receiver) {
    var $receiver_0 = until(0, $receiver.side);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver_0, 10));
    var tmp$;
    tmp$ = $receiver_0.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$($receiver.ms.get_vux9f0$($receiver.row, item) * $receiver.mt.get_vux9f0$($receiver.col, item));
    }
    return sum(destination);
  }
  InstructionInterpreter.prototype.vmmul_11rb$ = function (s) {
    this.setMatrixVD_VSVT_93vsdt$(s, void 0, InstructionInterpreter$vmmul$lambda$lambda);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.mfvc_11rb$ = function (s) {
    s.setGpr_vux9f0$(s.IR >>> 16 & 31, s.VFPRC[this.get_imm7_s8ev3n$(s.IR)]);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.mtvc_11rb$ = function (s) {
    var tmp$ = s.VFPRC;
    var get_RT_he8x89$result;
    get_RT_he8x89$result = s.getGpr_za3lpa$(s.IR >>> 16 & 31);
    tmp$[this.get_imm7_s8ev3n$(s.IR)] = get_RT_he8x89$result;
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$_vtfm_x$lambda$lambda$lambda(this$) {
    return function (it) {
      return this$.vs[it] * this$.vt[it];
    };
  }
  InstructionInterpreter.prototype._vtfm_x_0 = function (s, size) {
    var $receiver = this.vfpuContext;
    this.getVectorRegisterValues_1mcbcj$(s, $receiver.b_vt, s.IR >>> 16 & 127, size);
    for (var n = 0; n < size; n++) {
      this.getVectorRegisterValues_1mcbcj$(s, $receiver.b_vs, (s.IR >>> 8 & 127) + n | 0, size);
      var tmp$ = this.vfpuContext.vd;
      var tmp$_0;
      var out = 0.0;
      tmp$_0 = until(0, size).iterator();
      while (tmp$_0.hasNext()) {
        var i = tmp$_0.next();
        out += InstructionInterpreter$_vtfm_x$lambda$lambda$lambda($receiver)(i);
      }
      tmp$[n] = out;
    }
    this.setVectorRegisterValues_1mcbcj$(s, $receiver.b_vd, s.IR >>> 0 & 127, size);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  function InstructionInterpreter$_vhtfm_x$lambda$lambda$lambda(this$) {
    return function (it) {
      return this$.vs[it] * this$.vt[it];
    };
  }
  InstructionInterpreter.prototype._vhtfm_x_0 = function (s, size) {
    var $receiver = this.vfpuContext;
    this.getVectorRegisterValues_1mcbcj$(s, $receiver.b_vt, s.IR >>> 16 & 127, size - 1 | 0);
    $receiver.vt[size - 1 | 0] = 1.0;
    for (var n = 0; n < size; n++) {
      this.getVectorRegisterValues_1mcbcj$(s, $receiver.b_vs, (s.IR >>> 8 & 127) + n | 0, size);
      var tmp$ = this.vfpuContext.vd;
      var tmp$_0;
      var out = 0.0;
      tmp$_0 = until(0, size).iterator();
      while (tmp$_0.hasNext()) {
        var i = tmp$_0.next();
        out += InstructionInterpreter$_vhtfm_x$lambda$lambda$lambda($receiver)(i);
      }
      tmp$[n] = out;
    }
    this.setVectorRegisterValues_1mcbcj$(s, $receiver.b_vd, s.IR >>> 0 & 127, size);
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vtfm2_11rb$ = function (s) {
    this._vtfm_x_0(s, 2);
  };
  InstructionInterpreter.prototype.vtfm3_11rb$ = function (s) {
    this._vtfm_x_0(s, 3);
  };
  InstructionInterpreter.prototype.vtfm4_11rb$ = function (s) {
    this._vtfm_x_0(s, 4);
  };
  InstructionInterpreter.prototype.vhtfm2_11rb$ = function (s) {
    this._vhtfm_x_0(s, 2);
  };
  InstructionInterpreter.prototype.vhtfm3_11rb$ = function (s) {
    this._vhtfm_x_0(s, 3);
  };
  InstructionInterpreter.prototype.vhtfm4_11rb$ = function (s) {
    this._vhtfm_x_0(s, 4);
  };
  function InstructionInterpreter$vmscl$lambda$lambda(closure$scale) {
    return function ($receiver) {
      return $receiver.ms.get_vux9f0$($receiver.col, $receiver.row) * closure$scale;
    };
  }
  InstructionInterpreter.prototype.vmscl_11rb$ = function (s) {
    var scale = this.vfpuContext.sreadVt_r8npuw$(s, void 0, 1)[0];
    this.setMatrixVD_VS_93vsdt$(s, void 0, InstructionInterpreter$vmscl$lambda$lambda(scale));
    s._PC = s._nPC;
    s._nPC = s._nPC + 4 | 0;
  };
  InstructionInterpreter.prototype.vidt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vidt);
  };
  InstructionInterpreter.prototype.vnop_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vnop);
  };
  InstructionInterpreter.prototype.vsync_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsync);
  };
  InstructionInterpreter.prototype.vflush_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vflush);
  };
  InstructionInterpreter.prototype.vrnds_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrnds);
  };
  InstructionInterpreter.prototype.vrndi_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrndi);
  };
  InstructionInterpreter.prototype.vrndf1_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrndf1);
  };
  InstructionInterpreter.prototype.vrndf2_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vrndf2);
  };
  InstructionInterpreter.prototype.vmfvc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmfvc);
  };
  InstructionInterpreter.prototype.vmtvc_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vmtvc);
  };
  InstructionInterpreter.prototype.mfvme_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfvme);
  };
  InstructionInterpreter.prototype.mtvme_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtvme);
  };
  InstructionInterpreter.prototype.vlgb_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vlgb);
  };
  InstructionInterpreter.prototype.vsbz_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsbz);
  };
  InstructionInterpreter.prototype.vsocp_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().vsocp);
  };
  InstructionInterpreter.prototype.bvf_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvf);
  };
  InstructionInterpreter.prototype.bvt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvt);
  };
  InstructionInterpreter.prototype.bvfl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvfl);
  };
  InstructionInterpreter.prototype.bvtl_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().bvtl);
  };
  InstructionInterpreter.prototype.getMatrixRegsValues_bs2y7v$ = function ($receiver, out, matrixReg, N) {
    var side = this.getMatrixRegs_x9gid1$(this.tempRegs2_0, matrixReg, N);
    for (var j = 0; j < side; j++) {
      for (var i = 0; i < side; i++)
        out.set_n0b4r3$(j, i, $receiver.getVfpr_za3lpa$(this.tempRegs2_0.get_vux9f0$(j, i)));
    }
    return side;
  };
  InstructionInterpreter.prototype.setMatrixRegsValues_bs2y7v$ = function ($receiver, inp, matrixReg, N) {
    var side = this.getMatrixRegs_x9gid1$(this.tempRegs2_0, matrixReg, N);
    for (var j = 0; j < side; j++) {
      for (var i = 0; i < side; i++)
        $receiver.setVfpr_24o109$(this.tempRegs2_0.get_vux9f0$(j, i), inp.get_vux9f0$(j, i));
    }
    return side;
  };
  InstructionInterpreter.prototype.getMatrixRegs_x9gid1$ = function (out, matrixReg, N) {
    var tmp$, tmp$_0;
    var side = N;
    var mtx = matrixReg >>> 2 & 7;
    var col = matrixReg & 3;
    var transpose = (matrixReg >>> 5 & 1) !== 0;
    if (N === 2)
      tmp$ = matrixReg >>> 5 & 2;
    else if (N === 3)
      tmp$ = matrixReg >>> 6 & 1;
    else if (N === 4)
      tmp$ = matrixReg >>> 5 & 2;
    else
      tmp$ = error.invalidOp;
    var row = tmp$;
    for (var i = 0; i < side; i++) {
      for (var j = 0; j < side; j++) {
        if (transpose) {
          tmp$_0 = (row + i & 3) + ((col + j & 3) * 32 | 0) | 0;
        }
         else {
          tmp$_0 = (col + j & 3) + ((row + i & 3) * 32 | 0) | 0;
        }
        out.set_qt1dr2$(j, i, (mtx * 4 | 0) + tmp$_0 | 0);
      }
    }
    return side;
  };
  function InstructionInterpreter$MatrixContext() {
    this.side = 0;
    this.col = 0;
    this.row = 0;
    this.ms = new FloatArray2(4, 4);
    this.md = new FloatArray2(4, 4);
    this.mt = new FloatArray2(4, 4);
  }
  InstructionInterpreter$MatrixContext.prototype.setPos_vux9f0$ = function (c, r) {
    this.col = c;
    this.row = r;
    return this;
  };
  InstructionInterpreter$MatrixContext.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MatrixContext',
    interfaces: []
  };
  InstructionInterpreter.prototype.setMatrixVD_93vsdt$ = function ($receiver, side, callback) {
    if (side === void 0) {
      var $receiver_0 = $receiver.IR;
      side = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    }
    this.mc_0.side = side;
    for (var col = 0; col < side; col++) {
      for (var row = 0; row < side; row++) {
        this.mc_0.md.set_n0b4r3$(col, row, callback(this.mc_0.setPos_vux9f0$(col, row)));
      }
    }
    this.setMatrixRegsValues_bs2y7v$.call(this, $receiver, this.mc_0.md, $receiver.IR >>> 0 & 127, side);
  };
  InstructionInterpreter.prototype.setMatrixVD_VS_93vsdt$ = function ($receiver, side, callback) {
    if (side === void 0) {
      var $receiver_0 = $receiver.IR;
      side = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    }
    this.getMatrixRegsValues_bs2y7v$.call(this, $receiver, this.mc_0.ms, $receiver.IR >>> 8 & 127, side);
    this.mc_0.side = side;
    for (var col = 0; col < side; col++) {
      for (var row = 0; row < side; row++) {
        this.mc_0.md.set_n0b4r3$(col, row, callback(this.mc_0.setPos_vux9f0$(col, row)));
      }
    }
    this.setMatrixRegsValues_bs2y7v$.call(this, $receiver, this.mc_0.md, $receiver.IR >>> 0 & 127, side);
  };
  InstructionInterpreter.prototype.setMatrixVD_VSVT_93vsdt$ = function ($receiver, side, callback) {
    if (side === void 0) {
      var $receiver_0 = $receiver.IR;
      side = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    }
    this.getMatrixRegsValues_bs2y7v$.call(this, $receiver, this.mc_0.ms, $receiver.IR >>> 8 & 127, side);
    this.getMatrixRegsValues_bs2y7v$.call(this, $receiver, this.mc_0.mt, $receiver.IR >>> 16 & 127, side);
    this.mc_0.side = side;
    for (var col = 0; col < side; col++) {
      for (var row = 0; row < side; row++) {
        this.mc_0.md.set_n0b4r3$(col, row, callback(this.mc_0.setPos_vux9f0$(col, row)));
      }
    }
    this.setMatrixRegsValues_bs2y7v$.call(this, $receiver, this.mc_0.md, $receiver.IR >>> 0 & 127, side);
  };
  InstructionInterpreter.prototype.getVectorRegisters_nd5v6f$ = function (out, vectorReg, N) {
    var tmp$;
    var mtx = extract_0(vectorReg, 2, 3);
    var col = extract_0(vectorReg, 0, 2);
    var row;
    var length = N;
    var transpose = N !== 1 && extractBool(vectorReg, 5);
    if (N === 1)
      row = vectorReg >>> 5 & 3;
    else if (N === 2)
      row = vectorReg >>> 5 & 2;
    else if (N === 3)
      row = vectorReg >>> 6 & 1;
    else if (N === 4)
      row = vectorReg >>> 5 & 2;
    else
      error.invalidOp;
    for (var i = 0; i < length; i++) {
      if (transpose) {
        tmp$ = (row + i & 3) + (col * 32 | 0) | 0;
      }
       else {
        tmp$ = col + ((row + i & 3) * 32 | 0) | 0;
      }
      out[i] = (mtx * 4 | 0) + tmp$ | 0;
    }
    return N;
  };
  InstructionInterpreter.prototype.getVectorRegisterValues_1mcbcj$ = function ($receiver, out, vectorReg, N) {
    this.getVectorRegisters_nd5v6f$(this.tempRegs_0, vectorReg, N);
    for (var n = 0; n < N; n++) {
      out.i[n] = $receiver.getVfprI_za3lpa$(this.tempRegs_0[n]);
    }
  };
  InstructionInterpreter.prototype.setVectorRegisterValues_1mcbcj$ = function ($receiver, inp, vectorReg, N) {
    this.getVectorRegisters_nd5v6f$(this.tempRegs_0, vectorReg, N);
    for (var n = 0; n < N; n++) {
      $receiver.setVfprI_vux9f0$(this.tempRegs_0[n], inp.i[n]);
    }
  };
  function InstructionInterpreter$VfpuContext() {
    this.b_vs = new FloatIntBuffer(16);
    this.b_vd = new FloatIntBuffer(16);
    this.b_vt = new FloatIntBuffer(16);
    this.vsSize = 0;
    this.vdSize = 0;
    this.vtSize = 0;
    this.vs = this.b_vs.f;
    this.vd = this.b_vd.f;
    this.vt = this.b_vt.f;
    this.vsi = this.b_vs.i;
    this.vdi = this.b_vd.i;
    this.vti = this.b_vt.i;
  }
  InstructionInterpreter$VfpuContext.prototype.get_x_948t6k$ = function ($receiver) {
    return $receiver[0];
  };
  InstructionInterpreter$VfpuContext.prototype.set_x_k8lyd1$ = function ($receiver, value) {
    $receiver[0] = value;
  };
  InstructionInterpreter$VfpuContext.prototype.get_y_948t6k$ = function ($receiver) {
    return $receiver[1];
  };
  InstructionInterpreter$VfpuContext.prototype.set_y_k8lyd1$ = function ($receiver, value) {
    $receiver[1] = value;
  };
  InstructionInterpreter$VfpuContext.prototype.get_z_948t6k$ = function ($receiver) {
    return $receiver[2];
  };
  InstructionInterpreter$VfpuContext.prototype.set_z_k8lyd1$ = function ($receiver, value) {
    $receiver[2] = value;
  };
  InstructionInterpreter$VfpuContext.prototype.get_w_948t6k$ = function ($receiver) {
    return $receiver[3];
  };
  InstructionInterpreter$VfpuContext.prototype.set_w_k8lyd1$ = function ($receiver, value) {
    $receiver[3] = value;
  };
  InstructionInterpreter$VfpuContext.prototype.get_x_2t43qp$ = function ($receiver) {
    return $receiver[0];
  };
  InstructionInterpreter$VfpuContext.prototype.set_x_6ngfjl$ = function ($receiver, value) {
    $receiver[0] = value;
  };
  InstructionInterpreter$VfpuContext.prototype.get_y_2t43qp$ = function ($receiver) {
    return $receiver[1];
  };
  InstructionInterpreter$VfpuContext.prototype.set_y_6ngfjl$ = function ($receiver, value) {
    $receiver[1] = value;
  };
  InstructionInterpreter$VfpuContext.prototype.get_z_2t43qp$ = function ($receiver) {
    return $receiver[2];
  };
  InstructionInterpreter$VfpuContext.prototype.set_z_6ngfjl$ = function ($receiver, value) {
    $receiver[2] = value;
  };
  InstructionInterpreter$VfpuContext.prototype.get_w_2t43qp$ = function ($receiver) {
    return $receiver[3];
  };
  InstructionInterpreter$VfpuContext.prototype.set_w_6ngfjl$ = function ($receiver, value) {
    $receiver[3] = value;
  };
  InstructionInterpreter$VfpuContext.prototype.readVs_4g7k66$ = function ($receiver, reg, size, prefixes) {
    if (reg === void 0) {
      reg = $receiver.IR >>> 8 & 127;
    }
    if (size === void 0) {
      var $receiver_0 = $receiver.IR;
      size = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    }
    if (prefixes === void 0)
      prefixes = false;
    this.vsSize = size;
    InstructionInterpreter_getInstance().getVectorRegisterValues_1mcbcj$($receiver, this.b_vs, reg, size);
    if (prefixes)
      $receiver.vpfxs.applyAndConsume_dr4wf9$(this.vs, size);
    return this.vs;
  };
  InstructionInterpreter$VfpuContext.prototype.readVt_4g7k66$ = function ($receiver, reg, size, prefixes) {
    if (reg === void 0) {
      reg = $receiver.IR >>> 16 & 127;
    }
    if (size === void 0) {
      var $receiver_0 = $receiver.IR;
      size = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    }
    if (prefixes === void 0)
      prefixes = false;
    this.vtSize = size;
    InstructionInterpreter_getInstance().getVectorRegisterValues_1mcbcj$($receiver, this.b_vt, reg, size);
    if (prefixes)
      $receiver.vpfxt.applyAndConsume_dr4wf9$(this.vt, size);
    return this.vt;
  };
  InstructionInterpreter$VfpuContext.prototype.readVd_2ug323$ = function ($receiver, reg, size) {
    if (reg === void 0) {
      reg = $receiver.IR >>> 0 & 127;
    }
    if (size === void 0) {
      var $receiver_0 = $receiver.IR;
      size = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    }
    this.vdSize = size;
    InstructionInterpreter_getInstance().getVectorRegisterValues_1mcbcj$($receiver, this.b_vd, reg, size);
    return this.vd;
  };
  InstructionInterpreter$VfpuContext.prototype.writeVd_4g7k66$ = function ($receiver, reg, size, prefixes) {
    if (reg === void 0) {
      reg = $receiver.IR >>> 0 & 127;
    }
    if (size === void 0) {
      var $receiver_0 = $receiver.IR;
      size = 1 + (1 * extract_0($receiver_0, 7, 1) | 0) + (2 * extract_0($receiver_0, 15, 1) | 0) | 0;
    }
    if (prefixes === void 0)
      prefixes = false;
    InstructionInterpreter_getInstance().getVectorRegisters_nd5v6f$(InstructionInterpreter_getInstance().tempRegs_0, reg, size);
    if (prefixes) {
      for (var i = 0; i < size; i++) {
        if ($receiver.vpfxd.mustWrite_za3lpa$(i)) {
          $receiver.setVfpr_24o109$(InstructionInterpreter_getInstance().tempRegs_0[i], $receiver.vpfxd.transform_24o109$(i, this.vd[i]));
        }
      }
      $receiver.vpfxd.consume();
    }
     else {
      for (var i_0 = 0; i_0 < size; i_0++) {
        $receiver.setVfprI_vux9f0$(InstructionInterpreter_getInstance().tempRegs_0[i_0], this.vdi[i_0]);
      }
    }
  };
  InstructionInterpreter$VfpuContext.prototype.sreadVs_r8npuw$ = function (s, reg, size) {
    if (reg === void 0) {
      reg = s.IR >>> 8 & 127;
    }
    if (size === void 0) {
      var $receiver = s.IR;
      size = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    }
    return this.readVs_4g7k66$(s, reg, size);
  };
  InstructionInterpreter$VfpuContext.prototype.sreadVt_r8npuw$ = function (s, reg, size) {
    if (reg === void 0) {
      reg = s.IR >>> 16 & 127;
    }
    if (size === void 0) {
      var $receiver = s.IR;
      size = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    }
    return this.readVt_4g7k66$(s, reg, size);
  };
  InstructionInterpreter$VfpuContext.prototype.sreadVd_r8npuw$ = function (s, reg, size) {
    if (reg === void 0) {
      reg = s.IR >>> 0 & 127;
    }
    if (size === void 0) {
      var $receiver = s.IR;
      size = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    }
    return this.readVd_2ug323$(s, reg, size);
  };
  InstructionInterpreter$VfpuContext.prototype.swriteVd_r8npuw$ = function (s, reg, size) {
    if (reg === void 0) {
      reg = s.IR >>> 0 & 127;
    }
    if (size === void 0) {
      var $receiver = s.IR;
      size = 1 + (1 * extract_0($receiver, 7, 1) | 0) + (2 * extract_0($receiver, 15, 1) | 0) | 0;
    }
    this.writeVd_4g7k66$(s, reg, size);
  };
  InstructionInterpreter$VfpuContext.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VfpuContext',
    interfaces: []
  };
  InstructionInterpreter.prototype.setVD__4f6eqa$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.interpreter.InstructionInterpreter.setVD__4f6eqa$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver, destSize, prefixes, callback) {
      if (destSize === void 0) {
        var $receiver_0 = $receiver.IR;
        destSize = 1 + (1 * extract($receiver_0, 7, 1) | 0) + (2 * extract($receiver_0, 15, 1) | 0) | 0;
      }
      if (prefixes === void 0)
        prefixes = false;
      var $receiver_1 = this.vfpuContext;
      $receiver_1.vdSize = destSize;
      for (var n = 0; n < destSize; n++) {
        $receiver_1.vd[n] = callback(this.vfpuContext, n);
      }
      $receiver_1.writeVd_4g7k66$($receiver, void 0, destSize, prefixes);
      this.consumePrefixes_cwqtgi$($receiver, prefixes);
    };
  }));
  InstructionInterpreter.prototype.setVDI__d6yez$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.interpreter.InstructionInterpreter.setVDI__d6yez$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver, destSize, prefixes, callback) {
      if (destSize === void 0) {
        var $receiver_0 = $receiver.IR;
        destSize = 1 + (1 * extract($receiver_0, 7, 1) | 0) + (2 * extract($receiver_0, 15, 1) | 0) | 0;
      }
      if (prefixes === void 0)
        prefixes = false;
      var $receiver_1 = this.vfpuContext;
      $receiver_1.vdSize = destSize;
      for (var n = 0; n < destSize; n++) {
        $receiver_1.vdi[n] = callback(this.vfpuContext, n);
      }
      $receiver_1.writeVd_4g7k66$($receiver, void 0, destSize, prefixes);
      this.consumePrefixes_cwqtgi$($receiver, prefixes);
    };
  }));
  InstructionInterpreter.prototype.setVD_VS_ffp1py$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.interpreter.InstructionInterpreter.setVD_VS_ffp1py$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver, destSize, srcSize, prefixes, callback) {
      if (destSize === void 0) {
        var $receiver_0 = $receiver.IR;
        destSize = 1 + (1 * extract($receiver_0, 7, 1) | 0) + (2 * extract($receiver_0, 15, 1) | 0) | 0;
      }
      if (srcSize === void 0) {
        var $receiver_1 = $receiver.IR;
        srcSize = 1 + (1 * extract($receiver_1, 7, 1) | 0) + (2 * extract($receiver_1, 15, 1) | 0) | 0;
      }
      if (prefixes === void 0)
        prefixes = false;
      var $receiver_2 = this.vfpuContext;
      $receiver_2.vdSize = destSize;
      $receiver_2.readVs_4g7k66$($receiver, void 0, srcSize, prefixes);
      for (var n = 0; n < destSize; n++) {
        $receiver_2.vd[n] = callback(this.vfpuContext, n);
      }
      $receiver_2.writeVd_4g7k66$($receiver, void 0, destSize, prefixes);
      this.consumePrefixes_cwqtgi$($receiver, prefixes);
    };
  }));
  InstructionInterpreter.prototype.setVDI_VS_25otnt$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.interpreter.InstructionInterpreter.setVDI_VS_25otnt$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver, destSize, srcSize, prefixes, callback) {
      if (destSize === void 0) {
        var $receiver_0 = $receiver.IR;
        destSize = 1 + (1 * extract($receiver_0, 7, 1) | 0) + (2 * extract($receiver_0, 15, 1) | 0) | 0;
      }
      if (srcSize === void 0) {
        var $receiver_1 = $receiver.IR;
        srcSize = 1 + (1 * extract($receiver_1, 7, 1) | 0) + (2 * extract($receiver_1, 15, 1) | 0) | 0;
      }
      if (prefixes === void 0)
        prefixes = false;
      var $receiver_2 = this.vfpuContext;
      $receiver_2.vdSize = destSize;
      $receiver_2.readVs_4g7k66$($receiver, void 0, srcSize, prefixes);
      for (var n = 0; n < destSize; n++) {
        $receiver_2.vdi[n] = callback(this.vfpuContext, n);
      }
      $receiver_2.writeVd_4g7k66$($receiver, void 0, destSize, prefixes);
      this.consumePrefixes_cwqtgi$($receiver, prefixes);
    };
  }));
  InstructionInterpreter.prototype.setVD_VDVS_ffp1py$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.interpreter.InstructionInterpreter.setVD_VDVS_ffp1py$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver, destSize, srcSize, prefixes, callback) {
      if (destSize === void 0) {
        var $receiver_0 = $receiver.IR;
        destSize = 1 + (1 * extract($receiver_0, 7, 1) | 0) + (2 * extract($receiver_0, 15, 1) | 0) | 0;
      }
      if (srcSize === void 0) {
        var $receiver_1 = $receiver.IR;
        srcSize = 1 + (1 * extract($receiver_1, 7, 1) | 0) + (2 * extract($receiver_1, 15, 1) | 0) | 0;
      }
      if (prefixes === void 0)
        prefixes = false;
      var $receiver_2 = this.vfpuContext;
      $receiver_2.vdSize = destSize;
      $receiver_2.readVs_4g7k66$($receiver, void 0, srcSize, prefixes);
      $receiver_2.readVd_2ug323$($receiver, void 0, destSize);
      for (var n = 0; n < destSize; n++) {
        $receiver_2.vd[n] = callback(this.vfpuContext, n);
      }
      $receiver_2.writeVd_4g7k66$($receiver, void 0, destSize, prefixes);
      this.consumePrefixes_cwqtgi$($receiver, prefixes);
    };
  }));
  InstructionInterpreter.prototype.setVD_VSVT_2xp0nm$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.interpreter.InstructionInterpreter.setVD_VSVT_2xp0nm$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver, destSize, srcSize, targetSize, prefixes, callback) {
      if (destSize === void 0) {
        var $receiver_0 = $receiver.IR;
        destSize = 1 + (1 * extract($receiver_0, 7, 1) | 0) + (2 * extract($receiver_0, 15, 1) | 0) | 0;
      }
      if (srcSize === void 0) {
        var $receiver_1 = $receiver.IR;
        srcSize = 1 + (1 * extract($receiver_1, 7, 1) | 0) + (2 * extract($receiver_1, 15, 1) | 0) | 0;
      }
      if (targetSize === void 0)
        targetSize = srcSize;
      if (prefixes === void 0)
        prefixes = false;
      var $receiver_2 = this.vfpuContext;
      this.vfpuContext.vdSize = destSize;
      $receiver_2.readVs_4g7k66$($receiver, void 0, srcSize, prefixes);
      $receiver_2.readVt_4g7k66$($receiver, void 0, targetSize, prefixes);
      for (var n = 0; n < destSize; n++) {
        $receiver_2.vd[n] = callback(this.vfpuContext, n);
      }
      $receiver_2.writeVd_4g7k66$($receiver, void 0, destSize, prefixes);
      this.consumePrefixes_cwqtgi$($receiver, prefixes);
    };
  }));
  InstructionInterpreter.prototype.setVDI_VSVT_58v86z$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.interpreter.InstructionInterpreter.setVDI_VSVT_58v86z$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver, destSize, srcSize, targetSize, prefixes, callback) {
      if (destSize === void 0) {
        var $receiver_0 = $receiver.IR;
        destSize = 1 + (1 * extract($receiver_0, 7, 1) | 0) + (2 * extract($receiver_0, 15, 1) | 0) | 0;
      }
      if (srcSize === void 0) {
        var $receiver_1 = $receiver.IR;
        srcSize = 1 + (1 * extract($receiver_1, 7, 1) | 0) + (2 * extract($receiver_1, 15, 1) | 0) | 0;
      }
      if (targetSize === void 0)
        targetSize = srcSize;
      if (prefixes === void 0)
        prefixes = false;
      var $receiver_2 = this.vfpuContext;
      this.vfpuContext.vdSize = destSize;
      $receiver_2.readVs_4g7k66$($receiver, void 0, srcSize, prefixes);
      $receiver_2.readVt_4g7k66$($receiver, void 0, targetSize, prefixes);
      for (var n = 0; n < destSize; n++) {
        $receiver_2.vdi[n] = callback(this.vfpuContext, n);
      }
      $receiver_2.writeVd_4g7k66$($receiver, void 0, destSize, prefixes);
      this.consumePrefixes_cwqtgi$($receiver, prefixes);
    };
  }));
  InstructionInterpreter.prototype._VSVT_kr9acu$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.cpu.interpreter.InstructionInterpreter._VSVT_kr9acu$', wrapFunction(function () {
    var extract = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.extract_e4yvb3$;
    return function ($receiver, destSize, srcSize, targetSize, prefixes, callback) {
      if (destSize === void 0) {
        var $receiver_0 = $receiver.IR;
        destSize = 1 + (1 * extract($receiver_0, 7, 1) | 0) + (2 * extract($receiver_0, 15, 1) | 0) | 0;
      }
      if (srcSize === void 0) {
        var $receiver_1 = $receiver.IR;
        srcSize = 1 + (1 * extract($receiver_1, 7, 1) | 0) + (2 * extract($receiver_1, 15, 1) | 0) | 0;
      }
      if (targetSize === void 0)
        targetSize = srcSize;
      if (prefixes === void 0)
        prefixes = false;
      var $receiver_2 = this.vfpuContext;
      $receiver_2.readVs_4g7k66$($receiver, void 0, srcSize, prefixes);
      $receiver_2.readVt_4g7k66$($receiver, void 0, targetSize, prefixes);
      for (var n = 0; n < destSize; n++)
        callback(this.vfpuContext, n);
      this.consumePrefixes_cwqtgi$($receiver, prefixes);
    };
  }));
  InstructionInterpreter.prototype.consumePrefixes_cwqtgi$ = function ($receiver, prefixes) {
    if (prefixes) {
      $receiver.vpfxs.consume();
      $receiver.vpfxt.consume();
      $receiver.vpfxd.consume();
    }
  };
  function InstructionInterpreter$VfpuConstants(name, ordinal, value) {
    Enum.call(this);
    this.value = value;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function InstructionInterpreter$VfpuConstants_initFields() {
    InstructionInterpreter$VfpuConstants_initFields = function () {
    };
    InstructionInterpreter$VfpuConstants$VFPU_ZERO_instance = new InstructionInterpreter$VfpuConstants('VFPU_ZERO', 0, 0.0);
    InstructionInterpreter$VfpuConstants$VFPU_HUGE_instance = new InstructionInterpreter$VfpuConstants('VFPU_HUGE', 1, 3.4028235E38);
    InstructionInterpreter$VfpuConstants$VFPU_SQRT2_instance = new InstructionInterpreter$VfpuConstants('VFPU_SQRT2', 2, Math_0.sqrt(2.0));
    var x = 1.0 / 2.0;
    InstructionInterpreter$VfpuConstants$VFPU_SQRT1_2_instance = new InstructionInterpreter$VfpuConstants('VFPU_SQRT1_2', 3, Math_0.sqrt(x));
    var x_0 = math_0.PI;
    InstructionInterpreter$VfpuConstants$VFPU_2_SQRTPI_instance = InstructionInterpreter$InstructionInterpreter$VfpuConstants_init('VFPU_2_SQRTPI', 4, 2.0 / Math_0.sqrt(x_0));
    InstructionInterpreter$VfpuConstants$VFPU_2_PI_instance = new InstructionInterpreter$VfpuConstants('VFPU_2_PI', 5, 2.0 / math_0.PI);
    InstructionInterpreter$VfpuConstants$VFPU_1_PI_instance = new InstructionInterpreter$VfpuConstants('VFPU_1_PI', 6, 1.0 / math_0.PI);
    InstructionInterpreter$VfpuConstants$VFPU_PI_4_instance = InstructionInterpreter$InstructionInterpreter$VfpuConstants_init('VFPU_PI_4', 7, math_0.PI / 4.0);
    InstructionInterpreter$VfpuConstants$VFPU_PI_2_instance = InstructionInterpreter$InstructionInterpreter$VfpuConstants_init('VFPU_PI_2', 8, math_0.PI / 2.0);
    InstructionInterpreter$VfpuConstants$VFPU_PI_instance = InstructionInterpreter$InstructionInterpreter$VfpuConstants_init('VFPU_PI', 9, math_0.PI);
    InstructionInterpreter$VfpuConstants$VFPU_E_instance = InstructionInterpreter$InstructionInterpreter$VfpuConstants_init('VFPU_E', 10, math_0.E);
    var x_1 = math_0.E;
    InstructionInterpreter$VfpuConstants$VFPU_LOG2E_instance = InstructionInterpreter$InstructionInterpreter$VfpuConstants_init('VFPU_LOG2E', 11, Math_0.log2(x_1));
    var x_2 = math_0.E;
    InstructionInterpreter$VfpuConstants$VFPU_LOG10E_instance = InstructionInterpreter$InstructionInterpreter$VfpuConstants_init('VFPU_LOG10E', 12, Math_0.log10(x_2));
    InstructionInterpreter$VfpuConstants$VFPU_LN2_instance = InstructionInterpreter$InstructionInterpreter$VfpuConstants_init('VFPU_LN2', 13, log(2.0, math_0.E));
    InstructionInterpreter$VfpuConstants$VFPU_LN10_instance = InstructionInterpreter$InstructionInterpreter$VfpuConstants_init('VFPU_LN10', 14, log(10.0, math_0.E));
    InstructionInterpreter$VfpuConstants$VFPU_2PI_instance = InstructionInterpreter$InstructionInterpreter$VfpuConstants_init('VFPU_2PI', 15, 2.0 * math_0.PI);
    InstructionInterpreter$VfpuConstants$VFPU_PI_6_instance = InstructionInterpreter$InstructionInterpreter$VfpuConstants_init('VFPU_PI_6', 16, math_0.PI / 6.0);
    InstructionInterpreter$VfpuConstants$VFPU_LOG10TWO_instance = new InstructionInterpreter$VfpuConstants('VFPU_LOG10TWO', 17, Math_0.log10(2.0));
    InstructionInterpreter$VfpuConstants$VFPU_LOG2TEN_instance = new InstructionInterpreter$VfpuConstants('VFPU_LOG2TEN', 18, Math_0.log2(10.0));
    InstructionInterpreter$VfpuConstants$VFPU_SQRT3_2_instance = new InstructionInterpreter$VfpuConstants('VFPU_SQRT3_2', 19, Math_0.sqrt(3.0) / 2.0);
    InstructionInterpreter$VfpuConstants$Companion_getInstance();
  }
  var InstructionInterpreter$VfpuConstants$VFPU_ZERO_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_ZERO_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_ZERO_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_HUGE_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_HUGE_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_HUGE_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_SQRT2_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_SQRT2_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_SQRT2_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_SQRT1_2_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_SQRT1_2_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_SQRT1_2_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_2_SQRTPI_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_2_SQRTPI_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_2_SQRTPI_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_2_PI_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_2_PI_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_2_PI_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_1_PI_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_1_PI_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_1_PI_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_PI_4_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_PI_4_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_PI_4_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_PI_2_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_PI_2_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_PI_2_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_PI_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_PI_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_PI_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_E_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_E_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_E_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_LOG2E_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_LOG2E_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_LOG2E_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_LOG10E_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_LOG10E_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_LOG10E_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_LN2_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_LN2_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_LN2_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_LN10_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_LN10_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_LN10_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_2PI_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_2PI_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_2PI_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_PI_6_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_PI_6_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_PI_6_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_LOG10TWO_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_LOG10TWO_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_LOG10TWO_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_LOG2TEN_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_LOG2TEN_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_LOG2TEN_instance;
  }
  var InstructionInterpreter$VfpuConstants$VFPU_SQRT3_2_instance;
  function InstructionInterpreter$VfpuConstants$VFPU_SQRT3_2_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    return InstructionInterpreter$VfpuConstants$VFPU_SQRT3_2_instance;
  }
  function InstructionInterpreter$VfpuConstants$Companion() {
    InstructionInterpreter$VfpuConstants$Companion_instance = this;
    this.values = InstructionInterpreter$VfpuConstants$values();
  }
  InstructionInterpreter$VfpuConstants$Companion.prototype.get_za3lpa$ = function (index) {
    return this.values[index];
  };
  InstructionInterpreter$VfpuConstants$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var InstructionInterpreter$VfpuConstants$Companion_instance = null;
  function InstructionInterpreter$VfpuConstants$Companion_getInstance() {
    InstructionInterpreter$VfpuConstants_initFields();
    if (InstructionInterpreter$VfpuConstants$Companion_instance === null) {
      new InstructionInterpreter$VfpuConstants$Companion();
    }
    return InstructionInterpreter$VfpuConstants$Companion_instance;
  }
  InstructionInterpreter$VfpuConstants.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VfpuConstants',
    interfaces: [Enum]
  };
  function InstructionInterpreter$InstructionInterpreter$VfpuConstants_init(name, ordinal, value, $this) {
    $this = $this || Object.create(InstructionInterpreter$VfpuConstants.prototype);
    InstructionInterpreter$VfpuConstants.call($this, name, ordinal, value);
    return $this;
  }
  function InstructionInterpreter$VfpuConstants$values() {
    return [InstructionInterpreter$VfpuConstants$VFPU_ZERO_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_HUGE_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_SQRT2_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_SQRT1_2_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_2_SQRTPI_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_2_PI_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_1_PI_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_PI_4_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_PI_2_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_PI_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_E_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_LOG2E_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_LOG10E_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_LN2_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_LN10_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_2PI_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_PI_6_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_LOG10TWO_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_LOG2TEN_getInstance(), InstructionInterpreter$VfpuConstants$VFPU_SQRT3_2_getInstance()];
  }
  InstructionInterpreter$VfpuConstants.values = InstructionInterpreter$VfpuConstants$values;
  function InstructionInterpreter$VfpuConstants$valueOf(name) {
    switch (name) {
      case 'VFPU_ZERO':
        return InstructionInterpreter$VfpuConstants$VFPU_ZERO_getInstance();
      case 'VFPU_HUGE':
        return InstructionInterpreter$VfpuConstants$VFPU_HUGE_getInstance();
      case 'VFPU_SQRT2':
        return InstructionInterpreter$VfpuConstants$VFPU_SQRT2_getInstance();
      case 'VFPU_SQRT1_2':
        return InstructionInterpreter$VfpuConstants$VFPU_SQRT1_2_getInstance();
      case 'VFPU_2_SQRTPI':
        return InstructionInterpreter$VfpuConstants$VFPU_2_SQRTPI_getInstance();
      case 'VFPU_2_PI':
        return InstructionInterpreter$VfpuConstants$VFPU_2_PI_getInstance();
      case 'VFPU_1_PI':
        return InstructionInterpreter$VfpuConstants$VFPU_1_PI_getInstance();
      case 'VFPU_PI_4':
        return InstructionInterpreter$VfpuConstants$VFPU_PI_4_getInstance();
      case 'VFPU_PI_2':
        return InstructionInterpreter$VfpuConstants$VFPU_PI_2_getInstance();
      case 'VFPU_PI':
        return InstructionInterpreter$VfpuConstants$VFPU_PI_getInstance();
      case 'VFPU_E':
        return InstructionInterpreter$VfpuConstants$VFPU_E_getInstance();
      case 'VFPU_LOG2E':
        return InstructionInterpreter$VfpuConstants$VFPU_LOG2E_getInstance();
      case 'VFPU_LOG10E':
        return InstructionInterpreter$VfpuConstants$VFPU_LOG10E_getInstance();
      case 'VFPU_LN2':
        return InstructionInterpreter$VfpuConstants$VFPU_LN2_getInstance();
      case 'VFPU_LN10':
        return InstructionInterpreter$VfpuConstants$VFPU_LN10_getInstance();
      case 'VFPU_2PI':
        return InstructionInterpreter$VfpuConstants$VFPU_2PI_getInstance();
      case 'VFPU_PI_6':
        return InstructionInterpreter$VfpuConstants$VFPU_PI_6_getInstance();
      case 'VFPU_LOG10TWO':
        return InstructionInterpreter$VfpuConstants$VFPU_LOG10TWO_getInstance();
      case 'VFPU_LOG2TEN':
        return InstructionInterpreter$VfpuConstants$VFPU_LOG2TEN_getInstance();
      case 'VFPU_SQRT3_2':
        return InstructionInterpreter$VfpuConstants$VFPU_SQRT3_2_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.cpu.interpreter.InstructionInterpreter.VfpuConstants.' + name);
    }
  }
  InstructionInterpreter$VfpuConstants.valueOf_61zpoe$ = InstructionInterpreter$VfpuConstants$valueOf;
  InstructionInterpreter.prototype.cache_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().cache);
  };
  InstructionInterpreter.prototype.sync_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().sync);
  };
  InstructionInterpreter.prototype.dbreak_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().dbreak);
  };
  InstructionInterpreter.prototype.halt_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().halt);
  };
  InstructionInterpreter.prototype.dret_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().dret);
  };
  InstructionInterpreter.prototype.eret_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().eret);
  };
  InstructionInterpreter.prototype.mfdr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfdr);
  };
  InstructionInterpreter.prototype.mtdr_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtdr);
  };
  InstructionInterpreter.prototype.cfc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().cfc0);
  };
  InstructionInterpreter.prototype.ctc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().ctc0);
  };
  InstructionInterpreter.prototype.mfc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfc0);
  };
  InstructionInterpreter.prototype.mtc0_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mtc0);
  };
  InstructionInterpreter.prototype.mfv_11rb$ = function (s) {
    this.unimplemented_1wp5la$(s, Instructions_getInstance().mfv);
  };
  InstructionInterpreter.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'InstructionInterpreter',
    interfaces: [InstructionEvaluator]
  };
  var InstructionInterpreter_instance = null;
  function InstructionInterpreter_getInstance() {
    if (InstructionInterpreter_instance === null) {
      new InstructionInterpreter();
    }
    return InstructionInterpreter_instance;
  }
  function PspController(emulator) {
    this.emulator_ek03m2$_0 = emulator;
    this.samplingCycle = 0;
    this.samplingMode = 0;
    var $receiver = until(0, 16);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(new PspController$Frame());
    }
    this.frames = destination;
    this.frameIndex = 0;
    this.lastLatchData = new PspController$Frame();
  }
  Object.defineProperty(PspController.prototype, 'emulator', {
    get: function () {
      return this.emulator_ek03m2$_0;
    }
  });
  PspController.prototype.getFrame_za3lpa$ = function (offset) {
    return this.frames.get_za3lpa$(umod(this.frameIndex + offset | 0, this.frames.size));
  };
  function PspController$Frame(timestamp, buttons, lx, ly) {
    if (timestamp === void 0)
      timestamp = 0;
    if (buttons === void 0)
      buttons = 0;
    if (lx === void 0)
      lx = 128;
    if (ly === void 0)
      ly = 128;
    this.timestamp = timestamp;
    this.buttons = buttons;
    this.lx = lx;
    this.ly = ly;
  }
  PspController$Frame.prototype.setTo_2xrz9e$ = function (other) {
    this.buttons = other.buttons;
    this.lx = other.lx;
    this.ly = other.ly;
  };
  PspController$Frame.prototype.reset = function () {
    this.timestamp = 0;
    this.buttons = 0;
    this.lx = 128;
    this.ly = 128;
  };
  PspController$Frame.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Frame',
    interfaces: []
  };
  PspController$Frame.prototype.component1 = function () {
    return this.timestamp;
  };
  PspController$Frame.prototype.component2 = function () {
    return this.buttons;
  };
  PspController$Frame.prototype.component3 = function () {
    return this.lx;
  };
  PspController$Frame.prototype.component4 = function () {
    return this.ly;
  };
  PspController$Frame.prototype.copy_tjonv8$ = function (timestamp, buttons, lx, ly) {
    return new PspController$Frame(timestamp === void 0 ? this.timestamp : timestamp, buttons === void 0 ? this.buttons : buttons, lx === void 0 ? this.lx : lx, ly === void 0 ? this.ly : ly);
  };
  PspController$Frame.prototype.toString = function () {
    return 'Frame(timestamp=' + Kotlin.toString(this.timestamp) + (', buttons=' + Kotlin.toString(this.buttons)) + (', lx=' + Kotlin.toString(this.lx)) + (', ly=' + Kotlin.toString(this.ly)) + ')';
  };
  PspController$Frame.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.timestamp) | 0;
    result = result * 31 + Kotlin.hashCode(this.buttons) | 0;
    result = result * 31 + Kotlin.hashCode(this.lx) | 0;
    result = result * 31 + Kotlin.hashCode(this.ly) | 0;
    return result;
  };
  PspController$Frame.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.timestamp, other.timestamp) && Kotlin.equals(this.buttons, other.buttons) && Kotlin.equals(this.lx, other.lx) && Kotlin.equals(this.ly, other.ly)))));
  };
  Object.defineProperty(PspController.prototype, 'currentFrame', {
    get: function () {
      return this.frames.get_za3lpa$(this.frameIndex);
    }
  });
  PspController.prototype.startFrame_za3lpa$ = function (timestamp) {
    this.currentFrame.timestamp = timestamp;
  };
  PspController.prototype.endFrame = function () {
    var lastFrame = this.currentFrame;
    this.frameIndex = (this.frameIndex + 1 | 0) % this.frames.size;
    this.currentFrame.setTo_2xrz9e$(lastFrame);
  };
  PspController.prototype.updateButton_yw5fnw$ = function (button, pressed) {
    this.currentFrame.buttons = setBits(this.currentFrame.buttons, button.bits, pressed);
  };
  PspController.prototype.fixFloat_0 = function (v) {
    return numberToInt(clamp(v, -1.0, 1.0) * 127 + 128);
  };
  PspController.prototype.updateAnalog_dleff0$ = function (x, y) {
    this.currentFrame.lx = this.fixFloat_0(x);
    this.currentFrame.ly = this.fixFloat_0(y);
  };
  PspController.prototype.reset = function () {
    var tmp$;
    this.samplingCycle = 0;
    this.samplingMode = 0;
    tmp$ = this.frames.iterator();
    while (tmp$.hasNext()) {
      var f = tmp$.next();
      f.reset();
    }
    this.lastLatchData.reset();
    this.frameIndex = 0;
  };
  PspController.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspController',
    interfaces: [WithEmulator]
  };
  function PspCtrlButtons(name, ordinal, bits) {
    Enum.call(this);
    this.bits = bits;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PspCtrlButtons_initFields() {
    PspCtrlButtons_initFields = function () {
    };
    PspCtrlButtons$none_instance = new PspCtrlButtons('none', 0, 0);
    PspCtrlButtons$select_instance = new PspCtrlButtons('select', 1, 1);
    PspCtrlButtons$start_instance = new PspCtrlButtons('start', 2, 8);
    PspCtrlButtons$up_instance = new PspCtrlButtons('up', 3, 16);
    PspCtrlButtons$right_instance = new PspCtrlButtons('right', 4, 32);
    PspCtrlButtons$down_instance = new PspCtrlButtons('down', 5, 64);
    PspCtrlButtons$left_instance = new PspCtrlButtons('left', 6, 128);
    PspCtrlButtons$leftTrigger_instance = new PspCtrlButtons('leftTrigger', 7, 256);
    PspCtrlButtons$rightTrigger_instance = new PspCtrlButtons('rightTrigger', 8, 512);
    PspCtrlButtons$triangle_instance = new PspCtrlButtons('triangle', 9, 4096);
    PspCtrlButtons$circle_instance = new PspCtrlButtons('circle', 10, 8192);
    PspCtrlButtons$cross_instance = new PspCtrlButtons('cross', 11, 16384);
    PspCtrlButtons$square_instance = new PspCtrlButtons('square', 12, 32768);
    PspCtrlButtons$home_instance = new PspCtrlButtons('home', 13, 65536);
    PspCtrlButtons$hold_instance = new PspCtrlButtons('hold', 14, 131072);
    PspCtrlButtons$wirelessLanUp_instance = new PspCtrlButtons('wirelessLanUp', 15, 262144);
    PspCtrlButtons$remote_instance = new PspCtrlButtons('remote', 16, 524288);
    PspCtrlButtons$volumeUp_instance = new PspCtrlButtons('volumeUp', 17, 1048576);
    PspCtrlButtons$volumeDown_instance = new PspCtrlButtons('volumeDown', 18, 2097152);
    PspCtrlButtons$screen_instance = new PspCtrlButtons('screen', 19, 4194304);
    PspCtrlButtons$note_instance = new PspCtrlButtons('note', 20, 8388608);
    PspCtrlButtons$discPresent_instance = new PspCtrlButtons('discPresent', 21, 16777216);
    PspCtrlButtons$memoryStickPresent_instance = new PspCtrlButtons('memoryStickPresent', 22, 33554432);
  }
  var PspCtrlButtons$none_instance;
  function PspCtrlButtons$none_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$none_instance;
  }
  var PspCtrlButtons$select_instance;
  function PspCtrlButtons$select_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$select_instance;
  }
  var PspCtrlButtons$start_instance;
  function PspCtrlButtons$start_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$start_instance;
  }
  var PspCtrlButtons$up_instance;
  function PspCtrlButtons$up_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$up_instance;
  }
  var PspCtrlButtons$right_instance;
  function PspCtrlButtons$right_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$right_instance;
  }
  var PspCtrlButtons$down_instance;
  function PspCtrlButtons$down_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$down_instance;
  }
  var PspCtrlButtons$left_instance;
  function PspCtrlButtons$left_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$left_instance;
  }
  var PspCtrlButtons$leftTrigger_instance;
  function PspCtrlButtons$leftTrigger_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$leftTrigger_instance;
  }
  var PspCtrlButtons$rightTrigger_instance;
  function PspCtrlButtons$rightTrigger_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$rightTrigger_instance;
  }
  var PspCtrlButtons$triangle_instance;
  function PspCtrlButtons$triangle_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$triangle_instance;
  }
  var PspCtrlButtons$circle_instance;
  function PspCtrlButtons$circle_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$circle_instance;
  }
  var PspCtrlButtons$cross_instance;
  function PspCtrlButtons$cross_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$cross_instance;
  }
  var PspCtrlButtons$square_instance;
  function PspCtrlButtons$square_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$square_instance;
  }
  var PspCtrlButtons$home_instance;
  function PspCtrlButtons$home_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$home_instance;
  }
  var PspCtrlButtons$hold_instance;
  function PspCtrlButtons$hold_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$hold_instance;
  }
  var PspCtrlButtons$wirelessLanUp_instance;
  function PspCtrlButtons$wirelessLanUp_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$wirelessLanUp_instance;
  }
  var PspCtrlButtons$remote_instance;
  function PspCtrlButtons$remote_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$remote_instance;
  }
  var PspCtrlButtons$volumeUp_instance;
  function PspCtrlButtons$volumeUp_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$volumeUp_instance;
  }
  var PspCtrlButtons$volumeDown_instance;
  function PspCtrlButtons$volumeDown_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$volumeDown_instance;
  }
  var PspCtrlButtons$screen_instance;
  function PspCtrlButtons$screen_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$screen_instance;
  }
  var PspCtrlButtons$note_instance;
  function PspCtrlButtons$note_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$note_instance;
  }
  var PspCtrlButtons$discPresent_instance;
  function PspCtrlButtons$discPresent_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$discPresent_instance;
  }
  var PspCtrlButtons$memoryStickPresent_instance;
  function PspCtrlButtons$memoryStickPresent_getInstance() {
    PspCtrlButtons_initFields();
    return PspCtrlButtons$memoryStickPresent_instance;
  }
  PspCtrlButtons.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspCtrlButtons',
    interfaces: [Enum]
  };
  function PspCtrlButtons$values() {
    return [PspCtrlButtons$none_getInstance(), PspCtrlButtons$select_getInstance(), PspCtrlButtons$start_getInstance(), PspCtrlButtons$up_getInstance(), PspCtrlButtons$right_getInstance(), PspCtrlButtons$down_getInstance(), PspCtrlButtons$left_getInstance(), PspCtrlButtons$leftTrigger_getInstance(), PspCtrlButtons$rightTrigger_getInstance(), PspCtrlButtons$triangle_getInstance(), PspCtrlButtons$circle_getInstance(), PspCtrlButtons$cross_getInstance(), PspCtrlButtons$square_getInstance(), PspCtrlButtons$home_getInstance(), PspCtrlButtons$hold_getInstance(), PspCtrlButtons$wirelessLanUp_getInstance(), PspCtrlButtons$remote_getInstance(), PspCtrlButtons$volumeUp_getInstance(), PspCtrlButtons$volumeDown_getInstance(), PspCtrlButtons$screen_getInstance(), PspCtrlButtons$note_getInstance(), PspCtrlButtons$discPresent_getInstance(), PspCtrlButtons$memoryStickPresent_getInstance()];
  }
  PspCtrlButtons.values = PspCtrlButtons$values;
  function PspCtrlButtons$valueOf(name) {
    switch (name) {
      case 'none':
        return PspCtrlButtons$none_getInstance();
      case 'select':
        return PspCtrlButtons$select_getInstance();
      case 'start':
        return PspCtrlButtons$start_getInstance();
      case 'up':
        return PspCtrlButtons$up_getInstance();
      case 'right':
        return PspCtrlButtons$right_getInstance();
      case 'down':
        return PspCtrlButtons$down_getInstance();
      case 'left':
        return PspCtrlButtons$left_getInstance();
      case 'leftTrigger':
        return PspCtrlButtons$leftTrigger_getInstance();
      case 'rightTrigger':
        return PspCtrlButtons$rightTrigger_getInstance();
      case 'triangle':
        return PspCtrlButtons$triangle_getInstance();
      case 'circle':
        return PspCtrlButtons$circle_getInstance();
      case 'cross':
        return PspCtrlButtons$cross_getInstance();
      case 'square':
        return PspCtrlButtons$square_getInstance();
      case 'home':
        return PspCtrlButtons$home_getInstance();
      case 'hold':
        return PspCtrlButtons$hold_getInstance();
      case 'wirelessLanUp':
        return PspCtrlButtons$wirelessLanUp_getInstance();
      case 'remote':
        return PspCtrlButtons$remote_getInstance();
      case 'volumeUp':
        return PspCtrlButtons$volumeUp_getInstance();
      case 'volumeDown':
        return PspCtrlButtons$volumeDown_getInstance();
      case 'screen':
        return PspCtrlButtons$screen_getInstance();
      case 'note':
        return PspCtrlButtons$note_getInstance();
      case 'discPresent':
        return PspCtrlButtons$discPresent_getInstance();
      case 'memoryStickPresent':
        return PspCtrlButtons$memoryStickPresent_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ctrl.PspCtrlButtons.' + name);
    }
  }
  PspCtrlButtons.valueOf_61zpoe$ = PspCtrlButtons$valueOf;
  function BaseBreakpoints() {
  }
  BaseBreakpoints.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'BaseBreakpoints',
    interfaces: []
  };
  function PspDisplay(emulator) {
    PspDisplay$Companion_getInstance();
    this.emulator_vu39pr$_0 = emulator;
    this.bmp = new Bitmap32(480, 272);
    this.exposeDisplay = true;
    this.rawDisplay = true;
    this.address = 1140850688;
    this.bufferWidth = 512;
    this.pixelFormat = PixelFormat$RGBA_8888_getInstance();
    this.sync = 0;
    this.displayMode = 0;
    this.displayWidth = 512;
    this.displayHeight = 272;
    this.temp_0 = new Int8Array((512 * 272 | 0) * 4 | 0);
    this.times = new DisplayTimes(PspDisplay$times$lambda(this));
  }
  Object.defineProperty(PspDisplay.prototype, 'emulator', {
    get: function () {
      return this.emulator_vu39pr$_0;
    }
  });
  function PspDisplay$Companion() {
    PspDisplay$Companion_instance = this;
    this.PROCESSED_PIXELS_PER_SECOND = 9000000;
    this.CYCLES_PER_PIXEL = 1.0;
    this.PIXELS_IN_A_ROW = 525;
    this.VSYNC_ROW = 272;
    this.NUMBER_OF_ROWS = 286;
    this.HCOUNT_PER_VBLANK = 285.72;
    this.HORIZONTAL_SYNC_HZ = PspDisplay$Companion_getInstance().PROCESSED_PIXELS_PER_SECOND * PspDisplay$Companion_getInstance().CYCLES_PER_PIXEL / PspDisplay$Companion_getInstance().PIXELS_IN_A_ROW;
    this.HORIZONTAL_SECONDS = 1.0 / PspDisplay$Companion_getInstance().HORIZONTAL_SYNC_HZ;
    this.VERTICAL_SYNC_HZ = PspDisplay$Companion_getInstance().HORIZONTAL_SYNC_HZ / PspDisplay$Companion_getInstance().HCOUNT_PER_VBLANK;
    this.VERTICAL_SECONDS = 1.0 / PspDisplay$Companion_getInstance().VERTICAL_SYNC_HZ;
  }
  PspDisplay$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var PspDisplay$Companion_instance = null;
  function PspDisplay$Companion_getInstance() {
    if (PspDisplay$Companion_instance === null) {
      new PspDisplay$Companion();
    }
    return PspDisplay$Companion_instance;
  }
  PspDisplay.prototype.fixedAddress = function () {
    return this.address;
  };
  PspDisplay.prototype.decodeToBitmap32_59u9qz$ = function (out) {
    var tmp$;
    var bmpData = out.data;
    if (equals(this.pixelFormat, PixelFormat$RGBA_8888_getInstance())) {
      for (var n = 0; n < 272; n++) {
        get_mem(this).read_coga0j$(this.address + ((n * 512 | 0) * 4 | 0) | 0, bmpData, Kotlin.imul(this.bmp.width, n), this.bmp.width);
      }
    }
     else {
      get_mem(this).read_3fge6q$(this.address, this.temp_0, 0, this.temp_0.length);
      if (equals(this.pixelFormat, PixelFormat$RGBA_5551_getInstance()))
        tmp$ = color.RGBA_5551;
      else
        tmp$ = color.RGBA;
      var color_0 = tmp$;
      var stride = 512 * color_0.bytesPerPixel | 0;
      for (var n_0 = 0; n_0 < 272; n_0++) {
        color_0.decode_c0jzf6$(this.temp_0, Kotlin.imul(n_0, stride), bmpData, Kotlin.imul(this.bmp.width, n_0), this.bmp.width);
      }
    }
  };
  PspDisplay.prototype.crash = function () {
    this.invertDisplay();
  };
  PspDisplay.prototype.invertDisplay = function () {
    var tmp$;
    tmp$ = 512 * 272 | 0;
    for (var n = 0; n < tmp$; n++) {
      get_mem(this).sw_vux9f0$(this.address + (n * 4 | 0) | 0, ~get_mem(this).lw_za3lpa$(this.address + (n * 4 | 0) | 0));
    }
  };
  Object.defineProperty(PspDisplay.prototype, 'updatedTimes', {
    get: function () {
      this.times.updateTime_14dthe$();
      return this.times;
    }
  });
  PspDisplay.prototype.waitVblankStart_madyma$ = function (thread_0, reason, continuation_0, suspended) {
    var instance = new Coroutine$waitVblankStart_madyma$(this, thread_0, reason, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$waitVblankStart_madyma$($this, thread_0, reason, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$thread = thread_0;
  }
  Coroutine$waitVblankStart_madyma$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitVblankStart_madyma$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitVblankStart_madyma$.prototype.constructor = Coroutine$waitVblankStart_madyma$;
  Coroutine$waitVblankStart_madyma$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.times.updateTime_14dthe$();
            this.state_0 = 2;
            this.result_0 = this.local$thread.sleepSecondsIfRequired_14dthe$(this.$this.times.secondsLeftForVblankStart, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  PspDisplay.prototype.waitVblank_madyma$ = function (thread_0, reason, continuation_0, suspended) {
    var instance = new Coroutine$waitVblank_madyma$(this, thread_0, reason, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$waitVblank_madyma$($this, thread_0, reason, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$thread = thread_0;
  }
  Coroutine$waitVblank_madyma$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitVblank_madyma$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitVblank_madyma$.prototype.constructor = Coroutine$waitVblank_madyma$;
  Coroutine$waitVblank_madyma$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.times.updateTime_14dthe$();
            this.state_0 = 2;
            this.result_0 = this.local$thread.sleepSecondsIfRequired_14dthe$(this.$this.times.secondsLeftForVblank, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  PspDisplay.prototype.reset = function () {
    this.times.reset();
    this.exposeDisplay = true;
    this.rawDisplay = true;
    this.address = 1140850688;
    this.bufferWidth = 512;
    this.pixelFormat = PixelFormat$RGBA_8888_getInstance();
    this.sync = 0;
    this.displayMode = 0;
    this.displayWidth = 480;
    this.displayHeight = 272;
    this.bmp.fill_4qozqa$(0);
    var $receiver = this.temp_0;
    var end;
    end = $receiver.length;
    $receiver.fill(0, 0, end);
  };
  function PspDisplay$times$lambda(this$PspDisplay) {
    return function () {
      return this$PspDisplay.emulator.timeManager.getTimeInMillisecondsDouble();
    };
  }
  PspDisplay.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspDisplay',
    interfaces: [WithEmulator]
  };
  function DisplayTimes(msProvider) {
    this.msProvider = msProvider;
    this.startTimeMs_0 = 0.0;
    this.currentMs_0 = this.startTimeMs_0;
    this.elapsedSeconds_0 = 0.0;
    this.hcountTotal = 0;
    this.hcountCurrent = 0;
    this.vblankCount = 0;
    this.isInVblank_0 = false;
    this.rowsLeftForVblank_0 = 0;
    this.secondsLeftForVblank = 0.0;
    this.rowsLeftForVblankStart_0 = 0;
    this.secondsLeftForVblankStart = 0.0;
  }
  DisplayTimes.prototype.updateTime_14dthe$ = function (now) {
    if (now === void 0)
      now = this.msProvider();
    if (this.startTimeMs_0 === 0.0)
      this.startTimeMs_0 = now;
    this.currentMs_0 = now;
    this.elapsedSeconds_0 = (this.currentMs_0 - this.startTimeMs_0) / 1000;
    this.hcountTotal = numberToInt(this.elapsedSeconds_0 * PspDisplay$Companion_getInstance().HORIZONTAL_SYNC_HZ);
    this.hcountCurrent = numberToInt(this.elapsedSeconds_0 % 1.00002 * PspDisplay$Companion_getInstance().HORIZONTAL_SYNC_HZ) % PspDisplay$Companion_getInstance().NUMBER_OF_ROWS;
    this.vblankCount = numberToInt(this.elapsedSeconds_0 * PspDisplay$Companion_getInstance().VERTICAL_SYNC_HZ);
    if (this.hcountCurrent >= PspDisplay$Companion_getInstance().VSYNC_ROW) {
      this.isInVblank_0 = true;
      this.rowsLeftForVblank_0 = 0;
      this.rowsLeftForVblankStart_0 = PspDisplay$Companion_getInstance().NUMBER_OF_ROWS - this.hcountCurrent + PspDisplay$Companion_getInstance().VSYNC_ROW | 0;
    }
     else {
      this.isInVblank_0 = false;
      this.rowsLeftForVblank_0 = PspDisplay$Companion_getInstance().VSYNC_ROW - this.hcountCurrent | 0;
      this.rowsLeftForVblankStart_0 = this.rowsLeftForVblank_0;
    }
    this.secondsLeftForVblank = this.rowsLeftForVblank_0 * PspDisplay$Companion_getInstance().HORIZONTAL_SECONDS;
    this.secondsLeftForVblankStart = this.rowsLeftForVblankStart_0 * PspDisplay$Companion_getInstance().HORIZONTAL_SECONDS;
  };
  DisplayTimes.prototype.reset = function () {
    this.startTimeMs_0 = 0.0;
  };
  DisplayTimes.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DisplayTimes',
    interfaces: []
  };
  function Cso() {
    Cso$Companion_getInstance();
    this.CACHED_BLOCKS = 16;
    this.s_80jnh0$_0 = this.s_80jnh0$_0;
    this.magic = '';
    this.headerSize = 0;
    this.totalBytes = Kotlin.Long.ZERO;
    this.blockSize = 0;
    this.version = 0;
    this.alignment = 0;
    this.reserved = 0;
    this.offsets = new Int32Array(0);
    this.numberOfBlocks = 0;
    this.blockCache = new CacheMap(this.CACHED_BLOCKS);
  }
  Object.defineProperty(Cso.prototype, 's', {
    get: function () {
      if (this.s_80jnh0$_0 == null)
        return throwUPAE('s');
      return this.s_80jnh0$_0;
    },
    set: function (s) {
      this.s_80jnh0$_0 = s;
    }
  });
  Cso.prototype.init_0 = function (s_0, continuation_0, suspended) {
    var instance = new Coroutine$init_0(this, s_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$init_0($this, s_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$s = s_0;
  }
  Coroutine$init_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$init_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$init_0.prototype.constructor = Coroutine$init_0;
  Coroutine$init_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.s = this.local$s;
            this.state_0 = 2;
            this.result_0 = readStringz(this.local$s, 4, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.$this.magic = this.result_0;
            if (!equals(this.$this.magic, 'CISO'))
              invalidOp('Not a CISO file');
            this.state_0 = 3;
            this.result_0 = readS32_le(this.local$s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.$this.headerSize = this.result_0;
            this.state_0 = 4;
            this.result_0 = readS64_le(this.local$s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            this.$this.totalBytes = this.result_0;
            this.state_0 = 5;
            this.result_0 = readS32_le(this.local$s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 5:
            this.$this.blockSize = this.result_0;
            this.state_0 = 6;
            this.result_0 = readU8(this.local$s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 6:
            this.$this.version = this.result_0;
            this.state_0 = 7;
            this.result_0 = readU8(this.local$s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 7:
            this.$this.alignment = this.result_0;
            this.state_0 = 8;
            this.result_0 = readS16_le(this.local$s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 8:
            this.$this.reserved = this.result_0;
            var x = this.$this.totalBytes.toNumber() / this.$this.blockSize;
            this.$this.numberOfBlocks = numberToInt(Math_0.ceil(x));
            this.state_0 = 9;
            this.result_0 = readIntArray_le(this.local$s, this.$this.numberOfBlocks + 1 | 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 9:
            this.$this.offsets = this.result_0;
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Cso.prototype.isValidBlock_0 = function (block) {
    return until(0, this.offsets.length - 1 | 0).contains_mef7kx$(block);
  };
  Cso.prototype.isBlockUncompressed_0 = function (block) {
    return hasFlag(this.offsets[block], (new Kotlin.Long(-2147483648, 0)).toInt());
  };
  Cso.prototype.readCompressedBlock_za3lpa$ = function (block_0, continuation_0, suspended) {
    var instance = new Coroutine$readCompressedBlock_za3lpa$(this, block_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readCompressedBlock_za3lpa$($this, block_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$block = block_0;
  }
  Coroutine$readCompressedBlock_za3lpa$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readCompressedBlock_za3lpa$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readCompressedBlock_za3lpa$.prototype.constructor = Coroutine$readCompressedBlock_za3lpa$;
  Coroutine$readCompressedBlock_za3lpa$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var start = this.$this.offsets[this.local$block] & 2147483647;
            var end = this.$this.offsets[this.local$block + 1 | 0] & 2147483647;
            this.state_0 = 2;
            this.result_0 = sliceWithBounds(this.$this.s, Kotlin.Long.fromInt(start), Kotlin.Long.fromInt(end), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = readAll(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Cso.prototype.readUncompressedBlock_za3lpa$ = function (block_0, continuation_0, suspended) {
    var instance = new Coroutine$readUncompressedBlock_za3lpa$(this, block_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readUncompressedBlock_za3lpa$($this, block_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$block = block_0;
  }
  Coroutine$readUncompressedBlock_za3lpa$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readUncompressedBlock_za3lpa$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readUncompressedBlock_za3lpa$.prototype.constructor = Coroutine$readUncompressedBlock_za3lpa$;
  Coroutine$readUncompressedBlock_za3lpa$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.$this.isBlockUncompressed_0(this.local$block)) {
              this.state_0 = 4;
              this.result_0 = this.$this.readCompressedBlock_za3lpa$(this.local$block, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 2;
              this.result_0 = this.$this.readCompressedBlock_za3lpa$(this.local$block, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = uncompressZlibRaw(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return this.result_0;
          case 4:
            return this.result_0;
          case 5:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Cso.prototype.readUncompressedBlockCached_za3lpa$ = function (block_0, continuation_0, suspended) {
    var instance = new Coroutine$readUncompressedBlockCached_za3lpa$(this, block_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readUncompressedBlockCached_za3lpa$($this, block_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$tmp$ = void 0;
    this.local$closure$continuation = void 0;
    this.local$block = block_0;
  }
  Coroutine$readUncompressedBlockCached_za3lpa$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readUncompressedBlockCached_za3lpa$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readUncompressedBlockCached_za3lpa$.prototype.constructor = Coroutine$readUncompressedBlockCached_za3lpa$;
  Coroutine$readUncompressedBlockCached_za3lpa$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$$receiver = this.$this.blockCache.entries;
            var value = this.local$$receiver.get_11rb$(this.local$block);
            if (value == null) {
              this.local$closure$continuation = this;
              this.state_0 = 2;
              this.result_0 = this.$this.readUncompressedBlock_za3lpa$(this.local$block, this.local$closure$continuation);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.local$tmp$ = value;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            var answer = this.local$closure$continuation.result_0;
            this.local$$receiver.put_xwzc9p$(this.local$block, answer);
            this.local$tmp$ = answer;
            this.state_0 = 3;
            continue;
          case 3:
            return this.local$tmp$;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Cso$Companion() {
    Cso$Companion_instance = this;
  }
  Cso$Companion.prototype.invoke_axnxby$ = function (s_0, continuation_0, suspended) {
    var instance = new Coroutine$invoke_axnxby$(this, s_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$invoke_axnxby$($this, s_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$s = s_0;
  }
  Coroutine$invoke_axnxby$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$invoke_axnxby$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$invoke_axnxby$.prototype.constructor = Coroutine$invoke_axnxby$;
  Coroutine$invoke_axnxby$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$$receiver = new Cso();
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.init_0(this.local$s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$$receiver;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Cso$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Cso$Companion_instance = null;
  function Cso$Companion_getInstance() {
    if (Cso$Companion_instance === null) {
      new Cso$Companion();
    }
    return Cso$Companion_instance;
  }
  function Cso$open$ObjectLiteral(this$Cso) {
    this.this$Cso = this$Cso;
    AsyncStreamBase.call(this);
  }
  Cso$open$ObjectLiteral.prototype.close = function (continuation) {
    return this.this$Cso.s.close(continuation);
  };
  Cso$open$ObjectLiteral.prototype.setLength_s8cxhz$ = function (value, continuation) {
    return invalidOp('Unsupported');
  };
  Cso$open$ObjectLiteral.prototype.getLength = function (continuation) {
    return this.this$Cso.totalBytes;
  };
  Cso$open$ObjectLiteral.prototype.readChunk_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$readChunk_4m9kcn$(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readChunk_4m9kcn$($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$pinblock = void 0;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$readChunk_4m9kcn$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readChunk_4m9kcn$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readChunk_4m9kcn$.prototype.constructor = Coroutine$readChunk_4m9kcn$;
  Coroutine$readChunk_4m9kcn$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var block = this.local$position.div(Kotlin.Long.fromInt(this.$this.this$Cso.blockSize)).toInt();
            this.local$pinblock = this.local$position.modulo(Kotlin.Long.fromInt(this.$this.this$Cso.blockSize)).toInt();
            if (this.$this.this$Cso.isValidBlock_0(block)) {
              this.state_0 = 2;
              this.result_0 = this.$this.this$Cso.readUncompressedBlockCached_za3lpa$(block, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              return 0;
            }

          case 1:
            throw this.exception_0;
          case 2:
            var blockData = this.result_0;
            var b = blockData.length - this.local$pinblock | 0;
            var toRead = Math_0.min(this.local$len, b);
            arraycopy_0(blockData, this.local$pinblock, this.local$buffer, this.local$offset, toRead);
            return toRead;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  var min_0 = Kotlin.kotlin.js.min_bug313$;
  Cso$open$ObjectLiteral.prototype.readComplete_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$readComplete_4m9kcn$(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readComplete_4m9kcn$($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$cposition = void 0;
    this.local$pending = void 0;
    this.local$coffset = void 0;
    this.local$tread = void 0;
    this.local$read = void 0;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$readComplete_4m9kcn$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readComplete_4m9kcn$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readComplete_4m9kcn$.prototype.constructor = Coroutine$readComplete_4m9kcn$;
  Coroutine$readComplete_4m9kcn$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var available = this.result_0.subtract(this.local$position);
            this.local$cposition = this.local$position;
            this.local$pending = min_0(Math_0, available, Kotlin.Long.fromInt(this.local$len)).toInt();
            this.local$coffset = this.local$offset;
            this.local$tread = 0;
            this.state_0 = 3;
            continue;
          case 3:
            if (this.local$pending < 0) {
              this.state_0 = 6;
              continue;
            }

            this.state_0 = 4;
            this.result_0 = this.$this.readChunk_4m9kcn$(this.local$cposition, this.local$buffer, this.local$coffset, this.local$pending, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            this.local$read = this.result_0;
            if (this.local$read <= 0) {
              this.state_0 = 6;
              continue;
            }
             else {
              this.state_0 = 5;
              continue;
            }

          case 5:
            this.local$pending = this.local$pending - this.local$read | 0;
            this.local$cposition = this.local$cposition.add(Kotlin.Long.fromInt(this.local$read));
            this.local$coffset = this.local$coffset + this.local$read | 0;
            this.local$tread = this.local$tread + this.local$read | 0;
            this.state_0 = 3;
            continue;
          case 6:
            return this.local$tread;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Cso$open$ObjectLiteral.prototype.read_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    return this.readComplete_4m9kcn$(position, buffer, offset, len, continuation);
  };
  Cso$open$ObjectLiteral.prototype.write_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    return invalidOp('Unsupported');
  };
  Cso$open$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncStreamBase]
  };
  Cso.prototype.open = function (continuation_0, suspended) {
    var instance = new Coroutine$open(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$open($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$open.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$open.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$open.prototype.constructor = Coroutine$open;
  Coroutine$open.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return toAsyncStream(new Cso$open$ObjectLiteral(this.$this));
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Cso.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Cso',
    interfaces: []
  };
  function openAsCso($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$openAsCso($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$openAsCso($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$openAsCso.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$openAsCso.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$openAsCso.prototype.constructor = Coroutine$openAsCso;
  Coroutine$openAsCso.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = Cso$Companion_getInstance().invoke_axnxby$(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.result_0.open(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function openAsCso_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$openAsCso_0($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$openAsCso_0($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$openAsCso_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$openAsCso_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$openAsCso_0.prototype.constructor = Coroutine$openAsCso_0;
  Coroutine$openAsCso_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$tmp$ = Cso$Companion_getInstance();
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.open_7c7tmz$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$tmp$.invoke_axnxby$(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.result_0.open(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Pbp(version, base, streams) {
    Pbp$Companion_getInstance();
    this.version = version;
    this.base = base;
    this.streams = streams;
    this.streamsByName = toMap(zip(Pbp$Companion_getInstance().NAMES, this.streams));
  }
  Object.defineProperty(Pbp.prototype, 'PARAM_SFO', {
    get: function () {
      return ensureNotNull(this.get_61zpoe$(Pbp$Companion_getInstance().PARAM_SFO));
    }
  });
  Object.defineProperty(Pbp.prototype, 'ICON0_PNG', {
    get: function () {
      return ensureNotNull(this.get_61zpoe$(Pbp$Companion_getInstance().ICON0_PNG));
    }
  });
  Object.defineProperty(Pbp.prototype, 'ICON1_PMF', {
    get: function () {
      return ensureNotNull(this.get_61zpoe$(Pbp$Companion_getInstance().ICON1_PMF));
    }
  });
  Object.defineProperty(Pbp.prototype, 'PIC0_PNG', {
    get: function () {
      return ensureNotNull(this.get_61zpoe$(Pbp$Companion_getInstance().PIC0_PNG));
    }
  });
  Object.defineProperty(Pbp.prototype, 'PIC1_PNG', {
    get: function () {
      return ensureNotNull(this.get_61zpoe$(Pbp$Companion_getInstance().PIC1_PNG));
    }
  });
  Object.defineProperty(Pbp.prototype, 'SND0_AT3', {
    get: function () {
      return ensureNotNull(this.get_61zpoe$(Pbp$Companion_getInstance().SND0_AT3));
    }
  });
  Object.defineProperty(Pbp.prototype, 'PSP_DATA', {
    get: function () {
      return ensureNotNull(this.get_61zpoe$(Pbp$Companion_getInstance().PSP_DATA));
    }
  });
  Object.defineProperty(Pbp.prototype, 'PSAR_DATA', {
    get: function () {
      return ensureNotNull(this.get_61zpoe$(Pbp$Companion_getInstance().PSAR_DATA));
    }
  });
  function Pbp$Companion() {
    Pbp$Companion_instance = this;
    this.PBP_MAGIC = 1346523136;
    this.PARAM_SFO = 'param.sfo';
    this.ICON0_PNG = 'icon0.png';
    this.ICON1_PMF = 'icon1.pmf';
    this.PIC0_PNG = 'pic0.png';
    this.PIC1_PNG = 'pic1.png';
    this.SND0_AT3 = 'snd0.at3';
    this.PSP_DATA = 'psp.data';
    this.PSAR_DATA = 'psar.data';
    this.NAMES = listOf([this.PARAM_SFO, this.ICON0_PNG, this.ICON1_PMF, this.PIC0_PNG, this.PIC1_PNG, this.SND0_AT3, this.PSP_DATA, this.PSAR_DATA]);
  }
  Pbp$Companion.prototype.check_axnxby$ = function (s_0, continuation_0, suspended) {
    var instance = new Coroutine$check_axnxby$(this, s_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$check_axnxby$($this, s_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$s = s_0;
  }
  Coroutine$check_axnxby$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$check_axnxby$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$check_axnxby$.prototype.constructor = Coroutine$check_axnxby$;
  Coroutine$check_axnxby$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readS32_le(this.local$s.duplicate(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0 === this.$this.PBP_MAGIC;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Pbp$Companion.prototype.invoke_axnxby$ = function (s, continuation) {
    return this.load_axnxby$(s, continuation);
  };
  Pbp$Companion.prototype.load_axnxby$ = function (s_0, continuation_0, suspended) {
    var instance = new Coroutine$load_axnxby$(this, s_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$load_axnxby$($this, s_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$version = void 0;
    this.local$offsets = void 0;
    this.local$destination = void 0;
    this.local$tmp$_0 = void 0;
    this.local$tmp$_1 = void 0;
    this.local$closure$continuation = void 0;
    this.local$s = s_0;
  }
  Coroutine$load_axnxby$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$load_axnxby$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$load_axnxby$.prototype.constructor = Coroutine$load_axnxby$;
  Coroutine$load_axnxby$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readS32_le(this.local$s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var magic = this.result_0;
            if (magic !== this.$this.PBP_MAGIC)
              invalidOp('Not a PBP file');
            this.state_0 = 3;
            this.result_0 = readS32_le(this.local$s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.local$version = this.result_0;
            this.state_0 = 4;
            this.result_0 = readIntArray_le(this.local$s, 8, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            this.local$tmp$ = toList_0(this.result_0);
            this.state_0 = 5;
            this.result_0 = this.local$s.size(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 5:
            this.local$offsets = plus_0(this.local$tmp$, listOf_0(this.result_0.toInt()));
            var $receiver = until(0, this.local$offsets.size - 1 | 0);
            this.local$destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
            this.local$tmp$_0 = $receiver.iterator();
            this.state_0 = 6;
            continue;
          case 6:
            if (!this.local$tmp$_0.hasNext()) {
              this.state_0 = 8;
              continue;
            }

            var item = this.local$tmp$_0.next();
            this.local$tmp$_1 = this.local$destination.add_11rb$;
            this.local$closure$continuation = this;
            this.state_0 = 7;
            this.result_0 = sliceWithBounds(this.local$s, Kotlin.Long.fromInt(this.local$offsets.get_za3lpa$(item)), Kotlin.Long.fromInt(this.local$offsets.get_za3lpa$(item + 1 | 0)), this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 7:
            this.local$tmp$_1.call(this.local$destination, this.local$closure$continuation.result_0);
            this.state_0 = 6;
            continue;
          case 8:
            var streams = this.local$destination;
            return new Pbp(this.local$version, this.local$s, streams);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Pbp$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Pbp$Companion_instance = null;
  function Pbp$Companion_getInstance() {
    if (Pbp$Companion_instance === null) {
      new Pbp$Companion();
    }
    return Pbp$Companion_instance;
  }
  Pbp.prototype.get_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.streamsByName.get_11rb$(name.toLowerCase())) != null ? tmp$.duplicate() : null;
  };
  Pbp.prototype.get_za3lpa$ = function (index) {
    return this.streams.get_za3lpa$(index);
  };
  Pbp.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Pbp',
    interfaces: []
  };
  function Psf() {
    Psf$Companion_getInstance();
    this.entries_1gdqst$_0 = this.entries_1gdqst$_0;
    this.entriesByName_pyitpt$_0 = this.entriesByName_pyitpt$_0;
    this.header_ndzgsk$_0 = this.header_ndzgsk$_0;
  }
  function Psf$DataType(id) {
    Psf$DataType$Companion_getInstance();
    this.id = id;
  }
  function Psf$DataType$Companion() {
    Psf$DataType$Companion_instance = this;
    this.BINARY = new Psf$DataType(0);
    this.TEXT = new Psf$DataType(2);
    this.INT = new Psf$DataType(4);
  }
  Psf$DataType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Psf$DataType$Companion_instance = null;
  function Psf$DataType$Companion_getInstance() {
    if (Psf$DataType$Companion_instance === null) {
      new Psf$DataType$Companion();
    }
    return Psf$DataType$Companion_instance;
  }
  Psf$DataType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DataType',
    interfaces: []
  };
  Psf$DataType.prototype.component1 = function () {
    return this.id;
  };
  Psf$DataType.prototype.copy_za3lpa$ = function (id) {
    return new Psf$DataType(id === void 0 ? this.id : id);
  };
  Psf$DataType.prototype.toString = function () {
    return 'DataType(id=' + Kotlin.toString(this.id) + ')';
  };
  Psf$DataType.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  Psf$DataType.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function Psf$HeaderStruct(magic, version, keyTable, valueTable, numberOfPairs) {
    Psf$HeaderStruct$Companion_getInstance();
    this.magic = magic;
    this.version = version;
    this.keyTable = keyTable;
    this.valueTable = valueTable;
    this.numberOfPairs = numberOfPairs;
  }
  function Psf$HeaderStruct$Companion() {
    Psf$HeaderStruct$Companion_instance = this;
  }
  Psf$HeaderStruct$Companion.prototype.read_39qel5$ = function (s) {
    return new Psf$HeaderStruct(readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s));
  };
  Psf$HeaderStruct$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Psf$HeaderStruct$Companion_instance = null;
  function Psf$HeaderStruct$Companion_getInstance() {
    if (Psf$HeaderStruct$Companion_instance === null) {
      new Psf$HeaderStruct$Companion();
    }
    return Psf$HeaderStruct$Companion_instance;
  }
  Psf$HeaderStruct.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HeaderStruct',
    interfaces: []
  };
  function Psf$IEntryStruct() {
  }
  Psf$IEntryStruct.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'IEntryStruct',
    interfaces: []
  };
  function Psf$EntryStruct(keyOffset, unknown, dataType, valueSize, valueSizePad, valueOffset) {
    Psf$EntryStruct$Companion_getInstance();
    this.keyOffset = keyOffset;
    this.unknown_0 = unknown;
    this.dataType = dataType;
    this.valueSize = valueSize;
    this.valueSizePad = valueSizePad;
    this.valueOffset = valueOffset;
    this.key_rxu591$_0 = '';
    this.value_4jy80p$_0 = null;
  }
  Object.defineProperty(Psf$EntryStruct.prototype, 'key', {
    get: function () {
      return this.key_rxu591$_0;
    },
    set: function (key) {
      this.key_rxu591$_0 = key;
    }
  });
  Object.defineProperty(Psf$EntryStruct.prototype, 'value', {
    get: function () {
      return this.value_4jy80p$_0;
    },
    set: function (value) {
      this.value_4jy80p$_0 = value;
    }
  });
  function Psf$EntryStruct$Companion() {
    Psf$EntryStruct$Companion_instance = this;
  }
  Psf$EntryStruct$Companion.prototype.read_39qel5$ = function (s) {
    return new Psf$EntryStruct(readU16_le(s), readU8_0(s), new Psf$DataType(readU8_0(s)), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s));
  };
  Psf$EntryStruct$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Psf$EntryStruct$Companion_instance = null;
  function Psf$EntryStruct$Companion_getInstance() {
    if (Psf$EntryStruct$Companion_instance === null) {
      new Psf$EntryStruct$Companion();
    }
    return Psf$EntryStruct$Companion_instance;
  }
  Psf$EntryStruct.prototype.toString = function () {
    return 'Entry(' + this.key + ', ' + toString(this.value) + ')';
  };
  Psf$EntryStruct.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EntryStruct',
    interfaces: [Psf$IEntryStruct]
  };
  function Psf$Companion() {
    Psf$Companion_instance = this;
  }
  Psf$Companion.prototype.invoke_axnxby$ = function (stream_0, continuation_0, suspended) {
    var instance = new Coroutine$invoke_axnxby$_0(this, stream_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$invoke_axnxby$_0($this, stream_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$closure$continuation = void 0;
    this.local$stream = stream_0;
  }
  Coroutine$invoke_axnxby$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$invoke_axnxby$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$invoke_axnxby$_0.prototype.constructor = Coroutine$invoke_axnxby$_0;
  Coroutine$invoke_axnxby$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$$receiver = new Psf();
            this.local$closure$continuation = this;
            this.state_0 = 2;
            this.result_0 = readAll(this.local$stream, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$$receiver.load_39qel5$(openSync(this.local$closure$continuation.result_0));
            return this.local$$receiver;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Psf$Companion.prototype.invoke_39qel5$ = function (stream) {
    var $receiver = new Psf();
    $receiver.load_39qel5$(stream);
    return $receiver;
  };
  Psf$Companion.prototype.invoke_fqrh44$ = function (bytes) {
    var $receiver = new Psf();
    $receiver.load_39qel5$(openSync(bytes));
    return $receiver;
  };
  Psf$Companion.prototype.fromStream_39qel5$ = function (stream) {
    var $receiver = new Psf();
    $receiver.load_39qel5$(stream);
    return $receiver;
  };
  Psf$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Psf$Companion_instance = null;
  function Psf$Companion_getInstance() {
    if (Psf$Companion_instance === null) {
      new Psf$Companion();
    }
    return Psf$Companion_instance;
  }
  Object.defineProperty(Psf.prototype, 'entries', {
    get: function () {
      if (this.entries_1gdqst$_0 == null)
        return throwUPAE('entries');
      return this.entries_1gdqst$_0;
    },
    set: function (entries) {
      this.entries_1gdqst$_0 = entries;
    }
  });
  Object.defineProperty(Psf.prototype, 'entriesByName', {
    get: function () {
      if (this.entriesByName_pyitpt$_0 == null)
        return throwUPAE('entriesByName');
      return this.entriesByName_pyitpt$_0;
    },
    set: function (entriesByName) {
      this.entriesByName_pyitpt$_0 = entriesByName;
    }
  });
  Object.defineProperty(Psf.prototype, 'header', {
    get: function () {
      if (this.header_ndzgsk$_0 == null)
        return throwUPAE('header');
      return this.header_ndzgsk$_0;
    },
    set: function (header) {
      this.header_ndzgsk$_0 = header;
    }
  });
  Psf.prototype.getString_61zpoe$ = function (key) {
    var tmp$;
    return (tmp$ = this.entriesByName.get_11rb$(key)) != null ? tmp$.toString() : null;
  };
  Psf.prototype.getInt_61zpoe$ = function (key) {
    var tmp$, tmp$_0;
    return (tmp$_0 = (tmp$ = this.entriesByName.get_11rb$(key)) != null ? tmp$.toString() : null) != null ? toInt(tmp$_0) : null;
  };
  Psf.prototype.getDouble_61zpoe$ = function (key) {
    var tmp$, tmp$_0;
    return (tmp$_0 = (tmp$ = this.entriesByName.get_11rb$(key)) != null ? tmp$.toString() : null) != null ? toDouble(tmp$_0) : null;
  };
  Psf.prototype.load_39qel5$ = function (stream) {
    var tmp$, tmp$_0;
    var header = Psf$HeaderStruct$Companion_getInstance().read_39qel5$(stream);
    this.header = header;
    if (header.magic !== 1179865088)
      invalidOp('Not a PSF file');
    var $receiver = until(0, header.numberOfPairs);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$_1;
    tmp$_1 = $receiver.iterator();
    while (tmp$_1.hasNext()) {
      var item = tmp$_1.next();
      destination.add_11rb$(Psf$EntryStruct$Companion_getInstance().read_39qel5$(stream));
    }
    var entries = destination;
    var entriesByName = LinkedHashMap_init();
    var keysStream = sliceWithStart(stream, Kotlin.Long.fromInt(header.keyTable));
    var valuesStream = sliceWithStart(stream, Kotlin.Long.fromInt(header.valueTable));
    tmp$ = entries.iterator();
    while (tmp$.hasNext()) {
      var entry = tmp$.next();
      var key = readStringz_0(sliceWithStart(keysStream, Kotlin.Long.fromInt(entry.keyOffset)), lang.UTF8);
      var valueStream = sliceWithSize(valuesStream, Kotlin.Long.fromInt(entry.valueOffset), Kotlin.Long.fromInt(entry.valueSize));
      entry.key = key;
      tmp$_0 = entry.dataType;
      if (equals(tmp$_0, Psf$DataType$Companion_getInstance().BINARY))
        entry.value = readSlice(valueStream, Kotlin.Long.ZERO);
      else if (equals(tmp$_0, Psf$DataType$Companion_getInstance().INT))
        entry.value = readS32_le_0(valueStream);
      else if (equals(tmp$_0, Psf$DataType$Companion_getInstance().TEXT))
        entry.value = readStringz_0(valueStream, lang.UTF8);
      else
        invalidOp('Unknown dataType: ' + entry.dataType);
      var key_0 = entry.key;
      var value = entry.value;
      entriesByName.put_xwzc9p$(key_0, value);
    }
    this.entries = entries;
    this.entriesByName = entriesByName;
  };
  Psf.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Psf',
    interfaces: []
  };
  function PspFileFormat(name, ordinal, fileContainer) {
    if (fileContainer === void 0)
      fileContainer = false;
    Enum.call(this);
    this.fileContainer = fileContainer;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PspFileFormat_initFields() {
    PspFileFormat_initFields = function () {
    };
    PspFileFormat$ELF_instance = new PspFileFormat('ELF', 0);
    PspFileFormat$ENCRYPTED_ELF_instance = new PspFileFormat('ENCRYPTED_ELF', 1);
    PspFileFormat$PBP_instance = new PspFileFormat('PBP', 2);
    PspFileFormat$CSO_instance = new PspFileFormat('CSO', 3, true);
    PspFileFormat$ISO_instance = new PspFileFormat('ISO', 4, true);
    PspFileFormat$ZIP_instance = new PspFileFormat('ZIP', 5, true);
    PspFileFormat$Companion_getInstance();
  }
  var PspFileFormat$ELF_instance;
  function PspFileFormat$ELF_getInstance() {
    PspFileFormat_initFields();
    return PspFileFormat$ELF_instance;
  }
  var PspFileFormat$ENCRYPTED_ELF_instance;
  function PspFileFormat$ENCRYPTED_ELF_getInstance() {
    PspFileFormat_initFields();
    return PspFileFormat$ENCRYPTED_ELF_instance;
  }
  var PspFileFormat$PBP_instance;
  function PspFileFormat$PBP_getInstance() {
    PspFileFormat_initFields();
    return PspFileFormat$PBP_instance;
  }
  var PspFileFormat$CSO_instance;
  function PspFileFormat$CSO_getInstance() {
    PspFileFormat_initFields();
    return PspFileFormat$CSO_instance;
  }
  var PspFileFormat$ISO_instance;
  function PspFileFormat$ISO_getInstance() {
    PspFileFormat_initFields();
    return PspFileFormat$ISO_instance;
  }
  var PspFileFormat$ZIP_instance;
  function PspFileFormat$ZIP_getInstance() {
    PspFileFormat_initFields();
    return PspFileFormat$ZIP_instance;
  }
  function PspFileFormat$Companion() {
    PspFileFormat$Companion_instance = this;
  }
  PspFileFormat$Companion.prototype.detect_phxig4$ = function (file_0, continuation_0, suspended) {
    var instance = new Coroutine$detect_phxig4$(this, file_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$detect_phxig4$($this, file_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$file = file_0;
  }
  Coroutine$detect_phxig4$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$detect_phxig4$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$detect_phxig4$.prototype.constructor = Coroutine$detect_phxig4$;
  Coroutine$detect_phxig4$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$file.open_7c7tmz$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this.detect_rhj9ww$(this.result_0, this.local$file.basename, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  PspFileFormat$Companion.prototype.detect_rhj9ww$ = function (stream_0, name_0, continuation_0, suspended) {
    var instance = new Coroutine$detect_rhj9ww$(this, stream_0, name_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$detect_rhj9ww$($this, stream_0, name_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$stream = stream_0;
    this.local$name = name_0;
  }
  Coroutine$detect_rhj9ww$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$detect_rhj9ww$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$detect_rhj9ww$.prototype.constructor = Coroutine$detect_rhj9ww$;
  Coroutine$detect_rhj9ww$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$name === void 0)
              this.local$name = 'unknown.bin';
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$stream.duplicate(), 4, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.$this.detect_zdd1ed$(openSync(this.result_0), this.local$name);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  PspFileFormat$Companion.prototype.detect_nwlife$ = function (header, name) {
    if (name === void 0)
      name = 'unknown.bin';
    return this.detect_zdd1ed$(openSync(header), name);
  };
  PspFileFormat$Companion.prototype.detect_zdd1ed$ = function (stream, name) {
    if (name === void 0)
      name = 'unknown.bin';
    var tmp$;
    var magicId = readString(stream.clone(), 4, lang.ASCII);
    var file = new PathInfo(name);
    if (equals(magicId, '\x7FELF'))
      tmp$ = PspFileFormat$ELF_getInstance();
    else if (equals(magicId, '~PSP'))
      tmp$ = PspFileFormat$ENCRYPTED_ELF_getInstance();
    else if (equals(magicId, '\x00PBP'))
      tmp$ = PspFileFormat$PBP_getInstance();
    else if (equals(magicId, 'PK\x03\x04'))
      tmp$ = PspFileFormat$ZIP_getInstance();
    else if (equals(magicId, 'CISO'))
      tmp$ = PspFileFormat$CSO_getInstance();
    else if (equals(file.extensionLC, 'iso'))
      tmp$ = PspFileFormat$ISO_getInstance();
    else if (equals(magicId, '\x00\x00\x00\x00'))
      tmp$ = PspFileFormat$ISO_getInstance();
    else
      tmp$ = null;
    return tmp$;
  };
  PspFileFormat$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var PspFileFormat$Companion_instance = null;
  function PspFileFormat$Companion_getInstance() {
    PspFileFormat_initFields();
    if (PspFileFormat$Companion_instance === null) {
      new PspFileFormat$Companion();
    }
    return PspFileFormat$Companion_instance;
  }
  PspFileFormat.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspFileFormat',
    interfaces: [Enum]
  };
  function PspFileFormat$values() {
    return [PspFileFormat$ELF_getInstance(), PspFileFormat$ENCRYPTED_ELF_getInstance(), PspFileFormat$PBP_getInstance(), PspFileFormat$CSO_getInstance(), PspFileFormat$ISO_getInstance(), PspFileFormat$ZIP_getInstance()];
  }
  PspFileFormat.values = PspFileFormat$values;
  function PspFileFormat$valueOf(name) {
    switch (name) {
      case 'ELF':
        return PspFileFormat$ELF_getInstance();
      case 'ENCRYPTED_ELF':
        return PspFileFormat$ENCRYPTED_ELF_getInstance();
      case 'PBP':
        return PspFileFormat$PBP_getInstance();
      case 'CSO':
        return PspFileFormat$CSO_getInstance();
      case 'ISO':
        return PspFileFormat$ISO_getInstance();
      case 'ZIP':
        return PspFileFormat$ZIP_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.format.PspFileFormat.' + name);
    }
  }
  PspFileFormat.valueOf_61zpoe$ = PspFileFormat$valueOf;
  function detectPspFormat($receiver) {
    return PspFileFormat$Companion_getInstance().detect_nwlife$($receiver);
  }
  function detectPspFormat_0($receiver, continuation) {
    return PspFileFormat$Companion_getInstance().detect_phxig4$($receiver, continuation);
  }
  function detectPspFormat_1($receiver, name, continuation) {
    if (name === void 0)
      name = 'unknown.bin';
    return PspFileFormat$Companion_getInstance().detect_rhj9ww$($receiver, name, continuation);
  }
  function CryptedElf() {
    CryptedElf_instance = this;
    this.KIRK_CMD_DECRYPT_PRIVATE_0 = Kirk$CommandEnum$DECRYPT_PRIVATE_getInstance();
    this.KIRK_CMD_DECRYPT_IV_0_0 = Kirk$CommandEnum$DECRYPT_IV_0_getInstance();
    this.KIRK_CMD_SHA1_HASH_0 = Kirk$CommandEnum$SHA1_HASH_getInstance();
    this.MISSING_KEY_0 = -99;
  }
  CryptedElf.prototype.decrypt_fqrh44$ = function (input, continuation) {
    var out = new Int8Array(input.length);
    var size = this.pspDecryptPRX_0(p_u8_1(input), p_u8_1(out), input.length);
    if (size < 0)
      invalidOp('Error decrypting prx');
    return copyOf(out, size);
  };
  CryptedElf.prototype.ROUNDUP16_0 = function (x) {
    return x + 15 & ~15;
  };
  CryptedElf.prototype.GetTagInfo_0 = function (checkTag) {
    var $receiver = CryptedElf$Keys_getInstance().g_TagInfo;
    var firstOrNull$result;
    firstOrNull$break: do {
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (element.tag === checkTag) {
          firstOrNull$result = element;
          break firstOrNull$break;
        }
      }
      firstOrNull$result = null;
    }
     while (false);
    return firstOrNull$result;
  };
  CryptedElf.prototype.ExtraV2Mangle_0 = function (buffer1, codeExtra) {
    var buffer2 = p_u8_1(new Int8Array(this.ROUNDUP16_0(20 + 160 | 0)));
    memcpy(buffer2.plus_za3lpa$(20), buffer1, 160);
    var pl2 = p_u32_2(buffer2);
    pl2.set_vux9f0$(0, Kirk$KirkMode$DecryptCbc_getInstance().id);
    pl2.set_vux9f0$(1, 0);
    pl2.set_vux9f0$(2, 0);
    pl2.set_vux9f0$(3, codeExtra);
    pl2.set_vux9f0$(4, 160);
    this.sceUtilsBufferCopyWithRange_0(buffer2, 20 + 160 | 0, buffer2, 20 + 160 | 0, this.KIRK_CMD_DECRYPT_IV_0_0);
    memcpy(buffer1, buffer2, 160);
  };
  CryptedElf.prototype.Scramble_0 = function (buf, size, code) {
    buf.set_vux9f0$(0, Kirk$KirkMode$DecryptCbc_getInstance().id);
    buf.set_vux9f0$(1, 0);
    buf.set_vux9f0$(2, 0);
    buf.set_vux9f0$(3, code);
    buf.set_vux9f0$(4, size);
    return this.sceUtilsBufferCopyWithRange_0(p_u8_2(buf), size + 20 | 0, p_u8_2(buf), size + 20 | 0, this.KIRK_CMD_DECRYPT_IV_0_0);
  };
  CryptedElf.prototype.DecryptPRX1_0 = function (pbIn, pbOut, cbTotal, tag) {
    var tmp$;
    var bD0 = p_u8_1(new Int8Array(128));
    var b80 = p_u8_1(new Int8Array(80));
    var b00 = p_u8_1(new Int8Array(128));
    var bB0 = p_u8_1(new Int8Array(32));
    var pti = (tmp$ = this.GetTagInfo_0(tag)) != null ? tmp$ : invalidOp('Missing tag ' + get_hex(tag));
    if (pti.key.size <= 16)
      return -1;
    var firstZeroIndex = indexOf(pti.key.data, toByte(0));
    var retsize = p_u32_2(pbIn.plus_za3lpa$(176)).get_za3lpa$(0);
    var key = p_u8_1(new Int8Array(144));
    memcpy(p_u8_2(key), p_u8_0(pti.key), 144);
    if (firstZeroIndex < 0) {
      this.Scramble_0(p_u32_2(key), 144, pti.code);
    }
    if (!(pbIn != null ? pbIn.equals(pbOut) : null))
      memcpy(pbOut, pbIn, cbTotal);
    memcpy(bD0, pbIn.plus_za3lpa$(208), 128);
    memcpy(b80, pbIn.plus_za3lpa$(128), 80);
    memcpy(b00, pbIn.plus_za3lpa$(0), 128);
    memcpy(bB0, pbIn.plus_za3lpa$(176), 32);
    memset(pbOut, 0, 336);
    memset(pbOut, 85, 64);
    var pl = p_u32_2(pbOut.plus_za3lpa$(44));
    pl.set_vux9f0$(0, 5);
    pl.set_vux9f0$(1, 0);
    pl.set_vux9f0$(2, 0);
    pl.set_vux9f0$(3, pti.code);
    pl.set_vux9f0$(4, 112);
    var buffer1 = p_u8_1(new Int8Array(336));
    memcpy(buffer1.plus_za3lpa$(0), bD0, 128);
    memcpy(buffer1.plus_za3lpa$(128), b80, 80);
    memcpy(buffer1.plus_za3lpa$(208), b00, 128);
    if (pti.type !== 0)
      this.ExtraV2Mangle_0(buffer1.plus_za3lpa$(16), pti.type);
    memcpy(pbOut.plus_za3lpa$(64), buffer1.plus_za3lpa$(64), 64);
    var ret;
    for (var iXOR = 0; iXOR < 112; iXOR++) {
      pbOut.set_vux9f0$(64 + iXOR | 0, pbOut.get_za3lpa$(64 + iXOR | 0) ^ key.get_za3lpa$(20 + iXOR | 0));
    }
    ret = this.sceUtilsBufferCopyWithRange_0(pbOut.plus_za3lpa$(44), 20 + 112 | 0, pbOut.plus_za3lpa$(44), 20 + 112 | 0, this.KIRK_CMD_DECRYPT_IV_0_0);
    if (ret !== 0) {
      invalidOp('Error(-1)');
    }
    for (var iXOR_0 = 111; iXOR_0 >= 0; iXOR_0--) {
      pbOut.set_vux9f0$(64 + iXOR_0 | 0, pbOut.get_za3lpa$(44 + iXOR_0 | 0) ^ key.get_za3lpa$(32 + iXOR_0 | 0));
    }
    memset(pbOut.plus_za3lpa$(128), 0, 48);
    pbOut.set_vux9f0$(160, 1);
    memcpy(pbOut.plus_za3lpa$(176), bB0, 32);
    memcpy(pbOut.plus_za3lpa$(208), b00, 128);
    ret = this.sceUtilsBufferCopyWithRange_0(pbOut, cbTotal, pbOut.plus_za3lpa$(64), cbTotal - 64 | 0, this.KIRK_CMD_DECRYPT_PRIVATE_0);
    if (ret !== 0) {
      invalidOp('Error(-2)');
    }
    return retsize;
  };
  CryptedElf.prototype.DecryptPRX2_0 = function (inbuf, outbuf, size, tag) {
    var tmp$;
    tmp$ = this.GetTagInfo_0(tag);
    if (tmp$ == null) {
      return -1;
    }
    var pti = tmp$;
    if (pti.type !== 2 && pti.type !== 6) {
      invalidOp('Error -12');
    }
    var retsize = p_u32_2(inbuf.plus_za3lpa$(176)).get_za3lpa$(0);
    var tmp1 = p_u8_1(new Int8Array(336));
    var tmp2 = p_u8_1(new Int8Array(this.ROUNDUP16_0(144 + 20 | 0)));
    var tmp3 = p_u8_1(new Int8Array(this.ROUNDUP16_0(144 + 20 | 0)));
    var tmp4 = p_u8_1(new Int8Array(this.ROUNDUP16_0(32)));
    if (!(inbuf != null ? inbuf.equals(outbuf) : null))
      memcpy(outbuf, inbuf, size);
    if (size < 352) {
      invalidOp('Error(-2)');
    }
    if ((size - 336 | 0) < retsize) {
      invalidOp('Error(-4)');
    }
    memcpy(tmp1, outbuf, 336);
    var p = tmp2.plus_za3lpa$(20);
    for (var i = 0; i < 9; i++) {
      memcpy(p.plus_za3lpa$(i << 4), p_u8_0(pti.key), 16);
      p.set_vux9f0$(i << 4, i);
    }
    if (this.Scramble_0(p_u32_2(tmp2), 144, pti.code) < 0) {
      invalidOp('Error(-5) Scramble');
    }
    memcpy(outbuf, tmp1.plus_za3lpa$(208), 92);
    memcpy(outbuf.plus_za3lpa$(92), tmp1.plus_za3lpa$(320), 16);
    memcpy(outbuf.plus_za3lpa$(108), tmp1.plus_za3lpa$(300), 20);
    memcpy(outbuf.plus_za3lpa$(128), tmp1.plus_za3lpa$(128), 48);
    memcpy(outbuf.plus_za3lpa$(176), tmp1.plus_za3lpa$(192), 16);
    memcpy(outbuf.plus_za3lpa$(192), tmp1.plus_za3lpa$(176), 16);
    memcpy(outbuf.plus_za3lpa$(208), tmp1.plus_za3lpa$(0), 128);
    memcpy(tmp3.plus_za3lpa$(20), outbuf.plus_za3lpa$(92), 96);
    if (this.Scramble_0(p_u32_2(tmp3), 96, pti.code) < 0) {
      invalidOp('Error(-6) Scramble');
    }
    memcpy(outbuf.plus_za3lpa$(92), tmp3, 96);
    memcpy(tmp3, outbuf.plus_za3lpa$(108), 20);
    memcpy(outbuf.plus_za3lpa$(112), outbuf.plus_za3lpa$(92), 16);
    if (pti.type === 6) {
      memcpy(tmp4, outbuf.plus_za3lpa$(60), 32);
      memcpy(outbuf.plus_za3lpa$(80), tmp4, 32);
      memset(outbuf.plus_za3lpa$(24), 0, 56);
    }
     else
      memset(outbuf.plus_za3lpa$(24), 0, 88);
    memcpy(outbuf.plus_za3lpa$(4), outbuf, 4);
    p_u32_2(outbuf).set_vux9f0$(0, 332);
    memcpy(outbuf.plus_za3lpa$(8), tmp2, 16);
    if (this.sceUtilsBufferCopyWithRange_0(outbuf, 3000000, outbuf, 3000000, this.KIRK_CMD_SHA1_HASH_0) !== 0) {
      invalidOp('Error(-7)');
    }
    if (memcmp(outbuf, tmp3, 20) !== 0) {
      invalidOp('Error(-8)');
    }
    for (var i_0 = 0; i_0 < 64; i_0++) {
      tmp3.set_vux9f0$(i_0 + 20 | 0, outbuf.get_za3lpa$(i_0 + 128 | 0) ^ tmp2.get_za3lpa$(i_0 + 16 | 0));
    }
    if (this.Scramble_0(p_u32_2(tmp3), 64, pti.code) !== 0) {
      invalidOp('Error(-9)');
    }
    for (var i_1 = 0; i_1 < 64; i_1++) {
      outbuf.set_vux9f0$(i_1 + 64 | 0, tmp3.get_za3lpa$(i_1) ^ tmp2.get_za3lpa$(i_1 + 80 | 0));
    }
    if (pti.type === 6) {
      memcpy(outbuf.plus_za3lpa$(128), tmp4, 32);
      memset(outbuf.plus_za3lpa$(160), 0, 16);
      p_u32_2(outbuf.plus_za3lpa$(164)).set_vux9f0$(0, 1);
      p_u32_2(outbuf.plus_za3lpa$(160)).set_vux9f0$(0, 1);
    }
     else {
      memset(outbuf.plus_za3lpa$(128), 0, 48);
      p_u32_2(outbuf.plus_za3lpa$(160)).set_vux9f0$(0, 1);
    }
    memcpy(outbuf.plus_za3lpa$(176), outbuf.plus_za3lpa$(192), 16);
    memset(outbuf.plus_za3lpa$(192), 0, 16);
    if (this.sceUtilsBufferCopyWithRange_0(outbuf, size, outbuf.plus_za3lpa$(64), size - 64 | 0, this.KIRK_CMD_DECRYPT_PRIVATE_0) !== 0) {
      invalidOp('Error(-1)');
    }
    if (retsize < 336) {
      memset(outbuf.plus_za3lpa$(retsize), 0, 336 - retsize | 0);
    }
    return retsize;
  };
  CryptedElf.prototype.pspDecryptPRX_0 = function (inbuf, outbuf, size) {
    var retsize = this.DecryptPRX1_0(inbuf, outbuf, size, p_u32_2(inbuf.plus_za3lpa$(208)).get_za3lpa$(0));
    if (retsize === this.MISSING_KEY_0) {
      return this.MISSING_KEY_0;
    }
    if (retsize <= 0) {
      retsize = this.DecryptPRX2_0(inbuf, outbuf, size, p_u32_2(inbuf.plus_za3lpa$(208)).get_za3lpa$(0));
    }
    return retsize;
  };
  CryptedElf.prototype.sceUtilsBufferCopyWithRange_0 = function (output, outputSize, input, inputSize, command) {
    return Kirk_getInstance().hleUtilsBufferCopyWithRange_pkg093$(output, outputSize, input, inputSize, command);
  };
  function CryptedElf$Keys() {
    CryptedElf$Keys_instance = this;
    this.g_TagInfo = listOf([new CryptedElf$Keys$TagInfo(1284807920, crypto.Hex.decode_61zpoe$('3f6709a14771d69e277c7b32670e658a'), 67), new CryptedElf$Keys$TagInfo(1284805872, crypto.Hex.decode_61zpoe$('76f26c0aca3aba4eac76d240f5c3bff9'), 67), new CryptedElf$Keys$TagInfo(1284806128, crypto.Hex.decode_61zpoe$('7a3e5575b96afc4f3ee3dfb36ce82a82'), 67), new CryptedElf$Keys$TagInfo(1284804848, crypto.Hex.decode_61zpoe$('fa790936e619e8a4a94137188102e9b3'), 67), new CryptedElf$Keys$TagInfo(1284805104, crypto.Hex.decode_61zpoe$('85931fed2c4da453599c3f16f350de46'), 67), new CryptedElf$Keys$TagInfo(1284805616, crypto.Hex.decode_61zpoe$('c8a07098aee62b80d791e6ca4ca9784e'), 67), new CryptedElf$Keys$TagInfo(1284806640, crypto.Hex.decode_61zpoe$('bff834028447bd871c52032379bb5981'), 67), new CryptedElf$Keys$TagInfo(1284805360, crypto.Hex.decode_61zpoe$('d283cc63bb1015e77bc06dee349e4afa'), 67), new CryptedElf$Keys$TagInfo(1284806384, crypto.Hex.decode_61zpoe$('ebd91e053caeab62e3b71f37e5cd68c3'), 67), new CryptedElf$Keys$TagInfo(1165725936, crypto.Hex.decode_61zpoe$('ba7661478b55a8728915796dd72f780e'), 91), new CryptedElf$Keys$TagInfo(1165726192, crypto.Hex.decode_61zpoe$('c59c779c4101e48579c87163a57d4ffb'), 91), new CryptedElf$Keys$TagInfo(1165726448, crypto.Hex.decode_61zpoe$('928ca412d65c55315b94239b62b3db47'), 91), new CryptedElf$Keys$TagInfo(1165726704, crypto.Hex.decode_61zpoe$('88af18e9c3aa6b56f7c5a8bf1a84e9f3'), 91), new CryptedElf$Keys$TagInfo(939692272, crypto.Hex.decode_61zpoe$('f94a6b96793fee0a04c88d7e5f383acf'), 90), new CryptedElf$Keys$TagInfo(939692528, crypto.Hex.decode_61zpoe$('86a07d4db36ba2fdf41585702d6a0d3a'), 90), new CryptedElf$Keys$TagInfo(939692784, crypto.Hex.decode_61zpoe$('d1b0aec324361349d649d788eaa49986'), 90), new CryptedElf$Keys$TagInfo(939693040, crypto.Hex.decode_61zpoe$('cb93123831c02d2e7a185cac9293ab32'), 90), new CryptedElf$Keys$TagInfo(1284803824, crypto.Hex.decode_61zpoe$('017bf0e9be9add5437ea0ec4d64d8e9e'), 67), new CryptedElf$Keys$TagInfo(1284804080, crypto.Hex.decode_61zpoe$('9843ff8568b2db3bd422d04fab5f0a31'), 67), new CryptedElf$Keys$TagInfo(1284803568, crypto.Hex.decode_61zpoe$('91f2029e633230a91dda0ba8b741a3cc'), 67), new CryptedElf$Keys$TagInfo(1284803312, crypto.Hex.decode_61zpoe$('07e308647f60a3366a762144c9d70683'), 67), new CryptedElf$Keys$TagInfo(1165724400, crypto.Hex.decode_61zpoe$('47ec6015122ce3e04a226f319ffa973e'), 91), new CryptedElf$Keys$TagInfo(1284802544, crypto.Hex.decode_61zpoe$('81d1128935c8ea8be0022d2d6a1867b8'), 67), new CryptedElf$Keys$TagInfo(1165722608, crypto.Hex.decode_61zpoe$('771c065f53ec3ffc22ce5a27ff78a848'), 91), new CryptedElf$Keys$TagInfo(1284802288, crypto.Hex.decode_61zpoe$('8ddbdc5cf2702b40b23d0009617c1060'), 67), new CryptedElf$Keys$TagInfo(1165722352, crypto.Hex.decode_61zpoe$('873721cc65aeaa5f40f66f2a86c7a1c8'), 91), new CryptedElf$Keys$TagInfo(1165722096, crypto.Hex.decode_61zpoe$('aaa1b57c935a95bdef6916fc2b9231dd'), 91), new CryptedElf$Keys$TagInfo(1284802032, crypto.Hex.decode_61zpoe$('238d3dae4150a0faf32f32cec727cd50'), 67), new CryptedElf$Keys$TagInfo(1165721840, crypto.Hex.decode_61zpoe$('d43518022968fba06aa9a5ed78fd2e9d'), 91), new CryptedElf$Keys$TagInfo(1284801776, crypto.Hex.decode_61zpoe$('36b0dcfc592a951d802d803fcd30a01b'), 67), new CryptedElf$Keys$TagInfo(1165699312, crypto.Hex.decode_61zpoe$('b1b37f76c3fb88e6f860d3353ca34ef3'), 91), new CryptedElf$Keys$TagInfo(1165692144, crypto.Hex.decode_61zpoe$('ac34bab1978dae6fbae8b1d6dfdff1a2'), 91), new CryptedElf$Keys$TagInfo(939665648, crypto.Hex.decode_61zpoe$('f28f75a73191ce9e75bd2726b4b40c32'), 90), new CryptedElf$Keys$TagInfo(1284778736, crypto.Hex.decode_61zpoe$('418a354f693adf04fd3946a25c2df221'), 67), new CryptedElf$Keys$TagInfo(1284778224, crypto.Hex.decode_61zpoe$('f1bc1707aeb7c830d8349d406a8edf4e'), 67), new CryptedElf$Keys$TagInfo(1284775408, crypto.Hex.decode_61zpoe$('1d13e95004733dd2e1dab9c1e67b25a7'), 67), new CryptedElf$Keys$TagInfo(1284775152, crypto.Hex.decode_61zpoe$('d6bdce1e12af9ae66930deda88b8fffb'), 67), new CryptedElf$Keys$TagInfo(1284776688, crypto.Hex.decode_61zpoe$('e145932c53e2ab066fb68f0b6691e71e'), 67), new CryptedElf$Keys$TagInfo(1284775664, crypto.Hex.decode_61zpoe$('e35239973b84411cc323f1b8a9094bf0'), 67), new CryptedElf$Keys$TagInfo(1284778480, crypto.Hex.decode_61zpoe$('6d72a4ba7fbfd1f1a9f3bb071bc0b366'), 67), new CryptedElf$Keys$TagInfo(1165691888, crypto.Hex.decode_61zpoe$('7b9472274ccc543baedf4637ac014d87'), 91), new CryptedElf$Keys$TagInfo(1284774384, crypto.Hex.decode_61zpoe$('582a4c69197b833dd26161fe14eeaa11'), 67), new CryptedElf$Keys$TagInfo(1284774128, crypto.Hex.decode_61zpoe$('2e8e97a28542707318daa08af862a2b0'), 67), new CryptedElf$Keys$TagInfo(1165696752, crypto.Hex.decode_61zpoe$('a35d51e656c801cae377bfcdff24da4d'), 91), new CryptedElf$Keys$TagInfo(1284775920, crypto.Hex.decode_61zpoe$('2c8eaf1dff79731aad96ab09ea35598b'), 67), new CryptedElf$Keys$TagInfo(1284773872, crypto.Hex.decode_61zpoe$('bae2a31207ff041b64a51185f72f995b'), 67), new CryptedElf$Keys$TagInfo(1284773616, crypto.Hex.decode_61zpoe$('eb1b530b624932581f830af4993d75d0'), 67), new CryptedElf$Keys$TagInfo(1284773104, crypto.Hex.decode_61zpoe$('45ef5c5ded81998412948fabe8056d7d'), 67), new CryptedElf$Keys$TagInfo(1284773360, crypto.Hex.decode_61zpoe$('701b082522a14d3b6921f9710aa841a9'), 67), new CryptedElf$Keys$TagInfo(1284772592, crypto.Hex.decode_61zpoe$('26380aaca5d874d132b72abf799e6ddb'), 67), new CryptedElf$Keys$TagInfo(1284772848, crypto.Hex.decode_61zpoe$('53e7abb9c64a4b779217b5740adaa9ea'), 67), new CryptedElf$Keys$TagInfo(1165693168, crypto.Hex.decode_61zpoe$('7110f0a41614d59312ff7496df1fda89'), 91), new CryptedElf$Keys$TagInfo(1284771312, crypto.Hex.decode_61zpoe$('3c2b51d42d8547da2dca18dffe5409ed'), 67), new CryptedElf$Keys$TagInfo(1284772080, crypto.Hex.decode_61zpoe$('311f98d57b58954532ab3ae389324b34'), 67), new CryptedElf$Keys$TagInfo(1284770800, crypto.Hex.decode_61zpoe$('3b9b1a56218014ed8e8b0842fa2cdc3a'), 67), new CryptedElf$Keys$TagInfo(1165691632, crypto.Hex.decode_61zpoe$('e8be2f06b1052ab9181803e3eb647d26'), 91), new CryptedElf$Keys$TagInfo(939657968, crypto.Hex.decode_61zpoe$('ab8225d7436f6cc195c5f7f063733fe7'), 90), new CryptedElf$Keys$TagInfo(1284770544, crypto.Hex.decode_61zpoe$('a8b14777dc496a6f384c4d96bd49ec9b'), 67), new CryptedElf$Keys$TagInfo(1284771056, crypto.Hex.decode_61zpoe$('ec3bd2c0fac1eeb99abcffa389f2601f'), 67), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-806417936, 0)).toInt(), crypto.Hex.decode_61zpoe$('a241e839665bfabb1b2d6e0e33e5d73f'), 98), new CryptedElf$Keys$TagInfo(1165691120, crypto.Hex.decode_61zpoe$('a4608fababdea5655d433ad15ec3ffea'), 91), new CryptedElf$Keys$TagInfo(939657456, crypto.Hex.decode_61zpoe$('e75c857a59b4e31dd09ecec2d6d4bd2b'), 90), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-806418192, 0)).toInt(), crypto.Hex.decode_61zpoe$('2e00f6f752cf955aa126b4849b58762f'), 98), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-806418448, 0)).toInt(), crypto.Hex.decode_61zpoe$('7ba1e25a91b9d31377654ab7c28a10af'), 98), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-806418704, 0)).toInt(), crypto.Hex.decode_61zpoe$('9f671a7a22f3590baa6da4c68bd00377'), 98), new CryptedElf$Keys$TagInfo(1165690608, crypto.Hex.decode_61zpoe$('15076326dbe2693456082a934e4b8ab2'), 91), new CryptedElf$Keys$TagInfo(939656944, crypto.Hex.decode_61zpoe$('563b69f729882f4cdbd5de80c65cc873'), 90), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-806418960, 0)).toInt(), crypto.Hex.decode_61zpoe$('cafbbfc750eab4408e445c6353ce80b1'), 98), new CryptedElf$Keys$TagInfo(1165690352, crypto.Hex.decode_61zpoe$('409bc69ba9fb847f7221d23696550974'), 91), new CryptedElf$Keys$TagInfo(939656688, crypto.Hex.decode_61zpoe$('03a7cc4a5b91c207fffc26251e424bb5'), 90), new CryptedElf$Keys$TagInfo(383098371, crypto.Hex.decode_61zpoe$('c32489d38087b24e4cd749e49d1d34d1'), 98), new CryptedElf$Keys$TagInfo(1981817859, crypto.Hex.decode_61zpoe$('f3ac6e7c040a23e70d33d82473392b4a'), 91), new CryptedElf$Keys$TagInfo(251884291, crypto.Hex.decode_61zpoe$('72b439ff349bae8230344a1da2d8b43c'), 90), new CryptedElf$Keys$TagInfo(1284771824, crypto.Hex.decode_61zpoe$('8002c0bf000ac0bf4003c0bf40000000'), 67), new CryptedElf$Keys$TagInfo(1147617629, crypto.Hex.decode_61zpoe$('660fcb3b3075e3100a9565c73c938722'), 89), new CryptedElf$Keys$TagInfo(0, crypto.Hex.decode_61zpoe$('6a1971f318ded3a26d3bdec7be98e24c'), 66), new CryptedElf$Keys$TagInfo(16777216, crypto.Hex.decode_61zpoe$('50cc03ac3f531afa0aa4342386617f97'), 67), new CryptedElf$Keys$TagInfo(777916656, crypto.Hex.decode_61zpoe$('9d5c5baf8cd8697e519f7096e6d5c4e8'), 72), new CryptedElf$Keys$TagInfo(777917168, crypto.Hex.decode_61zpoe$('8a7bc9d6525888ea518360ca1679e207'), 72), new CryptedElf$Keys$TagInfo(777917424, crypto.Hex.decode_61zpoe$('ffa468c331cab74cf123ff01653d2636'), 72), new CryptedElf$Keys$TagInfo(802360304, crypto.Hex.decode_61zpoe$('d85879f9a422af8690acda45ce60403f'), 71), new CryptedElf$Keys$TagInfo(802361840, crypto.Hex.decode_61zpoe$('3a6b489686a5c880696ce64bf6041744'), 71), new CryptedElf$Keys$TagInfo(802362096, crypto.Hex.decode_61zpoe$('c5fb6903207acfba2c90f8b84dd2f1de'), 71), new CryptedElf$Keys$TagInfo(802362352, crypto.Hex.decode_61zpoe$('b024c81643e8f01c8c3067733e9635ef'), 71), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652868112, 0)).toInt(), crypto.Hex.decode_61zpoe$('b88c458bb6e76eb85159a6537c5e8631'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652867856, 0)).toInt(), crypto.Hex.decode_61zpoe$('ed10e036c4fe83f375705ef6a44005f7'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652867344, 0)).toInt(), crypto.Hex.decode_61zpoe$('5c770cbbb4c24fa27e3b4eb4b4c870af'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652867088, 0)).toInt(), crypto.Hex.decode_61zpoe$('d036127580562043c430943e1c75d1bf'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652866832, 0)).toInt(), crypto.Hex.decode_61zpoe$('10a9ac16ae19c07e3b607786016ff263'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652866576, 0)).toInt(), crypto.Hex.decode_61zpoe$('8383f13753d0befc8da73252460ac2c2'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652865040, 0)).toInt(), crypto.Hex.decode_61zpoe$('61b0c0587157d9fa74670e5c7e6e95b9'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652864784, 0)).toInt(), crypto.Hex.decode_61zpoe$('9e20e1cdd788dec0319b10afc5b87323'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652864528, 0)).toInt(), crypto.Hex.decode_61zpoe$('ebff40d8b41ae166913b8f64b6fcb712'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652864272, 0)).toInt(), crypto.Hex.decode_61zpoe$('fdf7b73c9fd1339511b8b5bb54237385'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652864016, 0)).toInt(), crypto.Hex.decode_61zpoe$('c803e34450f1e72a6a0dc361b68e5f51'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652863760, 0)).toInt(), crypto.Hex.decode_61zpoe$('5303b86a101998491caf30e4251b6b28'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652863504, 0)).toInt(), crypto.Hex.decode_61zpoe$('02fa487375afae0a67892b954b0987a3'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652863248, 0)).toInt(), crypto.Hex.decode_61zpoe$('96967cc3f712da621bf69a9a4444bc48'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652862992, 0)).toInt(), crypto.Hex.decode_61zpoe$('e032a7086b2b292cd14d5beea8c8b4e9'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652862736, 0)).toInt(), crypto.Hex.decode_61zpoe$('27e5a74952e194673566910ce89a2524'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652861200, 0)).toInt(), crypto.Hex.decode_61zpoe$('521cb45f403b9addacfcea92fdddf590'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652860944, 0)).toInt(), crypto.Hex.decode_61zpoe$('d1912ea621142962f6edaecbdda3bafe'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652860688, 0)).toInt(), crypto.Hex.decode_61zpoe$('595d784d21b201176c9ab51bdab7f9e6'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652860432, 0)).toInt(), crypto.Hex.decode_61zpoe$('aa45eb4f62fbd10d71d562d2f5bfa52f'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652860176, 0)).toInt(), crypto.Hex.decode_61zpoe$('61b726af8bf14158836ac49212cbb1e9'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652859152, 0)).toInt(), crypto.Hex.decode_61zpoe$('49a4fc66dce76221db18a750d6a8c1b6'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652836624, 0)).toInt(), crypto.Hex.decode_61zpoe$('2c229b123674116749d1d18892f6a1d8'), 93, 6), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652836368, 0)).toInt(), crypto.Hex.decode_61zpoe$('52b6366c8c467f7acc116299c199be98'), 93, 6), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-668790544, 0)).toInt(), crypto.Hex.decode_61zpoe$('9d09fd20f38f10690db26f00ccc5512e'), 81), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-668786960, 0)).toInt(), crypto.Hex.decode_61zpoe$('4f445c62b353c430fc3aa45becfe51ea'), 81), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-668784400, 0)).toInt(), crypto.Hex.decode_61zpoe$('5daa72f226604d1ce72dc8a32f79c554'), 81), new CryptedElf$Keys$TagInfo(664602864, crypto.Hex.decode_61zpoe$('c7277285aba7f7f04cc186cce37f17ca'), 97), new CryptedElf$Keys$TagInfo(664602352, crypto.Hex.decode_61zpoe$('76409e08db9b3ba1478a968ef3f76292'), 97), new CryptedElf$Keys$TagInfo(664602096, crypto.Hex.decode_61zpoe$('23dc3bb5a982d6ea63a36e2b2be9e154'), 97), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-697436413, 0)).toInt(), crypto.Hex.decode_61zpoe$('224357682f41ce654ca37cc6c4acf360'), 97), new CryptedElf$Keys$TagInfo(664604912, crypto.Hex.decode_61zpoe$('12570d8a166d8706037dc88b62a332a9'), 97), new CryptedElf$Keys$TagInfo(1009387760, crypto.Hex.decode_61zpoe$('1e2e3849dad41608272ef3bc37758093'), 103), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-1376582160, 0)).toInt(), crypto.Hex.decode_61zpoe$('1299705e24076cd02d06fe7eb30c1126'), 96), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-1376581904, 0)).toInt(), crypto.Hex.decode_61zpoe$('4705d5e3561e819b092f06db6b1292e0'), 96), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-1376581392, 0)).toInt(), crypto.Hex.decode_61zpoe$('f662396e26224dca026416997b9ae7b8'), 96), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-2147156733, 0)).toInt(), crypto.Hex.decode_61zpoe$('f4aef4e186ddd29c7cc542a695a08388'), 93, 2), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652868112, 0)).toInt(), crypto.Hex.decode_61zpoe$('b88c458bb6e76eb85159a6537c5e8631'), 93), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652867856, 0)).toInt(), crypto.Hex.decode_61zpoe$('ed10e036c4fe83f375705ef6a44005f7'), 93), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-652867344, 0)).toInt(), crypto.Hex.decode_61zpoe$('5c770cbbb4c24fa27e3b4eb4b4c870af'), 93), new CryptedElf$Keys$TagInfo(171305475, crypto.Hex.decode_61zpoe$('f948380c9688a7744f65a054c276d9b8'), 94), new CryptedElf$Keys$TagInfo(2063926768, crypto.Hex.decode_61zpoe$('2d86773a56a44fdd3c167193aa8e1143'), 94), new CryptedElf$Keys$TagInfo(2063927024, crypto.Hex.decode_61zpoe$('781ad28724bda296183f893672909285'), 94), new CryptedElf$Keys$TagInfo(2063927536, crypto.Hex.decode_61zpoe$('c97d3e0a54816ec7137499746218e7dd'), 94), new CryptedElf$Keys$TagInfo(939659504, crypto.Hex.decode_61zpoe$('322cfa75e47e93eb9f22808557089848'), 90), new CryptedElf$Keys$TagInfo(939688176, crypto.Hex.decode_61zpoe$('970912d3db02bdd8e77451fef0ea6c5c'), 90), new CryptedElf$Keys$TagInfo(939688944, crypto.Hex.decode_61zpoe$('34200c8ea1867984af13ae34776fea89'), 90), new CryptedElf$Keys$TagInfo(1081610480, crypto.Hex.decode_61zpoe$('afadcaf1955991ec1b27d04e8af33de7'), 106), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-383512336, 0)).toInt(), crypto.Hex.decode_61zpoe$('36ef824e74fb175b141405f3b38a7618'), 64), new CryptedElf$Keys$TagInfo(1764233456, crypto.Hex.decode_61zpoe$('21525d76f6810f152f4a408963a01055'), 64), new CryptedElf$Keys$TagInfo(0, crypto.Hex.decode_61zpoe$('bef3217b1d5e9c29715e9c1c4546cb96e01b9b3c3dde85eb22207f4aaa6e20c265320bd5670577554008083cf2551d98f3f6d85fc5b08eee52814d94518627f8faba052733e52084e94a152732aa194840aaa35965cfb32c6d4674f20556653a8ff8b021268db1c55190c1644ec969d6f23570e809593a9d02714e6fce46a9dc1b881684a597b0bac625912472084cb3'), 66, 0), new CryptedElf$Keys$TagInfo(33554432, crypto.Hex.decode_61zpoe$('32a9fdcc766fc051cfcc6d041e82e1494c023b7d6558da9d25988cccb57de9d1cbd8746887c97134fcb3ed725d36c8813ae361e159db92fcecb10920e44ca9b16b69032fd836e287e98c2b3b84e70503830871f939db39b037ea3b8905684de7bd385c2a13c88db07523b3152545be4690fd0301a2870ea96aa6ab52807bbf8563cee845d316d74d2d0de3f556e43aaf'), 69, 0), new CryptedElf$Keys$TagInfo(50331648, crypto.Hex.decode_61zpoe$('caf5c8a680c0676d3a4d4f926aa07c049702640858a7d44f875a68bdc201279b352ab6833c536b720cfa22e5b4064bc2ac1c9d457b41c5a8a262ea4f42d71506098d623014ab4fc45e71ff697d83d8d28b0bedbeae576e1e02c4e861067a36be5e2b3f5458c03edb752085becc4d7e1e55ea6415b42578ecad8c53c07f2cf770d0c3e849c57ea9eda4b092f42ab05ee0'), 70, 0), new CryptedElf$Keys$TagInfo(1147617629, crypto.Hex.decode_61zpoe$('05e080ef9f68543acd9cc943be27771b3800b85c62fe2edd2cf969f3c5940f1619005629c5103cbf6655cef226c6a2ce6f8101b61e48e764bdde340cb09cf298d704c53ff039fbc8d8b32102a236f96300483a9ae332cc6efd0c128e231636b089e6e1aeeb0255741cc6a6e4b43ef2741358fad7eb1619b057843212d297bcd2d8256464a5808332b18ada43c92a124b'), 89, 89), new CryptedElf$Keys$TagInfo(544980783, crypto.Hex.decode_61zpoe$('0008b533cd5f2ff31f88143c952a8a6ed5effe29e3ea941343d46bbd83c02108d379b3fa65e113e6d354a7f552298b10151e4b0abadeea61df6575550153463bc3ec54ae0933426119ffc970ece50a5b26f19d985f7a989d0e75bc5527ba6ec6e888e92dda0066f7cbdc8203f2f569556212438ed3e38f2887216f659c2ed137b49e532f8e9992a4f75839ed2365e939'), 90, 90), new CryptedElf$Keys$TagInfo(986598862, crypto.Hex.decode_61zpoe$('697087671756bd3adcb13ac27d5057ab407f6a06b9f9de24e459f706b124f5dc5e3e79132d025903a2e1e7aafab2b9764003169aba2f8287bb8fe219028a339e9a7e00d8f17a31eade7106637cca670baf92518626353cea8e8c442b5492598bcbe90246da6ce14dbbd564e18ed8ec07f8e5ff99c1008876ed91b05334740484bcdb26b4bb48f9365821144692b49b74'), 91, 91), new CryptedElf$Keys$TagInfo(117440512, crypto.Hex.decode_61zpoe$('af2f36f96a73820ead3594e9e9870c89bbe84f57ad3436db805d48fe5cb5e9e95b46b5ac'), 74, 0), new CryptedElf$Keys$TagInfo(134217728, crypto.Hex.decode_61zpoe$('ef69cb1812898e15bb0ef9de23fbb04c18ee87366e4a8d8656c7b5191d5516ee6c2dcbe760c647973f1495ce77f45629de4a8203f19d0c2124eb29509fe6df81009bc839918b0cb0c2f92deffc933ae1a8a4948b9dd01d490d406a68e4c7d4cec9b7c89628dcaa1e840b17a4dc5d5d50cfc3a65d2dfa5d0eb519796ec7295ece94dbacaadd0cf7452537a7623d56e6cc'), 75, 0), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-1060432260, 0)).toInt(), crypto.Hex.decode_61zpoe$('fa368eda4774d95d7498c176af7ee597bd09ab1cc6ba35988192d303cf05b20334e7822863f614e775276eb9c7af8abd29ecd31d6ca1a4ec87ec695f921e988521aefc7c16dde9ba0478a9e6fc02ee2e3d8adf61640531dd49e197963b3f45c256841df9c86bda39f5fee5b3a393c589bc8a5cfb12720b6ccbd30de1a8b2d0984718d65f5723dcf06a160177683b5c0f'), 93, 93), new CryptedElf$Keys$TagInfo(184549376, crypto.Hex.decode_61zpoe$('bf3c60a5412448d7cc6457f60b06901f453ea74e92d151e58a5db7e76e505a462210fb405033272c44da96808e19479977ee8d272e065d7445fa48c1af822583da86db5fcec415cb2fc62425b1c32e6c9ee39b36c41febf71ace511ef43605d7d8394dc313fb1874e14dc8e33cf018b14e8d01a20d77d8e690f320574163f9178fa6a46028dd2713644c9405124c2c0c'), 78, 0), new CryptedElf$Keys$TagInfo(201326592, crypto.Hex.decode_61zpoe$('2f10bf1a71d096d5b252c56f1f53f2d4d9cd25f003af9aafcf57cfe0c49454255e67037084c87b90e44e2d000d7a680b4fa43a9e81da8ff58cac26ec9db4c93a37c071344d83f3b01144dc1031ea32a26bfae5e2034b5945871c3ae4d1d9da310370cd08df2f9cfa251d895a34195c9be566f322324a085fd51655699fbe452205d76d4fa1b8b8c400a613bc3bfcb777'), 79, 0), new CryptedElf$Keys$TagInfo(251658240, crypto.Hex.decode_61zpoe$('bcfe81a3c9d5b9998d0a566c959f3030cc4626795e4eb682ad51391ac42e180ab43161c48a0cc577c6165f322e94d102c48aa30ac60a942a2647036733b12de50721efd2901ec885ba64d1c81dce8dc375a28b940346b80d373647e2dafc74cd663d8e5822e8286d8b541e896df53cf566dbbd0baa86b2c44bbceb2bf41f26fc05e7b8925269eedce542045e217feb8b'), 82, 0), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-2044311343, 0)).toInt(), crypto.Hex.decode_61zpoe$('98d6bf1124b3f9d7274952dd865b21166dc34a5017b2435847daa0e5e7a173bb35db15293afd5c3705a970bbcaef2b279107962ebb9907eac8e65ab873f7cac941e60e259e4ae7065d894452a555674653af849a744102e11e03baeeceb980ed725f31bc7f062158583031e806e7d0d23e93d8e6b47fd1d7c49650503b0ba5fd3dae35468a9c48eb2d762d4231328b5a'), 82, 82), new CryptedElf$Keys$TagInfo(544980783, crypto.Hex.decode_61zpoe$('0008b533cd5f2ff31f88143c952a8a6ed5effe29e3ea941343d46bbd83c02108d379b3fa65e113e6d354a7f552298b10151e4b0abadeea61df6575550153463bc3ec54ae0933426119ffc970ece50a5b26f19d985f7a989d0e75bc5527ba6ec6e888e92dda0066f7cbdc8203f2f569556212438ed3e38f2887216f659c2ed137b49e532f8e9992a4f75839ed2365e939'), 90, 90), new CryptedElf$Keys$TagInfo(150994944, crypto.Hex.decode_61zpoe$('e8531b72c6313efca2a25bf872acf03caba7ee54cbbf59596b83b854131343bccff29e98b236cef0f84cba9831c971e9c85d37a0a02fe50826d40dac01d6e457c7616ec58ab91aeff4f8d9d108a7e95f079df03e8c1a0cfa5cea1ea9c582f4580203802cc3f6e67ebbbb6affd0d01021887a29d3d31200987bc859dc9257dc7fa65d3fdb87b723fcd38e692212e880b6'), 76, 0), new CryptedElf$Keys$TagInfo((new Kotlin.Long(-1150827105, 0)).toInt(), crypto.Hex.decode_61zpoe$('c757a7943398d39f718350f8290b8b32dab9bc2cc6b91829ba504c94d0e7dcf166390c64083d0bc9ba17adf44bf8a06c677c76f75aa5d3a46a5c084a7170b26bfb388bfab831db3ff296718b4aed9bdb845b6251b481144c08f584f67047b430748eaa93bc79c5908dc86e240212052e2e8474c797d985a1dd3a2b7a6d5b83fe4d188f50134f4cebd393190ed2df96ba'), 94, 94)]);
  }
  function CryptedElf$Keys$TagInfo(tag, skey, code, type) {
    if (type === void 0)
      type = 0;
    this.tag = tag;
    this.skey = skey;
    this.code = code;
    this.type = type;
    this.key = new UByteArray(this.skey);
  }
  CryptedElf$Keys$TagInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TagInfo',
    interfaces: []
  };
  CryptedElf$Keys$TagInfo.prototype.component1 = function () {
    return this.tag;
  };
  CryptedElf$Keys$TagInfo.prototype.component2 = function () {
    return this.skey;
  };
  CryptedElf$Keys$TagInfo.prototype.component3 = function () {
    return this.code;
  };
  CryptedElf$Keys$TagInfo.prototype.component4 = function () {
    return this.type;
  };
  CryptedElf$Keys$TagInfo.prototype.copy_3fge6q$ = function (tag, skey, code, type) {
    return new CryptedElf$Keys$TagInfo(tag === void 0 ? this.tag : tag, skey === void 0 ? this.skey : skey, code === void 0 ? this.code : code, type === void 0 ? this.type : type);
  };
  CryptedElf$Keys$TagInfo.prototype.toString = function () {
    return 'TagInfo(tag=' + Kotlin.toString(this.tag) + (', skey=' + Kotlin.toString(this.skey)) + (', code=' + Kotlin.toString(this.code)) + (', type=' + Kotlin.toString(this.type)) + ')';
  };
  CryptedElf$Keys$TagInfo.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.tag) | 0;
    result = result * 31 + Kotlin.hashCode(this.skey) | 0;
    result = result * 31 + Kotlin.hashCode(this.code) | 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    return result;
  };
  CryptedElf$Keys$TagInfo.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.tag, other.tag) && Kotlin.equals(this.skey, other.skey) && Kotlin.equals(this.code, other.code) && Kotlin.equals(this.type, other.type)))));
  };
  CryptedElf$Keys.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Keys',
    interfaces: []
  };
  var CryptedElf$Keys_instance = null;
  function CryptedElf$Keys_getInstance() {
    if (CryptedElf$Keys_instance === null) {
      new CryptedElf$Keys();
    }
    return CryptedElf$Keys_instance;
  }
  CryptedElf.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'CryptedElf',
    interfaces: []
  };
  var CryptedElf_instance = null;
  function CryptedElf_getInstance() {
    if (CryptedElf_instance === null) {
      new CryptedElf();
    }
    return CryptedElf_instance;
  }
  function Elf(stream) {
    Elf$Companion_getInstance();
    this.stream = stream;
    this.header_zcfiun$_0 = this.header_zcfiun$_0;
    this.programHeadersStream_n6lbb0$_0 = this.programHeadersStream_n6lbb0$_0;
    this.sectionHeadersStream_6tlwwz$_0 = this.sectionHeadersStream_6tlwwz$_0;
    this.programHeaders_4fs524$_0 = this.programHeaders_4fs524$_0;
    this.sectionHeaders_v8gcub$_0 = this.sectionHeaders_v8gcub$_0;
    this.sectionHeaderStringTable_p15lw3$_0 = this.sectionHeaderStringTable_p15lw3$_0;
    this.stringTableStream_bu0j0n$_0 = this.stringTableStream_bu0j0n$_0;
    this.sectionHeadersByName_tlgokb$_0 = this.sectionHeadersByName_tlgokb$_0;
  }
  function Elf$Companion() {
    Elf$Companion_instance = this;
  }
  Elf$Companion.prototype.read_39qel5$ = function (stream) {
    var $receiver = new Elf(stream);
    $receiver.read_0();
    return $receiver;
  };
  Elf$Companion.prototype.fromStream_39qel5$ = function (stream) {
    return this.read_39qel5$(stream);
  };
  Elf$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Elf$Companion_instance = null;
  function Elf$Companion_getInstance() {
    if (Elf$Companion_instance === null) {
      new Elf$Companion();
    }
    return Elf$Companion_instance;
  }
  Object.defineProperty(Elf.prototype, 'header', {
    get: function () {
      if (this.header_zcfiun$_0 == null)
        return throwUPAE('header');
      return this.header_zcfiun$_0;
    },
    set: function (header) {
      this.header_zcfiun$_0 = header;
    }
  });
  Object.defineProperty(Elf.prototype, 'programHeadersStream', {
    get: function () {
      if (this.programHeadersStream_n6lbb0$_0 == null)
        return throwUPAE('programHeadersStream');
      return this.programHeadersStream_n6lbb0$_0;
    },
    set: function (programHeadersStream) {
      this.programHeadersStream_n6lbb0$_0 = programHeadersStream;
    }
  });
  Object.defineProperty(Elf.prototype, 'sectionHeadersStream', {
    get: function () {
      if (this.sectionHeadersStream_6tlwwz$_0 == null)
        return throwUPAE('sectionHeadersStream');
      return this.sectionHeadersStream_6tlwwz$_0;
    },
    set: function (sectionHeadersStream) {
      this.sectionHeadersStream_6tlwwz$_0 = sectionHeadersStream;
    }
  });
  Object.defineProperty(Elf.prototype, 'programHeaders', {
    get: function () {
      if (this.programHeaders_4fs524$_0 == null)
        return throwUPAE('programHeaders');
      return this.programHeaders_4fs524$_0;
    },
    set: function (programHeaders) {
      this.programHeaders_4fs524$_0 = programHeaders;
    }
  });
  Object.defineProperty(Elf.prototype, 'sectionHeaders', {
    get: function () {
      if (this.sectionHeaders_v8gcub$_0 == null)
        return throwUPAE('sectionHeaders');
      return this.sectionHeaders_v8gcub$_0;
    },
    set: function (sectionHeaders) {
      this.sectionHeaders_v8gcub$_0 = sectionHeaders;
    }
  });
  Object.defineProperty(Elf.prototype, 'sectionHeaderStringTable', {
    get: function () {
      if (this.sectionHeaderStringTable_p15lw3$_0 == null)
        return throwUPAE('sectionHeaderStringTable');
      return this.sectionHeaderStringTable_p15lw3$_0;
    },
    set: function (sectionHeaderStringTable) {
      this.sectionHeaderStringTable_p15lw3$_0 = sectionHeaderStringTable;
    }
  });
  Object.defineProperty(Elf.prototype, 'stringTableStream', {
    get: function () {
      if (this.stringTableStream_bu0j0n$_0 == null)
        return throwUPAE('stringTableStream');
      return this.stringTableStream_bu0j0n$_0;
    },
    set: function (stringTableStream) {
      this.stringTableStream_bu0j0n$_0 = stringTableStream;
    }
  });
  Object.defineProperty(Elf.prototype, 'sectionHeadersByName', {
    get: function () {
      if (this.sectionHeadersByName_tlgokb$_0 == null)
        return throwUPAE('sectionHeadersByName');
      return this.sectionHeadersByName_tlgokb$_0;
    },
    set: function (sectionHeadersByName) {
      this.sectionHeadersByName_tlgokb$_0 = sectionHeadersByName;
    }
  });
  Elf.prototype.getSectionHeader_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.sectionHeadersByName.get_11rb$(name)) != null ? tmp$ : invalidOp("Can't find section header '" + name + "'");
  };
  Elf.prototype.read_0 = function () {
    var tmp$, tmp$_0;
    this.header = Elf$Header$Companion_getInstance().invoke_39qel5$(this.stream);
    this.programHeadersStream = sliceWithSize(this.stream, Kotlin.Long.fromInt(this.header.programHeaderOffset), Kotlin.Long.fromInt(Kotlin.imul(this.header.programHeaderCount, this.header.programHeaderEntrySize)));
    this.sectionHeadersStream = sliceWithSize(this.stream, Kotlin.Long.fromInt(this.header.sectionHeaderOffset), Kotlin.Long.fromInt(Kotlin.imul(this.header.sectionHeaderCount, this.header.sectionHeaderEntrySize)));
    var $receiver = until(0, this.header.programHeaderCount);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$_1;
    tmp$_1 = $receiver.iterator();
    while (tmp$_1.hasNext()) {
      var item = tmp$_1.next();
      destination.add_11rb$(ElfProgramHeader$Companion_getInstance().invoke_39qel5$(this.programHeadersStream));
    }
    this.programHeaders = destination;
    var $receiver_0 = until(0, this.header.sectionHeaderCount);
    var destination_0 = ArrayList_init(collectionSizeOrDefault($receiver_0, 10));
    var tmp$_2;
    tmp$_2 = $receiver_0.iterator();
    while (tmp$_2.hasNext()) {
      var item_0 = tmp$_2.next();
      destination_0.add_11rb$(ElfSectionHeader$Companion_getInstance().invoke_39qel5$(this.sectionHeadersStream));
    }
    this.sectionHeaders = destination_0;
    this.sectionHeaderStringTable = this.sectionHeaders.get_za3lpa$(this.header.sectionHeaderStringTable);
    this.stringTableStream = this.getSectionHeaderFileStream_0(this.sectionHeaderStringTable);
    this.sectionHeadersByName = LinkedHashMap_init();
    tmp$ = this.sectionHeaders.iterator();
    while (tmp$.hasNext()) {
      var sectionHeader = tmp$.next();
      var name = this.getStringFromStringTable_0(sectionHeader.nameOffset);
      sectionHeader.name = name;
      if (!((tmp$_0 = sectionHeader.type) != null ? tmp$_0.equals(ElfSectionHeaderType$Companion_getInstance().Null) : null)) {
        sectionHeader.stream = this.getSectionHeaderFileStream_0(sectionHeader);
      }
      this.sectionHeadersByName.put_xwzc9p$(name, sectionHeader);
    }
  };
  Elf.prototype.getSectionHeaderFileStream_0 = function (sectionHeader) {
    var tmp$, tmp$_0;
    tmp$ = sectionHeader.type;
    if (equals(tmp$, ElfSectionHeaderType$Companion_getInstance().NoBits) || equals(tmp$, ElfSectionHeaderType$Companion_getInstance().Null))
      tmp$_0 = sliceWithSize_0(this.stream, 0, 0);
    else
      tmp$_0 = sliceWithSize(this.stream, Kotlin.Long.fromInt(sectionHeader.offset), Kotlin.Long.fromInt(sectionHeader.size));
    return tmp$_0;
  };
  Elf.prototype.getStringFromStringTable_0 = function (index) {
    this.stringTableStream.position = Kotlin.Long.fromInt(index);
    return readStringz_0(this.stringTableStream);
  };
  function Elf$Header(magic, clazz, data, idVersion, padding, type, machine, version, entryPoint, programHeaderOffset, sectionHeaderOffset, flags, elfHeaderSize, programHeaderEntrySize, programHeaderCount, sectionHeaderEntrySize, sectionHeaderCount, sectionHeaderStringTable) {
    Elf$Header$Companion_getInstance();
    this.magic = magic;
    this.clazz = clazz;
    this.data = data;
    this.idVersion = idVersion;
    this.padding = padding;
    this.type = type;
    this.machine = machine;
    this.version = version;
    this.entryPoint = entryPoint;
    this.programHeaderOffset = programHeaderOffset;
    this.sectionHeaderOffset = sectionHeaderOffset;
    this.flags = flags;
    this.elfHeaderSize = elfHeaderSize;
    this.programHeaderEntrySize = programHeaderEntrySize;
    this.programHeaderCount = programHeaderCount;
    this.sectionHeaderEntrySize = sectionHeaderEntrySize;
    this.sectionHeaderCount = sectionHeaderCount;
    this.sectionHeaderStringTable = sectionHeaderStringTable;
    if (!this.hasValidMagic)
      invalidOp('Not an ELF file');
    if (!this.hasValidMachine)
      invalidOp('Not a PSP ELF file');
    if (!this.hasValidType)
      invalidOp('Not a executable or a Prx but has type ' + this.type);
  }
  function Elf$Header$Companion() {
    Elf$Header$Companion_instance = this;
  }
  Elf$Header$Companion.prototype.invoke_39qel5$ = function (s) {
    var $receiver = readStringz_1(s, 4);
    if (!equals($receiver, '\x7FELF'))
      invalidOp('Not an ELF file');
    return new Elf$Header($receiver, readU8_0(s), readU8_0(s), readU8_0(s), readUByteArray(s, 9), readU16_le(s), readU16_le(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS16_le_0(s), readS16_le_0(s), readU16_le(s), readU16_le(s), readU16_le(s), readU16_le(s));
  };
  Elf$Header$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Elf$Header$Companion_instance = null;
  function Elf$Header$Companion_getInstance() {
    if (Elf$Header$Companion_instance === null) {
      new Elf$Header$Companion();
    }
    return Elf$Header$Companion_instance;
  }
  Object.defineProperty(Elf$Header.prototype, 'hasValidMagic', {
    get: function () {
      return equals(this.magic, '\x7FELF');
    }
  });
  Object.defineProperty(Elf$Header.prototype, 'hasValidMachine', {
    get: function () {
      return this.machine === ElfMachine$ALLEGREX_getInstance().id;
    }
  });
  Object.defineProperty(Elf$Header.prototype, 'hasValidType', {
    get: function () {
      return listOf([ElfType$Executable_getInstance().id, ElfType$Prx_getInstance().id]).contains_11rb$(this.type);
    }
  });
  Elf$Header.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Header',
    interfaces: []
  };
  Elf$Header.prototype.component1 = function () {
    return this.magic;
  };
  Elf$Header.prototype.component2 = function () {
    return this.clazz;
  };
  Elf$Header.prototype.component3 = function () {
    return this.data;
  };
  Elf$Header.prototype.component4 = function () {
    return this.idVersion;
  };
  Elf$Header.prototype.component5 = function () {
    return this.padding;
  };
  Elf$Header.prototype.component6 = function () {
    return this.type;
  };
  Elf$Header.prototype.component7 = function () {
    return this.machine;
  };
  Elf$Header.prototype.component8 = function () {
    return this.version;
  };
  Elf$Header.prototype.component9 = function () {
    return this.entryPoint;
  };
  Elf$Header.prototype.component10 = function () {
    return this.programHeaderOffset;
  };
  Elf$Header.prototype.component11 = function () {
    return this.sectionHeaderOffset;
  };
  Elf$Header.prototype.component12 = function () {
    return this.flags;
  };
  Elf$Header.prototype.component13 = function () {
    return this.elfHeaderSize;
  };
  Elf$Header.prototype.component14 = function () {
    return this.programHeaderEntrySize;
  };
  Elf$Header.prototype.component15 = function () {
    return this.programHeaderCount;
  };
  Elf$Header.prototype.component16 = function () {
    return this.sectionHeaderEntrySize;
  };
  Elf$Header.prototype.component17 = function () {
    return this.sectionHeaderCount;
  };
  Elf$Header.prototype.component18 = function () {
    return this.sectionHeaderStringTable;
  };
  Elf$Header.prototype.copy_ze27fc$ = function (magic, clazz, data, idVersion, padding, type, machine, version, entryPoint, programHeaderOffset, sectionHeaderOffset, flags, elfHeaderSize, programHeaderEntrySize, programHeaderCount, sectionHeaderEntrySize, sectionHeaderCount, sectionHeaderStringTable) {
    return new Elf$Header(magic === void 0 ? this.magic : magic, clazz === void 0 ? this.clazz : clazz, data === void 0 ? this.data : data, idVersion === void 0 ? this.idVersion : idVersion, padding === void 0 ? this.padding : padding, type === void 0 ? this.type : type, machine === void 0 ? this.machine : machine, version === void 0 ? this.version : version, entryPoint === void 0 ? this.entryPoint : entryPoint, programHeaderOffset === void 0 ? this.programHeaderOffset : programHeaderOffset, sectionHeaderOffset === void 0 ? this.sectionHeaderOffset : sectionHeaderOffset, flags === void 0 ? this.flags : flags, elfHeaderSize === void 0 ? this.elfHeaderSize : elfHeaderSize, programHeaderEntrySize === void 0 ? this.programHeaderEntrySize : programHeaderEntrySize, programHeaderCount === void 0 ? this.programHeaderCount : programHeaderCount, sectionHeaderEntrySize === void 0 ? this.sectionHeaderEntrySize : sectionHeaderEntrySize, sectionHeaderCount === void 0 ? this.sectionHeaderCount : sectionHeaderCount, sectionHeaderStringTable === void 0 ? this.sectionHeaderStringTable : sectionHeaderStringTable);
  };
  Elf$Header.prototype.toString = function () {
    return 'Header(magic=' + Kotlin.toString(this.magic) + (', clazz=' + Kotlin.toString(this.clazz)) + (', data=' + Kotlin.toString(this.data)) + (', idVersion=' + Kotlin.toString(this.idVersion)) + (', padding=' + Kotlin.toString(this.padding)) + (', type=' + Kotlin.toString(this.type)) + (', machine=' + Kotlin.toString(this.machine)) + (', version=' + Kotlin.toString(this.version)) + (', entryPoint=' + Kotlin.toString(this.entryPoint)) + (', programHeaderOffset=' + Kotlin.toString(this.programHeaderOffset)) + (', sectionHeaderOffset=' + Kotlin.toString(this.sectionHeaderOffset)) + (', flags=' + Kotlin.toString(this.flags)) + (', elfHeaderSize=' + Kotlin.toString(this.elfHeaderSize)) + (', programHeaderEntrySize=' + Kotlin.toString(this.programHeaderEntrySize)) + (', programHeaderCount=' + Kotlin.toString(this.programHeaderCount)) + (', sectionHeaderEntrySize=' + Kotlin.toString(this.sectionHeaderEntrySize)) + (', sectionHeaderCount=' + Kotlin.toString(this.sectionHeaderCount)) + (', sectionHeaderStringTable=' + Kotlin.toString(this.sectionHeaderStringTable)) + ')';
  };
  Elf$Header.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.magic) | 0;
    result = result * 31 + Kotlin.hashCode(this.clazz) | 0;
    result = result * 31 + Kotlin.hashCode(this.data) | 0;
    result = result * 31 + Kotlin.hashCode(this.idVersion) | 0;
    result = result * 31 + Kotlin.hashCode(this.padding) | 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    result = result * 31 + Kotlin.hashCode(this.machine) | 0;
    result = result * 31 + Kotlin.hashCode(this.version) | 0;
    result = result * 31 + Kotlin.hashCode(this.entryPoint) | 0;
    result = result * 31 + Kotlin.hashCode(this.programHeaderOffset) | 0;
    result = result * 31 + Kotlin.hashCode(this.sectionHeaderOffset) | 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    result = result * 31 + Kotlin.hashCode(this.elfHeaderSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.programHeaderEntrySize) | 0;
    result = result * 31 + Kotlin.hashCode(this.programHeaderCount) | 0;
    result = result * 31 + Kotlin.hashCode(this.sectionHeaderEntrySize) | 0;
    result = result * 31 + Kotlin.hashCode(this.sectionHeaderCount) | 0;
    result = result * 31 + Kotlin.hashCode(this.sectionHeaderStringTable) | 0;
    return result;
  };
  Elf$Header.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.magic, other.magic) && Kotlin.equals(this.clazz, other.clazz) && Kotlin.equals(this.data, other.data) && Kotlin.equals(this.idVersion, other.idVersion) && Kotlin.equals(this.padding, other.padding) && Kotlin.equals(this.type, other.type) && Kotlin.equals(this.machine, other.machine) && Kotlin.equals(this.version, other.version) && Kotlin.equals(this.entryPoint, other.entryPoint) && Kotlin.equals(this.programHeaderOffset, other.programHeaderOffset) && Kotlin.equals(this.sectionHeaderOffset, other.sectionHeaderOffset) && Kotlin.equals(this.flags, other.flags) && Kotlin.equals(this.elfHeaderSize, other.elfHeaderSize) && Kotlin.equals(this.programHeaderEntrySize, other.programHeaderEntrySize) && Kotlin.equals(this.programHeaderCount, other.programHeaderCount) && Kotlin.equals(this.sectionHeaderEntrySize, other.sectionHeaderEntrySize) && Kotlin.equals(this.sectionHeaderCount, other.sectionHeaderCount) && Kotlin.equals(this.sectionHeaderStringTable, other.sectionHeaderStringTable)))));
  };
  Object.defineProperty(Elf.prototype, 'isPrx', {
    get: function () {
      return (this.header.type & ElfType$Prx_getInstance().id) !== 0;
    }
  });
  Object.defineProperty(Elf.prototype, 'needsRelocation', {
    get: function () {
      return this.isPrx || this.header.entryPoint < Memory$Companion_getInstance().MAIN_OFFSET;
    }
  });
  Elf.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Elf',
    interfaces: []
  };
  function ElfProgramHeaderType(id) {
    ElfProgramHeaderType$Companion_getInstance();
    this.id_pw4186$_0 = id;
  }
  Object.defineProperty(ElfProgramHeaderType.prototype, 'id', {
    get: function () {
      return this.id_pw4186$_0;
    }
  });
  function ElfProgramHeaderType$Companion() {
    ElfProgramHeaderType$Companion_instance = this;
    this.NoLoad = new ElfProgramHeaderType(0);
    this.Load = new ElfProgramHeaderType(1);
    this.Reloc1 = new ElfProgramHeaderType(1879048352);
    this.Reloc2 = new ElfProgramHeaderType(1879048353);
  }
  ElfProgramHeaderType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfProgramHeaderType$Companion_instance = null;
  function ElfProgramHeaderType$Companion_getInstance() {
    if (ElfProgramHeaderType$Companion_instance === null) {
      new ElfProgramHeaderType$Companion();
    }
    return ElfProgramHeaderType$Companion_instance;
  }
  ElfProgramHeaderType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfProgramHeaderType',
    interfaces: [Flags]
  };
  ElfProgramHeaderType.prototype.component1 = function () {
    return this.id;
  };
  ElfProgramHeaderType.prototype.copy_za3lpa$ = function (id) {
    return new ElfProgramHeaderType(id === void 0 ? this.id : id);
  };
  ElfProgramHeaderType.prototype.toString = function () {
    return 'ElfProgramHeaderType(id=' + Kotlin.toString(this.id) + ')';
  };
  ElfProgramHeaderType.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  ElfProgramHeaderType.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function ElfSectionHeaderType(id) {
    ElfSectionHeaderType$Companion_getInstance();
    this.id_f4ssiz$_0 = id;
  }
  Object.defineProperty(ElfSectionHeaderType.prototype, 'id', {
    get: function () {
      return this.id_f4ssiz$_0;
    }
  });
  function ElfSectionHeaderType$Companion() {
    ElfSectionHeaderType$Companion_instance = this;
    this.Null = new ElfSectionHeaderType(0);
    this.ProgramBits = new ElfSectionHeaderType(1);
    this.SYMTAB = new ElfSectionHeaderType(2);
    this.STRTAB = new ElfSectionHeaderType(3);
    this.RELA = new ElfSectionHeaderType(4);
    this.HASH = new ElfSectionHeaderType(5);
    this.DYNAMIC = new ElfSectionHeaderType(6);
    this.NOTE = new ElfSectionHeaderType(7);
    this.NoBits = new ElfSectionHeaderType(8);
    this.Relocation = new ElfSectionHeaderType(9);
    this.SHLIB = new ElfSectionHeaderType(10);
    this.DYNSYM = new ElfSectionHeaderType(11);
    this.LOPROC = new ElfSectionHeaderType(1879048192);
    this.HIPROC = new ElfSectionHeaderType(2147483647);
    this.LOUSER = new ElfSectionHeaderType((new Kotlin.Long(-2147483648, 0)).toInt());
    this.HIUSER = new ElfSectionHeaderType((new Kotlin.Long(-1, 0)).toInt());
    this.PrxRelocation = new ElfSectionHeaderType(this.LOPROC.id | 160);
    this.PrxRelocation_FW5 = new ElfSectionHeaderType(this.LOPROC.id | 161);
  }
  ElfSectionHeaderType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfSectionHeaderType$Companion_instance = null;
  function ElfSectionHeaderType$Companion_getInstance() {
    if (ElfSectionHeaderType$Companion_instance === null) {
      new ElfSectionHeaderType$Companion();
    }
    return ElfSectionHeaderType$Companion_instance;
  }
  ElfSectionHeaderType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfSectionHeaderType',
    interfaces: [Flags]
  };
  ElfSectionHeaderType.prototype.component1 = function () {
    return this.id;
  };
  ElfSectionHeaderType.prototype.copy_za3lpa$ = function (id) {
    return new ElfSectionHeaderType(id === void 0 ? this.id : id);
  };
  ElfSectionHeaderType.prototype.toString = function () {
    return 'ElfSectionHeaderType(id=' + Kotlin.toString(this.id) + ')';
  };
  ElfSectionHeaderType.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  ElfSectionHeaderType.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function ElfSectionHeaderFlags(id) {
    ElfSectionHeaderFlags$Companion_getInstance();
    this.id_altqm0$_0 = id;
  }
  Object.defineProperty(ElfSectionHeaderFlags.prototype, 'id', {
    get: function () {
      return this.id_altqm0$_0;
    }
  });
  function ElfSectionHeaderFlags$Companion() {
    ElfSectionHeaderFlags$Companion_instance = this;
    this.None = new ElfSectionHeaderFlags(0);
    this.Write = new ElfSectionHeaderFlags(1);
    this.Allocate = new ElfSectionHeaderFlags(2);
    this.Execute = new ElfSectionHeaderFlags(4);
  }
  ElfSectionHeaderFlags$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfSectionHeaderFlags$Companion_instance = null;
  function ElfSectionHeaderFlags$Companion_getInstance() {
    if (ElfSectionHeaderFlags$Companion_instance === null) {
      new ElfSectionHeaderFlags$Companion();
    }
    return ElfSectionHeaderFlags$Companion_instance;
  }
  ElfSectionHeaderFlags.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfSectionHeaderFlags',
    interfaces: [Flags]
  };
  ElfSectionHeaderFlags.prototype.component1 = function () {
    return this.id;
  };
  ElfSectionHeaderFlags.prototype.copy_za3lpa$ = function (id) {
    return new ElfSectionHeaderFlags(id === void 0 ? this.id : id);
  };
  ElfSectionHeaderFlags.prototype.toString = function () {
    return 'ElfSectionHeaderFlags(id=' + Kotlin.toString(this.id) + ')';
  };
  ElfSectionHeaderFlags.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  ElfSectionHeaderFlags.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function ElfProgramHeaderFlags(id) {
    ElfProgramHeaderFlags$Companion_getInstance();
    this.id = id;
  }
  function ElfProgramHeaderFlags$Companion() {
    ElfProgramHeaderFlags$Companion_instance = this;
    this.Executable = 1;
    this.Writable = 2;
    this.Readable = 4;
  }
  ElfProgramHeaderFlags$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfProgramHeaderFlags$Companion_instance = null;
  function ElfProgramHeaderFlags$Companion_getInstance() {
    if (ElfProgramHeaderFlags$Companion_instance === null) {
      new ElfProgramHeaderFlags$Companion();
    }
    return ElfProgramHeaderFlags$Companion_instance;
  }
  ElfProgramHeaderFlags.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfProgramHeaderFlags',
    interfaces: []
  };
  ElfProgramHeaderFlags.prototype.component1 = function () {
    return this.id;
  };
  ElfProgramHeaderFlags.prototype.copy_za3lpa$ = function (id) {
    return new ElfProgramHeaderFlags(id === void 0 ? this.id : id);
  };
  ElfProgramHeaderFlags.prototype.toString = function () {
    return 'ElfProgramHeaderFlags(id=' + Kotlin.toString(this.id) + ')';
  };
  ElfProgramHeaderFlags.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  ElfProgramHeaderFlags.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function ElfType(name, ordinal, id) {
    Enum.call(this);
    this.id_ywd483$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ElfType_initFields() {
    ElfType_initFields = function () {
    };
    ElfType$Executable_instance = new ElfType('Executable', 0, 2);
    ElfType$Prx_instance = new ElfType('Prx', 1, 65440);
    ElfType$Companion_getInstance();
  }
  Object.defineProperty(ElfType.prototype, 'id', {
    get: function () {
      return this.id_ywd483$_0;
    }
  });
  var ElfType$Executable_instance;
  function ElfType$Executable_getInstance() {
    ElfType_initFields();
    return ElfType$Executable_instance;
  }
  var ElfType$Prx_instance;
  function ElfType$Prx_getInstance() {
    ElfType_initFields();
    return ElfType$Prx_instance;
  }
  function ElfType$Companion() {
    ElfType$Companion_instance = this;
    var $receiver = ElfType$values();
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.id, item));
    }
    this.BY_ID = toMap(destination);
  }
  ElfType$Companion.prototype.invoke_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this.BY_ID.get_11rb$(index)) != null ? tmp$ : invalidOp("Can't find index " + index + ' in class');
  };
  ElfType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfType$Companion_instance = null;
  function ElfType$Companion_getInstance() {
    ElfType_initFields();
    if (ElfType$Companion_instance === null) {
      new ElfType$Companion();
    }
    return ElfType$Companion_instance;
  }
  ElfType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfType',
    interfaces: [NumericEnum, Enum]
  };
  function ElfType$values() {
    return [ElfType$Executable_getInstance(), ElfType$Prx_getInstance()];
  }
  ElfType.values = ElfType$values;
  function ElfType$valueOf(name) {
    switch (name) {
      case 'Executable':
        return ElfType$Executable_getInstance();
      case 'Prx':
        return ElfType$Prx_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.format.elf.ElfType.' + name);
    }
  }
  ElfType.valueOf_61zpoe$ = ElfType$valueOf;
  function ElfMachine(name, ordinal, id) {
    Enum.call(this);
    this.id_1aklmi$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ElfMachine_initFields() {
    ElfMachine_initFields = function () {
    };
    ElfMachine$ALLEGREX_instance = new ElfMachine('ALLEGREX', 0, 8);
    ElfMachine$Companion_getInstance();
  }
  Object.defineProperty(ElfMachine.prototype, 'id', {
    get: function () {
      return this.id_1aklmi$_0;
    }
  });
  var ElfMachine$ALLEGREX_instance;
  function ElfMachine$ALLEGREX_getInstance() {
    ElfMachine_initFields();
    return ElfMachine$ALLEGREX_instance;
  }
  function ElfMachine$Companion() {
    ElfMachine$Companion_instance = this;
    var $receiver = ElfMachine$values();
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.id, item));
    }
    this.BY_ID = toMap(destination);
  }
  ElfMachine$Companion.prototype.invoke_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this.BY_ID.get_11rb$(index)) != null ? tmp$ : invalidOp("Can't find index " + index + ' in class');
  };
  ElfMachine$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfMachine$Companion_instance = null;
  function ElfMachine$Companion_getInstance() {
    ElfMachine_initFields();
    if (ElfMachine$Companion_instance === null) {
      new ElfMachine$Companion();
    }
    return ElfMachine$Companion_instance;
  }
  ElfMachine.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfMachine',
    interfaces: [NumericEnum, Enum]
  };
  function ElfMachine$values() {
    return [ElfMachine$ALLEGREX_getInstance()];
  }
  ElfMachine.values = ElfMachine$values;
  function ElfMachine$valueOf(name) {
    switch (name) {
      case 'ALLEGREX':
        return ElfMachine$ALLEGREX_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.format.elf.ElfMachine.' + name);
    }
  }
  ElfMachine.valueOf_61zpoe$ = ElfMachine$valueOf;
  function ElfPspModuleFlags(name, ordinal, id) {
    Enum.call(this);
    this.id_zh8gh$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ElfPspModuleFlags_initFields() {
    ElfPspModuleFlags_initFields = function () {
    };
    ElfPspModuleFlags$User_instance = new ElfPspModuleFlags('User', 0, 0);
    ElfPspModuleFlags$Kernel_instance = new ElfPspModuleFlags('Kernel', 1, 4096);
    ElfPspModuleFlags$Companion_getInstance();
  }
  Object.defineProperty(ElfPspModuleFlags.prototype, 'id', {
    get: function () {
      return this.id_zh8gh$_0;
    }
  });
  var ElfPspModuleFlags$User_instance;
  function ElfPspModuleFlags$User_getInstance() {
    ElfPspModuleFlags_initFields();
    return ElfPspModuleFlags$User_instance;
  }
  var ElfPspModuleFlags$Kernel_instance;
  function ElfPspModuleFlags$Kernel_getInstance() {
    ElfPspModuleFlags_initFields();
    return ElfPspModuleFlags$Kernel_instance;
  }
  function ElfPspModuleFlags$Companion() {
    ElfPspModuleFlags$Companion_instance = this;
    var $receiver = ElfPspModuleFlags$values();
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.id, item));
    }
    this.BY_ID = toMap(destination);
  }
  ElfPspModuleFlags$Companion.prototype.invoke_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this.BY_ID.get_11rb$(index)) != null ? tmp$ : invalidOp("Can't find index " + index + ' in class');
  };
  ElfPspModuleFlags$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfPspModuleFlags$Companion_instance = null;
  function ElfPspModuleFlags$Companion_getInstance() {
    ElfPspModuleFlags_initFields();
    if (ElfPspModuleFlags$Companion_instance === null) {
      new ElfPspModuleFlags$Companion();
    }
    return ElfPspModuleFlags$Companion_instance;
  }
  ElfPspModuleFlags.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfPspModuleFlags',
    interfaces: [NumericEnum, Enum]
  };
  function ElfPspModuleFlags$values() {
    return [ElfPspModuleFlags$User_getInstance(), ElfPspModuleFlags$Kernel_getInstance()];
  }
  ElfPspModuleFlags.values = ElfPspModuleFlags$values;
  function ElfPspModuleFlags$valueOf(name) {
    switch (name) {
      case 'User':
        return ElfPspModuleFlags$User_getInstance();
      case 'Kernel':
        return ElfPspModuleFlags$Kernel_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.format.elf.ElfPspModuleFlags.' + name);
    }
  }
  ElfPspModuleFlags.valueOf_61zpoe$ = ElfPspModuleFlags$valueOf;
  function ElfPspLibFlags(name, ordinal, id) {
    Enum.call(this);
    this.id_t9xycu$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ElfPspLibFlags_initFields() {
    ElfPspLibFlags_initFields = function () {
    };
    ElfPspLibFlags$DirectJump_instance = new ElfPspLibFlags('DirectJump', 0, 1);
    ElfPspLibFlags$Syscall_instance = new ElfPspLibFlags('Syscall', 1, 16384);
    ElfPspLibFlags$SysLib_instance = new ElfPspLibFlags('SysLib', 2, 32768);
    ElfPspLibFlags$Companion_getInstance();
  }
  Object.defineProperty(ElfPspLibFlags.prototype, 'id', {
    get: function () {
      return this.id_t9xycu$_0;
    }
  });
  var ElfPspLibFlags$DirectJump_instance;
  function ElfPspLibFlags$DirectJump_getInstance() {
    ElfPspLibFlags_initFields();
    return ElfPspLibFlags$DirectJump_instance;
  }
  var ElfPspLibFlags$Syscall_instance;
  function ElfPspLibFlags$Syscall_getInstance() {
    ElfPspLibFlags_initFields();
    return ElfPspLibFlags$Syscall_instance;
  }
  var ElfPspLibFlags$SysLib_instance;
  function ElfPspLibFlags$SysLib_getInstance() {
    ElfPspLibFlags_initFields();
    return ElfPspLibFlags$SysLib_instance;
  }
  function ElfPspLibFlags$Companion() {
    ElfPspLibFlags$Companion_instance = this;
    var $receiver = ElfPspLibFlags$values();
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.id, item));
    }
    this.BY_ID = toMap(destination);
  }
  ElfPspLibFlags$Companion.prototype.invoke_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this.BY_ID.get_11rb$(index)) != null ? tmp$ : invalidOp("Can't find index " + index + ' in class');
  };
  ElfPspLibFlags$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfPspLibFlags$Companion_instance = null;
  function ElfPspLibFlags$Companion_getInstance() {
    ElfPspLibFlags_initFields();
    if (ElfPspLibFlags$Companion_instance === null) {
      new ElfPspLibFlags$Companion();
    }
    return ElfPspLibFlags$Companion_instance;
  }
  ElfPspLibFlags.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfPspLibFlags',
    interfaces: [NumericEnum, Enum]
  };
  function ElfPspLibFlags$values() {
    return [ElfPspLibFlags$DirectJump_getInstance(), ElfPspLibFlags$Syscall_getInstance(), ElfPspLibFlags$SysLib_getInstance()];
  }
  ElfPspLibFlags.values = ElfPspLibFlags$values;
  function ElfPspLibFlags$valueOf(name) {
    switch (name) {
      case 'DirectJump':
        return ElfPspLibFlags$DirectJump_getInstance();
      case 'Syscall':
        return ElfPspLibFlags$Syscall_getInstance();
      case 'SysLib':
        return ElfPspLibFlags$SysLib_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.format.elf.ElfPspLibFlags.' + name);
    }
  }
  ElfPspLibFlags.valueOf_61zpoe$ = ElfPspLibFlags$valueOf;
  function ElfPspModuleNids(name, ordinal, id) {
    Enum.call(this);
    this.id_u1uq9u$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ElfPspModuleNids_initFields() {
    ElfPspModuleNids_initFields = function () {
    };
    ElfPspModuleNids$MODULE_INFO_instance = new ElfPspModuleNids('MODULE_INFO', 0, (new Kotlin.Long(-266505305, 0)).toInt());
    ElfPspModuleNids$MODULE_BOOTSTART_instance = new ElfPspModuleNids('MODULE_BOOTSTART', 1, (new Kotlin.Long(-747353120, 0)).toInt());
    ElfPspModuleNids$MODULE_REBOOT_BEFORE_instance = new ElfPspModuleNids('MODULE_REBOOT_BEFORE', 2, 788942758);
    ElfPspModuleNids$MODULE_START_instance = new ElfPspModuleNids('MODULE_START', 3, (new Kotlin.Long(-701322021, 0)).toInt());
    ElfPspModuleNids$MODULE_START_THREAD_PARAMETER_instance = new ElfPspModuleNids('MODULE_START_THREAD_PARAMETER', 4, 259794796);
    ElfPspModuleNids$MODULE_STOP_instance = new ElfPspModuleNids('MODULE_STOP', 5, (new Kotlin.Long(-823633604, 0)).toInt());
    ElfPspModuleNids$MODULE_STOP_THREAD_PARAMETER_instance = new ElfPspModuleNids('MODULE_STOP_THREAD_PARAMETER', 6, (new Kotlin.Long(-821246313, 0)).toInt());
    ElfPspModuleNids$Companion_getInstance();
  }
  Object.defineProperty(ElfPspModuleNids.prototype, 'id', {
    get: function () {
      return this.id_u1uq9u$_0;
    }
  });
  var ElfPspModuleNids$MODULE_INFO_instance;
  function ElfPspModuleNids$MODULE_INFO_getInstance() {
    ElfPspModuleNids_initFields();
    return ElfPspModuleNids$MODULE_INFO_instance;
  }
  var ElfPspModuleNids$MODULE_BOOTSTART_instance;
  function ElfPspModuleNids$MODULE_BOOTSTART_getInstance() {
    ElfPspModuleNids_initFields();
    return ElfPspModuleNids$MODULE_BOOTSTART_instance;
  }
  var ElfPspModuleNids$MODULE_REBOOT_BEFORE_instance;
  function ElfPspModuleNids$MODULE_REBOOT_BEFORE_getInstance() {
    ElfPspModuleNids_initFields();
    return ElfPspModuleNids$MODULE_REBOOT_BEFORE_instance;
  }
  var ElfPspModuleNids$MODULE_START_instance;
  function ElfPspModuleNids$MODULE_START_getInstance() {
    ElfPspModuleNids_initFields();
    return ElfPspModuleNids$MODULE_START_instance;
  }
  var ElfPspModuleNids$MODULE_START_THREAD_PARAMETER_instance;
  function ElfPspModuleNids$MODULE_START_THREAD_PARAMETER_getInstance() {
    ElfPspModuleNids_initFields();
    return ElfPspModuleNids$MODULE_START_THREAD_PARAMETER_instance;
  }
  var ElfPspModuleNids$MODULE_STOP_instance;
  function ElfPspModuleNids$MODULE_STOP_getInstance() {
    ElfPspModuleNids_initFields();
    return ElfPspModuleNids$MODULE_STOP_instance;
  }
  var ElfPspModuleNids$MODULE_STOP_THREAD_PARAMETER_instance;
  function ElfPspModuleNids$MODULE_STOP_THREAD_PARAMETER_getInstance() {
    ElfPspModuleNids_initFields();
    return ElfPspModuleNids$MODULE_STOP_THREAD_PARAMETER_instance;
  }
  function ElfPspModuleNids$Companion() {
    ElfPspModuleNids$Companion_instance = this;
    var $receiver = ElfPspModuleNids$values();
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.id, item));
    }
    this.BY_ID = toMap(destination);
  }
  ElfPspModuleNids$Companion.prototype.invoke_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this.BY_ID.get_11rb$(index)) != null ? tmp$ : invalidOp("Can't find index " + index + ' in class');
  };
  ElfPspModuleNids$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfPspModuleNids$Companion_instance = null;
  function ElfPspModuleNids$Companion_getInstance() {
    ElfPspModuleNids_initFields();
    if (ElfPspModuleNids$Companion_instance === null) {
      new ElfPspModuleNids$Companion();
    }
    return ElfPspModuleNids$Companion_instance;
  }
  ElfPspModuleNids.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfPspModuleNids',
    interfaces: [NumericEnum, Enum]
  };
  function ElfPspModuleNids$values() {
    return [ElfPspModuleNids$MODULE_INFO_getInstance(), ElfPspModuleNids$MODULE_BOOTSTART_getInstance(), ElfPspModuleNids$MODULE_REBOOT_BEFORE_getInstance(), ElfPspModuleNids$MODULE_START_getInstance(), ElfPspModuleNids$MODULE_START_THREAD_PARAMETER_getInstance(), ElfPspModuleNids$MODULE_STOP_getInstance(), ElfPspModuleNids$MODULE_STOP_THREAD_PARAMETER_getInstance()];
  }
  ElfPspModuleNids.values = ElfPspModuleNids$values;
  function ElfPspModuleNids$valueOf(name) {
    switch (name) {
      case 'MODULE_INFO':
        return ElfPspModuleNids$MODULE_INFO_getInstance();
      case 'MODULE_BOOTSTART':
        return ElfPspModuleNids$MODULE_BOOTSTART_getInstance();
      case 'MODULE_REBOOT_BEFORE':
        return ElfPspModuleNids$MODULE_REBOOT_BEFORE_getInstance();
      case 'MODULE_START':
        return ElfPspModuleNids$MODULE_START_getInstance();
      case 'MODULE_START_THREAD_PARAMETER':
        return ElfPspModuleNids$MODULE_START_THREAD_PARAMETER_getInstance();
      case 'MODULE_STOP':
        return ElfPspModuleNids$MODULE_STOP_getInstance();
      case 'MODULE_STOP_THREAD_PARAMETER':
        return ElfPspModuleNids$MODULE_STOP_THREAD_PARAMETER_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.format.elf.ElfPspModuleNids.' + name);
    }
  }
  ElfPspModuleNids.valueOf_61zpoe$ = ElfPspModuleNids$valueOf;
  function ElfRelocType(name, ordinal, id) {
    Enum.call(this);
    this.id_ipmbzu$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ElfRelocType_initFields() {
    ElfRelocType_initFields = function () {
    };
    ElfRelocType$None_instance = new ElfRelocType('None', 0, 0);
    ElfRelocType$Mips16_instance = new ElfRelocType('Mips16', 1, 1);
    ElfRelocType$Mips32_instance = new ElfRelocType('Mips32', 2, 2);
    ElfRelocType$MipsRel32_instance = new ElfRelocType('MipsRel32', 3, 3);
    ElfRelocType$Mips26_instance = new ElfRelocType('Mips26', 4, 4);
    ElfRelocType$MipsHi16_instance = new ElfRelocType('MipsHi16', 5, 5);
    ElfRelocType$MipsLo16_instance = new ElfRelocType('MipsLo16', 6, 6);
    ElfRelocType$MipsGpRel16_instance = new ElfRelocType('MipsGpRel16', 7, 7);
    ElfRelocType$MipsLiteral_instance = new ElfRelocType('MipsLiteral', 8, 8);
    ElfRelocType$MipsGot16_instance = new ElfRelocType('MipsGot16', 9, 9);
    ElfRelocType$MipsPc16_instance = new ElfRelocType('MipsPc16', 10, 10);
    ElfRelocType$MipsCall16_instance = new ElfRelocType('MipsCall16', 11, 11);
    ElfRelocType$MipsGpRel32_instance = new ElfRelocType('MipsGpRel32', 12, 12);
    ElfRelocType$StopRelocation_instance = new ElfRelocType('StopRelocation', 13, 255);
    ElfRelocType$Companion_getInstance();
  }
  Object.defineProperty(ElfRelocType.prototype, 'id', {
    get: function () {
      return this.id_ipmbzu$_0;
    }
  });
  var ElfRelocType$None_instance;
  function ElfRelocType$None_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$None_instance;
  }
  var ElfRelocType$Mips16_instance;
  function ElfRelocType$Mips16_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$Mips16_instance;
  }
  var ElfRelocType$Mips32_instance;
  function ElfRelocType$Mips32_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$Mips32_instance;
  }
  var ElfRelocType$MipsRel32_instance;
  function ElfRelocType$MipsRel32_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsRel32_instance;
  }
  var ElfRelocType$Mips26_instance;
  function ElfRelocType$Mips26_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$Mips26_instance;
  }
  var ElfRelocType$MipsHi16_instance;
  function ElfRelocType$MipsHi16_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsHi16_instance;
  }
  var ElfRelocType$MipsLo16_instance;
  function ElfRelocType$MipsLo16_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsLo16_instance;
  }
  var ElfRelocType$MipsGpRel16_instance;
  function ElfRelocType$MipsGpRel16_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsGpRel16_instance;
  }
  var ElfRelocType$MipsLiteral_instance;
  function ElfRelocType$MipsLiteral_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsLiteral_instance;
  }
  var ElfRelocType$MipsGot16_instance;
  function ElfRelocType$MipsGot16_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsGot16_instance;
  }
  var ElfRelocType$MipsPc16_instance;
  function ElfRelocType$MipsPc16_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsPc16_instance;
  }
  var ElfRelocType$MipsCall16_instance;
  function ElfRelocType$MipsCall16_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsCall16_instance;
  }
  var ElfRelocType$MipsGpRel32_instance;
  function ElfRelocType$MipsGpRel32_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$MipsGpRel32_instance;
  }
  var ElfRelocType$StopRelocation_instance;
  function ElfRelocType$StopRelocation_getInstance() {
    ElfRelocType_initFields();
    return ElfRelocType$StopRelocation_instance;
  }
  function ElfRelocType$Companion() {
    ElfRelocType$Companion_instance = this;
    var $receiver = ElfRelocType$values();
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.id, item));
    }
    this.BY_ID = toMap(destination);
  }
  ElfRelocType$Companion.prototype.invoke_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this.BY_ID.get_11rb$(index)) != null ? tmp$ : invalidOp("Can't find index " + index + ' in class');
  };
  ElfRelocType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfRelocType$Companion_instance = null;
  function ElfRelocType$Companion_getInstance() {
    ElfRelocType_initFields();
    if (ElfRelocType$Companion_instance === null) {
      new ElfRelocType$Companion();
    }
    return ElfRelocType$Companion_instance;
  }
  ElfRelocType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfRelocType',
    interfaces: [NumericEnum, Enum]
  };
  function ElfRelocType$values() {
    return [ElfRelocType$None_getInstance(), ElfRelocType$Mips16_getInstance(), ElfRelocType$Mips32_getInstance(), ElfRelocType$MipsRel32_getInstance(), ElfRelocType$Mips26_getInstance(), ElfRelocType$MipsHi16_getInstance(), ElfRelocType$MipsLo16_getInstance(), ElfRelocType$MipsGpRel16_getInstance(), ElfRelocType$MipsLiteral_getInstance(), ElfRelocType$MipsGot16_getInstance(), ElfRelocType$MipsPc16_getInstance(), ElfRelocType$MipsCall16_getInstance(), ElfRelocType$MipsGpRel32_getInstance(), ElfRelocType$StopRelocation_getInstance()];
  }
  ElfRelocType.values = ElfRelocType$values;
  function ElfRelocType$valueOf(name) {
    switch (name) {
      case 'None':
        return ElfRelocType$None_getInstance();
      case 'Mips16':
        return ElfRelocType$Mips16_getInstance();
      case 'Mips32':
        return ElfRelocType$Mips32_getInstance();
      case 'MipsRel32':
        return ElfRelocType$MipsRel32_getInstance();
      case 'Mips26':
        return ElfRelocType$Mips26_getInstance();
      case 'MipsHi16':
        return ElfRelocType$MipsHi16_getInstance();
      case 'MipsLo16':
        return ElfRelocType$MipsLo16_getInstance();
      case 'MipsGpRel16':
        return ElfRelocType$MipsGpRel16_getInstance();
      case 'MipsLiteral':
        return ElfRelocType$MipsLiteral_getInstance();
      case 'MipsGot16':
        return ElfRelocType$MipsGot16_getInstance();
      case 'MipsPc16':
        return ElfRelocType$MipsPc16_getInstance();
      case 'MipsCall16':
        return ElfRelocType$MipsCall16_getInstance();
      case 'MipsGpRel32':
        return ElfRelocType$MipsGpRel32_getInstance();
      case 'StopRelocation':
        return ElfRelocType$StopRelocation_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.format.elf.ElfRelocType.' + name);
    }
  }
  ElfRelocType.valueOf_61zpoe$ = ElfRelocType$valueOf;
  function ElfReloc(pointerAddress, info) {
    ElfReloc$Companion_getInstance();
    this.pointerAddress = pointerAddress;
    this.info = info;
  }
  Object.defineProperty(ElfReloc.prototype, 'pointeeSectionHeaderBase', {
    get: function () {
      return this.info >>> 16 & 255;
    }
  });
  Object.defineProperty(ElfReloc.prototype, 'pointerSectionHeaderBase', {
    get: function () {
      return this.info >>> 8 & 255;
    }
  });
  Object.defineProperty(ElfReloc.prototype, 'type', {
    get: function () {
      return ElfRelocType$Companion_getInstance().invoke_za3lpa$(this.info >>> 0 & 255);
    }
  });
  function ElfReloc$Companion() {
    ElfReloc$Companion_instance = this;
    this.SIZE = 8;
  }
  ElfReloc$Companion.prototype.invoke_39qel5$ = function (s) {
    return new ElfReloc(readS32_le_0(s), readS32_le_0(s));
  };
  ElfReloc$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfReloc$Companion_instance = null;
  function ElfReloc$Companion_getInstance() {
    if (ElfReloc$Companion_instance === null) {
      new ElfReloc$Companion();
    }
    return ElfReloc$Companion_instance;
  }
  ElfReloc.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfReloc',
    interfaces: []
  };
  function ElfProgramHeader(type, offset, virtualAddress, psysicalAddress, fileSize, memorySize, flags, alignment) {
    ElfProgramHeader$Companion_getInstance();
    this.type = type;
    this.offset = offset;
    this.virtualAddress = virtualAddress;
    this.psysicalAddress = psysicalAddress;
    this.fileSize = fileSize;
    this.memorySize = memorySize;
    this.flags = flags;
    this.alignment = alignment;
  }
  function ElfProgramHeader$Companion() {
    ElfProgramHeader$Companion_instance = this;
  }
  ElfProgramHeader$Companion.prototype.invoke_39qel5$ = function (s) {
    return new ElfProgramHeader(new ElfProgramHeaderType(readS32_le_0(s)), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), new ElfProgramHeaderFlags(readS32_le_0(s)), readS32_le_0(s));
  };
  ElfProgramHeader$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfProgramHeader$Companion_instance = null;
  function ElfProgramHeader$Companion_getInstance() {
    if (ElfProgramHeader$Companion_instance === null) {
      new ElfProgramHeader$Companion();
    }
    return ElfProgramHeader$Companion_instance;
  }
  ElfProgramHeader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfProgramHeader',
    interfaces: []
  };
  ElfProgramHeader.prototype.component1 = function () {
    return this.type;
  };
  ElfProgramHeader.prototype.component2 = function () {
    return this.offset;
  };
  ElfProgramHeader.prototype.component3 = function () {
    return this.virtualAddress;
  };
  ElfProgramHeader.prototype.component4 = function () {
    return this.psysicalAddress;
  };
  ElfProgramHeader.prototype.component5 = function () {
    return this.fileSize;
  };
  ElfProgramHeader.prototype.component6 = function () {
    return this.memorySize;
  };
  ElfProgramHeader.prototype.component7 = function () {
    return this.flags;
  };
  ElfProgramHeader.prototype.component8 = function () {
    return this.alignment;
  };
  ElfProgramHeader.prototype.copy_fo9t6r$ = function (type, offset, virtualAddress, psysicalAddress, fileSize, memorySize, flags, alignment) {
    return new ElfProgramHeader(type === void 0 ? this.type : type, offset === void 0 ? this.offset : offset, virtualAddress === void 0 ? this.virtualAddress : virtualAddress, psysicalAddress === void 0 ? this.psysicalAddress : psysicalAddress, fileSize === void 0 ? this.fileSize : fileSize, memorySize === void 0 ? this.memorySize : memorySize, flags === void 0 ? this.flags : flags, alignment === void 0 ? this.alignment : alignment);
  };
  ElfProgramHeader.prototype.toString = function () {
    return 'ElfProgramHeader(type=' + Kotlin.toString(this.type) + (', offset=' + Kotlin.toString(this.offset)) + (', virtualAddress=' + Kotlin.toString(this.virtualAddress)) + (', psysicalAddress=' + Kotlin.toString(this.psysicalAddress)) + (', fileSize=' + Kotlin.toString(this.fileSize)) + (', memorySize=' + Kotlin.toString(this.memorySize)) + (', flags=' + Kotlin.toString(this.flags)) + (', alignment=' + Kotlin.toString(this.alignment)) + ')';
  };
  ElfProgramHeader.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    result = result * 31 + Kotlin.hashCode(this.offset) | 0;
    result = result * 31 + Kotlin.hashCode(this.virtualAddress) | 0;
    result = result * 31 + Kotlin.hashCode(this.psysicalAddress) | 0;
    result = result * 31 + Kotlin.hashCode(this.fileSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.memorySize) | 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    result = result * 31 + Kotlin.hashCode(this.alignment) | 0;
    return result;
  };
  ElfProgramHeader.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.type, other.type) && Kotlin.equals(this.offset, other.offset) && Kotlin.equals(this.virtualAddress, other.virtualAddress) && Kotlin.equals(this.psysicalAddress, other.psysicalAddress) && Kotlin.equals(this.fileSize, other.fileSize) && Kotlin.equals(this.memorySize, other.memorySize) && Kotlin.equals(this.flags, other.flags) && Kotlin.equals(this.alignment, other.alignment)))));
  };
  function ElfSectionHeader(nameOffset, name, type, flags, address, offset, size, link, info, addressAlign, entitySize) {
    ElfSectionHeader$Companion_getInstance();
    this.nameOffset = nameOffset;
    this.name = name;
    this.type = type;
    this.flags = flags;
    this.address = address;
    this.offset = offset;
    this.size = size;
    this.link = link;
    this.info = info;
    this.addressAlign = addressAlign;
    this.entitySize = entitySize;
    this.stream_tl79o4$_0 = this.stream_tl79o4$_0;
  }
  Object.defineProperty(ElfSectionHeader.prototype, 'stream', {
    get: function () {
      if (this.stream_tl79o4$_0 == null)
        return throwUPAE('stream');
      return this.stream_tl79o4$_0;
    },
    set: function (stream) {
      this.stream_tl79o4$_0 = stream;
    }
  });
  function ElfSectionHeader$Companion() {
    ElfSectionHeader$Companion_instance = this;
  }
  ElfSectionHeader$Companion.prototype.invoke_39qel5$ = function (s) {
    return new ElfSectionHeader(readS32_le_0(s), '...', new ElfSectionHeaderType(readS32_le_0(s)), new ElfSectionHeaderFlags(readS32_le_0(s)), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s));
  };
  ElfSectionHeader$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfSectionHeader$Companion_instance = null;
  function ElfSectionHeader$Companion_getInstance() {
    if (ElfSectionHeader$Companion_instance === null) {
      new ElfSectionHeader$Companion();
    }
    return ElfSectionHeader$Companion_instance;
  }
  ElfSectionHeader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfSectionHeader',
    interfaces: []
  };
  ElfSectionHeader.prototype.component1 = function () {
    return this.nameOffset;
  };
  ElfSectionHeader.prototype.component2 = function () {
    return this.name;
  };
  ElfSectionHeader.prototype.component3 = function () {
    return this.type;
  };
  ElfSectionHeader.prototype.component4 = function () {
    return this.flags;
  };
  ElfSectionHeader.prototype.component5 = function () {
    return this.address;
  };
  ElfSectionHeader.prototype.component6 = function () {
    return this.offset;
  };
  ElfSectionHeader.prototype.component7 = function () {
    return this.size;
  };
  ElfSectionHeader.prototype.component8 = function () {
    return this.link;
  };
  ElfSectionHeader.prototype.component9 = function () {
    return this.info;
  };
  ElfSectionHeader.prototype.component10 = function () {
    return this.addressAlign;
  };
  ElfSectionHeader.prototype.component11 = function () {
    return this.entitySize;
  };
  ElfSectionHeader.prototype.copy_1jye5d$ = function (nameOffset, name, type, flags, address, offset, size, link, info, addressAlign, entitySize) {
    return new ElfSectionHeader(nameOffset === void 0 ? this.nameOffset : nameOffset, name === void 0 ? this.name : name, type === void 0 ? this.type : type, flags === void 0 ? this.flags : flags, address === void 0 ? this.address : address, offset === void 0 ? this.offset : offset, size === void 0 ? this.size : size, link === void 0 ? this.link : link, info === void 0 ? this.info : info, addressAlign === void 0 ? this.addressAlign : addressAlign, entitySize === void 0 ? this.entitySize : entitySize);
  };
  ElfSectionHeader.prototype.toString = function () {
    return 'ElfSectionHeader(nameOffset=' + Kotlin.toString(this.nameOffset) + (', name=' + Kotlin.toString(this.name)) + (', type=' + Kotlin.toString(this.type)) + (', flags=' + Kotlin.toString(this.flags)) + (', address=' + Kotlin.toString(this.address)) + (', offset=' + Kotlin.toString(this.offset)) + (', size=' + Kotlin.toString(this.size)) + (', link=' + Kotlin.toString(this.link)) + (', info=' + Kotlin.toString(this.info)) + (', addressAlign=' + Kotlin.toString(this.addressAlign)) + (', entitySize=' + Kotlin.toString(this.entitySize)) + ')';
  };
  ElfSectionHeader.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.nameOffset) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    result = result * 31 + Kotlin.hashCode(this.address) | 0;
    result = result * 31 + Kotlin.hashCode(this.offset) | 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.link) | 0;
    result = result * 31 + Kotlin.hashCode(this.info) | 0;
    result = result * 31 + Kotlin.hashCode(this.addressAlign) | 0;
    result = result * 31 + Kotlin.hashCode(this.entitySize) | 0;
    return result;
  };
  ElfSectionHeader.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.nameOffset, other.nameOffset) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.type, other.type) && Kotlin.equals(this.flags, other.flags) && Kotlin.equals(this.address, other.address) && Kotlin.equals(this.offset, other.offset) && Kotlin.equals(this.size, other.size) && Kotlin.equals(this.link, other.link) && Kotlin.equals(this.info, other.info) && Kotlin.equals(this.addressAlign, other.addressAlign) && Kotlin.equals(this.entitySize, other.entitySize)))));
  };
  function ElfDwarf() {
    this.logger = Logger.Companion.invoke_61zpoe$('ElfDwarf');
  }
  ElfDwarf.prototype.parseElfLoader_xqzwj6$ = function (elfLoader) {
    this.logger.info_61zpoe$('ElfDwarfLoader.parseElfLoader: Not implemented');
  };
  ElfDwarf.prototype.getSymbolAt_za3lpa$ = function (address) {
  };
  ElfDwarf.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfDwarf',
    interfaces: []
  };
  function ElfPspModuleInfo(moduleAtributes, moduleVersion, name, GP, exportsStart, exportsEnd, importsStart, importsEnd, PC) {
    ElfPspModuleInfo$Companion_getInstance();
    if (PC === void 0)
      PC = 0;
    this.moduleAtributes = moduleAtributes;
    this.moduleVersion = moduleVersion;
    this.name = name;
    this.GP = GP;
    this.exportsStart = exportsStart;
    this.exportsEnd = exportsEnd;
    this.importsStart = importsStart;
    this.importsEnd = importsEnd;
    this.PC = PC;
  }
  function ElfPspModuleInfo$Companion() {
    ElfPspModuleInfo$Companion_instance = this;
  }
  ElfPspModuleInfo$Companion.prototype.invoke_39qel5$ = function (s) {
    return new ElfPspModuleInfo(readU16_le(s), readU16_le(s), readStringz_1(s, 28), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), 0);
  };
  ElfPspModuleInfo$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfPspModuleInfo$Companion_instance = null;
  function ElfPspModuleInfo$Companion_getInstance() {
    if (ElfPspModuleInfo$Companion_instance === null) {
      new ElfPspModuleInfo$Companion();
    }
    return ElfPspModuleInfo$Companion_instance;
  }
  ElfPspModuleInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfPspModuleInfo',
    interfaces: []
  };
  ElfPspModuleInfo.prototype.component1 = function () {
    return this.moduleAtributes;
  };
  ElfPspModuleInfo.prototype.component2 = function () {
    return this.moduleVersion;
  };
  ElfPspModuleInfo.prototype.component3 = function () {
    return this.name;
  };
  ElfPspModuleInfo.prototype.component4 = function () {
    return this.GP;
  };
  ElfPspModuleInfo.prototype.component5 = function () {
    return this.exportsStart;
  };
  ElfPspModuleInfo.prototype.component6 = function () {
    return this.exportsEnd;
  };
  ElfPspModuleInfo.prototype.component7 = function () {
    return this.importsStart;
  };
  ElfPspModuleInfo.prototype.component8 = function () {
    return this.importsEnd;
  };
  ElfPspModuleInfo.prototype.component9 = function () {
    return this.PC;
  };
  ElfPspModuleInfo.prototype.copy_qoc76$ = function (moduleAtributes, moduleVersion, name, GP, exportsStart, exportsEnd, importsStart, importsEnd, PC) {
    return new ElfPspModuleInfo(moduleAtributes === void 0 ? this.moduleAtributes : moduleAtributes, moduleVersion === void 0 ? this.moduleVersion : moduleVersion, name === void 0 ? this.name : name, GP === void 0 ? this.GP : GP, exportsStart === void 0 ? this.exportsStart : exportsStart, exportsEnd === void 0 ? this.exportsEnd : exportsEnd, importsStart === void 0 ? this.importsStart : importsStart, importsEnd === void 0 ? this.importsEnd : importsEnd, PC === void 0 ? this.PC : PC);
  };
  ElfPspModuleInfo.prototype.toString = function () {
    return 'ElfPspModuleInfo(moduleAtributes=' + Kotlin.toString(this.moduleAtributes) + (', moduleVersion=' + Kotlin.toString(this.moduleVersion)) + (', name=' + Kotlin.toString(this.name)) + (', GP=' + Kotlin.toString(this.GP)) + (', exportsStart=' + Kotlin.toString(this.exportsStart)) + (', exportsEnd=' + Kotlin.toString(this.exportsEnd)) + (', importsStart=' + Kotlin.toString(this.importsStart)) + (', importsEnd=' + Kotlin.toString(this.importsEnd)) + (', PC=' + Kotlin.toString(this.PC)) + ')';
  };
  ElfPspModuleInfo.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.moduleAtributes) | 0;
    result = result * 31 + Kotlin.hashCode(this.moduleVersion) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.GP) | 0;
    result = result * 31 + Kotlin.hashCode(this.exportsStart) | 0;
    result = result * 31 + Kotlin.hashCode(this.exportsEnd) | 0;
    result = result * 31 + Kotlin.hashCode(this.importsStart) | 0;
    result = result * 31 + Kotlin.hashCode(this.importsEnd) | 0;
    result = result * 31 + Kotlin.hashCode(this.PC) | 0;
    return result;
  };
  ElfPspModuleInfo.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.moduleAtributes, other.moduleAtributes) && Kotlin.equals(this.moduleVersion, other.moduleVersion) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.GP, other.GP) && Kotlin.equals(this.exportsStart, other.exportsStart) && Kotlin.equals(this.exportsEnd, other.exportsEnd) && Kotlin.equals(this.importsStart, other.importsStart) && Kotlin.equals(this.importsEnd, other.importsEnd) && Kotlin.equals(this.PC, other.PC)))));
  };
  function ElfPspModuleImport(nameOffset, version, flags, entrySize, functionCount, variableCount, nidAddress, callAddress) {
    ElfPspModuleImport$Companion_getInstance();
    this.nameOffset = nameOffset;
    this.version = version;
    this.flags = flags;
    this.entrySize = entrySize;
    this.functionCount = functionCount;
    this.variableCount = variableCount;
    this.nidAddress = nidAddress;
    this.callAddress = callAddress;
    this.name = '';
  }
  function ElfPspModuleImport$Companion() {
    ElfPspModuleImport$Companion_instance = this;
    this.SIZE = 20;
  }
  ElfPspModuleImport$Companion.prototype.invoke_39qel5$ = function (s) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    tmp$ = readS32_le_0(s);
    tmp$_0 = readU16_le(s);
    tmp$_1 = readU16_le(s);
    tmp$_2 = readU8_0(s);
    tmp$_3 = readU8_0(s);
    return new ElfPspModuleImport(tmp$, tmp$_0, tmp$_1, tmp$_2, readU16_le(s), tmp$_3, readS32_le_0(s), readS32_le_0(s));
  };
  ElfPspModuleImport$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfPspModuleImport$Companion_instance = null;
  function ElfPspModuleImport$Companion_getInstance() {
    if (ElfPspModuleImport$Companion_instance === null) {
      new ElfPspModuleImport$Companion();
    }
    return ElfPspModuleImport$Companion_instance;
  }
  ElfPspModuleImport.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfPspModuleImport',
    interfaces: []
  };
  ElfPspModuleImport.prototype.component1 = function () {
    return this.nameOffset;
  };
  ElfPspModuleImport.prototype.component2 = function () {
    return this.version;
  };
  ElfPspModuleImport.prototype.component3 = function () {
    return this.flags;
  };
  ElfPspModuleImport.prototype.component4 = function () {
    return this.entrySize;
  };
  ElfPspModuleImport.prototype.component5 = function () {
    return this.functionCount;
  };
  ElfPspModuleImport.prototype.component6 = function () {
    return this.variableCount;
  };
  ElfPspModuleImport.prototype.component7 = function () {
    return this.nidAddress;
  };
  ElfPspModuleImport.prototype.component8 = function () {
    return this.callAddress;
  };
  ElfPspModuleImport.prototype.copy_wrdw30$ = function (nameOffset, version, flags, entrySize, functionCount, variableCount, nidAddress, callAddress) {
    return new ElfPspModuleImport(nameOffset === void 0 ? this.nameOffset : nameOffset, version === void 0 ? this.version : version, flags === void 0 ? this.flags : flags, entrySize === void 0 ? this.entrySize : entrySize, functionCount === void 0 ? this.functionCount : functionCount, variableCount === void 0 ? this.variableCount : variableCount, nidAddress === void 0 ? this.nidAddress : nidAddress, callAddress === void 0 ? this.callAddress : callAddress);
  };
  ElfPspModuleImport.prototype.toString = function () {
    return 'ElfPspModuleImport(nameOffset=' + Kotlin.toString(this.nameOffset) + (', version=' + Kotlin.toString(this.version)) + (', flags=' + Kotlin.toString(this.flags)) + (', entrySize=' + Kotlin.toString(this.entrySize)) + (', functionCount=' + Kotlin.toString(this.functionCount)) + (', variableCount=' + Kotlin.toString(this.variableCount)) + (', nidAddress=' + Kotlin.toString(this.nidAddress)) + (', callAddress=' + Kotlin.toString(this.callAddress)) + ')';
  };
  ElfPspModuleImport.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.nameOffset) | 0;
    result = result * 31 + Kotlin.hashCode(this.version) | 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    result = result * 31 + Kotlin.hashCode(this.entrySize) | 0;
    result = result * 31 + Kotlin.hashCode(this.functionCount) | 0;
    result = result * 31 + Kotlin.hashCode(this.variableCount) | 0;
    result = result * 31 + Kotlin.hashCode(this.nidAddress) | 0;
    result = result * 31 + Kotlin.hashCode(this.callAddress) | 0;
    return result;
  };
  ElfPspModuleImport.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.nameOffset, other.nameOffset) && Kotlin.equals(this.version, other.version) && Kotlin.equals(this.flags, other.flags) && Kotlin.equals(this.entrySize, other.entrySize) && Kotlin.equals(this.functionCount, other.functionCount) && Kotlin.equals(this.variableCount, other.variableCount) && Kotlin.equals(this.nidAddress, other.nidAddress) && Kotlin.equals(this.callAddress, other.callAddress)))));
  };
  function ElfPspModuleExport(name, version, flags, entrySize, variableCount, functionCount, exports) {
    ElfPspModuleExport$Companion_getInstance();
    this.name = name;
    this.version = version;
    this.flags = flags;
    this.entrySize = entrySize;
    this.variableCount = variableCount;
    this.functionCount = functionCount;
    this.exports = exports;
  }
  function ElfPspModuleExport$Companion() {
    ElfPspModuleExport$Companion_instance = this;
  }
  ElfPspModuleExport$Companion.prototype.invoke_39qel5$ = function (s) {
    return new ElfPspModuleExport(readS32_le_0(s), readU16_le(s), readU16_le(s), readU8_0(s), readU8_0(s), readU16_le(s), readS32_le_0(s));
  };
  ElfPspModuleExport$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfPspModuleExport$Companion_instance = null;
  function ElfPspModuleExport$Companion_getInstance() {
    if (ElfPspModuleExport$Companion_instance === null) {
      new ElfPspModuleExport$Companion();
    }
    return ElfPspModuleExport$Companion_instance;
  }
  ElfPspModuleExport.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfPspModuleExport',
    interfaces: []
  };
  function ElfPspModuleInfoAtributesEnum(id) {
    ElfPspModuleInfoAtributesEnum$Companion_getInstance();
    this.id = id;
  }
  function ElfPspModuleInfoAtributesEnum$Companion() {
    ElfPspModuleInfoAtributesEnum$Companion_instance = this;
    this.UserMode = 0;
    this.KernelMode = 256;
  }
  ElfPspModuleInfoAtributesEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ElfPspModuleInfoAtributesEnum$Companion_instance = null;
  function ElfPspModuleInfoAtributesEnum$Companion_getInstance() {
    if (ElfPspModuleInfoAtributesEnum$Companion_instance === null) {
      new ElfPspModuleInfoAtributesEnum$Companion();
    }
    return ElfPspModuleInfoAtributesEnum$Companion_instance;
  }
  ElfPspModuleInfoAtributesEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ElfPspModuleInfoAtributesEnum',
    interfaces: []
  };
  ElfPspModuleInfoAtributesEnum.prototype.component1 = function () {
    return this.id;
  };
  ElfPspModuleInfoAtributesEnum.prototype.copy_za3lpa$ = function (id) {
    return new ElfPspModuleInfoAtributesEnum(id === void 0 ? this.id : id);
  };
  ElfPspModuleInfoAtributesEnum.prototype.toString = function () {
    return 'ElfPspModuleInfoAtributesEnum(id=' + Kotlin.toString(this.id) + ')';
  };
  ElfPspModuleInfoAtributesEnum.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  ElfPspModuleInfoAtributesEnum.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function InstructionReader(memory) {
    this.memory_0 = memory;
  }
  InstructionReader.prototype.read_za3lpa$ = function (address) {
    return new Instruction(address, this.memory_0.lw_za3lpa$(address));
  };
  InstructionReader.prototype.write_7xc7mf$ = function (address, instruction) {
    this.memory_0.sw_vux9f0$(address, instruction.data);
  };
  InstructionReader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InstructionReader',
    interfaces: []
  };
  function loadElf($receiver, file) {
    return PspElf$Companion_getInstance().loadInto_fyu811$(file, $receiver);
  }
  var primitiveArrayConcat = Kotlin.primitiveArrayConcat;
  function loadElfAndSetRegisters($receiver, file, args) {
    var $this = $receiver.logger;
    var level = LogLevel.WARN;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'loadElfAndSetRegisters: ' + args);
    }
    var elf = loadElf($receiver, file);
    var thread = $receiver.threadManager.create_7jlznu$('_start', 0, 0, 4096, 0, ptr($receiver.mem, 0));
    var destination = ArrayList_init(collectionSizeOrDefault(args, 10));
    var tmp$;
    tmp$ = args.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(primitiveArrayConcat(toByteArray(item, lang.UTF8), new Int8Array([0])));
    }
    var data = thread.putDataInStack_ir89t6$(join(destination));
    var state = thread.state;
    var pc = elf.moduleInfo.PC;
    state._PC = pc;
    state._nPC = pc + 4 | 0;
    set_GP(state, elf.moduleInfo.GP);
    state.r4 = data.size;
    state.r5 = data.addr;
    thread.start();
    return elf;
  }
  function PspElf(memory, memoryManager, moduleManager, syscallManager, addressInfo) {
    PspElf$Companion_getInstance();
    this.memory_0 = memory;
    this.memoryManager_0 = memoryManager;
    this.moduleManager_0 = moduleManager;
    this.syscallManager_0 = syscallManager;
    this.addressInfo_0 = addressInfo;
    this.logger_0 = Logger.Companion.invoke_61zpoe$('ElfPsp');
    this.elf_xm4kwm$_0 = this.elf_xm4kwm$_0;
    this.moduleInfo_qarplb$_0 = this.moduleInfo_qarplb$_0;
    this.dwarf_f2x1fr$_0 = this.dwarf_f2x1fr$_0;
    this.baseAddress_qvceca$_0 = 0;
  }
  Object.defineProperty(PspElf.prototype, 'elf', {
    get: function () {
      if (this.elf_xm4kwm$_0 == null)
        return throwUPAE('elf');
      return this.elf_xm4kwm$_0;
    },
    set: function (elf) {
      this.elf_xm4kwm$_0 = elf;
    }
  });
  Object.defineProperty(PspElf.prototype, 'moduleInfo', {
    get: function () {
      if (this.moduleInfo_qarplb$_0 == null)
        return throwUPAE('moduleInfo');
      return this.moduleInfo_qarplb$_0;
    },
    set: function (moduleInfo) {
      this.moduleInfo_qarplb$_0 = moduleInfo;
    }
  });
  Object.defineProperty(PspElf.prototype, 'dwarf', {
    get: function () {
      if (this.dwarf_f2x1fr$_0 == null)
        return throwUPAE('dwarf');
      return this.dwarf_f2x1fr$_0;
    },
    set: function (dwarf) {
      this.dwarf_f2x1fr$_0 = dwarf;
    }
  });
  Object.defineProperty(PspElf.prototype, 'baseAddress', {
    get: function () {
      return this.baseAddress_qvceca$_0;
    },
    set: function (baseAddress) {
      this.baseAddress_qvceca$_0 = baseAddress;
    }
  });
  function PspElf$Companion() {
    PspElf$Companion_instance = this;
  }
  PspElf$Companion.prototype.loadInto_fyu811$ = function (stream, emulator) {
    var loader = new PspElf(emulator.mem, emulator.memoryManager, emulator.moduleManager, emulator.syscalls, emulator.nameProvider);
    loader.load_39qel5$(stream);
    return loader;
  };
  PspElf$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var PspElf$Companion_instance = null;
  function PspElf$Companion_getInstance() {
    if (PspElf$Companion_instance === null) {
      new PspElf$Companion();
    }
    return PspElf$Companion_instance;
  }
  PspElf.prototype.load_39qel5$ = function (stream) {
    this.elf = Elf$Companion_getInstance().read_39qel5$(stream);
    this.allocateMemory_0();
    this.writeToMemory_0();
    this.relocateFromHeaders_0();
    this.readModuleInfo_0();
    this.updateModuleImports_0();
    this.dwarf = new ElfDwarf();
    this.dwarf.parseElfLoader_xqzwj6$(this.elf);
  };
  PspElf.prototype.getSymbolAt_za3lpa$ = function (address) {
    this.dwarf.getSymbolAt_za3lpa$(address);
  };
  PspElf.prototype.getSectionHeaderMemoryStream_0 = function (sectionHeader) {
    return this.memory_0.getPointerStream_vux9f0$(this.baseAddress + sectionHeader.address | 0, sectionHeader.size);
  };
  PspElf.prototype.readModuleInfo_0 = function () {
    this.moduleInfo = ElfPspModuleInfo$Companion_getInstance().invoke_39qel5$(this.getSectionHeaderMemoryStream_0(this.elf.getSectionHeader_61zpoe$('.rodata.sceModuleInfo')));
    this.moduleInfo.PC = this.baseAddress + this.elf.header.entryPoint | 0;
  };
  function PspElf$allocateMemory$lambda(it) {
    return it.size;
  }
  var compareBy$lambda_0 = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  function Comparator$ObjectLiteral_0(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_0.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_0.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  var max_0 = Kotlin.kotlin.js.max_bug313$;
  PspElf.prototype.allocateMemory_0 = function () {
    var tmp$, tmp$_0;
    this.baseAddress = 0;
    if (this.elf.needsRelocation) {
      this.baseAddress = last(sortedWith(this.memoryManager_0.userPartition.childPartitions, new Comparator$ObjectLiteral_0(compareBy$lambda_0(PspElf$allocateMemory$lambda)))).low.toInt();
      this.baseAddress = nextAlignedTo(this.baseAddress, 4096) + 16384 | 0;
    }
    var lowest = new Kotlin.Long(-1, 0);
    var highest = Kotlin.Long.ZERO;
    var $receiver = this.elf.sectionHeaders;
    var destination = ArrayList_init();
    var tmp$_1;
    tmp$_1 = $receiver.iterator();
    while (tmp$_1.hasNext()) {
      var element = tmp$_1.next();
      if (element.flags.hasFlag_89au20$(ElfSectionHeaderFlags$Companion_getInstance().Allocate))
        destination.add_11rb$(element);
    }
    tmp$ = destination.iterator();
    while (tmp$.hasNext()) {
      var section = tmp$.next();
      lowest = min_0(Math_0, lowest, Kotlin.Long.fromInt(this.baseAddress).add(Kotlin.Long.fromInt(section.address)));
      highest = max_0(Math_0, highest, Kotlin.Long.fromInt(this.baseAddress).add(Kotlin.Long.fromInt(section.address)).add(Kotlin.Long.fromInt(section.size)));
    }
    tmp$_0 = this.elf.programHeaders.iterator();
    while (tmp$_0.hasNext()) {
      var program = tmp$_0.next();
      lowest = min_0(Math_0, lowest, Kotlin.Long.fromInt(this.baseAddress).add(Kotlin.Long.fromInt(program.virtualAddress)));
      highest = max_0(Math_0, highest, Kotlin.Long.fromInt(this.baseAddress).add(Kotlin.Long.fromInt(program.virtualAddress)).add(Kotlin.Long.fromInt(program.memorySize)));
    }
    var memorySegment = this.memoryManager_0.userPartition.allocateSet_jl0yiw$(highest.subtract(lowest), lowest, 'Elf');
  };
  PspElf.prototype.relocateFromHeaders_0 = function () {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var RelocProgramIndex = 0;
    tmp$ = this.elf.programHeaders.iterator();
    while (tmp$.hasNext()) {
      var programHeader = tmp$.next();
      tmp$_0 = programHeader.type;
      if (equals(tmp$_0, ElfProgramHeaderType$Companion_getInstance().Reloc1))
        this.logger_0.info_61zpoe$('SKIPPING Elf.ProgramHeader.TypeEnum.Reloc1!');
      else if (equals(tmp$_0, ElfProgramHeaderType$Companion_getInstance().Reloc2))
        throw Exception_init_0('Not implemented');
    }
    var RelocSectionIndex = 0;
    tmp$_1 = this.elf.sectionHeaders.iterator();
    while (tmp$_1.hasNext()) {
      var sectionHeader = tmp$_1.next();
      tmp$_2 = sectionHeader.type;
      if (equals(tmp$_2, ElfSectionHeaderType$Companion_getInstance().Relocation)) {
        this.logger_0.error_61zpoe$('sectionHeader: ' + sectionHeader);
        this.logger_0.error_61zpoe$('Not implemented ElfSectionHeaderType.Relocation');
      }
       else if (equals(tmp$_2, ElfSectionHeaderType$Companion_getInstance().PrxRelocation)) {
        var $receiver = until_0(0, sectionHeader.stream.length.div(Kotlin.Long.fromInt(ElfReloc$Companion_getInstance().SIZE)));
        var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
        var tmp$_3;
        tmp$_3 = $receiver.iterator();
        while (tmp$_3.hasNext()) {
          var item = tmp$_3.next();
          destination.add_11rb$(ElfReloc$Companion_getInstance().invoke_39qel5$(sectionHeader.stream));
        }
        var relocs = destination;
        this.relocateRelocs_0(relocs);
      }
       else if (equals(tmp$_2, ElfSectionHeaderType$Companion_getInstance().PrxRelocation_FW5))
        throw Error_init('Not implemented ElfSectionHeader.Type.PrxRelocation_FW5');
    }
  };
  PspElf.prototype.relocateRelocs_0 = function (relocs) {
    var tmp$, tmp$_0, tmp$_1;
    var baseAddress = this.baseAddress;
    var hiValue = 0;
    var deferredHi16 = ArrayList_init();
    var instructionReader = new InstructionReader(this.memory_0);
    tmp$ = relocs.size;
    for (var index = 0; index < tmp$; index++) {
      var reloc = relocs.get_za3lpa$(index);
      if (reloc.type === ElfRelocType$StopRelocation_getInstance())
        break;
      var pointerBaseOffset = this.elf.programHeaders.get_za3lpa$(reloc.pointerSectionHeaderBase).virtualAddress;
      var pointeeBaseOffset = this.elf.programHeaders.get_za3lpa$(reloc.pointeeSectionHeaderBase).virtualAddress;
      var RelocatedPointerAddress = baseAddress + reloc.pointerAddress + pointerBaseOffset | 0;
      var instruction = instructionReader.read_za3lpa$(RelocatedPointerAddress);
      var S = baseAddress + pointeeBaseOffset | 0;
      var GP_ADDR = baseAddress + reloc.pointerAddress | 0;
      var GP_OFFSET = GP_ADDR - (baseAddress & (new Kotlin.Long(-65536, 0)).toInt()) | 0;
      tmp$_0 = reloc.type;
      if (!equals(tmp$_0, ElfRelocType$None_getInstance()))
        if (equals(tmp$_0, ElfRelocType$Mips16_getInstance()))
          instruction.u_imm16 = instruction.u_imm16 + S | 0;
        else if (equals(tmp$_0, ElfRelocType$Mips32_getInstance()))
          instruction.data = instruction.data + S | 0;
        else if (equals(tmp$_0, ElfRelocType$MipsRel32_getInstance()))
          throw Exception_init_0('Not implemented MipsRel32');
        else if (equals(tmp$_0, ElfRelocType$Mips26_getInstance()))
          instruction.jump_real = instruction.jump_real + S | 0;
        else if (equals(tmp$_0, ElfRelocType$MipsHi16_getInstance())) {
          hiValue = instruction.u_imm16;
          deferredHi16.add_11rb$(RelocatedPointerAddress);
        }
         else if (equals(tmp$_0, ElfRelocType$MipsLo16_getInstance())) {
          var A = instruction.u_imm16;
          instruction.u_imm16 = (hiValue << 16 | A & 65535) + S | 0;
          tmp$_1 = deferredHi16.iterator();
          while (tmp$_1.hasNext()) {
            var data_addr2 = tmp$_1.next();
            var data2 = instructionReader.read_za3lpa$(data_addr2);
            var result = ((data2.data & 65535) << 16) + A + S | 0;
            if ((A & 32768) !== 0) {
              result = result - 65536 | 0;
            }
            if ((result & 32768) !== 0) {
              result = result + 65536 | 0;
            }
            data2.u_imm16 = result >>> 16;
            instructionReader.write_7xc7mf$(data_addr2, data2);
          }
          deferredHi16 = ArrayList_init();
        }
         else if (!equals(tmp$_0, ElfRelocType$MipsGpRel16_getInstance()))
          throw Error_init(format_0('RelocType %d not implemented', [reloc.type]));
      instructionReader.write_7xc7mf$(RelocatedPointerAddress, instruction);
    }
  };
  PspElf.prototype.writeToMemory_0 = function () {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var needsRelocate = this.elf.needsRelocation;
    var loadAddress = this.baseAddress;
    this.logger_0.info_61zpoe$(format_0('PspElfLoader: needsRelocate=%s, loadAddress=%08X', [needsRelocate, loadAddress]));
    var $receiver = this.elf.programHeaders;
    var destination = ArrayList_init();
    var tmp$_3;
    tmp$_3 = $receiver.iterator();
    while (tmp$_3.hasNext()) {
      var element = tmp$_3.next();
      var tmp$_4;
      if ((tmp$_4 = element.type) != null ? tmp$_4.equals(ElfProgramHeaderType$Companion_getInstance().Load) : null)
        destination.add_11rb$(element);
    }
    tmp$ = destination.iterator();
    while (tmp$.hasNext()) {
      var programHeader = tmp$.next();
      var fileOffset = programHeader.offset;
      var memOffset = this.baseAddress + programHeader.virtualAddress | 0;
      var fileSize = programHeader.fileSize;
      var memSize = programHeader.memorySize;
      copyTo(sliceWithSize_0(this.elf.stream, fileOffset, fileSize), this.memory_0.getPointerStream_vux9f0$(memOffset, fileSize));
      this.memory_0.memset_qt1dr2$(memOffset + fileSize | 0, 0, memSize - fileSize | 0);
      this.logger_0.info_61zpoe$('Program Header: ' + format_0('%08X:%08X, %08X:%08X', [fileOffset, fileSize, memOffset, memSize]));
    }
    var $receiver_0 = this.elf.sectionHeaders;
    var destination_0 = ArrayList_init();
    var tmp$_5;
    tmp$_5 = $receiver_0.iterator();
    while (tmp$_5.hasNext()) {
      var element_0 = tmp$_5.next();
      if (element_0.flags.hasFlag_89au20$(ElfSectionHeaderFlags$Companion_getInstance().Allocate))
        destination_0.add_11rb$(element_0);
    }
    tmp$_0 = destination_0.iterator();
    while (tmp$_0.hasNext()) {
      var sectionHeader = tmp$_0.next();
      var low = loadAddress + sectionHeader.address | 0;
      this.logger_0.info_61zpoe$(format_0('Section Header: %s LOW:%08X, SIZE:%08X', [sectionHeader.toString(), low, sectionHeader.size]));
      tmp$_1 = sectionHeader.type;
      if (equals(tmp$_1, ElfSectionHeaderType$Companion_getInstance().NoBits)) {
        tmp$_2 = sectionHeader.size;
        for (var n = 0; n < tmp$_2; n++)
          this.memory_0.sb_vux9f0$(low + n | 0, 0);
      }
       else if (equals(tmp$_1, ElfSectionHeaderType$Companion_getInstance().ProgramBits)) {
        var stream = sectionHeader.stream;
        var length = stream.length;
        this.memory_0.write_3fge6q$(low, readAll_0(stream));
      }
    }
  };
  PspElf.prototype.updateModuleImports_0 = function () {
    var tmp$;
    var moduleInfo = this.moduleInfo;
    this.logger_0.info_61zpoe$('updateModuleImports.moduleInfo: ' + moduleInfo);
    var importsBytesSize = moduleInfo.importsEnd - moduleInfo.importsStart | 0;
    var importsStream = slice(openSync_0(this.memory_0), until(moduleInfo.importsStart, moduleInfo.importsEnd));
    var importsCount = importsBytesSize / ElfPspModuleImport$Companion_getInstance().SIZE | 0;
    var $receiver = until(0, importsCount);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$_0;
    tmp$_0 = $receiver.iterator();
    while (tmp$_0.hasNext()) {
      var item = tmp$_0.next();
      destination.add_11rb$(ElfPspModuleImport$Companion_getInstance().invoke_39qel5$(importsStream));
    }
    var imports = destination;
    tmp$ = imports.iterator();
    while (tmp$.hasNext()) {
      var _import = tmp$.next();
      _import.name = this.memory_0.readStringz_za3lpa$(_import.nameOffset);
      var imported = this.updateModuleFunctions_0(_import);
      this.updateModuleVars_0(_import);
      var tmp$_1 = this.logger_0;
      var tmp$_2 = 'Imported: ' + imported.name + ' ';
      var $receiver_0 = imported.registeredNativeFunctions;
      var destination_0 = ArrayList_init(collectionSizeOrDefault($receiver_0, 10));
      var tmp$_3;
      tmp$_3 = $receiver_0.iterator();
      while (tmp$_3.hasNext()) {
        var item_0 = tmp$_3.next();
        destination_0.add_11rb$(item_0.name);
      }
      tmp$_1.info_61zpoe$(tmp$_2 + destination_0);
    }
  };
  function PspElf$updateModuleFunctions$lambda$lambda(this$PspElf, closure$_module, closure$nfunc) {
    return function (state) {
      var tmp$, tmp$_0;
      this$PspElf.logger_0.error_61zpoe$(closure$_module.toString());
      this$PspElf.logger_0.error_61zpoe$("updateModuleFunctions: Not implemented '" + toString((tmp$ = closure$nfunc.v) != null ? tmp$.name : null) + "'");
      lang.Debugger.enterDebugger();
      throw Error_init("updateModuleFunctions: Not implemented '" + toString((tmp$_0 = closure$nfunc.v) != null ? tmp$_0.name : null) + "'");
    };
  }
  function PspElf$updateModuleFunctions$lambda(closure$_module, closure$unknownFunctions, closure$moduleImport, this$PspElf, closure$registeredNativeFunctions) {
    return function (nid, n) {
      var nfunc = {v: closure$_module.getByNidOrNull_za3lpa$(nid)};
      if (nfunc.v == null) {
        closure$unknownFunctions.add_11rb$(format_0("'%s':0x%08X", [closure$_module.name, nid]));
        nfunc.v = new NativeFunction(format_0('%s:0x%08X', [closure$moduleImport.name, nid]), Kotlin.Long.fromInt(nid), 150, -1, PspElf$updateModuleFunctions$lambda$lambda(this$PspElf, closure$_module, nfunc));
      }
      closure$registeredNativeFunctions.add_11rb$(nfunc.v);
      var $receiver = this$PspElf.addressInfo_0.names;
      var key = closure$moduleImport.callAddress + (n * 8 | 0) | 0;
      var value = nfunc.v.name;
      $receiver.put_xwzc9p$(key, value);
      var syscallId = this$PspElf.syscallManager_0.register_u5woyh$(nfunc.v);
      return syscallId;
    };
  }
  PspElf.prototype.updateModuleFunctions_0 = function (moduleImport) {
    var tmp$;
    this.logger_0.info_61zpoe$('Import module: ' + moduleImport.name);
    var _module = this.moduleManager_0.getByName_61zpoe$(moduleImport.name);
    var nidsStream = sliceWithSize_0(openSync_0(this.memory_0), moduleImport.nidAddress, moduleImport.functionCount * 4 | 0);
    var callStream = sliceWithSize_0(openSync_0(this.memory_0), moduleImport.callAddress, moduleImport.functionCount * 8 | 0);
    var registeredNativeFunctions = ArrayList_init();
    var unknownFunctions = ArrayList_init();
    var registerN = PspElf$updateModuleFunctions$lambda(_module, unknownFunctions, moduleImport, this, registeredNativeFunctions);
    tmp$ = moduleImport.functionCount;
    for (var n = 0; n < tmp$; n++) {
      var nid = readS32_le_0(nidsStream);
      var syscall = registerN(nid, n);
      write32_le(callStream, 65011720);
      write32_le(callStream, 12 | syscall << 6);
    }
    if (unknownFunctions.size > 0) {
      this.logger_0.warn_61zpoe$("Can't find functions: " + toString(unknownFunctions));
    }
    return new PspElf$Res1(moduleImport.name, registeredNativeFunctions);
  };
  function PspElf$Res1(name, registeredNativeFunctions) {
    this.name = name;
    this.registeredNativeFunctions = registeredNativeFunctions;
  }
  PspElf$Res1.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Res1',
    interfaces: []
  };
  PspElf.prototype.updateModuleVars_0 = function (moduleImport) {
  };
  PspElf.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspElf',
    interfaces: []
  };
  function Bits(offset, size) {
    this.offset = offset;
    this.size = size;
  }
  Bits.prototype.getValue_qkrva5$ = function (i, p) {
    return extract_0(i.data, this.offset, this.size);
  };
  Bits.prototype.setValue_445zcl$ = function (i, p, value) {
    i.data = insert(i.data, value, this.offset, this.size);
  };
  Bits.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Bits',
    interfaces: []
  };
  function Instruction(address, data) {
    this.address = address;
    this.data = data;
    this.u_imm16_u2rt4z$_0 = new Bits(0, 16);
    this.jump_bits_n8rtjk$_0 = new Bits(0, 26);
  }
  Object.defineProperty(Instruction.prototype, 'u_imm16', {
    get: function () {
      return this.u_imm16_u2rt4z$_0.getValue_qkrva5$(this, new PropertyMetadata('u_imm16'));
    },
    set: function (u_imm16) {
      this.u_imm16_u2rt4z$_0.setValue_445zcl$(this, new PropertyMetadata('u_imm16'), u_imm16);
    }
  });
  Object.defineProperty(Instruction.prototype, 'jump_bits', {
    get: function () {
      return this.jump_bits_n8rtjk$_0.getValue_qkrva5$(this, new PropertyMetadata('jump_bits'));
    },
    set: function (jump_bits) {
      this.jump_bits_n8rtjk$_0.setValue_445zcl$(this, new PropertyMetadata('jump_bits'), jump_bits);
    }
  });
  Object.defineProperty(Instruction.prototype, 'jump_real', {
    get: function () {
      return this.jump_bits * 4 | 0;
    },
    set: function (value) {
      this.jump_bits = value / 4 | 0;
    }
  });
  Instruction.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Instruction',
    interfaces: []
  };
  Instruction.prototype.component1 = function () {
    return this.address;
  };
  Instruction.prototype.component2 = function () {
    return this.data;
  };
  Instruction.prototype.copy_vux9f0$ = function (address, data) {
    return new Instruction(address === void 0 ? this.address : address, data === void 0 ? this.data : data);
  };
  Instruction.prototype.toString = function () {
    return 'Instruction(address=' + Kotlin.toString(this.address) + (', data=' + Kotlin.toString(this.data)) + ')';
  };
  Instruction.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.address) | 0;
    result = result * 31 + Kotlin.hashCode(this.data) | 0;
    return result;
  };
  Instruction.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.address, other.address) && Kotlin.equals(this.data, other.data)))));
  };
  function Ge(emulator) {
    this.emulator_lfbrkc$_0 = emulator;
    this.state = new GeState();
    this.queue = ArrayList_init();
    this.lists = new ResourceList('GeList', void 0, Ge$lists$lambda(this));
    this.onCompleted = new Signal2();
  }
  Object.defineProperty(Ge.prototype, 'emulator', {
    get: function () {
      return this.emulator_lfbrkc$_0;
    }
  });
  Ge.prototype.listEnqueue_56435g$ = function (start, stall, callback, pspGeListArgs) {
    var $receiver = this.lists.alloc();
    $receiver.start = start;
    $receiver.stall = stall;
    $receiver.callback = callback;
    $receiver.pspGeListArgs = pspGeListArgs;
    $receiver.PC = start;
    $receiver.reset();
    var list = $receiver;
    this.queue.add_11rb$(list);
    return list;
  };
  Ge.prototype.run = function () {
    while (!this.queue.isEmpty()) {
      var item = first(this.queue);
      item.run();
      if (item.completed) {
        this.lists.free_51l2nw$(item);
        this.queue.removeAt_za3lpa$(0);
      }
       else {
        break;
      }
    }
    this.onCompleted.invoke_11rb$(Unit);
  };
  Ge.prototype.emitBatch_yqbwi7$ = function (batch) {
    get_gpu(this).addBatch_yqbwi7$(batch);
  };
  Ge.prototype.sync_za3lpa$ = function (syncType) {
    this.run();
  };
  Ge.prototype.reset = function () {
    this.state.reset();
    this.queue.clear();
    this.lists.reset();
    this.onCompleted.clear();
  };
  function Ge$lists$lambda(this$Ge) {
    return function (it) {
      return new GeList(this$Ge, it);
    };
  }
  Ge.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Ge',
    interfaces: [WithEmulator]
  };
  function GeCallback(id) {
    this.id_b9usb9$_0 = id;
    this.signal_func = 0;
    this.signal_arg = 0;
    this.finish_func = 0;
    this.finish_arg = 0;
  }
  Object.defineProperty(GeCallback.prototype, 'id', {
    get: function () {
      return this.id_b9usb9$_0;
    }
  });
  GeCallback.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeCallback',
    interfaces: [ResourceItem]
  };
  GeCallback.prototype.component1 = function () {
    return this.id;
  };
  GeCallback.prototype.copy_za3lpa$ = function (id) {
    return new GeCallback(id === void 0 ? this.id : id);
  };
  GeCallback.prototype.toString = function () {
    return 'GeCallback(id=' + Kotlin.toString(this.id) + ')';
  };
  GeCallback.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  GeCallback.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function PrimAction(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PrimAction_initFields() {
    PrimAction_initFields = function () {
    };
    PrimAction$NOTHING_instance = new PrimAction('NOTHING', 0);
    PrimAction$FLUSH_PRIM_instance = new PrimAction('FLUSH_PRIM', 1);
  }
  var PrimAction$NOTHING_instance;
  function PrimAction$NOTHING_getInstance() {
    PrimAction_initFields();
    return PrimAction$NOTHING_instance;
  }
  var PrimAction$FLUSH_PRIM_instance;
  function PrimAction$FLUSH_PRIM_getInstance() {
    PrimAction_initFields();
    return PrimAction$FLUSH_PRIM_instance;
  }
  PrimAction.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PrimAction',
    interfaces: [Enum]
  };
  function PrimAction$values() {
    return [PrimAction$NOTHING_getInstance(), PrimAction$FLUSH_PRIM_getInstance()];
  }
  PrimAction.values = PrimAction$values;
  function PrimAction$valueOf(name) {
    switch (name) {
      case 'NOTHING':
        return PrimAction$NOTHING_getInstance();
      case 'FLUSH_PRIM':
        return PrimAction$FLUSH_PRIM_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.PrimAction.' + name);
    }
  }
  PrimAction.valueOf_61zpoe$ = PrimAction$valueOf;
  function ListSyncKind(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ListSyncKind_initFields() {
    ListSyncKind_initFields = function () {
    };
    ListSyncKind$DONE_instance = new ListSyncKind('DONE', 0);
    ListSyncKind$QUEUED_instance = new ListSyncKind('QUEUED', 1);
    ListSyncKind$DRAWING_DONE_instance = new ListSyncKind('DRAWING_DONE', 2);
    ListSyncKind$STALL_REACHED_instance = new ListSyncKind('STALL_REACHED', 3);
    ListSyncKind$CANCEL_DONE_instance = new ListSyncKind('CANCEL_DONE', 4);
  }
  var ListSyncKind$DONE_instance;
  function ListSyncKind$DONE_getInstance() {
    ListSyncKind_initFields();
    return ListSyncKind$DONE_instance;
  }
  var ListSyncKind$QUEUED_instance;
  function ListSyncKind$QUEUED_getInstance() {
    ListSyncKind_initFields();
    return ListSyncKind$QUEUED_instance;
  }
  var ListSyncKind$DRAWING_DONE_instance;
  function ListSyncKind$DRAWING_DONE_getInstance() {
    ListSyncKind_initFields();
    return ListSyncKind$DRAWING_DONE_instance;
  }
  var ListSyncKind$STALL_REACHED_instance;
  function ListSyncKind$STALL_REACHED_getInstance() {
    ListSyncKind_initFields();
    return ListSyncKind$STALL_REACHED_instance;
  }
  var ListSyncKind$CANCEL_DONE_instance;
  function ListSyncKind$CANCEL_DONE_getInstance() {
    ListSyncKind_initFields();
    return ListSyncKind$CANCEL_DONE_instance;
  }
  ListSyncKind.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ListSyncKind',
    interfaces: [Enum]
  };
  function ListSyncKind$values() {
    return [ListSyncKind$DONE_getInstance(), ListSyncKind$QUEUED_getInstance(), ListSyncKind$DRAWING_DONE_getInstance(), ListSyncKind$STALL_REACHED_getInstance(), ListSyncKind$CANCEL_DONE_getInstance()];
  }
  ListSyncKind.values = ListSyncKind$values;
  function ListSyncKind$valueOf(name) {
    switch (name) {
      case 'DONE':
        return ListSyncKind$DONE_getInstance();
      case 'QUEUED':
        return ListSyncKind$QUEUED_getInstance();
      case 'DRAWING_DONE':
        return ListSyncKind$DRAWING_DONE_getInstance();
      case 'STALL_REACHED':
        return ListSyncKind$STALL_REACHED_getInstance();
      case 'CANCEL_DONE':
        return ListSyncKind$CANCEL_DONE_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.ListSyncKind.' + name);
    }
  }
  ListSyncKind.valueOf_61zpoe$ = ListSyncKind$valueOf;
  function PspGeSyncType() {
    PspGeSyncType_instance = this;
    this.PSP_GE_LIST_DONE = 0;
    this.PSP_GE_LIST_QUEUED = 1;
    this.PSP_GE_LIST_DRAWING_DONE = 2;
    this.PSP_GE_LIST_STALL_REACHED = 3;
    this.PSP_GE_LIST_CANCEL_DONE = 4;
  }
  PspGeSyncType.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'PspGeSyncType',
    interfaces: []
  };
  var PspGeSyncType_instance = null;
  function PspGeSyncType_getInstance() {
    if (PspGeSyncType_instance === null) {
      new PspGeSyncType();
    }
    return PspGeSyncType_instance;
  }
  function GeBatchData(state, primType, vertexCount, vertices, indices, texVersion) {
    if (texVersion === void 0)
      texVersion = 0;
    this.state = state;
    this.primType = primType;
    this.vertexCount = vertexCount;
    this.vertices = vertices;
    this.indices = indices;
    this.texVersion = texVersion;
  }
  GeBatchData.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeBatchData',
    interfaces: []
  };
  GeBatchData.prototype.component1 = function () {
    return this.state;
  };
  GeBatchData.prototype.component2 = function () {
    return this.primType;
  };
  GeBatchData.prototype.component3 = function () {
    return this.vertexCount;
  };
  GeBatchData.prototype.component4 = function () {
    return this.vertices;
  };
  GeBatchData.prototype.component5 = function () {
    return this.indices;
  };
  GeBatchData.prototype.component6 = function () {
    return this.texVersion;
  };
  GeBatchData.prototype.copy_yw0mk9$ = function (state, primType, vertexCount, vertices, indices, texVersion) {
    return new GeBatchData(state === void 0 ? this.state : state, primType === void 0 ? this.primType : primType, vertexCount === void 0 ? this.vertexCount : vertexCount, vertices === void 0 ? this.vertices : vertices, indices === void 0 ? this.indices : indices, texVersion === void 0 ? this.texVersion : texVersion);
  };
  GeBatchData.prototype.toString = function () {
    return 'GeBatchData(state=' + Kotlin.toString(this.state) + (', primType=' + Kotlin.toString(this.primType)) + (', vertexCount=' + Kotlin.toString(this.vertexCount)) + (', vertices=' + Kotlin.toString(this.vertices)) + (', indices=' + Kotlin.toString(this.indices)) + (', texVersion=' + Kotlin.toString(this.texVersion)) + ')';
  };
  GeBatchData.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.state) | 0;
    result = result * 31 + Kotlin.hashCode(this.primType) | 0;
    result = result * 31 + Kotlin.hashCode(this.vertexCount) | 0;
    result = result * 31 + Kotlin.hashCode(this.vertices) | 0;
    result = result * 31 + Kotlin.hashCode(this.indices) | 0;
    result = result * 31 + Kotlin.hashCode(this.texVersion) | 0;
    return result;
  };
  GeBatchData.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.state, other.state) && Kotlin.equals(this.primType, other.primType) && Kotlin.equals(this.vertexCount, other.vertexCount) && Kotlin.equals(this.vertices, other.vertices) && Kotlin.equals(this.indices, other.indices) && Kotlin.equals(this.texVersion, other.texVersion)))));
  };
  function GeBatch() {
    this.vtype = new VertexType();
    this.state = new GeState();
    this.data_i0v1w9$_0 = this.data_i0v1w9$_0;
    this.tempMatrix_0 = new Matrix4();
    this.modelViewProjMatrix = new Matrix4();
  }
  Object.defineProperty(GeBatch.prototype, 'data', {
    get: function () {
      if (this.data_i0v1w9$_0 == null)
        return throwUPAE('data');
      return this.data_i0v1w9$_0;
    },
    set: function (data) {
      this.data_i0v1w9$_0 = data;
    }
  });
  Object.defineProperty(GeBatch.prototype, 'primType', {
    get: function () {
      return this.data.primType;
    }
  });
  Object.defineProperty(GeBatch.prototype, 'vertexCount', {
    get: function () {
      return this.data.vertexCount;
    }
  });
  Object.defineProperty(GeBatch.prototype, 'vertices', {
    get: function () {
      return this.data.vertices;
    }
  });
  Object.defineProperty(GeBatch.prototype, 'indices', {
    get: function () {
      return this.data.indices;
    }
  });
  GeBatch.prototype.initData_uivub3$ = function (data, emulator) {
    this.data = data;
    this.state.setTo_q5rwfd$(data.state);
    init(this.vtype, this.state);
    if (this.vtype.transform2D) {
      this.modelViewProjMatrix.setToOrtho_w8lrqs$(0.0, 0.0, 480.0, 272.0, 0.0, -65535);
    }
     else {
      this.modelViewProjMatrix.setToIdentity();
      this.modelViewProjMatrix.setToMultiply_np8ur8$(this.modelViewProjMatrix, this.state.getProjMatrix_zhv01d$(this.tempMatrix_0));
      this.modelViewProjMatrix.setToMultiply_np8ur8$(this.modelViewProjMatrix, this.state.getViewMatrix_zhv01d$(this.tempMatrix_0));
      this.modelViewProjMatrix.setToMultiply_np8ur8$(this.modelViewProjMatrix, this.state.getWorldMatrix_zhv01d$(this.tempMatrix_0));
    }
  };
  GeBatch.prototype.hasTexture = function () {
    return this.state.texture.hasTexture;
  };
  GeBatch.prototype.getTextureId = function () {
    var texture = this.state.texture;
    if (texture.hasTexture) {
      return texture.mipmap.address;
    }
    return 0;
  };
  GeBatch.prototype.getTextureHash_lh19bh$ = function (mem) {
    var tmp$;
    var hash = 0;
    var texture = this.state.texture;
    if (texture.hasTexture) {
      var mipmap = texture.mipmaps.get_za3lpa$(0);
      hash = hash + mem.hash_vux9f0$(mipmap.address, mipmap.sizeInBytes / 4 | 0) | 0;
      if (texture.hasClut) {
        var clut = texture.clut;
        tmp$ = clut.numberOfColors;
        for (var n = 0; n < tmp$; n++)
          hash = hash + clut.getRawColor_ktor8l$(mem, n) | 0;
      }
    }
    return hash;
  };
  GeBatch.prototype.getTextureBitmap_lh19bh$ = function (mem) {
    var texture = this.state.texture;
    if (texture.hasTexture) {
      var mipmap = texture.mipmaps.get_za3lpa$(0);
      var colorData = mem.readBytes_vux9f0$(mipmap.address, mipmap.sizeInBytes);
      var clutReader = texture.hasClut ? texture.clut : null;
      var texWidth = mipmap.bufferWidth;
      var texHeight = mipmap.textureHeight;
      return setTo(new Bitmap32(texWidth, texHeight), texture.pixelFormat, colorData, mem, clutReader, texture.swizzled, texWidth, texHeight);
    }
     else {
      return null;
    }
  };
  GeBatch.prototype.getEffectiveTextureMatrix_zhv01d$ = function (out) {
    if (out === void 0)
      out = new Matrix4();
    var transform = new Matrix2d();
    if (this.vtype.transform2D) {
      var mipmap = this.state.texture.mipmap;
      transform.setTransform_8f3r3e$(0.0, 0.0, 1.0 / mipmap.bufferWidth, 1.0 / mipmap.textureHeight, 0.0, 0.0, 0.0);
    }
     else {
      transform.setTransform_8f3r3e$(this.state.texture.offsetU, this.state.texture.offsetV, this.state.texture.scaleU, this.state.texture.scaleV, 0.0, 0.0, 0.0);
    }
    toMatrix4(transform, out);
    return out;
  };
  GeBatch.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeBatch',
    interfaces: []
  };
  function toMatrix4($receiver, out) {
    if (out === void 0)
      out = new Matrix4();
    return out.setTo_8odxlg$($receiver.a, $receiver.b, $receiver.tx, 0.0, $receiver.c, $receiver.d, $receiver.ty, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
  }
  function GeBatchBuilder(ge) {
    this.ge = ge;
    this.state = this.ge.state;
    this.mem = get_mem(this.ge);
    this.primBatchPrimitiveType = -1;
    this.primitiveType = null;
    this.vertexType = new VertexType(-1);
    this.vertexCount = 0;
    this.vertexSize = 0;
    this.vertexBuffer = new Int8Array(262144 * 16 | 0);
    this.vertexBufferMem = FastMemory.Companion.wrap_fqrh44$(this.vertexBuffer);
    this.vertexBufferI8 = this.vertexBufferMem.i8;
    this.vertexBufferI16 = this.vertexBufferMem.i16;
    this.vertexBufferI32 = this.vertexBufferMem.i32;
    this.vertexBufferPos = 0;
    this.indexBuffer = new Int16Array(262144);
    this.indexBufferPos = 0;
    this.texVersion = 0;
  }
  GeBatchBuilder.prototype.reset = function () {
    this.flush();
    this.primBatchPrimitiveType = -1;
    this.primitiveType = null;
    this.vertexType.v = -1;
    this.vertexCount = 0;
    this.vertexBufferPos = 0;
    this.indexBufferPos = 0;
    this.vertexSize = 0;
  };
  GeBatchBuilder.prototype.setVertexKind_hlyuka$ = function (primitiveType, state) {
    if (!equals(this.primitiveType, primitiveType) || this.vertexType.v !== state.vertexType)
      this.flush();
    init(this.vertexType, state);
    this.primitiveType = primitiveType;
    this.vertexSize = this.vertexType.size;
  };
  GeBatchBuilder.prototype.tflush = function () {
    this.texVersion = this.texVersion + 1 | 0;
  };
  GeBatchBuilder.prototype.tsync = function () {
  };
  GeBatchBuilder.prototype.flush = function () {
    var tmp$;
    if (this.indexBufferPos > 0) {
      this.ge.emitBatch_yqbwi7$(new GeBatchData(this.ge.state.data.slice(), (tmp$ = this.primitiveType) != null ? tmp$ : PrimitiveType$TRIANGLES_getInstance(), this.indexBufferPos, copyOf(this.vertexBuffer, this.vertexBufferPos), copyOf_0(this.indexBuffer, this.indexBufferPos), this.texVersion));
      this.vertexCount = 0;
      this.vertexBufferPos = 0;
      this.indexBufferPos = 0;
    }
  };
  GeBatchBuilder.prototype.putVertex_za3lpa$ = function (address) {
    this.mem.read_3fge6q$(address, this.vertexBuffer, this.vertexBufferPos, this.vertexSize);
    this.vertexBufferPos = this.vertexBufferPos + this.vertexSize | 0;
    this.vertexCount = this.vertexCount + 1 | 0;
  };
  GeBatchBuilder.prototype.putIndex_za3lpa$ = function (index) {
    var tmp$;
    this.indexBuffer[tmp$ = this.indexBufferPos, this.indexBufferPos = tmp$ + 1 | 0, tmp$] = toShort(index);
  };
  GeBatchBuilder.prototype.addIndices_za3lpa$ = function (count) {
    if (equals(this.primitiveType, PrimitiveType$SPRITES_getInstance()))
      this.addIndicesSprites_za3lpa$(count);
    else
      this.addIndicesNormal_za3lpa$(count);
  };
  GeBatchBuilder.prototype.addIndicesSprites_za3lpa$ = function (count) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5;
    var nsprites = count / 2 | 0;
    if (equals(this.vertexType.index, IndexEnum$VOID_getInstance())) {
      var bp = this.indexBufferPos;
      var start = this.vertexCount;
      var end = start + (nsprites * 2 | 0) | 0;
      for (var n = 0; n < nsprites; n++) {
        var start2 = start + (n * 2 | 0) | 0;
        var end2 = end + (n * 2 | 0) | 0;
        this.indexBuffer[tmp$ = bp, bp = tmp$ + 1 | 0, tmp$] = toShort(start2 + 0 | 0);
        this.indexBuffer[tmp$_0 = bp, bp = tmp$_0 + 1 | 0, tmp$_0] = toShort(end2 + 1 | 0);
        this.indexBuffer[tmp$_1 = bp, bp = tmp$_1 + 1 | 0, tmp$_1] = toShort(end2 + 0 | 0);
        this.indexBuffer[tmp$_2 = bp, bp = tmp$_2 + 1 | 0, tmp$_2] = toShort(end2 + 0 | 0);
        this.indexBuffer[tmp$_3 = bp, bp = tmp$_3 + 1 | 0, tmp$_3] = toShort(end2 + 1 | 0);
        this.indexBuffer[tmp$_4 = bp, bp = tmp$_4 + 1 | 0, tmp$_4] = toShort(start2 + 1 | 0);
      }
      this.indexBufferPos = bp;
    }
     else {
      throw new NotImplementedError_init('An operation is not implemented: ' + ('addIndicesSprites: ' + this.vertexType.index + ', ' + count));
    }
    var vertexSize_0 = this.vertexSize * 0 | 0;
    var vertexSize_1 = this.vertexSize * 1 | 0;
    var vertexSize_2 = this.vertexSize * 2 | 0;
    var posSize = this.vertexType.pos.nbytes;
    var posOffsetX = this.vertexType.posOffset;
    var posOffsetY = this.vertexType.posOffset + posSize | 0;
    var texSize = this.vertexType.tex.nbytes;
    var texOffsetX = this.vertexType.texOffset;
    var texOffsetY = this.vertexType.texOffset + texSize | 0;
    var colSize = this.vertexType.colSize;
    var colOffset = this.vertexType.colOffset;
    var svpos = this.vertexBufferPos;
    var dvpos = this.vertexBufferPos + Kotlin.imul(nsprites, vertexSize_2) | 0;
    this.mem.read_3fge6q$(this.state.vertexAddress, this.vertexBuffer, svpos, Kotlin.imul(nsprites, vertexSize_2));
    this.mem.read_3fge6q$(this.state.vertexAddress, this.vertexBuffer, dvpos, Kotlin.imul(nsprites, vertexSize_2));
    tmp$_5 = this.state;
    tmp$_5.vertexAddress = tmp$_5.vertexAddress + Kotlin.imul(nsprites, vertexSize_2) | 0;
    for (var n_0 = 0; n_0 < nsprites; n_0++) {
      var TLpos = svpos + Kotlin.imul(n_0, vertexSize_2) | 0;
      var BRpos = TLpos + vertexSize_1 | 0;
      var ssvpos = svpos + Kotlin.imul(n_0, vertexSize_2) | 0;
      var dsvpos = dvpos + Kotlin.imul(n_0, vertexSize_2) | 0;
      this.putGenVertexColor_0(ssvpos + vertexSize_0 | 0, BRpos, TLpos, TLpos, posSize, posOffsetX, posOffsetY, texSize, texOffsetX, texOffsetY, colOffset, colSize);
      this.putGenVertexColor_0(ssvpos + vertexSize_1 | 0, BRpos, BRpos, BRpos, posSize, posOffsetX, posOffsetY, texSize, texOffsetX, texOffsetY, colOffset, colSize);
      this.putGenVertex_0(dsvpos + vertexSize_0 | 0, BRpos, TLpos, BRpos, posSize, posOffsetX, posOffsetY, texSize, texOffsetX, texOffsetY, colOffset, colSize);
      this.putGenVertex_0(dsvpos + vertexSize_1 | 0, BRpos, BRpos, TLpos, posSize, posOffsetX, posOffsetY, texSize, texOffsetX, texOffsetY, colOffset, colSize);
    }
    this.vertexCount = this.vertexCount + (nsprites * 4 | 0) | 0;
    this.vertexBufferPos = this.vertexBufferPos + (Kotlin.imul(nsprites, this.vertexSize) * 4 | 0) | 0;
  };
  GeBatchBuilder.prototype.putGenVertex_0 = function (dest, base, gx, gy, posSize, posOffsetX, posOffsetY, texSize, texOffsetX, texOffsetY, colOffset, colSize) {
    if (this.vertexType.hasColor) {
      this.smallVBCopy_0(base + colOffset | 0, dest + colOffset | 0, colSize);
    }
    if (this.vertexType.hasPosition) {
      this.smallVBCopy_0(gx + posOffsetX | 0, dest + posOffsetX | 0, posSize);
      this.smallVBCopy_0(gy + posOffsetY | 0, dest + posOffsetY | 0, posSize);
    }
    if (this.vertexType.hasTexture) {
      this.smallVBCopy_0(gx + texOffsetX | 0, dest + texOffsetX | 0, texSize);
      this.smallVBCopy_0(gy + texOffsetY | 0, dest + texOffsetY | 0, texSize);
    }
  };
  GeBatchBuilder.prototype.putGenVertexColor_0 = function (dest, base, gx, gy, posSize, posOffsetX, posOffsetY, texSize, texOffsetX, texOffsetY, colOffset, colSize) {
    if (this.vertexType.hasColor) {
      this.smallVBCopy_0(base + colOffset | 0, dest + colOffset | 0, colSize);
    }
  };
  GeBatchBuilder.prototype.smallVBCopy_0 = function (src, dst, size) {
    if (size === 1) {
      this.vertexBufferI8[dst] = this.vertexBufferI8[src];
    }
     else if (size === 2) {
      this.vertexBufferI16[dst >>> 1] = this.vertexBufferI16[src >>> 1];
    }
     else if (size === 4) {
      this.vertexBufferI32[dst >>> 2] = this.vertexBufferI32[src >>> 2];
    }
  };
  GeBatchBuilder.prototype.addIndicesNormal_za3lpa$ = function (count) {
    var tmp$, tmp$_0;
    var maxIdx = 0;
    tmp$ = this.vertexType.index;
    if (equals(tmp$, IndexEnum$VOID_getInstance())) {
      var vertexCount = this.vertexCount;
      for (var n = 0; n < count; n++)
        this.indexBuffer[this.indexBufferPos + n | 0] = toShort(vertexCount + n | 0);
      this.indexBufferPos = this.indexBufferPos + count | 0;
      maxIdx = count;
    }
     else if (equals(tmp$, IndexEnum$SHORT_getInstance())) {
      var iaddr = this.state.indexAddress;
      for (var n_0 = 0; n_0 < count; n_0++) {
        var idx = this.mem.lhu_za3lpa$(iaddr + (n_0 * 2 | 0) | 0);
        var a = maxIdx;
        var b = idx + 1 | 0;
        maxIdx = Math_0.max(a, b);
        this.putIndex_za3lpa$(idx);
      }
    }
     else {
      throw new NotImplementedError_init('An operation is not implemented: ' + ('addIndices: ' + this.vertexType.index + ', ' + count));
    }
    this.mem.read_3fge6q$(this.state.vertexAddress, this.vertexBuffer, this.vertexBufferPos, Kotlin.imul(this.vertexSize, maxIdx));
    this.vertexBufferPos = this.vertexBufferPos + Kotlin.imul(this.vertexSize, maxIdx) | 0;
    tmp$_0 = this.state;
    tmp$_0.vertexAddress = tmp$_0.vertexAddress + Kotlin.imul(this.vertexSize, maxIdx) | 0;
    this.vertexCount = this.vertexCount + maxIdx | 0;
  };
  GeBatchBuilder.prototype.addUnoptimizedShape_omiwza$ = function (primitiveType, indices, vertices, verticesCount, hasPosition, hasColor, hasTexture, hasNormal, hasWeights) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
    var indexCount = indices.length;
    var vtype = new VertexType(0);
    if (hasPosition)
      vtype.pos = NumericEnum$FLOAT_getInstance();
    if (hasColor)
      vtype.col = ColorEnum$COLOR8888_getInstance();
    if (hasTexture)
      vtype.tex = NumericEnum$FLOAT_getInstance();
    if (hasNormal)
      vtype.normal = NumericEnum$FLOAT_getInstance();
    if (hasWeights)
      vtype.weight = NumericEnum$FLOAT_getInstance();
    var stateData = this.ge.state.data.slice();
    var vertexData = new Int8Array((vertices.length * 4 | 0) * 16 | 0);
    var fmem = FastMemory.Companion.wrap_fqrh44$(vertexData);
    var ii = fmem.i32;
    var ff = fmem.f32;
    var vpos = 0;
    stateData[GeOpCodes_getInstance().VERTEXTYPE] = vtype.v;
    for (var n = 0; n < verticesCount; n++) {
      var vertex = vertices[n];
      if (hasWeights) {
        throw new NotImplementedError_init('An operation is not implemented: ' + 'weights');
      }
      if (hasTexture) {
        ff[tmp$ = vpos, vpos = tmp$ + 1 | 0, tmp$] = vertex.tex[0];
        ff[tmp$_0 = vpos, vpos = tmp$_0 + 1 | 0, tmp$_0] = vertex.tex[1];
      }
      if (hasColor) {
        ii[tmp$_1 = vpos, vpos = tmp$_1 + 1 | 0, tmp$_1] = vertex.color;
      }
      if (hasNormal) {
        ff[tmp$_2 = vpos, vpos = tmp$_2 + 1 | 0, tmp$_2] = vertex.normal[0];
        ff[tmp$_3 = vpos, vpos = tmp$_3 + 1 | 0, tmp$_3] = vertex.normal[1];
        ff[tmp$_4 = vpos, vpos = tmp$_4 + 1 | 0, tmp$_4] = vertex.normal[2];
      }
      if (hasPosition) {
        ff[tmp$_5 = vpos, vpos = tmp$_5 + 1 | 0, tmp$_5] = vertex.pos[0];
        ff[tmp$_6 = vpos, vpos = tmp$_6 + 1 | 0, tmp$_6] = vertex.pos[1];
        ff[tmp$_7 = vpos, vpos = tmp$_7 + 1 | 0, tmp$_7] = vertex.pos[2];
      }
    }
    this.ge.emitBatch_yqbwi7$(new GeBatchData(stateData, primitiveType, indexCount, copyOf(vertexData, vpos * 4 | 0), indices.slice(), this.texVersion));
  };
  GeBatchBuilder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeBatchBuilder',
    interfaces: []
  };
  function CullingDirection(name, ordinal, id) {
    Enum.call(this);
    this.id_uo0vyv$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function CullingDirection_initFields() {
    CullingDirection_initFields = function () {
    };
    CullingDirection$COUNTER_CLOCK_WISE_instance = new CullingDirection('COUNTER_CLOCK_WISE', 0, 0);
    CullingDirection$CLOCK_WISE_instance = new CullingDirection('CLOCK_WISE', 1, 1);
    CullingDirection$Companion_getInstance();
  }
  Object.defineProperty(CullingDirection.prototype, 'id', {
    get: function () {
      return this.id_uo0vyv$_0;
    }
  });
  var CullingDirection$COUNTER_CLOCK_WISE_instance;
  function CullingDirection$COUNTER_CLOCK_WISE_getInstance() {
    CullingDirection_initFields();
    return CullingDirection$COUNTER_CLOCK_WISE_instance;
  }
  var CullingDirection$CLOCK_WISE_instance;
  function CullingDirection$CLOCK_WISE_getInstance() {
    CullingDirection_initFields();
    return CullingDirection$CLOCK_WISE_instance;
  }
  function CullingDirection$Companion() {
    CullingDirection$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, CullingDirection$values());
  }
  CullingDirection$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var CullingDirection$Companion_instance = null;
  function CullingDirection$Companion_getInstance() {
    CullingDirection_initFields();
    if (CullingDirection$Companion_instance === null) {
      new CullingDirection$Companion();
    }
    return CullingDirection$Companion_instance;
  }
  CullingDirection.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CullingDirection',
    interfaces: [IdEnum, Enum]
  };
  function CullingDirection$values() {
    return [CullingDirection$COUNTER_CLOCK_WISE_getInstance(), CullingDirection$CLOCK_WISE_getInstance()];
  }
  CullingDirection.values = CullingDirection$values;
  function CullingDirection$valueOf(name) {
    switch (name) {
      case 'COUNTER_CLOCK_WISE':
        return CullingDirection$COUNTER_CLOCK_WISE_getInstance();
      case 'CLOCK_WISE':
        return CullingDirection$CLOCK_WISE_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.CullingDirection.' + name);
    }
  }
  CullingDirection.valueOf_61zpoe$ = CullingDirection$valueOf;
  function SyncType(name, ordinal, id) {
    Enum.call(this);
    this.id_5w2nz7$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function SyncType_initFields() {
    SyncType_initFields = function () {
    };
    SyncType$WAIT_FOR_COMPLETION_instance = new SyncType('WAIT_FOR_COMPLETION', 0, 0);
    SyncType$PEEK_instance = new SyncType('PEEK', 1, 1);
    SyncType$Companion_getInstance();
  }
  Object.defineProperty(SyncType.prototype, 'id', {
    get: function () {
      return this.id_5w2nz7$_0;
    }
  });
  var SyncType$WAIT_FOR_COMPLETION_instance;
  function SyncType$WAIT_FOR_COMPLETION_getInstance() {
    SyncType_initFields();
    return SyncType$WAIT_FOR_COMPLETION_instance;
  }
  var SyncType$PEEK_instance;
  function SyncType$PEEK_getInstance() {
    SyncType_initFields();
    return SyncType$PEEK_instance;
  }
  function SyncType$Companion() {
    SyncType$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, SyncType$values());
  }
  SyncType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var SyncType$Companion_instance = null;
  function SyncType$Companion_getInstance() {
    SyncType_initFields();
    if (SyncType$Companion_instance === null) {
      new SyncType$Companion();
    }
    return SyncType$Companion_instance;
  }
  SyncType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SyncType',
    interfaces: [IdEnum, Enum]
  };
  function SyncType$values() {
    return [SyncType$WAIT_FOR_COMPLETION_getInstance(), SyncType$PEEK_getInstance()];
  }
  SyncType.values = SyncType$values;
  function SyncType$valueOf(name) {
    switch (name) {
      case 'WAIT_FOR_COMPLETION':
        return SyncType$WAIT_FOR_COMPLETION_getInstance();
      case 'PEEK':
        return SyncType$PEEK_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.SyncType.' + name);
    }
  }
  SyncType.valueOf_61zpoe$ = SyncType$valueOf;
  function DisplayListStatus(name, ordinal, id) {
    Enum.call(this);
    this.id_xiznn0$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function DisplayListStatus_initFields() {
    DisplayListStatus_initFields = function () {
    };
    DisplayListStatus$COMPLETED_instance = new DisplayListStatus('COMPLETED', 0, 0);
    DisplayListStatus$QUEUED_instance = new DisplayListStatus('QUEUED', 1, 1);
    DisplayListStatus$DRAWING_instance = new DisplayListStatus('DRAWING', 2, 2);
    DisplayListStatus$STALLING_instance = new DisplayListStatus('STALLING', 3, 3);
    DisplayListStatus$PAUSED_instance = new DisplayListStatus('PAUSED', 4, 4);
    DisplayListStatus$Companion_getInstance();
  }
  Object.defineProperty(DisplayListStatus.prototype, 'id', {
    get: function () {
      return this.id_xiznn0$_0;
    }
  });
  var DisplayListStatus$COMPLETED_instance;
  function DisplayListStatus$COMPLETED_getInstance() {
    DisplayListStatus_initFields();
    return DisplayListStatus$COMPLETED_instance;
  }
  var DisplayListStatus$QUEUED_instance;
  function DisplayListStatus$QUEUED_getInstance() {
    DisplayListStatus_initFields();
    return DisplayListStatus$QUEUED_instance;
  }
  var DisplayListStatus$DRAWING_instance;
  function DisplayListStatus$DRAWING_getInstance() {
    DisplayListStatus_initFields();
    return DisplayListStatus$DRAWING_instance;
  }
  var DisplayListStatus$STALLING_instance;
  function DisplayListStatus$STALLING_getInstance() {
    DisplayListStatus_initFields();
    return DisplayListStatus$STALLING_instance;
  }
  var DisplayListStatus$PAUSED_instance;
  function DisplayListStatus$PAUSED_getInstance() {
    DisplayListStatus_initFields();
    return DisplayListStatus$PAUSED_instance;
  }
  function DisplayListStatus$Companion() {
    DisplayListStatus$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, DisplayListStatus$values());
  }
  DisplayListStatus$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var DisplayListStatus$Companion_instance = null;
  function DisplayListStatus$Companion_getInstance() {
    DisplayListStatus_initFields();
    if (DisplayListStatus$Companion_instance === null) {
      new DisplayListStatus$Companion();
    }
    return DisplayListStatus$Companion_instance;
  }
  DisplayListStatus.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DisplayListStatus',
    interfaces: [IdEnum, Enum]
  };
  function DisplayListStatus$values() {
    return [DisplayListStatus$COMPLETED_getInstance(), DisplayListStatus$QUEUED_getInstance(), DisplayListStatus$DRAWING_getInstance(), DisplayListStatus$STALLING_getInstance(), DisplayListStatus$PAUSED_getInstance()];
  }
  DisplayListStatus.values = DisplayListStatus$values;
  function DisplayListStatus$valueOf(name) {
    switch (name) {
      case 'COMPLETED':
        return DisplayListStatus$COMPLETED_getInstance();
      case 'QUEUED':
        return DisplayListStatus$QUEUED_getInstance();
      case 'DRAWING':
        return DisplayListStatus$DRAWING_getInstance();
      case 'STALLING':
        return DisplayListStatus$STALLING_getInstance();
      case 'PAUSED':
        return DisplayListStatus$PAUSED_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.DisplayListStatus.' + name);
    }
  }
  DisplayListStatus.valueOf_61zpoe$ = DisplayListStatus$valueOf;
  function IndexEnum(name, ordinal, id, nbytes) {
    Enum.call(this);
    this.id_nfqogd$_0 = id;
    this.nbytes = nbytes;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function IndexEnum_initFields() {
    IndexEnum_initFields = function () {
    };
    IndexEnum$VOID_instance = new IndexEnum('VOID', 0, 0, 0);
    IndexEnum$BYTE_instance = new IndexEnum('BYTE', 1, 1, 1);
    IndexEnum$SHORT_instance = new IndexEnum('SHORT', 2, 2, 2);
    IndexEnum$Companion_getInstance();
  }
  Object.defineProperty(IndexEnum.prototype, 'id', {
    get: function () {
      return this.id_nfqogd$_0;
    }
  });
  var IndexEnum$VOID_instance;
  function IndexEnum$VOID_getInstance() {
    IndexEnum_initFields();
    return IndexEnum$VOID_instance;
  }
  var IndexEnum$BYTE_instance;
  function IndexEnum$BYTE_getInstance() {
    IndexEnum_initFields();
    return IndexEnum$BYTE_instance;
  }
  var IndexEnum$SHORT_instance;
  function IndexEnum$SHORT_getInstance() {
    IndexEnum_initFields();
    return IndexEnum$SHORT_instance;
  }
  function IndexEnum$Companion() {
    IndexEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, IndexEnum$values());
  }
  IndexEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var IndexEnum$Companion_instance = null;
  function IndexEnum$Companion_getInstance() {
    IndexEnum_initFields();
    if (IndexEnum$Companion_instance === null) {
      new IndexEnum$Companion();
    }
    return IndexEnum$Companion_instance;
  }
  IndexEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IndexEnum',
    interfaces: [IdEnum, Enum]
  };
  function IndexEnum$values() {
    return [IndexEnum$VOID_getInstance(), IndexEnum$BYTE_getInstance(), IndexEnum$SHORT_getInstance()];
  }
  IndexEnum.values = IndexEnum$values;
  function IndexEnum$valueOf(name) {
    switch (name) {
      case 'VOID':
        return IndexEnum$VOID_getInstance();
      case 'BYTE':
        return IndexEnum$BYTE_getInstance();
      case 'SHORT':
        return IndexEnum$SHORT_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.IndexEnum.' + name);
    }
  }
  IndexEnum.valueOf_61zpoe$ = IndexEnum$valueOf;
  function NumericEnum_0(name, ordinal, id, nbytes) {
    Enum.call(this);
    this.id_77wtvs$_0 = id;
    this.nbytes = nbytes;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function NumericEnum_initFields() {
    NumericEnum_initFields = function () {
    };
    NumericEnum$VOID_instance = new NumericEnum_0('VOID', 0, 0, 0);
    NumericEnum$BYTE_instance = new NumericEnum_0('BYTE', 1, 1, 1);
    NumericEnum$SHORT_instance = new NumericEnum_0('SHORT', 2, 2, 2);
    NumericEnum$FLOAT_instance = new NumericEnum_0('FLOAT', 3, 3, 4);
    NumericEnum$Companion_getInstance();
  }
  Object.defineProperty(NumericEnum_0.prototype, 'id', {
    get: function () {
      return this.id_77wtvs$_0;
    }
  });
  var NumericEnum$VOID_instance;
  function NumericEnum$VOID_getInstance() {
    NumericEnum_initFields();
    return NumericEnum$VOID_instance;
  }
  var NumericEnum$BYTE_instance;
  function NumericEnum$BYTE_getInstance() {
    NumericEnum_initFields();
    return NumericEnum$BYTE_instance;
  }
  var NumericEnum$SHORT_instance;
  function NumericEnum$SHORT_getInstance() {
    NumericEnum_initFields();
    return NumericEnum$SHORT_instance;
  }
  var NumericEnum$FLOAT_instance;
  function NumericEnum$FLOAT_getInstance() {
    NumericEnum_initFields();
    return NumericEnum$FLOAT_instance;
  }
  function NumericEnum$Companion() {
    NumericEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, NumericEnum$values());
  }
  NumericEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var NumericEnum$Companion_instance = null;
  function NumericEnum$Companion_getInstance() {
    NumericEnum_initFields();
    if (NumericEnum$Companion_instance === null) {
      new NumericEnum$Companion();
    }
    return NumericEnum$Companion_instance;
  }
  NumericEnum_0.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NumericEnum',
    interfaces: [IdEnum, Enum]
  };
  function NumericEnum$values() {
    return [NumericEnum$VOID_getInstance(), NumericEnum$BYTE_getInstance(), NumericEnum$SHORT_getInstance(), NumericEnum$FLOAT_getInstance()];
  }
  NumericEnum_0.values = NumericEnum$values;
  function NumericEnum$valueOf(name) {
    switch (name) {
      case 'VOID':
        return NumericEnum$VOID_getInstance();
      case 'BYTE':
        return NumericEnum$BYTE_getInstance();
      case 'SHORT':
        return NumericEnum$SHORT_getInstance();
      case 'FLOAT':
        return NumericEnum$FLOAT_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.NumericEnum.' + name);
    }
  }
  NumericEnum_0.valueOf_61zpoe$ = NumericEnum$valueOf;
  function ColorEnum(name, ordinal, id, nbytes) {
    Enum.call(this);
    this.id_ytmj1a$_0 = id;
    this.nbytes = nbytes;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ColorEnum_initFields() {
    ColorEnum_initFields = function () {
    };
    ColorEnum$VOID_instance = new ColorEnum('VOID', 0, 0, 0);
    ColorEnum$INVALID1_instance = new ColorEnum('INVALID1', 1, 1, 0);
    ColorEnum$INVALID2_instance = new ColorEnum('INVALID2', 2, 2, 0);
    ColorEnum$INVALID3_instance = new ColorEnum('INVALID3', 3, 3, 0);
    ColorEnum$COLOR5650_instance = new ColorEnum('COLOR5650', 4, 4, 2);
    ColorEnum$COLOR5551_instance = new ColorEnum('COLOR5551', 5, 5, 2);
    ColorEnum$COLOR4444_instance = new ColorEnum('COLOR4444', 6, 6, 2);
    ColorEnum$COLOR8888_instance = new ColorEnum('COLOR8888', 7, 7, 4);
    ColorEnum$Companion_getInstance();
  }
  Object.defineProperty(ColorEnum.prototype, 'id', {
    get: function () {
      return this.id_ytmj1a$_0;
    }
  });
  var ColorEnum$VOID_instance;
  function ColorEnum$VOID_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$VOID_instance;
  }
  var ColorEnum$INVALID1_instance;
  function ColorEnum$INVALID1_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$INVALID1_instance;
  }
  var ColorEnum$INVALID2_instance;
  function ColorEnum$INVALID2_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$INVALID2_instance;
  }
  var ColorEnum$INVALID3_instance;
  function ColorEnum$INVALID3_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$INVALID3_instance;
  }
  var ColorEnum$COLOR5650_instance;
  function ColorEnum$COLOR5650_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$COLOR5650_instance;
  }
  var ColorEnum$COLOR5551_instance;
  function ColorEnum$COLOR5551_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$COLOR5551_instance;
  }
  var ColorEnum$COLOR4444_instance;
  function ColorEnum$COLOR4444_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$COLOR4444_instance;
  }
  var ColorEnum$COLOR8888_instance;
  function ColorEnum$COLOR8888_getInstance() {
    ColorEnum_initFields();
    return ColorEnum$COLOR8888_instance;
  }
  function ColorEnum$Companion() {
    ColorEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, ColorEnum$values());
  }
  ColorEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var ColorEnum$Companion_instance = null;
  function ColorEnum$Companion_getInstance() {
    ColorEnum_initFields();
    if (ColorEnum$Companion_instance === null) {
      new ColorEnum$Companion();
    }
    return ColorEnum$Companion_instance;
  }
  ColorEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ColorEnum',
    interfaces: [IdEnum, Enum]
  };
  function ColorEnum$values() {
    return [ColorEnum$VOID_getInstance(), ColorEnum$INVALID1_getInstance(), ColorEnum$INVALID2_getInstance(), ColorEnum$INVALID3_getInstance(), ColorEnum$COLOR5650_getInstance(), ColorEnum$COLOR5551_getInstance(), ColorEnum$COLOR4444_getInstance(), ColorEnum$COLOR8888_getInstance()];
  }
  ColorEnum.values = ColorEnum$values;
  function ColorEnum$valueOf(name) {
    switch (name) {
      case 'VOID':
        return ColorEnum$VOID_getInstance();
      case 'INVALID1':
        return ColorEnum$INVALID1_getInstance();
      case 'INVALID2':
        return ColorEnum$INVALID2_getInstance();
      case 'INVALID3':
        return ColorEnum$INVALID3_getInstance();
      case 'COLOR5650':
        return ColorEnum$COLOR5650_getInstance();
      case 'COLOR5551':
        return ColorEnum$COLOR5551_getInstance();
      case 'COLOR4444':
        return ColorEnum$COLOR4444_getInstance();
      case 'COLOR8888':
        return ColorEnum$COLOR8888_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.ColorEnum.' + name);
    }
  }
  ColorEnum.valueOf_61zpoe$ = ColorEnum$valueOf;
  function LightTypeEnum(name, ordinal, id) {
    Enum.call(this);
    this.id_4q49kb$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function LightTypeEnum_initFields() {
    LightTypeEnum_initFields = function () {
    };
    LightTypeEnum$DIRECTIONAL_instance = new LightTypeEnum('DIRECTIONAL', 0, 0);
    LightTypeEnum$POINT_LIGHT_instance = new LightTypeEnum('POINT_LIGHT', 1, 1);
    LightTypeEnum$SPOT_LIGHT_instance = new LightTypeEnum('SPOT_LIGHT', 2, 2);
    LightTypeEnum$Companion_getInstance();
  }
  Object.defineProperty(LightTypeEnum.prototype, 'id', {
    get: function () {
      return this.id_4q49kb$_0;
    }
  });
  var LightTypeEnum$DIRECTIONAL_instance;
  function LightTypeEnum$DIRECTIONAL_getInstance() {
    LightTypeEnum_initFields();
    return LightTypeEnum$DIRECTIONAL_instance;
  }
  var LightTypeEnum$POINT_LIGHT_instance;
  function LightTypeEnum$POINT_LIGHT_getInstance() {
    LightTypeEnum_initFields();
    return LightTypeEnum$POINT_LIGHT_instance;
  }
  var LightTypeEnum$SPOT_LIGHT_instance;
  function LightTypeEnum$SPOT_LIGHT_getInstance() {
    LightTypeEnum_initFields();
    return LightTypeEnum$SPOT_LIGHT_instance;
  }
  function LightTypeEnum$Companion() {
    LightTypeEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, LightTypeEnum$values());
  }
  LightTypeEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var LightTypeEnum$Companion_instance = null;
  function LightTypeEnum$Companion_getInstance() {
    LightTypeEnum_initFields();
    if (LightTypeEnum$Companion_instance === null) {
      new LightTypeEnum$Companion();
    }
    return LightTypeEnum$Companion_instance;
  }
  LightTypeEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LightTypeEnum',
    interfaces: [IdEnum, Enum]
  };
  function LightTypeEnum$values() {
    return [LightTypeEnum$DIRECTIONAL_getInstance(), LightTypeEnum$POINT_LIGHT_getInstance(), LightTypeEnum$SPOT_LIGHT_getInstance()];
  }
  LightTypeEnum.values = LightTypeEnum$values;
  function LightTypeEnum$valueOf(name) {
    switch (name) {
      case 'DIRECTIONAL':
        return LightTypeEnum$DIRECTIONAL_getInstance();
      case 'POINT_LIGHT':
        return LightTypeEnum$POINT_LIGHT_getInstance();
      case 'SPOT_LIGHT':
        return LightTypeEnum$SPOT_LIGHT_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.LightTypeEnum.' + name);
    }
  }
  LightTypeEnum.valueOf_61zpoe$ = LightTypeEnum$valueOf;
  function LightModelEnum(name, ordinal, id) {
    Enum.call(this);
    this.id_bzhmmc$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function LightModelEnum_initFields() {
    LightModelEnum_initFields = function () {
    };
    LightModelEnum$SINGLE_COLOR_instance = new LightModelEnum('SINGLE_COLOR', 0, 0);
    LightModelEnum$SEPARATE_SPECULAR_COLOR_instance = new LightModelEnum('SEPARATE_SPECULAR_COLOR', 1, 1);
    LightModelEnum$Companion_getInstance();
  }
  Object.defineProperty(LightModelEnum.prototype, 'id', {
    get: function () {
      return this.id_bzhmmc$_0;
    }
  });
  var LightModelEnum$SINGLE_COLOR_instance;
  function LightModelEnum$SINGLE_COLOR_getInstance() {
    LightModelEnum_initFields();
    return LightModelEnum$SINGLE_COLOR_instance;
  }
  var LightModelEnum$SEPARATE_SPECULAR_COLOR_instance;
  function LightModelEnum$SEPARATE_SPECULAR_COLOR_getInstance() {
    LightModelEnum_initFields();
    return LightModelEnum$SEPARATE_SPECULAR_COLOR_instance;
  }
  function LightModelEnum$Companion() {
    LightModelEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, LightModelEnum$values());
  }
  LightModelEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var LightModelEnum$Companion_instance = null;
  function LightModelEnum$Companion_getInstance() {
    LightModelEnum_initFields();
    if (LightModelEnum$Companion_instance === null) {
      new LightModelEnum$Companion();
    }
    return LightModelEnum$Companion_instance;
  }
  LightModelEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LightModelEnum',
    interfaces: [IdEnum, Enum]
  };
  function LightModelEnum$values() {
    return [LightModelEnum$SINGLE_COLOR_getInstance(), LightModelEnum$SEPARATE_SPECULAR_COLOR_getInstance()];
  }
  LightModelEnum.values = LightModelEnum$values;
  function LightModelEnum$valueOf(name) {
    switch (name) {
      case 'SINGLE_COLOR':
        return LightModelEnum$SINGLE_COLOR_getInstance();
      case 'SEPARATE_SPECULAR_COLOR':
        return LightModelEnum$SEPARATE_SPECULAR_COLOR_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.LightModelEnum.' + name);
    }
  }
  LightModelEnum.valueOf_61zpoe$ = LightModelEnum$valueOf;
  function TextureProjectionMapMode(name, ordinal, id) {
    Enum.call(this);
    this.id_iihbq5$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureProjectionMapMode_initFields() {
    TextureProjectionMapMode_initFields = function () {
    };
    TextureProjectionMapMode$GU_POSITION_instance = new TextureProjectionMapMode('GU_POSITION', 0, 0);
    TextureProjectionMapMode$GU_UV_instance = new TextureProjectionMapMode('GU_UV', 1, 1);
    TextureProjectionMapMode$GU_NORMALIZED_NORMAL_instance = new TextureProjectionMapMode('GU_NORMALIZED_NORMAL', 2, 2);
    TextureProjectionMapMode$GU_NORMAL_instance = new TextureProjectionMapMode('GU_NORMAL', 3, 3);
    TextureProjectionMapMode$Companion_getInstance();
  }
  Object.defineProperty(TextureProjectionMapMode.prototype, 'id', {
    get: function () {
      return this.id_iihbq5$_0;
    }
  });
  var TextureProjectionMapMode$GU_POSITION_instance;
  function TextureProjectionMapMode$GU_POSITION_getInstance() {
    TextureProjectionMapMode_initFields();
    return TextureProjectionMapMode$GU_POSITION_instance;
  }
  var TextureProjectionMapMode$GU_UV_instance;
  function TextureProjectionMapMode$GU_UV_getInstance() {
    TextureProjectionMapMode_initFields();
    return TextureProjectionMapMode$GU_UV_instance;
  }
  var TextureProjectionMapMode$GU_NORMALIZED_NORMAL_instance;
  function TextureProjectionMapMode$GU_NORMALIZED_NORMAL_getInstance() {
    TextureProjectionMapMode_initFields();
    return TextureProjectionMapMode$GU_NORMALIZED_NORMAL_instance;
  }
  var TextureProjectionMapMode$GU_NORMAL_instance;
  function TextureProjectionMapMode$GU_NORMAL_getInstance() {
    TextureProjectionMapMode_initFields();
    return TextureProjectionMapMode$GU_NORMAL_instance;
  }
  function TextureProjectionMapMode$Companion() {
    TextureProjectionMapMode$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, TextureProjectionMapMode$values());
  }
  TextureProjectionMapMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var TextureProjectionMapMode$Companion_instance = null;
  function TextureProjectionMapMode$Companion_getInstance() {
    TextureProjectionMapMode_initFields();
    if (TextureProjectionMapMode$Companion_instance === null) {
      new TextureProjectionMapMode$Companion();
    }
    return TextureProjectionMapMode$Companion_instance;
  }
  TextureProjectionMapMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureProjectionMapMode',
    interfaces: [IdEnum, Enum]
  };
  function TextureProjectionMapMode$values() {
    return [TextureProjectionMapMode$GU_POSITION_getInstance(), TextureProjectionMapMode$GU_UV_getInstance(), TextureProjectionMapMode$GU_NORMALIZED_NORMAL_getInstance(), TextureProjectionMapMode$GU_NORMAL_getInstance()];
  }
  TextureProjectionMapMode.values = TextureProjectionMapMode$values;
  function TextureProjectionMapMode$valueOf(name) {
    switch (name) {
      case 'GU_POSITION':
        return TextureProjectionMapMode$GU_POSITION_getInstance();
      case 'GU_UV':
        return TextureProjectionMapMode$GU_UV_getInstance();
      case 'GU_NORMALIZED_NORMAL':
        return TextureProjectionMapMode$GU_NORMALIZED_NORMAL_getInstance();
      case 'GU_NORMAL':
        return TextureProjectionMapMode$GU_NORMAL_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.TextureProjectionMapMode.' + name);
    }
  }
  TextureProjectionMapMode.valueOf_61zpoe$ = TextureProjectionMapMode$valueOf;
  function TextureMapMode(name, ordinal, id) {
    Enum.call(this);
    this.id_tstsa4$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureMapMode_initFields() {
    TextureMapMode_initFields = function () {
    };
    TextureMapMode$GU_TEXTURE_COORDS_instance = new TextureMapMode('GU_TEXTURE_COORDS', 0, 0);
    TextureMapMode$GU_TEXTURE_MATRIX_instance = new TextureMapMode('GU_TEXTURE_MATRIX', 1, 1);
    TextureMapMode$GU_ENVIRONMENT_MAP_instance = new TextureMapMode('GU_ENVIRONMENT_MAP', 2, 2);
    TextureMapMode$Companion_getInstance();
  }
  Object.defineProperty(TextureMapMode.prototype, 'id', {
    get: function () {
      return this.id_tstsa4$_0;
    }
  });
  var TextureMapMode$GU_TEXTURE_COORDS_instance;
  function TextureMapMode$GU_TEXTURE_COORDS_getInstance() {
    TextureMapMode_initFields();
    return TextureMapMode$GU_TEXTURE_COORDS_instance;
  }
  var TextureMapMode$GU_TEXTURE_MATRIX_instance;
  function TextureMapMode$GU_TEXTURE_MATRIX_getInstance() {
    TextureMapMode_initFields();
    return TextureMapMode$GU_TEXTURE_MATRIX_instance;
  }
  var TextureMapMode$GU_ENVIRONMENT_MAP_instance;
  function TextureMapMode$GU_ENVIRONMENT_MAP_getInstance() {
    TextureMapMode_initFields();
    return TextureMapMode$GU_ENVIRONMENT_MAP_instance;
  }
  function TextureMapMode$Companion() {
    TextureMapMode$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, TextureMapMode$values());
  }
  TextureMapMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var TextureMapMode$Companion_instance = null;
  function TextureMapMode$Companion_getInstance() {
    TextureMapMode_initFields();
    if (TextureMapMode$Companion_instance === null) {
      new TextureMapMode$Companion();
    }
    return TextureMapMode$Companion_instance;
  }
  TextureMapMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureMapMode',
    interfaces: [IdEnum, Enum]
  };
  function TextureMapMode$values() {
    return [TextureMapMode$GU_TEXTURE_COORDS_getInstance(), TextureMapMode$GU_TEXTURE_MATRIX_getInstance(), TextureMapMode$GU_ENVIRONMENT_MAP_getInstance()];
  }
  TextureMapMode.values = TextureMapMode$values;
  function TextureMapMode$valueOf(name) {
    switch (name) {
      case 'GU_TEXTURE_COORDS':
        return TextureMapMode$GU_TEXTURE_COORDS_getInstance();
      case 'GU_TEXTURE_MATRIX':
        return TextureMapMode$GU_TEXTURE_MATRIX_getInstance();
      case 'GU_ENVIRONMENT_MAP':
        return TextureMapMode$GU_ENVIRONMENT_MAP_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.TextureMapMode.' + name);
    }
  }
  TextureMapMode.valueOf_61zpoe$ = TextureMapMode$valueOf;
  function TextureLevelMode(name, ordinal, id) {
    Enum.call(this);
    this.id_8fy36c$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureLevelMode_initFields() {
    TextureLevelMode_initFields = function () {
    };
    TextureLevelMode$AUTO_instance = new TextureLevelMode('AUTO', 0, 0);
    TextureLevelMode$CONST_instance = new TextureLevelMode('CONST', 1, 1);
    TextureLevelMode$SLOPE_instance = new TextureLevelMode('SLOPE', 2, 2);
    TextureLevelMode$Companion_getInstance();
  }
  Object.defineProperty(TextureLevelMode.prototype, 'id', {
    get: function () {
      return this.id_8fy36c$_0;
    }
  });
  var TextureLevelMode$AUTO_instance;
  function TextureLevelMode$AUTO_getInstance() {
    TextureLevelMode_initFields();
    return TextureLevelMode$AUTO_instance;
  }
  var TextureLevelMode$CONST_instance;
  function TextureLevelMode$CONST_getInstance() {
    TextureLevelMode_initFields();
    return TextureLevelMode$CONST_instance;
  }
  var TextureLevelMode$SLOPE_instance;
  function TextureLevelMode$SLOPE_getInstance() {
    TextureLevelMode_initFields();
    return TextureLevelMode$SLOPE_instance;
  }
  function TextureLevelMode$Companion() {
    TextureLevelMode$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, TextureLevelMode$values());
  }
  TextureLevelMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var TextureLevelMode$Companion_instance = null;
  function TextureLevelMode$Companion_getInstance() {
    TextureLevelMode_initFields();
    if (TextureLevelMode$Companion_instance === null) {
      new TextureLevelMode$Companion();
    }
    return TextureLevelMode$Companion_instance;
  }
  TextureLevelMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureLevelMode',
    interfaces: [IdEnum, Enum]
  };
  function TextureLevelMode$values() {
    return [TextureLevelMode$AUTO_getInstance(), TextureLevelMode$CONST_getInstance(), TextureLevelMode$SLOPE_getInstance()];
  }
  TextureLevelMode.values = TextureLevelMode$values;
  function TextureLevelMode$valueOf(name) {
    switch (name) {
      case 'AUTO':
        return TextureLevelMode$AUTO_getInstance();
      case 'CONST':
        return TextureLevelMode$CONST_getInstance();
      case 'SLOPE':
        return TextureLevelMode$SLOPE_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.TextureLevelMode.' + name);
    }
  }
  TextureLevelMode.valueOf_61zpoe$ = TextureLevelMode$valueOf;
  function TestFunctionEnum(name, ordinal, id) {
    Enum.call(this);
    this.id_wk5jfx$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TestFunctionEnum_initFields() {
    TestFunctionEnum_initFields = function () {
    };
    TestFunctionEnum$NEVER_instance = new TestFunctionEnum('NEVER', 0, 0);
    TestFunctionEnum$ALWAYS_instance = new TestFunctionEnum('ALWAYS', 1, 1);
    TestFunctionEnum$EQUAL_instance = new TestFunctionEnum('EQUAL', 2, 2);
    TestFunctionEnum$NOT_EQUAL_instance = new TestFunctionEnum('NOT_EQUAL', 3, 3);
    TestFunctionEnum$LESS_instance = new TestFunctionEnum('LESS', 4, 4);
    TestFunctionEnum$LESS_OR_EQUAL_instance = new TestFunctionEnum('LESS_OR_EQUAL', 5, 5);
    TestFunctionEnum$GREATER_instance = new TestFunctionEnum('GREATER', 6, 6);
    TestFunctionEnum$GREATER_OR_EQUAL_instance = new TestFunctionEnum('GREATER_OR_EQUAL', 7, 7);
    TestFunctionEnum$Companion_getInstance();
  }
  Object.defineProperty(TestFunctionEnum.prototype, 'id', {
    get: function () {
      return this.id_wk5jfx$_0;
    }
  });
  var TestFunctionEnum$NEVER_instance;
  function TestFunctionEnum$NEVER_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$NEVER_instance;
  }
  var TestFunctionEnum$ALWAYS_instance;
  function TestFunctionEnum$ALWAYS_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$ALWAYS_instance;
  }
  var TestFunctionEnum$EQUAL_instance;
  function TestFunctionEnum$EQUAL_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$EQUAL_instance;
  }
  var TestFunctionEnum$NOT_EQUAL_instance;
  function TestFunctionEnum$NOT_EQUAL_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$NOT_EQUAL_instance;
  }
  var TestFunctionEnum$LESS_instance;
  function TestFunctionEnum$LESS_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$LESS_instance;
  }
  var TestFunctionEnum$LESS_OR_EQUAL_instance;
  function TestFunctionEnum$LESS_OR_EQUAL_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$LESS_OR_EQUAL_instance;
  }
  var TestFunctionEnum$GREATER_instance;
  function TestFunctionEnum$GREATER_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$GREATER_instance;
  }
  var TestFunctionEnum$GREATER_OR_EQUAL_instance;
  function TestFunctionEnum$GREATER_OR_EQUAL_getInstance() {
    TestFunctionEnum_initFields();
    return TestFunctionEnum$GREATER_OR_EQUAL_instance;
  }
  function TestFunctionEnum$Companion() {
    TestFunctionEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, TestFunctionEnum$values());
  }
  TestFunctionEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var TestFunctionEnum$Companion_instance = null;
  function TestFunctionEnum$Companion_getInstance() {
    TestFunctionEnum_initFields();
    if (TestFunctionEnum$Companion_instance === null) {
      new TestFunctionEnum$Companion();
    }
    return TestFunctionEnum$Companion_instance;
  }
  TestFunctionEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TestFunctionEnum',
    interfaces: [IdEnum, Enum]
  };
  function TestFunctionEnum$values() {
    return [TestFunctionEnum$NEVER_getInstance(), TestFunctionEnum$ALWAYS_getInstance(), TestFunctionEnum$EQUAL_getInstance(), TestFunctionEnum$NOT_EQUAL_getInstance(), TestFunctionEnum$LESS_getInstance(), TestFunctionEnum$LESS_OR_EQUAL_getInstance(), TestFunctionEnum$GREATER_getInstance(), TestFunctionEnum$GREATER_OR_EQUAL_getInstance()];
  }
  TestFunctionEnum.values = TestFunctionEnum$values;
  function TestFunctionEnum$valueOf(name) {
    switch (name) {
      case 'NEVER':
        return TestFunctionEnum$NEVER_getInstance();
      case 'ALWAYS':
        return TestFunctionEnum$ALWAYS_getInstance();
      case 'EQUAL':
        return TestFunctionEnum$EQUAL_getInstance();
      case 'NOT_EQUAL':
        return TestFunctionEnum$NOT_EQUAL_getInstance();
      case 'LESS':
        return TestFunctionEnum$LESS_getInstance();
      case 'LESS_OR_EQUAL':
        return TestFunctionEnum$LESS_OR_EQUAL_getInstance();
      case 'GREATER':
        return TestFunctionEnum$GREATER_getInstance();
      case 'GREATER_OR_EQUAL':
        return TestFunctionEnum$GREATER_OR_EQUAL_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.TestFunctionEnum.' + name);
    }
  }
  TestFunctionEnum.valueOf_61zpoe$ = TestFunctionEnum$valueOf;
  function ShadingModelEnum(name, ordinal, id) {
    Enum.call(this);
    this.id_9jtpbc$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ShadingModelEnum_initFields() {
    ShadingModelEnum_initFields = function () {
    };
    ShadingModelEnum$FLAT_instance = new ShadingModelEnum('FLAT', 0, 0);
    ShadingModelEnum$SMOOTH_instance = new ShadingModelEnum('SMOOTH', 1, 1);
    ShadingModelEnum$Companion_getInstance();
  }
  Object.defineProperty(ShadingModelEnum.prototype, 'id', {
    get: function () {
      return this.id_9jtpbc$_0;
    }
  });
  var ShadingModelEnum$FLAT_instance;
  function ShadingModelEnum$FLAT_getInstance() {
    ShadingModelEnum_initFields();
    return ShadingModelEnum$FLAT_instance;
  }
  var ShadingModelEnum$SMOOTH_instance;
  function ShadingModelEnum$SMOOTH_getInstance() {
    ShadingModelEnum_initFields();
    return ShadingModelEnum$SMOOTH_instance;
  }
  function ShadingModelEnum$Companion() {
    ShadingModelEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, ShadingModelEnum$values());
  }
  ShadingModelEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var ShadingModelEnum$Companion_instance = null;
  function ShadingModelEnum$Companion_getInstance() {
    ShadingModelEnum_initFields();
    if (ShadingModelEnum$Companion_instance === null) {
      new ShadingModelEnum$Companion();
    }
    return ShadingModelEnum$Companion_instance;
  }
  ShadingModelEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ShadingModelEnum',
    interfaces: [IdEnum, Enum]
  };
  function ShadingModelEnum$values() {
    return [ShadingModelEnum$FLAT_getInstance(), ShadingModelEnum$SMOOTH_getInstance()];
  }
  ShadingModelEnum.values = ShadingModelEnum$values;
  function ShadingModelEnum$valueOf(name) {
    switch (name) {
      case 'FLAT':
        return ShadingModelEnum$FLAT_getInstance();
      case 'SMOOTH':
        return ShadingModelEnum$SMOOTH_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.ShadingModelEnum.' + name);
    }
  }
  ShadingModelEnum.valueOf_61zpoe$ = ShadingModelEnum$valueOf;
  function GuBlendingFactor(name, ordinal, id) {
    Enum.call(this);
    this.id_yu50t2$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function GuBlendingFactor_initFields() {
    GuBlendingFactor_initFields = function () {
    };
    GuBlendingFactor$GU_SRC_COLOR_instance = new GuBlendingFactor('GU_SRC_COLOR', 0, 0);
    GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_instance = new GuBlendingFactor('GU_ONE_MINUS_SRC_COLOR', 1, 1);
    GuBlendingFactor$GU_SRC_ALPHA_instance = new GuBlendingFactor('GU_SRC_ALPHA', 2, 2);
    GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_instance = new GuBlendingFactor('GU_ONE_MINUS_SRC_ALPHA', 3, 3);
    GuBlendingFactor$GU_DST_ALPHA_instance = new GuBlendingFactor('GU_DST_ALPHA', 4, 4);
    GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_instance = new GuBlendingFactor('GU_ONE_MINUS_DST_ALPHA', 5, 5);
    GuBlendingFactor$GU_FIX_instance = new GuBlendingFactor('GU_FIX', 6, 10);
    GuBlendingFactor$Companion_getInstance();
  }
  Object.defineProperty(GuBlendingFactor.prototype, 'id', {
    get: function () {
      return this.id_yu50t2$_0;
    }
  });
  var GuBlendingFactor$GU_SRC_COLOR_instance;
  function GuBlendingFactor$GU_SRC_COLOR_getInstance() {
    GuBlendingFactor_initFields();
    return GuBlendingFactor$GU_SRC_COLOR_instance;
  }
  var GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_instance;
  function GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_getInstance() {
    GuBlendingFactor_initFields();
    return GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_instance;
  }
  var GuBlendingFactor$GU_SRC_ALPHA_instance;
  function GuBlendingFactor$GU_SRC_ALPHA_getInstance() {
    GuBlendingFactor_initFields();
    return GuBlendingFactor$GU_SRC_ALPHA_instance;
  }
  var GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_instance;
  function GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_getInstance() {
    GuBlendingFactor_initFields();
    return GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_instance;
  }
  var GuBlendingFactor$GU_DST_ALPHA_instance;
  function GuBlendingFactor$GU_DST_ALPHA_getInstance() {
    GuBlendingFactor_initFields();
    return GuBlendingFactor$GU_DST_ALPHA_instance;
  }
  var GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_instance;
  function GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_getInstance() {
    GuBlendingFactor_initFields();
    return GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_instance;
  }
  var GuBlendingFactor$GU_FIX_instance;
  function GuBlendingFactor$GU_FIX_getInstance() {
    GuBlendingFactor_initFields();
    return GuBlendingFactor$GU_FIX_instance;
  }
  function GuBlendingFactor$Companion() {
    GuBlendingFactor$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, GuBlendingFactor$values());
  }
  GuBlendingFactor$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var GuBlendingFactor$Companion_instance = null;
  function GuBlendingFactor$Companion_getInstance() {
    GuBlendingFactor_initFields();
    if (GuBlendingFactor$Companion_instance === null) {
      new GuBlendingFactor$Companion();
    }
    return GuBlendingFactor$Companion_instance;
  }
  GuBlendingFactor.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GuBlendingFactor',
    interfaces: [IdEnum, Enum]
  };
  function GuBlendingFactor$values() {
    return [GuBlendingFactor$GU_SRC_COLOR_getInstance(), GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_getInstance(), GuBlendingFactor$GU_SRC_ALPHA_getInstance(), GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_getInstance(), GuBlendingFactor$GU_DST_ALPHA_getInstance(), GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_getInstance(), GuBlendingFactor$GU_FIX_getInstance()];
  }
  GuBlendingFactor.values = GuBlendingFactor$values;
  function GuBlendingFactor$valueOf(name) {
    switch (name) {
      case 'GU_SRC_COLOR':
        return GuBlendingFactor$GU_SRC_COLOR_getInstance();
      case 'GU_ONE_MINUS_SRC_COLOR':
        return GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_getInstance();
      case 'GU_SRC_ALPHA':
        return GuBlendingFactor$GU_SRC_ALPHA_getInstance();
      case 'GU_ONE_MINUS_SRC_ALPHA':
        return GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_getInstance();
      case 'GU_DST_ALPHA':
        return GuBlendingFactor$GU_DST_ALPHA_getInstance();
      case 'GU_ONE_MINUS_DST_ALPHA':
        return GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_getInstance();
      case 'GU_FIX':
        return GuBlendingFactor$GU_FIX_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.GuBlendingFactor.' + name);
    }
  }
  GuBlendingFactor.valueOf_61zpoe$ = GuBlendingFactor$valueOf;
  function GuBlendingEquation(name, ordinal, id) {
    Enum.call(this);
    this.id_qmradv$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function GuBlendingEquation_initFields() {
    GuBlendingEquation_initFields = function () {
    };
    GuBlendingEquation$ADD_instance = new GuBlendingEquation('ADD', 0, 0);
    GuBlendingEquation$SUBSTRACT_instance = new GuBlendingEquation('SUBSTRACT', 1, 1);
    GuBlendingEquation$REVERSE_SUBSTRACT_instance = new GuBlendingEquation('REVERSE_SUBSTRACT', 2, 2);
    GuBlendingEquation$MIN_instance = new GuBlendingEquation('MIN', 3, 3);
    GuBlendingEquation$MAX_instance = new GuBlendingEquation('MAX', 4, 4);
    GuBlendingEquation$ABS_instance = new GuBlendingEquation('ABS', 5, 5);
    GuBlendingEquation$Companion_getInstance();
  }
  Object.defineProperty(GuBlendingEquation.prototype, 'id', {
    get: function () {
      return this.id_qmradv$_0;
    }
  });
  var GuBlendingEquation$ADD_instance;
  function GuBlendingEquation$ADD_getInstance() {
    GuBlendingEquation_initFields();
    return GuBlendingEquation$ADD_instance;
  }
  var GuBlendingEquation$SUBSTRACT_instance;
  function GuBlendingEquation$SUBSTRACT_getInstance() {
    GuBlendingEquation_initFields();
    return GuBlendingEquation$SUBSTRACT_instance;
  }
  var GuBlendingEquation$REVERSE_SUBSTRACT_instance;
  function GuBlendingEquation$REVERSE_SUBSTRACT_getInstance() {
    GuBlendingEquation_initFields();
    return GuBlendingEquation$REVERSE_SUBSTRACT_instance;
  }
  var GuBlendingEquation$MIN_instance;
  function GuBlendingEquation$MIN_getInstance() {
    GuBlendingEquation_initFields();
    return GuBlendingEquation$MIN_instance;
  }
  var GuBlendingEquation$MAX_instance;
  function GuBlendingEquation$MAX_getInstance() {
    GuBlendingEquation_initFields();
    return GuBlendingEquation$MAX_instance;
  }
  var GuBlendingEquation$ABS_instance;
  function GuBlendingEquation$ABS_getInstance() {
    GuBlendingEquation_initFields();
    return GuBlendingEquation$ABS_instance;
  }
  function GuBlendingEquation$Companion() {
    GuBlendingEquation$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, GuBlendingEquation$values());
  }
  GuBlendingEquation$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var GuBlendingEquation$Companion_instance = null;
  function GuBlendingEquation$Companion_getInstance() {
    GuBlendingEquation_initFields();
    if (GuBlendingEquation$Companion_instance === null) {
      new GuBlendingEquation$Companion();
    }
    return GuBlendingEquation$Companion_instance;
  }
  GuBlendingEquation.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GuBlendingEquation',
    interfaces: [IdEnum, Enum]
  };
  function GuBlendingEquation$values() {
    return [GuBlendingEquation$ADD_getInstance(), GuBlendingEquation$SUBSTRACT_getInstance(), GuBlendingEquation$REVERSE_SUBSTRACT_getInstance(), GuBlendingEquation$MIN_getInstance(), GuBlendingEquation$MAX_getInstance(), GuBlendingEquation$ABS_getInstance()];
  }
  GuBlendingEquation.values = GuBlendingEquation$values;
  function GuBlendingEquation$valueOf(name) {
    switch (name) {
      case 'ADD':
        return GuBlendingEquation$ADD_getInstance();
      case 'SUBSTRACT':
        return GuBlendingEquation$SUBSTRACT_getInstance();
      case 'REVERSE_SUBSTRACT':
        return GuBlendingEquation$REVERSE_SUBSTRACT_getInstance();
      case 'MIN':
        return GuBlendingEquation$MIN_getInstance();
      case 'MAX':
        return GuBlendingEquation$MAX_getInstance();
      case 'ABS':
        return GuBlendingEquation$ABS_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.GuBlendingEquation.' + name);
    }
  }
  GuBlendingEquation.valueOf_61zpoe$ = GuBlendingEquation$valueOf;
  function StencilOperationEnum(name, ordinal, id) {
    Enum.call(this);
    this.id_ylb784$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function StencilOperationEnum_initFields() {
    StencilOperationEnum_initFields = function () {
    };
    StencilOperationEnum$KEEP_instance = new StencilOperationEnum('KEEP', 0, 0);
    StencilOperationEnum$ZERO_instance = new StencilOperationEnum('ZERO', 1, 1);
    StencilOperationEnum$REPLACE_instance = new StencilOperationEnum('REPLACE', 2, 2);
    StencilOperationEnum$INVERT_instance = new StencilOperationEnum('INVERT', 3, 3);
    StencilOperationEnum$INCREMENT_instance = new StencilOperationEnum('INCREMENT', 4, 4);
    StencilOperationEnum$DECREMENT_instance = new StencilOperationEnum('DECREMENT', 5, 5);
    StencilOperationEnum$Companion_getInstance();
  }
  Object.defineProperty(StencilOperationEnum.prototype, 'id', {
    get: function () {
      return this.id_ylb784$_0;
    }
  });
  var StencilOperationEnum$KEEP_instance;
  function StencilOperationEnum$KEEP_getInstance() {
    StencilOperationEnum_initFields();
    return StencilOperationEnum$KEEP_instance;
  }
  var StencilOperationEnum$ZERO_instance;
  function StencilOperationEnum$ZERO_getInstance() {
    StencilOperationEnum_initFields();
    return StencilOperationEnum$ZERO_instance;
  }
  var StencilOperationEnum$REPLACE_instance;
  function StencilOperationEnum$REPLACE_getInstance() {
    StencilOperationEnum_initFields();
    return StencilOperationEnum$REPLACE_instance;
  }
  var StencilOperationEnum$INVERT_instance;
  function StencilOperationEnum$INVERT_getInstance() {
    StencilOperationEnum_initFields();
    return StencilOperationEnum$INVERT_instance;
  }
  var StencilOperationEnum$INCREMENT_instance;
  function StencilOperationEnum$INCREMENT_getInstance() {
    StencilOperationEnum_initFields();
    return StencilOperationEnum$INCREMENT_instance;
  }
  var StencilOperationEnum$DECREMENT_instance;
  function StencilOperationEnum$DECREMENT_getInstance() {
    StencilOperationEnum_initFields();
    return StencilOperationEnum$DECREMENT_instance;
  }
  function StencilOperationEnum$Companion() {
    StencilOperationEnum$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, StencilOperationEnum$values());
  }
  StencilOperationEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var StencilOperationEnum$Companion_instance = null;
  function StencilOperationEnum$Companion_getInstance() {
    StencilOperationEnum_initFields();
    if (StencilOperationEnum$Companion_instance === null) {
      new StencilOperationEnum$Companion();
    }
    return StencilOperationEnum$Companion_instance;
  }
  StencilOperationEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StencilOperationEnum',
    interfaces: [IdEnum, Enum]
  };
  function StencilOperationEnum$values() {
    return [StencilOperationEnum$KEEP_getInstance(), StencilOperationEnum$ZERO_getInstance(), StencilOperationEnum$REPLACE_getInstance(), StencilOperationEnum$INVERT_getInstance(), StencilOperationEnum$INCREMENT_getInstance(), StencilOperationEnum$DECREMENT_getInstance()];
  }
  StencilOperationEnum.values = StencilOperationEnum$values;
  function StencilOperationEnum$valueOf(name) {
    switch (name) {
      case 'KEEP':
        return StencilOperationEnum$KEEP_getInstance();
      case 'ZERO':
        return StencilOperationEnum$ZERO_getInstance();
      case 'REPLACE':
        return StencilOperationEnum$REPLACE_getInstance();
      case 'INVERT':
        return StencilOperationEnum$INVERT_getInstance();
      case 'INCREMENT':
        return StencilOperationEnum$INCREMENT_getInstance();
      case 'DECREMENT':
        return StencilOperationEnum$DECREMENT_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.StencilOperationEnum.' + name);
    }
  }
  StencilOperationEnum.valueOf_61zpoe$ = StencilOperationEnum$valueOf;
  function WrapMode(name, ordinal, id) {
    Enum.call(this);
    this.id_7bsgqd$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function WrapMode_initFields() {
    WrapMode_initFields = function () {
    };
    WrapMode$REPEAT_instance = new WrapMode('REPEAT', 0, 0);
    WrapMode$CLAMP_instance = new WrapMode('CLAMP', 1, 1);
    WrapMode$Companion_getInstance();
  }
  Object.defineProperty(WrapMode.prototype, 'id', {
    get: function () {
      return this.id_7bsgqd$_0;
    }
  });
  var WrapMode$REPEAT_instance;
  function WrapMode$REPEAT_getInstance() {
    WrapMode_initFields();
    return WrapMode$REPEAT_instance;
  }
  var WrapMode$CLAMP_instance;
  function WrapMode$CLAMP_getInstance() {
    WrapMode_initFields();
    return WrapMode$CLAMP_instance;
  }
  function WrapMode$Companion() {
    WrapMode$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, WrapMode$values());
  }
  WrapMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var WrapMode$Companion_instance = null;
  function WrapMode$Companion_getInstance() {
    WrapMode_initFields();
    if (WrapMode$Companion_instance === null) {
      new WrapMode$Companion();
    }
    return WrapMode$Companion_instance;
  }
  WrapMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WrapMode',
    interfaces: [IdEnum, Enum]
  };
  function WrapMode$values() {
    return [WrapMode$REPEAT_getInstance(), WrapMode$CLAMP_getInstance()];
  }
  WrapMode.values = WrapMode$values;
  function WrapMode$valueOf(name) {
    switch (name) {
      case 'REPEAT':
        return WrapMode$REPEAT_getInstance();
      case 'CLAMP':
        return WrapMode$CLAMP_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.WrapMode.' + name);
    }
  }
  WrapMode.valueOf_61zpoe$ = WrapMode$valueOf;
  function TextureEffect(name, ordinal, id) {
    Enum.call(this);
    this.id_ft4jru$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureEffect_initFields() {
    TextureEffect_initFields = function () {
    };
    TextureEffect$MODULATE_instance = new TextureEffect('MODULATE', 0, 0);
    TextureEffect$DECAL_instance = new TextureEffect('DECAL', 1, 1);
    TextureEffect$BLEND_instance = new TextureEffect('BLEND', 2, 2);
    TextureEffect$REPLACE_instance = new TextureEffect('REPLACE', 3, 3);
    TextureEffect$ADD_instance = new TextureEffect('ADD', 4, 4);
    TextureEffect$Companion_getInstance();
  }
  Object.defineProperty(TextureEffect.prototype, 'id', {
    get: function () {
      return this.id_ft4jru$_0;
    }
  });
  var TextureEffect$MODULATE_instance;
  function TextureEffect$MODULATE_getInstance() {
    TextureEffect_initFields();
    return TextureEffect$MODULATE_instance;
  }
  var TextureEffect$DECAL_instance;
  function TextureEffect$DECAL_getInstance() {
    TextureEffect_initFields();
    return TextureEffect$DECAL_instance;
  }
  var TextureEffect$BLEND_instance;
  function TextureEffect$BLEND_getInstance() {
    TextureEffect_initFields();
    return TextureEffect$BLEND_instance;
  }
  var TextureEffect$REPLACE_instance;
  function TextureEffect$REPLACE_getInstance() {
    TextureEffect_initFields();
    return TextureEffect$REPLACE_instance;
  }
  var TextureEffect$ADD_instance;
  function TextureEffect$ADD_getInstance() {
    TextureEffect_initFields();
    return TextureEffect$ADD_instance;
  }
  function TextureEffect$Companion() {
    TextureEffect$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, TextureEffect$values());
  }
  TextureEffect$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var TextureEffect$Companion_instance = null;
  function TextureEffect$Companion_getInstance() {
    TextureEffect_initFields();
    if (TextureEffect$Companion_instance === null) {
      new TextureEffect$Companion();
    }
    return TextureEffect$Companion_instance;
  }
  TextureEffect.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureEffect',
    interfaces: [IdEnum, Enum]
  };
  function TextureEffect$values() {
    return [TextureEffect$MODULATE_getInstance(), TextureEffect$DECAL_getInstance(), TextureEffect$BLEND_getInstance(), TextureEffect$REPLACE_getInstance(), TextureEffect$ADD_getInstance()];
  }
  TextureEffect.values = TextureEffect$values;
  function TextureEffect$valueOf(name) {
    switch (name) {
      case 'MODULATE':
        return TextureEffect$MODULATE_getInstance();
      case 'DECAL':
        return TextureEffect$DECAL_getInstance();
      case 'BLEND':
        return TextureEffect$BLEND_getInstance();
      case 'REPLACE':
        return TextureEffect$REPLACE_getInstance();
      case 'ADD':
        return TextureEffect$ADD_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.TextureEffect.' + name);
    }
  }
  TextureEffect.valueOf_61zpoe$ = TextureEffect$valueOf;
  function TextureFilter(name, ordinal, id, nearest, nearestMipmap) {
    Enum.call(this);
    this.id_15ryh9$_0 = id;
    this.nearest = nearest;
    this.nearestMipmap = nearestMipmap;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureFilter_initFields() {
    TextureFilter_initFields = function () {
    };
    TextureFilter$NEAREST_instance = new TextureFilter('NEAREST', 0, 0, true, false);
    TextureFilter$LINEAR_instance = new TextureFilter('LINEAR', 1, 1, false, false);
    TextureFilter$NEAREST_MIPMAP_NEAREST_instance = new TextureFilter('NEAREST_MIPMAP_NEAREST', 2, 4, true, true);
    TextureFilter$LINEAR_MIPMAP_NEAREST_instance = new TextureFilter('LINEAR_MIPMAP_NEAREST', 3, 5, false, true);
    TextureFilter$NEAREST_MIPMAP_LINEAR_instance = new TextureFilter('NEAREST_MIPMAP_LINEAR', 4, 6, true, false);
    TextureFilter$LINEAR_MIPMAP_LINEAR_instance = new TextureFilter('LINEAR_MIPMAP_LINEAR', 5, 7, false, false);
    TextureFilter$Companion_getInstance();
  }
  Object.defineProperty(TextureFilter.prototype, 'id', {
    get: function () {
      return this.id_15ryh9$_0;
    }
  });
  var TextureFilter$NEAREST_instance;
  function TextureFilter$NEAREST_getInstance() {
    TextureFilter_initFields();
    return TextureFilter$NEAREST_instance;
  }
  var TextureFilter$LINEAR_instance;
  function TextureFilter$LINEAR_getInstance() {
    TextureFilter_initFields();
    return TextureFilter$LINEAR_instance;
  }
  var TextureFilter$NEAREST_MIPMAP_NEAREST_instance;
  function TextureFilter$NEAREST_MIPMAP_NEAREST_getInstance() {
    TextureFilter_initFields();
    return TextureFilter$NEAREST_MIPMAP_NEAREST_instance;
  }
  var TextureFilter$LINEAR_MIPMAP_NEAREST_instance;
  function TextureFilter$LINEAR_MIPMAP_NEAREST_getInstance() {
    TextureFilter_initFields();
    return TextureFilter$LINEAR_MIPMAP_NEAREST_instance;
  }
  var TextureFilter$NEAREST_MIPMAP_LINEAR_instance;
  function TextureFilter$NEAREST_MIPMAP_LINEAR_getInstance() {
    TextureFilter_initFields();
    return TextureFilter$NEAREST_MIPMAP_LINEAR_instance;
  }
  var TextureFilter$LINEAR_MIPMAP_LINEAR_instance;
  function TextureFilter$LINEAR_MIPMAP_LINEAR_getInstance() {
    TextureFilter_initFields();
    return TextureFilter$LINEAR_MIPMAP_LINEAR_instance;
  }
  function TextureFilter$Companion() {
    TextureFilter$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, TextureFilter$values());
  }
  TextureFilter$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var TextureFilter$Companion_instance = null;
  function TextureFilter$Companion_getInstance() {
    TextureFilter_initFields();
    if (TextureFilter$Companion_instance === null) {
      new TextureFilter$Companion();
    }
    return TextureFilter$Companion_instance;
  }
  TextureFilter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureFilter',
    interfaces: [IdEnum, Enum]
  };
  function TextureFilter$values() {
    return [TextureFilter$NEAREST_getInstance(), TextureFilter$LINEAR_getInstance(), TextureFilter$NEAREST_MIPMAP_NEAREST_getInstance(), TextureFilter$LINEAR_MIPMAP_NEAREST_getInstance(), TextureFilter$NEAREST_MIPMAP_LINEAR_getInstance(), TextureFilter$LINEAR_MIPMAP_LINEAR_getInstance()];
  }
  TextureFilter.values = TextureFilter$values;
  function TextureFilter$valueOf(name) {
    switch (name) {
      case 'NEAREST':
        return TextureFilter$NEAREST_getInstance();
      case 'LINEAR':
        return TextureFilter$LINEAR_getInstance();
      case 'NEAREST_MIPMAP_NEAREST':
        return TextureFilter$NEAREST_MIPMAP_NEAREST_getInstance();
      case 'LINEAR_MIPMAP_NEAREST':
        return TextureFilter$LINEAR_MIPMAP_NEAREST_getInstance();
      case 'NEAREST_MIPMAP_LINEAR':
        return TextureFilter$NEAREST_MIPMAP_LINEAR_getInstance();
      case 'LINEAR_MIPMAP_LINEAR':
        return TextureFilter$LINEAR_MIPMAP_LINEAR_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.TextureFilter.' + name);
    }
  }
  TextureFilter.valueOf_61zpoe$ = TextureFilter$valueOf;
  function TextureColorComponent(name, ordinal, id) {
    Enum.call(this);
    this.id_di5c9d$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TextureColorComponent_initFields() {
    TextureColorComponent_initFields = function () {
    };
    TextureColorComponent$RGB_instance = new TextureColorComponent('RGB', 0, 0);
    TextureColorComponent$RGBA_instance = new TextureColorComponent('RGBA', 1, 1);
    TextureColorComponent$Companion_getInstance();
  }
  Object.defineProperty(TextureColorComponent.prototype, 'id', {
    get: function () {
      return this.id_di5c9d$_0;
    }
  });
  var TextureColorComponent$RGB_instance;
  function TextureColorComponent$RGB_getInstance() {
    TextureColorComponent_initFields();
    return TextureColorComponent$RGB_instance;
  }
  var TextureColorComponent$RGBA_instance;
  function TextureColorComponent$RGBA_getInstance() {
    TextureColorComponent_initFields();
    return TextureColorComponent$RGBA_instance;
  }
  function TextureColorComponent$Companion() {
    TextureColorComponent$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, TextureColorComponent$values());
  }
  TextureColorComponent$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var TextureColorComponent$Companion_instance = null;
  function TextureColorComponent$Companion_getInstance() {
    TextureColorComponent_initFields();
    if (TextureColorComponent$Companion_instance === null) {
      new TextureColorComponent$Companion();
    }
    return TextureColorComponent$Companion_instance;
  }
  TextureColorComponent.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureColorComponent',
    interfaces: [IdEnum, Enum]
  };
  function TextureColorComponent$values() {
    return [TextureColorComponent$RGB_getInstance(), TextureColorComponent$RGBA_getInstance()];
  }
  TextureColorComponent.values = TextureColorComponent$values;
  function TextureColorComponent$valueOf(name) {
    switch (name) {
      case 'RGB':
        return TextureColorComponent$RGB_getInstance();
      case 'RGBA':
        return TextureColorComponent$RGBA_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.TextureColorComponent.' + name);
    }
  }
  TextureColorComponent.valueOf_61zpoe$ = TextureColorComponent$valueOf;
  function PrimitiveType(name, ordinal, id) {
    Enum.call(this);
    this.id_c7qgrp$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PrimitiveType_initFields() {
    PrimitiveType_initFields = function () {
    };
    PrimitiveType$POINTS_instance = new PrimitiveType('POINTS', 0, 0);
    PrimitiveType$LINES_instance = new PrimitiveType('LINES', 1, 1);
    PrimitiveType$LINE_STRIP_instance = new PrimitiveType('LINE_STRIP', 2, 2);
    PrimitiveType$TRIANGLES_instance = new PrimitiveType('TRIANGLES', 3, 3);
    PrimitiveType$TRIANGLE_STRIP_instance = new PrimitiveType('TRIANGLE_STRIP', 4, 4);
    PrimitiveType$TRIANGLE_FAN_instance = new PrimitiveType('TRIANGLE_FAN', 5, 5);
    PrimitiveType$SPRITES_instance = new PrimitiveType('SPRITES', 6, 6);
    PrimitiveType$Companion_getInstance();
  }
  Object.defineProperty(PrimitiveType.prototype, 'id', {
    get: function () {
      return this.id_c7qgrp$_0;
    }
  });
  var PrimitiveType$POINTS_instance;
  function PrimitiveType$POINTS_getInstance() {
    PrimitiveType_initFields();
    return PrimitiveType$POINTS_instance;
  }
  var PrimitiveType$LINES_instance;
  function PrimitiveType$LINES_getInstance() {
    PrimitiveType_initFields();
    return PrimitiveType$LINES_instance;
  }
  var PrimitiveType$LINE_STRIP_instance;
  function PrimitiveType$LINE_STRIP_getInstance() {
    PrimitiveType_initFields();
    return PrimitiveType$LINE_STRIP_instance;
  }
  var PrimitiveType$TRIANGLES_instance;
  function PrimitiveType$TRIANGLES_getInstance() {
    PrimitiveType_initFields();
    return PrimitiveType$TRIANGLES_instance;
  }
  var PrimitiveType$TRIANGLE_STRIP_instance;
  function PrimitiveType$TRIANGLE_STRIP_getInstance() {
    PrimitiveType_initFields();
    return PrimitiveType$TRIANGLE_STRIP_instance;
  }
  var PrimitiveType$TRIANGLE_FAN_instance;
  function PrimitiveType$TRIANGLE_FAN_getInstance() {
    PrimitiveType_initFields();
    return PrimitiveType$TRIANGLE_FAN_instance;
  }
  var PrimitiveType$SPRITES_instance;
  function PrimitiveType$SPRITES_getInstance() {
    PrimitiveType_initFields();
    return PrimitiveType$SPRITES_instance;
  }
  function PrimitiveType$Companion() {
    PrimitiveType$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, PrimitiveType$values());
  }
  PrimitiveType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var PrimitiveType$Companion_instance = null;
  function PrimitiveType$Companion_getInstance() {
    PrimitiveType_initFields();
    if (PrimitiveType$Companion_instance === null) {
      new PrimitiveType$Companion();
    }
    return PrimitiveType$Companion_instance;
  }
  PrimitiveType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PrimitiveType',
    interfaces: [IdEnum, Enum]
  };
  function PrimitiveType$values() {
    return [PrimitiveType$POINTS_getInstance(), PrimitiveType$LINES_getInstance(), PrimitiveType$LINE_STRIP_getInstance(), PrimitiveType$TRIANGLES_getInstance(), PrimitiveType$TRIANGLE_STRIP_getInstance(), PrimitiveType$TRIANGLE_FAN_getInstance(), PrimitiveType$SPRITES_getInstance()];
  }
  PrimitiveType.values = PrimitiveType$values;
  function PrimitiveType$valueOf(name) {
    switch (name) {
      case 'POINTS':
        return PrimitiveType$POINTS_getInstance();
      case 'LINES':
        return PrimitiveType$LINES_getInstance();
      case 'LINE_STRIP':
        return PrimitiveType$LINE_STRIP_getInstance();
      case 'TRIANGLES':
        return PrimitiveType$TRIANGLES_getInstance();
      case 'TRIANGLE_STRIP':
        return PrimitiveType$TRIANGLE_STRIP_getInstance();
      case 'TRIANGLE_FAN':
        return PrimitiveType$TRIANGLE_FAN_getInstance();
      case 'SPRITES':
        return PrimitiveType$SPRITES_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.PrimitiveType.' + name);
    }
  }
  PrimitiveType.valueOf_61zpoe$ = PrimitiveType$valueOf;
  function ClearBufferSet() {
    ClearBufferSet_instance = this;
    this.ColorBuffer = 1;
    this.StencilBuffer = 2;
    this.DepthBuffer = 4;
    this.FastClear = 16;
  }
  ClearBufferSet.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ClearBufferSet',
    interfaces: []
  };
  var ClearBufferSet_instance = null;
  function ClearBufferSet_getInstance() {
    if (ClearBufferSet_instance === null) {
      new ClearBufferSet();
    }
    return ClearBufferSet_instance;
  }
  function PspRGB_565() {
    PspRGB_565_instance = this;
    ColorFormat16.call(this);
    this.$delegate_frqjuc$_0 = new ColorFormatBase$Mixin(0, 5, 5, 6, 11, 5, 15, 0);
  }
  PspRGB_565.prototype.getA_za3lpa$ = function (v) {
    return 255;
  };
  PspRGB_565.prototype.getB_za3lpa$ = function (v) {
    return this.$delegate_frqjuc$_0.getB_za3lpa$(v);
  };
  PspRGB_565.prototype.getG_za3lpa$ = function (v) {
    return this.$delegate_frqjuc$_0.getG_za3lpa$(v);
  };
  PspRGB_565.prototype.getR_za3lpa$ = function (v) {
    return this.$delegate_frqjuc$_0.getR_za3lpa$(v);
  };
  PspRGB_565.prototype.pack_tjonv8$ = function (r, g, b, a) {
    return this.$delegate_frqjuc$_0.pack_tjonv8$(r, g, b, a);
  };
  PspRGB_565.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'PspRGB_565',
    interfaces: [ColorFormat16, ColorFormatBase]
  };
  var PspRGB_565_instance = null;
  function PspRGB_565_getInstance() {
    if (PspRGB_565_instance === null) {
      new PspRGB_565();
    }
    return PspRGB_565_instance;
  }
  function PspRGBA_5551() {
    PspRGBA_5551_instance = this;
    ColorFormat16.call(this);
    this.$delegate_vm25e9$_0 = new ColorFormatBase$Mixin(0, 5, 5, 5, 10, 5, 15, 1);
  }
  PspRGBA_5551.prototype.getA_za3lpa$ = function (v) {
    return this.$delegate_vm25e9$_0.getA_za3lpa$(v);
  };
  PspRGBA_5551.prototype.getB_za3lpa$ = function (v) {
    return this.$delegate_vm25e9$_0.getB_za3lpa$(v);
  };
  PspRGBA_5551.prototype.getG_za3lpa$ = function (v) {
    return this.$delegate_vm25e9$_0.getG_za3lpa$(v);
  };
  PspRGBA_5551.prototype.getR_za3lpa$ = function (v) {
    return this.$delegate_vm25e9$_0.getR_za3lpa$(v);
  };
  PspRGBA_5551.prototype.pack_tjonv8$ = function (r, g, b, a) {
    return this.$delegate_vm25e9$_0.pack_tjonv8$(r, g, b, a);
  };
  PspRGBA_5551.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'PspRGBA_5551',
    interfaces: [ColorFormat16, ColorFormatBase]
  };
  var PspRGBA_5551_instance = null;
  function PspRGBA_5551_getInstance() {
    if (PspRGBA_5551_instance === null) {
      new PspRGBA_5551();
    }
    return PspRGBA_5551_instance;
  }
  function PixelFormat(name, ordinal, id, bytesPerPixel, colorFormat, isRgba, isPalette, colorBits, paletteBits, dxtVersion, isCompressed) {
    if (colorFormat === void 0)
      colorFormat = null;
    if (isRgba === void 0)
      isRgba = false;
    if (isPalette === void 0)
      isPalette = false;
    if (colorBits === void 0)
      colorBits = 0;
    if (paletteBits === void 0)
      paletteBits = 0;
    if (dxtVersion === void 0)
      dxtVersion = 0;
    if (isCompressed === void 0)
      isCompressed = false;
    Enum.call(this);
    this.id_vtujhz$_0 = id;
    this.bytesPerPixel = bytesPerPixel;
    this.colorFormat = colorFormat;
    this.isRgba = isRgba;
    this.isPalette = isPalette;
    this.colorBits = colorBits;
    this.paletteBits = paletteBits;
    this.dxtVersion = dxtVersion;
    this.isCompressed = isCompressed;
    this.name$ = name;
    this.ordinal$ = ordinal;
    this.bitsPerPixel = numberToInt(this.bytesPerPixel * 8);
    this.requireClut = this.isPalette;
  }
  function PixelFormat_initFields() {
    PixelFormat_initFields = function () {
    };
    PixelFormat$RGBA_5650_instance = new PixelFormat('RGBA_5650', 0, 0, 2.0, PspRGB_565_getInstance(), true, void 0, 16);
    PixelFormat$RGBA_5551_instance = new PixelFormat('RGBA_5551', 1, 1, 2.0, PspRGBA_5551_getInstance(), true, void 0, 16);
    PixelFormat$RGBA_4444_instance = new PixelFormat('RGBA_4444', 2, 2, 2.0, color.RGBA_4444, true, void 0, 16);
    PixelFormat$RGBA_8888_instance = new PixelFormat('RGBA_8888', 3, 3, 4.0, color.RGBA, true, void 0, 32);
    PixelFormat$PALETTE_T4_instance = new PixelFormat('PALETTE_T4', 4, 4, 0.5, void 0, void 0, true, void 0, 4);
    PixelFormat$PALETTE_T8_instance = new PixelFormat('PALETTE_T8', 5, 5, 1.0, void 0, void 0, true, void 0, 8);
    PixelFormat$PALETTE_T16_instance = new PixelFormat('PALETTE_T16', 6, 6, 2.0, void 0, void 0, true, void 0, 16);
    PixelFormat$PALETTE_T32_instance = new PixelFormat('PALETTE_T32', 7, 7, 4.0, void 0, void 0, true, void 0, 32);
    PixelFormat$COMPRESSED_DXT1_instance = new PixelFormat('COMPRESSED_DXT1', 8, 8, 0.5, void 0, void 0, void 0, void 0, void 0, 1, true);
    PixelFormat$COMPRESSED_DXT3_instance = new PixelFormat('COMPRESSED_DXT3', 9, 9, 1.0, void 0, void 0, void 0, void 0, void 0, 3, true);
    PixelFormat$COMPRESSED_DXT5_instance = new PixelFormat('COMPRESSED_DXT5', 10, 10, 1.0, void 0, void 0, void 0, void 0, void 0, 5, true);
    PixelFormat$Companion_getInstance();
  }
  Object.defineProperty(PixelFormat.prototype, 'id', {
    get: function () {
      return this.id_vtujhz$_0;
    }
  });
  var PixelFormat$RGBA_5650_instance;
  function PixelFormat$RGBA_5650_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$RGBA_5650_instance;
  }
  var PixelFormat$RGBA_5551_instance;
  function PixelFormat$RGBA_5551_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$RGBA_5551_instance;
  }
  var PixelFormat$RGBA_4444_instance;
  function PixelFormat$RGBA_4444_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$RGBA_4444_instance;
  }
  var PixelFormat$RGBA_8888_instance;
  function PixelFormat$RGBA_8888_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$RGBA_8888_instance;
  }
  var PixelFormat$PALETTE_T4_instance;
  function PixelFormat$PALETTE_T4_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$PALETTE_T4_instance;
  }
  var PixelFormat$PALETTE_T8_instance;
  function PixelFormat$PALETTE_T8_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$PALETTE_T8_instance;
  }
  var PixelFormat$PALETTE_T16_instance;
  function PixelFormat$PALETTE_T16_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$PALETTE_T16_instance;
  }
  var PixelFormat$PALETTE_T32_instance;
  function PixelFormat$PALETTE_T32_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$PALETTE_T32_instance;
  }
  var PixelFormat$COMPRESSED_DXT1_instance;
  function PixelFormat$COMPRESSED_DXT1_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$COMPRESSED_DXT1_instance;
  }
  var PixelFormat$COMPRESSED_DXT3_instance;
  function PixelFormat$COMPRESSED_DXT3_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$COMPRESSED_DXT3_instance;
  }
  var PixelFormat$COMPRESSED_DXT5_instance;
  function PixelFormat$COMPRESSED_DXT5_getInstance() {
    PixelFormat_initFields();
    return PixelFormat$COMPRESSED_DXT5_instance;
  }
  PixelFormat.prototype.getSizeInBytes_za3lpa$ = function (count) {
    return numberToInt(this.bytesPerPixel * count);
  };
  function PixelFormat$Companion() {
    PixelFormat$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, PixelFormat$values());
  }
  PixelFormat$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var PixelFormat$Companion_instance = null;
  function PixelFormat$Companion_getInstance() {
    PixelFormat_initFields();
    if (PixelFormat$Companion_instance === null) {
      new PixelFormat$Companion();
    }
    return PixelFormat$Companion_instance;
  }
  PixelFormat.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PixelFormat',
    interfaces: [IdEnum, Enum]
  };
  function PixelFormat$values() {
    return [PixelFormat$RGBA_5650_getInstance(), PixelFormat$RGBA_5551_getInstance(), PixelFormat$RGBA_4444_getInstance(), PixelFormat$RGBA_8888_getInstance(), PixelFormat$PALETTE_T4_getInstance(), PixelFormat$PALETTE_T8_getInstance(), PixelFormat$PALETTE_T16_getInstance(), PixelFormat$PALETTE_T32_getInstance(), PixelFormat$COMPRESSED_DXT1_getInstance(), PixelFormat$COMPRESSED_DXT3_getInstance(), PixelFormat$COMPRESSED_DXT5_getInstance()];
  }
  PixelFormat.values = PixelFormat$values;
  function PixelFormat$valueOf(name) {
    switch (name) {
      case 'RGBA_5650':
        return PixelFormat$RGBA_5650_getInstance();
      case 'RGBA_5551':
        return PixelFormat$RGBA_5551_getInstance();
      case 'RGBA_4444':
        return PixelFormat$RGBA_4444_getInstance();
      case 'RGBA_8888':
        return PixelFormat$RGBA_8888_getInstance();
      case 'PALETTE_T4':
        return PixelFormat$PALETTE_T4_getInstance();
      case 'PALETTE_T8':
        return PixelFormat$PALETTE_T8_getInstance();
      case 'PALETTE_T16':
        return PixelFormat$PALETTE_T16_getInstance();
      case 'PALETTE_T32':
        return PixelFormat$PALETTE_T32_getInstance();
      case 'COMPRESSED_DXT1':
        return PixelFormat$COMPRESSED_DXT1_getInstance();
      case 'COMPRESSED_DXT3':
        return PixelFormat$COMPRESSED_DXT3_getInstance();
      case 'COMPRESSED_DXT5':
        return PixelFormat$COMPRESSED_DXT5_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.ge.PixelFormat.' + name);
    }
  }
  PixelFormat.valueOf_61zpoe$ = PixelFormat$valueOf;
  var Array_0 = Array;
  function GeList(ge, id) {
    this.ge = ge;
    this.id_xek0ho$_0 = id;
    this.logger = Logger.Companion.invoke_61zpoe$('GeList');
    this.start = 0;
    this.stall = 0;
    this.callback = new GeCallback(-1);
    this.pspGeListArgs = 0;
    this.PC = this.start;
    this.completed = false;
    this.bb = new GeBatchBuilder(this.ge);
    this.onCompleted = new Signal2();
    this.phase = ListSyncKind$QUEUED_getInstance();
    this.callstackIndex = 0;
    this.callstack = new Int32Array(256);
    this.state = this.ge.state;
    this.stateData = this.state.data;
    var array = Array_0(4 * 4 | 0);
    var tmp$;
    tmp$ = array.length - 1 | 0;
    for (var i = 0; i <= tmp$; i++) {
      array[i] = new VertexRaw();
    }
    this.tempVertices_0 = array;
  }
  Object.defineProperty(GeList.prototype, 'id', {
    get: function () {
      return this.id_xek0ho$_0;
    }
  });
  GeList.prototype.reset = function () {
    this.completed = false;
    this.bb.reset();
    this.onCompleted = new Signal2();
    this.phase = ListSyncKind$QUEUED_getInstance();
  };
  Object.defineProperty(GeList.prototype, 'isStalled', {
    get: function () {
      return this.stall !== 0 && this.PC >= this.stall;
    }
  });
  GeList.prototype.run = function () {
    var mem = get_mem(this);
    this.PC = this.PC & Memory$Companion_getInstance().MASK;
    this.stall = this.stall & Memory$Companion_getInstance().MASK;
    while (!this.completed && !this.isStalled) {
      var cPC = this.PC;
      this.PC = this.PC + 4 | 0;
      this.step_vux9f0$(cPC, mem.lw_za3lpa$(cPC));
    }
    if (this.isStalled)
      this.phase = ListSyncKind$STALL_REACHED_getInstance();
    if (this.completed) {
      this.phase = ListSyncKind$DRAWING_DONE_getInstance();
      this.onCompleted.invoke_11rb$(Unit);
    }
  };
  GeList.prototype.step_vux9f0$ = function (cPC, i) {
    var tmp$, tmp$_0;
    var op = i >>> 24;
    var p = i & 16777215;
    var $this = this.logger;
    var level = LogLevel.TRACE;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'GE: ' + get_hex(cPC) + '-' + get_hex(this.stall) + ': ' + get_hex(op));
    }
    if (op === GeOpCodes_getInstance().PRIM)
      this.prim_0(p);
    else if (op === GeOpCodes_getInstance().TRXKICK)
      println('TRXKICK');
    else if (op === GeOpCodes_getInstance().TRXSPOS)
      println('TRXSPOS');
    else if (op === GeOpCodes_getInstance().TRXDPOS)
      println('TRXDPOS');
    else if (op === GeOpCodes_getInstance().BEZIER)
      this.bezier_0(p);
    else if (op === GeOpCodes_getInstance().SPLINE) {
      var $this_0 = this.logger;
      var level_0 = LogLevel.ERROR;
      if ($this_0.isEnabled_ci8eq1$(level_0)) {
        $this_0.actualLog_t189ph$(level_0, 'Not implemented SPLINE');
      }
    }
     else if (op === GeOpCodes_getInstance().END) {
      this.bb.flush();
      this.completed = true;
    }
     else if (op === GeOpCodes_getInstance().TFLUSH) {
      this.bb.tflush();
      this.bb.flush();
    }
     else if (op === GeOpCodes_getInstance().TSYNC)
      this.bb.tsync();
    else if (op !== GeOpCodes_getInstance().NOP)
      if (op !== GeOpCodes_getInstance().DUMMY)
        if (op === GeOpCodes_getInstance().JUMP || op === GeOpCodes_getInstance().CALL) {
          if (op === GeOpCodes_getInstance().CALL) {
            this.callstack[tmp$ = this.callstackIndex, this.callstackIndex = tmp$ + 1 | 0, tmp$] = this.PC;
            this.callstack[tmp$_0 = this.callstackIndex, this.callstackIndex = tmp$_0 + 1 | 0, tmp$_0] = this.state.baseOffset >>> 2;
          }
          this.PC = this.state.baseAddress + p & ~3 & Memory$Companion_getInstance().MASK;
        }
         else if (op === GeOpCodes_getInstance().RET) {
          throw new NotImplementedError_init('An operation is not implemented: ' + 'RET');
        }
         else if (op === GeOpCodes_getInstance().FINISH)
          this.finish_0(p);
        else if (op === GeOpCodes_getInstance().SIGNAL)
          this.signal_0(p);
        else if (op !== GeOpCodes_getInstance().BASE && op !== GeOpCodes_getInstance().IADDR && op !== GeOpCodes_getInstance().VADDR && op !== GeOpCodes_getInstance().OFFSETADDR)
          if (op === GeOpCodes_getInstance().PROJMATRIXDATA)
            this.state.writeInt_qt1dr2$(GeOpCodes_getInstance().PROJMATRIXNUMBER, GeOpCodes_getInstance().MAT_PROJ, p);
          else if (op === GeOpCodes_getInstance().VIEWMATRIXDATA)
            this.state.writeInt_qt1dr2$(GeOpCodes_getInstance().VIEWMATRIXNUMBER, GeOpCodes_getInstance().MAT_VIEW, p);
          else if (op === GeOpCodes_getInstance().WORLDMATRIXDATA)
            this.state.writeInt_qt1dr2$(GeOpCodes_getInstance().WORLDMATRIXNUMBER, GeOpCodes_getInstance().MAT_WORLD, p);
          else if (op === GeOpCodes_getInstance().BONEMATRIXDATA)
            this.state.writeInt_qt1dr2$(GeOpCodes_getInstance().BONEMATRIXNUMBER, GeOpCodes_getInstance().MAT_BONES, p);
          else if (op === GeOpCodes_getInstance().TGENMATRIXDATA)
            this.state.writeInt_qt1dr2$(GeOpCodes_getInstance().TGENMATRIXNUMBER, GeOpCodes_getInstance().MAT_TEXTURE, p);
          else {
            if (this.ge.state.data[op] !== p)
              this.bb.flush();
          }
    this.stateData[op] = p;
  };
  GeList.prototype.bezier_0 = function (p) {
    var vt = new VertexType(this.state.vertexType);
    var vr = new VertexReader();
    var a = extract8(p, 0);
    var ucount = Math_0.max(a, 4);
    var a_0 = extract8(p, 8);
    var vcount = Math_0.max(a_0, 4);
    var divs = this.state.patch.divs;
    var divt = this.state.patch.divt;
    var useTexture = vt.hasTexture || this.state.texture.enabled;
    var generateUV = useTexture && !vt.hasTexture;
    var vertices = vr.read_riyqrj$(vt, Kotlin.imul(ucount, vcount), get_mem(this).getPointerStream_za3lpa$(this.state.vertexAddress), this.tempVertices_0);
    var indices = new IntArrayList();
    var vertexCount = Kotlin.imul(ucount, vcount);
    if (generateUV) {
      var n = 0;
      for (var v = 0; v < ucount; v++) {
        for (var u = 0; u < vcount; u++) {
          var vertex = vertices[n];
          vertex.tex[0] = u / (vcount - 1 | 0);
          vertex.tex[1] = v / (ucount - 1 | 0);
          n = n + 1 | 0;
        }
      }
    }
    var tmp$, tmp$_0;
    tmp$ = ucount - 1 | 0;
    for (var u_0 = 0; u_0 < tmp$; u_0++) {
      tmp$_0 = vcount - 1 | 0;
      for (var v_0 = 0; v_0 < tmp$_0; v_0++) {
        var n_0 = Kotlin.imul(u_0, ucount) + v_0 | 0;
        indices.add_za3lpa$(n_0 + 0 | 0);
        indices.add_za3lpa$(n_0 + 1 | 0);
        indices.add_za3lpa$(n_0 + ucount | 0);
        indices.add_za3lpa$(n_0 + ucount | 0);
        indices.add_za3lpa$(n_0 + 1 | 0);
        indices.add_za3lpa$(n_0 + ucount + 1 | 0);
      }
    }
    this.bb.flush();
    this.bb.addUnoptimizedShape_omiwza$(PrimitiveType$TRIANGLES_getInstance(), copyOfShortArray(indices), vertices, vertexCount, true, false, useTexture, false, false);
  };
  GeList.prototype.prim_0 = function (p) {
    var primitiveType = PrimitiveType$Companion_getInstance().invoke_za3lpa$(extract_0(p, 16, 3));
    var vertexCount = extract_0(p, 0, 16);
    this.bb.setVertexKind_hlyuka$(primitiveType, this.state);
    this.bb.addIndices_za3lpa$(vertexCount);
  };
  GeList.prototype.finish_0 = function (p) {
    get_callbackManager(this).queueFunction1_vux9f0$(this.callback.finish_func, this.callback.finish_arg);
    this.bb.flush();
  };
  GeList.prototype.signal_0 = function (p) {
    get_callbackManager(this).queueFunction1_vux9f0$(this.callback.signal_func, this.callback.signal_arg);
  };
  GeList.prototype.sync_za3lpa$ = function (syncType) {
    this.run();
  };
  Object.defineProperty(GeList.prototype, 'emulator', {
    get: function () {
      return this.ge.emulator;
    }
  });
  GeList.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeList',
    interfaces: [WithEmulator, ResourceItem]
  };
  function GeOpCodes() {
    GeOpCodes_instance = this;
    this.NOP = 0;
    this.VADDR = 1;
    this.IADDR = 2;
    this.Unknown0x03 = 3;
    this.PRIM = 4;
    this.BEZIER = 5;
    this.SPLINE = 6;
    this.BOUNDINGBOX = 7;
    this.JUMP = 8;
    this.BJUMP = 9;
    this.CALL = 10;
    this.RET = 11;
    this.END = 12;
    this.Unknown0x0D = 13;
    this.SIGNAL = 14;
    this.FINISH = 15;
    this.BASE = 16;
    this.Unknown0x11 = 17;
    this.VERTEXTYPE = 18;
    this.OFFSETADDR = 19;
    this.ORIGIN = 20;
    this.REGION1 = 21;
    this.REGION2 = 22;
    this.LIGHTINGENABLE = 23;
    this.LIGHTENABLE0 = 24;
    this.LIGHTENABLE1 = 25;
    this.LIGHTENABLE2 = 26;
    this.LIGHTENABLE3 = 27;
    this.CLIPENABLE = 28;
    this.CULLFACEENABLE = 29;
    this.TEXTUREMAPENABLE = 30;
    this.FOGENABLE = 31;
    this.DITHERENABLE = 32;
    this.ALPHABLENDENABLE = 33;
    this.ALPHATESTENABLE = 34;
    this.ZTESTENABLE = 35;
    this.STENCILTESTENABLE = 36;
    this.ANTIALIASENABLE = 37;
    this.PATCHCULLENABLE = 38;
    this.COLORTESTENABLE = 39;
    this.LOGICOPENABLE = 40;
    this.Unknown0x29 = 41;
    this.BONEMATRIXNUMBER = 42;
    this.BONEMATRIXDATA = 43;
    this.MORPHWEIGHT0 = 44;
    this.MORPHWEIGHT1 = 45;
    this.MORPHWEIGHT2 = 46;
    this.MORPHWEIGHT3 = 47;
    this.MORPHWEIGHT4 = 48;
    this.MORPHWEIGHT5 = 49;
    this.MORPHWEIGHT6 = 50;
    this.MORPHWEIGHT7 = 51;
    this.Unknown0x34 = 52;
    this.Unknown0x35 = 53;
    this.PATCHDIVISION = 54;
    this.PATCHPRIMITIVE = 55;
    this.PATCHFACING = 56;
    this.Unknown0x39 = 57;
    this.WORLDMATRIXNUMBER = 58;
    this.WORLDMATRIXDATA = 59;
    this.VIEWMATRIXNUMBER = 60;
    this.VIEWMATRIXDATA = 61;
    this.PROJMATRIXNUMBER = 62;
    this.PROJMATRIXDATA = 63;
    this.TGENMATRIXNUMBER = 64;
    this.TGENMATRIXDATA = 65;
    this.VIEWPORTX1 = 66;
    this.VIEWPORTY1 = 67;
    this.VIEWPORTZ1 = 68;
    this.VIEWPORTX2 = 69;
    this.VIEWPORTY2 = 70;
    this.VIEWPORTZ2 = 71;
    this.TEXSCALEU = 72;
    this.TEXSCALEV = 73;
    this.TEXOFFSETU = 74;
    this.TEXOFFSETV = 75;
    this.OFFSETX = 76;
    this.OFFSETY = 77;
    this.Unknown0x4E = 78;
    this.Unknown0x4F = 79;
    this.SHADEMODE = 80;
    this.REVERSENORMAL = 81;
    this.Unknown0x52 = 82;
    this.MATERIALUPDATE = 83;
    this.MATERIALEMISSIVE = 84;
    this.MATERIALAMBIENT = 85;
    this.MATERIALDIFFUSE = 86;
    this.MATERIALSPECULAR = 87;
    this.MATERIALALPHA = 88;
    this.Unknown0x59 = 89;
    this.Unknown0x5A = 90;
    this.MATERIALSPECULARCOEF = 91;
    this.AMBIENTCOLOR = 92;
    this.AMBIENTALPHA = 93;
    this.LIGHTMODE = 94;
    this.LIGHTTYPE0 = 95;
    this.LIGHTTYPE1 = 96;
    this.LIGHTTYPE2 = 97;
    this.LIGHTTYPE3 = 98;
    this.LXP0 = 99;
    this.LYP0 = 100;
    this.LZP0 = 101;
    this.LXP1 = 102;
    this.LYP1 = 103;
    this.LZP1 = 104;
    this.LXP2 = 105;
    this.LYP2 = 106;
    this.LZP2 = 107;
    this.LXP3 = 108;
    this.LYP3 = 109;
    this.LZP3 = 110;
    this.LXD0 = 111;
    this.LYD0 = 112;
    this.LZD0 = 113;
    this.LXD1 = 114;
    this.LYD1 = 115;
    this.LZD1 = 116;
    this.LXD2 = 117;
    this.LYD2 = 118;
    this.LZD2 = 119;
    this.LXD3 = 120;
    this.LYD3 = 121;
    this.LZD3 = 122;
    this.LCA0 = 123;
    this.LLA0 = 124;
    this.LQA0 = 125;
    this.LCA1 = 126;
    this.LLA1 = 127;
    this.LQA1 = 128;
    this.LCA2 = 129;
    this.LLA2 = 130;
    this.LQA2 = 131;
    this.LCA3 = 132;
    this.LLA3 = 133;
    this.LQA3 = 134;
    this.SPOTEXP0 = 135;
    this.SPOTEXP1 = 136;
    this.SPOTEXP2 = 137;
    this.SPOTEXP3 = 138;
    this.SPOTCUT0 = 139;
    this.SPOTCUT1 = 140;
    this.SPOTCUT2 = 141;
    this.SPOTCUT3 = 142;
    this.ALC0 = 143;
    this.DLC0 = 144;
    this.SLC0 = 145;
    this.ALC1 = 146;
    this.DLC1 = 147;
    this.SLC1 = 148;
    this.ALC2 = 149;
    this.DLC2 = 150;
    this.SLC2 = 151;
    this.ALC3 = 152;
    this.DLC3 = 153;
    this.SLC3 = 154;
    this.CULL = 155;
    this.FRAMEBUFPTR = 156;
    this.FRAMEBUFWIDTH = 157;
    this.ZBUFPTR = 158;
    this.ZBUFWIDTH = 159;
    this.TEXADDR0 = 160;
    this.TEXADDR1 = 161;
    this.TEXADDR2 = 162;
    this.TEXADDR3 = 163;
    this.TEXADDR4 = 164;
    this.TEXADDR5 = 165;
    this.TEXADDR6 = 166;
    this.TEXADDR7 = 167;
    this.TEXBUFWIDTH0 = 168;
    this.TEXBUFWIDTH1 = 169;
    this.TEXBUFWIDTH2 = 170;
    this.TEXBUFWIDTH3 = 171;
    this.TEXBUFWIDTH4 = 172;
    this.TEXBUFWIDTH5 = 173;
    this.TEXBUFWIDTH6 = 174;
    this.TEXBUFWIDTH7 = 175;
    this.CLUTADDR = 176;
    this.CLUTADDRUPPER = 177;
    this.TRXSBP = 178;
    this.TRXSBW = 179;
    this.TRXDBP = 180;
    this.TRXDBW = 181;
    this.Unknown0xB6 = 182;
    this.Unknown0xB7 = 183;
    this.TSIZE0 = 184;
    this.TSIZE1 = 185;
    this.TSIZE2 = 186;
    this.TSIZE3 = 187;
    this.TSIZE4 = 188;
    this.TSIZE5 = 189;
    this.TSIZE6 = 190;
    this.TSIZE7 = 191;
    this.TMAP = 192;
    this.TEXTURE_ENV_MAP_MATRIX = 193;
    this.TMODE = 194;
    this.TPSM = 195;
    this.CLOAD = 196;
    this.CMODE = 197;
    this.TFLT = 198;
    this.TWRAP = 199;
    this.TBIAS = 200;
    this.TFUNC = 201;
    this.TEC = 202;
    this.TFLUSH = 203;
    this.TSYNC = 204;
    this.FFAR = 205;
    this.FDIST = 206;
    this.FCOL = 207;
    this.TSLOPE = 208;
    this.Unknown0xD1 = 209;
    this.PSM = 210;
    this.CLEAR = 211;
    this.SCISSOR1 = 212;
    this.SCISSOR2 = 213;
    this.MINZ = 214;
    this.MAXZ = 215;
    this.CTST = 216;
    this.CREF = 217;
    this.CMSK = 218;
    this.ATST = 219;
    this.STST = 220;
    this.SOP = 221;
    this.ZTST = 222;
    this.ALPHA = 223;
    this.SFIX = 224;
    this.DFIX = 225;
    this.DTH0 = 226;
    this.DTH1 = 227;
    this.DTH2 = 228;
    this.DTH3 = 229;
    this.LOP = 230;
    this.ZMSK = 231;
    this.PMSKC = 232;
    this.PMSKA = 233;
    this.TRXKICK = 234;
    this.TRXSPOS = 235;
    this.TRXDPOS = 236;
    this.Unknown0xED = 237;
    this.TRXSIZE = 238;
    this.Unknown0xEF = 239;
    this.Unknown0xF0 = 240;
    this.Unknown0xF1 = 241;
    this.Unknown0xF2 = 242;
    this.Unknown0xF3 = 243;
    this.Unknown0xF4 = 244;
    this.Unknown0xF5 = 245;
    this.Unknown0xF6 = 246;
    this.Unknown0xF7 = 247;
    this.Unknown0xF8 = 248;
    this.Unknown0xF9 = 249;
    this.Unknown0xFA = 250;
    this.Unknown0xFB = 251;
    this.Unknown0xFC = 252;
    this.Unknown0xFD = 253;
    this.Unknown0xFE = 254;
    this.DUMMY = 255;
    this.MAT_TEXTURE = 256 + (16 * 1 | 0) | 0;
    this.MAT_PROJ = 256 + (16 * 2 | 0) | 0;
    this.MAT_VIEW = 256 + (16 * 3 | 0) | 0;
    this.MAT_WORLD = 256 + (16 * 4 | 0) | 0;
    this.MAT_BONES = 256 + (16 * 5 | 0) | 0;
  }
  GeOpCodes.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'GeOpCodes',
    interfaces: []
  };
  var GeOpCodes_instance = null;
  function GeOpCodes_getInstance() {
    if (GeOpCodes_instance === null) {
      new GeOpCodes();
    }
    return GeOpCodes_instance;
  }
  function bool1(p) {
    return p !== 0;
  }
  function parambool(p, offset) {
    return (p >>> offset & 1) !== 0;
  }
  function param1(p, offset) {
    return p >>> offset & 1;
  }
  function param2(p, offset) {
    return p >>> offset & 3;
  }
  function param3(p, offset) {
    return p >>> offset & 7;
  }
  function param4(p, offset) {
    return p >>> offset & 15;
  }
  function param5(p, offset) {
    return p >>> offset & 31;
  }
  function param8(p, offset) {
    return p >>> offset & 255;
  }
  function param10(p, offset) {
    return p >>> offset & 1023;
  }
  function param16(p, offset) {
    return p >>> offset & 65535;
  }
  function param24(p) {
    return p & 16777215;
  }
  function float1(p) {
    var bits = p << 8;
    return Kotlin.floatFromBits(bits);
  }
  function VertexState(data) {
    this.data = data;
  }
  Object.defineProperty(VertexState.prototype, 'value', {
    get: function () {
      return param24(this.data[GeOpCodes_getInstance().VERTEXTYPE]);
    }
  });
  Object.defineProperty(VertexState.prototype, 'reversedNormal', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().REVERSENORMAL]);
    }
  });
  Object.defineProperty(VertexState.prototype, 'address', {
    get: function () {
      return param24(this.data[GeOpCodes_getInstance().VADDR]);
    },
    set: function (value) {
      this.data[GeOpCodes_getInstance().VADDR] = value | GeOpCodes_getInstance().VADDR << 24;
    }
  });
  Object.defineProperty(VertexState.prototype, 'texture', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(param2(this.data[GeOpCodes_getInstance().VERTEXTYPE], 0));
    }
  });
  Object.defineProperty(VertexState.prototype, 'color', {
    get: function () {
      return ColorEnum$Companion_getInstance().invoke_za3lpa$(param3(this.data[GeOpCodes_getInstance().VERTEXTYPE], 2));
    }
  });
  Object.defineProperty(VertexState.prototype, 'normal', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(param2(this.data[GeOpCodes_getInstance().VERTEXTYPE], 5));
    }
  });
  Object.defineProperty(VertexState.prototype, 'position', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(param2(this.data[GeOpCodes_getInstance().VERTEXTYPE], 7));
    }
  });
  Object.defineProperty(VertexState.prototype, 'weight', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(param2(this.data[GeOpCodes_getInstance().VERTEXTYPE], 9));
    }
  });
  Object.defineProperty(VertexState.prototype, 'index', {
    get: function () {
      return IndexEnum$Companion_getInstance().invoke_za3lpa$(param2(this.data[GeOpCodes_getInstance().VERTEXTYPE], 11));
    }
  });
  Object.defineProperty(VertexState.prototype, 'weightCount', {
    get: function () {
      return param3(this.data[GeOpCodes_getInstance().VERTEXTYPE], 14);
    }
  });
  Object.defineProperty(VertexState.prototype, 'morphingVertexCount', {
    get: function () {
      return param2(this.data[GeOpCodes_getInstance().VERTEXTYPE], 18);
    }
  });
  Object.defineProperty(VertexState.prototype, 'transform2D', {
    get: function () {
      return parambool(this.data[GeOpCodes_getInstance().VERTEXTYPE], 23);
    }
  });
  VertexState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VertexState',
    interfaces: []
  };
  function ViewPort(data) {
    this.data = data;
  }
  Object.defineProperty(ViewPort.prototype, 'x', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().VIEWPORTX2]);
    }
  });
  Object.defineProperty(ViewPort.prototype, 'y', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().VIEWPORTY2]);
    }
  });
  Object.defineProperty(ViewPort.prototype, 'z', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().VIEWPORTZ2]);
    }
  });
  Object.defineProperty(ViewPort.prototype, 'width', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().VIEWPORTX1]);
    }
  });
  Object.defineProperty(ViewPort.prototype, 'height', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().VIEWPORTY1]);
    }
  });
  Object.defineProperty(ViewPort.prototype, 'depth', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().VIEWPORTZ1]);
    }
  });
  ViewPort.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ViewPort',
    interfaces: []
  };
  function Region(data) {
    this.data = data;
  }
  Object.defineProperty(Region.prototype, 'x1', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().REGION1], 0);
    }
  });
  Object.defineProperty(Region.prototype, 'y1', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().REGION1], 10);
    }
  });
  Object.defineProperty(Region.prototype, 'x2', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().REGION2], 0);
    }
  });
  Object.defineProperty(Region.prototype, 'y2', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().REGION2], 10);
    }
  });
  Region.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Region',
    interfaces: []
  };
  function Light(data, index) {
    Light$Companion_getInstance();
    this.data = data;
    this.index = index;
  }
  function Light$Companion() {
    Light$Companion_instance = this;
    this.REG_TYPES_0 = new Int32Array([GeOpCodes_getInstance().LIGHTTYPE0, GeOpCodes_getInstance().LIGHTTYPE1, GeOpCodes_getInstance().LIGHTTYPE2, GeOpCodes_getInstance().LIGHTTYPE3]);
    this.REG_LCA_0 = new Int32Array([GeOpCodes_getInstance().LCA0, GeOpCodes_getInstance().LCA1, GeOpCodes_getInstance().LCA2, GeOpCodes_getInstance().LCA3]);
    this.REG_LLA_0 = new Int32Array([GeOpCodes_getInstance().LLA0, GeOpCodes_getInstance().LLA1, GeOpCodes_getInstance().LLA2, GeOpCodes_getInstance().LLA3]);
    this.REG_LQA_0 = new Int32Array([GeOpCodes_getInstance().LQA0, GeOpCodes_getInstance().LQA1, GeOpCodes_getInstance().LQA2, GeOpCodes_getInstance().LQA3]);
    this.REG_SPOTEXP_0 = new Int32Array([GeOpCodes_getInstance().SPOTEXP0, GeOpCodes_getInstance().SPOTEXP1, GeOpCodes_getInstance().SPOTEXP2, GeOpCodes_getInstance().SPOTEXP3]);
    this.REG_SPOTCUT_0 = new Int32Array([GeOpCodes_getInstance().SPOTCUT0, GeOpCodes_getInstance().SPOTCUT1, GeOpCodes_getInstance().SPOTCUT2, GeOpCodes_getInstance().SPOTCUT3]);
    this.LXP_0 = new Int32Array([GeOpCodes_getInstance().LXP0, GeOpCodes_getInstance().LXP1, GeOpCodes_getInstance().LXP2, GeOpCodes_getInstance().LXP3]);
    this.LYP_0 = new Int32Array([GeOpCodes_getInstance().LYP0, GeOpCodes_getInstance().LYP1, GeOpCodes_getInstance().LYP2, GeOpCodes_getInstance().LYP3]);
    this.LZP_0 = new Int32Array([GeOpCodes_getInstance().LZP0, GeOpCodes_getInstance().LZP1, GeOpCodes_getInstance().LZP2, GeOpCodes_getInstance().LZP3]);
    this.LXD_0 = new Int32Array([GeOpCodes_getInstance().LXD0, GeOpCodes_getInstance().LXD1, GeOpCodes_getInstance().LXD2, GeOpCodes_getInstance().LXD3]);
    this.LYD_0 = new Int32Array([GeOpCodes_getInstance().LYD0, GeOpCodes_getInstance().LYD1, GeOpCodes_getInstance().LYD2, GeOpCodes_getInstance().LYD3]);
    this.LZD_0 = new Int32Array([GeOpCodes_getInstance().LZD0, GeOpCodes_getInstance().LZD1, GeOpCodes_getInstance().LZD2, GeOpCodes_getInstance().LZD3]);
    this.ALC_0 = new Int32Array([GeOpCodes_getInstance().ALC0, GeOpCodes_getInstance().ALC1, GeOpCodes_getInstance().ALC2, GeOpCodes_getInstance().ALC3]);
    this.DLC_0 = new Int32Array([GeOpCodes_getInstance().DLC0, GeOpCodes_getInstance().DLC1, GeOpCodes_getInstance().DLC2, GeOpCodes_getInstance().DLC3]);
    this.SLC_0 = new Int32Array([GeOpCodes_getInstance().SLC0, GeOpCodes_getInstance().SLC1, GeOpCodes_getInstance().SLC2, GeOpCodes_getInstance().SLC3]);
  }
  Light$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Light$Companion_instance = null;
  function Light$Companion_getInstance() {
    if (Light$Companion_instance === null) {
      new Light$Companion();
    }
    return Light$Companion_instance;
  }
  Object.defineProperty(Light.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().LIGHTENABLE0 + this.index | 0]);
    }
  });
  Object.defineProperty(Light.prototype, 'kind', {
    get: function () {
      return LightModelEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[Light$Companion_getInstance().REG_TYPES_0[this.index]], 0));
    }
  });
  Object.defineProperty(Light.prototype, 'type', {
    get: function () {
      return LightTypeEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[Light$Companion_getInstance().REG_TYPES_0[this.index]], 8));
    }
  });
  Object.defineProperty(Light.prototype, 'pw', {
    get: function () {
      return this.type === LightTypeEnum$SPOT_LIGHT_getInstance() ? 1 : 0;
    }
  });
  Object.defineProperty(Light.prototype, 'px', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().LXP_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'py', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().LYP_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'pz', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().LZP_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'dx', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().LXD_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'dy', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().LYD_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'dz', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().LZD_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'spotExponent', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().REG_SPOTEXP_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'spotCutoff', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().REG_SPOTCUT_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'constantAttenuation', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().REG_LCA_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'linearAttenuation', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().REG_LLA_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'quadraticAttenuation', {
    get: function () {
      return float1(this.data[Light$Companion_getInstance().REG_LQA_0[this.index]]);
    }
  });
  Object.defineProperty(Light.prototype, 'ambientColor', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(Light$Companion_getInstance().ALC_0[this.index]);
    }
  });
  Object.defineProperty(Light.prototype, 'diffuseColor', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(Light$Companion_getInstance().DLC_0[this.index]);
    }
  });
  Object.defineProperty(Light.prototype, 'specularColor', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(Light$Companion_getInstance().SLC_0[this.index]);
    }
  });
  Light.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Light',
    interfaces: []
  };
  function Lightning(data) {
    this.data = data;
    this.lights = listOf([new Light(this.data, 0), new Light(this.data, 1), new Light(this.data, 2), new Light(this.data, 3)]);
  }
  Object.defineProperty(Lightning.prototype, 'lightModel', {
    get: function () {
      return LightModelEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().LIGHTMODE], 0));
    }
  });
  Object.defineProperty(Lightning.prototype, 'specularPower', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().MATERIALSPECULARCOEF]);
    }
  });
  Object.defineProperty(Lightning.prototype, 'ambientLightColor', {
    get: function () {
      return (new Color()).setRGB_A_vux9f0$(this.data[GeOpCodes_getInstance().AMBIENTCOLOR], this.data[GeOpCodes_getInstance().AMBIENTALPHA]);
    }
  });
  Object.defineProperty(Lightning.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().LIGHTINGENABLE]);
    }
  });
  Lightning.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Lightning',
    interfaces: []
  };
  function MipmapState(texture, data, index) {
    this.texture = texture;
    this.data_0 = data;
    this.index = index;
  }
  Object.defineProperty(MipmapState.prototype, 'bufferWidth', {
    get: function () {
      return param16(this.data_0[GeOpCodes_getInstance().TEXBUFWIDTH0 + this.index | 0], 0);
    }
  });
  Object.defineProperty(MipmapState.prototype, 'address', {
    get: function () {
      return param24(this.data_0[GeOpCodes_getInstance().TEXADDR0 + this.index | 0]) | param8(this.data_0[GeOpCodes_getInstance().TEXBUFWIDTH0 + this.index | 0], 16) << 24;
    }
  });
  Object.defineProperty(MipmapState.prototype, 'addressEnd', {
    get: function () {
      return this.address + this.sizeInBytes | 0;
    }
  });
  Object.defineProperty(MipmapState.prototype, 'textureWidth', {
    get: function () {
      return 1 << param4(this.data_0[GeOpCodes_getInstance().TSIZE0 + this.index | 0], 0);
    }
  });
  Object.defineProperty(MipmapState.prototype, 'textureHeight', {
    get: function () {
      return 1 << param4(this.data_0[GeOpCodes_getInstance().TSIZE0 + this.index | 0], 8);
    }
  });
  Object.defineProperty(MipmapState.prototype, 'size', {
    get: function () {
      return Kotlin.imul(this.bufferWidth, this.textureHeight);
    }
  });
  Object.defineProperty(MipmapState.prototype, 'sizeInBytes', {
    get: function () {
      return this.texture.pixelFormat.getSizeInBytes_za3lpa$(this.size);
    }
  });
  MipmapState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MipmapState',
    interfaces: []
  };
  function ClutReader() {
  }
  ClutReader.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'ClutReader',
    interfaces: []
  };
  function ClutState(data) {
    this.data = data;
  }
  ClutState.prototype.getHashFast = function () {
    return (this.data[GeOpCodes_getInstance().CMODE] << 0) + (this.data[GeOpCodes_getInstance().CLOAD] << 8) + (this.data[GeOpCodes_getInstance().CLUTADDR] << 16) + (this.data[GeOpCodes_getInstance().CLUTADDRUPPER] << 24) | 0;
  };
  Object.defineProperty(ClutState.prototype, 'cmode', {
    get: function () {
      return this.data[GeOpCodes_getInstance().CMODE];
    }
  });
  Object.defineProperty(ClutState.prototype, 'cload', {
    get: function () {
      return this.data[GeOpCodes_getInstance().CLOAD];
    }
  });
  Object.defineProperty(ClutState.prototype, 'address', {
    get: function () {
      return param24(this.data[GeOpCodes_getInstance().CLUTADDR]) | this.data[GeOpCodes_getInstance().CLUTADDRUPPER] << 8 & (new Kotlin.Long(-16777216, 0)).toInt();
    }
  });
  Object.defineProperty(ClutState.prototype, 'numberOfColors', {
    get: function () {
      return this.data[GeOpCodes_getInstance().CLOAD] * 8 | 0;
    }
  });
  Object.defineProperty(ClutState.prototype, 'pixelFormat', {
    get: function () {
      return PixelFormat$Companion_getInstance().invoke_za3lpa$(param2(this.data[GeOpCodes_getInstance().CMODE], 0));
    }
  });
  Object.defineProperty(ClutState.prototype, 'colorBits', {
    get: function () {
      return this.pixelFormat.bitsPerPixel;
    }
  });
  Object.defineProperty(ClutState.prototype, 'shift', {
    get: function () {
      return param5(this.data[GeOpCodes_getInstance().CMODE], 2);
    }
  });
  Object.defineProperty(ClutState.prototype, 'mask', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().CMODE], 8);
    }
  });
  Object.defineProperty(ClutState.prototype, 'start', {
    get: function () {
      return param5(this.data[GeOpCodes_getInstance().CMODE], 16);
    }
  });
  ClutState.prototype.getIndex_za3lpa$ = function (n) {
    return this.start + n >>> this.shift & this.mask;
  };
  ClutState.prototype.getRawColor_ktor8l$ = function (mem, n) {
    var tmp$;
    tmp$ = this.colorBits;
    if (tmp$ === 16)
      return mem.lhu_za3lpa$(this.address + (this.getIndex_za3lpa$(n) * 2 | 0) | 0);
    else if (tmp$ === 32)
      return mem.lw_za3lpa$(this.address + (this.getIndex_za3lpa$(n) * 4 | 0) | 0);
    else
      return invalidOp('Invalid palette');
  };
  ClutState.prototype.getColor_ktor8l$ = function (mem, n) {
    return ensureNotNull(this.pixelFormat.colorFormat).unpackToRGBA_za3lpa$(this.getRawColor_ktor8l$(mem, n));
  };
  ClutState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ClutState',
    interfaces: [ClutReader]
  };
  function TextureState(geState) {
    this.geState = geState;
    this.data = this.geState.data;
    this.clut = new ClutState(this.data);
    this.mipmaps = listOf([new MipmapState(this, this.data, 0), new MipmapState(this, this.data, 1), new MipmapState(this, this.data, 2), new MipmapState(this, this.data, 3), new MipmapState(this, this.data, 4), new MipmapState(this, this.data, 5), new MipmapState(this, this.data, 6), new MipmapState(this, this.data, 7)]);
    this.envColorColor_0 = new Color();
  }
  TextureState.prototype.getTextureMatrix_zhv01d$ = function (out) {
    if (out === void 0)
      out = new Matrix4();
    getMatrix4x4(this.data, GeOpCodes_getInstance().MAT_TEXTURE, out);
    return out;
  };
  Object.defineProperty(TextureState.prototype, 'hasTexture', {
    get: function () {
      return this.geState.vertex.texture !== NumericEnum$VOID_getInstance();
    }
  });
  Object.defineProperty(TextureState.prototype, 'hasClut', {
    get: function () {
      return this.pixelFormat.requireClut;
    }
  });
  TextureState.prototype.getHashSlow_r9qwmk$ = function (textureData, clutData) {
    var hash = ArrayList_init();
    hash.add_11rb$(contentHashCode(textureData));
    hash.add_11rb$(this.mipmap.address);
    hash.add_11rb$(this.mipmap.textureWidth);
    hash.add_11rb$(this.colorComponent.id);
    hash.add_11rb$(this.mipmap.textureHeight);
    hash.add_11rb$(this.swizzled ? 1 : 0);
    hash.add_11rb$(this.pixelFormat.id);
    if (this.hasClut) {
      hash.add_11rb$(this.clut.getHashFast());
      hash.add_11rb$(contentHashCode(clutData));
    }
    return joinToString(hash, '_');
  };
  Object.defineProperty(TextureState.prototype, 'mipmap', {
    get: function () {
      return this.mipmaps.get_za3lpa$(0);
    }
  });
  Object.defineProperty(TextureState.prototype, 'wrapU', {
    get: function () {
      return WrapMode$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TWRAP], 0));
    }
  });
  Object.defineProperty(TextureState.prototype, 'wrapV', {
    get: function () {
      return WrapMode$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TWRAP], 8));
    }
  });
  Object.defineProperty(TextureState.prototype, 'levelMode', {
    get: function () {
      return TextureLevelMode$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TBIAS], 0));
    }
  });
  Object.defineProperty(TextureState.prototype, 'mipmapBias', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().TBIAS], 16) / 16 | 0;
    }
  });
  Object.defineProperty(TextureState.prototype, 'offsetU', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().TEXOFFSETU]);
    }
  });
  Object.defineProperty(TextureState.prototype, 'offsetV', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().TEXOFFSETV]);
    }
  });
  Object.defineProperty(TextureState.prototype, 'scaleU', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().TEXSCALEU]);
    }
  });
  Object.defineProperty(TextureState.prototype, 'scaleV', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().TEXSCALEV]);
    }
  });
  Object.defineProperty(TextureState.prototype, 'shadeU', {
    get: function () {
      return param2(this.data[GeOpCodes_getInstance().TEXTURE_ENV_MAP_MATRIX], 0);
    }
  });
  Object.defineProperty(TextureState.prototype, 'shadeV', {
    get: function () {
      return param2(this.data[GeOpCodes_getInstance().TEXTURE_ENV_MAP_MATRIX], 8);
    }
  });
  Object.defineProperty(TextureState.prototype, 'effect', {
    get: function () {
      return TextureEffect$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TFUNC], 0));
    }
  });
  Object.defineProperty(TextureState.prototype, 'hasAlpha', {
    get: function () {
      return this.colorComponent === TextureColorComponent$RGBA_getInstance();
    }
  });
  Object.defineProperty(TextureState.prototype, 'colorComponent', {
    get: function () {
      return TextureColorComponent$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TFUNC], 8));
    }
  });
  Object.defineProperty(TextureState.prototype, 'fragment2X', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().TFUNC], 16) !== 0;
    }
  });
  Object.defineProperty(TextureState.prototype, 'envColor', {
    get: function () {
      return this.envColorColor_0.setRGB_za3lpa$(param24(this.data[GeOpCodes_getInstance().TEC]));
    }
  });
  Object.defineProperty(TextureState.prototype, 'pixelFormat', {
    get: function () {
      return PixelFormat$Companion_getInstance().invoke_za3lpa$(param4(this.data[GeOpCodes_getInstance().TPSM], 0));
    }
  });
  Object.defineProperty(TextureState.prototype, 'slopeLevel', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().TSLOPE]);
    }
  });
  Object.defineProperty(TextureState.prototype, 'swizzled', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().TMODE], 0) !== 0;
    }
  });
  Object.defineProperty(TextureState.prototype, 'mipmapShareClut', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().TMODE], 8) !== 0;
    }
  });
  Object.defineProperty(TextureState.prototype, 'mipmapMaxLevel', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().TMODE], 16) !== 0;
    }
  });
  Object.defineProperty(TextureState.prototype, 'filterMinification', {
    get: function () {
      return TextureFilter$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TFLT], 0));
    }
  });
  Object.defineProperty(TextureState.prototype, 'filterMagnification', {
    get: function () {
      return TextureFilter$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TFLT], 8));
    }
  });
  Object.defineProperty(TextureState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().TEXTUREMAPENABLE]);
    }
  });
  Object.defineProperty(TextureState.prototype, 'textureMapMode', {
    get: function () {
      return TextureMapMode$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TMAP], 0));
    }
  });
  Object.defineProperty(TextureState.prototype, 'textureProjectionMapMode', {
    get: function () {
      return TextureProjectionMapMode$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().TMAP], 8));
    }
  });
  Object.defineProperty(TextureState.prototype, 'tmode', {
    get: function () {
      return this.data[GeOpCodes_getInstance().TMODE];
    }
  });
  TextureState.prototype.getPixelsSize_za3lpa$ = function (size) {
    return this.pixelFormat.getSizeInBytes_za3lpa$(size);
  };
  Object.defineProperty(TextureState.prototype, 'textureComponentsCount', {
    get: function () {
      var tmp$, tmp$_0;
      tmp$ = this.textureMapMode;
      if (equals(tmp$, TextureMapMode$GU_TEXTURE_COORDS_getInstance()))
        return 2;
      else if (equals(tmp$, TextureMapMode$GU_ENVIRONMENT_MAP_getInstance()))
        return 2;
      else if (equals(tmp$, TextureMapMode$GU_TEXTURE_MATRIX_getInstance())) {
        tmp$_0 = this.textureProjectionMapMode;
        if (equals(tmp$_0, TextureProjectionMapMode$GU_NORMAL_getInstance()))
          return 3;
        else if (equals(tmp$_0, TextureProjectionMapMode$GU_NORMALIZED_NORMAL_getInstance()))
          return 3;
        else if (equals(tmp$_0, TextureProjectionMapMode$GU_POSITION_getInstance()))
          return 3;
        else if (equals(tmp$_0, TextureProjectionMapMode$GU_UV_getInstance()))
          return 2;
        else
          return Kotlin.noWhenBranchMatched();
      }
       else
        return Kotlin.noWhenBranchMatched();
    }
  });
  TextureState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureState',
    interfaces: []
  };
  function CullingState(data) {
    this.data = data;
  }
  Object.defineProperty(CullingState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().CULLFACEENABLE]);
    }
  });
  Object.defineProperty(CullingState.prototype, 'direction', {
    get: function () {
      return CullingDirection$Companion_getInstance().invoke_za3lpa$(param24(this.data[GeOpCodes_getInstance().CULL]));
    }
  });
  CullingState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CullingState',
    interfaces: []
  };
  function DepthTestState(data) {
    this.data = data;
  }
  Object.defineProperty(DepthTestState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().ZTESTENABLE]);
    }
  });
  Object.defineProperty(DepthTestState.prototype, 'func', {
    get: function () {
      return TestFunctionEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().ZTST], 0));
    }
  });
  Object.defineProperty(DepthTestState.prototype, 'mask', {
    get: function () {
      return param16(this.data[GeOpCodes_getInstance().ZMSK], 0);
    }
  });
  Object.defineProperty(DepthTestState.prototype, 'rangeNear', {
    get: function () {
      return (this.data[GeOpCodes_getInstance().MAXZ] & 65535) / 65535.0;
    }
  });
  Object.defineProperty(DepthTestState.prototype, 'rangeFar', {
    get: function () {
      return (this.data[GeOpCodes_getInstance().MINZ] & 65535) / 65535.0;
    }
  });
  DepthTestState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DepthTestState',
    interfaces: []
  };
  function Color(r, g, b, a) {
    Color$Companion_getInstance();
    if (r === void 0)
      r = 0.0;
    if (g === void 0)
      g = 0.0;
    if (b === void 0)
      b = 0.0;
    if (a === void 0)
      a = 1.0;
    this.r = r;
    this.g = g;
    this.b = b;
    this.a = a;
  }
  function Color$Companion() {
    Color$Companion_instance = this;
  }
  Color$Companion.prototype.add_6rajl8$ = function (a, b, dest) {
    if (dest === void 0)
      dest = new Color();
    dest.r = a.r + b.r;
    dest.g = a.g + b.g;
    dest.b = a.b + b.b;
    dest.a = a.a * b.a;
    return dest;
  };
  Color$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Color$Companion_instance = null;
  function Color$Companion_getInstance() {
    if (Color$Companion_instance === null) {
      new Color$Companion();
    }
    return Color$Companion_instance;
  }
  Color.prototype.setRGB_za3lpa$ = function (rgb) {
    this.r = extractScaledf01(rgb, 0, 8);
    this.g = extractScaledf01(rgb, 8, 8);
    this.b = extractScaledf01(rgb, 16, 8);
    this.a = 1.0;
    return this;
  };
  Color.prototype.setRGB_A_vux9f0$ = function (rgb, a) {
    this.setRGB_za3lpa$(rgb);
    this.a = extractScaledf01(rgb, 0, 8);
    return this;
  };
  Color.prototype.set_7b5o5w$ = function (r, g, b, a) {
    if (a === void 0)
      a = 1.0;
    this.r = r;
    this.g = g;
    this.b = b;
    this.a = a;
    return this;
  };
  Color.prototype.equals_7b5o5w$ = function (r, g, b, a) {
    return this.r === r && this.g === g && this.b === b && this.a === a;
  };
  Color.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Color',
    interfaces: []
  };
  function Blending(data) {
    this.data = data;
    this.fixColorSrc_0 = new Color();
    this.fixColorDst_0 = new Color();
    this.colorMaskColor_0 = new Color();
  }
  Object.defineProperty(Blending.prototype, 'fixColorSource', {
    get: function () {
      return this.fixColorSrc_0.setRGB_za3lpa$(param24(this.data[GeOpCodes_getInstance().SFIX]));
    }
  });
  Object.defineProperty(Blending.prototype, 'fixColorDestination', {
    get: function () {
      return this.fixColorDst_0.setRGB_za3lpa$(param24(this.data[GeOpCodes_getInstance().DFIX]));
    }
  });
  Object.defineProperty(Blending.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().ALPHABLENDENABLE]);
    }
  });
  Object.defineProperty(Blending.prototype, 'functionSource', {
    get: function () {
      return GuBlendingFactor$Companion_getInstance().invoke_za3lpa$(param4(this.data[GeOpCodes_getInstance().ALPHA], 0));
    }
  });
  Object.defineProperty(Blending.prototype, 'functionDestination', {
    get: function () {
      return GuBlendingFactor$Companion_getInstance().invoke_za3lpa$(param4(this.data[GeOpCodes_getInstance().ALPHA], 4));
    }
  });
  Object.defineProperty(Blending.prototype, 'equation', {
    get: function () {
      return GuBlendingEquation$Companion_getInstance().invoke_za3lpa$(param4(this.data[GeOpCodes_getInstance().ALPHA], 8));
    }
  });
  Object.defineProperty(Blending.prototype, 'colorMask', {
    get: function () {
      return this.colorMaskColor_0.setRGB_A_vux9f0$(param24(this.data[GeOpCodes_getInstance().PMSKC]), param8(this.data[GeOpCodes_getInstance().PMSKA], 0));
    }
  });
  Blending.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Blending',
    interfaces: []
  };
  function AlphaTest(data) {
    this.data = data;
  }
  Object.defineProperty(AlphaTest.prototype, 'hash', {
    get: function () {
      return this.data[GeOpCodes_getInstance().ALPHATESTENABLE] << 24 | this.data[GeOpCodes_getInstance().ATST];
    }
  });
  Object.defineProperty(AlphaTest.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().ALPHATESTENABLE]);
    }
  });
  Object.defineProperty(AlphaTest.prototype, 'func', {
    get: function () {
      return TestFunctionEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().ATST], 0));
    }
  });
  Object.defineProperty(AlphaTest.prototype, 'value', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().ATST], 8);
    }
  });
  Object.defineProperty(AlphaTest.prototype, 'mask', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().ATST], 16);
    }
  });
  AlphaTest.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AlphaTest',
    interfaces: []
  };
  function Rectangle(left, top, right, bottom) {
    this.left = left;
    this.top = top;
    this.right = right;
    this.bottom = bottom;
  }
  Object.defineProperty(Rectangle.prototype, 'width', {
    get: function () {
      return this.right - this.left | 0;
    }
  });
  Object.defineProperty(Rectangle.prototype, 'height', {
    get: function () {
      return this.bottom - this.top | 0;
    }
  });
  Rectangle.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Rectangle',
    interfaces: []
  };
  function ClipPlane(data) {
    this.data = data;
  }
  Object.defineProperty(ClipPlane.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().CLIPENABLE]);
    }
  });
  Object.defineProperty(ClipPlane.prototype, 'scissor', {
    get: function () {
      return new Rectangle(this.left, this.top, this.right, this.bottom);
    }
  });
  Object.defineProperty(ClipPlane.prototype, 'left', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().SCISSOR1], 0);
    }
  });
  Object.defineProperty(ClipPlane.prototype, 'top', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().SCISSOR1], 10);
    }
  });
  Object.defineProperty(ClipPlane.prototype, 'right', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().SCISSOR2], 0);
    }
  });
  Object.defineProperty(ClipPlane.prototype, 'bottom', {
    get: function () {
      return param10(this.data[GeOpCodes_getInstance().SCISSOR2], 10);
    }
  });
  ClipPlane.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ClipPlane',
    interfaces: []
  };
  function StencilState(data) {
    this.data = data;
  }
  Object.defineProperty(StencilState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().STENCILTESTENABLE]);
    }
  });
  Object.defineProperty(StencilState.prototype, 'fail', {
    get: function () {
      return StencilOperationEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().SOP], 0));
    }
  });
  Object.defineProperty(StencilState.prototype, 'zfail', {
    get: function () {
      return StencilOperationEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().SOP], 8));
    }
  });
  Object.defineProperty(StencilState.prototype, 'zpass', {
    get: function () {
      return StencilOperationEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().SOP], 16));
    }
  });
  Object.defineProperty(StencilState.prototype, 'func', {
    get: function () {
      return TestFunctionEnum$Companion_getInstance().invoke_za3lpa$(param8(this.data[GeOpCodes_getInstance().STST], 0));
    }
  });
  Object.defineProperty(StencilState.prototype, 'funcRef', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().STST], 8);
    }
  });
  Object.defineProperty(StencilState.prototype, 'funcMask', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().STST], 16);
    }
  });
  StencilState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StencilState',
    interfaces: []
  };
  function PatchState(data) {
    this.data = data;
  }
  Object.defineProperty(PatchState.prototype, 'divs', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().PATCHDIVISION], 0);
    }
  });
  Object.defineProperty(PatchState.prototype, 'divt', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().PATCHDIVISION], 8);
    }
  });
  PatchState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PatchState',
    interfaces: []
  };
  function Fog(data) {
    this.data = data;
  }
  Object.defineProperty(Fog.prototype, 'color', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(this.data[GeOpCodes_getInstance().FCOL]);
    }
  });
  Object.defineProperty(Fog.prototype, 'far', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().FFAR]);
    }
  });
  Object.defineProperty(Fog.prototype, 'dist', {
    get: function () {
      return float1(this.data[GeOpCodes_getInstance().FDIST]);
    }
  });
  Object.defineProperty(Fog.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().FOGENABLE]);
    }
  });
  Fog.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Fog',
    interfaces: []
  };
  function LogicOp(data) {
    this.data = data;
  }
  Object.defineProperty(LogicOp.prototype, 'enabled', {
    get: function () {
      return this.data[GeOpCodes_getInstance().LOGICOPENABLE];
    }
  });
  LogicOp.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LogicOp',
    interfaces: []
  };
  function LineSmoothState(data) {
    this.data = data;
  }
  Object.defineProperty(LineSmoothState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().ANTIALIASENABLE]);
    }
  });
  LineSmoothState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LineSmoothState',
    interfaces: []
  };
  function PatchCullingState(data) {
    this.data = data;
  }
  Object.defineProperty(PatchCullingState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().PATCHCULLENABLE]);
    }
  });
  Object.defineProperty(PatchCullingState.prototype, 'faceFlag', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().PATCHFACING]);
    }
  });
  PatchCullingState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PatchCullingState',
    interfaces: []
  };
  function OffsetState(data) {
    this.data = data;
  }
  Object.defineProperty(OffsetState.prototype, 'x', {
    get: function () {
      return param4(this.data[GeOpCodes_getInstance().OFFSETX], 0);
    }
  });
  Object.defineProperty(OffsetState.prototype, 'y', {
    get: function () {
      return param4(this.data[GeOpCodes_getInstance().OFFSETY], 0);
    }
  });
  OffsetState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'OffsetState',
    interfaces: []
  };
  function GeState() {
    GeState$Companion_getInstance();
    this.data = new Int32Array(GeState$Companion_getInstance().STATE_NWORDS);
    this.frameBuffer = new GpuFrameBufferState(this.data);
    this.vertex = new VertexState(this.data);
    this.stencil = new StencilState(this.data);
    this.viewport = new ViewPort(this.data);
    this.region = new Region(this.data);
    this.offset = new OffsetState(this.data);
    this.fog = new Fog(this.data);
    this.clipPlane = new ClipPlane(this.data);
    this.logicOp = new LogicOp(this.data);
    this.lightning = new Lightning(this.data);
    this.alphaTest = new AlphaTest(this.data);
    this.blending = new Blending(this.data);
    this.patch = new PatchState(this.data);
    this.texture = new TextureState(this);
    this.lineSmoothState = new LineSmoothState(this.data);
    this.patchCullingState = new PatchCullingState(this.data);
    this.culling = new CullingState(this.data);
    this.dithering = new DitheringState(this.data);
    this.colorTest = new ColorTestState(this.data);
    this.depthTest = new DepthTestState(this.data);
    this.skinning = new SkinningState(this.data);
  }
  function GeState$Companion() {
    GeState$Companion_instance = this;
    this.STATE_NWORDS = 512;
  }
  GeState$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var GeState$Companion_instance = null;
  function GeState$Companion_getInstance() {
    if (GeState$Companion_instance === null) {
      new GeState$Companion();
    }
    return GeState$Companion_instance;
  }
  Object.defineProperty(GeState.prototype, 'baseAddress', {
    get: function () {
      return this.data[GeOpCodes_getInstance().BASE] << 8 & (new Kotlin.Long(-16777216, 0)).toInt();
    }
  });
  Object.defineProperty(GeState.prototype, 'baseOffset', {
    get: function () {
      return this.data[GeOpCodes_getInstance().OFFSETADDR] << 8;
    },
    set: function (value) {
      this.data[GeOpCodes_getInstance().OFFSETADDR] = this.data[GeOpCodes_getInstance().OFFSETADDR] & (new Kotlin.Long(-16777216, 0)).toInt() | value >>> 8 & 16777215;
    }
  });
  GeState.prototype.writeInt_qt1dr2$ = function (key, offset, value) {
    var tmp$, tmp$_0;
    tmp$_0 = this.data;
    var tmp$_1;
    tmp$_1 = this.data;
    tmp$ = tmp$_1[key];
    tmp$_1[key] = tmp$ + 1 | 0;
    tmp$_0[offset + tmp$ | 0] = value;
  };
  GeState.prototype.setTo_q5rwfd$ = function (other) {
    arraycopy_1(other, 0, this.data, 0, GeState$Companion_getInstance().STATE_NWORDS);
  };
  GeState.prototype.setTo_j5wazo$ = function (other) {
    this.setTo_q5rwfd$(other.data);
  };
  GeState.prototype.clone = function () {
    var $receiver = new GeState();
    $receiver.setTo_j5wazo$(this);
    return $receiver;
  };
  Object.defineProperty(GeState.prototype, 'vertexType', {
    get: function () {
      return this.data[GeOpCodes_getInstance().VERTEXTYPE];
    }
  });
  Object.defineProperty(GeState.prototype, 'vertexReverseNormal', {
    get: function () {
      return this.data[GeOpCodes_getInstance().REVERSENORMAL] !== 0;
    }
  });
  Object.defineProperty(GeState.prototype, 'vertexAddress', {
    get: function () {
      return this.getAddressRelativeToBaseOffset_za3lpa$(this.data[GeOpCodes_getInstance().VADDR]);
    },
    set: function (value) {
      this.data[GeOpCodes_getInstance().VADDR] = this.setAddressRelativeToBaseOffset_za3lpa$(this.data[GeOpCodes_getInstance().VADDR]);
    }
  });
  Object.defineProperty(GeState.prototype, 'indexAddress', {
    get: function () {
      return this.getAddressRelativeToBaseOffset_za3lpa$(this.data[GeOpCodes_getInstance().IADDR]);
    }
  });
  GeState.prototype.getAddressRelativeToBaseOffset_za3lpa$ = function (address) {
    return (this.baseAddress | address) + this.baseOffset | 0;
  };
  GeState.prototype.setAddressRelativeToBaseOffset_za3lpa$ = function (address) {
    return (address & 16777215) - this.baseOffset | 0;
  };
  GeState.prototype.getTextureMatrix_zhv01d$ = function (out) {
    if (out === void 0)
      out = new Matrix4();
    getMatrix4x4(this.data, GeOpCodes_getInstance().MAT_TEXTURE, out);
    return out;
  };
  GeState.prototype.getProjMatrix_zhv01d$ = function (out) {
    if (out === void 0)
      out = new Matrix4();
    getMatrix4x4(this.data, GeOpCodes_getInstance().MAT_PROJ, out);
    return out;
  };
  GeState.prototype.getViewMatrix_zhv01d$ = function (out) {
    if (out === void 0)
      out = new Matrix4();
    getMatrix4x3(this.data, GeOpCodes_getInstance().MAT_VIEW, out);
    return out;
  };
  GeState.prototype.getWorldMatrix_zhv01d$ = function (out) {
    if (out === void 0)
      out = new Matrix4();
    getMatrix4x3(this.data, GeOpCodes_getInstance().MAT_WORLD, out);
    return out;
  };
  GeState.prototype.getBoneMatrix_rkdblx$ = function (index, out) {
    if (out === void 0)
      out = new Matrix4();
    getMatrix4x3(this.data, GeOpCodes_getInstance().MAT_BONES + (12 * index | 0) | 0, out);
    return out;
  };
  Object.defineProperty(GeState.prototype, 'clearing', {
    get: function () {
      return param1(this.data[GeOpCodes_getInstance().CLEAR], 0) !== 0;
    }
  });
  Object.defineProperty(GeState.prototype, 'clearFlags', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().CLEAR], 8);
    }
  });
  Object.defineProperty(GeState.prototype, 'shadeModel', {
    get: function () {
      return ShadingModelEnum$Companion_getInstance().invoke_za3lpa$(param16(this.data[GeOpCodes_getInstance().SHADEMODE], 0));
    }
  });
  Object.defineProperty(GeState.prototype, 'ambientModelColor', {
    get: function () {
      return (new Color()).setRGB_A_vux9f0$(this.data[GeOpCodes_getInstance().MATERIALAMBIENT], this.data[GeOpCodes_getInstance().MATERIALALPHA]);
    }
  });
  Object.defineProperty(GeState.prototype, 'diffuseModelColor', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(this.data[GeOpCodes_getInstance().MATERIALDIFFUSE]);
    }
  });
  Object.defineProperty(GeState.prototype, 'specularModelColor', {
    get: function () {
      return (new Color()).setRGB_za3lpa$(this.data[GeOpCodes_getInstance().MATERIALSPECULAR]);
    }
  });
  Object.defineProperty(GeState.prototype, 'drawPixelFormat', {
    get: function () {
      return PixelFormat$Companion_getInstance().invoke_za3lpa$(param4(this.data[GeOpCodes_getInstance().PSM], 0));
    }
  });
  GeState.prototype.getMorphWeight_za3lpa$ = function (index) {
    return float1(this.data[GeOpCodes_getInstance().MORPHWEIGHT0 + index | 0]);
  };
  GeState.prototype.getAddressRelativeToBase_za3lpa$ = function (relativeAddress) {
    return this.baseAddress | relativeAddress;
  };
  GeState.prototype.reset = function () {
    var $receiver = this.data;
    var end;
    end = $receiver.length;
    $receiver.fill(0, 0, end);
  };
  GeState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeState',
    interfaces: []
  };
  function SkinningState(data) {
    this.data = data;
  }
  SkinningState.prototype.getBoneMatrix_rkdblx$ = function (index, out) {
    if (out === void 0)
      out = new Matrix4();
    getMatrix4x3(this.data, GeOpCodes_getInstance().MAT_BONES + (12 * index | 0) | 0, out);
    return out;
  };
  SkinningState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SkinningState',
    interfaces: []
  };
  function getFloat(value) {
    var bits = value << 8;
    return Kotlin.floatFromBits(bits);
  }
  function getMatrix4x4(data, register, out) {
    for (var n = 0; n < 16; n++) {
      out.data[n] = getFloat(data[register + n | 0]);
    }
  }
  function getMatrix4x3(data, register, out) {
    var m = 0;
    var n = 0;
    for (var y = 0; y < 4; y++) {
      for (var x = 0; x < 3; x++) {
        out.data[n + x | 0] = getFloat(data[register + m | 0]);
        m = m + 1 | 0;
      }
      n = n + 4 | 0;
    }
    out.data[3] = 0.0;
    out.data[7] = 0.0;
    out.data[11] = 0.0;
    out.data[15] = 1.0;
  }
  function ColorTestState(data) {
    this.data = data;
  }
  Object.defineProperty(ColorTestState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().COLORTESTENABLE]);
    }
  });
  ColorTestState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ColorTestState',
    interfaces: []
  };
  function DitheringState(data) {
    this.data = data;
  }
  Object.defineProperty(DitheringState.prototype, 'enabled', {
    get: function () {
      return bool1(this.data[GeOpCodes_getInstance().DITHERENABLE]);
    }
  });
  DitheringState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DitheringState',
    interfaces: []
  };
  function GpuFrameBufferState(data) {
    this.data = data;
  }
  Object.defineProperty(GpuFrameBufferState.prototype, 'width', {
    get: function () {
      return param16(this.data[GeOpCodes_getInstance().FRAMEBUFWIDTH], 0);
    }
  });
  Object.defineProperty(GpuFrameBufferState.prototype, 'highAddress', {
    get: function () {
      return param8(this.data[GeOpCodes_getInstance().FRAMEBUFWIDTH], 16);
    }
  });
  Object.defineProperty(GpuFrameBufferState.prototype, 'lowAddress', {
    get: function () {
      return param24(this.data[GeOpCodes_getInstance().FRAMEBUFPTR]);
    }
  });
  GpuFrameBufferState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GpuFrameBufferState',
    interfaces: []
  };
  function VertexType(v) {
    VertexType$Companion_getInstance();
    if (v === void 0)
      v = 0;
    this.computed_0 = false;
    this.v_1w7ygz$_0 = v;
    this._colOffset_0 = 0;
    this._normalOffset_0 = 0;
    this._posOffset_0 = 0;
    this._texOffset_0 = 0;
    this._weightOffset_0 = 0;
    this._size_0 = 0;
  }
  function VertexType$Companion() {
    VertexType$Companion_instance = this;
    this.DUMMY = new VertexType();
  }
  VertexType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var VertexType$Companion_instance = null;
  function VertexType$Companion_getInstance() {
    if (VertexType$Companion_instance === null) {
      new VertexType$Companion();
    }
    return VertexType$Companion_instance;
  }
  Object.defineProperty(VertexType.prototype, 'v', {
    get: function () {
      return this.v_1w7ygz$_0;
    },
    set: function (value) {
      if (this.v_1w7ygz$_0 !== value) {
        this.computed_0 = false;
        this.v_1w7ygz$_0 = value;
      }
    }
  });
  Object.defineProperty(VertexType.prototype, 'tex', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(extract_0(this.v, 0, 2));
    },
    set: function (vv) {
      this.v = insert(this.v, vv.id, 0, 2);
    }
  });
  Object.defineProperty(VertexType.prototype, 'col', {
    get: function () {
      return ColorEnum$Companion_getInstance().invoke_za3lpa$(extract_0(this.v, 2, 3));
    },
    set: function (vv) {
      this.v = insert(this.v, vv.id, 2, 3);
    }
  });
  Object.defineProperty(VertexType.prototype, 'normal', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(extract_0(this.v, 5, 2));
    },
    set: function (vv) {
      this.v = insert(this.v, vv.id, 5, 2);
    }
  });
  Object.defineProperty(VertexType.prototype, 'pos', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(extract_0(this.v, 7, 2));
    },
    set: function (vv) {
      this.v = insert(this.v, vv.id, 7, 2);
    }
  });
  Object.defineProperty(VertexType.prototype, 'weight', {
    get: function () {
      return NumericEnum$Companion_getInstance().invoke_za3lpa$(extract_0(this.v, 9, 2));
    },
    set: function (vv) {
      this.v = insert(this.v, vv.id, 9, 2);
    }
  });
  Object.defineProperty(VertexType.prototype, 'index', {
    get: function () {
      return IndexEnum$Companion_getInstance().invoke_za3lpa$(extract_0(this.v, 11, 2));
    },
    set: function (vv) {
      this.v = insert(this.v, vv.id, 11, 2);
    }
  });
  Object.defineProperty(VertexType.prototype, 'weightComponents', {
    get: function () {
      return extract_0(this.v, 14, 3);
    },
    set: function (vv) {
      this.v = insert(this.v, vv, 13, 3);
    }
  });
  Object.defineProperty(VertexType.prototype, 'morphingVertexCount', {
    get: function () {
      return extract_0(this.v, 18, 2);
    },
    set: function (vv) {
      this.v = insert(this.v, vv, 18, 2);
    }
  });
  Object.defineProperty(VertexType.prototype, 'transform2D', {
    get: function () {
      return extract_0(this.v, 23, 1) !== 0;
    },
    set: function (vv) {
      this.v = insert_0(this.v, vv, 23);
    }
  });
  Object.defineProperty(VertexType.prototype, 'hasIndices', {
    get: function () {
      return this.index !== IndexEnum$VOID_getInstance();
    }
  });
  Object.defineProperty(VertexType.prototype, 'hasTexture', {
    get: function () {
      return this.tex !== NumericEnum$VOID_getInstance();
    }
  });
  Object.defineProperty(VertexType.prototype, 'hasColor', {
    get: function () {
      return this.col !== ColorEnum$VOID_getInstance();
    }
  });
  Object.defineProperty(VertexType.prototype, 'hasNormal', {
    get: function () {
      return this.normal !== NumericEnum$VOID_getInstance();
    }
  });
  Object.defineProperty(VertexType.prototype, 'hasPosition', {
    get: function () {
      return this.pos !== NumericEnum$VOID_getInstance();
    }
  });
  Object.defineProperty(VertexType.prototype, 'hasWeight', {
    get: function () {
      return this.weight !== NumericEnum$VOID_getInstance();
    }
  });
  Object.defineProperty(VertexType.prototype, 'components', {
    get: function () {
      return 3;
    }
  });
  Object.defineProperty(VertexType.prototype, 'posComponents', {
    get: function () {
      return this.components;
    }
  });
  Object.defineProperty(VertexType.prototype, 'normalComponents', {
    get: function () {
      return this.components;
    }
  });
  Object.defineProperty(VertexType.prototype, 'texComponents', {
    get: function () {
      return 2;
    }
  });
  Object.defineProperty(VertexType.prototype, 'colSize', {
    get: function () {
      return this.col.nbytes;
    }
  });
  Object.defineProperty(VertexType.prototype, 'normalSize', {
    get: function () {
      return Kotlin.imul(this.normal.nbytes, this.normalComponents);
    }
  });
  Object.defineProperty(VertexType.prototype, 'positionSize', {
    get: function () {
      return Kotlin.imul(this.pos.nbytes, this.posComponents);
    }
  });
  Object.defineProperty(VertexType.prototype, 'textureSize', {
    get: function () {
      return Kotlin.imul(this.tex.nbytes, this.texComponents);
    }
  });
  Object.defineProperty(VertexType.prototype, 'weightSize', {
    get: function () {
      return Kotlin.imul(this.weight.nbytes, this.weightComponents);
    }
  });
  Object.defineProperty(VertexType.prototype, 'colOffset', {
    get: function () {
      return this.ensureComputed_0()._colOffset_0;
    }
  });
  Object.defineProperty(VertexType.prototype, 'normalOffset', {
    get: function () {
      return this.ensureComputed_0()._normalOffset_0;
    }
  });
  Object.defineProperty(VertexType.prototype, 'posOffset', {
    get: function () {
      return this.ensureComputed_0()._posOffset_0;
    }
  });
  Object.defineProperty(VertexType.prototype, 'texOffset', {
    get: function () {
      return this.ensureComputed_0()._texOffset_0;
    }
  });
  Object.defineProperty(VertexType.prototype, 'weightOffset', {
    get: function () {
      return this.ensureComputed_0()._weightOffset_0;
    }
  });
  Object.defineProperty(VertexType.prototype, 'size', {
    get: function () {
      return this.ensureComputed_0()._size_0;
    }
  });
  VertexType.prototype.ensureComputed_0 = function () {
    if (!this.computed_0) {
      this.computed_0 = true;
      var out = 0;
      out = nextAlignedTo_0(out, this.weight.nbytes);
      this._weightOffset_0 = out;
      out = this.weightSize;
      out = nextAlignedTo_0(out, this.tex.nbytes);
      this._texOffset_0 = out;
      out = out + this.textureSize | 0;
      out = nextAlignedTo_0(out, this.col.nbytes);
      this._colOffset_0 = out;
      out = out + this.colSize | 0;
      out = nextAlignedTo_0(out, this.normal.nbytes);
      this._normalOffset_0 = out;
      out = out + this.normalSize | 0;
      out = nextAlignedTo_0(out, this.pos.nbytes);
      this._posOffset_0 = out;
      out = out + this.positionSize | 0;
      this._size_0 = nextAlignedTo_0(out, max_6(this.weight.nbytes, this.tex.nbytes, this.col.nbytes, this.normal.nbytes, this.pos.nbytes));
    }
    return this;
  };
  VertexType.prototype.init_za3lpa$ = function (v) {
    this.v = v;
    return this;
  };
  VertexType.prototype.toString = function () {
    var parts = ArrayList_init();
    var element = 'color=' + this.col;
    parts.add_11rb$(element);
    var element_0 = 'normal=' + this.normal;
    parts.add_11rb$(element_0);
    var element_1 = 'pos=' + this.pos;
    parts.add_11rb$(element_1);
    var element_2 = 'tex=' + this.tex;
    parts.add_11rb$(element_2);
    var element_3 = 'weight=' + this.weight;
    parts.add_11rb$(element_3);
    var element_4 = 'size=' + this.size;
    parts.add_11rb$(element_4);
    return 'VertexType(' + joinToString(parts, ', ') + ')';
  };
  VertexType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VertexType',
    interfaces: []
  };
  function init($receiver, state) {
    return $receiver.init_za3lpa$(state.vertexType);
  }
  function VertexRaw(type, color, normal, pos, tex, weights) {
    if (type === void 0)
      type = VertexType$Companion_getInstance().DUMMY;
    if (color === void 0)
      color = 0;
    if (normal === void 0)
      normal = new Float32Array(3);
    if (pos === void 0)
      pos = new Float32Array(3);
    if (tex === void 0)
      tex = new Float32Array(3);
    if (weights === void 0)
      weights = new Float32Array(8);
    this.type = type;
    this.color = color;
    this.normal = normal;
    this.pos = pos;
    this.tex = tex;
    this.weights = weights;
  }
  VertexRaw.prototype.toString = function () {
    var parts = ArrayList_init();
    if (this.type.hasColor) {
      var element = 'color=' + get_hex(this.color);
      parts.add_11rb$(element);
    }
    if (this.type.hasNormal) {
      var element_0 = 'normal=' + toList_1(this.normal);
      parts.add_11rb$(element_0);
    }
    if (this.type.hasPosition) {
      var element_1 = 'pos=' + toList_1(this.pos);
      parts.add_11rb$(element_1);
    }
    if (this.type.hasTexture) {
      var element_2 = 'tex=' + toList_1(this.tex);
      parts.add_11rb$(element_2);
    }
    if (this.type.hasWeight) {
      var element_3 = 'weights=' + toList_1(this.weights);
      parts.add_11rb$(element_3);
    }
    return 'VertexRaw(' + joinToString(parts, ', ') + ')';
  };
  VertexRaw.prototype.clone = function () {
    return new VertexRaw(VertexType$Companion_getInstance().DUMMY, this.color, this.normal.slice(), this.pos.slice(), this.tex.slice(), this.weights.slice());
  };
  VertexRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VertexRaw',
    interfaces: []
  };
  VertexRaw.prototype.component1 = function () {
    return this.type;
  };
  VertexRaw.prototype.component2 = function () {
    return this.color;
  };
  VertexRaw.prototype.component3 = function () {
    return this.normal;
  };
  VertexRaw.prototype.component4 = function () {
    return this.pos;
  };
  VertexRaw.prototype.component5 = function () {
    return this.tex;
  };
  VertexRaw.prototype.component6 = function () {
    return this.weights;
  };
  VertexRaw.prototype.copy_dkaelr$ = function (type, color, normal, pos, tex, weights) {
    return new VertexRaw(type === void 0 ? this.type : type, color === void 0 ? this.color : color, normal === void 0 ? this.normal : normal, pos === void 0 ? this.pos : pos, tex === void 0 ? this.tex : tex, weights === void 0 ? this.weights : weights);
  };
  VertexRaw.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    result = result * 31 + Kotlin.hashCode(this.color) | 0;
    result = result * 31 + Kotlin.hashCode(this.normal) | 0;
    result = result * 31 + Kotlin.hashCode(this.pos) | 0;
    result = result * 31 + Kotlin.hashCode(this.tex) | 0;
    result = result * 31 + Kotlin.hashCode(this.weights) | 0;
    return result;
  };
  VertexRaw.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.type, other.type) && Kotlin.equals(this.color, other.color) && Kotlin.equals(this.normal, other.normal) && Kotlin.equals(this.pos, other.pos) && Kotlin.equals(this.tex, other.tex) && Kotlin.equals(this.weights, other.weights)))));
  };
  function VertexReader() {
  }
  VertexReader.prototype.readBytes_0 = function ($receiver, count, out, normalized) {
    if (out === void 0)
      out = new Float32Array(4);
    skipToAlign($receiver, 4);
    if (normalized) {
      for (var n = 0; n < count; n++)
        out[n] = readS8($receiver) / 127;
    }
     else {
      for (var n_0 = 0; n_0 < count; n_0++)
        out[n_0] = readS8($receiver);
    }
    return out;
  };
  VertexReader.prototype.readShorts_0 = function ($receiver, count, out, normalized) {
    if (out === void 0)
      out = new Float32Array(4);
    skipToAlign($receiver, 2);
    if (normalized) {
      for (var n = 0; n < count; n++)
        out[n] = readS16_le_0($receiver) / 32767;
    }
     else {
      for (var n_0 = 0; n_0 < count; n_0++)
        out[n_0] = readS16_le_0($receiver);
    }
    return out;
  };
  VertexReader.prototype.readFloats_0 = function ($receiver, count, out, normalized) {
    if (out === void 0)
      out = new Float32Array(4);
    skipToAlign($receiver, 4);
    for (var n = 0; n < count; n++)
      out[n] = readF32_le($receiver);
    return out;
  };
  VertexReader.prototype.readColorType_hd5xpl$ = function ($receiver, type) {
    var tmp$;
    if (equals(type, ColorEnum$COLOR4444_getInstance()))
      tmp$ = color.RGBA_4444.packRGBA_za3lpa$(readU16_le($receiver));
    else if (equals(type, ColorEnum$COLOR5551_getInstance()))
      tmp$ = color.RGBA_5551.packRGBA_za3lpa$(readU16_le($receiver));
    else if (equals(type, ColorEnum$COLOR5650_getInstance()))
      tmp$ = color.RGB_565.packRGBA_za3lpa$(readU16_le($receiver));
    else if (equals(type, ColorEnum$COLOR8888_getInstance()))
      tmp$ = readS32_le_0($receiver);
    else if (equals(type, ColorEnum$VOID_getInstance()))
      tmp$ = 0;
    else {
      throw new NotImplementedError_init();
    }
    return tmp$;
  };
  VertexReader.prototype.readNumericType_3c2pba$ = function ($receiver, count, type, out, normalized) {
    if (out === void 0)
      out = new Float32Array(4);
    if (!equals(type, NumericEnum$VOID_getInstance()))
      if (equals(type, NumericEnum$BYTE_getInstance()))
        this.readBytes_0($receiver, count, out, normalized);
      else if (equals(type, NumericEnum$SHORT_getInstance()))
        this.readShorts_0($receiver, count, out, normalized);
      else if (equals(type, NumericEnum$FLOAT_getInstance()))
        this.readFloats_0($receiver, count, out, normalized);
      else
        Kotlin.noWhenBranchMatched();
    return out;
  };
  VertexReader.prototype.readOne_h7y9mx$ = function (s, type, out) {
    if (out === void 0)
      out = new VertexRaw(type);
    out.type = type;
    safeSkipToAlign(s, type.weight.nbytes);
    this.readNumericType_3c2pba$(s, type.weightComponents, type.weight, out.weights, true);
    safeSkipToAlign(s, type.tex.nbytes);
    this.readNumericType_3c2pba$(s, type.texComponents, type.tex, out.tex, true);
    safeSkipToAlign(s, type.col.nbytes);
    out.color = this.readColorType_hd5xpl$(s, type.col);
    safeSkipToAlign(s, type.normal.nbytes);
    this.readNumericType_3c2pba$(s, type.normalComponents, type.normal, out.normal, false);
    safeSkipToAlign(s, type.pos.nbytes);
    this.readNumericType_3c2pba$(s, type.posComponents, type.pos, out.pos, false);
    safeSkipToAlign(s, max_6(type.weight.nbytes, type.tex.nbytes, type.col.nbytes, type.normal.nbytes, type.pos.nbytes));
    return out;
  };
  VertexReader.prototype.read_riyqrj$ = function (type, count, s, out) {
    if (out === void 0) {
      var array = Array_0(count);
      var tmp$;
      tmp$ = array.length - 1 | 0;
      for (var i = 0; i <= tmp$; i++) {
        array[i] = new VertexRaw();
      }
      out = array;
    }
    for (var n = 0; n < count; n++)
      this.readOne_h7y9mx$(s, type, out[n]);
    return out;
  };
  VertexReader.prototype.readList_75t58$ = function (type, count, s) {
    return toList_2(this.read_riyqrj$(type, count, s));
  };
  VertexReader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VertexReader',
    interfaces: []
  };
  function safeSkipToAlign($receiver, alignment) {
    if (alignment !== 0)
      skipToAlign($receiver, alignment);
  }
  function setTo($receiver, colorFormat, colorData, mem, clutReader, swizzled, width, height) {
    if (clutReader === void 0)
      clutReader = null;
    if (swizzled === void 0)
      swizzled = false;
    if (width === void 0)
      width = 0;
    if (height === void 0)
      height = 0;
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
    if (swizzled) {
      unswizzleInline(colorFormat, colorData, width, height);
    }
    if (colorFormat.requireClut) {
      ensureNotNull(clutReader);
      var n = colorFormat.paletteBits;
      var ncolors = numberToInt(Math_0.pow(2.0, n));
      var array = new Int32Array(ncolors);
      var tmp$_5;
      tmp$_5 = array.length - 1 | 0;
      for (var i = 0; i <= tmp$_5; i++) {
        array[i] = clutReader.getColor_ktor8l$(mem, i);
      }
      var colors = array;
      tmp$ = colorFormat.paletteBits;
      if (tmp$ === 4) {
        var m = 0;
        tmp$_0 = $receiver.area / 2 | 0;
        for (var n_0 = 0; n_0 < tmp$_0; n_0++) {
          var byte = colorData[n_0] & 255;
          $receiver.data[tmp$_1 = m, m = tmp$_1 + 1 | 0, tmp$_1] = colors[byte >>> 0 & 15];
          $receiver.data[tmp$_2 = m, m = tmp$_2 + 1 | 0, tmp$_2] = colors[byte >>> 4 & 15];
        }
      }
       else if (tmp$ === 8) {
        var m_0 = 0;
        tmp$_3 = $receiver.area;
        for (var n_1 = 0; n_1 < tmp$_3; n_1++) {
          var byte_0 = colorData[n_1];
          $receiver.data[tmp$_4 = m_0, m_0 = tmp$_4 + 1 | 0, tmp$_4] = colors[(byte_0 >>> 0 & 255) % colors.length];
        }
      }
       else {
        invalidOp('Unsupported palette of size ' + colorFormat.paletteBits);
      }
    }
     else if (colorFormat.isRgba) {
      var cf = ensureNotNull(colorFormat.colorFormat);
      cf.decodeToBitmap32_131o2$($receiver, colorData);
    }
     else if (colorFormat.isCompressed) {
      throw new NotImplementedError_init('An operation is not implemented: ' + 'Unsupported DXT');
    }
    return $receiver;
  }
  function unswizzleInline(format, from, width, height) {
    var rowWidth = format.getSizeInBytes_za3lpa$(width);
    var textureHeight = height;
    var size = Kotlin.imul(rowWidth, textureHeight);
    var temp = new Int8Array(size);
    unswizzle(from, temp, rowWidth, textureHeight);
    arraycopy_0(temp, 0, from, 0, size);
  }
  function unswizzle(input, output, rowWidth, textureHeight) {
    var pitch = (rowWidth - 16 | 0) / 4 | 0;
    var bxc = rowWidth / 16 | 0;
    var byc = textureHeight / 8 | 0;
    var pitch4 = pitch * 4 | 0;
    var src = 0;
    var ydest = 0;
    for (var by = 0; by < byc; by++) {
      var xdest = ydest;
      for (var bx = 0; bx < bxc; bx++) {
        var dest = xdest;
        for (var n = 0; n < 8; n++) {
          arraycopy_0(input, src, output, dest, 16);
          src = src + 16 | 0;
          dest = dest + 16 | 0;
          dest = dest + pitch4 | 0;
        }
        xdest = xdest + 16 | 0;
      }
      ydest = ydest + (rowWidth * 8 | 0) | 0;
    }
  }
  function Gpu(emulator) {
    this.emulator_wj70dw$_0 = emulator;
    this.batchQueue = ArrayList_init();
  }
  Object.defineProperty(Gpu.prototype, 'emulator', {
    get: function () {
      return this.emulator_wj70dw$_0;
    }
  });
  Gpu.prototype.flush = function () {
    if (!this.batchQueue.isEmpty()) {
      this.emulator.gpuRenderer.render_9iyg8u$(toList_3(this.batchQueue));
      this.batchQueue.clear();
    }
  };
  Gpu.prototype.addBatch_yqbwi7$ = function (batch) {
    this.batchQueue.add_11rb$(batch);
  };
  Gpu.prototype.reset = function () {
    this.batchQueue.clear();
  };
  Gpu.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Gpu',
    interfaces: [WithEmulator]
  };
  function GpuRenderer() {
    this.queuedJobs_cqlj39$_0 = new EventFlag(0);
  }
  Object.defineProperty(GpuRenderer.prototype, 'queuedJobs', {
    get: function () {
      return this.queuedJobs_cqlj39$_0;
    }
  });
  GpuRenderer.prototype.reset = function () {
    this.queuedJobs.value = 0;
  };
  GpuRenderer.prototype.tryExecuteNow = function () {
  };
  GpuRenderer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GpuRenderer',
    interfaces: []
  };
  function DummyGpuRenderer() {
    GpuRenderer.call(this);
  }
  DummyGpuRenderer.prototype.render_9iyg8u$ = function (batches) {
    println('BATCHES: ' + batches);
  };
  DummyGpuRenderer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DummyGpuRenderer',
    interfaces: [GpuRenderer]
  };
  function registerNativeModules($receiver) {
    registerNativeModules_0($receiver.moduleManager);
  }
  function registerNativeModules_0($receiver) {
    $receiver.register_q5jrol$(new LoadExecForUser($receiver.emulator));
    $receiver.register_q5jrol$(new ThreadManForUser($receiver.emulator));
    $receiver.register_q5jrol$(new SysMemUserForUser($receiver.emulator));
    $receiver.register_q5jrol$(new StdioForUser($receiver.emulator));
    $receiver.register_q5jrol$(new ModuleMgrForUser($receiver.emulator));
    $receiver.register_q5jrol$(new IoFileMgrForUser($receiver.emulator));
    $receiver.register_q5jrol$(new sceGe_user($receiver.emulator));
    $receiver.register_q5jrol$(new sceRtc($receiver.emulator));
    $receiver.register_q5jrol$(new sceCtrl($receiver.emulator));
    $receiver.register_q5jrol$(new sceDisplay($receiver.emulator));
    $receiver.register_q5jrol$(new UtilsForKernel($receiver.emulator));
    $receiver.register_q5jrol$(new UtilsForUser($receiver.emulator));
    $receiver.register_q5jrol$(new scePower($receiver.emulator));
    $receiver.register_q5jrol$(new sceNetInet($receiver.emulator));
    $receiver.register_q5jrol$(new sceAudio($receiver.emulator));
    $receiver.register_q5jrol$(new sceSasCore($receiver.emulator));
    $receiver.register_q5jrol$(new sceMpeg($receiver.emulator));
    $receiver.register_q5jrol$(new sceAtrac3plus($receiver.emulator));
    $receiver.register_q5jrol$(new sceUmdUser($receiver.emulator));
    $receiver.register_q5jrol$(new sceUtility($receiver.emulator));
    $receiver.register_q5jrol$(new sceImpose($receiver.emulator));
    $receiver.register_q5jrol$(new InterruptManager_0($receiver.emulator));
    $receiver.register_q5jrol$(new Kernel_Library($receiver.emulator));
    $receiver.register_q5jrol$(new sceSuspendForUser($receiver.emulator));
    $receiver.register_q5jrol$(new sceDmac($receiver.emulator));
    $receiver.register_q5jrol$(new ExceptionManagerForKernel($receiver.emulator));
    $receiver.register_q5jrol$(new LoadCoreForKernel($receiver.emulator));
    $receiver.register_q5jrol$(new sceHprm($receiver.emulator));
    $receiver.register_q5jrol$(new sceNet($receiver.emulator));
    $receiver.register_q5jrol$(new sceNetAdhoc($receiver.emulator));
    $receiver.register_q5jrol$(new sceNetAdhocctl($receiver.emulator));
    $receiver.register_q5jrol$(new sceNetAdhocMatching($receiver.emulator));
    $receiver.register_q5jrol$(new sceWlanDrv($receiver.emulator));
    $receiver.register_q5jrol$(new sceReg($receiver.emulator));
    $receiver.register_q5jrol$(new sceMp3($receiver.emulator));
    $receiver.register_q5jrol$(new sceVaudio($receiver.emulator));
  }
  function RegisterReader() {
    this.pos = 4;
    this.emulator_yeso65$_0 = this.emulator_yeso65$_0;
    this.cpu_duvrp0$_0 = this.cpu_duvrp0$_0;
  }
  Object.defineProperty(RegisterReader.prototype, 'emulator', {
    get: function () {
      if (this.emulator_yeso65$_0 == null)
        return throwUPAE('emulator');
      return this.emulator_yeso65$_0;
    },
    set: function (emulator) {
      this.emulator_yeso65$_0 = emulator;
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'cpu', {
    get: function () {
      if (this.cpu_duvrp0$_0 == null)
        return throwUPAE('cpu');
      return this.cpu_duvrp0$_0;
    },
    set: function (cpu) {
      this.cpu_duvrp0$_0 = cpu;
    }
  });
  RegisterReader.prototype.reset_xt3zvs$ = function (cpu) {
    this.cpu = cpu;
    this.pos = 4;
  };
  Object.defineProperty(RegisterReader.prototype, 'thread', {
    get: function () {
      return get_thread(this.cpu);
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'mem', {
    get: function () {
      return this.cpu.mem;
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'bool', {
    get: function () {
      return this.int !== 0;
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'int', {
    get: function () {
      var tmp$;
      return this.cpu.getGpr_za3lpa$((tmp$ = this.pos, this.pos = tmp$ + 1 | 0, tmp$));
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'long', {
    get: function () {
      var tmp$, tmp$_0;
      this.pos = nextAlignedTo_0(this.pos, 2);
      var low = this.cpu.getGpr_za3lpa$((tmp$ = this.pos, this.pos = tmp$ + 1 | 0, tmp$));
      var high = this.cpu.getGpr_za3lpa$((tmp$_0 = this.pos, this.pos = tmp$_0 + 1 | 0, tmp$_0));
      return Kotlin.Long.fromInt(high).shiftLeft(32).or(Kotlin.Long.fromInt(low).and(new Kotlin.Long(-1, 0)));
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'ptr', {
    get: function () {
      return new MemPtr(this.mem, this.int);
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'ptr32', {
    get: function () {
      return new Ptr32(this.ptr);
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'ptr64', {
    get: function () {
      return new Ptr64(this.ptr);
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'str', {
    get: function () {
      return this.mem.readStringzOrNull_za3lpa$(this.int);
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'istr', {
    get: function () {
      var tmp$;
      return (tmp$ = this.mem.readStringzOrNull_za3lpa$(this.int)) != null ? tmp$ : '';
    }
  });
  Object.defineProperty(RegisterReader.prototype, 'strnn', {
    get: function () {
      var tmp$;
      return (tmp$ = this.mem.readStringzOrNull_za3lpa$(this.int)) != null ? tmp$ : '';
    }
  });
  RegisterReader.prototype.ptr_n7lexo$ = function (s) {
    return new PtrStruct(s, this.ptr);
  };
  RegisterReader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RegisterReader',
    interfaces: []
  };
  function NativeFunction(name, nid, since, syscall, function_0) {
    this.name = name;
    this.nid = nid;
    this.since = since;
    this.syscall = syscall;
    this.function = function_0;
  }
  NativeFunction.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NativeFunction',
    interfaces: []
  };
  NativeFunction.prototype.component1 = function () {
    return this.name;
  };
  NativeFunction.prototype.component2 = function () {
    return this.nid;
  };
  NativeFunction.prototype.component3 = function () {
    return this.since;
  };
  NativeFunction.prototype.component4 = function () {
    return this.syscall;
  };
  NativeFunction.prototype.component5 = function () {
    return this.function;
  };
  NativeFunction.prototype.copy_gh35x6$ = function (name, nid, since, syscall, function_0) {
    return new NativeFunction(name === void 0 ? this.name : name, nid === void 0 ? this.nid : nid, since === void 0 ? this.since : since, syscall === void 0 ? this.syscall : syscall, function_0 === void 0 ? this.function : function_0);
  };
  NativeFunction.prototype.toString = function () {
    return 'NativeFunction(name=' + Kotlin.toString(this.name) + (', nid=' + Kotlin.toString(this.nid)) + (', since=' + Kotlin.toString(this.since)) + (', syscall=' + Kotlin.toString(this.syscall)) + (', function=' + Kotlin.toString(this.function)) + ')';
  };
  NativeFunction.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.nid) | 0;
    result = result * 31 + Kotlin.hashCode(this.since) | 0;
    result = result * 31 + Kotlin.hashCode(this.syscall) | 0;
    result = result * 31 + Kotlin.hashCode(this.function) | 0;
    return result;
  };
  NativeFunction.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.nid, other.nid) && Kotlin.equals(this.since, other.since) && Kotlin.equals(this.syscall, other.syscall) && Kotlin.equals(this.function, other.function)))));
  };
  function BaseSceModule() {
  }
  BaseSceModule.prototype.getByNidOrNull_za3lpa$ = function (nid) {
    return this.mmodule.functions.get_za3lpa$(nid);
  };
  BaseSceModule.prototype.getByNid_za3lpa$ = function (nid) {
    var tmp$;
    return (tmp$ = this.getByNidOrNull_za3lpa$(nid)) != null ? tmp$ : invalidOp(format_0("Can't find NID 0x%08X in %s", [nid, this.name]));
  };
  BaseSceModule.prototype.UNIMPLEMENTED_za3lpa$ = function (nid) {
    var func = this.getByNid_za3lpa$(nid);
    throw new NotImplementedError_init('An operation is not implemented: ' + format_0('Unimplemented %s:0x%08X:%s', [this.name, func.nid, func.name]));
  };
  BaseSceModule.prototype.UNIMPLEMENTED_s8cxhz$ = function (nid) {
    return this.UNIMPLEMENTED_za3lpa$(nid.toInt());
  };
  BaseSceModule.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BaseSceModule',
    interfaces: []
  };
  function SceSubmodule(mmodule) {
    BaseSceModule.call(this);
    this.mmodule_1uicum$_0 = mmodule;
  }
  Object.defineProperty(SceSubmodule.prototype, 'mmodule', {
    get: function () {
      return this.mmodule_1uicum$_0;
    }
  });
  Object.defineProperty(SceSubmodule.prototype, 'name', {
    get: function () {
      return this.mmodule.name;
    }
  });
  Object.defineProperty(SceSubmodule.prototype, 'emulator', {
    get: function () {
      return this.mmodule.emulator;
    }
  });
  SceSubmodule.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SceSubmodule',
    interfaces: [BaseSceModule, WithEmulator]
  };
  function SceModule(emulator, name, flags, prxFile, prxName) {
    if (flags === void 0)
      flags = 0;
    if (prxFile === void 0)
      prxFile = '';
    if (prxName === void 0)
      prxName = '';
    BaseSceModule.call(this);
    this.emulator_csf0s2$_0 = emulator;
    this.name_mb5sos$_0 = name;
    this.flags = flags;
    this.prxFile = prxFile;
    this.prxName = prxName;
    this.loggerSuspend = Logger.Companion.invoke_61zpoe$('SceModuleSuspend');
    this.logger = Logger.Companion.invoke_61zpoe$('SceModule.' + this.name);
    this.rr_hosgbr$_0 = new RegisterReader();
    this.functions = IntMap_init();
  }
  Object.defineProperty(SceModule.prototype, 'emulator', {
    get: function () {
      return this.emulator_csf0s2$_0;
    }
  });
  Object.defineProperty(SceModule.prototype, 'name', {
    get: function () {
      return this.name_mb5sos$_0;
    }
  });
  Object.defineProperty(SceModule.prototype, 'mmodule', {
    get: function () {
      return this;
    }
  });
  SceModule.prototype.getModuleOrNull_5yok1p$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.hle.SceModule.getModuleOrNull_5yok1p$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT) {
      var tmp$;
      return (tmp$ = this.emulator.moduleManager.modulesByClass.get_11rb$(getKClass(T_0))) == null || isT(tmp$) ? tmp$ : null;
    };
  }));
  SceModule.prototype.getModule_5yok1p$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.hle.SceModule.getModule_5yok1p$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    var get_portableSimpleName = _.$$importsForInline$$['korio-js'].com.soywiz.korio.lang.get_portableSimpleName_1yb8b7$;
    var invalidOp = _.$$importsForInline$$['korio-js'].com.soywiz.korio.error.invalidOp_61zpoe$;
    return function (T_0, isT) {
      var tmp$;
      var tmp$_0;
      return (tmp$ = (tmp$_0 = this.emulator.moduleManager.modulesByClass.get_11rb$(getKClass(T_0))) == null || isT(tmp$_0) ? tmp$_0 : null) != null ? tmp$ : invalidOp('Expected to get module ' + get_portableSimpleName(getKClass(T_0)));
    };
  }));
  SceModule.prototype.registerPspModule = function () {
    this.registerModule();
  };
  function SceModule$registerFunctionRaw$lambda(this$SceModule, closure$function) {
    return function (cpu, syscall) {
      var $this = this$SceModule.logger;
      var level = LogLevel.TRACE;
      if ($this.isEnabled_ci8eq1$(level)) {
        var tmp$ = $this.actualLog_t189ph$;
        var this$SceModule_0 = this$SceModule;
        var closure$function_0 = closure$function;
        tmp$.call($this, level, this$SceModule_0.name + ':' + closure$function_0.name);
      }
      closure$function.function(cpu);
      return Unit;
    };
  }
  SceModule.prototype.registerFunctionRaw_l9o8wl$ = function (function_0) {
    this.functions.set_wxm5ur$(function_0.nid.toInt(), function_0);
    if (function_0.syscall >= 0) {
      this.emulator.syscalls.register_pba9dr$(function_0.syscall, function_0.name, SceModule$registerFunctionRaw$lambda(this, function_0));
    }
  };
  SceModule.prototype.registerFunctionRaw_gh35x6$ = function (name, uid, since, syscall, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    this.registerFunctionRaw_l9o8wl$(new NativeFunction(name, uid, since, syscall, function_0));
  };
  function SceModule$registerFunctionRR$lambda(closure$name, this$SceModule, closure$function) {
    return function (it) {
      var tmp$, tmp$_0;
      try {
        if (((tmp$ = get__thread(it)) != null ? tmp$.tracing : null) === true) {
          println('Calling ' + closure$name + ' from ' + toString((tmp$_0 = get__thread(it)) != null ? tmp$_0.name : null));
        }
        this$SceModule.rr_hosgbr$_0.reset_xt3zvs$(it);
        closure$function(this$SceModule.rr_hosgbr$_0, it);
      }
       catch (e) {
        if (Kotlin.isType(e, Throwable)) {
          if (!Kotlin.isType(e, EmulatorControlFlowException)) {
            lang.Console.error_s8jyv4$("Error while processing '" + closure$name + "' :: at " + get_hex(it.sPC) + ' :: ' + e);
          }
          throw e;
        }
         else
          throw e;
      }
      return Unit;
    };
  }
  SceModule.prototype.registerFunctionRR_dc3d86$ = function (name, uid, since, syscall, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    this.registerFunctionRaw_gh35x6$(name, uid, since, syscall, SceModule$registerFunctionRR$lambda(name, this, function_0));
  };
  SceModule.prototype.registerFunctionVoid_dc3d86$ = function (name, uid, since, syscall, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    this.registerFunctionRR_dc3d86$(name, uid, since, syscall, function_0);
  };
  function SceModule$registerFunctionInt$lambda(closure$function) {
    return function ($receiver, it) {
      var tmp$, tmp$_0;
      tmp$_0 = $receiver.cpu;
      try {
        tmp$ = closure$function($receiver, it);
      }
       catch (e) {
        if (Kotlin.isType(e, SceKernelException)) {
          tmp$ = e.errorCode;
        }
         else
          throw e;
      }
      tmp$_0.r2 = tmp$;
      return Unit;
    };
  }
  SceModule.prototype.registerFunctionInt_9l82lv$ = function (name, uid, since, syscall, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    this.registerFunctionRR_dc3d86$(name, uid, since, syscall, SceModule$registerFunctionInt$lambda(function_0));
  };
  function SceModule$registerFunctionFloat$lambda(closure$function) {
    return function ($receiver, it) {
      $receiver.cpu.setFpr_24o109$(0, closure$function($receiver, it));
      return Unit;
    };
  }
  SceModule.prototype.registerFunctionFloat_jwgdqy$ = function (name, uid, since, syscall, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    this.registerFunctionRR_dc3d86$(name, uid, since, syscall, SceModule$registerFunctionFloat$lambda(function_0));
  };
  function SceModule$registerFunctionLong$lambda(closure$function) {
    return function ($receiver, it) {
      var ret = closure$function($receiver, it);
      $receiver.cpu.r2 = ret.shiftRightUnsigned(0).toInt();
      $receiver.cpu.r3 = ret.shiftRightUnsigned(32).toInt();
      return Unit;
    };
  }
  SceModule.prototype.registerFunctionLong_d75y9q$ = function (name, uid, since, syscall, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    this.registerFunctionRR_dc3d86$(name, uid, since, syscall, SceModule$registerFunctionLong$lambda(function_0));
  };
  SceModule.prototype.registerFunctionSuspendT_nv4m2x$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.hle.SceModule.registerFunctionSuspendT_nv4m2x$', wrapFunction(function () {
    var get_threadManager = _.com.soywiz.kpspemu.get_threadManager_gja2zf$;
    var wrapFunction = Kotlin.wrapFunction;
    var SceKernelException = _.com.soywiz.kpspemu.hle.error.SceKernelException;
    var println = Kotlin.kotlin.io.println_s8jyv4$;
    var printStackTrace = _.$$importsForInline$$['korio-js'].com.soywiz.korio.lang.printStackTrace_dbl4o4$;
    var get_coroutineContext = _.com.soywiz.kpspemu.get_coroutineContext_gja2zf$;
    var Kind_CLASS = Kotlin.Kind.CLASS;
    var Continuation = Kotlin.kotlin.coroutines.experimental.Continuation;
    var startCoroutine = Kotlin.kotlin.coroutines.experimental.startCoroutine_uao1qo$;
    var WaitObject$WaitObject$COROUTINE_init = _.com.soywiz.kpspemu.hle.manager.WaitObject.COROUTINE;
    var Unit = Kotlin.kotlin.Unit;
    function SceModule$registerFunctionSuspendT$lambda$lambda(closure$function_0, closure$rcpu_0) {
      return function (it_0, continuation_0, suspended) {
        var instance = new Coroutine$SceModule$registerFunctionSuspendT$lambda$lambda(closure$function_0, closure$rcpu_0, it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function Coroutine$SceModule$registerFunctionSuspendT$lambda$lambda(closure$function_0, closure$rcpu_0, it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$function = closure$function_0;
      this.local$closure$rcpu = closure$rcpu_0;
      this.local$it = it_0;
    }
    Coroutine$SceModule$registerFunctionSuspendT$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$SceModule$registerFunctionSuspendT$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$SceModule$registerFunctionSuspendT$lambda$lambda.prototype.constructor = Coroutine$SceModule$registerFunctionSuspendT$lambda$lambda;
    Coroutine$SceModule$registerFunctionSuspendT$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$function(this.local$it, this.local$closure$rcpu, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
          }
        }
         catch (e) {
          if (this.state_0 === 1)
            throw e;
          else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function SceModule$registerFunctionSuspendT$lambda$ObjectLiteral(closure$resumeHandler, closure$rcpu, this$, closure$completed, closure$rthread, this$SceModule, closure$name, closure$convertErrorToT) {
      this.closure$resumeHandler = closure$resumeHandler;
      this.closure$rcpu = closure$rcpu;
      this.this$ = this$;
      this.closure$completed = closure$completed;
      this.closure$rthread = closure$rthread;
      this.this$SceModule = this$SceModule;
      this.closure$name = closure$name;
      this.closure$convertErrorToT = closure$convertErrorToT;
      this.context_n583kp$_0 = get_coroutineContext(this$SceModule);
    }
    Object.defineProperty(SceModule$registerFunctionSuspendT$lambda$ObjectLiteral.prototype, 'context', {
      get: function () {
        return this.context_n583kp$_0;
      }
    });
    var LogLevel = _.$$importsForInline$$['klogger-js'].com.soywiz.klogger.LogLevel;
    SceModule$registerFunctionSuspendT$lambda$ObjectLiteral.prototype.resume_11rb$ = function (value) {
      this.closure$resumeHandler(this.closure$rcpu, this.this$.thread, value);
      this.closure$completed.v = true;
      this.closure$rthread.resume();
      var $this = this.this$SceModule.loggerSuspend;
      this.closure$name;
      this.this$SceModule;
      this.closure$rcpu;
      var level = LogLevel.TRACE;
      if ($this.isEnabled_ci8eq1$(level)) {
        var tmp$ = $this.actualLog_t189ph$;
        var closure$name = this.closure$name;
        var this$SceModule = this.this$SceModule;
        var closure$rcpu = this.closure$rcpu;
        tmp$.call($this, level, 'Resumed ' + closure$name + ' with value: ' + value + ' (' + get_threadManager(this$SceModule).summary + ') : ' + closure$rcpu.summary);
      }
    };
    SceModule$registerFunctionSuspendT$lambda$ObjectLiteral.prototype.resumeWithException_tcv7n7$ = function (e) {
      if (Kotlin.isType(e, SceKernelException)) {
        this.resume_11rb$(this.closure$convertErrorToT(e.errorCode));
      }
       else {
        println('ERROR at registerFunctionSuspendT.resumeWithException');
        printStackTrace(e);
        throw e;
      }
    };
    SceModule$registerFunctionSuspendT$lambda$ObjectLiteral.$metadata$ = {
      kind: Kind_CLASS,
      interfaces: [Continuation]
    };
    var SceModule$registerFunctionSuspendT$lambda = wrapFunction(function () {
      var LogLevel = _.$$importsForInline$$['klogger-js'].com.soywiz.klogger.LogLevel;
      return function (this$SceModule, closure$name, closure$function, closure$resumeHandler, closure$convertErrorToT, closure$fullName, closure$cb) {
        return function ($receiver, rrr) {
          var rcpu = $receiver.cpu;
          var rthread = $receiver.thread;
          var $this = this$SceModule.loggerSuspend;
          var level = LogLevel.TRACE;
          if ($this.isEnabled_ci8eq1$(level)) {
            $this.actualLog_t189ph$(level, 'Suspend ' + closure$name + ' (' + get_threadManager(this$SceModule).summary + ') : ' + rcpu.summary);
          }
          var mfunction = SceModule$registerFunctionSuspendT$lambda$lambda(closure$function, rcpu);
          var completed = {v: false};
          startCoroutine(mfunction, $receiver, new SceModule$registerFunctionSuspendT$lambda$ObjectLiteral(closure$resumeHandler, rcpu, $receiver, completed, rthread, this$SceModule, closure$name, closure$convertErrorToT));
          if (!completed.v) {
            rthread.markWaiting_p514vg$(new WaitObject$WaitObject$COROUTINE_init(closure$fullName), closure$cb);
            if (rthread.tracing)
              println('  [S] Calling ' + closure$name);
            get_threadManager(this$SceModule).suspend();
          }
          return Unit;
        };
      };
    });
    return function (name, uid, since, syscall, cb, function_0, resumeHandler, convertErrorToT) {
      if (since === void 0)
        since = 150;
      if (syscall === void 0)
        syscall = -1;
      if (cb === void 0)
        cb = false;
      var fullName = this.name + ':' + name;
      this.registerFunctionRR_dc3d86$(name, uid, since, syscall, SceModule$registerFunctionSuspendT$lambda(this, name, function_0, resumeHandler, convertErrorToT, fullName, cb));
    };
  }));
  function SceModule$registerFunctionSuspendInt$lambda(cpu, thread, value) {
    cpu.r2 = value;
    return Unit;
  }
  function SceModule$registerFunctionSuspendInt$lambda_0(it) {
    return it;
  }
  var startCoroutine = Kotlin.kotlin.coroutines.experimental.startCoroutine_uao1qo$;
  function SceModule$registerFunctionSuspendT$lambda$lambda(closure$function_0, closure$rcpu_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$SceModule$registerFunctionSuspendT$lambda$lambda(closure$function_0, closure$rcpu_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$SceModule$registerFunctionSuspendT$lambda$lambda(closure$function_0, closure$rcpu_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$function = closure$function_0;
    this.local$closure$rcpu = closure$rcpu_0;
    this.local$it = it_0;
  }
  Coroutine$SceModule$registerFunctionSuspendT$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SceModule$registerFunctionSuspendT$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SceModule$registerFunctionSuspendT$lambda$lambda.prototype.constructor = Coroutine$SceModule$registerFunctionSuspendT$lambda$lambda;
  Coroutine$SceModule$registerFunctionSuspendT$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$function(this.local$it, this.local$closure$rcpu, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SceModule$registerFunctionSuspendT$lambda$ObjectLiteral(closure$resumeHandler, closure$rcpu, this$, closure$completed, closure$rthread, this$SceModule, closure$name, closure$convertErrorToT) {
    this.closure$resumeHandler = closure$resumeHandler;
    this.closure$rcpu = closure$rcpu;
    this.this$ = this$;
    this.closure$completed = closure$completed;
    this.closure$rthread = closure$rthread;
    this.this$SceModule = this$SceModule;
    this.closure$name = closure$name;
    this.closure$convertErrorToT = closure$convertErrorToT;
    this.context_n583kp$_0 = get_coroutineContext(this$SceModule);
  }
  Object.defineProperty(SceModule$registerFunctionSuspendT$lambda$ObjectLiteral.prototype, 'context', {
    get: function () {
      return this.context_n583kp$_0;
    }
  });
  SceModule$registerFunctionSuspendT$lambda$ObjectLiteral.prototype.resume_11rb$ = function (value) {
    this.closure$resumeHandler(this.closure$rcpu, this.this$.thread, value);
    this.closure$completed.v = true;
    this.closure$rthread.resume();
    var $this = this.this$SceModule.loggerSuspend;
    this.closure$name;
    this.this$SceModule;
    this.closure$rcpu;
    var level = LogLevel.TRACE;
    if ($this.isEnabled_ci8eq1$(level)) {
      var tmp$ = $this.actualLog_t189ph$;
      var closure$name = this.closure$name;
      var this$SceModule = this.this$SceModule;
      var closure$rcpu = this.closure$rcpu;
      tmp$.call($this, level, 'Resumed ' + closure$name + ' with value: ' + value + ' (' + get_threadManager(this$SceModule).summary + ') : ' + closure$rcpu.summary);
    }
  };
  SceModule$registerFunctionSuspendT$lambda$ObjectLiteral.prototype.resumeWithException_tcv7n7$ = function (e) {
    if (Kotlin.isType(e, SceKernelException)) {
      this.resume_11rb$(this.closure$convertErrorToT(e.errorCode));
    }
     else {
      println('ERROR at registerFunctionSuspendT.resumeWithException');
      printStackTrace(e);
      throw e;
    }
  };
  SceModule$registerFunctionSuspendT$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Continuation]
  };
  var SceModule$registerFunctionSuspendT$lambda = wrapFunction(function () {
    var LogLevel = $module$klogger_js.com.soywiz.klogger.LogLevel;
    return function (this$SceModule, closure$name, closure$function, closure$resumeHandler, closure$convertErrorToT, closure$fullName, closure$cb) {
      return function ($receiver, rrr) {
        var rcpu = $receiver.cpu;
        var rthread = $receiver.thread;
        var $this = this$SceModule.loggerSuspend;
        var level = LogLevel.TRACE;
        if ($this.isEnabled_ci8eq1$(level)) {
          $this.actualLog_t189ph$(level, 'Suspend ' + closure$name + ' (' + get_threadManager(this$SceModule).summary + ') : ' + rcpu.summary);
        }
        var mfunction = SceModule$registerFunctionSuspendT$lambda$lambda(closure$function, rcpu);
        var completed = {v: false};
        startCoroutine(mfunction, $receiver, new SceModule$registerFunctionSuspendT$lambda$ObjectLiteral(closure$resumeHandler, rcpu, $receiver, completed, rthread, this$SceModule, closure$name, closure$convertErrorToT));
        if (!completed.v) {
          rthread.markWaiting_p514vg$(new WaitObject$COROUTINE(closure$fullName), closure$cb);
          if (rthread.tracing)
            println('  [S] Calling ' + closure$name);
          get_threadManager(this$SceModule).suspend();
        }
        return Unit;
      };
    };
  });
  SceModule.prototype.registerFunctionSuspendInt_q1rm4a$ = function (name, uid, since, syscall, cb, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    if (cb === void 0)
      cb = false;
    var fullName = this.name + ':' + name;
    this.registerFunctionRR_dc3d86$(name, uid, since, syscall, SceModule$registerFunctionSuspendT$lambda(this, name, function_0, SceModule$registerFunctionSuspendInt$lambda, SceModule$registerFunctionSuspendInt$lambda_0, fullName, cb));
  };
  function SceModule$registerFunctionSuspendLong$lambda(cpu, thread, value) {
    cpu.r2 = value.shiftRightUnsigned(0).toInt();
    cpu.r3 = value.shiftRightUnsigned(32).toInt();
    return Unit;
  }
  function SceModule$registerFunctionSuspendLong$lambda_0(it) {
    return Kotlin.Long.fromInt(it);
  }
  SceModule.prototype.registerFunctionSuspendLong_q4vilx$ = function (name, uid, since, syscall, cb, function_0) {
    if (since === void 0)
      since = 150;
    if (syscall === void 0)
      syscall = -1;
    if (cb === void 0)
      cb = false;
    var fullName = this.name + ':' + name;
    this.registerFunctionRR_dc3d86$(name, uid, since, syscall, SceModule$registerFunctionSuspendT$lambda(this, name, function_0, SceModule$registerFunctionSuspendLong$lambda, SceModule$registerFunctionSuspendLong$lambda_0, fullName, cb));
  };
  SceModule.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SceModule',
    interfaces: [BaseSceModule, WithEmulator]
  };
  function SceKernelException(errorCode) {
    Exception_init(this);
    this.errorCode = errorCode;
    this.name = 'SceKernelException';
  }
  SceKernelException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SceKernelException',
    interfaces: [Exception]
  };
  var errorLogger;
  function sceKernelException(errorCode) {
    if (errorCode === void 0)
      errorCode = SceKernelErrors_getInstance().ERROR_ERROR;
    var $this = errorLogger;
    var level = LogLevel.INFO;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'ERROR: ' + errorCode);
    }
    throw new SceKernelException(errorCode);
  }
  function SceKernelErrors() {
    SceKernelErrors_instance = this;
    this.ERROR_OK = 0;
    this.ERROR_ERROR = (new Kotlin.Long(-2147352575, 0)).toInt();
    this.ERROR_NOTIMP = (new Kotlin.Long(-2147352574, 0)).toInt();
    this.ERROR_ALREADY = (new Kotlin.Long(-2147483616, 0)).toInt();
    this.ERROR_BUSY = (new Kotlin.Long(-2147483615, 0)).toInt();
    this.ERROR_OUT_OF_MEMORY = (new Kotlin.Long(-2147483614, 0)).toInt();
    this.ERROR_INVALID_ID = (new Kotlin.Long(-2147483392, 0)).toInt();
    this.ERROR_INVALID_NAME = (new Kotlin.Long(-2147483391, 0)).toInt();
    this.ERROR_INVALID_INDEX = (new Kotlin.Long(-2147483390, 0)).toInt();
    this.ERROR_INVALID_POINTER = (new Kotlin.Long(-2147483389, 0)).toInt();
    this.ERROR_INVALID_SIZE = (new Kotlin.Long(-2147483388, 0)).toInt();
    this.ERROR_INVALID_FLAG = (new Kotlin.Long(-2147483387, 0)).toInt();
    this.ERROR_INVALID_COMMAND = (new Kotlin.Long(-2147483386, 0)).toInt();
    this.ERROR_INVALID_MODE = (new Kotlin.Long(-2147483385, 0)).toInt();
    this.ERROR_INVALID_FORMAT = (new Kotlin.Long(-2147483384, 0)).toInt();
    this.ERROR_INVALID_VALUE = (new Kotlin.Long(-2147483138, 0)).toInt();
    this.ERROR_INVALID_ARGUMENT = (new Kotlin.Long(-2147483137, 0)).toInt();
    this.ERROR_BAD_FILE = (new Kotlin.Long(-2147483127, 0)).toInt();
    this.ERROR_ACCESS_ERROR = (new Kotlin.Long(-2147483123, 0)).toInt();
    this.ERROR_ERRNO_OPERATION_NOT_PERMITTED = (new Kotlin.Long(-2147418111, 0)).toInt();
    this.ERROR_ERRNO_FILE_NOT_FOUND = (new Kotlin.Long(-2147418110, 0)).toInt();
    this.ERROR_ERRNO_FILE_OPEN_ERROR = (new Kotlin.Long(-2147418109, 0)).toInt();
    this.ERROR_ERRNO_IO_ERROR = (new Kotlin.Long(-2147418107, 0)).toInt();
    this.ERROR_ERRNO_ARG_LIST_TOO_LONG = (new Kotlin.Long(-2147418105, 0)).toInt();
    this.ERROR_ERRNO_INVALID_FILE_DESCRIPTOR = (new Kotlin.Long(-2147418103, 0)).toInt();
    this.ERROR_ERRNO_RESOURCE_UNAVAILABLE = (new Kotlin.Long(-2147418101, 0)).toInt();
    this.ERROR_ERRNO_NO_MEMORY = (new Kotlin.Long(-2147418100, 0)).toInt();
    this.ERROR_ERRNO_NO_PERM = (new Kotlin.Long(-2147418099, 0)).toInt();
    this.ERROR_ERRNO_FILE_INVALID_ADDR = (new Kotlin.Long(-2147418098, 0)).toInt();
    this.ERROR_ERRNO_DEVICE_BUSY = (new Kotlin.Long(-2147418096, 0)).toInt();
    this.ERROR_ERRNO_FILE_ALREADY_EXISTS = (new Kotlin.Long(-2147418095, 0)).toInt();
    this.ERROR_ERRNO_CROSS_DEV_LINK = (new Kotlin.Long(-2147418094, 0)).toInt();
    this.ERROR_ERRNO_DEVICE_NOT_FOUND = (new Kotlin.Long(-2147418093, 0)).toInt();
    this.ERROR_ERRNO_NOT_A_DIRECTORY = (new Kotlin.Long(-2147418092, 0)).toInt();
    this.ERROR_ERRNO_IS_DIRECTORY = (new Kotlin.Long(-2147418091, 0)).toInt();
    this.ERROR_ERRNO_INVALID_ARGUMENT = (new Kotlin.Long(-2147418090, 0)).toInt();
    this.ERROR_ERRNO_TOO_MANY_OPEN_SYSTEM_FILES = (new Kotlin.Long(-2147418088, 0)).toInt();
    this.ERROR_ERRNO_FILE_IS_TOO_BIG = (new Kotlin.Long(-2147418085, 0)).toInt();
    this.ERROR_ERRNO_DEVICE_NO_FREE_SPACE = (new Kotlin.Long(-2147418084, 0)).toInt();
    this.ERROR_ERRNO_READ_ONLY = (new Kotlin.Long(-2147418082, 0)).toInt();
    this.ERROR_ERRNO_CLOSED = (new Kotlin.Long(-2147418080, 0)).toInt();
    this.ERROR_ERRNO_FILE_PATH_TOO_LONG = (new Kotlin.Long(-2147418076, 0)).toInt();
    this.ERROR_ERRNO_FILE_PROTOCOL = (new Kotlin.Long(-2147418041, 0)).toInt();
    this.ERROR_ERRNO_DIRECTORY_IS_NOT_EMPTY = (new Kotlin.Long(-2147418022, 0)).toInt();
    this.ERROR_ERRNO_TOO_MANY_SYMBOLIC_LINKS = (new Kotlin.Long(-2147418020, 0)).toInt();
    this.ERROR_ERRNO_FILE_ADDR_IN_USE = (new Kotlin.Long(-2147418014, 0)).toInt();
    this.ERROR_ERRNO_CONNECTION_ABORTED = (new Kotlin.Long(-2147418009, 0)).toInt();
    this.ERROR_ERRNO_CONNECTION_RESET = (new Kotlin.Long(-2147418008, 0)).toInt();
    this.ERROR_ERRNO_NO_FREE_BUF_SPACE = (new Kotlin.Long(-2147418007, 0)).toInt();
    this.ERROR_ERRNO_FILE_TIMEOUT = (new Kotlin.Long(-2147418002, 0)).toInt();
    this.ERROR_ERRNO_IN_PROGRESS = (new Kotlin.Long(-2147417993, 0)).toInt();
    this.ERROR_ERRNO_ALREADY = (new Kotlin.Long(-2147417992, 0)).toInt();
    this.ERROR_ERRNO_NO_MEDIA = (new Kotlin.Long(-2147417989, 0)).toInt();
    this.ERROR_ERRNO_INVALID_MEDIUM = (new Kotlin.Long(-2147417988, 0)).toInt();
    this.ERROR_ERRNO_ADDRESS_NOT_AVAILABLE = (new Kotlin.Long(-2147417987, 0)).toInt();
    this.ERROR_ERRNO_IS_ALREADY_CONNECTED = (new Kotlin.Long(-2147417985, 0)).toInt();
    this.ERROR_ERRNO_NOT_CONNECTED = (new Kotlin.Long(-2147417984, 0)).toInt();
    this.ERROR_ERRNO_FILE_QUOTA_EXCEEDED = (new Kotlin.Long(-2147417980, 0)).toInt();
    this.ERROR_ERRNO_FUNCTION_NOT_SUPPORTED = (new Kotlin.Long(-2147373056, 0)).toInt();
    this.ERROR_ERRNO_ADDR_OUT_OF_MAIN_MEM = (new Kotlin.Long(-2147373055, 0)).toInt();
    this.ERROR_ERRNO_INVALID_UNIT_NUM = (new Kotlin.Long(-2147373054, 0)).toInt();
    this.ERROR_ERRNO_INVALID_FILE_SIZE = (new Kotlin.Long(-2147373053, 0)).toInt();
    this.ERROR_ERRNO_INVALID_FLAG = (new Kotlin.Long(-2147373052, 0)).toInt();
    this.ERROR_KERNEL_CANNOT_BE_CALLED_FROM_INTERRUPT = (new Kotlin.Long(-2147352476, 0)).toInt();
    this.ERROR_KERNEL_INTERRUPTS_ALREADY_DISABLED = (new Kotlin.Long(-2147352474, 0)).toInt();
    this.ERROR_KERNEL_UNKNOWN_UID = (new Kotlin.Long(-2147352373, 0)).toInt();
    this.ERROR_KERNEL_UNMATCH_TYPE_UID = (new Kotlin.Long(-2147352372, 0)).toInt();
    this.ERROR_KERNEL_NOT_EXIST_ID = (new Kotlin.Long(-2147352371, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_FUNCTION_UID = (new Kotlin.Long(-2147352370, 0)).toInt();
    this.ERROR_KERNEL_ALREADY_HOLDER_UID = (new Kotlin.Long(-2147352369, 0)).toInt();
    this.ERROR_KERNEL_NOT_HOLDER_UID = (new Kotlin.Long(-2147352368, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_PERMISSION = (new Kotlin.Long(-2147352367, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_ARGUMENT = (new Kotlin.Long(-2147352366, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_ADDR = (new Kotlin.Long(-2147352365, 0)).toInt();
    this.ERROR_KERNEL_MEMORY_AREA_OUT_OF_RANGE = (new Kotlin.Long(-2147352364, 0)).toInt();
    this.ERROR_KERNEL_MEMORY_AREA_IS_OVERLAP = (new Kotlin.Long(-2147352363, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_PARTITION_ID = (new Kotlin.Long(-2147352362, 0)).toInt();
    this.ERROR_KERNEL_PARTITION_IN_USE = (new Kotlin.Long(-2147352361, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_MEMBLOCK_ALLOC_TYPE = (new Kotlin.Long(-2147352360, 0)).toInt();
    this.ERROR_KERNEL_FAILED_ALLOC_MEMBLOCK = (new Kotlin.Long(-2147352359, 0)).toInt();
    this.ERROR_KERNEL_INHIBITED_RESIZE_MEMBLOCK = (new Kotlin.Long(-2147352358, 0)).toInt();
    this.ERROR_KERNEL_FAILED_RESIZE_MEMBLOCK = (new Kotlin.Long(-2147352357, 0)).toInt();
    this.ERROR_KERNEL_FAILED_ALLOC_HEAPBLOCK = (new Kotlin.Long(-2147352356, 0)).toInt();
    this.ERROR_KERNEL_FAILED_ALLOC_HEAP = (new Kotlin.Long(-2147352355, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_CHUNK_ID = (new Kotlin.Long(-2147352354, 0)).toInt();
    this.ERROR_KERNEL_CANNOT_FIND_CHUNK_NAME = (new Kotlin.Long(-2147352353, 0)).toInt();
    this.ERROR_KERNEL_NO_FREE_CHUNK = (new Kotlin.Long(-2147352352, 0)).toInt();
    this.ERROR_KERNEL_MEMBLOCK_FRAGMENTED = (new Kotlin.Long(-2147352351, 0)).toInt();
    this.ERROR_KERNEL_MEMBLOCK_CANNOT_JOINT = (new Kotlin.Long(-2147352350, 0)).toInt();
    this.ERROR_KERNEL_MEMBLOCK_CANNOT_SEPARATE = (new Kotlin.Long(-2147352349, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_ALIGNMENT_SIZE = (new Kotlin.Long(-2147352348, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_DEVKIT_VER = (new Kotlin.Long(-2147352347, 0)).toInt();
    this.ERROR_KERNEL_MODULE_LINK_ERROR = (new Kotlin.Long(-2147352276, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_OBJECT_FORMAT = (new Kotlin.Long(-2147352275, 0)).toInt();
    this.ERROR_KERNEL_UNKNOWN_MODULE = (new Kotlin.Long(-2147352274, 0)).toInt();
    this.ERROR_KERNEL_UNKNOWN_MODULE_FILE = (new Kotlin.Long(-2147352273, 0)).toInt();
    this.ERROR_KERNEL_FILE_READ_ERROR = (new Kotlin.Long(-2147352272, 0)).toInt();
    this.ERROR_KERNEL_MEMORY_IN_USE = (new Kotlin.Long(-2147352271, 0)).toInt();
    this.ERROR_KERNEL_PARTITION_MISMATCH = (new Kotlin.Long(-2147352270, 0)).toInt();
    this.ERROR_KERNEL_MODULE_ALREADY_STARTED = (new Kotlin.Long(-2147352269, 0)).toInt();
    this.ERROR_KERNEL_MODULE_NOT_STARTED = (new Kotlin.Long(-2147352268, 0)).toInt();
    this.ERROR_KERNEL_MODULE_ALREADY_STOPPED = (new Kotlin.Long(-2147352267, 0)).toInt();
    this.ERROR_KERNEL_MODULE_CANNOT_STOP = (new Kotlin.Long(-2147352266, 0)).toInt();
    this.ERROR_KERNEL_MODULE_NOT_STOPPED = (new Kotlin.Long(-2147352265, 0)).toInt();
    this.ERROR_KERNEL_MODULE_CANNOT_REMOVE = (new Kotlin.Long(-2147352264, 0)).toInt();
    this.ERROR_KERNEL_EXCLUSIVE_LOAD = (new Kotlin.Long(-2147352263, 0)).toInt();
    this.ERROR_KERNEL_LIBRARY_IS_NOT_LINKED = (new Kotlin.Long(-2147352262, 0)).toInt();
    this.ERROR_KERNEL_LIBRARY_ALREADY_EXISTS = (new Kotlin.Long(-2147352261, 0)).toInt();
    this.ERROR_KERNEL_LIBRARY_NOT_FOUND = (new Kotlin.Long(-2147352260, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_LIBRARY_HEADER = (new Kotlin.Long(-2147352259, 0)).toInt();
    this.ERROR_KERNEL_LIBRARY_IN_USE = (new Kotlin.Long(-2147352258, 0)).toInt();
    this.ERROR_KERNEL_MODULE_ALREADY_STOPPING = (new Kotlin.Long(-2147352257, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_OFFSET_VALUE = (new Kotlin.Long(-2147352256, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_POSITION_CODE = (new Kotlin.Long(-2147352255, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_ACCESS_CODE = (new Kotlin.Long(-2147352254, 0)).toInt();
    this.ERROR_KERNEL_MODULE_MANAGER_BUSY = (new Kotlin.Long(-2147352253, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_FLAG = (new Kotlin.Long(-2147352252, 0)).toInt();
    this.ERROR_KERNEL_CANNOT_GET_MODULE_LIST = (new Kotlin.Long(-2147352251, 0)).toInt();
    this.ERROR_KERNEL_PROHIBIT_LOADMODULE_DEVICE = (new Kotlin.Long(-2147352250, 0)).toInt();
    this.ERROR_KERNEL_PROHIBIT_LOADEXEC_DEVICE = (new Kotlin.Long(-2147352249, 0)).toInt();
    this.ERROR_KERNEL_UNSUPPORTED_PRX_TYPE = (new Kotlin.Long(-2147352248, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_PERMISSION_CALL = (new Kotlin.Long(-2147352247, 0)).toInt();
    this.ERROR_KERNEL_CANNOT_GET_MODULE_INFO = (new Kotlin.Long(-2147352246, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_LOADEXEC_BUFFER = (new Kotlin.Long(-2147352245, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_LOADEXEC_FILENAME = (new Kotlin.Long(-2147352244, 0)).toInt();
    this.ERROR_KERNEL_NO_EXIT_CALLBACK = (new Kotlin.Long(-2147352243, 0)).toInt();
    this.ERROR_KERNEL_MEDIA_CHANGED = (new Kotlin.Long(-2147352242, 0)).toInt();
    this.ERROR_KERNEL_CANNOT_USE_BETA_VER_MODULE = (new Kotlin.Long(-2147352241, 0)).toInt();
    this.ERROR_KERNEL_NO_MEMORY = (new Kotlin.Long(-2147352176, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_ATTR = (new Kotlin.Long(-2147352175, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_THREAD_ENTRY_ADDR = (new Kotlin.Long(-2147352174, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_PRIORITY = (new Kotlin.Long(-2147352173, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_STACK_SIZE = (new Kotlin.Long(-2147352172, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_MODE = (new Kotlin.Long(-2147352171, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_MASK = (new Kotlin.Long(-2147352170, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_THREAD = (new Kotlin.Long(-2147352169, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_THREAD = (new Kotlin.Long(-2147352168, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_SEMAPHORE = (new Kotlin.Long(-2147352167, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_EVENT_FLAG = (new Kotlin.Long(-2147352166, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_MESSAGE_BOX = (new Kotlin.Long(-2147352165, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_VPOOL = (new Kotlin.Long(-2147352164, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_FPOOL = (new Kotlin.Long(-2147352163, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_MESSAGE_PIPE = (new Kotlin.Long(-2147352162, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_ALARM = (new Kotlin.Long(-2147352161, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_THREAD_EVENT_HANDLER = (new Kotlin.Long(-2147352160, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_CALLBACK = (new Kotlin.Long(-2147352159, 0)).toInt();
    this.ERROR_KERNEL_THREAD_ALREADY_DORMANT = (new Kotlin.Long(-2147352158, 0)).toInt();
    this.ERROR_KERNEL_THREAD_ALREADY_SUSPEND = (new Kotlin.Long(-2147352157, 0)).toInt();
    this.ERROR_KERNEL_THREAD_IS_NOT_DORMANT = (new Kotlin.Long(-2147352156, 0)).toInt();
    this.ERROR_KERNEL_THREAD_IS_NOT_SUSPEND = (new Kotlin.Long(-2147352155, 0)).toInt();
    this.ERROR_KERNEL_THREAD_IS_NOT_WAIT = (new Kotlin.Long(-2147352154, 0)).toInt();
    this.ERROR_KERNEL_WAIT_CAN_NOT_WAIT = (new Kotlin.Long(-2147352153, 0)).toInt();
    this.ERROR_KERNEL_WAIT_TIMEOUT = (new Kotlin.Long(-2147352152, 0)).toInt();
    this.ERROR_KERNEL_WAIT_CANCELLED = (new Kotlin.Long(-2147352151, 0)).toInt();
    this.ERROR_KERNEL_WAIT_STATUS_RELEASED = (new Kotlin.Long(-2147352150, 0)).toInt();
    this.ERROR_KERNEL_WAIT_STATUS_RELEASED_CALLBACK = (new Kotlin.Long(-2147352149, 0)).toInt();
    this.ERROR_KERNEL_THREAD_IS_TERMINATED = (new Kotlin.Long(-2147352148, 0)).toInt();
    this.ERROR_KERNEL_SEMA_ZERO = (new Kotlin.Long(-2147352147, 0)).toInt();
    this.ERROR_KERNEL_SEMA_OVERFLOW = (new Kotlin.Long(-2147352146, 0)).toInt();
    this.ERROR_KERNEL_EVENT_FLAG_POLL_FAILED = (new Kotlin.Long(-2147352145, 0)).toInt();
    this.ERROR_KERNEL_EVENT_FLAG_NO_MULTI_PERM = (new Kotlin.Long(-2147352144, 0)).toInt();
    this.ERROR_KERNEL_EVENT_FLAG_ILLEGAL_WAIT_PATTERN = (new Kotlin.Long(-2147352143, 0)).toInt();
    this.ERROR_KERNEL_MESSAGEBOX_NO_MESSAGE = (new Kotlin.Long(-2147352142, 0)).toInt();
    this.ERROR_KERNEL_MESSAGE_PIPE_FULL = (new Kotlin.Long(-2147352141, 0)).toInt();
    this.ERROR_KERNEL_MESSAGE_PIPE_EMPTY = (new Kotlin.Long(-2147352140, 0)).toInt();
    this.ERROR_KERNEL_WAIT_DELETE = (new Kotlin.Long(-2147352139, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_MEMBLOCK = (new Kotlin.Long(-2147352138, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_MEMSIZE = (new Kotlin.Long(-2147352137, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_SCRATCHPAD_ADDR = (new Kotlin.Long(-2147352136, 0)).toInt();
    this.ERROR_KERNEL_SCRATCHPAD_IN_USE = (new Kotlin.Long(-2147352135, 0)).toInt();
    this.ERROR_KERNEL_SCRATCHPAD_NOT_IN_USE = (new Kotlin.Long(-2147352134, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_TYPE = (new Kotlin.Long(-2147352133, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_SIZE = (new Kotlin.Long(-2147352132, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_COUNT = (new Kotlin.Long(-2147352131, 0)).toInt();
    this.ERROR_KERNEL_NOT_FOUND_VTIMER = (new Kotlin.Long(-2147352130, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_VTIMER = (new Kotlin.Long(-2147352129, 0)).toInt();
    this.ERROR_KERNEL_ILLEGAL_KTLS = (new Kotlin.Long(-2147352128, 0)).toInt();
    this.ERROR_KERNEL_KTLS_IS_FULL = (new Kotlin.Long(-2147352127, 0)).toInt();
    this.ERROR_KERNEL_KTLS_IS_BUSY = (new Kotlin.Long(-2147352126, 0)).toInt();
    this.ERROR_KERNEL_MUTEX_NOT_FOUND = (new Kotlin.Long(-2147352125, 0)).toInt();
    this.ERROR_KERNEL_MUTEX_LOCKED = (new Kotlin.Long(-2147352124, 0)).toInt();
    this.ERROR_KERNEL_MUTEX_UNLOCKED = (new Kotlin.Long(-2147352123, 0)).toInt();
    this.ERROR_KERNEL_MUTEX_LOCK_OVERFLOW = (new Kotlin.Long(-2147352122, 0)).toInt();
    this.ERROR_KERNEL_MUTEX_UNLOCK_UNDERFLOW = (new Kotlin.Long(-2147352121, 0)).toInt();
    this.ERROR_KERNEL_MUTEX_RECURSIVE_NOT_ALLOWED = (new Kotlin.Long(-2147352120, 0)).toInt();
    this.ERROR_KERNEL_MESSAGEBOX_DUPLICATE_MESSAGE = (new Kotlin.Long(-2147352119, 0)).toInt();
    this.ERROR_KERNEL_LWMUTEX_NOT_FOUND = (new Kotlin.Long(-2147352118, 0)).toInt();
    this.ERROR_KERNEL_LWMUTEX_LOCKED = (new Kotlin.Long(-2147352117, 0)).toInt();
    this.ERROR_KERNEL_LWMUTEX_UNLOCKED = (new Kotlin.Long(-2147352116, 0)).toInt();
    this.ERROR_KERNEL_LWMUTEX_LOCK_OVERFLOW = (new Kotlin.Long(-2147352115, 0)).toInt();
    this.ERROR_KERNEL_LWMUTEX_UNLOCK_UNDERFLOW = (new Kotlin.Long(-2147352114, 0)).toInt();
    this.ERROR_KERNEL_LWMUTEX_RECURSIVE_NOT_ALLOWED = (new Kotlin.Long(-2147352113, 0)).toInt();
    this.ERROR_KERNEL_POWER_CANNOT_CANCEL = (new Kotlin.Long(-2147351967, 0)).toInt();
    this.ERROR_KERNEL_TOO_MANY_OPEN_FILES = (new Kotlin.Long(-2147351776, 0)).toInt();
    this.ERROR_KERNEL_NO_SUCH_DEVICE = (new Kotlin.Long(-2147351775, 0)).toInt();
    this.ERROR_KERNEL_BAD_FILE_DESCRIPTOR = (new Kotlin.Long(-2147351773, 0)).toInt();
    this.ERROR_KERNEL_UNSUPPORTED_OPERATION = (new Kotlin.Long(-2147351771, 0)).toInt();
    this.ERROR_KERNEL_NOCWD = (new Kotlin.Long(-2147351764, 0)).toInt();
    this.ERROR_KERNEL_FILENAME_TOO_LONG = (new Kotlin.Long(-2147351763, 0)).toInt();
    this.ERROR_KERNEL_ASYNC_BUSY = (new Kotlin.Long(-2147351767, 0)).toInt();
    this.ERROR_KERNEL_NO_ASYNC_OP = (new Kotlin.Long(-2147351766, 0)).toInt();
    this.ERROR_KERNEL_NOT_CACHE_ALIGNED = (new Kotlin.Long(-2147351476, 0)).toInt();
    this.ERROR_KERNEL_MAX_ERROR = (new Kotlin.Long(-2147351475, 0)).toInt();
    this.ERROR_UTILITY_INVALID_STATUS = (new Kotlin.Long(-2146369535, 0)).toInt();
    this.ERROR_UTILITY_INVALID_PARAM_ADDR = (new Kotlin.Long(-2146369534, 0)).toInt();
    this.ERROR_UTILITY_IS_UNKNOWN = (new Kotlin.Long(-2146369533, 0)).toInt();
    this.ERROR_UTILITY_INVALID_PARAM_SIZE = (new Kotlin.Long(-2146369532, 0)).toInt();
    this.ERROR_UTILITY_WRONG_TYPE = (new Kotlin.Long(-2146369531, 0)).toInt();
    this.ERROR_UTILITY_MODULE_NOT_FOUND = (new Kotlin.Long(-2146369530, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_NO_MEMSTICK = (new Kotlin.Long(-2146368767, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_MEMSTICK_REMOVED = (new Kotlin.Long(-2146368766, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_ACCESS_ERROR = (new Kotlin.Long(-2146368763, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_DATA_BROKEN = (new Kotlin.Long(-2146368762, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_NO_DATA = (new Kotlin.Long(-2146368761, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_BAD_PARAMS = (new Kotlin.Long(-2146368760, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_NO_UMD = (new Kotlin.Long(-2146368759, 0)).toInt();
    this.ERROR_SAVEDATA_LOAD_INTERNAL_ERROR = (new Kotlin.Long(-2146368759, 0)).toInt();
    this.ERROR_SAVEDATA_RW_NO_MEMSTICK = (new Kotlin.Long(-2146368735, 0)).toInt();
    this.ERROR_SAVEDATA_RW_MEMSTICK_REMOVED = (new Kotlin.Long(-2146368734, 0)).toInt();
    this.ERROR_SAVEDATA_RW_MEMSTICK_FULL = (new Kotlin.Long(-2146368733, 0)).toInt();
    this.ERROR_SAVEDATA_RW_MEMSTICK_PROTECTED = (new Kotlin.Long(-2146368732, 0)).toInt();
    this.ERROR_SAVEDATA_RW_ACCESS_ERROR = (new Kotlin.Long(-2146368731, 0)).toInt();
    this.ERROR_SAVEDATA_RW_DATA_BROKEN = (new Kotlin.Long(-2146368730, 0)).toInt();
    this.ERROR_SAVEDATA_RW_NO_DATA = (new Kotlin.Long(-2146368729, 0)).toInt();
    this.ERROR_SAVEDATA_RW_BAD_PARAMS = (new Kotlin.Long(-2146368728, 0)).toInt();
    this.ERROR_SAVEDATA_RW_FILE_NOT_FOUND = (new Kotlin.Long(-2146368727, 0)).toInt();
    this.ERROR_SAVEDATA_RW_CAN_NOT_SUSPEND = (new Kotlin.Long(-2146368726, 0)).toInt();
    this.ERROR_SAVEDATA_RW_INTERNAL_ERROR = (new Kotlin.Long(-2146368725, 0)).toInt();
    this.ERROR_SAVEDATA_RW_BAD_STATUS = (new Kotlin.Long(-2146368724, 0)).toInt();
    this.ERROR_SAVEDATA_RW_SECURE_FILE_FULL = (new Kotlin.Long(-2146368723, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_NO_MEMSTICK = (new Kotlin.Long(-2146368703, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_MEMSTICK_REMOVED = (new Kotlin.Long(-2146368702, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_MEMSTICK_PROTECTED = (new Kotlin.Long(-2146368700, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_ACCESS_ERROR = (new Kotlin.Long(-2146368699, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_DATA_BROKEN = (new Kotlin.Long(-2146368698, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_NO_DATA = (new Kotlin.Long(-2146368697, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_BAD_PARAMS = (new Kotlin.Long(-2146368696, 0)).toInt();
    this.ERROR_SAVEDATA_DELETE_INTERNAL_ERROR = (new Kotlin.Long(-2146368693, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_NO_MEMSTICK = (new Kotlin.Long(-2146368639, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_MEMSTICK_REMOVED = (new Kotlin.Long(-2146368638, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_NO_SPACE = (new Kotlin.Long(-2146368637, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_MEMSTICK_PROTECTED = (new Kotlin.Long(-2146368636, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_ACCESS_ERROR = (new Kotlin.Long(-2146368635, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_BAD_PARAMS = (new Kotlin.Long(-2146368632, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_NO_UMD = (new Kotlin.Long(-2146368631, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_WRONG_UMD = (new Kotlin.Long(-2146368630, 0)).toInt();
    this.ERROR_SAVEDATA_SAVE_INTERNAL_ERROR = (new Kotlin.Long(-2146368629, 0)).toInt();
    this.ERROR_SAVEDATA_SIZES_NO_MEMSTICK = (new Kotlin.Long(-2146368575, 0)).toInt();
    this.ERROR_SAVEDATA_SIZES_MEMSTICK_REMOVED = (new Kotlin.Long(-2146368574, 0)).toInt();
    this.ERROR_SAVEDATA_SIZES_ACCESS_ERROR = (new Kotlin.Long(-2146368571, 0)).toInt();
    this.ERROR_SAVEDATA_SIZES_DATA_BROKEN = (new Kotlin.Long(-2146368570, 0)).toInt();
    this.ERROR_SAVEDATA_SIZES_NO_DATA = (new Kotlin.Long(-2146368569, 0)).toInt();
    this.ERROR_SAVEDATA_SIZES_BAD_PARAMS = (new Kotlin.Long(-2146368568, 0)).toInt();
    this.ERROR_SAVEDATA_SIZES_INTERNAL_ERROR = (new Kotlin.Long(-2146368565, 0)).toInt();
    this.ERROR_NETPARAM_BAD_NETCONF = (new Kotlin.Long(-2146367999, 0)).toInt();
    this.ERROR_NETPARAM_BAD_PARAM = (new Kotlin.Long(-2146367996, 0)).toInt();
    this.ERROR_NET_MODULE_BAD_ID = (new Kotlin.Long(-2146367487, 0)).toInt();
    this.ERROR_NET_MODULE_ALREADY_LOADED = (new Kotlin.Long(-2146367486, 0)).toInt();
    this.ERROR_NET_MODULE_NOT_LOADED = (new Kotlin.Long(-2146367485, 0)).toInt();
    this.ERROR_AV_MODULE_BAD_ID = (new Kotlin.Long(-2146367231, 0)).toInt();
    this.ERROR_AV_MODULE_ALREADY_LOADED = (new Kotlin.Long(-2146367230, 0)).toInt();
    this.ERROR_AV_MODULE_NOT_LOADED = (new Kotlin.Long(-2146367229, 0)).toInt();
    this.ERROR_MODULE_BAD_ID = (new Kotlin.Long(-2146365183, 0)).toInt();
    this.ERROR_MODULE_ALREADY_LOADED = (new Kotlin.Long(-2146365182, 0)).toInt();
    this.ERROR_MODULE_NOT_LOADED = (new Kotlin.Long(-2146365181, 0)).toInt();
    this.ERROR_SCREENSHOT_CONT_MODE_NOT_INIT = (new Kotlin.Long(-2146364887, 0)).toInt();
    this.ERROR_UMD_NOT_READY = (new Kotlin.Long(-2145320959, 0)).toInt();
    this.ERROR_UMD_LBA_OUT_OF_BOUNDS = (new Kotlin.Long(-2145320958, 0)).toInt();
    this.ERROR_UMD_NO_DISC = (new Kotlin.Long(-2145320957, 0)).toInt();
    this.ERROR_MEMSTICK_DEVCTL_BAD_PARAMS = (new Kotlin.Long(-2145255295, 0)).toInt();
    this.ERROR_MEMSTICK_DEVCTL_TOO_MANY_CALLBACKS = (new Kotlin.Long(-2145255294, 0)).toInt();
    this.ERROR_AUDIO_CHANNEL_NOT_INIT = (new Kotlin.Long(-2144993279, 0)).toInt();
    this.ERROR_AUDIO_CHANNEL_BUSY = (new Kotlin.Long(-2144993278, 0)).toInt();
    this.ERROR_AUDIO_INVALID_CHANNEL = (new Kotlin.Long(-2144993277, 0)).toInt();
    this.ERROR_AUDIO_PRIV_REQUIRED = (new Kotlin.Long(-2144993276, 0)).toInt();
    this.ERROR_AUDIO_NO_CHANNELS_AVAILABLE = (new Kotlin.Long(-2144993275, 0)).toInt();
    this.ERROR_AUDIO_OUTPUT_SAMPLE_DATA_SIZE_NOT_ALIGNED = (new Kotlin.Long(-2144993274, 0)).toInt();
    this.ERROR_AUDIO_INVALID_FORMAT = (new Kotlin.Long(-2144993273, 0)).toInt();
    this.ERROR_AUDIO_CHANNEL_NOT_RESERVED = (new Kotlin.Long(-2144993272, 0)).toInt();
    this.ERROR_AUDIO_NOT_OUTPUT = (new Kotlin.Long(-2144993271, 0)).toInt();
    this.ERROR_POWER_VMEM_IN_USE = (new Kotlin.Long(-2144665088, 0)).toInt();
    this.ERROR_NET_RESOLVER_BAD_ID = (new Kotlin.Long(-2143222776, 0)).toInt();
    this.ERROR_NET_RESOLVER_ALREADY_STOPPED = (new Kotlin.Long(-2143222774, 0)).toInt();
    this.ERROR_NET_RESOLVER_INVALID_HOST = (new Kotlin.Long(-2143222764, 0)).toInt();
    this.ERROR_WLAN_BAD_PARAMS = (new Kotlin.Long(-2143220461, 0)).toInt();
    this.ERROR_HTTP_NOT_INIT = (new Kotlin.Long(-2143088639, 0)).toInt();
    this.ERROR_HTTP_ALREADY_INIT = (new Kotlin.Long(-2143088608, 0)).toInt();
    this.ERROR_HTTP_NO_MEMORY = (new Kotlin.Long(-2143088521, 0)).toInt();
    this.ERROR_HTTP_SYSTEM_COOKIE_NOT_LOADED = (new Kotlin.Long(-2143088520, 0)).toInt();
    this.ERROR_HTTP_INVALID_PARAMETER = (new Kotlin.Long(-2143088130, 0)).toInt();
    this.ERROR_SSL_NOT_INIT = (new Kotlin.Long(-2143072255, 0)).toInt();
    this.ERROR_SSL_ALREADY_INIT = (new Kotlin.Long(-2143072224, 0)).toInt();
    this.ERROR_SSL_OUT_OF_MEMORY = (new Kotlin.Long(-2143072222, 0)).toInt();
    this.ERROR_HTTPS_CERT_ERROR = (new Kotlin.Long(-2143072160, 0)).toInt();
    this.ERROR_HTTPS_HANDSHAKE_ERROR = (new Kotlin.Long(-2143072159, 0)).toInt();
    this.ERROR_HTTPS_IO_ERROR = (new Kotlin.Long(-2143072158, 0)).toInt();
    this.ERROR_HTTPS_INTERNAL_ERROR = (new Kotlin.Long(-2143072157, 0)).toInt();
    this.ERROR_HTTPS_PROXY_ERROR = (new Kotlin.Long(-2143072156, 0)).toInt();
    this.ERROR_SSL_INVALID_PARAMETER = (new Kotlin.Long(-2143071746, 0)).toInt();
    this.ERROR_WAVE_NOT_INIT = (new Kotlin.Long(-2143027199, 0)).toInt();
    this.ERROR_WAVE_FAILED_EXIT = (new Kotlin.Long(-2143027198, 0)).toInt();
    this.ERROR_WAVE_BAD_VOL = (new Kotlin.Long(-2143027190, 0)).toInt();
    this.ERROR_WAVE_INVALID_CHANNEL = (new Kotlin.Long(-2143027184, 0)).toInt();
    this.ERROR_WAVE_INVALID_SAMPLE_COUNT = (new Kotlin.Long(-2143027183, 0)).toInt();
    this.ERROR_FONT_INVALID_LIBID = (new Kotlin.Long(-2142896126, 0)).toInt();
    this.ERROR_FONT_INVALID_PARAMETER = (new Kotlin.Long(-2142896125, 0)).toInt();
    this.ERROR_FONT_TOO_MANY_OPEN_FONTS = (new Kotlin.Long(-2142896119, 0)).toInt();
    this.ERROR_MPEG_BAD_VERSION = (new Kotlin.Long(-2141126654, 0)).toInt();
    this.ERROR_MPEG_NO_MEMORY = (new Kotlin.Long(-2141126622, 0)).toInt();
    this.ERROR_MPEG_INVALID_ADDR = (new Kotlin.Long(-2141126397, 0)).toInt();
    this.ERROR_MPEG_INVALID_VALUE = (new Kotlin.Long(-2141126146, 0)).toInt();
    this.ERROR_PSMF_NOT_INITIALIZED = (new Kotlin.Long(-2141106175, 0)).toInt();
    this.ERROR_PSMF_BAD_VERSION = (new Kotlin.Long(-2141106174, 0)).toInt();
    this.ERROR_PSMF_NOT_FOUND = (new Kotlin.Long(-2141106139, 0)).toInt();
    this.ERROR_PSMF_INVALID_ID = (new Kotlin.Long(-2141105920, 0)).toInt();
    this.ERROR_PSMF_INVALID_VALUE = (new Kotlin.Long(-2141105666, 0)).toInt();
    this.ERROR_PSMF_INVALID_TIMESTAMP = (new Kotlin.Long(-2141104896, 0)).toInt();
    this.ERROR_PSMF_INVALID_PSMF = (new Kotlin.Long(-2141104895, 0)).toInt();
    this.ERROR_PSMFPLAYER_NOT_INITIALIZED = (new Kotlin.Long(-2141102079, 0)).toInt();
    this.ERROR_PSMFPLAYER_NO_MORE_DATA = (new Kotlin.Long(-2141102068, 0)).toInt();
    this.ERROR_MPEG_NO_DATA = (new Kotlin.Long(-2141093887, 0)).toInt();
    this.ERROR_AVC_VIDEO_FATAL = (new Kotlin.Long(-2141028350, 0)).toInt();
    this.ERROR_ATRAC_NO_ID = (new Kotlin.Long(-2140995581, 0)).toInt();
    this.ERROR_ATRAC_INVALID_CODEC = (new Kotlin.Long(-2140995580, 0)).toInt();
    this.ERROR_ATRAC_BAD_ID = (new Kotlin.Long(-2140995579, 0)).toInt();
    this.ERROR_ATRAC_ALL_DATA_LOADED = (new Kotlin.Long(-2140995575, 0)).toInt();
    this.ERROR_ATRAC_NO_DATA = (new Kotlin.Long(-2140995568, 0)).toInt();
    this.ERROR_ATRAC_SECOND_BUFFER_NEEDED = (new Kotlin.Long(-2140995566, 0)).toInt();
    this.ERROR_ATRAC_SECOND_BUFFER_NOT_NEEDED = (new Kotlin.Long(-2140995550, 0)).toInt();
    this.ERROR_ATRAC_BUFFER_IS_EMPTY = (new Kotlin.Long(-2140995549, 0)).toInt();
    this.ERROR_ATRAC_ALL_DATA_DECODED = (new Kotlin.Long(-2140995548, 0)).toInt();
    this.ERROR_CODEC_AUDIO_FATAL = (new Kotlin.Long(-2139160324, 0)).toInt();
    this.FATAL_UMD_UNKNOWN_MEDIUM = (new Kotlin.Long(-1071579132, 0)).toInt();
    this.FATAL_UMD_HARDWARE_FAILURE = (new Kotlin.Long(-1071579131, 0)).toInt();
    this.ERROR_AUDIO_INVALID_FREQUENCY = (new Kotlin.Long(-2144993270, 0)).toInt();
    this.ERROR_AUDIO_INVALID_VOLUME = (new Kotlin.Long(-2144993269, 0)).toInt();
    this.ERROR_AUDIO_CHANNEL_ALREADY_RESERVED = (new Kotlin.Long(-2144960510, 0)).toInt();
    this.PSP_AUDIO_ERROR_SRC_FORMAT_4 = (new Kotlin.Long(-2147483645, 0)).toInt();
    this.ATRAC_ERROR_API_FAIL = (new Kotlin.Long(-2140995582, 0)).toInt();
    this.ATRAC_ERROR_NO_ATRACID = (new Kotlin.Long(-2140995581, 0)).toInt();
    this.ATRAC_ERROR_INVALID_CODECTYPE = (new Kotlin.Long(-2140995580, 0)).toInt();
    this.ATRAC_ERROR_BAD_ATRACID = (new Kotlin.Long(-2140995579, 0)).toInt();
    this.ATRAC_ERROR_ALL_DATA_LOADED = (new Kotlin.Long(-2140995575, 0)).toInt();
    this.ATRAC_ERROR_NO_DATA = (new Kotlin.Long(-2140995568, 0)).toInt();
    this.ATRAC_ERROR_SECOND_BUFFER_NEEDED = (new Kotlin.Long(-2140995566, 0)).toInt();
    this.ATRAC_ERROR_INCORRECT_READ_SIZE = (new Kotlin.Long(-2140995565, 0)).toInt();
    this.ATRAC_ERROR_ADD_DATA_IS_TOO_BIG = (new Kotlin.Long(-2140995560, 0)).toInt();
    this.ATRAC_ERROR_UNSET_PARAM = (new Kotlin.Long(-2140995551, 0)).toInt();
    this.ATRAC_ERROR_SECOND_BUFFER_NOT_NEEDED = (new Kotlin.Long(-2140995550, 0)).toInt();
    this.ATRAC_ERROR_BUFFER_IS_EMPTY = (new Kotlin.Long(-2140995549, 0)).toInt();
    this.ATRAC_ERROR_ALL_DATA_DECODED = (new Kotlin.Long(-2140995548, 0)).toInt();
    this.PSP_SYSTEMPARAM_RETVAL = (new Kotlin.Long(-2146369277, 0)).toInt();
    this.ERROR_SAS_INVALID_VOICE = (new Kotlin.Long(-2143158256, 0)).toInt();
    this.ERROR_SAS_INVALID_ADSR_CURVE_MODE = (new Kotlin.Long(-2143158253, 0)).toInt();
    this.ERROR_SAS_INVALID_PARAMETER = (new Kotlin.Long(-2143158252, 0)).toInt();
    this.ERROR_SAS_INVALID_LOOP_POS = (new Kotlin.Long(-2143158251, 0)).toInt();
    this.ERROR_SAS_VOICE_PAUSED = (new Kotlin.Long(-2143158250, 0)).toInt();
    this.ERROR_SAS_BUSY = (new Kotlin.Long(-2143158224, 0)).toInt();
    this.ERROR_SAS_NOT_INIT = (new Kotlin.Long(-2143158016, 0)).toInt();
    this.ERROR_SAS_INVALID_GRAIN = (new Kotlin.Long(-2143158271, 0)).toInt();
    this.ERROR_SAS_INVALID_MAX_VOICES = (new Kotlin.Long(-2143158270, 0)).toInt();
    this.ERROR_SAS_INVALID_OUTPUT_MODE = (new Kotlin.Long(-2143158269, 0)).toInt();
    this.ERROR_SAS_INVALID_SAMPLE_RATE = (new Kotlin.Long(-2143158268, 0)).toInt();
    this.ERROR_SAS_INVALID_ADDRESS = (new Kotlin.Long(-2143158267, 0)).toInt();
    this.ERROR_SAS_INVALID_VOICE_INDEX = (new Kotlin.Long(-2143158256, 0)).toInt();
    this.ERROR_SAS_INVALID_NOISE_CLOCK = (new Kotlin.Long(-2143158255, 0)).toInt();
    this.ERROR_SAS_INVALID_PITCH_VAL = (new Kotlin.Long(-2143158254, 0)).toInt();
    this.ERROR_SAS_INVALID_ADPCM_SIZE = (new Kotlin.Long(-2143158252, 0)).toInt();
    this.ERROR_SAS_INVALID_LOOP_MODE = (new Kotlin.Long(-2143158251, 0)).toInt();
    this.ERROR_SAS_INVALID_VOLUME_VAL = (new Kotlin.Long(-2143158248, 0)).toInt();
    this.ERROR_SAS_INVALID_ADSR_VAL = (new Kotlin.Long(-2143158247, 0)).toInt();
    this.ERROR_SAS_INVALID_SIZE = (new Kotlin.Long(-2143158246, 0)).toInt();
    this.ERROR_SAS_INVALID_FX_TYPE = (new Kotlin.Long(-2143158240, 0)).toInt();
    this.ERROR_SAS_INVALID_FX_FEEDBACK = (new Kotlin.Long(-2143158239, 0)).toInt();
    this.ERROR_SAS_INVALID_FX_DELAY = (new Kotlin.Long(-2143158238, 0)).toInt();
    this.ERROR_SAS_INVALID_FX_VOLUME_VAL = (new Kotlin.Long(-2143158237, 0)).toInt();
    this.ERROR_SAS_ALREADY_INIT = (new Kotlin.Long(-2143158015, 0)).toInt();
    this.PSP_POWER_ERROR_TAKEN_SLOT = (new Kotlin.Long(-2147483616, 0)).toInt();
    this.PSP_POWER_ERROR_SLOTS_FULL = (new Kotlin.Long(-2147483614, 0)).toInt();
    this.PSP_POWER_ERROR_PRIVATE_SLOT = (new Kotlin.Long(-2147483613, 0)).toInt();
    this.PSP_POWER_ERROR_EMPTY_SLOT = (new Kotlin.Long(-2147483611, 0)).toInt();
    this.PSP_POWER_ERROR_INVALID_CB = (new Kotlin.Long(-2147483392, 0)).toInt();
    this.PSP_POWER_ERROR_INVALID_SLOT = (new Kotlin.Long(-2147483390, 0)).toInt();
  }
  SceKernelErrors.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'SceKernelErrors',
    interfaces: []
  };
  var SceKernelErrors_instance = null;
  function SceKernelErrors_getInstance() {
    if (SceKernelErrors_instance === null) {
      new SceKernelErrors();
    }
    return SceKernelErrors_instance;
  }
  function CallbackManager(emulator) {
    Manager.call(this, 'Callback', emulator, 1);
  }
  CallbackManager.prototype.create_6bdwcc$ = function (name, func, arg) {
    return new PspCallback(this, this.allocId_8be2vx$(), name, func, arg);
  };
  CallbackManager.prototype.reset = function () {
    Manager.prototype.reset.call(this);
  };
  CallbackManager.prototype.queueFunction1_vux9f0$ = function (funcPC, arg1) {
  };
  CallbackManager.prototype.queueCallback_7cp2f1$ = function (callback, arg2) {
  };
  CallbackManager.prototype.cancelCallback_gk9v6z$ = function (callback) {
  };
  CallbackManager.prototype.executeCallbacks = function () {
  };
  CallbackManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CallbackManager',
    interfaces: [Manager]
  };
  function PspCallback(callbackManager, id, name, func, arg) {
    Resource.call(this, callbackManager, id, name);
    this.callbackManager = callbackManager;
    this.func = func;
    this.arg = arg;
  }
  PspCallback.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspCallback',
    interfaces: [Resource]
  };
  function ConfigManager() {
    this.root_w9zevm$_0 = this.root_w9zevm$_0;
    this.dropboxBearer_ep1zb$_0 = lazy(ConfigManager$dropboxBearer$lambda(this));
    this.storage_2rf30p$_0 = lazy(ConfigManager$storage$lambda(this));
  }
  Object.defineProperty(ConfigManager.prototype, 'root_0', {
    get: function () {
      if (this.root_w9zevm$_0 == null)
        return throwUPAE('root');
      return this.root_w9zevm$_0;
    },
    set: function (root) {
      this.root_w9zevm$_0 = root;
    }
  });
  Object.defineProperty(ConfigManager.prototype, 'dropboxBearer', {
    get: function () {
      var $receiver = this.dropboxBearer_ep1zb$_0;
      new PropertyMetadata('dropboxBearer');
      return $receiver.value;
    }
  });
  Object.defineProperty(ConfigManager.prototype, 'storage', {
    get: function () {
      var $receiver = this.storage_2rf30p$_0;
      new PropertyMetadata('storage');
      return $receiver.value;
    }
  });
  ConfigManager.prototype.init = function (continuation_0, suspended) {
    var instance = new Coroutine$init_1(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$init_1($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = void 0;
  }
  Coroutine$init_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$init_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$init_1.prototype.constructor = Coroutine$init_1;
  Coroutine$init_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$$receiver = vfs.ApplicationDataVfs.get_61zpoe$('config');
            this.state_0 = 2;
            this.result_0 = mkdirsSafe(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.$this.root_0 = this.local$$receiver.jail();
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ConfigManager$StringConfig(file, default_0) {
    this.file = file;
    this.default = default_0;
    this.onChanged = new Signal();
  }
  ConfigManager$StringConfig.prototype.get = function (continuation_0, suspended) {
    var instance = new Coroutine$get(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$get($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$closure$continuation = void 0;
  }
  Coroutine$get.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$get.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$get.prototype.constructor = Coroutine$get;
  Coroutine$get.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            this.local$$receiver = this.$this.file;
            this.local$closure$continuation = this;
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.exists(this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = (tmp$ = !this.local$closure$continuation.result_0 ? null : this.local$$receiver) != null ? tmp$.readString_qa9gbo$(void 0, this) : null;
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            tmp$_0 = this.result_0;
            return tmp$_0 != null ? tmp$_0 : this.$this.default;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ConfigManager$StringConfig.prototype.set_61zpoe$ = function (value_0, continuation_0, suspended) {
    var instance = new Coroutine$set_61zpoe$(this, value_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$set_61zpoe$($this, value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$value = value_0;
  }
  Coroutine$set_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$set_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$set_61zpoe$.prototype.constructor = Coroutine$set_61zpoe$;
  Coroutine$set_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.file.writeString_i52441$(this.local$value, [], this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.$this.onChanged.invoke_11rb$(this.local$value);
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ConfigManager$StringConfig.prototype.subscribe_ep0k5p$ = function (handler_0, continuation_0, suspended) {
    var instance = new Coroutine$subscribe_ep0k5p$(this, handler_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$subscribe_ep0k5p$($this, handler_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$handler = handler_0;
  }
  Coroutine$subscribe_ep0k5p$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$subscribe_ep0k5p$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$subscribe_ep0k5p$.prototype.constructor = Coroutine$subscribe_ep0k5p$;
  Coroutine$subscribe_ep0k5p$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.onChanged.invoke_qlkmfe$(this.local$handler);
            this.state_0 = 2;
            this.result_0 = this.$this.get(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$handler(this.result_0);
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ConfigManager$StringConfig.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StringConfig',
    interfaces: []
  };
  function ConfigManager$dropboxBearer$lambda(this$ConfigManager) {
    return function () {
      return new ConfigManager$StringConfig(this$ConfigManager.root_0.get_61zpoe$('dropbox.bearer'), '');
    };
  }
  function ConfigManager$storage$lambda(this$ConfigManager) {
    return function () {
      return new ConfigManager$StringConfig(this$ConfigManager.root_0.get_61zpoe$('storage'), 'local');
    };
  }
  ConfigManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ConfigManager',
    interfaces: [AsyncDependency]
  };
  function DeviceManager(emulator) {
    this.emulator = emulator;
    this.ms_nswk16$_0 = this.ms_nswk16$_0;
    this.flash = MemoryVfsMix();
    this.dummy = MemoryVfs();
    this.root = MountableVfsSync(DeviceManager$root$lambda);
    var tmp$;
    this.mountable = Kotlin.isType(tmp$ = this.root.vfs, MountableSync) ? tmp$ : throwCCE();
    this.lastStorageType_0 = '';
  }
  Object.defineProperty(DeviceManager.prototype, 'ms', {
    get: function () {
      if (this.ms_nswk16$_0 == null)
        return throwUPAE('ms');
      return this.ms_nswk16$_0;
    },
    set: function (ms) {
      this.ms_nswk16$_0 = ms;
    }
  });
  DeviceManager.prototype.init = function (continuation_0, suspended) {
    var instance = new Coroutine$init_2(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$init_2($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$init_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$init_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$init_2.prototype.constructor = Coroutine$init_2;
  Coroutine$init_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.reset(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DeviceManager.prototype.reset = function (continuation) {
    this.mountable.unmountAll();
  };
  DeviceManager.prototype.mount_hem4eq$ = function (name, vfs) {
    this.mountable.unmount_61zpoe$(name);
    this.mountable.mount_hem4eq$(name, vfs);
  };
  function DeviceManager$updatedStorage$lambda(this$DeviceManager_0, closure$base_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$DeviceManager$updatedStorage$lambda(this$DeviceManager_0, closure$base_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DeviceManager$updatedStorage$lambda(this$DeviceManager_0, closure$base_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$DeviceManager = this$DeviceManager_0;
    this.local$closure$base = closure$base_0;
  }
  Coroutine$DeviceManager$updatedStorage$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DeviceManager$updatedStorage$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DeviceManager$updatedStorage$lambda.prototype.constructor = Coroutine$DeviceManager$updatedStorage$lambda;
  Coroutine$DeviceManager$updatedStorage$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = sleep_0(this.local$this$DeviceManager.emulator.coroutineContext, 10, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var $receiver = this.local$closure$base;
            this.state_0 = 3;
            this.result_0 = mkdirsSafe($receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.state_0 = 4;
            this.result_0 = mkdirsSafe(this.local$this$DeviceManager.ms.get_61zpoe$('PSP'), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            this.state_0 = 5;
            this.result_0 = mkdirsSafe(this.local$this$DeviceManager.ms.get_61zpoe$('PSP/GAME'), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 5:
            this.state_0 = 6;
            this.result_0 = mkdirsSafe(this.local$this$DeviceManager.ms.get_61zpoe$('PSP/SAVES'), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 6:
            return println('Done'), Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DeviceManager.prototype.updatedStorage_0 = function (continuation_0, suspended) {
    var instance = new Coroutine$updatedStorage_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$updatedStorage_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$storage = void 0;
  }
  Coroutine$updatedStorage_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$updatedStorage_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$updatedStorage_0.prototype.constructor = Coroutine$updatedStorage_0;
  Coroutine$updatedStorage_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.emulator.configManager.storage.get(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$storage = this.result_0;
            println('updatedStorage: ' + this.local$storage);
            if (equals(this.local$storage, this.$this.lastStorageType_0)) {
              println('Already using that storage!');
              return;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            this.$this.lastStorageType_0 = this.local$storage;
            if (equals(this.local$storage, 'local')) {
              this.local$tmp$ = vfs.ApplicationDataVfs.get_61zpoe$('ms0');
              this.state_0 = 6;
              continue;
            }
             else {
              if (equals(this.local$storage, 'dropbox')) {
                this.state_0 = 4;
                this.result_0 = this.$this.emulator.configManager.dropboxBearer.get(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                break;
              }
               else {
                this.local$tmp$ = vfs.ApplicationDataVfs.get_61zpoe$('ms0');
                this.state_0 = 5;
                continue;
              }
            }

          case 4:
            this.local$tmp$ = (new DropboxVfs(new Dropbox(this.result_0))).root;
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            continue;
          case 6:
            var base = this.local$tmp$;
            this.$this.ms = base.jail();
            this.$this.mount_hem4eq$('fatms0:', this.$this.ms);
            this.$this.mount_hem4eq$('ms0:', this.$this.ms);
            this.$this.mount_hem4eq$('mscmhc0:', this.$this.ms);
            this.$this.mount_hem4eq$('host0:', this.$this.dummy);
            this.$this.mount_hem4eq$('flash0:', this.$this.flash);
            this.$this.mount_hem4eq$('emulator:', this.$this.dummy);
            this.$this.mount_hem4eq$('kemulator:', this.$this.dummy);
            this.$this.mount_hem4eq$('disc0:', this.$this.dummy);
            this.$this.mount_hem4eq$('umd0:', this.$this.dummy);
            println('Making directories...');
            go_0(this.$this.emulator.coroutineContext, DeviceManager$updatedStorage$lambda(this.$this, base));
            println('Continuing...');
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DeviceManager$setStorage$lambda(this$DeviceManager_0) {
    return function ($receiver, continuation_0, suspended) {
      var instance = new Coroutine$DeviceManager$setStorage$lambda(this$DeviceManager_0, $receiver, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DeviceManager$setStorage$lambda(this$DeviceManager_0, $receiver, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$DeviceManager = this$DeviceManager_0;
  }
  Coroutine$DeviceManager$setStorage$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DeviceManager$setStorage$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DeviceManager$setStorage$lambda.prototype.constructor = Coroutine$DeviceManager$setStorage$lambda;
  Coroutine$DeviceManager$setStorage$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$DeviceManager.updatedStorage_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DeviceManager.prototype.setStorage_61zpoe$ = function (storage) {
    println('Using storage: ' + storage);
    go_1(this.emulator.coroutineContext, DeviceManager$setStorage$lambda(this));
  };
  function DeviceManager$root$lambda($receiver) {
    return Unit;
  }
  DeviceManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DeviceManager',
    interfaces: []
  };
  function FileManager(emulator) {
    FileManager$Companion_getInstance();
    this.emulator = emulator;
    this.currentDirectory = FileManager$Companion_getInstance().INIT_CURRENT_DIRECTORY;
    this.executableFile = FileManager$Companion_getInstance().INIT_EXECUTABLE_FILE;
    this.fileDescriptors = new ResourceList('FileDescriptor', void 0, FileManager$fileDescriptors$lambda);
    this.directoryDescriptors = new ResourceList('DirectoryDescriptor', void 0, FileManager$directoryDescriptors$lambda);
  }
  function FileManager$Companion() {
    FileManager$Companion_instance = this;
    this.INIT_CURRENT_DIRECTORY = 'umd0:';
    this.INIT_EXECUTABLE_FILE = 'umd0:/PSP_GAME/USRDIR/EBOOT.BIN';
  }
  FileManager$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var FileManager$Companion_instance = null;
  function FileManager$Companion_getInstance() {
    if (FileManager$Companion_instance === null) {
      new FileManager$Companion();
    }
    return FileManager$Companion_instance;
  }
  Object.defineProperty(FileManager.prototype, 'deviceManager', {
    get: function () {
      return this.emulator.deviceManager;
    }
  });
  FileManager.prototype.reset = function () {
    this.currentDirectory = FileManager$Companion_getInstance().INIT_CURRENT_DIRECTORY;
    this.executableFile = FileManager$Companion_getInstance().INIT_EXECUTABLE_FILE;
    this.fileDescriptors.reset();
    this.directoryDescriptors.reset();
  };
  FileManager.prototype.resolvePath_61zpoe$ = function (path) {
    if (contains(path, 58)) {
      return path;
    }
     else {
      if (startsWith_0(path, 47)) {
        return first(split(this.currentDirectory, Kotlin.charArrayOf(58))) + ':' + path;
      }
       else {
        return vfs.VfsUtil.combine_puj7f4$(this.currentDirectory, path);
      }
    }
  };
  FileManager.prototype.resolve_61zpoe$ = function (path) {
    var resolvedPath = this.resolvePath_61zpoe$(path);
    return this.deviceManager.root.get_61zpoe$(resolvedPath);
  };
  function FileManager$fileDescriptors$lambda(it) {
    return new FileDescriptor(it);
  }
  function FileManager$directoryDescriptors$lambda(it) {
    return new DirectoryDescriptor(it);
  }
  FileManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FileManager',
    interfaces: []
  };
  function FileDescriptor(id) {
    this.id_ocopab$_0 = id;
    this.fileName_lmi5pz$_0 = this.fileName_lmi5pz$_0;
    this.file_xftuwy$_0 = this.file_xftuwy$_0;
    this.stream_clsh1a$_0 = this.stream_clsh1a$_0;
    this.doLater = null;
    this.asyncPromise = null;
    this.asyncResult = Kotlin.Long.ZERO;
    this.asyncDone = false;
  }
  Object.defineProperty(FileDescriptor.prototype, 'id', {
    get: function () {
      return this.id_ocopab$_0;
    }
  });
  Object.defineProperty(FileDescriptor.prototype, 'fileName', {
    get: function () {
      if (this.fileName_lmi5pz$_0 == null)
        return throwUPAE('fileName');
      return this.fileName_lmi5pz$_0;
    },
    set: function (fileName) {
      this.fileName_lmi5pz$_0 = fileName;
    }
  });
  Object.defineProperty(FileDescriptor.prototype, 'file', {
    get: function () {
      if (this.file_xftuwy$_0 == null)
        return throwUPAE('file');
      return this.file_xftuwy$_0;
    },
    set: function (file) {
      this.file_xftuwy$_0 = file;
    }
  });
  Object.defineProperty(FileDescriptor.prototype, 'stream', {
    get: function () {
      if (this.stream_clsh1a$_0 == null)
        return throwUPAE('stream');
      return this.stream_clsh1a$_0;
    },
    set: function (stream) {
      this.stream_clsh1a$_0 = stream;
    }
  });
  FileDescriptor.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FileDescriptor',
    interfaces: [ResourceItem]
  };
  var emptyList = Kotlin.kotlin.collections.emptyList_287e2$;
  function DirectoryDescriptor(id) {
    this.id_658s7a$_0 = id;
    this.directory_g81uti$_0 = this.directory_g81uti$_0;
    this.pos = 0;
    this.files = emptyList();
  }
  Object.defineProperty(DirectoryDescriptor.prototype, 'id', {
    get: function () {
      return this.id_658s7a$_0;
    }
  });
  Object.defineProperty(DirectoryDescriptor.prototype, 'directory', {
    get: function () {
      if (this.directory_g81uti$_0 == null)
        return throwUPAE('directory');
      return this.directory_g81uti$_0;
    },
    set: function (directory) {
      this.directory_g81uti$_0 = directory;
    }
  });
  Object.defineProperty(DirectoryDescriptor.prototype, 'remaining', {
    get: function () {
      return this.files.size - this.pos | 0;
    }
  });
  DirectoryDescriptor.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DirectoryDescriptor',
    interfaces: [ResourceItem]
  };
  function SceIoStat(mode, attributes, size, timeCreation, timeLastAccess, timeLastModification, device) {
    SceIoStat$Companion_getInstance();
    if (mode === void 0)
      mode = 0;
    if (attributes === void 0)
      attributes = 0;
    if (size === void 0)
      size = Kotlin.Long.ZERO;
    if (timeCreation === void 0)
      timeCreation = ScePspDateTime$Companion_getInstance().invoke_s8cxhz$(Kotlin.Long.ZERO);
    if (timeLastAccess === void 0)
      timeLastAccess = ScePspDateTime$Companion_getInstance().invoke_s8cxhz$(Kotlin.Long.ZERO);
    if (timeLastModification === void 0)
      timeLastModification = ScePspDateTime$Companion_getInstance().invoke_s8cxhz$(Kotlin.Long.ZERO);
    if (device === void 0)
      device = new Int32Array(6);
    this.mode = mode;
    this.attributes = attributes;
    this.size = size;
    this.timeCreation = timeCreation;
    this.timeLastAccess = timeLastAccess;
    this.timeLastModification = timeLastModification;
    this.device = device;
  }
  function SceIoStat$Companion() {
    SceIoStat$Companion_instance = this;
    Struct.call(this, SceIoStat$SceIoStat$Companion_init$lambda, [AS(getPropertyCallableRef('mode', 1, function ($receiver) {
      return $receiver.mode;
    }, function ($receiver, value) {
      $receiver.mode = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('attributes', 1, function ($receiver) {
      return $receiver.attributes;
    }, function ($receiver, value) {
      $receiver.attributes = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('size', 1, function ($receiver) {
      return $receiver.size;
    }, function ($receiver, value) {
      $receiver.size = value;
    }), INT64_getInstance()), AS(getPropertyCallableRef('timeCreation', 1, function ($receiver) {
      return $receiver.timeCreation;
    }, function ($receiver, value) {
      $receiver.timeCreation = value;
    }), ScePspDateTime$Companion_getInstance()), AS(getPropertyCallableRef('timeLastAccess', 1, function ($receiver) {
      return $receiver.timeLastAccess;
    }, function ($receiver, value) {
      $receiver.timeLastAccess = value;
    }), ScePspDateTime$Companion_getInstance()), AS(getPropertyCallableRef('timeLastModification', 1, function ($receiver) {
      return $receiver.timeLastModification;
    }, function ($receiver, value) {
      $receiver.timeLastModification = value;
    }), ScePspDateTime$Companion_getInstance()), AS(getPropertyCallableRef('device', 1, function ($receiver) {
      return $receiver.device;
    }, function ($receiver, value) {
      $receiver.device = value;
    }), new INTLIKEARRAY(INT32_getInstance(), 6))]);
  }
  function SceIoStat$SceIoStat$Companion_init$lambda() {
    return new SceIoStat();
  }
  SceIoStat$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var SceIoStat$Companion_instance = null;
  function SceIoStat$Companion_getInstance() {
    if (SceIoStat$Companion_instance === null) {
      new SceIoStat$Companion();
    }
    return SceIoStat$Companion_instance;
  }
  SceIoStat.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SceIoStat',
    interfaces: []
  };
  SceIoStat.prototype.component1 = function () {
    return this.mode;
  };
  SceIoStat.prototype.component2 = function () {
    return this.attributes;
  };
  SceIoStat.prototype.component3 = function () {
    return this.size;
  };
  SceIoStat.prototype.component4 = function () {
    return this.timeCreation;
  };
  SceIoStat.prototype.component5 = function () {
    return this.timeLastAccess;
  };
  SceIoStat.prototype.component6 = function () {
    return this.timeLastModification;
  };
  SceIoStat.prototype.component7 = function () {
    return this.device;
  };
  SceIoStat.prototype.copy_jk2ci$ = function (mode, attributes, size, timeCreation, timeLastAccess, timeLastModification, device) {
    return new SceIoStat(mode === void 0 ? this.mode : mode, attributes === void 0 ? this.attributes : attributes, size === void 0 ? this.size : size, timeCreation === void 0 ? this.timeCreation : timeCreation, timeLastAccess === void 0 ? this.timeLastAccess : timeLastAccess, timeLastModification === void 0 ? this.timeLastModification : timeLastModification, device === void 0 ? this.device : device);
  };
  SceIoStat.prototype.toString = function () {
    return 'SceIoStat(mode=' + Kotlin.toString(this.mode) + (', attributes=' + Kotlin.toString(this.attributes)) + (', size=' + Kotlin.toString(this.size)) + (', timeCreation=' + Kotlin.toString(this.timeCreation)) + (', timeLastAccess=' + Kotlin.toString(this.timeLastAccess)) + (', timeLastModification=' + Kotlin.toString(this.timeLastModification)) + (', device=' + Kotlin.toString(this.device)) + ')';
  };
  SceIoStat.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.mode) | 0;
    result = result * 31 + Kotlin.hashCode(this.attributes) | 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.timeCreation) | 0;
    result = result * 31 + Kotlin.hashCode(this.timeLastAccess) | 0;
    result = result * 31 + Kotlin.hashCode(this.timeLastModification) | 0;
    result = result * 31 + Kotlin.hashCode(this.device) | 0;
    return result;
  };
  SceIoStat.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.mode, other.mode) && Kotlin.equals(this.attributes, other.attributes) && Kotlin.equals(this.size, other.size) && Kotlin.equals(this.timeCreation, other.timeCreation) && Kotlin.equals(this.timeLastAccess, other.timeLastAccess) && Kotlin.equals(this.timeLastModification, other.timeLastModification) && Kotlin.equals(this.device, other.device)))));
  };
  function HleIoDirent(stat, name, privateData, dummy) {
    HleIoDirent$Companion_getInstance();
    if (stat === void 0)
      stat = new SceIoStat();
    if (name === void 0)
      name = '';
    if (privateData === void 0)
      privateData = 0;
    if (dummy === void 0)
      dummy = 0;
    this.stat = stat;
    this.name = name;
    this.privateData = privateData;
    this.dummy = dummy;
  }
  function HleIoDirent$Companion() {
    HleIoDirent$Companion_instance = this;
    Struct.call(this, HleIoDirent$HleIoDirent$Companion_init$lambda, [AS(getPropertyCallableRef('stat', 1, function ($receiver) {
      return $receiver.stat;
    }, function ($receiver, value) {
      $receiver.stat = value;
    }), SceIoStat$Companion_getInstance()), AS(getPropertyCallableRef('name', 1, function ($receiver) {
      return $receiver.name;
    }, function ($receiver, value) {
      $receiver.name = value;
    }), new STRINGZ(lang.UTF8, 256)), AS(getPropertyCallableRef('privateData', 1, function ($receiver) {
      return $receiver.privateData;
    }, function ($receiver, value) {
      $receiver.privateData = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('dummy', 1, function ($receiver) {
      return $receiver.dummy;
    }, function ($receiver, value) {
      $receiver.dummy = value;
    }), INT32_getInstance())]);
  }
  function HleIoDirent$HleIoDirent$Companion_init$lambda() {
    return new HleIoDirent();
  }
  HleIoDirent$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var HleIoDirent$Companion_instance = null;
  function HleIoDirent$Companion_getInstance() {
    if (HleIoDirent$Companion_instance === null) {
      new HleIoDirent$Companion();
    }
    return HleIoDirent$Companion_instance;
  }
  HleIoDirent.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HleIoDirent',
    interfaces: []
  };
  HleIoDirent.prototype.component1 = function () {
    return this.stat;
  };
  HleIoDirent.prototype.component2 = function () {
    return this.name;
  };
  HleIoDirent.prototype.component3 = function () {
    return this.privateData;
  };
  HleIoDirent.prototype.component4 = function () {
    return this.dummy;
  };
  HleIoDirent.prototype.copy_z55ije$ = function (stat, name, privateData, dummy) {
    return new HleIoDirent(stat === void 0 ? this.stat : stat, name === void 0 ? this.name : name, privateData === void 0 ? this.privateData : privateData, dummy === void 0 ? this.dummy : dummy);
  };
  HleIoDirent.prototype.toString = function () {
    return 'HleIoDirent(stat=' + Kotlin.toString(this.stat) + (', name=' + Kotlin.toString(this.name)) + (', privateData=' + Kotlin.toString(this.privateData)) + (', dummy=' + Kotlin.toString(this.dummy)) + ')';
  };
  HleIoDirent.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.stat) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.privateData) | 0;
    result = result * 31 + Kotlin.hashCode(this.dummy) | 0;
    return result;
  };
  HleIoDirent.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.stat, other.stat) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.privateData, other.privateData) && Kotlin.equals(this.dummy, other.dummy)))));
  };
  function IOFileModes() {
    IOFileModes_instance = this;
    this.DIR = 4096;
    this.FILE = 8192;
    this.FormatMask = 56;
    this.SymbolicLink = 8;
    this.Directory = 16;
    this.File = 32;
    this.CanRead = 4;
    this.CanWrite = 2;
    this.CanExecute = 1;
  }
  IOFileModes.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'IOFileModes',
    interfaces: []
  };
  var IOFileModes_instance = null;
  function IOFileModes_getInstance() {
    if (IOFileModes_instance === null) {
      new IOFileModes();
    }
    return IOFileModes_instance;
  }
  function SeekType() {
    SeekType_instance = this;
    this.Set = 0;
    this.Cur = 1;
    this.End = 2;
    this.Tell = 65536;
  }
  SeekType.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'SeekType',
    interfaces: []
  };
  var SeekType_instance = null;
  function SeekType_getInstance() {
    if (SeekType_instance === null) {
      new SeekType();
    }
    return SeekType_instance;
  }
  function FileOpenFlags() {
    FileOpenFlags_instance = this;
    this.Read = 1;
    this.Write = 2;
    this.ReadWrite = this.Read | this.Write;
    this.NoBlock = 4;
    this._InternalDirOpen = 8;
    this.Append = 256;
    this.Create = 512;
    this.Truncate = 1024;
    this.Excl = 2048;
    this.Unknown1 = 16384;
    this.NoWait = 32768;
    this.Unknown2 = 983040;
    this.Unknown3 = 33554432;
  }
  FileOpenFlags.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'FileOpenFlags',
    interfaces: []
  };
  var FileOpenFlags_instance = null;
  function FileOpenFlags_getInstance() {
    if (FileOpenFlags_instance === null) {
      new FileOpenFlags();
    }
    return FileOpenFlags_instance;
  }
  function InterruptManager(emulator) {
    this.emulator = emulator;
    this.logger = Logger.Companion.invoke_61zpoe$('InterruptManager');
    this.interrupts_8jczsj$_0 = lazy(InterruptManager$interrupts$lambda);
  }
  Object.defineProperty(InterruptManager.prototype, 'state', {
    get: function () {
      return this.emulator.globalCpuState;
    }
  });
  InterruptManager.prototype.disableAllInterrupts = function () {
    var res = this.state.interruptFlags;
    this.state.interruptFlags = 0;
    return res;
  };
  InterruptManager.prototype.restoreInterrupts_za3lpa$ = function (value) {
    this.state.interruptFlags = this.state.interruptFlags | value;
  };
  function InterruptManager$InterruptHandler(id, enabled, address, argument, cpuState) {
    if (enabled === void 0)
      enabled = false;
    if (address === void 0)
      address = 0;
    if (argument === void 0)
      argument = 0;
    if (cpuState === void 0)
      cpuState = null;
    this.id = id;
    this.enabled = enabled;
    this.address = address;
    this.argument = argument;
    this.cpuState = cpuState;
  }
  InterruptManager$InterruptHandler.prototype.reset = function () {
    this.enabled = false;
    this.address = 0;
    this.argument = 0;
    this.cpuState = null;
  };
  InterruptManager$InterruptHandler.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InterruptHandler',
    interfaces: []
  };
  InterruptManager$InterruptHandler.prototype.component1 = function () {
    return this.id;
  };
  InterruptManager$InterruptHandler.prototype.component2 = function () {
    return this.enabled;
  };
  InterruptManager$InterruptHandler.prototype.component3 = function () {
    return this.address;
  };
  InterruptManager$InterruptHandler.prototype.component4 = function () {
    return this.argument;
  };
  InterruptManager$InterruptHandler.prototype.component5 = function () {
    return this.cpuState;
  };
  InterruptManager$InterruptHandler.prototype.copy_xlnf5q$ = function (id, enabled, address, argument, cpuState) {
    return new InterruptManager$InterruptHandler(id === void 0 ? this.id : id, enabled === void 0 ? this.enabled : enabled, address === void 0 ? this.address : address, argument === void 0 ? this.argument : argument, cpuState === void 0 ? this.cpuState : cpuState);
  };
  InterruptManager$InterruptHandler.prototype.toString = function () {
    return 'InterruptHandler(id=' + Kotlin.toString(this.id) + (', enabled=' + Kotlin.toString(this.enabled)) + (', address=' + Kotlin.toString(this.address)) + (', argument=' + Kotlin.toString(this.argument)) + (', cpuState=' + Kotlin.toString(this.cpuState)) + ')';
  };
  InterruptManager$InterruptHandler.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    result = result * 31 + Kotlin.hashCode(this.enabled) | 0;
    result = result * 31 + Kotlin.hashCode(this.address) | 0;
    result = result * 31 + Kotlin.hashCode(this.argument) | 0;
    result = result * 31 + Kotlin.hashCode(this.cpuState) | 0;
    return result;
  };
  InterruptManager$InterruptHandler.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.id, other.id) && Kotlin.equals(this.enabled, other.enabled) && Kotlin.equals(this.address, other.address) && Kotlin.equals(this.argument, other.argument) && Kotlin.equals(this.cpuState, other.cpuState)))));
  };
  function InterruptManager$InterruptKind(index) {
    this.index = index;
    this.handlers_y8on25$_0 = lazy(InterruptManager$InterruptKind$handlers$lambda);
  }
  Object.defineProperty(InterruptManager$InterruptKind.prototype, 'handlers', {
    get: function () {
      var $receiver = this.handlers_y8on25$_0;
      new PropertyMetadata('handlers');
      return $receiver.value;
    }
  });
  InterruptManager$InterruptKind.prototype.reset = function () {
    var tmp$;
    tmp$ = this.handlers.iterator();
    while (tmp$.hasNext()) {
      var h = tmp$.next();
      h.reset();
    }
  };
  function InterruptManager$InterruptKind$handlers$lambda() {
    var $receiver = until(0, 32);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(new InterruptManager$InterruptHandler(item));
    }
    return destination;
  }
  InterruptManager$InterruptKind.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InterruptKind',
    interfaces: []
  };
  Object.defineProperty(InterruptManager.prototype, 'interrupts', {
    get: function () {
      var $receiver = this.interrupts_8jczsj$_0;
      new PropertyMetadata('interrupts');
      return $receiver.value;
    }
  });
  InterruptManager.prototype.get_vux9f0$ = function (interrupt, handlerIndex) {
    return this.interrupts.get_za3lpa$(interrupt).handlers.get_za3lpa$(handlerIndex);
  };
  InterruptManager.prototype.dispatchVsync = function () {
    this.dispatchInterrupt_za3lpa$(PspInterrupts_getInstance().PSP_VBLANK_INT);
  };
  InterruptManager.prototype.isEnabled_za3lpa$ = function (id) {
    return (this.state.interruptFlags & 1 << id) !== 0;
  };
  InterruptManager.prototype.dispatchInterrupt_za3lpa$ = function (id) {
    var tmp$;
    if (this.isEnabled_za3lpa$(id)) {
      var int = this.interrupts.get_za3lpa$(id);
      var $receiver = int.handlers;
      var destination = ArrayList_init();
      var tmp$_0;
      tmp$_0 = $receiver.iterator();
      while (tmp$_0.hasNext()) {
        var element = tmp$_0.next();
        if (element.enabled)
          destination.add_11rb$(element);
      }
      tmp$ = destination.iterator();
      while (tmp$.hasNext()) {
        var handler = tmp$.next();
        var $this = this.logger;
        var level = LogLevel.TRACE;
        if ($this.isEnabled_ci8eq1$(level)) {
          $this.actualLog_t189ph$(level, 'Interrupt ' + id + ': ' + handler);
        }
        this.emulator.threadManager.executeInterrupt_vux9f0$(handler.address, handler.argument);
      }
    }
  };
  InterruptManager.prototype.reset = function () {
    var tmp$;
    tmp$ = this.interrupts.iterator();
    while (tmp$.hasNext()) {
      var i = tmp$.next();
      i.reset();
    }
  };
  function InterruptManager$interrupts$lambda() {
    var $receiver = until(0, 68);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(new InterruptManager$InterruptKind(item));
    }
    return destination;
  }
  InterruptManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InterruptManager',
    interfaces: []
  };
  function PspInterrupts() {
    PspInterrupts_instance = this;
    this.PSP_GPIO_INT = 4;
    this.PSP_ATA_INT = 5;
    this.PSP_UMD_INT = 6;
    this.PSP_MSCM0_INT = 7;
    this.PSP_WLAN_INT = 8;
    this.PSP_AUDIO_INT = 10;
    this.PSP_I2C_INT = 12;
    this.PSP_SIRCS_INT = 14;
    this.PSP_SYSTIMER0_INT = 15;
    this.PSP_SYSTIMER1_INT = 16;
    this.PSP_SYSTIMER2_INT = 17;
    this.PSP_SYSTIMER3_INT = 18;
    this.PSP_THREAD0_INT = 19;
    this.PSP_NAND_INT = 20;
    this.PSP_DMACPLUS_INT = 21;
    this.PSP_DMA0_INT = 22;
    this.PSP_DMA1_INT = 23;
    this.PSP_MEMLMD_INT = 24;
    this.PSP_GE_INT = 25;
    this.PSP_VBLANK_INT = 30;
    this.PSP_MECODEC_INT = 31;
    this.PSP_HPREMOTE_INT = 36;
    this.PSP_MSCM1_INT = 60;
    this.PSP_MSCM2_INT = 61;
    this.PSP_THREAD1_INT = 65;
    this.PSP_INTERRUPT_INT = 66;
    this.PSP_NUMBER_INTERRUPTS = 67;
  }
  PspInterrupts.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'PspInterrupts',
    interfaces: []
  };
  var PspInterrupts_instance = null;
  function PspInterrupts_getInstance() {
    if (PspInterrupts_instance === null) {
      new PspInterrupts();
    }
    return PspInterrupts_instance;
  }
  function ResourceNotFoundException(msg) {
    Exception_init_0(msg, this);
    this.name = 'ResourceNotFoundException';
  }
  ResourceNotFoundException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ResourceNotFoundException',
    interfaces: [Exception]
  };
  function Manager(name, emulator, initialId) {
    if (initialId === void 0)
      initialId = 0;
    this.name = name;
    this.emulator_k3sv7h$_0 = emulator;
    this.initialId = initialId;
    this.lastId_8be2vx$ = this.initialId;
    this.freeIds_8be2vx$ = Pool_init(void 0, Manager$freeIds$lambda(this));
    this.resourcesById_8be2vx$ = LinkedHashMap_init();
  }
  Object.defineProperty(Manager.prototype, 'emulator', {
    get: function () {
      return this.emulator_k3sv7h$_0;
    }
  });
  Object.defineProperty(Manager.prototype, 'resourcesCount', {
    get: function () {
      return this.resourcesById_8be2vx$.size;
    }
  });
  Manager.prototype.put_wz21ut$ = function (item) {
    var $receiver = this.resourcesById_8be2vx$;
    var key = item.id;
    $receiver.put_xwzc9p$(key, item);
    return item;
  };
  Manager.prototype.allocId_8be2vx$ = function () {
    return this.freeIds_8be2vx$.alloc();
  };
  Manager.prototype.tryGetByName_61zpoe$ = function (name) {
    var $receiver = this.resourcesById_8be2vx$.values;
    var firstOrNull$result;
    firstOrNull$break: do {
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (equals(element.name, name)) {
          firstOrNull$result = element;
          break firstOrNull$break;
        }
      }
      firstOrNull$result = null;
    }
     while (false);
    return firstOrNull$result;
  };
  Manager.prototype.tryGetById_za3lpa$ = function (id) {
    return this.resourcesById_8be2vx$.get_11rb$(id);
  };
  Manager.prototype.getById_za3lpa$ = function (id) {
    var tmp$;
    tmp$ = this.tryGetById_za3lpa$(id);
    if (tmp$ == null) {
      throw new ResourceNotFoundException("Can't find element " + id + ' in ' + this.name);
    }
    return tmp$;
  };
  Manager.prototype.freeById_za3lpa$ = function (id) {
    this.freeIds_8be2vx$.free_11rb$(id);
    this.resourcesById_8be2vx$.remove_11rb$(id);
  };
  function Manager$reset$lambda(this$Manager) {
    return function (it) {
      var tmp$;
      return tmp$ = this$Manager.lastId_8be2vx$, this$Manager.lastId_8be2vx$ = tmp$ + 1 | 0, tmp$;
    };
  }
  Manager.prototype.reset = function () {
    this.lastId_8be2vx$ = this.initialId;
    this.freeIds_8be2vx$ = Pool_init(void 0, Manager$reset$lambda(this));
    this.resourcesById_8be2vx$.clear();
  };
  function Manager$freeIds$lambda(this$Manager) {
    return function (it) {
      var tmp$;
      return tmp$ = this$Manager.lastId_8be2vx$, this$Manager.lastId_8be2vx$ = tmp$ + 1 | 0, tmp$;
    };
  }
  Manager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Manager',
    interfaces: [WithEmulator]
  };
  function Resource(manager, id, name) {
    this.manager = manager;
    this.id = id;
    this.name = name;
    var tmp$;
    var $receiver = Kotlin.isType(tmp$ = this.manager.resourcesById_8be2vx$, LinkedHashMap) ? tmp$ : throwCCE();
    var key = this.id;
    $receiver.put_xwzc9p$(key, this);
  }
  Object.defineProperty(Resource.prototype, 'emulator', {
    get: function () {
      return this.manager.emulator;
    }
  });
  Resource.prototype.free = function () {
    this.manager.freeIds_8be2vx$.free_11rb$(this.id);
    this.manager.resourcesById_8be2vx$.remove_11rb$(this.id);
  };
  Resource.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Resource',
    interfaces: [WithEmulator]
  };
  function MemoryManager(emulator) {
    this.emulator = emulator;
    this.memoryPartitionsUid = LinkedHashMap_init();
    this.reset();
  }
  Object.defineProperty(MemoryManager.prototype, 'kernelPartition', {
    get: function () {
      return ensureNotNull(this.memoryPartitionsUid.get_11rb$(MemoryPartitions$Companion_getInstance().Kernel0));
    }
  });
  Object.defineProperty(MemoryManager.prototype, 'userPartition', {
    get: function () {
      return ensureNotNull(this.memoryPartitionsUid.get_11rb$(MemoryPartitions$Companion_getInstance().User));
    }
  });
  Object.defineProperty(MemoryManager.prototype, 'stackPartition', {
    get: function () {
      return ensureNotNull(this.memoryPartitionsUid.get_11rb$(MemoryPartitions$Companion_getInstance().UserStacks));
    }
  });
  MemoryManager.prototype.reset = function () {
    this.memoryPartitionsUid.clear();
    var $receiver = this.memoryPartitionsUid;
    var key = MemoryPartitions$Companion_getInstance().Kernel0;
    var value = new MemoryPartition('Kernel Partition 1', new Kotlin.Long(-2013265920, 0), new Kotlin.Long(-2010120192, 0), false);
    $receiver.put_xwzc9p$(key, value);
    var $receiver_0 = this.memoryPartitionsUid;
    var key_0 = MemoryPartitions$Companion_getInstance().User;
    var value_0 = new MemoryPartition('User Partition', Kotlin.Long.fromInt(142606336), Kotlin.Long.fromInt(167772160), false);
    $receiver_0.put_xwzc9p$(key_0, value_0);
    var $receiver_1 = this.memoryPartitionsUid;
    var key_1 = MemoryPartitions$Companion_getInstance().UserStacks;
    var value_1 = new MemoryPartition('User Stacks Partition', Kotlin.Long.fromInt(142606336), Kotlin.Long.fromInt(167772160), false);
    $receiver_1.put_xwzc9p$(key_1, value_1);
    var $receiver_2 = this.memoryPartitionsUid;
    var key_2 = MemoryPartitions$Companion_getInstance().VolatilePartition;
    var value_2 = new MemoryPartition('Volatile Partition', Kotlin.Long.fromInt(138412032), Kotlin.Long.fromInt(142606336), false);
    $receiver_2.put_xwzc9p$(key_2, value_2);
  };
  MemoryManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemoryManager',
    interfaces: []
  };
  function MemoryPartitions(id) {
    MemoryPartitions$Companion_getInstance();
    this.id = id;
  }
  function MemoryPartitions$Companion() {
    MemoryPartitions$Companion_instance = this;
    this.Kernel0 = 0;
    this.User = 2;
    this.VolatilePartition = 5;
    this.UserStacks = 6;
  }
  MemoryPartitions$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var MemoryPartitions$Companion_instance = null;
  function MemoryPartitions$Companion_getInstance() {
    if (MemoryPartitions$Companion_instance === null) {
      new MemoryPartitions$Companion();
    }
    return MemoryPartitions$Companion_instance;
  }
  MemoryPartitions.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemoryPartitions',
    interfaces: []
  };
  function MemoryAnchor(name, ordinal, id) {
    Enum.call(this);
    this.id = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function MemoryAnchor_initFields() {
    MemoryAnchor_initFields = function () {
    };
    MemoryAnchor$Low_instance = new MemoryAnchor('Low', 0, 0);
    MemoryAnchor$High_instance = new MemoryAnchor('High', 1, 1);
    MemoryAnchor$Address_instance = new MemoryAnchor('Address', 2, 2);
    MemoryAnchor$LowAligned_instance = new MemoryAnchor('LowAligned', 3, 3);
    MemoryAnchor$HighAligned_instance = new MemoryAnchor('HighAligned', 4, 4);
    MemoryAnchor$Companion_getInstance();
  }
  var MemoryAnchor$Low_instance;
  function MemoryAnchor$Low_getInstance() {
    MemoryAnchor_initFields();
    return MemoryAnchor$Low_instance;
  }
  var MemoryAnchor$High_instance;
  function MemoryAnchor$High_getInstance() {
    MemoryAnchor_initFields();
    return MemoryAnchor$High_instance;
  }
  var MemoryAnchor$Address_instance;
  function MemoryAnchor$Address_getInstance() {
    MemoryAnchor_initFields();
    return MemoryAnchor$Address_instance;
  }
  var MemoryAnchor$LowAligned_instance;
  function MemoryAnchor$LowAligned_getInstance() {
    MemoryAnchor_initFields();
    return MemoryAnchor$LowAligned_instance;
  }
  var MemoryAnchor$HighAligned_instance;
  function MemoryAnchor$HighAligned_getInstance() {
    MemoryAnchor_initFields();
    return MemoryAnchor$HighAligned_instance;
  }
  function MemoryAnchor$Companion() {
    MemoryAnchor$Companion_instance = this;
    var $receiver = MemoryAnchor$values();
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.id, item));
    }
    this.BY_ID = toMap(destination);
  }
  MemoryAnchor$Companion.prototype.invoke_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this.BY_ID.get_11rb$(index)) != null ? tmp$ : invalidOp("Can't find index " + index + ' in class');
  };
  MemoryAnchor$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var MemoryAnchor$Companion_instance = null;
  function MemoryAnchor$Companion_getInstance() {
    MemoryAnchor_initFields();
    if (MemoryAnchor$Companion_instance === null) {
      new MemoryAnchor$Companion();
    }
    return MemoryAnchor$Companion_instance;
  }
  MemoryAnchor.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemoryAnchor',
    interfaces: [Enum]
  };
  function MemoryAnchor$values() {
    return [MemoryAnchor$Low_getInstance(), MemoryAnchor$High_getInstance(), MemoryAnchor$Address_getInstance(), MemoryAnchor$LowAligned_getInstance(), MemoryAnchor$HighAligned_getInstance()];
  }
  MemoryAnchor.values = MemoryAnchor$values;
  function MemoryAnchor$valueOf(name) {
    switch (name) {
      case 'Low':
        return MemoryAnchor$Low_getInstance();
      case 'High':
        return MemoryAnchor$High_getInstance();
      case 'Address':
        return MemoryAnchor$Address_getInstance();
      case 'LowAligned':
        return MemoryAnchor$LowAligned_getInstance();
      case 'HighAligned':
        return MemoryAnchor$HighAligned_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.manager.MemoryAnchor.' + name);
    }
  }
  MemoryAnchor.valueOf_61zpoe$ = MemoryAnchor$valueOf;
  function OutOfMemoryError(message) {
    Exception_init_0(message, this);
    this.name = 'OutOfMemoryError';
  }
  OutOfMemoryError.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'OutOfMemoryError',
    interfaces: [Exception]
  };
  function MemoryPartition(name, low, high, allocated, parent) {
    MemoryPartition$Companion_getInstance();
    if (parent === void 0)
      parent = null;
    this.name = name;
    this.low = low;
    this.high = high;
    this.allocated = allocated;
    this.parent = parent;
    this.address = this.low;
    this._childPartitions_0 = ArrayList_init();
  }
  Object.defineProperty(MemoryPartition.prototype, 'low_i', {
    get: function () {
      return this.low.toInt();
    }
  });
  Object.defineProperty(MemoryPartition.prototype, 'high_i', {
    get: function () {
      return this.high.toInt();
    }
  });
  function MemoryPartition$Companion() {
    MemoryPartition$Companion_instance = this;
    this.ZERO = Kotlin.Long.ZERO;
    this.DUMMY = new MemoryPartition('dummy', numberToLong(0.0), numberToLong(0.0), false, null);
  }
  MemoryPartition$Companion.prototype.invoke_irad7e$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.hle.manager.MemoryPartition.Companion.invoke_irad7e$', wrapFunction(function () {
    var numberToLong = Kotlin.numberToLong;
    var MemoryPartition_init = _.com.soywiz.kpspemu.hle.manager.MemoryPartition;
    return function (name, low, high, allocated, parent) {
      if (parent === void 0)
        parent = null;
      return new MemoryPartition_init(name, numberToLong(low), numberToLong(high), allocated, parent);
    };
  }));
  MemoryPartition$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var MemoryPartition$Companion_instance = null;
  function MemoryPartition$Companion_getInstance() {
    if (MemoryPartition$Companion_instance === null) {
      new MemoryPartition$Companion();
    }
    return MemoryPartition$Companion_instance;
  }
  Object.defineProperty(MemoryPartition.prototype, 'free', {
    get: function () {
      return !this.allocated;
    }
  });
  Object.defineProperty(MemoryPartition.prototype, 'size', {
    get: function () {
      return this.high.subtract(this.low);
    }
  });
  Object.defineProperty(MemoryPartition.prototype, 'root', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.root : null) != null ? tmp$_0 : this;
    }
  });
  Object.defineProperty(MemoryPartition.prototype, 'childPartitions', {
    get: function () {
      if (this._childPartitions_0.isEmpty()) {
        this._childPartitions_0.add_11rb$(new MemoryPartition('', this.low, this.high, false, this));
      }
      return this._childPartitions_0;
    }
  });
  MemoryPartition.prototype.contains_s8cxhz$ = function (address) {
    return address.compareTo_11rb$(this.low) >= 0 && address.compareTo_11rb$(this.high) < 0;
  };
  MemoryPartition.prototype.deallocate = function () {
    var tmp$;
    this.allocated = false;
    (tmp$ = this.parent) != null ? (tmp$.cleanup_0(), Unit) : null;
  };
  MemoryPartition.prototype.allocate_vpxtrr$ = function (size, anchor, address, name) {
    if (address === void 0)
      address = Kotlin.Long.ZERO;
    if (name === void 0)
      name = '';
    if (equals(anchor, MemoryAnchor$LowAligned_getInstance()) || equals(anchor, MemoryAnchor$Low_getInstance()))
      return this.allocateLow_a4hdmt$(size, name);
    else if (equals(anchor, MemoryAnchor$High_getInstance()))
      return this.allocateHigh_9b8t8t$(size, name);
    else if (equals(anchor, MemoryAnchor$Address_getInstance()))
      return this.allocateSet_jl0yiw$(size, address, name);
    else
      throw Error_init(format_0('Not implemented anchor %d:%s', [anchor, anchor]));
  };
  MemoryPartition.prototype.allocate_bjt15p$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.hle.manager.MemoryPartition.allocate_bjt15p$', wrapFunction(function () {
    var numberToLong = Kotlin.numberToLong;
    return function (size, anchor, address, name) {
      if (address === void 0)
        address = Kotlin.Long.ZERO;
      if (name === void 0)
        name = '';
      return this.allocate_vpxtrr$(numberToLong(size), anchor, numberToLong(address), name);
    };
  }));
  MemoryPartition.prototype.allocateSet_7prga6$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.hle.manager.MemoryPartition.allocateSet_7prga6$', wrapFunction(function () {
    var numberToLong = Kotlin.numberToLong;
    return function (size, addressLow, name) {
      if (name === void 0)
        name = '';
      return this.allocateSet_jl0yiw$(numberToLong(size), numberToLong(addressLow), name);
    };
  }));
  MemoryPartition.prototype.allocateLow_xfy9o8$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.hle.manager.MemoryPartition.allocateLow_xfy9o8$', wrapFunction(function () {
    var numberToLong = Kotlin.numberToLong;
    return function (size, name) {
      if (name === void 0)
        name = '';
      return this.allocateLow_a4hdmt$(numberToLong(size), name);
    };
  }));
  MemoryPartition.prototype.allocateHigh_oj6pkq$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.hle.manager.MemoryPartition.allocateHigh_oj6pkq$', wrapFunction(function () {
    var numberToLong = Kotlin.numberToLong;
    return function (size, name, alignment) {
      if (name === void 0)
        name = '';
      if (alignment === void 0)
        alignment = 1;
      return this.allocateHigh_9b8t8t$(numberToLong(size), name);
    };
  }));
  MemoryPartition.prototype.allocateSet_jl0yiw$ = function (size, addressLow, name) {
    if (name === void 0)
      name = '';
    var childs = this.childPartitions;
    var addressHigh = addressLow.add(size);
    if (!this.contains_s8cxhz$(addressLow) || !this.contains_s8cxhz$(addressHigh)) {
      throw new OutOfMemoryError(format_0("Can't allocate [%08X-%08X] in [%08X-%08X]", [addressLow, addressHigh, this.low, this.high]));
    }
    var indexOfFirst$result;
    indexOfFirst$break: do {
      var tmp$;
      var index = 0;
      tmp$ = childs.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        if (item.contains_s8cxhz$(addressLow)) {
          indexOfFirst$result = index;
          break indexOfFirst$break;
        }
        index = index + 1 | 0;
      }
      indexOfFirst$result = -1;
    }
     while (false);
    var index_0 = indexOfFirst$result;
    if (index_0 < 0) {
      println(format_0('address: %08X, size: %d', [addressLow, size]));
      println(this);
      throw Error_init("Can't find the segment");
    }
    var child = childs.get_za3lpa$(index_0);
    if (child.allocated)
      throw Error_init('Memory already allocated');
    if (!child.contains_s8cxhz$(addressHigh.subtract(Kotlin.Long.fromInt(1))))
      throw Error_init("Can't fit memory");
    var p1 = new MemoryPartition('', child.low, addressLow, false, this);
    var p2 = new MemoryPartition(name, addressLow, addressHigh, true, this);
    var p3 = new MemoryPartition('', addressHigh, child.high, false, this);
    splice(childs, index_0, 1, [p1, p2, p3]);
    this.cleanup_0();
    return p2;
  };
  MemoryPartition.prototype.allocateLow_a4hdmt$ = function (size, name) {
    if (name === void 0)
      name = '';
    return this.allocateLowHigh_0(size, true, name);
  };
  MemoryPartition.prototype.allocateHigh_9b8t8t$ = function (size, name, alignment) {
    if (name === void 0)
      name = '';
    if (alignment === void 0)
      alignment = 1;
    return this.allocateLowHigh_0(size, false, name);
  };
  MemoryPartition.prototype._validateChilds_0 = function () {
    var tmp$;
    var childs = this.childPartitions;
    if (!equals(childs.get_za3lpa$(0).low, this.low))
      throw Error_init("First child low doesn't match container low");
    if (!equals(childs.get_za3lpa$(childs.size - 1 | 0).high, this.high))
      throw Error_init("Last child high doesn't match container high");
    tmp$ = childs.size - 1 | 0;
    for (var n = 0; n < tmp$; n++) {
      if (!equals(childs.get_za3lpa$(n + 0 | 0).high, childs.get_za3lpa$(n + 1 | 0).low))
        throw Error_init('Children at ' + n + ' are not contiguous');
    }
  };
  MemoryPartition.prototype.allocateLowHigh_0 = function (size, low, name) {
    if (name === void 0)
      name = '';
    var tmp$;
    var childs = this.childPartitions;
    if (low) {
      var indexOfFirst$result;
      indexOfFirst$break: do {
        var tmp$_0;
        var index = 0;
        tmp$_0 = childs.iterator();
        while (tmp$_0.hasNext()) {
          var item = tmp$_0.next();
          if (item.free && item.size.compareTo_11rb$(size) >= 0) {
            indexOfFirst$result = index;
            break indexOfFirst$break;
          }
          index = index + 1 | 0;
        }
        indexOfFirst$result = -1;
      }
       while (false);
      tmp$ = indexOfFirst$result;
    }
     else {
      var indexOfLast$result;
      indexOfLast$break: do {
        var iterator = childs.listIterator_za3lpa$(childs.size);
        while (iterator.hasPrevious()) {
          var it = iterator.previous();
          if (it.free && it.size.compareTo_11rb$(size) >= 0) {
            indexOfLast$result = iterator.nextIndex();
            break indexOfLast$break;
          }
        }
        indexOfLast$result = -1;
      }
       while (false);
      tmp$ = indexOfLast$result;
    }
    var index_0 = tmp$;
    if (index_0 < 0)
      throw new OutOfMemoryError("Can't find a partition with " + size + ' available');
    var child = childs.get_za3lpa$(index_0);
    var unallocatedChild;
    var allocatedChild;
    if (low) {
      var p1 = child.low;
      var p2 = child.low.add(size);
      var p3 = child.high;
      allocatedChild = new MemoryPartition(name, p1, p2, true, this);
      unallocatedChild = new MemoryPartition('', p2, p3, false, this);
      splice(childs, index_0, 1, [allocatedChild, unallocatedChild]);
    }
     else {
      var p1_0 = child.low;
      var p2_0 = child.high.subtract(size);
      var p3_0 = child.high;
      unallocatedChild = new MemoryPartition('', p1_0, p2_0, false, this);
      allocatedChild = new MemoryPartition(name, p2_0, p3_0, true, this);
      splice(childs, index_0, 1, [unallocatedChild, allocatedChild]);
    }
    this.cleanup_0();
    return allocatedChild;
  };
  MemoryPartition.prototype.unallocate = function () {
    var tmp$;
    this.name = '';
    this.allocated = false;
    (tmp$ = this.parent) != null ? (tmp$.cleanup_0(), Unit) : null;
  };
  MemoryPartition.prototype.cleanup_0 = function () {
    var startTotalFreeMemory = this.getTotalFreeMemory();
    this._validateChilds_0();
    var childs = {v: this.childPartitions};
    if (childs.v.size >= 2) {
      var n = 0;
      while (n < (childs.v.size - 1 | 0)) {
        var l = childs.v.get_za3lpa$(n + 0 | 0);
        var r = childs.v.get_za3lpa$(n + 1 | 0);
        if (!l.allocated && !r.allocated) {
          var new_0 = new MemoryPartition('', l.low, r.high, false, this);
          splice(childs.v, n, 2, [new_0]);
        }
         else {
          n = n + 1 | 0;
        }
      }
    }
    var n_0 = 0;
    while (n_0 < childs.v.size) {
      var child = childs.v.get_za3lpa$(n_0);
      if (!child.allocated && equals(child.size, Kotlin.Long.ZERO)) {
        splice(childs.v, n_0, 1, []);
      }
       else {
        n_0 = n_0 + 1 | 0;
      }
    }
    this._validateChilds_0();
    var endTotalFreeMemory = this.getTotalFreeMemory();
    if (!equals(endTotalFreeMemory, startTotalFreeMemory)) {
      println('assertion failed [1]! : ' + startTotalFreeMemory + ',' + endTotalFreeMemory);
    }
  };
  Object.defineProperty(MemoryPartition.prototype, 'nonAllocatedPartitions', {
    get: function () {
      var $receiver = this.childPartitions;
      var destination = ArrayList_init();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (!element.allocated)
          destination.add_11rb$(element);
      }
      return destination;
    }
  });
  function MemoryPartition$getTotalFreeMemory$lambda(prev, item) {
    return item.size.add(prev);
  }
  MemoryPartition.prototype.getTotalFreeMemory = function () {
    return reduceAcumulate(this.nonAllocatedPartitions, Kotlin.Long.ZERO, MemoryPartition$getTotalFreeMemory$lambda);
  };
  MemoryPartition.prototype.getMaxContiguousFreeMemory = function () {
    var tmp$, tmp$_0;
    var $receiver = this.nonAllocatedPartitions;
    var maxBy$result;
    maxBy$break: do {
      var iterator = $receiver.iterator();
      if (!iterator.hasNext()) {
        maxBy$result = null;
        break maxBy$break;
      }
      var maxElem = iterator.next();
      var maxValue = maxElem.size;
      while (iterator.hasNext()) {
        var e = iterator.next();
        var v = e.size;
        if (Kotlin.compareTo(maxValue, v) < 0) {
          maxElem = e;
          maxValue = v;
        }
      }
      maxBy$result = maxElem;
    }
     while (false);
    return (tmp$_0 = (tmp$ = maxBy$result) != null ? tmp$.size : null) != null ? tmp$_0 : Kotlin.Long.ZERO;
  };
  MemoryPartition.prototype.getTotalFreeMemoryInt = function () {
    return this.getTotalFreeMemory().toInt();
  };
  MemoryPartition.prototype.getMaxContiguousFreeMemoryInt = function () {
    return this.getMaxContiguousFreeMemory().toInt();
  };
  MemoryPartition.prototype.findFreeChildWithSize_0 = function (size) {
  };
  MemoryPartition.prototype.toString2 = function () {
    return "MemoryPartition('" + this.name + "', " + get_shex(this.low.toInt()) + '-' + get_shex(this.high.toInt()) + ' size=' + this.size + ')';
  };
  function MemoryPartition$dump$lambda(it) {
    return it.low;
  }
  var compareBy$lambda_1 = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  function Comparator$ObjectLiteral_1(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_1.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_1.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  MemoryPartition.prototype.dump = function () {
    var tmp$;
    println('DUMP: ' + this.toString2());
    var $receiver = this.childPartitions;
    var destination = ArrayList_init();
    var tmp$_0;
    tmp$_0 = $receiver.iterator();
    while (tmp$_0.hasNext()) {
      var element = tmp$_0.next();
      if (element.allocated)
        destination.add_11rb$(element);
    }
    tmp$ = sortedWith(destination, new Comparator$ObjectLiteral_1(compareBy$lambda_1(MemoryPartition$dump$lambda))).iterator();
    while (tmp$.hasNext()) {
      var child = tmp$.next();
      println(' - ' + child.toString2());
    }
  };
  MemoryPartition.prototype.getAtLow_s8cxhz$ = function (ptr) {
    var $receiver = this.childPartitions;
    var firstOrNull$result;
    firstOrNull$break: do {
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (equals(element.low, ptr)) {
          firstOrNull$result = element;
          break firstOrNull$break;
        }
      }
      firstOrNull$result = null;
    }
     while (false);
    return firstOrNull$result;
  };
  MemoryPartition.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemoryPartition',
    interfaces: []
  };
  MemoryPartition.prototype.component1 = function () {
    return this.name;
  };
  MemoryPartition.prototype.component2 = function () {
    return this.low;
  };
  MemoryPartition.prototype.component3 = function () {
    return this.high;
  };
  MemoryPartition.prototype.component4 = function () {
    return this.allocated;
  };
  MemoryPartition.prototype.component5 = function () {
    return this.parent;
  };
  MemoryPartition.prototype.copy_p6z7y8$ = function (name, low, high, allocated, parent) {
    return new MemoryPartition(name === void 0 ? this.name : name, low === void 0 ? this.low : low, high === void 0 ? this.high : high, allocated === void 0 ? this.allocated : allocated, parent === void 0 ? this.parent : parent);
  };
  MemoryPartition.prototype.toString = function () {
    return 'MemoryPartition(name=' + Kotlin.toString(this.name) + (', low=' + Kotlin.toString(this.low)) + (', high=' + Kotlin.toString(this.high)) + (', allocated=' + Kotlin.toString(this.allocated)) + (', parent=' + Kotlin.toString(this.parent)) + ')';
  };
  MemoryPartition.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.low) | 0;
    result = result * 31 + Kotlin.hashCode(this.high) | 0;
    result = result * 31 + Kotlin.hashCode(this.allocated) | 0;
    result = result * 31 + Kotlin.hashCode(this.parent) | 0;
    return result;
  };
  MemoryPartition.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.low, other.low) && Kotlin.equals(this.high, other.high) && Kotlin.equals(this.allocated, other.allocated) && Kotlin.equals(this.parent, other.parent)))));
  };
  function ModuleManager(emulator) {
    this.emulator = emulator;
    this.modules = LinkedHashMap_init();
    this.modulesByClass = LinkedHashMap_init();
  }
  ModuleManager.prototype.register_q5jrol$ = function (module_0) {
    var $receiver = this.modules;
    var key = module_0.name;
    $receiver.put_xwzc9p$(key, module_0);
    var $receiver_0 = this.modulesByClass;
    var key_0 = Kotlin.getKClassFromExpression(module_0);
    $receiver_0.put_xwzc9p$(key_0, module_0);
    module_0.registerPspModule();
  };
  ModuleManager.prototype.getByName_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.modules.get_11rb$(name)) != null ? tmp$ : invalidOp("Can't find module '" + name + "'");
  };
  ModuleManager.prototype.reset = function () {
    this.modules.clear();
  };
  ModuleManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ModuleManager',
    interfaces: []
  };
  function SyscallManager() {
    this.logger = Logger.Companion.invoke_61zpoe$('SyscallManager');
    this.lasSyscallId = 1;
    this.syscallToFunc = IntMap_init();
    this.syscallToName = IntMap_init();
  }
  SyscallManager.prototype.unhandled_acv9wa$ = function (state, id) {
    println(format_0('%08X: Called syscall: ### %04X', [state.PC, id]));
  };
  SyscallManager.prototype.register_pba9dr$ = function (id, name, callback) {
    if (id === void 0)
      id = -1;
    var tmp$;
    var syscallId = id < 0 ? (tmp$ = this.lasSyscallId, this.lasSyscallId = tmp$ + 1 | 0, tmp$) : id;
    this.syscallToFunc.set_wxm5ur$(syscallId, callback);
    this.syscallToName.set_wxm5ur$(syscallId, name);
    return syscallId;
  };
  function SyscallManager$register$lambda(closure$nfunc) {
    return function (cpu, f) {
      closure$nfunc.function(cpu);
      return Unit;
    };
  }
  SyscallManager.prototype.register_u5woyh$ = function (nfunc, id) {
    if (id === void 0)
      id = -1;
    return this.register_pba9dr$(id, nfunc.name, SyscallManager$register$lambda(nfunc));
  };
  SyscallManager.prototype.syscall_acv9wa$ = function (state, id) {
    var tmp$;
    var func = (tmp$ = this.syscallToFunc.get_za3lpa$(id)) != null ? tmp$ : getCallableRef('unhandled', function ($receiver, state, id) {
      return $receiver.unhandled_acv9wa$(state, id), Unit;
    }.bind(null, this));
    var $this = this.logger;
    var level = LogLevel.TRACE;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'syscall: ' + id + ' (' + toString(this.syscallToName.get_za3lpa$(id)) + ')');
    }
    func(state, id);
  };
  SyscallManager.prototype.reset = function () {
    this.syscallToFunc = IntMap_init();
    this.syscallToName = IntMap_init();
    this.lasSyscallId = 1;
  };
  SyscallManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SyscallManager',
    interfaces: [Syscalls]
  };
  var INSTRUCTIONS_PER_STEP;
  function ThreadManager(emulator) {
    Manager.call(this, 'Thread', emulator);
    this.logger = Logger.Companion.invoke_61zpoe$('ThreadManager');
    this.onThreadChanged = new Signal2();
    this.currentThread = null;
    this.traces = HashMap_init();
  }
  Object.defineProperty(ThreadManager.prototype, 'threads', {
    get: function () {
      return this.resourcesById_8be2vx$.values;
    }
  });
  Object.defineProperty(ThreadManager.prototype, 'waitingThreads', {
    get: function () {
      var $receiver = this.resourcesById_8be2vx$;
      var count$result;
      count$break: do {
        var tmp$;
        if ($receiver.isEmpty()) {
          count$result = 0;
          break count$break;
        }
        var count = 0;
        tmp$ = $receiver.entries.iterator();
        while (tmp$.hasNext()) {
          var element = tmp$.next();
          if (element.value.waiting) {
            count = count + 1 | 0;
          }
        }
        count$result = count;
      }
       while (false);
      return count$result;
    }
  });
  Object.defineProperty(ThreadManager.prototype, 'activeThreads', {
    get: function () {
      var $receiver = this.resourcesById_8be2vx$;
      var count$result;
      count$break: do {
        var tmp$;
        if ($receiver.isEmpty()) {
          count$result = 0;
          break count$break;
        }
        var count = 0;
        tmp$ = $receiver.entries.iterator();
        while (tmp$.hasNext()) {
          var element = tmp$.next();
          if (element.value.running) {
            count = count + 1 | 0;
          }
        }
        count$result = count;
      }
       while (false);
      return count$result;
    }
  });
  Object.defineProperty(ThreadManager.prototype, 'totalThreads', {
    get: function () {
      return this.resourcesById_8be2vx$.size;
    }
  });
  var Collection = Kotlin.kotlin.collections.Collection;
  Object.defineProperty(ThreadManager.prototype, 'aliveThreadCount', {
    get: function () {
      var $receiver = this.resourcesById_8be2vx$.values;
      var count$result;
      count$break: do {
        var tmp$;
        if (Kotlin.isType($receiver, Collection) && $receiver.isEmpty()) {
          count$result = 0;
          break count$break;
        }
        var count = 0;
        tmp$ = $receiver.iterator();
        while (tmp$.hasNext()) {
          var element = tmp$.next();
          if (element.running || element.waiting) {
            count = count + 1 | 0;
          }
        }
        count$result = count;
      }
       while (false);
      return count$result;
    }
  });
  ThreadManager.prototype.reset = function () {
    Manager.prototype.reset.call(this);
    this.currentThread = null;
  };
  ThreadManager.prototype.create_7jlznu$ = function (name, entryPoint, initPriority, stackSize, attributes, optionPtr) {
    var attr = attributes;
    var ssize = nextAlignedTo_0(Math_0.max(stackSize, 512), 256);
    var $this = get_memoryManager(this).userPartition;
    var name_0 = name + '_stack';
    var stack = $this.allocateHigh_9b8t8t$(numberToLong(ssize), name_0);
    println(stack.toString2());
    var thread = new PspThread(this, this.allocId_8be2vx$(), name, entryPoint, stack, initPriority, attributes, optionPtr);
    var $this_0 = this.logger;
    var level = LogLevel.INFO;
    if ($this_0.isEnabled_ci8eq1$(level)) {
      $this_0.actualLog_t189ph$(level, format_0('stack:%08X-%08X (%d)', [stack.low.toInt(), stack.high.toInt(), stack.size.toInt()]));
    }
    attr = attr | PspThreadAttributes_getInstance().User;
    attr = attr | PspThreadAttributes_getInstance().LowFF;
    if (!hasFlag(attr, PspThreadAttributes_getInstance().NoFillStack)) {
      var $this_1 = this.logger;
      var level_0 = LogLevel.TRACE;
      if ($this_1.isEnabled_ci8eq1$(level_0)) {
        $this_1.actualLog_t189ph$(level_0, 'FILLING: ' + stack);
      }
      get_mem(this).fill_qt1dr2$(-1, stack.low.toInt(), stack.size.toInt());
    }
     else {
      var $this_2 = this.logger;
      var level_1 = LogLevel.TRACE;
      if ($this_2.isEnabled_ci8eq1$(level_1)) {
        $this_2.actualLog_t189ph$(level_1, 'NOT FILLING: ' + stack);
      }
    }
    get_threadManager(this).onThreadChanged.invoke_11rb$(thread);
    return thread;
  };
  ThreadManager.prototype.suspend = function () {
    throw new CpuBreakException(CpuBreakException$Companion_getInstance().THREAD_WAIT);
  };
  ThreadManager.prototype.getActiveThreadPriorities = function () {
    var $receiver = this.threads;
    var destination = ArrayList_init();
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      if (element.running)
        destination.add_11rb$(element);
    }
    var destination_0 = ArrayList_init(collectionSizeOrDefault(destination, 10));
    var tmp$_0;
    tmp$_0 = destination.iterator();
    while (tmp$_0.hasNext()) {
      var item = tmp$_0.next();
      destination_0.add_11rb$(item.priority);
    }
    return sorted(distinct(destination_0));
  };
  ThreadManager.prototype.getActiveThreadsWithPriority_za3lpa$ = function (priority) {
    var $receiver = this.threads;
    var destination = ArrayList_init();
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      if (element.running && element.priority === priority)
        destination.add_11rb$(element);
    }
    return destination;
  };
  ThreadManager.prototype.getFirstThread = function () {
    var tmp$, tmp$_0;
    return (tmp$_0 = (tmp$ = firstOrNull_0(this.getActiveThreadPriorities())) != null ? this.getActiveThreadsWithPriority_za3lpa$(tmp$) : null) != null ? firstOrNull_0(tmp$_0) : null;
  };
  ThreadManager.prototype.getNextPriority_za3lpa$ = function (priority) {
    var $receiver = this.getActiveThreadPriorities();
    var firstOrNull$result;
    firstOrNull$break: do {
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (element > priority) {
          firstOrNull$result = element;
          break firstOrNull$break;
        }
      }
      firstOrNull$result = null;
    }
     while (false);
    return firstOrNull$result;
  };
  ThreadManager.prototype.computeNextThread_3pbxsf$ = function (prevThread) {
    if (prevThread == null)
      return this.getFirstThread();
    var threadsWithPriority = this.getActiveThreadsWithPriority_za3lpa$(prevThread.priority);
    var threadsWithPriorityCount = threadsWithPriority.size;
    if (threadsWithPriorityCount > 0) {
      var index = umod(threadsWithPriority.indexOf_11rb$(prevThread), threadsWithPriorityCount);
      return getOrNull(threadsWithPriority, umod(index + 1 | 0, threadsWithPriorityCount));
    }
     else {
      var nextPriority = this.getNextPriority_za3lpa$(prevThread.priority);
      return nextPriority != null ? firstOrNull_0(this.getActiveThreadsWithPriority_za3lpa$(nextPriority)) : null;
    }
  };
  ThreadManager.prototype.waitThreadChange = function (continuation_0, suspended) {
    var instance = new Coroutine$waitThreadChange(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$waitThreadChange($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 4;
    this.$this = $this;
  }
  Coroutine$waitThreadChange.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitThreadChange.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitThreadChange.prototype.constructor = Coroutine$waitThreadChange;
  Coroutine$waitThreadChange.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.exceptionState_0 = 2;
            this.state_0 = 1;
            this.result_0 = waitOne_0(this.$this.onThreadChanged, 16, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            this.exceptionState_0 = 4;
            this.state_0 = 3;
            continue;
          case 2:
            this.exceptionState_0 = 4;
            var e = this.exception_0;
            if (!Kotlin.isType(e, TimeoutException))
              throw e;
            this.state_0 = 3;
            continue;
          case 3:
            return;
          case 4:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 4)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ThreadManager.prototype.step = function (continuation_0, suspended) {
    var instance = new Coroutine$step(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$step($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 8;
    this.$this = $this;
    this.local$start = void 0;
    this.local$now = void 0;
  }
  Coroutine$step.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$step.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$step.prototype.constructor = Coroutine$step;
  Coroutine$step.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
            this.local$start = get_timeManager(this.$this).getTimeInMicrosecondsDouble();
            if (this.$this.emulator.globalTrace) {
              println('-----');
              tmp$ = this.$this.threads.iterator();
              while (tmp$.hasNext()) {
                var thread = tmp$.next();
                println('- ' + thread.name + ' : ' + thread.priority + ' : running=' + thread.running);
              }
              println('-----');
            }

            this.state_0 = 1;
            continue;
          case 1:
            this.local$now = get_timeManager(this.$this).getTimeInMicrosecondsDouble();
            if (this.$this.currentThread == null)
              this.$this.currentThread = this.$this.getFirstThread();
            if (((tmp$_0 = this.$this.currentThread) != null ? tmp$_0.running : null) === false) {
              println('WAIT! Trying to execute a sleeping thread!');
              this.$this.currentThread = this.$this.computeNextThread_3pbxsf$(this.$this.currentThread);
            }

            if (this.$this.emulator.globalTrace) {
              println('Current thread: ' + toString((tmp$_1 = this.$this.currentThread) != null ? tmp$_1.name : null));
            }

            this.exceptionState_0 = 2;
            (tmp$_2 = this.$this.currentThread) != null ? tmp$_2.step_8555vt$(this.local$now) : null;
            this.$this.currentThread = this.$this.computeNextThread_3pbxsf$(this.$this.currentThread);
            this.exceptionState_0 = 8;
            this.state_0 = 4;
            continue;
          case 2:
            this.exceptionState_0 = 8;
            var e = this.exception_0;
            if (Kotlin.isType(e, BreakpointException)) {
              this.exceptionState_0 = 2;
              this.state_0 = 7;
              continue;
            }
             else {
              throw e;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            if (this.$this.emulator.globalTrace) {
              println('Next thread: ' + toString((tmp$_3 = this.$this.currentThread) != null ? tmp$_3.name : null));
            }

            if (this.local$now - this.local$start >= 16.0) {
              this.state_0 = 5;
              this.result_0 = sleep_0(get_coroutineContext(this.$this), 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 6;
              continue;
            }

          case 5:
            this.state_0 = 7;
            continue;
          case 6:
            if (this.$this.currentThread == null) {
              this.state_0 = 7;
              continue;
            }

            this.state_0 = 1;
            continue;
          case 7:
            return;
          case 8:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 8)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Object.defineProperty(ThreadManager.prototype, 'availablePriorities', {
    get: function () {
      var $receiver = this.resourcesById_8be2vx$.values;
      var destination = ArrayList_init();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (element.running)
          destination.add_11rb$(element);
      }
      var destination_0 = ArrayList_init(collectionSizeOrDefault(destination, 10));
      var tmp$_0;
      tmp$_0 = destination.iterator();
      while (tmp$_0.hasNext()) {
        var item = tmp$_0.next();
        destination_0.add_11rb$(item.priority);
      }
      return sorted(distinct(destination_0));
    }
  });
  Object.defineProperty(ThreadManager.prototype, 'availableThreadCount', {
    get: function () {
      var $receiver = this.resourcesById_8be2vx$.values;
      var count$result;
      count$break: do {
        var tmp$;
        if (Kotlin.isType($receiver, Collection) && $receiver.isEmpty()) {
          count$result = 0;
          break count$break;
        }
        var count = 0;
        tmp$ = $receiver.iterator();
        while (tmp$.hasNext()) {
          var element = tmp$.next();
          if (element.running) {
            count = count + 1 | 0;
          }
        }
        count$result = count;
      }
       while (false);
      return count$result;
    }
  });
  function ThreadManager$get_ThreadManager$availableThreads$lambda(it) {
    return it.priority;
  }
  var compareBy$lambda_2 = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  function Comparator$ObjectLiteral_2(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_2.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_2.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  Object.defineProperty(ThreadManager.prototype, 'availableThreads', {
    get: function () {
      var $receiver = this.resourcesById_8be2vx$.values;
      var destination = ArrayList_init();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (element.running)
          destination.add_11rb$(element);
      }
      return sortedWith(destination, new Comparator$ObjectLiteral_2(compareBy$lambda_2(ThreadManager$get_ThreadManager$availableThreads$lambda)));
    }
  });
  ThreadManager.prototype.trace_ivxn3r$ = function (name, trace) {
    if (trace === void 0)
      trace = true;
    var tmp$;
    if (trace) {
      this.traces.put_xwzc9p$(name, true);
    }
     else {
      this.traces.remove_11rb$(name);
    }
    (tmp$ = this.tryGetByName_61zpoe$(name)) != null ? (tmp$.updateTrace(), Unit) : null;
  };
  ThreadManager.prototype.stopAllThreads = function () {
    var tmp$;
    tmp$ = toList_3(this.resourcesById_8be2vx$.values).iterator();
    while (tmp$.hasNext()) {
      var t = tmp$.next();
      t.exitAndKill();
    }
    throw new CpuBreakException(CpuBreakException$Companion_getInstance().THREAD_EXIT_KILL);
  };
  ThreadManager.prototype.executeInterrupt_vux9f0$ = function (address, argument) {
    var gcpustate = this.emulator.globalCpuState;
    var oldInsideInterrupt = gcpustate.insideInterrupt;
    gcpustate.insideInterrupt = true;
    try {
      var thread = first_0(this.threads);
      var cpu = thread.state.clone();
      set__thread(cpu, thread);
      var interpreter = new CpuInterpreter(cpu, this.emulator.breakpoints, this.emulator.nameProvider);
      cpu._PC = address;
      cpu._nPC = address + 4 | 0;
      set_RA(cpu, CpuBreakException$Companion_getInstance().INTERRUPT_RETURN_RA);
      cpu.r4 = argument;
      var start = get_timeManager(this).getTimeInMicroseconds();
      while (true) {
        var now = get_timeManager(this).getTimeInMicroseconds();
        interpreter.steps_fzusl$(10000);
        if (now.subtract(start).toNumber() >= 16.0) {
          println('Interrupt is taking too long...');
          break;
        }
      }
    }
     catch (e) {
      if (Kotlin.isType(e, CpuBreakException)) {
        if (e.id !== CpuBreakException$Companion_getInstance().INTERRUPT_RETURN) {
          throw e;
        }
      }
       else
        throw e;
    }
    finally {
      gcpustate.insideInterrupt = oldInsideInterrupt;
    }
  };
  ThreadManager.prototype.delayThread_za3lpa$ = function (micros) {
  };
  Object.defineProperty(ThreadManager.prototype, 'summary', {
    get: function () {
      var $receiver = this.threads;
      var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        destination.add_11rb$("'" + item.name + "'#" + item.id + ' P' + item.priority + ' : ' + item.phase);
      }
      return '[' + joinToString(destination, ', ') + ']';
    }
  });
  ThreadManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadManager',
    interfaces: [Manager]
  };
  function WaitObject() {
  }
  function WaitObject$COROUTINE(reason) {
    WaitObject.call(this);
    this.reason = reason;
  }
  WaitObject$COROUTINE.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'COROUTINE',
    interfaces: [WaitObject]
  };
  WaitObject$COROUTINE.prototype.component1 = function () {
    return this.reason;
  };
  WaitObject$COROUTINE.prototype.copy_61zpoe$ = function (reason) {
    return new WaitObject$COROUTINE(reason === void 0 ? this.reason : reason);
  };
  WaitObject$COROUTINE.prototype.toString = function () {
    return 'COROUTINE(reason=' + Kotlin.toString(this.reason) + ')';
  };
  WaitObject$COROUTINE.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.reason) | 0;
    return result;
  };
  WaitObject$COROUTINE.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.reason, other.reason))));
  };
  function WaitObject$VBLANK() {
    WaitObject$VBLANK_instance = this;
    WaitObject.call(this);
  }
  WaitObject$VBLANK.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'VBLANK',
    interfaces: [WaitObject]
  };
  var WaitObject$VBLANK_instance = null;
  function WaitObject$VBLANK_getInstance() {
    if (WaitObject$VBLANK_instance === null) {
      new WaitObject$VBLANK();
    }
    return WaitObject$VBLANK_instance;
  }
  WaitObject.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WaitObject',
    interfaces: []
  };
  function PspThread(threadManager, id, name, entryPoint, stack, initPriority, attributes, optionPtr) {
    Resource.call(this, threadManager, id, name);
    this.threadManager = threadManager;
    this.entryPoint = entryPoint;
    this.stack = stack;
    this.initPriority = initPriority;
    this.attributes = attributes;
    this.optionPtr = optionPtr;
    this.preemptionCount = 0;
    this.onEnd = new Signal2();
    this.onWakeUp = new Signal2();
    this.logger = Logger.Companion.invoke_61zpoe$('PspThread');
    this.acceptingCallbacks = false;
    this.waitObject = null;
    this.waitInfo = null;
    this.exitStatus = 0;
    this.phase = PspThread$Phase$STOPPED_getInstance();
    this.priority = this.initPriority;
    var $receiver = new CpuState('state.thread.' + name, this.emulator.globalCpuState, this.emulator.mem, this.emulator.syscalls);
    set__thread($receiver, this);
    var pc = this.entryPoint;
    $receiver._PC = pc;
    $receiver._nPC = pc + 4 | 0;
    set_SP($receiver, this.stack.high.toInt());
    set_RA($receiver, CpuBreakException$Companion_getInstance().THREAD_EXIT_KIL_RA);
    println("CREATED THREAD('" + name + "'): PC=" + get_hex($receiver.PC) + ', SP=' + get_hex(get_SP($receiver)));
    this.state = $receiver;
    this.interpreter = new CpuInterpreter(this.state, this.emulator.breakpoints, this.emulator.nameProvider);
    this.updateTrace();
    this.pendingAccumulatedMicrosecondsToWait = 0;
    this.tracing = false;
  }
  Object.defineProperty(PspThread.prototype, 'totalExecutedInstructions', {
    get: function () {
      return this.state.totalExecuted;
    }
  });
  function PspThread$Phase(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PspThread$Phase_initFields() {
    PspThread$Phase_initFields = function () {
    };
    PspThread$Phase$STOPPED_instance = new PspThread$Phase('STOPPED', 0);
    PspThread$Phase$RUNNING_instance = new PspThread$Phase('RUNNING', 1);
    PspThread$Phase$WAITING_instance = new PspThread$Phase('WAITING', 2);
    PspThread$Phase$DELETED_instance = new PspThread$Phase('DELETED', 3);
  }
  var PspThread$Phase$STOPPED_instance;
  function PspThread$Phase$STOPPED_getInstance() {
    PspThread$Phase_initFields();
    return PspThread$Phase$STOPPED_instance;
  }
  var PspThread$Phase$RUNNING_instance;
  function PspThread$Phase$RUNNING_getInstance() {
    PspThread$Phase_initFields();
    return PspThread$Phase$RUNNING_instance;
  }
  var PspThread$Phase$WAITING_instance;
  function PspThread$Phase$WAITING_getInstance() {
    PspThread$Phase_initFields();
    return PspThread$Phase$WAITING_instance;
  }
  var PspThread$Phase$DELETED_instance;
  function PspThread$Phase$DELETED_getInstance() {
    PspThread$Phase_initFields();
    return PspThread$Phase$DELETED_instance;
  }
  PspThread$Phase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Phase',
    interfaces: [Enum]
  };
  function PspThread$Phase$values() {
    return [PspThread$Phase$STOPPED_getInstance(), PspThread$Phase$RUNNING_getInstance(), PspThread$Phase$WAITING_getInstance(), PspThread$Phase$DELETED_getInstance()];
  }
  PspThread$Phase.values = PspThread$Phase$values;
  function PspThread$Phase$valueOf(name) {
    switch (name) {
      case 'STOPPED':
        return PspThread$Phase$STOPPED_getInstance();
      case 'RUNNING':
        return PspThread$Phase$RUNNING_getInstance();
      case 'WAITING':
        return PspThread$Phase$WAITING_getInstance();
      case 'DELETED':
        return PspThread$Phase$DELETED_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.manager.PspThread.Phase.' + name);
    }
  }
  PspThread$Phase.valueOf_61zpoe$ = PspThread$Phase$valueOf;
  Object.defineProperty(PspThread.prototype, 'status', {
    get: function () {
      var out = 0;
      if (this.running)
        out = out | ThreadStatus_getInstance().RUNNING;
      if (this.waiting)
        out = out | ThreadStatus_getInstance().WAIT;
      if (this.phase === PspThread$Phase$DELETED_getInstance())
        out = out | ThreadStatus_getInstance().DEAD;
      return out;
    }
  });
  Object.defineProperty(PspThread.prototype, 'running', {
    get: function () {
      return this.phase === PspThread$Phase$RUNNING_getInstance();
    }
  });
  Object.defineProperty(PspThread.prototype, 'waiting', {
    get: function () {
      return this.waitObject != null;
    }
  });
  Object.defineProperty(PspThread.prototype, 'emulator', {
    get: function () {
      return this.manager.emulator;
    }
  });
  PspThread.prototype.updateTrace = function () {
    this.interpreter.trace = this.threadManager.traces.get_11rb$(this.name) === true;
  };
  PspThread.prototype.putDataInStack_ir89t6$ = function (bytes, alignment) {
    if (alignment === void 0)
      alignment = 16;
    var tmp$;
    var blockSize = nextAlignedTo_0(bytes.length, alignment);
    tmp$ = this.state;
    set_SP(tmp$, get_SP(tmp$) - blockSize | 0);
    get_mem(this).write_3fge6q$(get_SP(this.state), bytes);
    return new PtrArray(ptr(get_mem(this), get_SP(this.state)), bytes.length);
  };
  PspThread.prototype.putWordInStack_vux9f0$ = function (word, alignment) {
    if (alignment === void 0)
      alignment = 16;
    var tmp$;
    var blockSize = nextAlignedTo_0(4, alignment);
    tmp$ = this.state;
    set_SP(tmp$, get_SP(tmp$) - blockSize | 0);
    get_mem(this).sw_vux9f0$(get_SP(this.state), word);
    return array(ptr(get_mem(this), get_SP(this.state)), 4);
  };
  PspThread.prototype.putWordsInStack_c8pq2n$ = function (words, alignment) {
    if (alignment === void 0)
      alignment = 16;
    var tmp$;
    var blockSize = nextAlignedTo_0(words.length * 4 | 0, alignment);
    tmp$ = this.state;
    set_SP(tmp$, get_SP(tmp$) - blockSize | 0);
    for (var n = 0; n < words.length; n++)
      get_mem(this).sw_vux9f0$(get_SP(this.state) + (n * 4 | 0) | 0, words[n]);
    return array(ptr(get_mem(this), get_SP(this.state)), words.length * 4 | 0);
  };
  PspThread.prototype.start = function () {
    this.resume();
    this.threadManager.onThreadChanged.invoke_11rb$(this);
  };
  PspThread.prototype.resume = function () {
    this.phase = PspThread$Phase$RUNNING_getInstance();
    this.waitObject = null;
    this.waitInfo = null;
    this.acceptingCallbacks = false;
    this.threadManager.onThreadChanged.invoke_11rb$(this);
  };
  PspThread.prototype.stop_61zpoe$ = function (reason) {
    if (reason === void 0)
      reason = 'generic';
    if (this.phase !== PspThread$Phase$STOPPED_getInstance()) {
      var $this = this.logger;
      var level = LogLevel.WARN;
      if ($this.isEnabled_ci8eq1$(level)) {
        $this.actualLog_t189ph$(level, 'Stopping Thread: ' + this.name + ' : reason=' + reason);
      }
      this.phase = PspThread$Phase$STOPPED_getInstance();
      this.onEnd.invoke_11rb$(Unit);
    }
  };
  PspThread.prototype.delete = function () {
    this.stop_61zpoe$();
    this.phase = PspThread$Phase$DELETED_getInstance();
    this.manager.freeById_za3lpa$(this.id);
    var $this = this.logger;
    var level = LogLevel.WARN;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'Deleting Thread: ' + this.name);
    }
  };
  PspThread.prototype.exitAndKill = function () {
    this.stop_61zpoe$();
    this.delete();
  };
  PspThread.prototype.step_8555vt$ = function (now, trace) {
    if (trace === void 0)
      trace = this.tracing;
    var tmp$;
    this.preemptionCount = this.preemptionCount + 1 | 0;
    try {
      this.interpreter.steps_fzusl$(INSTRUCTIONS_PER_STEP, trace);
      return 0;
    }
     catch (e) {
      if (Kotlin.isType(e, CpuBreakException)) {
        tmp$ = e.id;
        if (tmp$ === CpuBreakException$Companion_getInstance().THREAD_EXIT_KILL) {
          var $this = this.logger;
          var level = LogLevel.INFO;
          if ($this.isEnabled_ci8eq1$(level)) {
            $this.actualLog_t189ph$(level, "BREAK: THREAD_EXIT_KILL ('" + this.name + "', " + this.id + ')');
          }
          println("BREAK: THREAD_EXIT_KILL ('" + this.name + "', " + this.id + ')');
          this.exitAndKill();
        }
         else if (tmp$ !== CpuBreakException$Companion_getInstance().THREAD_WAIT)
          if (tmp$ !== CpuBreakException$Companion_getInstance().INTERRUPT_RETURN) {
            println('CPU: ' + this.state.summary);
            println('ERROR at PspThread.step');
            printStackTrace(e);
            throw e;
          }
        return e.id;
      }
       else
        throw e;
    }
  };
  PspThread.prototype.markWaiting_p514vg$ = function (wait, cb) {
    this.waitObject = wait;
    this.phase = PspThread$Phase$WAITING_getInstance();
    this.acceptingCallbacks = cb;
  };
  PspThread.prototype.suspend_p514vg$ = function (wait, cb) {
    this.markWaiting_p514vg$(wait, cb);
    this.threadManager.suspend();
  };
  PspThread.prototype.sleepMicro_za3lpa$ = function (microseconds_0, continuation_0, suspended) {
    var instance = new Coroutine$sleepMicro_za3lpa$(this, microseconds_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sleepMicro_za3lpa$($this, microseconds_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$microseconds = microseconds_0;
  }
  Coroutine$sleepMicro_za3lpa$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sleepMicro_za3lpa$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sleepMicro_za3lpa$.prototype.constructor = Coroutine$sleepMicro_za3lpa$;
  Coroutine$sleepMicro_za3lpa$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var totalMicroseconds = this.$this.pendingAccumulatedMicrosecondsToWait + this.local$microseconds | 0;
            this.$this.pendingAccumulatedMicrosecondsToWait = totalMicroseconds % 1000;
            var totalMilliseconds = totalMicroseconds / 1000 | 0;
            this.state_0 = 2;
            this.result_0 = sleep_0(get_coroutineContext(this.$this), totalMilliseconds, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  PspThread.prototype.sleepSeconds_14dthe$ = function (seconds, continuation) {
    return this.sleepMicro_za3lpa$(numberToInt(seconds * 1000000), continuation);
  };
  PspThread.prototype.sleepSecondsIfRequired_14dthe$ = function (seconds_0, continuation_0, suspended) {
    var instance = new Coroutine$sleepSecondsIfRequired_14dthe$(this, seconds_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sleepSecondsIfRequired_14dthe$($this, seconds_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$seconds = seconds_0;
  }
  Coroutine$sleepSecondsIfRequired_14dthe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sleepSecondsIfRequired_14dthe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sleepSecondsIfRequired_14dthe$.prototype.constructor = Coroutine$sleepSecondsIfRequired_14dthe$;
  Coroutine$sleepSecondsIfRequired_14dthe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$seconds > 0.0) {
              this.state_0 = 2;
              this.result_0 = this.$this.sleepMicro_za3lpa$(numberToInt(this.local$seconds * 1000000), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  PspThread.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspThread',
    interfaces: [Resource, WithEmulator]
  };
  function _thread$lambda() {
    return null;
  }
  var _thread;
  var Any = Object;
  var lmapOf = $module$kds_js.com.soywiz.kds.lmapOf_qfcya0$;
  function get__thread($receiver) {
    var property = new PropertyMetadata('_thread');
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = _thread.name) != null ? tmp$ : property.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = _thread.defaultGen();
        var tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
        if ($receiver.extra == null)
          $receiver.extra = lmapOf([]);
        tmp$_7 = $receiver.extra;
        tmp$_4 = (tmp$_3 = _thread.name) != null ? tmp$_3 : property.callableName;
        tmp$_6 = (tmp$_5 = r) == null || Kotlin.isType(tmp$_5, Any) ? tmp$_5 : throwCCE();
        if (tmp$_7 != null) {
          tmp$_7.put_xwzc9p$(tmp$_4, tmp$_6);
        }
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }
      getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function set__thread($receiver, _thread_0) {
    var property = new PropertyMetadata('_thread');
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    if ($receiver.extra == null)
      $receiver.extra = lmapOf([]);
    tmp$_3 = $receiver.extra;
    tmp$_0 = (tmp$ = _thread.name) != null ? tmp$ : property.callableName;
    tmp$_2 = (tmp$_1 = _thread_0) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
    if (tmp$_3 != null) {
      tmp$_3.put_xwzc9p$(tmp$_0, tmp$_2);
    }
  }
  function get_thread($receiver) {
    var tmp$;
    return (tmp$ = get__thread($receiver)) != null ? tmp$ : invalidOp("CpuState doesn't have a thread attached");
  }
  function PspEventFlag(id) {
    this.id_mwi0lt$_0 = id;
    this.name = '';
    this.attributes = 0;
    this.currentPattern = 0;
    this.optionsPtr = null;
  }
  Object.defineProperty(PspEventFlag.prototype, 'id', {
    get: function () {
      return this.id_mwi0lt$_0;
    }
  });
  PspEventFlag.prototype.poll_bvjn38$ = function (bitsToMatch, waitType, outBits) {
    var tmp$;
    if (get_isNotNull(outBits))
      outBits.sw_vux9f0$(0, this.currentPattern);
    if ((waitType & EventFlagWaitTypeSet_getInstance().Or) !== 0)
      tmp$ = (this.currentPattern & bitsToMatch) !== 0;
    else
      tmp$ = (this.currentPattern & bitsToMatch) === bitsToMatch;
    var res = tmp$;
    if (res) {
      this._doClear_0(bitsToMatch, waitType);
      return true;
    }
     else {
      return false;
    }
  };
  PspEventFlag.prototype._doClear_0 = function (bitsToMatch, waitType) {
    if ((waitType & EventFlagWaitTypeSet_getInstance().ClearAll) !== 0)
      this.clearBits_fzusl$(2, false);
    if ((waitType & EventFlagWaitTypeSet_getInstance().Clear) !== 0)
      this.clearBits_fzusl$(~bitsToMatch, false);
  };
  PspEventFlag.prototype.clearBits_fzusl$ = function (bitsToClear, doUpdateWaitingThreads) {
    if (doUpdateWaitingThreads === void 0)
      doUpdateWaitingThreads = true;
    this.currentPattern = this.currentPattern & bitsToClear;
    if (doUpdateWaitingThreads)
      this.updateWaitingThreads_0();
  };
  PspEventFlag.prototype.updateWaitingThreads_0 = function () {
  };
  PspEventFlag.prototype.setBits_fzusl$ = function (bits, doUpdateWaitingThreads) {
    if (doUpdateWaitingThreads === void 0)
      doUpdateWaitingThreads = true;
    this.currentPattern = this.currentPattern | bits;
    if (doUpdateWaitingThreads)
      this.updateWaitingThreads_0();
  };
  PspEventFlag.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspEventFlag',
    interfaces: [ResourceItem]
  };
  PspEventFlag.prototype.component1 = function () {
    return this.id;
  };
  PspEventFlag.prototype.copy_za3lpa$ = function (id) {
    return new PspEventFlag(id === void 0 ? this.id : id);
  };
  PspEventFlag.prototype.toString = function () {
    return 'PspEventFlag(id=' + Kotlin.toString(this.id) + ')';
  };
  PspEventFlag.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  PspEventFlag.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  function EventFlagWaitTypeSet() {
    EventFlagWaitTypeSet_instance = this;
    this.And = 0;
    this.Or = 1;
    this.ClearAll = 16;
    this.Clear = 32;
    this.MaskValidBits = this.Or | this.Clear | this.ClearAll;
  }
  EventFlagWaitTypeSet.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'EventFlagWaitTypeSet',
    interfaces: []
  };
  var EventFlagWaitTypeSet_instance = null;
  function EventFlagWaitTypeSet_getInstance() {
    if (EventFlagWaitTypeSet_instance === null) {
      new EventFlagWaitTypeSet();
    }
    return EventFlagWaitTypeSet_instance;
  }
  function ThreadStatus() {
    ThreadStatus_instance = this;
    this.RUNNING = 1;
    this.READY = 2;
    this.WAIT = 4;
    this.SUSPEND = 8;
    this.DORMANT = 16;
    this.DEAD = 32;
    this.WAITSUSPEND = this.WAIT | this.SUSPEND;
  }
  ThreadStatus.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ThreadStatus',
    interfaces: []
  };
  var ThreadStatus_instance = null;
  function ThreadStatus_getInstance() {
    if (ThreadStatus_instance === null) {
      new ThreadStatus();
    }
    return ThreadStatus_instance;
  }
  function SceKernelThreadInfo(size, name, attributes, status, entryPoint, stackPointer, stackSize, GP, priorityInit, priority, waitType, waitId, wakeupCount, exitStatus, runClocksLow, runClocksHigh, interruptPreemptionCount, threadPreemptionCount, releaseCount) {
    SceKernelThreadInfo$Companion_getInstance();
    if (size === void 0)
      size = 0;
    if (name === void 0)
      name = '';
    if (attributes === void 0)
      attributes = 0;
    if (status === void 0)
      status = 0;
    if (entryPoint === void 0)
      entryPoint = 0;
    if (stackPointer === void 0)
      stackPointer = 0;
    if (stackSize === void 0)
      stackSize = 0;
    if (GP === void 0)
      GP = 0;
    if (priorityInit === void 0)
      priorityInit = 0;
    if (priority === void 0)
      priority = 0;
    if (waitType === void 0)
      waitType = 0;
    if (waitId === void 0)
      waitId = 0;
    if (wakeupCount === void 0)
      wakeupCount = 0;
    if (exitStatus === void 0)
      exitStatus = 0;
    if (runClocksLow === void 0)
      runClocksLow = 0;
    if (runClocksHigh === void 0)
      runClocksHigh = 0;
    if (interruptPreemptionCount === void 0)
      interruptPreemptionCount = 0;
    if (threadPreemptionCount === void 0)
      threadPreemptionCount = 0;
    if (releaseCount === void 0)
      releaseCount = 0;
    this.size = size;
    this.name = name;
    this.attributes = attributes;
    this.status = status;
    this.entryPoint = entryPoint;
    this.stackPointer = stackPointer;
    this.stackSize = stackSize;
    this.GP = GP;
    this.priorityInit = priorityInit;
    this.priority = priority;
    this.waitType = waitType;
    this.waitId = waitId;
    this.wakeupCount = wakeupCount;
    this.exitStatus = exitStatus;
    this.runClocksLow = runClocksLow;
    this.runClocksHigh = runClocksHigh;
    this.interruptPreemptionCount = interruptPreemptionCount;
    this.threadPreemptionCount = threadPreemptionCount;
    this.releaseCount = releaseCount;
  }
  function SceKernelThreadInfo$Companion() {
    SceKernelThreadInfo$Companion_instance = this;
    Struct.call(this, SceKernelThreadInfo$SceKernelThreadInfo$Companion_init$lambda, [AS(getPropertyCallableRef('size', 1, function ($receiver) {
      return $receiver.size;
    }, function ($receiver, value) {
      $receiver.size = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('name', 1, function ($receiver) {
      return $receiver.name;
    }, function ($receiver, value) {
      $receiver.name = value;
    }), STRINGZ_init(32)), AS(getPropertyCallableRef('attributes', 1, function ($receiver) {
      return $receiver.attributes;
    }, function ($receiver, value) {
      $receiver.attributes = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('status', 1, function ($receiver) {
      return $receiver.status;
    }, function ($receiver, value) {
      $receiver.status = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('entryPoint', 1, function ($receiver) {
      return $receiver.entryPoint;
    }, function ($receiver, value) {
      $receiver.entryPoint = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('stackPointer', 1, function ($receiver) {
      return $receiver.stackPointer;
    }, function ($receiver, value) {
      $receiver.stackPointer = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('stackSize', 1, function ($receiver) {
      return $receiver.stackSize;
    }, function ($receiver, value) {
      $receiver.stackSize = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('GP', 1, function ($receiver) {
      return $receiver.GP;
    }, function ($receiver, value) {
      $receiver.GP = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('priorityInit', 1, function ($receiver) {
      return $receiver.priorityInit;
    }, function ($receiver, value) {
      $receiver.priorityInit = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('priority', 1, function ($receiver) {
      return $receiver.priority;
    }, function ($receiver, value) {
      $receiver.priority = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('waitType', 1, function ($receiver) {
      return $receiver.waitType;
    }, function ($receiver, value) {
      $receiver.waitType = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('waitId', 1, function ($receiver) {
      return $receiver.waitId;
    }, function ($receiver, value) {
      $receiver.waitId = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('wakeupCount', 1, function ($receiver) {
      return $receiver.wakeupCount;
    }, function ($receiver, value) {
      $receiver.wakeupCount = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('exitStatus', 1, function ($receiver) {
      return $receiver.exitStatus;
    }, function ($receiver, value) {
      $receiver.exitStatus = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('runClocksLow', 1, function ($receiver) {
      return $receiver.runClocksLow;
    }, function ($receiver, value) {
      $receiver.runClocksLow = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('runClocksHigh', 1, function ($receiver) {
      return $receiver.runClocksHigh;
    }, function ($receiver, value) {
      $receiver.runClocksHigh = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('interruptPreemptionCount', 1, function ($receiver) {
      return $receiver.interruptPreemptionCount;
    }, function ($receiver, value) {
      $receiver.interruptPreemptionCount = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('threadPreemptionCount', 1, function ($receiver) {
      return $receiver.threadPreemptionCount;
    }, function ($receiver, value) {
      $receiver.threadPreemptionCount = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('releaseCount', 1, function ($receiver) {
      return $receiver.releaseCount;
    }, function ($receiver, value) {
      $receiver.releaseCount = value;
    }), INT32_getInstance())]);
  }
  function SceKernelThreadInfo$SceKernelThreadInfo$Companion_init$lambda() {
    return new SceKernelThreadInfo();
  }
  SceKernelThreadInfo$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var SceKernelThreadInfo$Companion_instance = null;
  function SceKernelThreadInfo$Companion_getInstance() {
    if (SceKernelThreadInfo$Companion_instance === null) {
      new SceKernelThreadInfo$Companion();
    }
    return SceKernelThreadInfo$Companion_instance;
  }
  SceKernelThreadInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SceKernelThreadInfo',
    interfaces: []
  };
  function PspThreadAttributes() {
    PspThreadAttributes_instance = this;
    this.None = 0;
    this.LowFF = 255;
    this.Vfpu = 16384;
    this.V0x2000 = 8192;
    this.V0x4000 = 16384;
    this.V0x400000 = 4194304;
    this.V0x800000 = 8388608;
    this.V0xf00000 = 15728640;
    this.V0x8000000 = 134217728;
    this.V0xf000000 = 251658240;
    this.User = (new Kotlin.Long(-2147483648, 0)).toInt();
    this.UsbWlan = (new Kotlin.Long(-1610612736, 0)).toInt();
    this.Vsh = (new Kotlin.Long(-1073741824, 0)).toInt();
    this.NoFillStack = 1048576;
    this.ClearStack = 2097152;
    this.ValidMask = this.LowFF | this.Vfpu | this.User | this.UsbWlan | this.Vsh | this.NoFillStack | this.ClearStack | this.V0x2000 | this.V0x4000 | this.V0x400000 | this.V0x800000 | this.V0xf00000 | this.V0x8000000 | this.V0xf000000;
  }
  PspThreadAttributes.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'PspThreadAttributes',
    interfaces: []
  };
  var PspThreadAttributes_instance = null;
  function PspThreadAttributes_getInstance() {
    if (PspThreadAttributes_instance === null) {
      new PspThreadAttributes();
    }
    return PspThreadAttributes_instance;
  }
  function TimeManager(emulator) {
    this.emulator_gqh32o$_0 = emulator;
  }
  Object.defineProperty(TimeManager.prototype, 'emulator', {
    get: function () {
      return this.emulator_gqh32o$_0;
    }
  });
  TimeManager.prototype.getTimeInMillisecondsDouble = function () {
    return klock.Klock.currentTimeMillisDouble();
  };
  TimeManager.prototype.getTimeInMilliseconds = function () {
    return klock.Klock.currentTimeMillis();
  };
  TimeManager.prototype.getTimeInMicroseconds = function () {
    return currentTimeMicro(klock.Klock);
  };
  TimeManager.prototype.getTimeInMicrosecondsDouble = function () {
    return currentTimeMicroDouble(klock.Klock);
  };
  TimeManager.prototype.getTimeInMicrosecondsInt = function () {
    return currentTimeMicroInt(klock.Klock);
  };
  TimeManager.prototype.getTimeInSeconds = function () {
    return numberToInt(klock.Klock.currentTimeMillisDouble() / 1000.0);
  };
  TimeManager.prototype.reset = function () {
  };
  TimeManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TimeManager',
    interfaces: [WithEmulator]
  };
  var TimeSpan_0 = $module$klock_js.com.soywiz.klock.TimeSpan;
  function get_microseconds($receiver) {
    var $receiver_0 = numberToDouble($receiver) / 1000000.0;
    return TimeSpan_0.Companion.fromMilliseconds_za3lpa$(numberToInt(numberToDouble($receiver_0) * 1000.0));
  }
  function ScePspDateTime(year, month, day, hour, minute, second, microsecond) {
    ScePspDateTime$Companion_getInstance();
    if (year === void 0)
      year = 0;
    if (month === void 0)
      month = 0;
    if (day === void 0)
      day = 0;
    if (hour === void 0)
      hour = 0;
    if (minute === void 0)
      minute = 0;
    if (second === void 0)
      second = 0;
    if (microsecond === void 0)
      microsecond = 0;
    this.year = year;
    this.month = month;
    this.day = day;
    this.hour = hour;
    this.minute = minute;
    this.second = second;
    this.microsecond = microsecond;
  }
  Object.defineProperty(ScePspDateTime.prototype, 'date', {
    get: function () {
      return DateTime.Companion.createClamped_ui44o2$(this.year, this.month, this.day, this.hour, this.minute, this.second, this.microsecond / 1000 | 0);
    }
  });
  Object.defineProperty(ScePspDateTime.prototype, 'microAdjust', {
    get: function () {
      return this.microsecond % 1000;
    }
  });
  Object.defineProperty(ScePspDateTime.prototype, 'tick', {
    get: function () {
      return (new Kotlin.Long(-13910016, 14467070)).add(this.date.unix.multiply(Kotlin.Long.fromInt(1000))).add(Kotlin.Long.fromInt(this.microAdjust));
    }
  });
  function ScePspDateTime$Companion() {
    ScePspDateTime$Companion_instance = this;
    Struct.call(this, ScePspDateTime$ScePspDateTime$Companion_init$lambda, [AS(getPropertyCallableRef('year', 1, function ($receiver) {
      return $receiver.year;
    }, function ($receiver, value) {
      $receiver.year = value;
    }), UINT16_getInstance()), AS(getPropertyCallableRef('month', 1, function ($receiver) {
      return $receiver.month;
    }, function ($receiver, value) {
      $receiver.month = value;
    }), UINT16_getInstance()), AS(getPropertyCallableRef('day', 1, function ($receiver) {
      return $receiver.day;
    }, function ($receiver, value) {
      $receiver.day = value;
    }), UINT16_getInstance()), AS(getPropertyCallableRef('hour', 1, function ($receiver) {
      return $receiver.hour;
    }, function ($receiver, value) {
      $receiver.hour = value;
    }), UINT16_getInstance()), AS(getPropertyCallableRef('minute', 1, function ($receiver) {
      return $receiver.minute;
    }, function ($receiver, value) {
      $receiver.minute = value;
    }), UINT16_getInstance()), AS(getPropertyCallableRef('second', 1, function ($receiver) {
      return $receiver.second;
    }, function ($receiver, value) {
      $receiver.second = value;
    }), UINT16_getInstance()), AS(getPropertyCallableRef('microsecond', 1, function ($receiver) {
      return $receiver.microsecond;
    }, function ($receiver, value) {
      $receiver.microsecond = value;
    }), INT32_getInstance())]);
    this.EPOCH_TICKS = new Kotlin.Long(-13910016, 14467070);
  }
  ScePspDateTime$Companion.prototype.invoke_yatgbp$ = function (date, microAdjust) {
    if (microAdjust === void 0)
      microAdjust = 0;
    return new ScePspDateTime(date.year, date.month, date.dayOfMonth, date.hours, date.minutes, date.seconds, (date.milliseconds * 1000 | 0) + microAdjust | 0);
  };
  ScePspDateTime$Companion.prototype.invoke_s8cxhz$ = function (ticks) {
    var epochAdjust = ticks.subtract(new Kotlin.Long(-13910016, 14467070));
    return ScePspDateTime$Companion_getInstance().invoke_yatgbp$(DateTime.Companion.fromUnix_s8cxhz$(epochAdjust.div(Kotlin.Long.fromInt(1000))), epochAdjust.modulo(Kotlin.Long.fromInt(1000)).toInt());
  };
  function ScePspDateTime$ScePspDateTime$Companion_init$lambda() {
    return ScePspDateTime$Companion_getInstance().invoke_s8cxhz$(Kotlin.Long.ZERO);
  }
  ScePspDateTime$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var ScePspDateTime$Companion_instance = null;
  function ScePspDateTime$Companion_getInstance() {
    if (ScePspDateTime$Companion_instance === null) {
      new ScePspDateTime$Companion();
    }
    return ScePspDateTime$Companion_instance;
  }
  ScePspDateTime.prototype.write_39qel5$ = function (s) {
    write_0(s, ScePspDateTime$Companion_getInstance(), this);
  };
  ScePspDateTime.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ScePspDateTime',
    interfaces: []
  };
  ScePspDateTime.prototype.component1 = function () {
    return this.year;
  };
  ScePspDateTime.prototype.component2 = function () {
    return this.month;
  };
  ScePspDateTime.prototype.component3 = function () {
    return this.day;
  };
  ScePspDateTime.prototype.component4 = function () {
    return this.hour;
  };
  ScePspDateTime.prototype.component5 = function () {
    return this.minute;
  };
  ScePspDateTime.prototype.component6 = function () {
    return this.second;
  };
  ScePspDateTime.prototype.component7 = function () {
    return this.microsecond;
  };
  ScePspDateTime.prototype.copy_ui44o2$ = function (year, month, day, hour, minute, second, microsecond) {
    return new ScePspDateTime(year === void 0 ? this.year : year, month === void 0 ? this.month : month, day === void 0 ? this.day : day, hour === void 0 ? this.hour : hour, minute === void 0 ? this.minute : minute, second === void 0 ? this.second : second, microsecond === void 0 ? this.microsecond : microsecond);
  };
  ScePspDateTime.prototype.toString = function () {
    return 'ScePspDateTime(year=' + Kotlin.toString(this.year) + (', month=' + Kotlin.toString(this.month)) + (', day=' + Kotlin.toString(this.day)) + (', hour=' + Kotlin.toString(this.hour)) + (', minute=' + Kotlin.toString(this.minute)) + (', second=' + Kotlin.toString(this.second)) + (', microsecond=' + Kotlin.toString(this.microsecond)) + ')';
  };
  ScePspDateTime.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.year) | 0;
    result = result * 31 + Kotlin.hashCode(this.month) | 0;
    result = result * 31 + Kotlin.hashCode(this.day) | 0;
    result = result * 31 + Kotlin.hashCode(this.hour) | 0;
    result = result * 31 + Kotlin.hashCode(this.minute) | 0;
    result = result * 31 + Kotlin.hashCode(this.second) | 0;
    result = result * 31 + Kotlin.hashCode(this.microsecond) | 0;
    return result;
  };
  ScePspDateTime.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.year, other.year) && Kotlin.equals(this.month, other.month) && Kotlin.equals(this.day, other.day) && Kotlin.equals(this.hour, other.hour) && Kotlin.equals(this.minute, other.minute) && Kotlin.equals(this.second, other.second) && Kotlin.equals(this.microsecond, other.microsecond)))));
  };
  function ExceptionManagerForKernel(emulator) {
    SceModule.call(this, emulator, 'ExceptionManagerForKernel', 65553, 'exceptionman.prx', 'sceExceptionManager');
  }
  ExceptionManagerForKernel.prototype.sceKernelRegisterDefaultExceptionHandler_za3lpa$ = function (exceptionHandlerFunction) {
    return 0;
  };
  ExceptionManagerForKernel.prototype.sceKernelRegisterNmiHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(363710562);
  };
  ExceptionManagerForKernel.prototype.ExceptionManagerForKernel_60DFC510_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1625277712);
  };
  ExceptionManagerForKernel.prototype.ExceptionManagerForKernel_792C424C_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2032943692);
  };
  ExceptionManagerForKernel.prototype.ExceptionManagerForKernel_A966D178_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1452879496, 0));
  };
  ExceptionManagerForKernel.prototype.sceKernelReleaseNmiHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1319938103, 0));
  };
  ExceptionManagerForKernel.prototype.ExceptionManagerForKernel_CF57A486_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-816339834, 0));
  };
  ExceptionManagerForKernel.prototype.ExceptionManagerForKernel_D74DECBB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-682758981, 0));
  };
  ExceptionManagerForKernel.prototype.ExceptionManagerForKernel_E1F6B00B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-503926773, 0));
  };
  ExceptionManagerForKernel.prototype.ExceptionManagerForKernel_F937D843_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-113780669, 0));
  };
  function ExceptionManagerForKernel$registerModule$lambda(this$ExceptionManagerForKernel) {
    return function ($receiver, it) {
      return this$ExceptionManagerForKernel.sceKernelRegisterDefaultExceptionHandler_za3lpa$($receiver.int);
    };
  }
  function ExceptionManagerForKernel$registerModule$lambda_0(this$ExceptionManagerForKernel) {
    return function (it) {
      this$ExceptionManagerForKernel.sceKernelRegisterNmiHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function ExceptionManagerForKernel$registerModule$lambda_1(this$ExceptionManagerForKernel) {
    return function (it) {
      this$ExceptionManagerForKernel.ExceptionManagerForKernel_60DFC510_xt3zvs$(it);
      return Unit;
    };
  }
  function ExceptionManagerForKernel$registerModule$lambda_2(this$ExceptionManagerForKernel) {
    return function (it) {
      this$ExceptionManagerForKernel.ExceptionManagerForKernel_792C424C_xt3zvs$(it);
      return Unit;
    };
  }
  function ExceptionManagerForKernel$registerModule$lambda_3(this$ExceptionManagerForKernel) {
    return function (it) {
      this$ExceptionManagerForKernel.ExceptionManagerForKernel_A966D178_xt3zvs$(it);
      return Unit;
    };
  }
  function ExceptionManagerForKernel$registerModule$lambda_4(this$ExceptionManagerForKernel) {
    return function (it) {
      this$ExceptionManagerForKernel.sceKernelReleaseNmiHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function ExceptionManagerForKernel$registerModule$lambda_5(this$ExceptionManagerForKernel) {
    return function (it) {
      this$ExceptionManagerForKernel.ExceptionManagerForKernel_CF57A486_xt3zvs$(it);
      return Unit;
    };
  }
  function ExceptionManagerForKernel$registerModule$lambda_6(this$ExceptionManagerForKernel) {
    return function (it) {
      this$ExceptionManagerForKernel.ExceptionManagerForKernel_D74DECBB_xt3zvs$(it);
      return Unit;
    };
  }
  function ExceptionManagerForKernel$registerModule$lambda_7(this$ExceptionManagerForKernel) {
    return function (it) {
      this$ExceptionManagerForKernel.ExceptionManagerForKernel_E1F6B00B_xt3zvs$(it);
      return Unit;
    };
  }
  function ExceptionManagerForKernel$registerModule$lambda_8(this$ExceptionManagerForKernel) {
    return function (it) {
      this$ExceptionManagerForKernel.ExceptionManagerForKernel_F937D843_xt3zvs$(it);
      return Unit;
    };
  }
  ExceptionManagerForKernel.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceKernelRegisterDefaultExceptionHandler', Kotlin.Long.fromInt(1448872718), 150, void 0, ExceptionManagerForKernel$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('sceKernelRegisterNmiHandler', Kotlin.Long.fromInt(363710562), 150, void 0, ExceptionManagerForKernel$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('ExceptionManagerForKernel_60DFC510', Kotlin.Long.fromInt(1625277712), 150, void 0, ExceptionManagerForKernel$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('ExceptionManagerForKernel_792C424C', Kotlin.Long.fromInt(2032943692), 150, void 0, ExceptionManagerForKernel$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('ExceptionManagerForKernel_A966D178', new Kotlin.Long(-1452879496, 0), 150, void 0, ExceptionManagerForKernel$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReleaseNmiHandler', new Kotlin.Long(-1319938103, 0), 150, void 0, ExceptionManagerForKernel$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('ExceptionManagerForKernel_CF57A486', new Kotlin.Long(-816339834, 0), 150, void 0, ExceptionManagerForKernel$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('ExceptionManagerForKernel_D74DECBB', new Kotlin.Long(-682758981, 0), 150, void 0, ExceptionManagerForKernel$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('ExceptionManagerForKernel_E1F6B00B', new Kotlin.Long(-503926773, 0), 150, void 0, ExceptionManagerForKernel$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('ExceptionManagerForKernel_F937D843', new Kotlin.Long(-113780669, 0), 150, void 0, ExceptionManagerForKernel$registerModule$lambda_8(this));
  };
  ExceptionManagerForKernel.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ExceptionManagerForKernel',
    interfaces: [SceModule]
  };
  function InterruptManager_0(emulator) {
    SceModule.call(this, emulator, 'InterruptManager', 1073741841, 'interruptman.prx', 'sceInterruptManager');
    this.interruptManager = emulator.interruptManager;
  }
  InterruptManager_0.prototype.sceKernelRegisterSubIntrHandler_usgm40$ = function (thread, interrupt, handlerIndex, callbackAddress, callbackArgument) {
    var intr = this.interruptManager.get_vux9f0$(interrupt, handlerIndex);
    intr.address = callbackAddress;
    intr.argument = callbackArgument;
    intr.enabled = true;
    intr.cpuState = thread.state;
    return 0;
  };
  InterruptManager_0.prototype.sceKernelEnableSubIntr_vux9f0$ = function (interrupt, handlerIndex) {
    var intr = this.interruptManager.get_vux9f0$(interrupt, handlerIndex);
    intr.enabled = true;
    return 0;
  };
  InterruptManager_0.prototype.sceKernelDisableSubIntr_vux9f0$ = function (interrupt, handlerIndex) {
    var intr = this.interruptManager.get_vux9f0$(interrupt, handlerIndex);
    intr.enabled = false;
    return 0;
  };
  InterruptManager_0.prototype.sceKernelSuspendSubIntr_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1555408779);
  };
  InterruptManager_0.prototype.sceKernelResumeSubIntr_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2019614940);
  };
  InterruptManager_0.prototype.QueryIntrHandlerInfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-756533697, 0));
  };
  InterruptManager_0.prototype.sceKernelReleaseSubIntrHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-702650015, 0));
  };
  InterruptManager_0.prototype.sceKernelRegisterUserSpaceIntrStack_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-287031481, 0));
  };
  InterruptManager_0.prototype.sceKernelIsSubInterruptOccurred_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-62688072, 0));
  };
  function InterruptManager$registerModule$lambda(this$InterruptManager) {
    return function ($receiver, it) {
      return this$InterruptManager.sceKernelRegisterSubIntrHandler_usgm40$($receiver.thread, $receiver.int, $receiver.int, $receiver.int, $receiver.int);
    };
  }
  function InterruptManager$registerModule$lambda_0(this$InterruptManager) {
    return function ($receiver, it) {
      return this$InterruptManager.sceKernelEnableSubIntr_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function InterruptManager$registerModule$lambda_1(this$InterruptManager) {
    return function ($receiver, it) {
      return this$InterruptManager.sceKernelDisableSubIntr_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function InterruptManager$registerModule$lambda_2(this$InterruptManager) {
    return function (it) {
      this$InterruptManager.sceKernelSuspendSubIntr_xt3zvs$(it);
      return Unit;
    };
  }
  function InterruptManager$registerModule$lambda_3(this$InterruptManager) {
    return function (it) {
      this$InterruptManager.sceKernelResumeSubIntr_xt3zvs$(it);
      return Unit;
    };
  }
  function InterruptManager$registerModule$lambda_4(this$InterruptManager) {
    return function (it) {
      this$InterruptManager.QueryIntrHandlerInfo_xt3zvs$(it);
      return Unit;
    };
  }
  function InterruptManager$registerModule$lambda_5(this$InterruptManager) {
    return function (it) {
      this$InterruptManager.sceKernelReleaseSubIntrHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function InterruptManager$registerModule$lambda_6(this$InterruptManager) {
    return function (it) {
      this$InterruptManager.sceKernelRegisterUserSpaceIntrStack_xt3zvs$(it);
      return Unit;
    };
  }
  function InterruptManager$registerModule$lambda_7(this$InterruptManager) {
    return function (it) {
      this$InterruptManager.sceKernelIsSubInterruptOccurred_xt3zvs$(it);
      return Unit;
    };
  }
  InterruptManager_0.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceKernelRegisterSubIntrHandler', new Kotlin.Long(-905665863, 0), 150, void 0, InterruptManager$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceKernelEnableSubIntr', new Kotlin.Long(-74571028, 0), 150, void 0, InterruptManager$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceKernelDisableSubIntr', new Kotlin.Long(-1976003567, 0), 150, void 0, InterruptManager$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSuspendSubIntr', Kotlin.Long.fromInt(1555408779), 150, void 0, InterruptManager$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceKernelResumeSubIntr', Kotlin.Long.fromInt(2019614940), 150, void 0, InterruptManager$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('QueryIntrHandlerInfo', new Kotlin.Long(-756533697, 0), 150, void 0, InterruptManager$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReleaseSubIntrHandler', new Kotlin.Long(-702650015, 0), 150, void 0, InterruptManager$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceKernelRegisterUserSpaceIntrStack', new Kotlin.Long(-287031481, 0), 150, void 0, InterruptManager$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceKernelIsSubInterruptOccurred', new Kotlin.Long(-62688072, 0), 150, void 0, InterruptManager$registerModule$lambda_7(this));
  };
  InterruptManager_0.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InterruptManager',
    interfaces: [SceModule]
  };
  function IoFileMgrForUser(emulator) {
    IoFileMgrForUser$Companion_getInstance();
    SceModule.call(this, emulator, 'IoFileMgrForUser', 1073807377, 'iofilemgr.prx', 'sceIOFileManager');
  }
  function IoFileMgrForUser$Companion() {
    IoFileMgrForUser$Companion_instance = this;
    this.EMULATOR_DEVCTL__GET_HAS_DISPLAY = 1;
    this.EMULATOR_DEVCTL__SEND_OUTPUT = 2;
    this.EMULATOR_DEVCTL__IS_EMULATOR = 3;
    this.EMULATOR_DEVCTL__SEND_CTRLDATA = 16;
    this.EMULATOR_DEVCTL__EMIT_SCREENSHOT = 32;
  }
  IoFileMgrForUser$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var IoFileMgrForUser$Companion_instance = null;
  function IoFileMgrForUser$Companion_getInstance() {
    if (IoFileMgrForUser$Companion_instance === null) {
      new IoFileMgrForUser$Companion();
    }
    return IoFileMgrForUser$Companion_instance;
  }
  Object.defineProperty(IoFileMgrForUser.prototype, 'fileDescriptors', {
    get: function () {
      return this.emulator.fileManager.fileDescriptors;
    }
  });
  Object.defineProperty(IoFileMgrForUser.prototype, 'directoryDescriptors', {
    get: function () {
      return this.emulator.fileManager.directoryDescriptors;
    }
  });
  IoFileMgrForUser.prototype._resolve_0 = function (path) {
    var resolved = get_fileManager(this).resolve_61zpoe$(path);
    var $this = this.logger;
    var level = LogLevel.TRACE;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'resolved:' + resolved);
    }
    return resolved;
  };
  IoFileMgrForUser.prototype.normalizePath_0 = function ($receiver) {
    return replace_0(replace_0(replace($receiver, 92, 47), './', '/'), '//', '/');
  };
  IoFileMgrForUser.prototype.resolve_0 = function (path) {
    var npath = path != null ? this.normalizePath_0(path) : null;
    var $this = this.logger;
    var level = LogLevel.TRACE;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'resolve:' + toString(path));
    }
    var $this_0 = this.logger;
    var level_0 = LogLevel.TRACE;
    if ($this_0.isEnabled_ci8eq1$(level_0)) {
      $this_0.actualLog_t189ph$(level_0, 'resolveNormalized:' + toString(npath));
    }
    return this._resolve_0(ensureNotNull(npath));
  };
  IoFileMgrForUser.prototype._sceIoOpen_j3bdlb$ = function (thread_0, fileId_0, fileName_0, flags_0, mode_0, continuation_0, suspended) {
    var instance = new Coroutine$_sceIoOpen_j3bdlb$(this, thread_0, fileId_0, fileName_0, flags_0, mode_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_sceIoOpen_j3bdlb$($this, thread_0, fileId_0, fileName_0, flags_0, mode_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 6;
    this.$this = $this;
    this.local$file = void 0;
    this.local$thread = thread_0;
    this.local$fileId = fileId_0;
    this.local$fileName = fileName_0;
    this.local$flags = flags_0;
    this.local$mode = mode_0;
  }
  Coroutine$_sceIoOpen_j3bdlb$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_sceIoOpen_j3bdlb$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_sceIoOpen_j3bdlb$.prototype.constructor = Coroutine$_sceIoOpen_j3bdlb$;
  Coroutine$_sceIoOpen_j3bdlb$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            var $this = this.$this.logger;
            var level = LogLevel.WARN;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'WIP: _sceIoOpen(' + this.local$thread.name + '): ' + this.local$fileId + ', ' + toString(this.local$fileName) + ', ' + this.local$flags + ', ' + this.local$mode);
            }

            var $this_0 = this.$this.logger;
            var level_0 = LogLevel.WARN;
            if ($this_0.isEnabled_ci8eq1$(level_0)) {
              $this_0.actualLog_t189ph$(level_0, ' --> normalized=  ' + toString(this.local$fileName != null ? this.$this.normalizePath_0(this.local$fileName) : null));
            }

            if (this.local$fileName == null) {
              return SceKernelErrors_getInstance().ERROR_ERROR;
            }
             else {
              this.state_0 = 1;
              continue;
            }

          case 1:
            this.exceptionState_0 = 3;
            this.local$file = this.$this.fileDescriptors.get_za3lpa$(this.local$fileId);
            this.local$file.fileName = this.local$fileName;
            this.local$file.file = this.$this.resolve_0(this.local$fileName);
            if ((this.local$flags & FileOpenFlags_getInstance().Truncate) !== 0)
              tmp$ = VfsOpenMode.CREATE_OR_TRUNCATE;
            else if ((this.local$flags & FileOpenFlags_getInstance().Create) !== 0)
              tmp$ = VfsOpenMode.CREATE;
            else if ((this.local$flags & FileOpenFlags_getInstance().Write) !== 0)
              tmp$ = VfsOpenMode.WRITE;
            else
              tmp$ = VfsOpenMode.READ;
            var flags2 = tmp$;
            this.state_0 = 2;
            this.result_0 = this.local$file.file.open_7c7tmz$(flags2, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 2:
            this.local$file.stream = this.result_0;
            var $this_1 = this.$this.logger;
            var level_1 = LogLevel.WARN;
            if ($this_1.isEnabled_ci8eq1$(level_1)) {
              $this_1.actualLog_t189ph$(level_1, 'WIP: sceIoOpen(' + this.local$thread.name + ') --> ' + toString(this.local$fileName) + ', ' + this.local$file.id);
            }

            return this.local$file.id;
          case 3:
            this.exceptionState_0 = 6;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              println('Error openingfile(' + this.local$thread.name + '): ' + toString(this.local$fileName) + " : '" + toString(e.message) + "'");
              var $this_2 = this.$this.logger;
              var level_2 = LogLevel.WARN;
              if ($this_2.isEnabled_ci8eq1$(level_2)) {
                $this_2.actualLog_t189ph$(level_2, '   --> -2147418110');
              }
              return SceKernelErrors_getInstance().ERROR_ERRNO_FILE_NOT_FOUND;
            }
             else {
              throw e;
            }

          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            return;
          case 6:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 6)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoOpen_9i822r$ = function (thread, fileName, flags, mode, continuation) {
    return this._sceIoOpen_j3bdlb$(thread, this.fileDescriptors.alloc().id, fileName, flags, mode, continuation);
  };
  IoFileMgrForUser.prototype.toSce_9ayeyb$ = function ($receiver) {
    var tmp$, tmp$_0, tmp$_1;
    if ($receiver.isDirectory)
      tmp$ = IOFileModes_getInstance().DIR | IOFileModes_getInstance().Directory | IOFileModes_getInstance().CanRead;
    else
      tmp$ = IOFileModes_getInstance().FILE | IOFileModes_getInstance().File | IOFileModes_getInstance().CanRead | IOFileModes_getInstance().CanExecute | IOFileModes_getInstance().CanWrite;
    return new SceIoStat(511, tmp$, $receiver.size, ScePspDateTime$Companion_getInstance().invoke_yatgbp$(get_createDate($receiver)), ScePspDateTime$Companion_getInstance().invoke_yatgbp$(get_lastAccessDate($receiver)), ScePspDateTime$Companion_getInstance().invoke_yatgbp$(get_modifiedDate($receiver)), (tmp$_1 = (tmp$_0 = $receiver.extraInfo) == null || Kotlin.isIntArray(tmp$_0) ? tmp$_0 : null) != null ? tmp$_1 : new Int32Array([0, 0, 0, 0, 0, 0]));
  };
  IoFileMgrForUser.prototype.sceIoGetstat_ejruhl$ = function (fileName_0, ptr_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoGetstat_ejruhl$(this, fileName_0, ptr_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoGetstat_ejruhl$($this, fileName_0, ptr_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fileName = fileName_0;
    this.local$ptr = ptr_0;
  }
  Coroutine$sceIoGetstat_ejruhl$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoGetstat_ejruhl$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoGetstat_ejruhl$.prototype.constructor = Coroutine$sceIoGetstat_ejruhl$;
  Coroutine$sceIoGetstat_ejruhl$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $this = this.$this.logger;
            var level = LogLevel.WARN;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'sceIoGetstat:' + toString(this.local$fileName) + ',' + this.local$ptr);
            }

            var file = this.$this.resolve_0(this.local$fileName);
            this.state_0 = 2;
            this.result_0 = file.stat(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var fstat = this.result_0;
            var result = {v: null};
            if (fstat.exists) {
              var stat = this.$this.toSce_9ayeyb$(fstat);
              if (get_isNotNull(this.local$ptr)) {
                write_0(openSync_1(this.local$ptr), SceIoStat$Companion_getInstance(), stat);
              }
              result.v = 0;
            }
             else {
              result.v = SceKernelErrors_getInstance().ERROR_ERRNO_FILE_NOT_FOUND;
            }

            var $this_0 = this.$this.logger;
            var level_0 = LogLevel.WARN;
            if ($this_0.isEnabled_ci8eq1$(level_0)) {
              $this_0.actualLog_t189ph$(level_0, 'sceIoGetstat --> ' + result.v);
            }

            return result.v;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoLseek32_qt1dr2$ = function (fileId_0, offset_0, whence_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoLseek32_qt1dr2$(this, fileId_0, offset_0, whence_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoLseek32_qt1dr2$($this, fileId_0, offset_0, whence_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fileId = fileId_0;
    this.local$offset = offset_0;
    this.local$whence = whence_0;
  }
  Coroutine$sceIoLseek32_qt1dr2$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoLseek32_qt1dr2$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoLseek32_qt1dr2$.prototype.constructor = Coroutine$sceIoLseek32_qt1dr2$;
  Coroutine$sceIoLseek32_qt1dr2$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this._sceIoLseek_6bixgx$(this.local$fileId, Kotlin.Long.fromInt(this.local$offset), this.local$whence, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.toInt();
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoLseek_6bixgx$ = function (fileId, offset, whence, continuation) {
    return this._sceIoLseek_6bixgx$(fileId, offset, whence, continuation);
  };
  IoFileMgrForUser.prototype._sceIoLseek_6bixgx$ = function (fileId_0, offset_0, whence_0, continuation_0, suspended) {
    var instance = new Coroutine$_sceIoLseek_6bixgx$(this, fileId_0, offset_0, whence_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_sceIoLseek_6bixgx$($this, fileId_0, offset_0, whence_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$stream = void 0;
    this.local$fileId = fileId_0;
    this.local$offset = offset_0;
    this.local$whence = whence_0;
  }
  Coroutine$_sceIoLseek_6bixgx$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_sceIoLseek_6bixgx$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_sceIoLseek_6bixgx$.prototype.constructor = Coroutine$_sceIoLseek_6bixgx$;
  Coroutine$_sceIoLseek_6bixgx$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $this = this.$this.logger;
            var level = LogLevel.TRACE;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'WIP: _sceIoLseek: ' + this.local$fileId + ', ' + this.local$offset + ', ' + this.local$whence);
            }

            this.local$stream = this.$this.fileDescriptors.get_za3lpa$(this.local$fileId).stream;
            if (this.local$whence === SeekType_getInstance().Set) {
              this.local$tmp$ = this.local$offset;
              this.state_0 = 5;
              continue;
            }
             else {
              if (this.local$whence === SeekType_getInstance().Cur) {
                this.local$tmp$ = this.local$stream.position.add(this.local$offset);
                this.state_0 = 4;
                continue;
              }
               else {
                if (this.local$whence === SeekType_getInstance().End) {
                  this.state_0 = 2;
                  this.result_0 = this.local$stream.size(this);
                  if (this.result_0 === COROUTINE_SUSPENDED)
                    return COROUTINE_SUSPENDED;
                  break;
                }
                 else {
                  if (this.local$whence === SeekType_getInstance().Tell)
                    this.local$tmp$ = this.local$stream.position;
                  else
                    this.local$tmp$ = invalidOp('Invalid sceIoLseek32');
                  this.state_0 = 3;
                  continue;
                }
              }
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = this.result_0.add(this.local$offset);
            this.state_0 = 3;
            continue;
          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            this.local$stream.position = this.local$tmp$;
            return this.local$stream.position;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoRead_xjseqw$ = function (fileId_0, dst_0, dstLen_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoRead_xjseqw$(this, fileId_0, dst_0, dstLen_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoRead_xjseqw$($this, fileId_0, dst_0, dstLen_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fd = void 0;
    this.local$stream = void 0;
    this.local$out = void 0;
    this.local$initPosition = void 0;
    this.local$read = void 0;
    this.local$$this = void 0;
    this.local$level = void 0;
    this.local$tmp$ = void 0;
    this.local$closure$continuation = void 0;
    this.local$tmp$_0 = void 0;
    this.local$fileId = fileId_0;
    this.local$dst = dst_0;
    this.local$dstLen = dstLen_0;
  }
  Coroutine$sceIoRead_xjseqw$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoRead_xjseqw$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoRead_xjseqw$.prototype.constructor = Coroutine$sceIoRead_xjseqw$;
  Coroutine$sceIoRead_xjseqw$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $this = this.$this.logger;
            var level = LogLevel.INFO;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'WIP: sceIoRead: ' + this.local$fileId + ', ' + this.local$dst + ', ' + this.local$dstLen);
            }

            this.local$fd = this.$this.fileDescriptors.get_za3lpa$(this.local$fileId);
            this.local$stream = this.local$fd.stream;
            var adstLen = Math_0.max(0, this.local$dstLen);
            this.local$out = new Int8Array(adstLen);
            this.local$initPosition = this.local$stream.position;
            this.state_0 = 2;
            this.result_0 = this.local$stream.read_mj6st8$(this.local$out, 0, adstLen, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$read = this.result_0;
            this.local$$this = this.$this.logger;
            this.local$level = LogLevel.INFO;
            if (this.local$$this.isEnabled_ci8eq1$(this.local$level)) {
              this.local$tmp$ = this.local$$this.actualLog_t189ph$;
              this.local$closure$continuation = this;
              this.state_0 = 3;
              this.result_0 = this.local$stream.getLength(this.local$closure$continuation);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 5;
              continue;
            }

          case 3:
            this.local$tmp$_0 = this.local$closure$continuation.result_0;
            this.state_0 = 4;
            this.result_0 = this.local$stream.getAvailable(this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            this.local$tmp$.call(this.local$$this, this.local$level, ' --> ' + this.local$fileId + ', ' + this.local$dst + ', ' + this.local$dstLen + ' : POS(' + this.local$initPosition + ' -> ' + this.local$stream.position + ') LEN(' + this.local$tmp$_0 + ') AVAILABLE(' + this.local$closure$continuation.result_0 + ') // ' + this.local$fd.fileName + ' // read=' + this.local$read);
            this.state_0 = 5;
            continue;
          case 5:
            writeBytes_0(this.local$dst, this.local$out, 0, this.local$read);
            return this.local$read;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoWrite_xjseqw$ = function (fileId_0, ptr_0, size_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoWrite_xjseqw$(this, fileId_0, ptr_0, size_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoWrite_xjseqw$($this, fileId_0, ptr_0, size_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 4;
    this.$this = $this;
    this.local$fileId = fileId_0;
    this.local$ptr = ptr_0;
    this.local$size = size_0;
  }
  Coroutine$sceIoWrite_xjseqw$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoWrite_xjseqw$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoWrite_xjseqw$.prototype.constructor = Coroutine$sceIoWrite_xjseqw$;
  Coroutine$sceIoWrite_xjseqw$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $this = this.$this.logger;
            var level = LogLevel.WARN;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'WIP: sceIoWrite: ' + this.local$fileId + ', ' + this.local$ptr + ', ' + this.local$size);
            }

            this.exceptionState_0 = 2;
            println('----> ' + toString_0(readBytes_1(this.local$ptr, this.local$size), lang.UTF8));
            var stream = this.$this.fileDescriptors.get_za3lpa$(this.local$fileId).stream;
            var bytes = readBytes_1(this.local$ptr, this.local$size);
            this.state_0 = 1;
            this.result_0 = stream.write_mj6st8$(bytes, void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            this.exceptionState_0 = 4;
            this.state_0 = 3;
            continue;
          case 2:
            this.exceptionState_0 = 4;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              println('### error writting: ' + toString(e.message));
            }
             else
              throw e;
            this.state_0 = 3;
            continue;
          case 3:
            return 0;
          case 4:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 4)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoClose_za3lpa$ = function (fileId, continuation) {
    var $this = this.logger;
    var level = LogLevel.WARN;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'WIP: sceIoClose: ' + fileId);
    }
    this.fileDescriptors.freeById_za3lpa$(fileId);
    return 0;
  };
  IoFileMgrForUser.prototype.sceIoDevctl_cza7g9$ = function (deviceName, command, inputPointer, inputLength, outputPointer, outputLength, continuation) {
    if (equals(deviceName, 'kemulator:') || equals(deviceName, 'emulator:')) {
      if (command === IoFileMgrForUser$Companion_getInstance().EMULATOR_DEVCTL__IS_EMULATOR)
        return 0;
      else if (command === IoFileMgrForUser$Companion_getInstance().EMULATOR_DEVCTL__GET_HAS_DISPLAY) {
        outputPointer.sw_vux9f0$(0, get_display(this).exposeDisplay ? 1 : 0);
        return 0;
      }
       else if (command === IoFileMgrForUser$Companion_getInstance().EMULATOR_DEVCTL__SEND_OUTPUT) {
        this.emulator.output.append_gw00v9$(toString_0(readBytes_1(inputPointer, inputLength), lang.UTF8));
        return 0;
      }
       else if (command === IoFileMgrForUser$Companion_getInstance().EMULATOR_DEVCTL__SEND_CTRLDATA) {
        println('EMULATOR_DEVCTL__SEND_CTRLDATA');
        return 0;
      }
       else if (command === IoFileMgrForUser$Companion_getInstance().EMULATOR_DEVCTL__EMIT_SCREENSHOT) {
        println('EMULATOR_DEVCTL__EMIT_SCREENSHOT');
        return 0;
      }
       else {
        println('Unhandled emulator command ' + command);
        return -1;
      }
    }
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'WIP: sceIoDevctl: ' + toString(deviceName) + ', ' + command + ', ' + inputPointer + ', ' + inputLength + ', ' + outputPointer + ', ' + outputLength);
    }
    return -1;
  };
  IoFileMgrForUser.prototype.sceIoDopen_pdl1vj$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoDopen_pdl1vj$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoDopen_pdl1vj$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 6;
    this.$this = $this;
    this.local$dd = void 0;
    this.local$path = path_0;
  }
  Coroutine$sceIoDopen_pdl1vj$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoDopen_pdl1vj$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoDopen_pdl1vj$.prototype.constructor = Coroutine$sceIoDopen_pdl1vj$;
  Coroutine$sceIoDopen_pdl1vj$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $this = this.$this.logger;
            var level = LogLevel.ERROR;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'sceIoDopen:' + toString(this.local$path));
            }

            this.exceptionState_0 = 3;
            var $this_0 = this.$this.logger;
            var level_0 = LogLevel.ERROR;
            if ($this_0.isEnabled_ci8eq1$(level_0)) {
              $this_0.actualLog_t189ph$(level_0, 'sceIoDopen:' + toString(this.local$path));
            }

            this.local$dd = this.$this.directoryDescriptors.alloc();
            var dir = this.$this.resolve_0(this.local$path);
            this.local$dd.directory = dir;
            this.local$dd.pos = 0;
            this.state_0 = 1;
            this.result_0 = this.local$dd.directory.list(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            this.state_0 = 2;
            this.result_0 = toList_4(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 2:
            this.local$dd.files = this.result_0;
            return this.local$dd.id;
          case 3:
            this.exceptionState_0 = 6;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              println('ERROR AT sceIoDopen');
              printStackTrace(e);
              return -1;
            }
             else {
              throw e;
            }

          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            return;
          case 6:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 6)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoDread_o62i3q$ = function (id_0, ptr_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoDread_o62i3q$(this, id_0, ptr_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoDread_o62i3q$($this, id_0, ptr_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$dd = void 0;
    this.local$file = void 0;
    this.local$id = id_0;
    this.local$ptr = ptr_0;
  }
  Coroutine$sceIoDread_o62i3q$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoDread_o62i3q$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoDread_o62i3q$.prototype.constructor = Coroutine$sceIoDread_o62i3q$;
  Coroutine$sceIoDread_o62i3q$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            var $this = this.$this.logger;
            var level = LogLevel.ERROR;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'sceIoDread:' + this.local$id + ',' + this.local$ptr);
            }

            this.local$dd = this.$this.directoryDescriptors.get_za3lpa$(this.local$id);
            if (this.local$dd.remaining > 0) {
              this.local$file = this.local$dd.files.get_za3lpa$((tmp$ = this.local$dd.pos, this.local$dd.pos = tmp$ + 1 | 0, tmp$));
              this.state_0 = 2;
              this.result_0 = this.local$file.stat(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            var stat = this.result_0;
            var dirent = new HleIoDirent(this.$this.toSce_9ayeyb$(stat), this.local$file.basename, 0, 0);
            var $this_0 = this.$this.logger;
            var level_0 = LogLevel.ERROR;
            if ($this_0.isEnabled_ci8eq1$(level_0)) {
              $this_0.actualLog_t189ph$(level_0, 'sceIoDread --> ' + dirent);
            }

            write_0(openSync_1(this.local$ptr), HleIoDirent$Companion_getInstance(), dirent);
            this.state_0 = 3;
            continue;
          case 3:
            return this.local$dd.remaining;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoDclose_za3lpa$ = function (id, continuation) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceIoDclose:' + id);
    }
    this.directoryDescriptors.freeById_za3lpa$(id);
    return 0;
  };
  IoFileMgrForUser.prototype.sceIoChdir_pdl1vj$ = function (path, continuation) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceIoChdir:' + toString(path));
    }
    return 0;
  };
  IoFileMgrForUser.prototype.sceIoRmdir_pdl1vj$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoRmdir_pdl1vj$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoRmdir_pdl1vj$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$sceIoRmdir_pdl1vj$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoRmdir_pdl1vj$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoRmdir_pdl1vj$.prototype.constructor = Coroutine$sceIoRmdir_pdl1vj$;
  Coroutine$sceIoRmdir_pdl1vj$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $this = this.$this.logger;
            var level = LogLevel.ERROR;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'sceIoRmdir:' + toString(this.local$path));
            }

            this.state_0 = 2;
            this.result_0 = this.$this.resolve_0(this.local$path).delete(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoMkdir_pdl1vj$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoMkdir_pdl1vj$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoMkdir_pdl1vj$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$sceIoMkdir_pdl1vj$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoMkdir_pdl1vj$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoMkdir_pdl1vj$.prototype.constructor = Coroutine$sceIoMkdir_pdl1vj$;
  Coroutine$sceIoMkdir_pdl1vj$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $this = this.$this.logger;
            var level = LogLevel.ERROR;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'sceIoMkdir:' + toString(this.local$path));
            }

            this.state_0 = 2;
            this.result_0 = mkdirsSafe(this.$this.resolve_0(this.local$path), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$AsyncHandle(id, promise, result, done) {
    if (promise === void 0)
      promise = null;
    if (result === void 0)
      result = Kotlin.Long.ZERO;
    if (done === void 0)
      done = false;
    this.id_nswocu$_0 = id;
    this.promise = promise;
    this.result = result;
    this.done = done;
  }
  Object.defineProperty(IoFileMgrForUser$AsyncHandle.prototype, 'id', {
    get: function () {
      return this.id_nswocu$_0;
    }
  });
  IoFileMgrForUser$AsyncHandle.prototype.reset = function () {
    this.promise = null;
    this.result = Kotlin.Long.ZERO;
    this.done = false;
  };
  IoFileMgrForUser$AsyncHandle.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncHandle',
    interfaces: [PoolItem]
  };
  function IoFileMgrForUser$async$lambda(closure$callback_0, closure$res_0, this$IoFileMgrForUser_0, closure$name_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$async$lambda(closure$callback_0, closure$res_0, this$IoFileMgrForUser_0, closure$name_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$async$lambda(closure$callback_0, closure$res_0, this$IoFileMgrForUser_0, closure$name_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
    this.local$closure$res = closure$res_0;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$closure$name = closure$name_0;
    this.local$tmp$ = void 0;
  }
  Coroutine$IoFileMgrForUser$async$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$async$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$async$lambda.prototype.constructor = Coroutine$IoFileMgrForUser$async$lambda;
  Coroutine$IoFileMgrForUser$async$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$tmp$ = this.local$closure$res;
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$.asyncResult = this.result_0;
            var $this = this.local$this$IoFileMgrForUser.logger;
            var level = LogLevel.ERROR;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, '  async ' + this.local$closure$name + ' completed with result ' + this.local$closure$res.asyncResult);
            }

            return this.local$closure$res.asyncDone = true, Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.async_qjvyx9$ = function (fileId_0, name_0, doLater_0, callback_0, continuation_0, suspended) {
    var instance = new Coroutine$async_qjvyx9$(this, fileId_0, name_0, doLater_0, callback_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$async_qjvyx9$($this, fileId_0, name_0, doLater_0, callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$res = void 0;
    this.local$fileId = fileId_0;
    this.local$name = name_0;
    this.local$doLater = doLater_0;
    this.local$callback = callback_0;
  }
  Coroutine$async_qjvyx9$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$async_qjvyx9$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$async_qjvyx9$.prototype.constructor = Coroutine$async_qjvyx9$;
  Coroutine$async_qjvyx9$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$doLater === void 0)
              this.local$doLater = null;
            var $this = this.$this.logger;
            var level = LogLevel.ERROR;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'starting async ' + this.local$name);
            }

            this.local$res = this.$this.fileDescriptors.get_za3lpa$(this.local$fileId);
            var $this_0 = this.$this.logger;
            var level_0 = LogLevel.ERROR;
            if ($this_0.isEnabled_ci8eq1$(level_0)) {
              $this_0.actualLog_t189ph$(level_0, '  STARTED async ' + this.local$name + ' ---> fid=' + this.local$res.id);
            }

            this.local$res.asyncDone = false;
            this.local$res.doLater = this.local$doLater;
            this.state_0 = 2;
            this.result_0 = spawn(IoFileMgrForUser$async$lambda(this.local$callback, this.local$res, this.$this, this.local$name), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$res.asyncPromise = this.result_0;
            return this.local$res.id;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$sceIoOpenAsync$lambda(closure$thread_0, closure$fid_0, closure$filename_0, closure$flags_0, closure$mode_0, this$IoFileMgrForUser_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$sceIoOpenAsync$lambda(closure$thread_0, closure$fid_0, closure$filename_0, closure$flags_0, closure$mode_0, this$IoFileMgrForUser_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$sceIoOpenAsync$lambda(closure$thread_0, closure$fid_0, closure$filename_0, closure$flags_0, closure$mode_0, this$IoFileMgrForUser_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$thread = closure$thread_0;
    this.local$closure$fid = closure$fid_0;
    this.local$closure$filename = closure$filename_0;
    this.local$closure$flags = closure$flags_0;
    this.local$closure$mode = closure$mode_0;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
  }
  Coroutine$IoFileMgrForUser$sceIoOpenAsync$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$sceIoOpenAsync$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$sceIoOpenAsync$lambda.prototype.constructor = Coroutine$IoFileMgrForUser$sceIoOpenAsync$lambda;
  Coroutine$IoFileMgrForUser$sceIoOpenAsync$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser._sceIoOpen_j3bdlb$(this.local$closure$thread, this.local$closure$fid, this.local$closure$filename, this.local$closure$flags, this.local$closure$mode, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var res = this.result_0;
            var $this = this.local$this$IoFileMgrForUser.logger;
            var level = LogLevel.ERROR;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'sceIoOpenAsync --> ' + res);
            }

            return Kotlin.Long.fromInt(res);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoOpenAsync_9i822r$ = function (thread_0, filename_0, flags_0, mode_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoOpenAsync_9i822r$(this, thread_0, filename_0, flags_0, mode_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoOpenAsync_9i822r$($this, thread_0, filename_0, flags_0, mode_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$thread = thread_0;
    this.local$filename = filename_0;
    this.local$flags = flags_0;
    this.local$mode = mode_0;
  }
  Coroutine$sceIoOpenAsync_9i822r$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoOpenAsync_9i822r$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoOpenAsync_9i822r$.prototype.constructor = Coroutine$sceIoOpenAsync_9i822r$;
  Coroutine$sceIoOpenAsync_9i822r$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $this = this.$this.logger;
            var level = LogLevel.ERROR;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'sceIoOpenAsync:' + toString(this.local$filename) + ',' + this.local$flags + ',' + this.local$mode);
            }

            var fid = this.$this.fileDescriptors.alloc().id;
            this.state_0 = 2;
            this.result_0 = this.$this.async_qjvyx9$(fid, 'sceIoOpenAsync', void 0, IoFileMgrForUser$sceIoOpenAsync$lambda(this.local$thread, fid, this.local$filename, this.local$flags, this.local$mode, this.$this), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$sceIoReadAsync$lambda(closure$fileId_0, closure$outputPointer_0, closure$outputLength_0, this$IoFileMgrForUser_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$sceIoReadAsync$lambda(closure$fileId_0, closure$outputPointer_0, closure$outputLength_0, this$IoFileMgrForUser_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$sceIoReadAsync$lambda(closure$fileId_0, closure$outputPointer_0, closure$outputLength_0, this$IoFileMgrForUser_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$fileId = closure$fileId_0;
    this.local$closure$outputPointer = closure$outputPointer_0;
    this.local$closure$outputLength = closure$outputLength_0;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
  }
  Coroutine$IoFileMgrForUser$sceIoReadAsync$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$sceIoReadAsync$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$sceIoReadAsync$lambda.prototype.constructor = Coroutine$IoFileMgrForUser$sceIoReadAsync$lambda;
  Coroutine$IoFileMgrForUser$sceIoReadAsync$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoRead_xjseqw$(this.local$closure$fileId, this.local$closure$outputPointer, this.local$closure$outputLength, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var res = this.result_0;
            var $this = this.local$this$IoFileMgrForUser.logger;
            var level = LogLevel.ERROR;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, '::sceIoReadAsync --> ' + res);
            }

            return Kotlin.Long.fromInt(res);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoReadAsync_xjseqw$ = function (fileId_0, outputPointer_0, outputLength_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoReadAsync_xjseqw$(this, fileId_0, outputPointer_0, outputLength_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoReadAsync_xjseqw$($this, fileId_0, outputPointer_0, outputLength_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fileId = fileId_0;
    this.local$outputPointer = outputPointer_0;
    this.local$outputLength = outputLength_0;
  }
  Coroutine$sceIoReadAsync_xjseqw$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoReadAsync_xjseqw$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoReadAsync_xjseqw$.prototype.constructor = Coroutine$sceIoReadAsync_xjseqw$;
  Coroutine$sceIoReadAsync_xjseqw$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $this = this.$this.logger;
            var level = LogLevel.ERROR;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'sceIoReadAsync:' + this.local$fileId + ',' + this.local$outputPointer + ',' + this.local$outputLength);
            }

            this.state_0 = 2;
            this.result_0 = this.$this.async_qjvyx9$(this.local$fileId, 'sceIoReadAsync', void 0, IoFileMgrForUser$sceIoReadAsync$lambda(this.local$fileId, this.local$outputPointer, this.local$outputLength, this.$this), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$sceIoLseekAsync$lambda(closure$fileId_0, closure$offset_0, closure$whence_0, this$IoFileMgrForUser_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$sceIoLseekAsync$lambda(closure$fileId_0, closure$offset_0, closure$whence_0, this$IoFileMgrForUser_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$sceIoLseekAsync$lambda(closure$fileId_0, closure$offset_0, closure$whence_0, this$IoFileMgrForUser_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$fileId = closure$fileId_0;
    this.local$closure$offset = closure$offset_0;
    this.local$closure$whence = closure$whence_0;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
  }
  Coroutine$IoFileMgrForUser$sceIoLseekAsync$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$sceIoLseekAsync$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$sceIoLseekAsync$lambda.prototype.constructor = Coroutine$IoFileMgrForUser$sceIoLseekAsync$lambda;
  Coroutine$IoFileMgrForUser$sceIoLseekAsync$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoLseek_6bixgx$(this.local$closure$fileId, this.local$closure$offset, this.local$closure$whence, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var res = this.result_0;
            var $this = this.local$this$IoFileMgrForUser.logger;
            var level = LogLevel.ERROR;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, '::sceIoReadAsync --> ' + res);
            }

            return res;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoLseekAsync_6bixgx$ = function (fileId_0, offset_0, whence_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoLseekAsync_6bixgx$(this, fileId_0, offset_0, whence_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoLseekAsync_6bixgx$($this, fileId_0, offset_0, whence_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fileId = fileId_0;
    this.local$offset = offset_0;
    this.local$whence = whence_0;
  }
  Coroutine$sceIoLseekAsync_6bixgx$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoLseekAsync_6bixgx$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoLseekAsync_6bixgx$.prototype.constructor = Coroutine$sceIoLseekAsync_6bixgx$;
  Coroutine$sceIoLseekAsync_6bixgx$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.async_qjvyx9$(this.local$fileId, 'sceIoLseekAsync', void 0, IoFileMgrForUser$sceIoLseekAsync$lambda(this.local$fileId, this.local$offset, this.local$whence, this.$this), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$sceIoCloseAsync$lambda(closure$fileId_0, this$IoFileMgrForUser_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$sceIoCloseAsync$lambda(closure$fileId_0, this$IoFileMgrForUser_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$sceIoCloseAsync$lambda(closure$fileId_0, this$IoFileMgrForUser_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$fileId = closure$fileId_0;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
  }
  Coroutine$IoFileMgrForUser$sceIoCloseAsync$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$sceIoCloseAsync$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$sceIoCloseAsync$lambda.prototype.constructor = Coroutine$IoFileMgrForUser$sceIoCloseAsync$lambda;
  Coroutine$IoFileMgrForUser$sceIoCloseAsync$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoClose_za3lpa$(this.local$closure$fileId, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$sceIoCloseAsync$lambda_0(continuation_0, suspended) {
    var instance = new Coroutine$IoFileMgrForUser$sceIoCloseAsync$lambda_0(continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$IoFileMgrForUser$sceIoCloseAsync$lambda_0(continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
  }
  Coroutine$IoFileMgrForUser$sceIoCloseAsync$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$sceIoCloseAsync$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$sceIoCloseAsync$lambda_0.prototype.constructor = Coroutine$IoFileMgrForUser$sceIoCloseAsync$lambda_0;
  Coroutine$IoFileMgrForUser$sceIoCloseAsync$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return Kotlin.Long.ZERO;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoCloseAsync_za3lpa$ = function (fileId_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoCloseAsync_za3lpa$(this, fileId_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoCloseAsync_za3lpa$($this, fileId_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fileId = fileId_0;
  }
  Coroutine$sceIoCloseAsync_za3lpa$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoCloseAsync_za3lpa$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoCloseAsync_za3lpa$.prototype.constructor = Coroutine$sceIoCloseAsync_za3lpa$;
  Coroutine$sceIoCloseAsync_za3lpa$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $this = this.$this.logger;
            var level = LogLevel.ERROR;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'sceIoCloseAsync:' + this.local$fileId);
            }

            this.state_0 = 2;
            this.result_0 = this.$this.async_qjvyx9$(this.local$fileId, 'sceIoCloseAsync', IoFileMgrForUser$sceIoCloseAsync$lambda(this.local$fileId, this.$this), IoFileMgrForUser$sceIoCloseAsync$lambda_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.getFileDescriptor_0 = function (fileId) {
    var tmp$;
    return (tmp$ = this.fileDescriptors.tryGetById_za3lpa$(fileId)) != null ? tmp$ : sceKernelException(SceKernelErrors_getInstance().ERROR_KERNEL_BAD_FILE_DESCRIPTOR);
  };
  function IoFileMgrForUser$sceIoPollAsync$lambda$lambda(closure$doLater_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$sceIoPollAsync$lambda$lambda(closure$doLater_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$sceIoPollAsync$lambda$lambda(closure$doLater_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$doLater = closure$doLater_0;
  }
  Coroutine$IoFileMgrForUser$sceIoPollAsync$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$sceIoPollAsync$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$sceIoPollAsync$lambda$lambda.prototype.constructor = Coroutine$IoFileMgrForUser$sceIoPollAsync$lambda$lambda;
  Coroutine$IoFileMgrForUser$sceIoPollAsync$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$doLater(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoPollAsync_130n8c$ = function (fileId, out) {
    var tmp$, tmp$_0;
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceIoPollAsync:' + fileId + ',' + out);
    }
    var fd = this.getFileDescriptor_0(fileId);
    if (get_isNotNull(out)) {
      out.set_s8cxhz$(fd.asyncResult);
    }
    if (fd.asyncDone)
      tmp$ = 0;
    else
      tmp$ = 1;
    var outv = tmp$;
    if ((tmp$_0 = fd.doLater) != null) {
      go_0(get_coroutineContext(this), IoFileMgrForUser$sceIoPollAsync$lambda$lambda(tmp$_0));
    }
    var $this_0 = this.logger;
    var level_0 = LogLevel.ERROR;
    if ($this_0.isEnabled_ci8eq1$(level_0)) {
      $this_0.actualLog_t189ph$(level_0, '   sceIoPollAsync:' + fileId + ',' + out + ' -> ' + fd.asyncResult + ' -> outv=' + outv);
    }
    return outv;
  };
  IoFileMgrForUser.prototype.sceIoWaitAsyncCB_o62i3q$ = function (fileId_0, out_0, continuation_0, suspended) {
    var instance = new Coroutine$sceIoWaitAsyncCB_o62i3q$(this, fileId_0, out_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceIoWaitAsyncCB_o62i3q$($this, fileId_0, out_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fd = void 0;
    this.local$fileId = fileId_0;
    this.local$out = out_0;
  }
  Coroutine$sceIoWaitAsyncCB_o62i3q$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceIoWaitAsyncCB_o62i3q$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceIoWaitAsyncCB_o62i3q$.prototype.constructor = Coroutine$sceIoWaitAsyncCB_o62i3q$;
  Coroutine$sceIoWaitAsyncCB_o62i3q$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.local$fd = this.$this.getFileDescriptor_0(this.local$fileId);
            this.state_0 = 2;
            this.result_0 = (tmp$ = this.local$fd.asyncPromise) != null ? tmp$.await(this) : null;
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            if (get_isNotNull(this.local$out)) {
              this.local$out.sdw_6svq3l$(0, this.local$fd.asyncResult);
            }

            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IoFileMgrForUser.prototype.sceIoGetDevType_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(146633588);
  };
  IoFileMgrForUser.prototype.sceIoWriteAsync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(262974233);
  };
  IoFileMgrForUser.prototype.sceIoLseek32Async_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(456678799);
  };
  IoFileMgrForUser.prototype.sceIoGetFdList_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1546379980);
  };
  IoFileMgrForUser.prototype.sceIoIoctl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1667441737);
  };
  IoFileMgrForUser.prototype.sceIoUnassign_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1829283953);
  };
  IoFileMgrForUser.prototype.sceIoRename_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2005992352);
  };
  IoFileMgrForUser.prototype.sceIoSetAsyncCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1591081708, 0));
  };
  IoFileMgrForUser.prototype.sceIoSync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1416215681, 0));
  };
  IoFileMgrForUser.prototype.sceIoChangeAsyncPriority_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1298959745, 0));
  };
  IoFileMgrForUser.prototype.sceIoAssign_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1297733439, 0));
  };
  IoFileMgrForUser.prototype.sceIoChstat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1196998412, 0));
  };
  IoFileMgrForUser.prototype.sceIoGetAsyncStat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-888801066, 0));
  };
  IoFileMgrForUser.prototype.sceIoWaitAsync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-499192781, 0));
  };
  IoFileMgrForUser.prototype.sceIoCancel_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-390306447, 0));
  };
  IoFileMgrForUser.prototype.sceIoIoctlAsync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-379977429, 0));
  };
  IoFileMgrForUser.prototype.sceIoRemove_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-226845615, 0));
  };
  function IoFileMgrForUser$registerModule$lambda(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda;
  Coroutine$IoFileMgrForUser$registerModule$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoDevctl_cza7g9$(this.local$$receiver.str, this.local$$receiver.int, this.local$$receiver.ptr, this.local$$receiver.int, this.local$$receiver.ptr, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_0(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_0(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_0(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_0.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_0;
  Coroutine$IoFileMgrForUser$registerModule$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoOpen_9i822r$(this.local$$receiver.thread, this.local$$receiver.str, this.local$$receiver.int, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_1(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_1(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_1(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_1.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_1;
  Coroutine$IoFileMgrForUser$registerModule$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoLseek32_qt1dr2$(this.local$$receiver.int, this.local$$receiver.int, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_2(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_2(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_2(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_2.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_2;
  Coroutine$IoFileMgrForUser$registerModule$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoLseek_6bixgx$(this.local$$receiver.int, this.local$$receiver.long, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_3(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_3(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_3(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_3.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_3;
  Coroutine$IoFileMgrForUser$registerModule$lambda_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoWrite_xjseqw$(this.local$$receiver.int, this.local$$receiver.ptr, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_4(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_4(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_4(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_4.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_4.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_4.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_4;
  Coroutine$IoFileMgrForUser$registerModule$lambda_4.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoRead_xjseqw$(this.local$$receiver.int, this.local$$receiver.ptr, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_5(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_5(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_5(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_5.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_5.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_5.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_5;
  Coroutine$IoFileMgrForUser$registerModule$lambda_5.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoClose_za3lpa$(this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_6(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_6(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_6(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_6.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_6.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_6.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_6;
  Coroutine$IoFileMgrForUser$registerModule$lambda_6.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoGetstat_ejruhl$(this.local$$receiver.str, this.local$$receiver.ptr, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_7(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_7(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_7(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_7.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_7.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_7.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_7;
  Coroutine$IoFileMgrForUser$registerModule$lambda_7.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoOpenAsync_9i822r$(this.local$$receiver.thread, this.local$$receiver.str, this.local$$receiver.int, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_8(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_8(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_8(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_8.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_8.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_8.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_8;
  Coroutine$IoFileMgrForUser$registerModule$lambda_8.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoReadAsync_xjseqw$(this.local$$receiver.int, this.local$$receiver.ptr, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_9(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_9(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_9(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_9.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_9.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_9.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_9;
  Coroutine$IoFileMgrForUser$registerModule$lambda_9.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoCloseAsync_za3lpa$(this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_10(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_10(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_10(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_10.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_10.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_10.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_10;
  Coroutine$IoFileMgrForUser$registerModule$lambda_10.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoLseekAsync_6bixgx$(this.local$$receiver.int, this.local$$receiver.long, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_11(this$IoFileMgrForUser) {
    return function ($receiver, it) {
      return this$IoFileMgrForUser.sceIoPollAsync_130n8c$($receiver.int, $receiver.ptr64);
    };
  }
  function IoFileMgrForUser$registerModule$lambda_12(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_11(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_11(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_11.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_11.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_11.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_11;
  Coroutine$IoFileMgrForUser$registerModule$lambda_11.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoWaitAsyncCB_o62i3q$(this.local$$receiver.int, this.local$$receiver.ptr, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_13(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_12(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_12(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_12.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_12.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_12.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_12;
  Coroutine$IoFileMgrForUser$registerModule$lambda_12.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoDopen_pdl1vj$(this.local$$receiver.str, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_14(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_13(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_13(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_13.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_13.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_13.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_13;
  Coroutine$IoFileMgrForUser$registerModule$lambda_13.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoDread_o62i3q$(this.local$$receiver.int, this.local$$receiver.ptr, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_15(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_14(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_14(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_14.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_14.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_14.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_14;
  Coroutine$IoFileMgrForUser$registerModule$lambda_14.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoDclose_za3lpa$(this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_16(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_15(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_15(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_15.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_15.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_15.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_15;
  Coroutine$IoFileMgrForUser$registerModule$lambda_15.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoMkdir_pdl1vj$(this.local$$receiver.str, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_17(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_16(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_16(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_16.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_16.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_16.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_16;
  Coroutine$IoFileMgrForUser$registerModule$lambda_16.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoRmdir_pdl1vj$(this.local$$receiver.str, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_18(this$IoFileMgrForUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$IoFileMgrForUser$registerModule$lambda_17(this$IoFileMgrForUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IoFileMgrForUser$registerModule$lambda_17(this$IoFileMgrForUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IoFileMgrForUser = this$IoFileMgrForUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IoFileMgrForUser$registerModule$lambda_17.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IoFileMgrForUser$registerModule$lambda_17.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IoFileMgrForUser$registerModule$lambda_17.prototype.constructor = Coroutine$IoFileMgrForUser$registerModule$lambda_17;
  Coroutine$IoFileMgrForUser$registerModule$lambda_17.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$IoFileMgrForUser.sceIoChdir_pdl1vj$(this.local$$receiver.str, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IoFileMgrForUser$registerModule$lambda_19(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoGetDevType_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_20(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoWriteAsync_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_21(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoLseek32Async_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_22(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoGetFdList_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_23(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoIoctl_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_24(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoUnassign_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_25(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoRename_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_26(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoSetAsyncCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_27(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoSync_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_28(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoChangeAsyncPriority_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_29(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoAssign_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_30(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoChstat_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_31(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoGetAsyncStat_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_32(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoWaitAsync_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_33(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoCancel_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_34(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoIoctlAsync_xt3zvs$(it);
      return Unit;
    };
  }
  function IoFileMgrForUser$registerModule$lambda_35(this$IoFileMgrForUser) {
    return function (it) {
      this$IoFileMgrForUser.sceIoRemove_xt3zvs$(it);
      return Unit;
    };
  }
  IoFileMgrForUser.prototype.registerModule = function () {
    this.registerFunctionSuspendInt_q1rm4a$('sceIoDevctl', Kotlin.Long.fromInt(1425406737), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoOpen', Kotlin.Long.fromInt(278876348), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_0(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoLseek32', Kotlin.Long.fromInt(1754673956), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_1(this));
    this.registerFunctionSuspendLong_q4vilx$('sceIoLseek', Kotlin.Long.fromInt(669722552), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_2(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoWrite', Kotlin.Long.fromInt(1122763692), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_3(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoRead', Kotlin.Long.fromInt(1784909187), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_4(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoClose', new Kotlin.Long(-2129900605, 0), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_5(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoGetstat', new Kotlin.Long(-1393998104, 0), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_6(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoOpenAsync', new Kotlin.Long(-1985308410, 0), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_7(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoReadAsync', new Kotlin.Long(-1598707774, 0), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_8(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoCloseAsync', new Kotlin.Long(-10927946, 0), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_9(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoLseekAsync', Kotlin.Long.fromInt(1907465847), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_10(this));
    this.registerFunctionInt_9l82lv$('sceIoPollAsync', Kotlin.Long.fromInt(844229206), 150, void 0, IoFileMgrForUser$registerModule$lambda_11(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoWaitAsyncCB', Kotlin.Long.fromInt(903599942), 150, void 0, true, IoFileMgrForUser$registerModule$lambda_12(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoDopen', new Kotlin.Long(-1298276452, 0), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_13(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoDread', new Kotlin.Long(-471138228, 0), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_14(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoDclose', new Kotlin.Long(-351722391, 0), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_15(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoMkdir', Kotlin.Long.fromInt(111607812), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_16(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoRmdir', Kotlin.Long.fromInt(286770783), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_17(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceIoChdir', Kotlin.Long.fromInt(1442083197), 150, void 0, void 0, IoFileMgrForUser$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceIoGetDevType', Kotlin.Long.fromInt(146633588), 150, void 0, IoFileMgrForUser$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceIoWriteAsync', Kotlin.Long.fromInt(262974233), 150, void 0, IoFileMgrForUser$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceIoLseek32Async', Kotlin.Long.fromInt(456678799), 150, void 0, IoFileMgrForUser$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceIoGetFdList', Kotlin.Long.fromInt(1546379980), 150, void 0, IoFileMgrForUser$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceIoIoctl', Kotlin.Long.fromInt(1667441737), 150, void 0, IoFileMgrForUser$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceIoUnassign', Kotlin.Long.fromInt(1829283953), 150, void 0, IoFileMgrForUser$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('sceIoRename', Kotlin.Long.fromInt(2005992352), 150, void 0, IoFileMgrForUser$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('sceIoSetAsyncCallback', new Kotlin.Long(-1591081708, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('sceIoSync', new Kotlin.Long(-1416215681, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('sceIoChangeAsyncPriority', new Kotlin.Long(-1298959745, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('sceIoAssign', new Kotlin.Long(-1297733439, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('sceIoChstat', new Kotlin.Long(-1196998412, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('sceIoGetAsyncStat', new Kotlin.Long(-888801066, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('sceIoWaitAsync', new Kotlin.Long(-499192781, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_32(this));
    this.registerFunctionRaw_gh35x6$('sceIoCancel', new Kotlin.Long(-390306447, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_33(this));
    this.registerFunctionRaw_gh35x6$('sceIoIoctlAsync', new Kotlin.Long(-379977429, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_34(this));
    this.registerFunctionRaw_gh35x6$('sceIoRemove', new Kotlin.Long(-226845615, 0), 150, void 0, IoFileMgrForUser$registerModule$lambda_35(this));
  };
  IoFileMgrForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IoFileMgrForUser',
    interfaces: [SceModule]
  };
  function check$ObjectLiteral(closure$base, closure$name) {
    this.closure$base = closure$base;
    this.closure$name = closure$name;
    AsyncStreamBase.call(this);
  }
  check$ObjectLiteral.prototype.close = function (continuation_0, suspended) {
    var instance = new Coroutine$close(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$close($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$close.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$close.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$close.prototype.constructor = Coroutine$close;
  Coroutine$close.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.closure$base.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  check$ObjectLiteral.prototype.getLength = function (continuation) {
    return this.closure$base.getLength(continuation);
  };
  check$ObjectLiteral.prototype.read_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_4m9kcn$(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_4m9kcn$($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_4m9kcn$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_4m9kcn$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_4m9kcn$.prototype.constructor = Coroutine$read_4m9kcn$;
  Coroutine$read_4m9kcn$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.$this.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$position.compareTo_11rb$(this.result_0) >= 0) {
              return 0;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            this.$this.closure$base.position = this.local$position;
            this.state_0 = 4;
            this.result_0 = this.$this.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            tmp$ = this.result_0;
            println("AsyncStream.check.read('" + this.$this.closure$name + "':" + this.local$position + '/' + tmp$ + '): buffer(' + this.local$buffer.length + '), ' + this.local$offset + ', ' + this.local$len);
            this.state_0 = 5;
            this.result_0 = this.$this.closure$base.read_mj6st8$(this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 5:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  check$ObjectLiteral.prototype.setLength_s8cxhz$ = function (value_0, continuation_0, suspended) {
    var instance = new Coroutine$setLength_s8cxhz$(this, value_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setLength_s8cxhz$($this, value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$value = value_0;
  }
  Coroutine$setLength_s8cxhz$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setLength_s8cxhz$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setLength_s8cxhz$.prototype.constructor = Coroutine$setLength_s8cxhz$;
  Coroutine$setLength_s8cxhz$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.closure$base.setLength_s8cxhz$(this.local$value, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  check$ObjectLiteral.prototype.write_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$write_4m9kcn$(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$write_4m9kcn$($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$write_4m9kcn$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$write_4m9kcn$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$write_4m9kcn$.prototype.constructor = Coroutine$write_4m9kcn$;
  Coroutine$write_4m9kcn$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.closure$base.position = this.local$position;
            this.state_0 = 2;
            this.result_0 = this.$this.closure$base.write_mj6st8$(this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  check$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncStreamBase]
  };
  function check($receiver, name) {
    var base = $receiver;
    return toAsyncStream(new check$ObjectLiteral(base, name));
  }
  function cached$CachedEntry(position, data, dataSize) {
    if (position === void 0)
      position = Kotlin.Long.ZERO;
    if (data === void 0)
      data = new Int8Array(65536);
    if (dataSize === void 0)
      dataSize = 0;
    this.position = position;
    this.data = data;
    this.dataSize = dataSize;
  }
  Object.defineProperty(cached$CachedEntry.prototype, 'end', {
    get: function () {
      return this.position.add(Kotlin.Long.fromInt(this.dataSize));
    }
  });
  Object.defineProperty(cached$CachedEntry.prototype, 'range', {
    get: function () {
      return until_1(this.position, this.position.add(Kotlin.Long.fromInt(this.dataSize)));
    }
  });
  cached$CachedEntry.prototype.contains_yhmem3$ = function (position, size) {
    return this.range.contains_mef7kx$(position) && this.range.contains_mef7kx$(position.add(Kotlin.Long.fromInt(size)).subtract(Kotlin.Long.fromInt(1)));
  };
  cached$CachedEntry.prototype.read_4m9kcn$ = function (position, buffer, offset, len) {
    if (len <= 0)
      return 0;
    var roffset = position.subtract(this.position).toInt();
    if (!until(0, this.dataSize).contains_mef7kx$(roffset))
      return 0;
    var available = this.dataSize - roffset | 0;
    var alen = Math_0.min(available, len);
    arraycopy_0(this.data, roffset, buffer, offset, alen);
    return alen;
  };
  cached$CachedEntry.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CachedEntry',
    interfaces: []
  };
  function cached$ObjectLiteral(closure$base, closure$sslen, closure$name) {
    this.closure$base = closure$base;
    this.closure$sslen = closure$sslen;
    this.closure$name = closure$name;
    AsyncStreamBase.call(this);
    this.cacheEntry = new cached$CachedEntry();
  }
  cached$ObjectLiteral.prototype.close = function (continuation_0, suspended) {
    var instance = new Coroutine$close_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$close_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$close_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$close_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$close_0.prototype.constructor = Coroutine$close_0;
  Coroutine$close_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.closure$base.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  cached$ObjectLiteral.prototype.getLength = function (continuation) {
    return this.closure$sslen.v;
  };
  cached$ObjectLiteral.prototype.read_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_4m9kcn$_0(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_4m9kcn$_0($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_4m9kcn$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_4m9kcn$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_4m9kcn$_0.prototype.constructor = Coroutine$read_4m9kcn$_0;
  Coroutine$read_4m9kcn$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$position.compareTo_11rb$(this.$this.closure$sslen.v) >= 0) {
              return 0;
            }
             else {
              this.state_0 = 2;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            if (!this.$this.cacheEntry.contains_yhmem3$(this.local$position, this.local$len)) {
              this.$this.closure$base.position = this.local$position;
              println("[U]AsyncStream.check.read('" + this.$this.closure$name + "':" + this.local$position + '/' + this.$this.closure$sslen.v + '): buffer(' + this.local$buffer.length + '), ' + this.local$offset + ', ' + this.local$len);
              this.state_0 = 3;
              this.result_0 = this.$this.closure$base.read_mj6st8$(this.$this.cacheEntry.data, 0, this.$this.cacheEntry.data.length, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              println("[C]AsyncStream.check.read('" + this.$this.closure$name + "':" + this.local$position + '/' + this.$this.closure$sslen.v + '): buffer(' + this.local$buffer.length + '), ' + this.local$offset + ', ' + this.local$len);
              this.state_0 = 4;
              continue;
            }

          case 3:
            var ret = this.result_0;
            this.$this.cacheEntry.position = this.local$position;
            this.$this.cacheEntry.dataSize = ret;
            this.state_0 = 4;
            continue;
          case 4:
            var ret_0 = this.$this.cacheEntry.read_4m9kcn$(this.local$position, this.local$buffer, this.local$offset, this.local$len);
            println(' --> ' + ret_0);
            return ret_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  cached$ObjectLiteral.prototype.setLength_s8cxhz$ = function (value_0, continuation_0, suspended) {
    var instance = new Coroutine$setLength_s8cxhz$_0(this, value_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setLength_s8cxhz$_0($this, value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$value = value_0;
  }
  Coroutine$setLength_s8cxhz$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setLength_s8cxhz$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setLength_s8cxhz$_0.prototype.constructor = Coroutine$setLength_s8cxhz$_0;
  Coroutine$setLength_s8cxhz$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.$this.closure$base.setLength_s8cxhz$(this.local$value, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this.closure$base.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            tmp$ = this.result_0;
            this.$this.closure$sslen.v = tmp$;
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  cached$ObjectLiteral.prototype.write_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$write_4m9kcn$_0(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$write_4m9kcn$_0($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$write_4m9kcn$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$write_4m9kcn$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$write_4m9kcn$_0.prototype.constructor = Coroutine$write_4m9kcn$_0;
  Coroutine$write_4m9kcn$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.closure$base.position = this.local$position;
            this.state_0 = 2;
            this.result_0 = this.$this.closure$base.write_mj6st8$(this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  cached$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncStreamBase]
  };
  function cached($receiver_0, name_0, continuation_0, suspended) {
    var instance = new Coroutine$cached($receiver_0, name_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$cached($receiver_0, name_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$base = void 0;
    this.local$$receiver = $receiver_0;
    this.local$name = name_0;
  }
  Coroutine$cached.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$cached.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$cached.prototype.constructor = Coroutine$cached;
  Coroutine$cached.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$base = this.local$$receiver;
            this.state_0 = 2;
            this.result_0 = this.local$base.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var sslen = {v: this.result_0};
            return toAsyncStream(new cached$ObjectLiteral(this.local$base, sslen, this.local$name));
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Kernel_Library(emulator) {
    SceModule.call(this, emulator, 'Kernel_Library', 65553, 'usersystemlib.prx', 'sceKernelLibrary');
  }
  Kernel_Library.prototype.sceKernelCpuSuspendIntr = function () {
    return this.emulator.interruptManager.disableAllInterrupts();
  };
  Kernel_Library.prototype.sceKernelCpuResumeIntr_za3lpa$ = function (value) {
    this.emulator.interruptManager.restoreInterrupts_za3lpa$(value);
    return 0;
  };
  Kernel_Library.prototype.sceKernelUnlockLwMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(364266603);
  };
  Kernel_Library.prototype.sceKernelLockLwMutexCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(533089801);
  };
  Kernel_Library.prototype.sceKernelCpuResumeIntrWithSync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(998535981);
  };
  Kernel_Library.prototype.sceKernelIsCpuIntrSuspended_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1201714985);
  };
  Kernel_Library.prototype.sceKernelIsCpuIntrEnable_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1252898350, 0));
  };
  Kernel_Library.prototype.sceKernelLockLwMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1096522727, 0));
  };
  Kernel_Library.prototype.sceKernelReferLwMutexStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1049410151, 0));
  };
  Kernel_Library.prototype.sceKernelTryLockLwMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-597086493, 0));
  };
  function Kernel_Library$registerModule$lambda(this$Kernel_Library) {
    return function ($receiver, it) {
      return this$Kernel_Library.sceKernelCpuSuspendIntr();
    };
  }
  function Kernel_Library$registerModule$lambda_0(this$Kernel_Library) {
    return function ($receiver, it) {
      return this$Kernel_Library.sceKernelCpuResumeIntr_za3lpa$($receiver.int);
    };
  }
  function Kernel_Library$registerModule$lambda_1(this$Kernel_Library) {
    return function (it) {
      this$Kernel_Library.sceKernelUnlockLwMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function Kernel_Library$registerModule$lambda_2(this$Kernel_Library) {
    return function (it) {
      this$Kernel_Library.sceKernelLockLwMutexCB_xt3zvs$(it);
      return Unit;
    };
  }
  function Kernel_Library$registerModule$lambda_3(this$Kernel_Library) {
    return function (it) {
      this$Kernel_Library.sceKernelCpuResumeIntrWithSync_xt3zvs$(it);
      return Unit;
    };
  }
  function Kernel_Library$registerModule$lambda_4(this$Kernel_Library) {
    return function (it) {
      this$Kernel_Library.sceKernelIsCpuIntrSuspended_xt3zvs$(it);
      return Unit;
    };
  }
  function Kernel_Library$registerModule$lambda_5(this$Kernel_Library) {
    return function (it) {
      this$Kernel_Library.sceKernelIsCpuIntrEnable_xt3zvs$(it);
      return Unit;
    };
  }
  function Kernel_Library$registerModule$lambda_6(this$Kernel_Library) {
    return function (it) {
      this$Kernel_Library.sceKernelLockLwMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function Kernel_Library$registerModule$lambda_7(this$Kernel_Library) {
    return function (it) {
      this$Kernel_Library.sceKernelReferLwMutexStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function Kernel_Library$registerModule$lambda_8(this$Kernel_Library) {
    return function (it) {
      this$Kernel_Library.sceKernelTryLockLwMutex_xt3zvs$(it);
      return Unit;
    };
  }
  Kernel_Library.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceKernelCpuSuspendIntr', Kotlin.Long.fromInt(153708788), 150, void 0, Kernel_Library$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceKernelCpuResumeIntr', Kotlin.Long.fromInt(1594938374), 150, void 0, Kernel_Library$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUnlockLwMutex', Kotlin.Long.fromInt(364266603), 150, void 0, Kernel_Library$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLockLwMutexCB', Kotlin.Long.fromInt(533089801), 150, void 0, Kernel_Library$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCpuResumeIntrWithSync', Kotlin.Long.fromInt(998535981), 150, void 0, Kernel_Library$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceKernelIsCpuIntrSuspended', Kotlin.Long.fromInt(1201714985), 150, void 0, Kernel_Library$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceKernelIsCpuIntrEnable', new Kotlin.Long(-1252898350, 0), 150, void 0, Kernel_Library$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLockLwMutex', new Kotlin.Long(-1096522727, 0), 150, void 0, Kernel_Library$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferLwMutexStatus', new Kotlin.Long(-1049410151, 0), 150, void 0, Kernel_Library$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceKernelTryLockLwMutex', new Kotlin.Long(-597086493, 0), 150, void 0, Kernel_Library$registerModule$lambda_8(this));
  };
  Kernel_Library.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Kernel_Library',
    interfaces: [SceModule]
  };
  function LoadCoreForKernel(emulator) {
    SceModule.call(this, emulator, 'LoadCoreForKernel', 65553, 'loadcore.prx', 'sceLoaderCore');
  }
  LoadCoreForKernel.prototype.sceKernelIcacheClearAll = function () {
    this.emulator.invalidateInstructionCache_vux9f0$();
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_00E94E85_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(15289989);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_0B53340F_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(190002191);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_0DDEC402_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(232702978);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_0F9DDF1D_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(262004509);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_10FD7D37_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(285048119);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_115FA474_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(291480692);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_1285603B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(310730811);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_14C57306_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(348484358);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_23C81B66_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(600316774);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_2FAD3D30_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(799882544);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_358CEBF7_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(898427895);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_386369BB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(946039227);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_3E9E20D7_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1050550487);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_3F567499_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1062630553);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_587F4973_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1484736883);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_618C92FF_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1636602623);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_65BE4168_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1706967400);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_6B3E192B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1799231787);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_6C00BE57_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1811988055);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_77E3CB6B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2011417451);
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_9EEC51A4_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1628679772, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_9F5A77CB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1621461045, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_A48D2D08_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1534251768, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_AE96A41B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1365859301, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_B3391485_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1288104827, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_B5D16A21_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1244567007, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_B63183B5_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1238269003, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_BFAD9D71_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1079141007, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_C237D677_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1036528009, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_CA2BC850_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-903100336, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_CE2B6937_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-836015817, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_D44501A6_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-733675098, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_DB6BAA71_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-613701007, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_DD303D79_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-584041095, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_E056884A_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-531199926, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_EA9500BC_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-359333700, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_EC2861D0_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-332897840, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_F1130D5F_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-250409633, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_F1ACA4B2_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-240343886, 0));
  };
  LoadCoreForKernel.prototype.LoadCoreForKernel_F6C7F05C_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-154668964, 0));
  };
  function LoadCoreForKernel$registerModule$lambda(this$LoadCoreForKernel) {
    return function ($receiver, it) {
      this$LoadCoreForKernel.sceKernelIcacheClearAll();
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_0(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_00E94E85_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_1(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_0B53340F_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_2(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_0DDEC402_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_3(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_0F9DDF1D_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_4(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_10FD7D37_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_5(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_115FA474_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_6(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_1285603B_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_7(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_14C57306_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_8(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_23C81B66_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_9(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_2FAD3D30_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_10(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_358CEBF7_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_11(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_386369BB_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_12(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_3E9E20D7_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_13(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_3F567499_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_14(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_587F4973_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_15(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_618C92FF_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_16(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_65BE4168_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_17(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_6B3E192B_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_18(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_6C00BE57_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_19(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_77E3CB6B_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_20(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_9EEC51A4_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_21(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_9F5A77CB_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_22(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_A48D2D08_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_23(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_AE96A41B_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_24(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_B3391485_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_25(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_B5D16A21_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_26(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_B63183B5_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_27(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_BFAD9D71_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_28(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_C237D677_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_29(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_CA2BC850_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_30(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_CE2B6937_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_31(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_D44501A6_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_32(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_DB6BAA71_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_33(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_DD303D79_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_34(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_E056884A_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_35(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_EA9500BC_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_36(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_EC2861D0_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_37(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_F1130D5F_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_38(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_F1ACA4B2_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadCoreForKernel$registerModule$lambda_39(this$LoadCoreForKernel) {
    return function (it) {
      this$LoadCoreForKernel.LoadCoreForKernel_F6C7F05C_xt3zvs$(it);
      return Unit;
    };
  }
  LoadCoreForKernel.prototype.registerModule = function () {
    this.registerFunctionVoid_dc3d86$('sceKernelIcacheClearAll', new Kotlin.Long(-663250234, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_00E94E85', Kotlin.Long.fromInt(15289989), 150, void 0, LoadCoreForKernel$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_0B53340F', Kotlin.Long.fromInt(190002191), 150, void 0, LoadCoreForKernel$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_0DDEC402', Kotlin.Long.fromInt(232702978), 150, void 0, LoadCoreForKernel$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_0F9DDF1D', Kotlin.Long.fromInt(262004509), 150, void 0, LoadCoreForKernel$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_10FD7D37', Kotlin.Long.fromInt(285048119), 150, void 0, LoadCoreForKernel$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_115FA474', Kotlin.Long.fromInt(291480692), 150, void 0, LoadCoreForKernel$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_1285603B', Kotlin.Long.fromInt(310730811), 150, void 0, LoadCoreForKernel$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_14C57306', Kotlin.Long.fromInt(348484358), 150, void 0, LoadCoreForKernel$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_23C81B66', Kotlin.Long.fromInt(600316774), 150, void 0, LoadCoreForKernel$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_2FAD3D30', Kotlin.Long.fromInt(799882544), 150, void 0, LoadCoreForKernel$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_358CEBF7', Kotlin.Long.fromInt(898427895), 150, void 0, LoadCoreForKernel$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_386369BB', Kotlin.Long.fromInt(946039227), 150, void 0, LoadCoreForKernel$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_3E9E20D7', Kotlin.Long.fromInt(1050550487), 150, void 0, LoadCoreForKernel$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_3F567499', Kotlin.Long.fromInt(1062630553), 150, void 0, LoadCoreForKernel$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_587F4973', Kotlin.Long.fromInt(1484736883), 150, void 0, LoadCoreForKernel$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_618C92FF', Kotlin.Long.fromInt(1636602623), 150, void 0, LoadCoreForKernel$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_65BE4168', Kotlin.Long.fromInt(1706967400), 150, void 0, LoadCoreForKernel$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_6B3E192B', Kotlin.Long.fromInt(1799231787), 150, void 0, LoadCoreForKernel$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_6C00BE57', Kotlin.Long.fromInt(1811988055), 150, void 0, LoadCoreForKernel$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_77E3CB6B', Kotlin.Long.fromInt(2011417451), 150, void 0, LoadCoreForKernel$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_9EEC51A4', new Kotlin.Long(-1628679772, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_9F5A77CB', new Kotlin.Long(-1621461045, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_A48D2D08', new Kotlin.Long(-1534251768, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_AE96A41B', new Kotlin.Long(-1365859301, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_B3391485', new Kotlin.Long(-1288104827, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_B5D16A21', new Kotlin.Long(-1244567007, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_B63183B5', new Kotlin.Long(-1238269003, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_BFAD9D71', new Kotlin.Long(-1079141007, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_C237D677', new Kotlin.Long(-1036528009, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_CA2BC850', new Kotlin.Long(-903100336, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_CE2B6937', new Kotlin.Long(-836015817, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_D44501A6', new Kotlin.Long(-733675098, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_DB6BAA71', new Kotlin.Long(-613701007, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_32(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_DD303D79', new Kotlin.Long(-584041095, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_33(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_E056884A', new Kotlin.Long(-531199926, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_34(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_EA9500BC', new Kotlin.Long(-359333700, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_35(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_EC2861D0', new Kotlin.Long(-332897840, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_36(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_F1130D5F', new Kotlin.Long(-250409633, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_37(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_F1ACA4B2', new Kotlin.Long(-240343886, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_38(this));
    this.registerFunctionRaw_gh35x6$('LoadCoreForKernel_F6C7F05C', new Kotlin.Long(-154668964, 0), 150, void 0, LoadCoreForKernel$registerModule$lambda_39(this));
  };
  LoadCoreForKernel.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LoadCoreForKernel',
    interfaces: [SceModule]
  };
  function LoadExecForUser(emulator) {
    SceModule.call(this, emulator, 'LoadExecForUser', 1073807377, 'loadexec_02g.prx', 'sceLoadExec');
  }
  LoadExecForUser.prototype.sceKernelExitGame_6r5tao$ = function (currentThread) {
    var $this = this.logger;
    var level = LogLevel.INFO;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, "sceKernelExitGame: '" + currentThread.name + "'");
    }
    var $this_0 = this.logger;
    var level_0 = LogLevel.INFO;
    if ($this_0.isEnabled_ci8eq1$(level_0)) {
      $this_0.actualLog_t189ph$(level_0, getPrintInstructionAt(get_mem(this), currentThread.state.PC, this.emulator.nameProvider));
    }
    var $this_1 = this.logger;
    var level_1 = LogLevel.INFO;
    if ($this_1.isEnabled_ci8eq1$(level_1)) {
      $this_1.actualLog_t189ph$(level_1, getPrintInstructionAt(get_mem(this), get_RA(currentThread.state), this.emulator.nameProvider));
    }
    get_threadManager(this).stopAllThreads();
  };
  LoadExecForUser.prototype.sceKernelExitGameWithStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(717854027);
  };
  LoadExecForUser.prototype.LoadExecForUser_362A956B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(908760427);
  };
  LoadExecForUser.prototype.sceKernelRegisterExitCallback_za3lpa$ = function (callbackId) {
    println('Unimplemented: sceKernelRegisterExitCallback: ' + callbackId);
    return 0;
  };
  LoadExecForUser.prototype.LoadExecForUser_8ADA38D3_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1965410093, 0));
  };
  LoadExecForUser.prototype.sceKernelLoadExec_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1120989036, 0));
  };
  LoadExecForUser.prototype.LoadExecForUser_D1FB50DC_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-772058916, 0));
  };
  function LoadExecForUser$registerModule$lambda(this$LoadExecForUser) {
    return function ($receiver, it) {
      return this$LoadExecForUser.sceKernelRegisterExitCallback_za3lpa$($receiver.int);
    };
  }
  function LoadExecForUser$registerModule$lambda_0(this$LoadExecForUser) {
    return function ($receiver, it) {
      this$LoadExecForUser.sceKernelExitGame_6r5tao$($receiver.thread);
      return Unit;
    };
  }
  function LoadExecForUser$registerModule$lambda_1(this$LoadExecForUser) {
    return function (it) {
      this$LoadExecForUser.sceKernelExitGameWithStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadExecForUser$registerModule$lambda_2(this$LoadExecForUser) {
    return function (it) {
      this$LoadExecForUser.LoadExecForUser_362A956B_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadExecForUser$registerModule$lambda_3(this$LoadExecForUser) {
    return function (it) {
      this$LoadExecForUser.LoadExecForUser_8ADA38D3_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadExecForUser$registerModule$lambda_4(this$LoadExecForUser) {
    return function (it) {
      this$LoadExecForUser.sceKernelLoadExec_xt3zvs$(it);
      return Unit;
    };
  }
  function LoadExecForUser$registerModule$lambda_5(this$LoadExecForUser) {
    return function (it) {
      this$LoadExecForUser.LoadExecForUser_D1FB50DC_xt3zvs$(it);
      return Unit;
    };
  }
  LoadExecForUser.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceKernelRegisterExitCallback', Kotlin.Long.fromInt(1254455619), 150, void 0, LoadExecForUser$registerModule$lambda(this));
    this.registerFunctionVoid_dc3d86$('sceKernelExitGame', Kotlin.Long.fromInt(89598559), 150, void 0, LoadExecForUser$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceKernelExitGameWithStatus', Kotlin.Long.fromInt(717854027), 150, void 0, LoadExecForUser$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('LoadExecForUser_362A956B', Kotlin.Long.fromInt(908760427), 150, void 0, LoadExecForUser$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('LoadExecForUser_8ADA38D3', new Kotlin.Long(-1965410093, 0), 150, void 0, LoadExecForUser$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLoadExec', new Kotlin.Long(-1120989036, 0), 150, void 0, LoadExecForUser$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('LoadExecForUser_D1FB50DC', new Kotlin.Long(-772058916, 0), 150, void 0, LoadExecForUser$registerModule$lambda_5(this));
  };
  LoadExecForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LoadExecForUser',
    interfaces: [SceModule]
  };
  function ModuleMgrForUser(emulator) {
    SceModule.call(this, emulator, 'ModuleMgrForUser', 1073807377, 'modulemgr.prx', 'sceModuleManager');
  }
  ModuleMgrForUser.prototype.sceKernelLoadModule_jae3so$ = function (path, flags, sceKernelLMOption) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'Not implemented sceKernelLoadModule: ' + path);
    }
    return 143654912;
  };
  ModuleMgrForUser.prototype.sceKernelStartModule_ioaw10$ = function (moduleId, argumentSize, argumentPointer, status, sceKernelSMOption) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'Not implemented sceKernelStartModule: ' + moduleId);
    }
    return 0;
  };
  ModuleMgrForUser.prototype.sceKernelGetModuleIdByAddress_za3lpa$ = function (addr) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'Not implemented sceKernelGetModuleIdByAddress: ' + get_hex(addr));
    }
    return 2;
  };
  ModuleMgrForUser.prototype.sceKernelGetModuleId = function () {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'Not implemented sceKernelGetModuleId');
    }
    return 1;
  };
  ModuleMgrForUser.prototype.sceKernelLoadModuleBufferMs_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(295061294);
  };
  ModuleMgrForUser.prototype.sceKernelLoadModuleBufferApp_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(619447873);
  };
  ModuleMgrForUser.prototype.sceKernelUnloadModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(772346282);
  };
  ModuleMgrForUser.prototype.sceKernelGetModuleIdList_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1682150882);
  };
  ModuleMgrForUser.prototype.sceKernelLoadModuleMs_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1896833461);
  };
  ModuleMgrForUser.prototype.sceKernelQueryModuleInfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1955380953);
  };
  ModuleMgrForUser.prototype.ModuleMgrForUser_8F2DF740_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1892812992, 0));
  };
  ModuleMgrForUser.prototype.sceKernelLoadModuleByID_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1208719848, 0));
  };
  ModuleMgrForUser.prototype.sceKernelStopUnloadSelfModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-870500711, 0));
  };
  ModuleMgrForUser.prototype.sceKernelStopModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-771778518, 0));
  };
  ModuleMgrForUser.prototype.sceKernelGetModuleGPByAddress_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-755250857, 0));
  };
  ModuleMgrForUser.prototype.sceKernelSelfStopUnloadModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-696915016, 0));
  };
  ModuleMgrForUser.prototype.ModuleMgrForUser_E4C4211C_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-456908516, 0));
  };
  ModuleMgrForUser.prototype.ModuleMgrForUser_F2D8D1B4_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-220671564, 0));
  };
  ModuleMgrForUser.prototype.sceKernelLoadModuleBufferUsbWlan_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-114860648, 0));
  };
  ModuleMgrForUser.prototype.ModuleMgrForUser_FBE27467_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-69045145, 0));
  };
  ModuleMgrForUser.prototype.ModuleMgrForUser_FEF27DC1_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-17662527, 0));
  };
  function ModuleMgrForUser$registerModule$lambda(this$ModuleMgrForUser) {
    return function ($receiver, it) {
      return this$ModuleMgrForUser.sceKernelLoadModule_jae3so$($receiver.istr, $receiver.int, $receiver.ptr);
    };
  }
  function ModuleMgrForUser$registerModule$lambda_0(this$ModuleMgrForUser) {
    return function ($receiver, it) {
      return this$ModuleMgrForUser.sceKernelStartModule_ioaw10$($receiver.int, $receiver.int, $receiver.ptr, $receiver.ptr, $receiver.ptr);
    };
  }
  function ModuleMgrForUser$registerModule$lambda_1(this$ModuleMgrForUser) {
    return function ($receiver, it) {
      return this$ModuleMgrForUser.sceKernelGetModuleIdByAddress_za3lpa$($receiver.int);
    };
  }
  function ModuleMgrForUser$registerModule$lambda_2(this$ModuleMgrForUser) {
    return function ($receiver, it) {
      return this$ModuleMgrForUser.sceKernelGetModuleId();
    };
  }
  function ModuleMgrForUser$registerModule$lambda_3(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelLoadModuleBufferMs_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_4(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelLoadModuleBufferApp_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_5(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelUnloadModule_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_6(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelGetModuleIdList_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_7(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelLoadModuleMs_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_8(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelQueryModuleInfo_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_9(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.ModuleMgrForUser_8F2DF740_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_10(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelLoadModuleByID_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_11(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelStopUnloadSelfModule_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_12(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelStopModule_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_13(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelGetModuleGPByAddress_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_14(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelSelfStopUnloadModule_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_15(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.ModuleMgrForUser_E4C4211C_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_16(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.ModuleMgrForUser_F2D8D1B4_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_17(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.sceKernelLoadModuleBufferUsbWlan_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_18(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.ModuleMgrForUser_FBE27467_xt3zvs$(it);
      return Unit;
    };
  }
  function ModuleMgrForUser$registerModule$lambda_19(this$ModuleMgrForUser) {
    return function (it) {
      this$ModuleMgrForUser.ModuleMgrForUser_FEF27DC1_xt3zvs$(it);
      return Unit;
    };
  }
  ModuleMgrForUser.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceKernelLoadModule', new Kotlin.Long(-1753357434, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceKernelStartModule', Kotlin.Long.fromInt(1357955564), 150, void 0, ModuleMgrForUser$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceKernelGetModuleIdByAddress', new Kotlin.Long(-659082969, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('sceKernelGetModuleId', new Kotlin.Long(-257793131, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLoadModuleBufferMs', Kotlin.Long.fromInt(295061294), 150, void 0, ModuleMgrForUser$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLoadModuleBufferApp', Kotlin.Long.fromInt(619447873), 150, void 0, ModuleMgrForUser$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUnloadModule', Kotlin.Long.fromInt(772346282), 150, void 0, ModuleMgrForUser$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetModuleIdList', Kotlin.Long.fromInt(1682150882), 150, void 0, ModuleMgrForUser$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLoadModuleMs', Kotlin.Long.fromInt(1896833461), 150, void 0, ModuleMgrForUser$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceKernelQueryModuleInfo', Kotlin.Long.fromInt(1955380953), 150, void 0, ModuleMgrForUser$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('ModuleMgrForUser_8F2DF740', new Kotlin.Long(-1892812992, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLoadModuleByID', new Kotlin.Long(-1208719848, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStopUnloadSelfModule', new Kotlin.Long(-870500711, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStopModule', new Kotlin.Long(-771778518, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetModuleGPByAddress', new Kotlin.Long(-755250857, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSelfStopUnloadModule', new Kotlin.Long(-696915016, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('ModuleMgrForUser_E4C4211C', new Kotlin.Long(-456908516, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('ModuleMgrForUser_F2D8D1B4', new Kotlin.Long(-220671564, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceKernelLoadModuleBufferUsbWlan', new Kotlin.Long(-114860648, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('ModuleMgrForUser_FBE27467', new Kotlin.Long(-69045145, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('ModuleMgrForUser_FEF27DC1', new Kotlin.Long(-17662527, 0), 150, void 0, ModuleMgrForUser$registerModule$lambda_19(this));
  };
  ModuleMgrForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ModuleMgrForUser',
    interfaces: [SceModule]
  };
  function StdioForUser(emulator) {
    SceModule.call(this, emulator, 'StdioForUser', 1073807377, 'iofilemgr.prx', 'sceIOFileManager');
    var $receiver = this.fileDescriptors.alloc();
    $receiver.stream = toAsyncStream(new StdioForUser$StdioStream(1));
    $receiver.file = asVfsFile($receiver.stream, '/dev/stdin');
    this.stdin_0 = $receiver;
    var $receiver_0 = this.fileDescriptors.alloc();
    $receiver_0.stream = toAsyncStream(new StdioForUser$StdioStream(2));
    $receiver_0.file = asVfsFile($receiver_0.stream, '/dev/stdout');
    this.stdout_0 = $receiver_0;
    var $receiver_1 = this.fileDescriptors.alloc();
    $receiver_1.stream = toAsyncStream(new StdioForUser$StdioStream(3));
    $receiver_1.file = asVfsFile($receiver_1.stream, '/dev/stderr');
    this.stderr_0 = $receiver_1;
  }
  Object.defineProperty(StdioForUser.prototype, 'fileDescriptors', {
    get: function () {
      return this.emulator.fileManager.fileDescriptors;
    }
  });
  function StdioForUser$StdioStream(id) {
    AsyncStreamBase.call(this);
    this.id = id;
  }
  StdioForUser$StdioStream.prototype.close = function (continuation) {
    return Unit;
  };
  StdioForUser$StdioStream.prototype.getLength = function (continuation) {
    return Kotlin.Long.ZERO;
  };
  StdioForUser$StdioStream.prototype.setLength_s8cxhz$ = function (value, continuation) {
    return Unit;
  };
  StdioForUser$StdioStream.prototype.read_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    throw new NotImplementedError_init('An operation is not implemented: ' + 'Not implemented StdioStream.read');
  };
  StdioForUser$StdioStream.prototype.write_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    print(toString_0(readByteArray(buffer, offset, len), lang.UTF8));
  };
  StdioForUser$StdioStream.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StdioStream',
    interfaces: [AsyncStreamBase]
  };
  StdioForUser.prototype.sceKernelStdin = function () {
    return this.stdin_0.id;
  };
  StdioForUser.prototype.sceKernelStdout = function () {
    return this.stdout_0.id;
  };
  StdioForUser.prototype.sceKernelStderr = function () {
    return this.stderr_0.id;
  };
  StdioForUser.prototype.sceKernelStdioLseek_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(213583217);
  };
  StdioForUser.prototype.sceKernelStdioRead_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(810865784);
  };
  StdioForUser.prototype.sceKernelRegisterStdoutPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1127059292);
  };
  StdioForUser.prototype.sceKernelRegisterStderrPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1870233091);
  };
  StdioForUser.prototype.sceKernelStdioOpen_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1840596383, 0));
  };
  StdioForUser.prototype.sceKernelStdioClose_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1660543975, 0));
  };
  StdioForUser.prototype.sceKernelStdioWrite_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1548144165, 0));
  };
  StdioForUser.prototype.sceKernelStdioSendChar_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1536719415, 0));
  };
  function StdioForUser$registerModule$lambda(this$StdioForUser) {
    return function ($receiver, it) {
      return this$StdioForUser.sceKernelStdin();
    };
  }
  function StdioForUser$registerModule$lambda_0(this$StdioForUser) {
    return function ($receiver, it) {
      return this$StdioForUser.sceKernelStdout();
    };
  }
  function StdioForUser$registerModule$lambda_1(this$StdioForUser) {
    return function ($receiver, it) {
      return this$StdioForUser.sceKernelStderr();
    };
  }
  function StdioForUser$registerModule$lambda_2(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelStdioLseek_xt3zvs$(it);
      return Unit;
    };
  }
  function StdioForUser$registerModule$lambda_3(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelStdioRead_xt3zvs$(it);
      return Unit;
    };
  }
  function StdioForUser$registerModule$lambda_4(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelRegisterStdoutPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function StdioForUser$registerModule$lambda_5(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelRegisterStderrPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function StdioForUser$registerModule$lambda_6(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelStdioOpen_xt3zvs$(it);
      return Unit;
    };
  }
  function StdioForUser$registerModule$lambda_7(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelStdioClose_xt3zvs$(it);
      return Unit;
    };
  }
  function StdioForUser$registerModule$lambda_8(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelStdioWrite_xt3zvs$(it);
      return Unit;
    };
  }
  function StdioForUser$registerModule$lambda_9(this$StdioForUser) {
    return function (it) {
      this$StdioForUser.sceKernelStdioSendChar_xt3zvs$(it);
      return Unit;
    };
  }
  StdioForUser.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceKernelStdin', Kotlin.Long.fromInt(388837742), 150, void 0, StdioForUser$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceKernelStdout', new Kotlin.Long(-1497713943, 0), 150, void 0, StdioForUser$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceKernelStderr', new Kotlin.Long(-141842166, 0), 150, void 0, StdioForUser$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStdioLseek', Kotlin.Long.fromInt(213583217), 150, void 0, StdioForUser$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStdioRead', Kotlin.Long.fromInt(810865784), 150, void 0, StdioForUser$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceKernelRegisterStdoutPipe', Kotlin.Long.fromInt(1127059292), 150, void 0, StdioForUser$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceKernelRegisterStderrPipe', Kotlin.Long.fromInt(1870233091), 150, void 0, StdioForUser$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStdioOpen', new Kotlin.Long(-1840596383, 0), 150, void 0, StdioForUser$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStdioClose', new Kotlin.Long(-1660543975, 0), 150, void 0, StdioForUser$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStdioWrite', new Kotlin.Long(-1548144165, 0), 150, void 0, StdioForUser$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStdioSendChar', new Kotlin.Long(-1536719415, 0), 150, void 0, StdioForUser$registerModule$lambda_9(this));
  };
  StdioForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StdioForUser',
    interfaces: [SceModule]
  };
  function SysMemUserForUser(emulator) {
    SceModule.call(this, emulator, 'SysMemUserForUser', 1073741841, 'sysmem.prx', 'sceSystemMemoryManager');
    this.partitions = new ResourceList('Partition', void 0, SysMemUserForUser$partitions$lambda);
  }
  function SysMemUserForUser$Partition(id) {
    this.id_1jexkx$_0 = id;
    this.part_c9wul3$_0 = this.part_c9wul3$_0;
  }
  Object.defineProperty(SysMemUserForUser$Partition.prototype, 'id', {
    get: function () {
      return this.id_1jexkx$_0;
    }
  });
  Object.defineProperty(SysMemUserForUser$Partition.prototype, 'part', {
    get: function () {
      if (this.part_c9wul3$_0 == null)
        return throwUPAE('part');
      return this.part_c9wul3$_0;
    },
    set: function (part) {
      this.part_c9wul3$_0 = part;
    }
  });
  SysMemUserForUser$Partition.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Partition',
    interfaces: [ResourceItem]
  };
  SysMemUserForUser.prototype.sceKernelAllocPartitionMemory_jvlrdv$ = function (partitionId, name, anchor, size, address) {
    var tmp$;
    var $this = this.logger;
    var level = LogLevel.INFO;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'WIP: sceKernelAllocPartitionMemory(' + partitionId + ', ' + toString(name) + ', ' + anchor + ', ' + size + ', ' + get_hex(address) + ')');
    }
    try {
      var parentPartition = (tmp$ = get_memoryManager(this).memoryPartitionsUid.get_11rb$(MemoryPartitions$Companion_getInstance().User)) != null ? tmp$ : invalidOp('Invalid partition ' + partitionId);
      var allocatedPartition = parentPartition.allocate_vpxtrr$(Kotlin.Long.fromInt(size), MemoryAnchor$Companion_getInstance().invoke_za3lpa$(anchor), Kotlin.Long.fromInt(address), name != null ? name : 'block');
      println('sceKernelAllocPartitionMemory(' + partitionId + ', ' + toString(name) + ', ' + anchor + ', ' + size + ', ' + get_hex(address) + ') -> ' + allocatedPartition + ' - size=' + allocatedPartition.size);
      var $receiver = this.partitions.alloc();
      $receiver.part = allocatedPartition;
      return $receiver.id;
    }
     catch (e) {
      if (Kotlin.isType(e, OutOfMemoryError)) {
        return -1;
      }
       else
        throw e;
    }
  };
  SysMemUserForUser.prototype.sceKernelGetBlockHeadAddr_za3lpa$ = function (partitionId) {
    var partition = this.partitions.get_za3lpa$(partitionId);
    return partition.part.low.toInt();
  };
  SysMemUserForUser.prototype.sceKernelMaxFreeMemSize = function () {
    return get_memoryManager(this).userPartition.getMaxContiguousFreeMemoryInt();
  };
  SysMemUserForUser.prototype.sceKernelSetCompiledSdkVersion_za3lpa$ = function (sdkVersion) {
    var $this = this.logger;
    var level = LogLevel.INFO;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceKernelSetCompiledSdkVersion:' + sdkVersion);
    }
    return 0;
  };
  SysMemUserForUser.prototype.sceKernelSetCompilerVersion_za3lpa$ = function (version) {
    var $this = this.logger;
    var level = LogLevel.INFO;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceKernelSetCompilerVersion:' + version);
    }
    return 0;
  };
  SysMemUserForUser.prototype.sceKernelSetCompiledSdkVersion500_505_za3lpa$ = function (sdkVersion) {
    this.emulator.sdkVersion = sdkVersion;
    return 0;
  };
  SysMemUserForUser.prototype.SysMemUserForUser_057E7380_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(92173184);
  };
  SysMemUserForUser.prototype.sceKernelPrintf_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(329624559);
  };
  SysMemUserForUser.prototype.sceKernelQueryMemoryInfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(708727424);
  };
  SysMemUserForUser.prototype.SysMemUserForUser_315AD3A0_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(828036000);
  };
  SysMemUserForUser.prototype.SysMemUserForUser_342061E5_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(874537445);
  };
  SysMemUserForUser.prototype.sceKernelDevkitVersion_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1070181994);
  };
  SysMemUserForUser.prototype.SysMemUserForUser_50F61D8A_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1358306698);
  };
  SysMemUserForUser.prototype.SysMemUserForUser_A6848DF8_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1501262344, 0));
  };
  SysMemUserForUser.prototype.SysMemUserForUser_ACBD88CA_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1396864822, 0));
  };
  SysMemUserForUser.prototype.sceKernelFreePartitionMemory_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1227481854, 0));
  };
  SysMemUserForUser.prototype.SysMemUserForUser_D8DE5C1E_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-656516066, 0));
  };
  SysMemUserForUser.prototype.SysMemUserForUser_DB83A952_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-612128430, 0));
  };
  SysMemUserForUser.prototype.SysMemUserForUser_EBD5C3E6_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-338312218, 0));
  };
  SysMemUserForUser.prototype.sceKernelTotalFreeMemSize_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-115739096, 0));
  };
  SysMemUserForUser.prototype.sceKernelGetCompiledSdkVersion_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-65976973, 0));
  };
  SysMemUserForUser.prototype.SysMemUserForUser_FE707FDF_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-26181665, 0));
  };
  function SysMemUserForUser$registerModule$lambda(this$SysMemUserForUser) {
    return function ($receiver, it) {
      return this$SysMemUserForUser.sceKernelAllocPartitionMemory_jvlrdv$($receiver.int, $receiver.str, $receiver.int, $receiver.int, $receiver.int);
    };
  }
  function SysMemUserForUser$registerModule$lambda_0(this$SysMemUserForUser) {
    return function ($receiver, it) {
      return this$SysMemUserForUser.sceKernelGetBlockHeadAddr_za3lpa$($receiver.int);
    };
  }
  function SysMemUserForUser$registerModule$lambda_1(this$SysMemUserForUser) {
    return function ($receiver, it) {
      return this$SysMemUserForUser.sceKernelMaxFreeMemSize();
    };
  }
  function SysMemUserForUser$registerModule$lambda_2(this$SysMemUserForUser) {
    return function ($receiver, it) {
      return this$SysMemUserForUser.sceKernelSetCompiledSdkVersion_za3lpa$($receiver.int);
    };
  }
  function SysMemUserForUser$registerModule$lambda_3(this$SysMemUserForUser) {
    return function ($receiver, it) {
      return this$SysMemUserForUser.sceKernelSetCompilerVersion_za3lpa$($receiver.int);
    };
  }
  function SysMemUserForUser$registerModule$lambda_4(this$SysMemUserForUser) {
    return function ($receiver, it) {
      return this$SysMemUserForUser.sceKernelSetCompiledSdkVersion500_505_za3lpa$($receiver.int);
    };
  }
  function SysMemUserForUser$registerModule$lambda_5(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_057E7380_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_6(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.sceKernelPrintf_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_7(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.sceKernelQueryMemoryInfo_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_8(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_315AD3A0_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_9(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_342061E5_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_10(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.sceKernelDevkitVersion_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_11(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_50F61D8A_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_12(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_A6848DF8_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_13(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_ACBD88CA_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_14(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.sceKernelFreePartitionMemory_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_15(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_D8DE5C1E_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_16(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_DB83A952_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_17(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_EBD5C3E6_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_18(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.sceKernelTotalFreeMemSize_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_19(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.sceKernelGetCompiledSdkVersion_xt3zvs$(it);
      return Unit;
    };
  }
  function SysMemUserForUser$registerModule$lambda_20(this$SysMemUserForUser) {
    return function (it) {
      this$SysMemUserForUser.SysMemUserForUser_FE707FDF_xt3zvs$(it);
      return Unit;
    };
  }
  SysMemUserForUser.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceKernelAllocPartitionMemory', Kotlin.Long.fromInt(595443023), 150, void 0, SysMemUserForUser$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceKernelGetBlockHeadAddr', new Kotlin.Long(-1650828383, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceKernelMaxFreeMemSize', new Kotlin.Long(-1567493881, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('sceKernelSetCompiledSdkVersion', Kotlin.Long.fromInt(1972488155), 150, void 0, SysMemUserForUser$registerModule$lambda_2(this));
    this.registerFunctionInt_9l82lv$('sceKernelSetCompilerVersion', new Kotlin.Long(-142772277, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_3(this));
    this.registerFunctionInt_9l82lv$('sceKernelSetCompiledSdkVersion500_505', new Kotlin.Long(-1847708612, 0), 500, void 0, SysMemUserForUser$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_057E7380', Kotlin.Long.fromInt(92173184), 150, void 0, SysMemUserForUser$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceKernelPrintf', Kotlin.Long.fromInt(329624559), 150, void 0, SysMemUserForUser$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceKernelQueryMemoryInfo', Kotlin.Long.fromInt(708727424), 150, void 0, SysMemUserForUser$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_315AD3A0', Kotlin.Long.fromInt(828036000), 150, void 0, SysMemUserForUser$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_342061E5', Kotlin.Long.fromInt(874537445), 150, void 0, SysMemUserForUser$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDevkitVersion', Kotlin.Long.fromInt(1070181994), 150, void 0, SysMemUserForUser$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_50F61D8A', Kotlin.Long.fromInt(1358306698), 150, void 0, SysMemUserForUser$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_A6848DF8', new Kotlin.Long(-1501262344, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_ACBD88CA', new Kotlin.Long(-1396864822, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceKernelFreePartitionMemory', new Kotlin.Long(-1227481854, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_D8DE5C1E', new Kotlin.Long(-656516066, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_DB83A952', new Kotlin.Long(-612128430, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_EBD5C3E6', new Kotlin.Long(-338312218, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceKernelTotalFreeMemSize', new Kotlin.Long(-115739096, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetCompiledSdkVersion', new Kotlin.Long(-65976973, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('SysMemUserForUser_FE707FDF', new Kotlin.Long(-26181665, 0), 150, void 0, SysMemUserForUser$registerModule$lambda_20(this));
  };
  function SysMemUserForUser$partitions$lambda(it) {
    return new SysMemUserForUser$Partition(it);
  }
  SysMemUserForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SysMemUserForUser',
    interfaces: [SceModule]
  };
  function ThreadManForUser(emulator) {
    SceModule.call(this, emulator, 'ThreadManForUser', 1073807377, 'threadman.prx', 'sceThreadManager');
    this.thread = new ThreadManForUser_Thread(this);
    this.callback = new ThreadManForUser_Callback(this);
    this.mbx = new ThreadManForUser_Mbx(this);
    this.sema = new ThreadManForUser_Sema(this);
    this.mutex = new ThreadManForUser_Mutex(this);
    this.time = new ThreadManForUser_Time(this);
    this.eflags = new ThreadManForUser_EventFlags(this);
    this.fpl = new ThreadManForUser_Fpl(this);
    this.vpl = new ThreadManForUser_Vpl(this);
    this.alarm = new ThreadManForUser_Alarm(this);
  }
  ThreadManForUser.prototype.sceKernelGetVTimerTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(55218719);
  };
  ThreadManForUser.prototype._sceKernelReturnFromTimerHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(244480749);
  };
  ThreadManForUser.prototype.sceKernelUSec2SysClock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(286125210);
  };
  ThreadManForUser.prototype.sceKernelCreateVTimer_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(553645408);
  };
  ThreadManForUser.prototype.sceKernelGetCallbackCount_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(708658431);
  };
  ThreadManForUser.prototype.ThreadManForUser_31327F19_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(825392921);
  };
  ThreadManForUser.prototype.sceKernelDeleteVTimer_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(848272978);
  };
  ThreadManForUser.prototype.sceKernelReferMsgPipeStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(868106276);
  };
  ThreadManForUser.prototype.sceKernelCancelMsgPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(882607693);
  };
  ThreadManForUser.prototype.sceKernelSetVTimerHandlerWide_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1404047002);
  };
  ThreadManForUser.prototype.sceKernelSetVTimerTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1412093488);
  };
  ThreadManForUser.prototype.sceKernelReferVTimerStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1597161130);
  };
  ThreadManForUser.prototype.sceKernelReferSystemStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1652453178);
  };
  ThreadManForUser.prototype._sceKernelReturnFromCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1855890256);
  };
  ThreadManForUser.prototype.ThreadManForUser_71040D5C_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1896090972);
  };
  ThreadManForUser.prototype.sceKernelReleaseThreadEventHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1928577349);
  };
  ThreadManForUser.prototype.sceKernelReferCallbackStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1930352828);
  };
  ThreadManForUser.prototype.sceKernelReceiveMsgPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1954716534);
  };
  ThreadManForUser.prototype.sceKernelCreateMsgPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2081276576);
  };
  ThreadManForUser.prototype.sceKernelSendMsgPipeCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2084696770);
  };
  ThreadManForUser.prototype.ThreadManForUser_7CFF8CF3_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2097122547);
  };
  ThreadManForUser.prototype.sceKernelReferGlobalProfiler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2112310051, 0));
  };
  ThreadManForUser.prototype.ThreadManForUser_8672E3D0_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2039290928, 0));
  };
  ThreadManForUser.prototype.sceKernelSendMsgPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2022850643, 0));
  };
  ThreadManForUser.prototype.sceKernelTrySendMsgPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2008244336, 0));
  };
  ThreadManForUser.prototype.sceKernelGetVTimerBase_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1280992912, 0));
  };
  ThreadManForUser.prototype.sceKernelGetVTimerBaseWide_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1212052617, 0));
  };
  ThreadManForUser.prototype.sceKernelSysClock2USec_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1167355166, 0));
  };
  ThreadManForUser.prototype.ThreadManForUser_BEED3A47_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1091749305, 0));
  };
  ThreadManForUser.prototype.sceKernelGetVTimerTimeWide_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1061945390, 0));
  };
  ThreadManForUser.prototype.sceKernelStartVTimer_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-963800009, 0));
  };
  ThreadManForUser.prototype.sceKernelUSec2SysClockWide_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-926083700, 0));
  };
  ThreadManForUser.prototype.sceKernelStopVTimer_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-793842041, 0));
  };
  ThreadManForUser.prototype.sceKernelCancelVTimerHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-757721617, 0));
  };
  ThreadManForUser.prototype.sceKernelSetVTimerHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-659383890, 0));
  };
  ThreadManForUser.prototype.sceKernelTryReceiveMsgPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-548271729, 0));
  };
  ThreadManForUser.prototype.sceKernelSysClock2USecWide_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-513696388, 0));
  };
  ThreadManForUser.prototype.sceKernelDeleteMsgPipe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-256386532, 0));
  };
  ThreadManForUser.prototype.sceKernelSetVTimerTimeWide_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-77322813, 0));
  };
  ThreadManForUser.prototype.sceKernelReceiveMsgPipeCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-67475075, 0));
  };
  function ThreadManForUser$registerModule$lambda(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetVTimerTime_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_0(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser._sceKernelReturnFromTimerHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_1(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelUSec2SysClock_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_2(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCreateVTimer_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_3(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetCallbackCount_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_4(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.ThreadManForUser_31327F19_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_5(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDeleteVTimer_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_6(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferMsgPipeStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_7(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCancelMsgPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_8(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSetVTimerHandlerWide_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_9(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSetVTimerTime_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_10(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferVTimerStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_11(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferSystemStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_12(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser._sceKernelReturnFromCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_13(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.ThreadManForUser_71040D5C_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_14(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReleaseThreadEventHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_15(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferCallbackStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_16(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReceiveMsgPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_17(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCreateMsgPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_18(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSendMsgPipeCB_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_19(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.ThreadManForUser_7CFF8CF3_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_20(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReferGlobalProfiler_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_21(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.ThreadManForUser_8672E3D0_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_22(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSendMsgPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_23(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelTrySendMsgPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_24(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetVTimerBase_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_25(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetVTimerBaseWide_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_26(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSysClock2USec_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_27(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.ThreadManForUser_BEED3A47_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_28(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelGetVTimerTimeWide_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_29(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelStartVTimer_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_30(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelUSec2SysClockWide_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_31(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelStopVTimer_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_32(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelCancelVTimerHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_33(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSetVTimerHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_34(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelTryReceiveMsgPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_35(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSysClock2USecWide_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_36(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelDeleteMsgPipe_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_37(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelSetVTimerTimeWide_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser$registerModule$lambda_38(this$ThreadManForUser) {
    return function (it) {
      this$ThreadManForUser.sceKernelReceiveMsgPipeCB_xt3zvs$(it);
      return Unit;
    };
  }
  ThreadManForUser.prototype.registerModule = function () {
    this.thread.registerSubmodule();
    this.mbx.registerSubmodule();
    this.callback.registerSubmodule();
    this.time.registerSubmodule();
    this.sema.registerSubmodule();
    this.mutex.registerSubmodule();
    this.eflags.registerSubmodule();
    this.fpl.registerSubmodule();
    this.vpl.registerSubmodule();
    this.alarm.registerSubmodule();
    this.registerFunctionRaw_gh35x6$('sceKernelGetVTimerTime', Kotlin.Long.fromInt(55218719), 150, void 0, ThreadManForUser$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('_sceKernelReturnFromTimerHandler', Kotlin.Long.fromInt(244480749), 150, void 0, ThreadManForUser$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUSec2SysClock', Kotlin.Long.fromInt(286125210), 150, void 0, ThreadManForUser$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCreateVTimer', Kotlin.Long.fromInt(553645408), 150, void 0, ThreadManForUser$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetCallbackCount', Kotlin.Long.fromInt(708658431), 150, void 0, ThreadManForUser$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('ThreadManForUser_31327F19', Kotlin.Long.fromInt(825392921), 150, void 0, ThreadManForUser$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDeleteVTimer', Kotlin.Long.fromInt(848272978), 150, void 0, ThreadManForUser$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferMsgPipeStatus', Kotlin.Long.fromInt(868106276), 150, void 0, ThreadManForUser$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCancelMsgPipe', Kotlin.Long.fromInt(882607693), 150, void 0, ThreadManForUser$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetVTimerHandlerWide', Kotlin.Long.fromInt(1404047002), 150, void 0, ThreadManForUser$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetVTimerTime', Kotlin.Long.fromInt(1412093488), 150, void 0, ThreadManForUser$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferVTimerStatus', Kotlin.Long.fromInt(1597161130), 150, void 0, ThreadManForUser$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferSystemStatus', Kotlin.Long.fromInt(1652453178), 150, void 0, ThreadManForUser$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('_sceKernelReturnFromCallback', Kotlin.Long.fromInt(1855890256), 150, void 0, ThreadManForUser$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('ThreadManForUser_71040D5C', Kotlin.Long.fromInt(1896090972), 150, void 0, ThreadManForUser$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReleaseThreadEventHandler', Kotlin.Long.fromInt(1928577349), 150, void 0, ThreadManForUser$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferCallbackStatus', Kotlin.Long.fromInt(1930352828), 150, void 0, ThreadManForUser$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReceiveMsgPipe', Kotlin.Long.fromInt(1954716534), 150, void 0, ThreadManForUser$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCreateMsgPipe', Kotlin.Long.fromInt(2081276576), 150, void 0, ThreadManForUser$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSendMsgPipeCB', Kotlin.Long.fromInt(2084696770), 150, void 0, ThreadManForUser$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('ThreadManForUser_7CFF8CF3', Kotlin.Long.fromInt(2097122547), 150, void 0, ThreadManForUser$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReferGlobalProfiler', new Kotlin.Long(-2112310051, 0), 150, void 0, ThreadManForUser$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('ThreadManForUser_8672E3D0', new Kotlin.Long(-2039290928, 0), 150, void 0, ThreadManForUser$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSendMsgPipe', new Kotlin.Long(-2022850643, 0), 150, void 0, ThreadManForUser$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceKernelTrySendMsgPipe', new Kotlin.Long(-2008244336, 0), 150, void 0, ThreadManForUser$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetVTimerBase', new Kotlin.Long(-1280992912, 0), 150, void 0, ThreadManForUser$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetVTimerBaseWide', new Kotlin.Long(-1212052617, 0), 150, void 0, ThreadManForUser$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSysClock2USec', new Kotlin.Long(-1167355166, 0), 150, void 0, ThreadManForUser$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('ThreadManForUser_BEED3A47', new Kotlin.Long(-1091749305, 0), 150, void 0, ThreadManForUser$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetVTimerTimeWide', new Kotlin.Long(-1061945390, 0), 150, void 0, ThreadManForUser$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStartVTimer', new Kotlin.Long(-963800009, 0), 150, void 0, ThreadManForUser$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUSec2SysClockWide', new Kotlin.Long(-926083700, 0), 150, void 0, ThreadManForUser$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('sceKernelStopVTimer', new Kotlin.Long(-793842041, 0), 150, void 0, ThreadManForUser$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('sceKernelCancelVTimerHandler', new Kotlin.Long(-757721617, 0), 150, void 0, ThreadManForUser$registerModule$lambda_32(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetVTimerHandler', new Kotlin.Long(-659383890, 0), 150, void 0, ThreadManForUser$registerModule$lambda_33(this));
    this.registerFunctionRaw_gh35x6$('sceKernelTryReceiveMsgPipe', new Kotlin.Long(-548271729, 0), 150, void 0, ThreadManForUser$registerModule$lambda_34(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSysClock2USecWide', new Kotlin.Long(-513696388, 0), 150, void 0, ThreadManForUser$registerModule$lambda_35(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDeleteMsgPipe', new Kotlin.Long(-256386532, 0), 150, void 0, ThreadManForUser$registerModule$lambda_36(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetVTimerTimeWide', new Kotlin.Long(-77322813, 0), 150, void 0, ThreadManForUser$registerModule$lambda_37(this));
    this.registerFunctionRaw_gh35x6$('sceKernelReceiveMsgPipeCB', new Kotlin.Long(-67475075, 0), 150, void 0, ThreadManForUser$registerModule$lambda_38(this));
  };
  ThreadManForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadManForUser',
    interfaces: [SceModule]
  };
  function SceKernelSemaInfo(size, name, attributes, initialCount, currentCount, maximumCount, numberOfWaitingThreads) {
    SceKernelSemaInfo$Companion_getInstance();
    if (size === void 0)
      size = 0;
    if (name === void 0)
      name = '';
    if (attributes === void 0)
      attributes = 0;
    if (initialCount === void 0)
      initialCount = 0;
    if (currentCount === void 0)
      currentCount = 0;
    if (maximumCount === void 0)
      maximumCount = 0;
    if (numberOfWaitingThreads === void 0)
      numberOfWaitingThreads = 0;
    this.size = size;
    this.name = name;
    this.attributes = attributes;
    this.initialCount = initialCount;
    this.currentCount = currentCount;
    this.maximumCount = maximumCount;
    this.numberOfWaitingThreads = numberOfWaitingThreads;
  }
  function SceKernelSemaInfo$Companion() {
    SceKernelSemaInfo$Companion_instance = this;
    Struct.call(this, SceKernelSemaInfo$SceKernelSemaInfo$Companion_init$lambda, [AS(getPropertyCallableRef('size', 1, function ($receiver) {
      return $receiver.size;
    }, function ($receiver, value) {
      $receiver.size = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('name', 1, function ($receiver) {
      return $receiver.name;
    }, function ($receiver, value) {
      $receiver.name = value;
    }), STRINGZ_init(32)), AS(getPropertyCallableRef('attributes', 1, function ($receiver) {
      return $receiver.attributes;
    }, function ($receiver, value) {
      $receiver.attributes = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('initialCount', 1, function ($receiver) {
      return $receiver.initialCount;
    }, function ($receiver, value) {
      $receiver.initialCount = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('currentCount', 1, function ($receiver) {
      return $receiver.currentCount;
    }, function ($receiver, value) {
      $receiver.currentCount = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('maximumCount', 1, function ($receiver) {
      return $receiver.maximumCount;
    }, function ($receiver, value) {
      $receiver.maximumCount = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('numberOfWaitingThreads', 1, function ($receiver) {
      return $receiver.numberOfWaitingThreads;
    }, function ($receiver, value) {
      $receiver.numberOfWaitingThreads = value;
    }), INT32_getInstance())]);
  }
  function SceKernelSemaInfo$SceKernelSemaInfo$Companion_init$lambda() {
    return new SceKernelSemaInfo();
  }
  SceKernelSemaInfo$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var SceKernelSemaInfo$Companion_instance = null;
  function SceKernelSemaInfo$Companion_getInstance() {
    if (SceKernelSemaInfo$Companion_instance === null) {
      new SceKernelSemaInfo$Companion();
    }
    return SceKernelSemaInfo$Companion_instance;
  }
  SceKernelSemaInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SceKernelSemaInfo',
    interfaces: []
  };
  function K0Structure(unk, threadId, unk1, stackAddr, unk3, f1, f2) {
    K0Structure$Companion_getInstance();
    if (unk === void 0)
      unk = new Int32Array(48);
    if (threadId === void 0)
      threadId = 0;
    if (unk1 === void 0)
      unk1 = 0;
    if (stackAddr === void 0)
      stackAddr = 0;
    if (unk3 === void 0)
      unk3 = new Int32Array(11);
    if (f1 === void 0)
      f1 = 0;
    if (f2 === void 0)
      f2 = 0;
    this.unk = unk;
    this.threadId = threadId;
    this.unk1 = unk1;
    this.stackAddr = stackAddr;
    this.unk3 = unk3;
    this.f1 = f1;
    this.f2 = f2;
  }
  function K0Structure$Companion() {
    K0Structure$Companion_instance = this;
    Struct.call(this, K0Structure$K0Structure$Companion_init$lambda, [AS(getPropertyCallableRef('unk', 1, function ($receiver) {
      return $receiver.unk;
    }, function ($receiver, value) {
      $receiver.unk = value;
    }), new INTLIKEARRAY(INT32_getInstance(), 48)), AS(getPropertyCallableRef('threadId', 1, function ($receiver) {
      return $receiver.threadId;
    }, function ($receiver, value) {
      $receiver.threadId = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('unk1', 1, function ($receiver) {
      return $receiver.unk1;
    }, function ($receiver, value) {
      $receiver.unk1 = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('stackAddr', 1, function ($receiver) {
      return $receiver.stackAddr;
    }, function ($receiver, value) {
      $receiver.stackAddr = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('unk3', 1, function ($receiver) {
      return $receiver.unk3;
    }, function ($receiver, value) {
      $receiver.unk3 = value;
    }), new INTLIKEARRAY(INT32_getInstance(), 11)), AS(getPropertyCallableRef('f1', 1, function ($receiver) {
      return $receiver.f1;
    }, function ($receiver, value) {
      $receiver.f1 = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('f2', 1, function ($receiver) {
      return $receiver.f2;
    }, function ($receiver, value) {
      $receiver.f2 = value;
    }), INT32_getInstance())]);
  }
  function K0Structure$K0Structure$Companion_init$lambda() {
    return new K0Structure();
  }
  K0Structure$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var K0Structure$Companion_instance = null;
  function K0Structure$Companion_getInstance() {
    if (K0Structure$Companion_instance === null) {
      new K0Structure$Companion();
    }
    return K0Structure$Companion_instance;
  }
  K0Structure.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'K0Structure',
    interfaces: []
  };
  function ThreadManForUser_Alarm(tmodule) {
    SceSubmodule.call(this, tmodule);
    this.tmodule = tmodule;
  }
  ThreadManForUser_Alarm.prototype.sceKernelSetAlarm_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1716697290);
  };
  ThreadManForUser_Alarm.prototype.sceKernelCancelAlarm_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2120595865);
  };
  ThreadManForUser_Alarm.prototype.sceKernelSetSysClockAlarm_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1295888046, 0));
  };
  ThreadManForUser_Alarm.prototype.sceKernelReferAlarmStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-626789020, 0));
  };
  function ThreadManForUser_Alarm$registerSubmodule$lambda$lambda(this$ThreadManForUser_Alarm) {
    return function (it) {
      this$ThreadManForUser_Alarm.sceKernelSetAlarm_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Alarm$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Alarm) {
    return function (it) {
      this$ThreadManForUser_Alarm.sceKernelCancelAlarm_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Alarm$registerSubmodule$lambda$lambda_1(this$ThreadManForUser_Alarm) {
    return function (it) {
      this$ThreadManForUser_Alarm.sceKernelSetSysClockAlarm_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Alarm$registerSubmodule$lambda$lambda_2(this$ThreadManForUser_Alarm) {
    return function (it) {
      this$ThreadManForUser_Alarm.sceKernelReferAlarmStatus_xt3zvs$(it);
      return Unit;
    };
  }
  ThreadManForUser_Alarm.prototype.registerSubmodule = function () {
    var $receiver = this.tmodule;
    $receiver.registerFunctionRaw_gh35x6$('sceKernelSetAlarm', Kotlin.Long.fromInt(1716697290), 150, void 0, ThreadManForUser_Alarm$registerSubmodule$lambda$lambda(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelCancelAlarm', Kotlin.Long.fromInt(2120595865), 150, void 0, ThreadManForUser_Alarm$registerSubmodule$lambda$lambda_0(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelSetSysClockAlarm', new Kotlin.Long(-1295888046, 0), 150, void 0, ThreadManForUser_Alarm$registerSubmodule$lambda$lambda_1(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelReferAlarmStatus', new Kotlin.Long(-626789020, 0), 150, void 0, ThreadManForUser_Alarm$registerSubmodule$lambda$lambda_2(this));
    return $receiver;
  };
  ThreadManForUser_Alarm.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadManForUser_Alarm',
    interfaces: [SceSubmodule]
  };
  function ThreadManForUser_Callback(tmodule) {
    SceSubmodule.call(this, tmodule);
    this.tmodule = tmodule;
  }
  ThreadManForUser_Callback.prototype.callback_0 = function (id) {
    var tmp$;
    return (tmp$ = get_callbackManager(this).tryGetById_za3lpa$(id)) != null ? tmp$ : sceKernelException(SceKernelErrors_getInstance().ERROR_KERNEL_NOT_FOUND_CALLBACK);
  };
  ThreadManForUser_Callback.prototype.sceKernelCreateCallback_z7cldz$ = function (name, func, arg) {
    var callback = get_callbackManager(this).create_6bdwcc$(name != null ? name : 'callback', func, arg);
    return callback.id;
  };
  ThreadManForUser_Callback.prototype.sceKernelCheckCallback = function () {
    get_callbackManager(this).executeCallbacks();
    return 0;
  };
  ThreadManForUser_Callback.prototype.sceKernelDeleteCallback_za3lpa$ = function (id) {
    get_callbackManager(this).freeById_za3lpa$(id);
    return 0;
  };
  ThreadManForUser_Callback.prototype.sceKernelNotifyCallback_vux9f0$ = function (cbid, arg2) {
    get_callbackManager(this).queueCallback_7cp2f1$(this.callback_0(cbid), arg2);
    return 0;
  };
  ThreadManForUser_Callback.prototype.sceKernelCancelCallback_za3lpa$ = function (cbid) {
    get_callbackManager(this).cancelCallback_gk9v6z$(this.callback_0(cbid));
    return 0;
  };
  function ThreadManForUser_Callback$registerSubmodule$lambda$lambda(this$ThreadManForUser_Callback) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Callback.sceKernelCreateCallback_z7cldz$($receiver.str, $receiver.ptr, $receiver.int);
    };
  }
  function ThreadManForUser_Callback$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Callback) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Callback.sceKernelCheckCallback();
    };
  }
  function ThreadManForUser_Callback$registerSubmodule$lambda$lambda_1(this$ThreadManForUser_Callback) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Callback.sceKernelDeleteCallback_za3lpa$($receiver.int);
    };
  }
  function ThreadManForUser_Callback$registerSubmodule$lambda$lambda_2(this$ThreadManForUser_Callback) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Callback.sceKernelNotifyCallback_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function ThreadManForUser_Callback$registerSubmodule$lambda$lambda_3(this$ThreadManForUser_Callback) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Callback.sceKernelCancelCallback_za3lpa$($receiver.int);
    };
  }
  ThreadManForUser_Callback.prototype.registerSubmodule = function () {
    var $receiver = this.tmodule;
    $receiver.registerFunctionInt_9l82lv$('sceKernelCreateCallback', new Kotlin.Long(-400773233, 0), 150, void 0, ThreadManForUser_Callback$registerSubmodule$lambda$lambda(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelCheckCallback', Kotlin.Long.fromInt(882732396), 150, void 0, ThreadManForUser_Callback$registerSubmodule$lambda$lambda_0(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelDeleteCallback', new Kotlin.Long(-306554812, 0), 150, void 0, ThreadManForUser_Callback$registerSubmodule$lambda$lambda_1(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelNotifyCallback', new Kotlin.Long(-1055151932, 0), 150, void 0, ThreadManForUser_Callback$registerSubmodule$lambda$lambda_2(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelCancelCallback', new Kotlin.Long(-1170189866, 0), 150, void 0, ThreadManForUser_Callback$registerSubmodule$lambda$lambda_3(this));
    return $receiver;
  };
  ThreadManForUser_Callback.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadManForUser_Callback',
    interfaces: [SceSubmodule]
  };
  function ThreadManForUser_EventFlags(tmodule) {
    SceSubmodule.call(this, tmodule);
    this.tmodule = tmodule;
    this.eventFlags = new ResourceList('EventFlag', void 0, ThreadManForUser_EventFlags$eventFlags$lambda);
  }
  ThreadManForUser_EventFlags.prototype.sceKernelCreateEventFlag_2pq1yf$ = function (name, attributes, bitPattern, optionsPtr) {
    var $receiver = this.eventFlags.alloc();
    $receiver.name = name != null ? name : 'eventFlag';
    $receiver.attributes = attributes;
    $receiver.currentPattern = bitPattern;
    $receiver.optionsPtr = optionsPtr;
    return $receiver.id;
  };
  ThreadManForUser_EventFlags.prototype.getEventFlag_0 = function (id) {
    var tmp$;
    return (tmp$ = this.eventFlags.tryGetById_za3lpa$(id)) != null ? tmp$ : sceKernelException(SceKernelErrors_getInstance().ERROR_KERNEL_NOT_FOUND_EVENT_FLAG);
  };
  ThreadManForUser_EventFlags.prototype.sceKernelPollEventFlag_xkocyi$ = function (id, bits, waitType, outBits) {
    var eventFlag = this.getEventFlag_0(id);
    if ((waitType & ~EventFlagWaitTypeSet_getInstance().MaskValidBits) !== 0)
      return SceKernelErrors_getInstance().ERROR_KERNEL_ILLEGAL_MODE;
    if ((waitType & (EventFlagWaitTypeSet_getInstance().Clear | EventFlagWaitTypeSet_getInstance().ClearAll)) === (EventFlagWaitTypeSet_getInstance().Clear | EventFlagWaitTypeSet_getInstance().ClearAll)) {
      return SceKernelErrors_getInstance().ERROR_KERNEL_ILLEGAL_MODE;
    }
    if (bits === 0)
      return SceKernelErrors_getInstance().ERROR_KERNEL_EVENT_FLAG_ILLEGAL_WAIT_PATTERN;
    var matched = eventFlag.poll_bvjn38$(bits, waitType, outBits);
    return matched ? 0 : SceKernelErrors_getInstance().ERROR_KERNEL_EVENT_FLAG_POLL_FAILED;
  };
  ThreadManForUser_EventFlags.prototype.sceKernelSetEventFlag_vux9f0$ = function (id, bitPattern) {
    var eventFlag = this.getEventFlag_0(id);
    eventFlag.setBits_fzusl$(bitPattern);
    return 0;
  };
  ThreadManForUser_EventFlags.prototype.sceKernelDeleteEventFlag_za3lpa$ = function (id) {
    this.getEventFlag_0(id);
    this.eventFlags.freeById_za3lpa$(id);
    return 0;
  };
  ThreadManForUser_EventFlags.prototype.sceKernelCancelEventFlag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-853527918, 0));
  };
  ThreadManForUser_EventFlags.prototype.sceKernelReferEventFlagStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1502936800, 0));
  };
  ThreadManForUser_EventFlags.prototype.sceKernelWaitEventFlagCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(848057450);
  };
  ThreadManForUser_EventFlags.prototype.sceKernelWaitEventFlag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1076875042);
  };
  ThreadManForUser_EventFlags.prototype.sceKernelClearEventFlag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2128394524, 0));
  };
  function ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda(this$ThreadManForUser_EventFlags) {
    return function ($receiver, it) {
      return this$ThreadManForUser_EventFlags.sceKernelCreateEventFlag_2pq1yf$($receiver.str, $receiver.int, $receiver.int, $receiver.ptr);
    };
  }
  function ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_EventFlags) {
    return function ($receiver, it) {
      return this$ThreadManForUser_EventFlags.sceKernelPollEventFlag_xkocyi$($receiver.int, $receiver.int, $receiver.int, $receiver.ptr);
    };
  }
  function ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_1(this$ThreadManForUser_EventFlags) {
    return function ($receiver, it) {
      return this$ThreadManForUser_EventFlags.sceKernelSetEventFlag_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_2(this$ThreadManForUser_EventFlags) {
    return function ($receiver, it) {
      return this$ThreadManForUser_EventFlags.sceKernelDeleteEventFlag_za3lpa$($receiver.int);
    };
  }
  function ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_3(this$ThreadManForUser_EventFlags) {
    return function (it) {
      this$ThreadManForUser_EventFlags.sceKernelCancelEventFlag_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_4(this$ThreadManForUser_EventFlags) {
    return function (it) {
      this$ThreadManForUser_EventFlags.sceKernelReferEventFlagStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_5(this$ThreadManForUser_EventFlags) {
    return function (it) {
      this$ThreadManForUser_EventFlags.sceKernelWaitEventFlagCB_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_6(this$ThreadManForUser_EventFlags) {
    return function (it) {
      this$ThreadManForUser_EventFlags.sceKernelWaitEventFlag_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_7(this$ThreadManForUser_EventFlags) {
    return function (it) {
      this$ThreadManForUser_EventFlags.sceKernelClearEventFlag_xt3zvs$(it);
      return Unit;
    };
  }
  ThreadManForUser_EventFlags.prototype.registerSubmodule = function () {
    var $receiver = this.tmodule;
    $receiver.registerFunctionInt_9l82lv$('sceKernelCreateEventFlag', Kotlin.Long.fromInt(1438779904), 150, void 0, ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelPollEventFlag', Kotlin.Long.fromInt(821905648), 150, void 0, ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_0(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelSetEventFlag', Kotlin.Long.fromInt(531716658), 150, void 0, ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_1(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelDeleteEventFlag', new Kotlin.Long(-274838416, 0), 150, void 0, ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_2(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelCancelEventFlag', new Kotlin.Long(-853527918, 0), 150, void 0, ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_3(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelReferEventFlagStatus', new Kotlin.Long(-1502936800, 0), 150, void 0, ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_4(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelWaitEventFlagCB', Kotlin.Long.fromInt(848057450), 150, void 0, ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_5(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelWaitEventFlag', Kotlin.Long.fromInt(1076875042), 150, void 0, ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_6(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelClearEventFlag', new Kotlin.Long(-2128394524, 0), 150, void 0, ThreadManForUser_EventFlags$registerSubmodule$lambda$lambda_7(this));
    return $receiver;
  };
  function ThreadManForUser_EventFlags$eventFlags$lambda(it) {
    return new PspEventFlag(it);
  }
  ThreadManForUser_EventFlags.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadManForUser_EventFlags',
    interfaces: [SceSubmodule]
  };
  function ThreadManForUser_Fpl(tmodule) {
    SceSubmodule.call(this, tmodule);
    this.tmodule = tmodule;
  }
  ThreadManForUser_Fpl.prototype.sceKernelCreateFpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1065634704, 0));
  };
  ThreadManForUser_Fpl.prototype.sceKernelFreeFpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-163493263, 0));
  };
  ThreadManForUser_Fpl.prototype.sceKernelDeleteFpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-317452064, 0));
  };
  ThreadManForUser_Fpl.prototype.sceKernelTryAllocateFpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1648027237);
  };
  ThreadManForUser_Fpl.prototype.sceKernelCancelFpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1465231073, 0));
  };
  ThreadManForUser_Fpl.prototype.sceKernelReferFplStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-669409716, 0));
  };
  ThreadManForUser_Fpl.prototype.sceKernelAllocateFpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-646321729, 0));
  };
  ThreadManForUser_Fpl.prototype.sceKernelAllocateFplCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-416797514, 0));
  };
  function ThreadManForUser_Fpl$registerSubmodule$lambda$lambda(this$ThreadManForUser_Fpl) {
    return function (it) {
      this$ThreadManForUser_Fpl.sceKernelCreateFpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Fpl$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Fpl) {
    return function (it) {
      this$ThreadManForUser_Fpl.sceKernelTryAllocateFpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Fpl$registerSubmodule$lambda$lambda_1(this$ThreadManForUser_Fpl) {
    return function (it) {
      this$ThreadManForUser_Fpl.sceKernelCancelFpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Fpl$registerSubmodule$lambda$lambda_2(this$ThreadManForUser_Fpl) {
    return function (it) {
      this$ThreadManForUser_Fpl.sceKernelReferFplStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Fpl$registerSubmodule$lambda$lambda_3(this$ThreadManForUser_Fpl) {
    return function (it) {
      this$ThreadManForUser_Fpl.sceKernelAllocateFpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Fpl$registerSubmodule$lambda$lambda_4(this$ThreadManForUser_Fpl) {
    return function (it) {
      this$ThreadManForUser_Fpl.sceKernelAllocateFplCB_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Fpl$registerSubmodule$lambda$lambda_5(this$ThreadManForUser_Fpl) {
    return function (it) {
      this$ThreadManForUser_Fpl.sceKernelDeleteFpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Fpl$registerSubmodule$lambda$lambda_6(this$ThreadManForUser_Fpl) {
    return function (it) {
      this$ThreadManForUser_Fpl.sceKernelFreeFpl_xt3zvs$(it);
      return Unit;
    };
  }
  ThreadManForUser_Fpl.prototype.registerSubmodule = function () {
    var $receiver = this.tmodule;
    $receiver.registerFunctionRaw_gh35x6$('sceKernelCreateFpl', new Kotlin.Long(-1065634704, 0), 150, void 0, ThreadManForUser_Fpl$registerSubmodule$lambda$lambda(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelTryAllocateFpl', Kotlin.Long.fromInt(1648027237), 150, void 0, ThreadManForUser_Fpl$registerSubmodule$lambda$lambda_0(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelCancelFpl', new Kotlin.Long(-1465231073, 0), 150, void 0, ThreadManForUser_Fpl$registerSubmodule$lambda$lambda_1(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelReferFplStatus', new Kotlin.Long(-669409716, 0), 150, void 0, ThreadManForUser_Fpl$registerSubmodule$lambda$lambda_2(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelAllocateFpl', new Kotlin.Long(-646321729, 0), 150, void 0, ThreadManForUser_Fpl$registerSubmodule$lambda$lambda_3(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelAllocateFplCB', new Kotlin.Long(-416797514, 0), 150, void 0, ThreadManForUser_Fpl$registerSubmodule$lambda$lambda_4(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelDeleteFpl', new Kotlin.Long(-317452064, 0), 150, void 0, ThreadManForUser_Fpl$registerSubmodule$lambda$lambda_5(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelFreeFpl', new Kotlin.Long(-163493263, 0), 150, void 0, ThreadManForUser_Fpl$registerSubmodule$lambda$lambda_6(this));
    return $receiver;
  };
  ThreadManForUser_Fpl.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadManForUser_Fpl',
    interfaces: [SceSubmodule]
  };
  function ThreadManForUser_Mbx(tmodule) {
    SceSubmodule.call(this, tmodule);
    this.tmodule = tmodule;
  }
  ThreadManForUser_Mbx.prototype.sceKernelPollMbx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(226586986);
  };
  ThreadManForUser_Mbx.prototype.sceKernelReceiveMbx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(405144948);
  };
  ThreadManForUser_Mbx.prototype.sceKernelCreateMbx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2128272867, 0));
  };
  ThreadManForUser_Mbx.prototype.sceKernelDeleteMbx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2044372262, 0));
  };
  ThreadManForUser_Mbx.prototype.sceKernelCancelReceiveMbx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2016092874, 0));
  };
  ThreadManForUser_Mbx.prototype.sceKernelReferMbxStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1461139386, 0));
  };
  ThreadManForUser_Mbx.prototype.sceKernelSendMbx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-374143458, 0));
  };
  ThreadManForUser_Mbx.prototype.sceKernelReceiveMbxCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-208116862, 0));
  };
  function ThreadManForUser_Mbx$registerSubmodule$lambda$lambda(this$ThreadManForUser_Mbx) {
    return function (it) {
      this$ThreadManForUser_Mbx.sceKernelPollMbx_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mbx$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Mbx) {
    return function (it) {
      this$ThreadManForUser_Mbx.sceKernelReceiveMbx_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mbx$registerSubmodule$lambda$lambda_1(this$ThreadManForUser_Mbx) {
    return function (it) {
      this$ThreadManForUser_Mbx.sceKernelCreateMbx_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mbx$registerSubmodule$lambda$lambda_2(this$ThreadManForUser_Mbx) {
    return function (it) {
      this$ThreadManForUser_Mbx.sceKernelDeleteMbx_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mbx$registerSubmodule$lambda$lambda_3(this$ThreadManForUser_Mbx) {
    return function (it) {
      this$ThreadManForUser_Mbx.sceKernelCancelReceiveMbx_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mbx$registerSubmodule$lambda$lambda_4(this$ThreadManForUser_Mbx) {
    return function (it) {
      this$ThreadManForUser_Mbx.sceKernelReferMbxStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mbx$registerSubmodule$lambda$lambda_5(this$ThreadManForUser_Mbx) {
    return function (it) {
      this$ThreadManForUser_Mbx.sceKernelSendMbx_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mbx$registerSubmodule$lambda$lambda_6(this$ThreadManForUser_Mbx) {
    return function (it) {
      this$ThreadManForUser_Mbx.sceKernelReceiveMbxCB_xt3zvs$(it);
      return Unit;
    };
  }
  ThreadManForUser_Mbx.prototype.registerSubmodule = function () {
    var $receiver = this.tmodule;
    $receiver.registerFunctionRaw_gh35x6$('sceKernelPollMbx', Kotlin.Long.fromInt(226586986), 150, void 0, ThreadManForUser_Mbx$registerSubmodule$lambda$lambda(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelReceiveMbx', Kotlin.Long.fromInt(405144948), 150, void 0, ThreadManForUser_Mbx$registerSubmodule$lambda$lambda_0(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelCreateMbx', new Kotlin.Long(-2128272867, 0), 150, void 0, ThreadManForUser_Mbx$registerSubmodule$lambda$lambda_1(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelDeleteMbx', new Kotlin.Long(-2044372262, 0), 150, void 0, ThreadManForUser_Mbx$registerSubmodule$lambda$lambda_2(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelCancelReceiveMbx', new Kotlin.Long(-2016092874, 0), 150, void 0, ThreadManForUser_Mbx$registerSubmodule$lambda$lambda_3(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelReferMbxStatus', new Kotlin.Long(-1461139386, 0), 150, void 0, ThreadManForUser_Mbx$registerSubmodule$lambda$lambda_4(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelSendMbx', new Kotlin.Long(-374143458, 0), 150, void 0, ThreadManForUser_Mbx$registerSubmodule$lambda$lambda_5(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelReceiveMbxCB', new Kotlin.Long(-208116862, 0), 150, void 0, ThreadManForUser_Mbx$registerSubmodule$lambda$lambda_6(this));
    return $receiver;
  };
  ThreadManForUser_Mbx.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadManForUser_Mbx',
    interfaces: [SceSubmodule]
  };
  function ThreadManForUser_Mutex(tmodule) {
    SceSubmodule.call(this, tmodule);
    this.tmodule = tmodule;
  }
  ThreadManForUser_Mutex.prototype.sceKernelTryLockMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(232575689);
  };
  ThreadManForUser_Mutex.prototype.sceKernelCreateLwMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(433058117);
  };
  ThreadManForUser_Mutex.prototype.sceKernelDeleteMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-132706370, 0));
  };
  ThreadManForUser_Mutex.prototype.sceKernelReferLwMutexStatusByID_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1276401988);
  };
  ThreadManForUser_Mutex.prototype.sceKernelLockMutexCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1542774055);
  };
  ThreadManForUser_Mutex.prototype.sceKernelDeleteLwMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1611691318);
  };
  ThreadManForUser_Mutex.prototype.sceKernelUnlockMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1798311951);
  };
  ThreadManForUser_Mutex.prototype.sceKernelCancelMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2015813060, 0));
  };
  ThreadManForUser_Mutex.prototype.sceKernelReferMutexStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1446851686, 0));
  };
  ThreadManForUser_Mutex.prototype.sceKernelLockMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1341017825, 0));
  };
  ThreadManForUser_Mutex.prototype.sceKernelCreateMutex_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1211066170, 0));
  };
  function ThreadManForUser_Mutex$registerSubmodule$lambda$lambda(this$ThreadManForUser_Mutex) {
    return function (it) {
      this$ThreadManForUser_Mutex.sceKernelTryLockMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Mutex) {
    return function (it) {
      this$ThreadManForUser_Mutex.sceKernelCreateLwMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_1(this$ThreadManForUser_Mutex) {
    return function (it) {
      this$ThreadManForUser_Mutex.sceKernelReferLwMutexStatusByID_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_2(this$ThreadManForUser_Mutex) {
    return function (it) {
      this$ThreadManForUser_Mutex.sceKernelLockMutexCB_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_3(this$ThreadManForUser_Mutex) {
    return function (it) {
      this$ThreadManForUser_Mutex.sceKernelDeleteLwMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_4(this$ThreadManForUser_Mutex) {
    return function (it) {
      this$ThreadManForUser_Mutex.sceKernelUnlockMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_5(this$ThreadManForUser_Mutex) {
    return function (it) {
      this$ThreadManForUser_Mutex.sceKernelCancelMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_6(this$ThreadManForUser_Mutex) {
    return function (it) {
      this$ThreadManForUser_Mutex.sceKernelReferMutexStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_7(this$ThreadManForUser_Mutex) {
    return function (it) {
      this$ThreadManForUser_Mutex.sceKernelLockMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_8(this$ThreadManForUser_Mutex) {
    return function (it) {
      this$ThreadManForUser_Mutex.sceKernelCreateMutex_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_9(this$ThreadManForUser_Mutex) {
    return function (it) {
      this$ThreadManForUser_Mutex.sceKernelDeleteMutex_xt3zvs$(it);
      return Unit;
    };
  }
  ThreadManForUser_Mutex.prototype.registerSubmodule = function () {
    var $receiver = this.tmodule;
    $receiver.registerFunctionRaw_gh35x6$('sceKernelTryLockMutex', Kotlin.Long.fromInt(232575689), 150, void 0, ThreadManForUser_Mutex$registerSubmodule$lambda$lambda(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelCreateLwMutex', Kotlin.Long.fromInt(433058117), 150, void 0, ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_0(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelReferLwMutexStatusByID', Kotlin.Long.fromInt(1276401988), 150, void 0, ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_1(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelLockMutexCB', Kotlin.Long.fromInt(1542774055), 150, void 0, ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_2(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelDeleteLwMutex', Kotlin.Long.fromInt(1611691318), 150, void 0, ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_3(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelUnlockMutex', Kotlin.Long.fromInt(1798311951), 150, void 0, ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_4(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelCancelMutex', new Kotlin.Long(-2015813060, 0), 150, void 0, ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_5(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelReferMutexStatus', new Kotlin.Long(-1446851686, 0), 150, void 0, ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_6(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelLockMutex', new Kotlin.Long(-1341017825, 0), 150, void 0, ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_7(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelCreateMutex', new Kotlin.Long(-1211066170, 0), 150, void 0, ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_8(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelDeleteMutex', new Kotlin.Long(-132706370, 0), 150, void 0, ThreadManForUser_Mutex$registerSubmodule$lambda$lambda_9(this));
    return $receiver;
  };
  ThreadManForUser_Mutex.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadManForUser_Mutex',
    interfaces: [SceSubmodule]
  };
  function ThreadManForUser_Sema(tmodule) {
    SceSubmodule.call(this, tmodule);
    this.tmodule = tmodule;
    this.semaphoreManager_vp5otz$_0 = lazy(ThreadManForUser_Sema$semaphoreManager$lambda(this));
  }
  function ThreadManForUser_Sema$PspSemaphore(manager, id, name) {
    Resource.call(this, manager, id, name);
    this.waitingThreads = 0;
    this.attribute = 0;
    this.initialCount = 0;
    this.count = 0;
    this.maxCount = 0;
    this.active = false;
    this.signal = new Signal2();
  }
  ThreadManForUser_Sema$PspSemaphore.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspSemaphore',
    interfaces: [Resource]
  };
  function ThreadManForUser_Sema$SemaphoreManager(emulator) {
    Manager.call(this, 'SemaphoreManager', emulator);
  }
  ThreadManForUser_Sema$SemaphoreManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SemaphoreManager',
    interfaces: [Manager]
  };
  Object.defineProperty(ThreadManForUser_Sema.prototype, 'semaphoreManager', {
    get: function () {
      var $receiver = this.semaphoreManager_vp5otz$_0;
      new PropertyMetadata('semaphoreManager');
      return $receiver.value;
    }
  });
  ThreadManForUser_Sema.prototype.sceKernelCreateSema_4xo6md$ = function (name, attribute, initialCount, maxCount, options) {
    var id = this.semaphoreManager.allocId_8be2vx$();
    var sema = this.semaphoreManager.put_wz21ut$(new ThreadManForUser_Sema$PspSemaphore(this.semaphoreManager, id, name != null ? name : 'sema' + id));
    sema.attribute = attribute;
    sema.initialCount = initialCount;
    sema.count = initialCount;
    sema.maxCount = maxCount;
    sema.signal.clear();
    sema.active = true;
    return sema.id;
  };
  ThreadManForUser_Sema.prototype._sceKernelWaitSema_uv9tso$ = function (currentThread, id_0, expectedCount_0, timeout, continuation_0, suspended) {
    var instance = new Coroutine$_sceKernelWaitSema_uv9tso$(this, currentThread, id_0, expectedCount_0, timeout, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_sceKernelWaitSema_uv9tso$($this, currentThread, id_0, expectedCount_0, timeout, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 6;
    this.$this = $this;
    this.local$sema = void 0;
    this.local$id = id_0;
    this.local$expectedCount = expectedCount_0;
  }
  Coroutine$_sceKernelWaitSema_uv9tso$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_sceKernelWaitSema_uv9tso$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_sceKernelWaitSema_uv9tso$.prototype.constructor = Coroutine$_sceKernelWaitSema_uv9tso$;
  Coroutine$_sceKernelWaitSema_uv9tso$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$sema = this.$this.semaphoreManager.getById_za3lpa$(this.local$id);
            this.state_0 = 1;
            continue;
          case 1:
            if (!this.local$sema.active || this.local$sema.count >= this.local$expectedCount) {
              this.state_0 = 7;
              continue;
            }

            this.local$sema.waitingThreads = this.local$sema.waitingThreads + 1 | 0;
            this.exceptionState_0 = 4;
            this.state_0 = 2;
            this.result_0 = waitOne_0(this.local$sema.signal, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 2:
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            this.state_0 = 1;
            continue;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.local$sema.waitingThreads = this.local$sema.waitingThreads - 1 | 0;
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          case 7:
            this.local$sema.count = this.local$sema.count - this.local$expectedCount | 0;
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 6)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ThreadManForUser_Sema.prototype.sceKernelSignalSema_4hsnk$ = function (currentThread, id, signal) {
    var sema = this.semaphoreManager.getById_za3lpa$(id);
    var a = sema.maxCount;
    var b = sema.count + signal | 0;
    sema.count = Math_0.min(a, b);
    sema.signal.invoke_11rb$(Unit);
    return 0;
  };
  ThreadManForUser_Sema.prototype.sceKernelDeleteSema_za3lpa$ = function (id) {
    var sema = this.semaphoreManager.getById_za3lpa$(id);
    sema.active = false;
    sema.signal.invoke_11rb$(Unit);
    sema.free();
    return 0;
  };
  ThreadManForUser_Sema.prototype.sceKernelReferSemaStatus_o62i3q$ = function (id, infoStream) {
    var tmp$;
    var semaphore = (tmp$ = this.semaphoreManager.tryGetById_za3lpa$(id)) != null ? tmp$ : sceKernelException(SceKernelErrors_getInstance().ERROR_KERNEL_NOT_FOUND_SEMAPHORE);
    var semaphoreInfo = new SceKernelSemaInfo();
    semaphoreInfo.size = SceKernelSemaInfo$Companion_getInstance().size;
    semaphoreInfo.attributes = semaphore.attribute;
    semaphoreInfo.currentCount = semaphore.count;
    semaphoreInfo.initialCount = semaphore.initialCount;
    semaphoreInfo.maximumCount = semaphore.maxCount;
    semaphoreInfo.name = semaphore.name;
    semaphoreInfo.numberOfWaitingThreads = semaphore.waitingThreads;
    write(infoStream, SceKernelSemaInfo$Companion_getInstance(), semaphoreInfo);
    return 0;
  };
  ThreadManForUser_Sema.prototype.sceKernelPollSema_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1488058679);
  };
  ThreadManForUser_Sema.prototype.sceKernelCancelSema_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1879180894, 0));
  };
  function ThreadManForUser_Sema$registerSubmodule$lambda$lambda(this$ThreadManForUser_Sema) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Sema.sceKernelCreateSema_4xo6md$($receiver.str, $receiver.int, $receiver.int, $receiver.int, $receiver.ptr);
    };
  }
  function ThreadManForUser_Sema$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Sema_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$ThreadManForUser_Sema$registerSubmodule$lambda$lambda(this$ThreadManForUser_Sema_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ThreadManForUser_Sema$registerSubmodule$lambda$lambda(this$ThreadManForUser_Sema_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$ThreadManForUser_Sema = this$ThreadManForUser_Sema_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ThreadManForUser_Sema$registerSubmodule$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ThreadManForUser_Sema$registerSubmodule$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ThreadManForUser_Sema$registerSubmodule$lambda$lambda.prototype.constructor = Coroutine$ThreadManForUser_Sema$registerSubmodule$lambda$lambda;
  Coroutine$ThreadManForUser_Sema$registerSubmodule$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$ThreadManForUser_Sema._sceKernelWaitSema_uv9tso$(this.local$$receiver.thread, this.local$$receiver.int, this.local$$receiver.int, this.local$$receiver.ptr, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ThreadManForUser_Sema$registerSubmodule$lambda$lambda_1(this$ThreadManForUser_Sema_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$ThreadManForUser_Sema$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Sema_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ThreadManForUser_Sema$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Sema_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$ThreadManForUser_Sema = this$ThreadManForUser_Sema_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ThreadManForUser_Sema$registerSubmodule$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ThreadManForUser_Sema$registerSubmodule$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ThreadManForUser_Sema$registerSubmodule$lambda$lambda_0.prototype.constructor = Coroutine$ThreadManForUser_Sema$registerSubmodule$lambda$lambda_0;
  Coroutine$ThreadManForUser_Sema$registerSubmodule$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$ThreadManForUser_Sema._sceKernelWaitSema_uv9tso$(this.local$$receiver.thread, this.local$$receiver.int, this.local$$receiver.int, this.local$$receiver.ptr, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ThreadManForUser_Sema$registerSubmodule$lambda$lambda_2(this$ThreadManForUser_Sema) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Sema.sceKernelSignalSema_4hsnk$($receiver.thread, $receiver.int, $receiver.int);
    };
  }
  function ThreadManForUser_Sema$registerSubmodule$lambda$lambda_3(this$ThreadManForUser_Sema) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Sema.sceKernelDeleteSema_za3lpa$($receiver.int);
    };
  }
  function ThreadManForUser_Sema$registerSubmodule$lambda$lambda_4(this$ThreadManForUser_Sema) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Sema.sceKernelReferSemaStatus_o62i3q$($receiver.int, $receiver.ptr);
    };
  }
  function ThreadManForUser_Sema$registerSubmodule$lambda$lambda_5(this$ThreadManForUser_Sema) {
    return function (it) {
      this$ThreadManForUser_Sema.sceKernelPollSema_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Sema$registerSubmodule$lambda$lambda_6(this$ThreadManForUser_Sema) {
    return function (it) {
      this$ThreadManForUser_Sema.sceKernelCancelSema_xt3zvs$(it);
      return Unit;
    };
  }
  ThreadManForUser_Sema.prototype.registerSubmodule = function () {
    var $receiver = this.tmodule;
    $receiver.registerFunctionInt_9l82lv$('sceKernelCreateSema', new Kotlin.Long(-690336863, 0), 150, void 0, ThreadManForUser_Sema$registerSubmodule$lambda$lambda(this));
    $receiver.registerFunctionSuspendInt_q1rm4a$('sceKernelWaitSema', Kotlin.Long.fromInt(1312428293), 150, void 0, false, ThreadManForUser_Sema$registerSubmodule$lambda$lambda_0(this));
    $receiver.registerFunctionSuspendInt_q1rm4a$('sceKernelWaitSemaCB', Kotlin.Long.fromInt(1830890412), 150, void 0, true, ThreadManForUser_Sema$registerSubmodule$lambda$lambda_1(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelSignalSema', Kotlin.Long.fromInt(1062463040), 150, void 0, ThreadManForUser_Sema$registerSubmodule$lambda$lambda_2(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelDeleteSema', Kotlin.Long.fromInt(683034780), 150, void 0, ThreadManForUser_Sema$registerSubmodule$lambda$lambda_3(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelReferSemaStatus', new Kotlin.Long(-1133515835, 0), 150, void 0, ThreadManForUser_Sema$registerSubmodule$lambda$lambda_4(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelPollSema', Kotlin.Long.fromInt(1488058679), 150, void 0, ThreadManForUser_Sema$registerSubmodule$lambda$lambda_5(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelCancelSema', new Kotlin.Long(-1879180894, 0), 150, void 0, ThreadManForUser_Sema$registerSubmodule$lambda$lambda_6(this));
    return $receiver;
  };
  function ThreadManForUser_Sema$semaphoreManager$lambda(this$ThreadManForUser_Sema) {
    return function () {
      return new ThreadManForUser_Sema$SemaphoreManager(this$ThreadManForUser_Sema.emulator);
    };
  }
  ThreadManForUser_Sema.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadManForUser_Sema',
    interfaces: [SceSubmodule]
  };
  function ThreadManForUser_Thread(tmodule) {
    SceSubmodule.call(this, tmodule);
    this.tmodule = tmodule;
  }
  Object.defineProperty(ThreadManForUser_Thread.prototype, 'logger', {
    get: function () {
      return this.tmodule.logger;
    }
  });
  ThreadManForUser_Thread.prototype.thread_0 = function (id) {
    var tmp$;
    tmp$ = get_threadManager(this).tryGetById_za3lpa$(id);
    if (tmp$ == null) {
      throw new SceKernelException(SceKernelErrors_getInstance().ERROR_KERNEL_NOT_FOUND_THREAD);
    }
    return tmp$;
  };
  ThreadManForUser_Thread.prototype.sceKernelCreateThread_4ssxzt$ = function (name, entryPoint, initPriority, stackSize, attributes, optionPtr) {
    var $this = this.logger;
    var level = LogLevel.TRACE;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, "sceKernelCreateThread: '" + toString(name) + "', " + get_hex(entryPoint) + ', ' + initPriority + ', ' + stackSize + ', ' + get_hex(attributes) + ', ' + optionPtr);
    }
    var thread = get_threadManager(this).create_7jlznu$(name != null ? name : 'unknown', entryPoint, initPriority, stackSize, attributes, optionPtr);
    var k0Struct = new K0Structure(void 0, thread.id, void 0, thread.stack.low.toInt(), void 0, -1, -1);
    get_mem(this).sw_vux9f0$(thread.stack.low.toInt(), thread.id);
    set_K0(thread.state, thread.putDataInStack_ir89t6$(K0Structure$Companion_getInstance().toByteArray_11rb$(k0Struct)).low);
    return thread.id;
  };
  ThreadManForUser_Thread.prototype.sceKernelStartThread_uv9tso$ = function (currentThread, threadId, userDataLength, userDataPtr) {
    var $this = this.logger;
    var level = LogLevel.TRACE;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceKernelStartThread: ' + threadId + ', ' + userDataLength + ', ' + userDataPtr);
    }
    var thread = this.thread_0(threadId);
    if (get_isNotNull(userDataPtr)) {
      var localUserDataPtr = thread.putDataInStack_ir89t6$(readBytes_1(userDataPtr, userDataLength));
      thread.state.r4 = userDataLength;
      thread.state.r5 = localUserDataPtr.addr;
    }
     else {
      thread.state.r4 = 0;
      thread.state.r5 = 0;
    }
    set_GP(thread.state, get_GP(currentThread.state));
    thread.start();
    get_threadManager(this).suspend();
    return 0;
  };
  ThreadManForUser_Thread.prototype.sceKernelGetThreadCurrentPriority_6r5tao$ = function (thread) {
    return thread.priority;
  };
  ThreadManForUser_Thread.prototype._sceKernelSleepThread_ctrw0n$ = function (currentThread_0, cb, continuation_0, suspended) {
    var instance = new Coroutine$_sceKernelSleepThread_ctrw0n$(this, currentThread_0, cb, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_sceKernelSleepThread_ctrw0n$($this, currentThread_0, cb, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$currentThread = currentThread_0;
  }
  Coroutine$_sceKernelSleepThread_ctrw0n$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_sceKernelSleepThread_ctrw0n$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_sceKernelSleepThread_ctrw0n$.prototype.constructor = Coroutine$_sceKernelSleepThread_ctrw0n$;
  Coroutine$_sceKernelSleepThread_ctrw0n$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = waitOne_0(this.local$currentThread.onWakeUp, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ThreadManForUser_Thread.prototype.sceKernelSleepThread_6r5tao$ = function (currentThread, continuation) {
    return this._sceKernelSleepThread_ctrw0n$(currentThread, false, continuation);
  };
  ThreadManForUser_Thread.prototype.sceKernelSleepThreadCB_6r5tao$ = function (currentThread, continuation) {
    return this._sceKernelSleepThread_ctrw0n$(currentThread, true, continuation);
  };
  ThreadManForUser_Thread.prototype._sceKernelDelayThread_s7iag9$ = function (thread_0, microseconds_0, cb, continuation_0, suspended) {
    var instance = new Coroutine$_sceKernelDelayThread_s7iag9$(this, thread_0, microseconds_0, cb, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_sceKernelDelayThread_s7iag9$($this, thread_0, microseconds_0, cb, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$thread = thread_0;
    this.local$microseconds = microseconds_0;
  }
  Coroutine$_sceKernelDelayThread_s7iag9$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_sceKernelDelayThread_s7iag9$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_sceKernelDelayThread_s7iag9$.prototype.constructor = Coroutine$_sceKernelDelayThread_s7iag9$;
  Coroutine$_sceKernelDelayThread_s7iag9$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$thread.sleepMicro_za3lpa$(this.local$microseconds, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ThreadManForUser_Thread.prototype.sceKernelDelayThreadCB_3bjp42$ = function (thread, microseconds, continuation) {
    return this._sceKernelDelayThread_s7iag9$(thread, microseconds, true, continuation);
  };
  ThreadManForUser_Thread.prototype.sceKernelDelayThread_3bjp42$ = function (thread, microseconds, continuation) {
    return this._sceKernelDelayThread_s7iag9$(thread, microseconds, false, continuation);
  };
  function ThreadManForUser_Thread$_sceKernelWaitThreadEnd$lambda(it) {
    println('ENDED!');
    return Unit;
  }
  ThreadManForUser_Thread.prototype._sceKernelWaitThreadEnd_cyzw2l$ = function (currentThread_0, threadId_0, timeout, cb, continuation_0, suspended) {
    var instance = new Coroutine$_sceKernelWaitThreadEnd_cyzw2l$(this, currentThread_0, threadId_0, timeout, cb, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_sceKernelWaitThreadEnd_cyzw2l$($this, currentThread_0, threadId_0, timeout, cb, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$currentThread = currentThread_0;
    this.local$threadId = threadId_0;
  }
  Coroutine$_sceKernelWaitThreadEnd_cyzw2l$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_sceKernelWaitThreadEnd_cyzw2l$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_sceKernelWaitThreadEnd_cyzw2l$.prototype.constructor = Coroutine$_sceKernelWaitThreadEnd_cyzw2l$;
  Coroutine$_sceKernelWaitThreadEnd_cyzw2l$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var thread = this.$this.thread_0(this.local$threadId);
            this.local$currentThread.waitInfo = this.local$threadId;
            thread.onEnd.add_qlkmfe$(ThreadManForUser_Thread$_sceKernelWaitThreadEnd$lambda);
            this.state_0 = 2;
            this.result_0 = waitOne_0(thread.onEnd, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            println('Resumed!');
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ThreadManForUser_Thread.prototype.sceKernelWaitThreadEnd_3b407q$ = function (currentThread, threadId, timeout, continuation) {
    return this._sceKernelWaitThreadEnd_cyzw2l$(currentThread, threadId, timeout, false, continuation);
  };
  ThreadManForUser_Thread.prototype.sceKernelWaitThreadEndCB_3b407q$ = function (currentThread, threadId, timeout, continuation) {
    return this._sceKernelWaitThreadEnd_cyzw2l$(currentThread, threadId, timeout, true, continuation);
  };
  ThreadManForUser_Thread.prototype.sceKernelReferThreadStatus_3b407q$ = function (currentThread, threadId, out) {
    var actualThreadId = threadId === -1 ? currentThread.id : threadId;
    var thread = this.thread_0(actualThreadId);
    var info = new SceKernelThreadInfo();
    info.size = SceKernelThreadInfo$Companion_getInstance().size;
    info.name = thread.name;
    info.attributes = thread.attributes;
    info.status = thread.status;
    info.threadPreemptionCount = thread.preemptionCount;
    info.entryPoint = thread.entryPoint;
    info.stackPointer = thread.stack.high.toInt();
    info.stackSize = thread.stack.size.toInt();
    info.GP = get_GP(thread.state);
    info.priorityInit = thread.initPriority;
    info.priority = thread.priority;
    info.waitType = 0;
    info.waitId = 0;
    info.wakeupCount = 0;
    info.exitStatus = thread.exitStatus;
    info.runClocksLow = 0;
    info.runClocksHigh = 0;
    info.interruptPreemptionCount = 0;
    info.threadPreemptionCount = 0;
    info.releaseCount = 0;
    write(out, SceKernelThreadInfo$Companion_getInstance(), info);
    return 0;
  };
  ThreadManForUser_Thread.prototype.sceKernelGetThreadId_6r5tao$ = function (thread) {
    return thread.id;
  };
  ThreadManForUser_Thread.prototype.sceKernelTerminateThread_za3lpa$ = function (threadId) {
    var newThread = this.thread_0(threadId);
    newThread.stop_61zpoe$('_sceKernelTerminateThread');
    newThread.exitStatus = (new Kotlin.Long(-2147352148, 0)).toInt();
    return 0;
  };
  ThreadManForUser_Thread.prototype.sceKernelDeleteThread_za3lpa$ = function (id) {
    var thread = this.thread_0(id);
    thread.delete();
    return 0;
  };
  ThreadManForUser_Thread.prototype.sceKernelExitThread_3bjp42$ = function (thread, exitStatus) {
    thread.exitStatus = exitStatus;
    thread.stop_61zpoe$();
    get_threadManager(this).suspend();
  };
  ThreadManForUser_Thread.prototype.sceKernelChangeCurrentThreadAttr_4hsnk$ = function (currentThread, removeAttributes, addAttributes) {
    currentThread.attributes = currentThread.attributes & ~removeAttributes | addAttributes;
    return 0;
  };
  ThreadManForUser_Thread.prototype.sceKernelChangeThreadPriority_vux9f0$ = function (id, priority) {
    var thread = this.thread_0(id);
    thread.priority = priority;
    return 0;
  };
  ThreadManForUser_Thread.prototype.sceKernelTerminateDeleteThread_za3lpa$ = function (id) {
    this.sceKernelTerminateThread_za3lpa$(id);
    this.sceKernelDeleteThread_za3lpa$(id);
    return 0;
  };
  ThreadManForUser_Thread.prototype.sceKernelGetThreadExitStatus_za3lpa$ = function (threadId) {
    return this.thread_0(threadId).exitStatus;
  };
  ThreadManForUser_Thread.prototype.sceKernelRegisterThreadEventHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(202403411);
  };
  ThreadManForUser_Thread.prototype.sceKernelDelaySysClockThreadCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(293726563);
  };
  ThreadManForUser_Thread.prototype.sceKernelDonateWakeupThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(452545795);
  };
  ThreadManForUser_Thread.prototype.sceKernelResumeDispatchThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(669134530);
  };
  ThreadManForUser_Thread.prototype.sceKernelReleaseWaitThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(741662803);
  };
  ThreadManForUser_Thread.prototype.sceKernelReferThreadEventHandlerStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(916384619);
  };
  ThreadManForUser_Thread.prototype.sceKernelSuspendDispatchThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(987073420);
  };
  ThreadManForUser_Thread.prototype.sceKernelGetThreadStackFreeSize_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1376296097);
  };
  ThreadManForUser_Thread.prototype._sceKernelExitThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1395282478);
  };
  ThreadManForUser_Thread.prototype.sceKernelGetThreadmanIdType_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1473209053);
  };
  ThreadManForUser_Thread.prototype.sceKernelReferThreadProfiler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1691636750);
  };
  ThreadManForUser_Thread.prototype.sceKernelResumeThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1964338831);
  };
  ThreadManForUser_Thread.prototype.sceKernelExitDeleteThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2137202021, 0));
  };
  ThreadManForUser_Thread.prototype.sceKernelRotateThreadReadyQueue_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1859955545, 0));
  };
  ThreadManForUser_Thread.prototype.sceKernelGetThreadmanIdList_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1807654608, 0));
  };
  ThreadManForUser_Thread.prototype.sceKernelDelaySysClockThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1122878050, 0));
  };
  ThreadManForUser_Thread.prototype.sceKernelSuspendThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1723534561, 0));
  };
  ThreadManForUser_Thread.prototype.sceKernelSleepThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1697770722, 0));
  };
  ThreadManForUser_Thread.prototype.sceKernelCheckThreadStack_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-784605547, 0));
  };
  ThreadManForUser_Thread.prototype.sceKernelWakeupThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-711021265, 0));
  };
  ThreadManForUser_Thread.prototype.sceKernelCancelWakeupThread_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-53498586, 0));
  };
  ThreadManForUser_Thread.prototype.sceKernelReferThreadRunStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-3970540, 0));
  };
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda(this$ThreadManForUser_Thread) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Thread.sceKernelCreateThread_4ssxzt$($receiver.str, $receiver.int, $receiver.int, $receiver.int, $receiver.int, $receiver.ptr);
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Thread) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Thread.sceKernelStartThread_uv9tso$($receiver.thread, $receiver.int, $receiver.int, $receiver.ptr);
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_1(this$ThreadManForUser_Thread) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Thread.sceKernelGetThreadCurrentPriority_6r5tao$($receiver.thread);
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_2(this$ThreadManForUser_Thread_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda(this$ThreadManForUser_Thread_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda(this$ThreadManForUser_Thread_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$ThreadManForUser_Thread = this$ThreadManForUser_Thread_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda.prototype.constructor = Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda;
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$ThreadManForUser_Thread.sceKernelSleepThread_6r5tao$(this.local$$receiver.thread, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_3(this$ThreadManForUser_Thread_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Thread_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Thread_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$ThreadManForUser_Thread = this$ThreadManForUser_Thread_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_0.prototype.constructor = Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_0;
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$ThreadManForUser_Thread.sceKernelSleepThreadCB_6r5tao$(this.local$$receiver.thread, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_4(this$ThreadManForUser_Thread_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_1(this$ThreadManForUser_Thread_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_1(this$ThreadManForUser_Thread_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$ThreadManForUser_Thread = this$ThreadManForUser_Thread_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_1.prototype.constructor = Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_1;
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$ThreadManForUser_Thread.sceKernelDelayThreadCB_3bjp42$(this.local$$receiver.thread, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_5(this$ThreadManForUser_Thread_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_2(this$ThreadManForUser_Thread_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_2(this$ThreadManForUser_Thread_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$ThreadManForUser_Thread = this$ThreadManForUser_Thread_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_2.prototype.constructor = Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_2;
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$ThreadManForUser_Thread.sceKernelDelayThread_3bjp42$(this.local$$receiver.thread, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_6(this$ThreadManForUser_Thread_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_3(this$ThreadManForUser_Thread_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_3(this$ThreadManForUser_Thread_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$ThreadManForUser_Thread = this$ThreadManForUser_Thread_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_3.prototype.constructor = Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_3;
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$ThreadManForUser_Thread.sceKernelWaitThreadEnd_3b407q$(this.local$$receiver.thread, this.local$$receiver.int, this.local$$receiver.ptr, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_7(this$ThreadManForUser_Thread_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_4(this$ThreadManForUser_Thread_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_4(this$ThreadManForUser_Thread_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$ThreadManForUser_Thread = this$ThreadManForUser_Thread_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_4.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_4.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_4.prototype.constructor = Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_4;
  Coroutine$ThreadManForUser_Thread$registerSubmodule$lambda$lambda_4.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$ThreadManForUser_Thread.sceKernelWaitThreadEndCB_3b407q$(this.local$$receiver.thread, this.local$$receiver.int, this.local$$receiver.ptr, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_8(this$ThreadManForUser_Thread) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Thread.sceKernelReferThreadStatus_3b407q$($receiver.thread, $receiver.int, $receiver.ptr);
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_9(this$ThreadManForUser_Thread) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Thread.sceKernelGetThreadId_6r5tao$($receiver.thread);
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_10(this$ThreadManForUser_Thread) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Thread.sceKernelTerminateThread_za3lpa$($receiver.int);
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_11(this$ThreadManForUser_Thread) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Thread.sceKernelDeleteThread_za3lpa$($receiver.int);
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_12(this$ThreadManForUser_Thread) {
    return function ($receiver, it) {
      this$ThreadManForUser_Thread.sceKernelExitThread_3bjp42$($receiver.thread, $receiver.int);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_13(this$ThreadManForUser_Thread) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Thread.sceKernelChangeCurrentThreadAttr_4hsnk$($receiver.thread, $receiver.int, $receiver.int);
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_14(this$ThreadManForUser_Thread) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Thread.sceKernelChangeThreadPriority_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_15(this$ThreadManForUser_Thread) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Thread.sceKernelTerminateDeleteThread_za3lpa$($receiver.int);
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_16(this$ThreadManForUser_Thread) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Thread.sceKernelGetThreadExitStatus_za3lpa$($receiver.int);
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_17(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelRegisterThreadEventHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_18(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelDelaySysClockThreadCB_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_19(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelDonateWakeupThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_20(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelResumeDispatchThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_21(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelReleaseWaitThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_22(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelReferThreadEventHandlerStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_23(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelSuspendDispatchThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_24(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelGetThreadStackFreeSize_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_25(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread._sceKernelExitThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_26(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelGetThreadmanIdType_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_27(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelReferThreadProfiler_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_28(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelResumeThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_29(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelExitDeleteThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_30(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelRotateThreadReadyQueue_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_31(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelGetThreadmanIdList_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_32(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelSuspendThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_33(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelDelaySysClockThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_34(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelCheckThreadStack_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_35(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelWakeupThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_36(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelCancelWakeupThread_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Thread$registerSubmodule$lambda$lambda_37(this$ThreadManForUser_Thread) {
    return function (it) {
      this$ThreadManForUser_Thread.sceKernelReferThreadRunStatus_xt3zvs$(it);
      return Unit;
    };
  }
  ThreadManForUser_Thread.prototype.registerSubmodule = function () {
    var $receiver = this.tmodule;
    $receiver.registerFunctionInt_9l82lv$('sceKernelCreateThread', Kotlin.Long.fromInt(1148030438), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelStartThread', new Kotlin.Long(-193624995, 0), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_0(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelGetThreadCurrentPriority', new Kotlin.Long(-1800773138, 0), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_1(this));
    $receiver.registerFunctionSuspendInt_q1rm4a$('sceKernelSleepThread', new Kotlin.Long(-1697770722, 0), 150, void 0, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_2(this));
    $receiver.registerFunctionSuspendInt_q1rm4a$('sceKernelSleepThreadCB', new Kotlin.Long(-2105381008, 0), 150, void 0, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_3(this));
    $receiver.registerFunctionSuspendInt_q1rm4a$('sceKernelDelayThreadCB', Kotlin.Long.fromInt(1759157814), 150, void 0, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_4(this));
    $receiver.registerFunctionSuspendInt_q1rm4a$('sceKernelDelayThread', new Kotlin.Long(-827462841, 0), 150, void 0, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_5(this));
    $receiver.registerFunctionSuspendInt_q1rm4a$('sceKernelWaitThreadEnd', Kotlin.Long.fromInt(663490037), 150, void 0, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_6(this));
    $receiver.registerFunctionSuspendInt_q1rm4a$('sceKernelWaitThreadEndCB', new Kotlin.Long(-2079424205, 0), 150, void 0, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_7(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelReferThreadStatus', Kotlin.Long.fromInt(398551118), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_8(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelGetThreadId', Kotlin.Long.fromInt(691750328), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_9(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelTerminateThread', Kotlin.Long.fromInt(1633944506), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_10(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelDeleteThread', new Kotlin.Long(-1616888621, 0), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_11(this));
    $receiver.registerFunctionVoid_dc3d86$('sceKernelExitThread', new Kotlin.Long(-1435252427, 0), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_12(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelChangeCurrentThreadAttr', new Kotlin.Long(-361460175, 0), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_13(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelChangeThreadPriority', Kotlin.Long.fromInt(1908185201), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_14(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelTerminateDeleteThread', Kotlin.Long.fromInt(943684556), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_15(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelGetThreadExitStatus', Kotlin.Long.fromInt(991444518), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_16(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelRegisterThreadEventHandler', Kotlin.Long.fromInt(202403411), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_17(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelDelaySysClockThreadCB', Kotlin.Long.fromInt(293726563), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_18(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelDonateWakeupThread', Kotlin.Long.fromInt(452545795), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_19(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelResumeDispatchThread', Kotlin.Long.fromInt(669134530), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_20(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelReleaseWaitThread', Kotlin.Long.fromInt(741662803), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_21(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelReferThreadEventHandlerStatus', Kotlin.Long.fromInt(916384619), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_22(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelSuspendDispatchThread', Kotlin.Long.fromInt(987073420), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_23(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelGetThreadStackFreeSize', Kotlin.Long.fromInt(1376296097), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_24(this));
    $receiver.registerFunctionRaw_gh35x6$('_sceKernelExitThread', Kotlin.Long.fromInt(1395282478), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_25(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelGetThreadmanIdType', Kotlin.Long.fromInt(1473209053), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_26(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelReferThreadProfiler', Kotlin.Long.fromInt(1691636750), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_27(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelResumeThread', Kotlin.Long.fromInt(1964338831), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_28(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelExitDeleteThread', new Kotlin.Long(-2137202021, 0), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_29(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelRotateThreadReadyQueue', new Kotlin.Long(-1859955545, 0), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_30(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelGetThreadmanIdList', new Kotlin.Long(-1807654608, 0), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_31(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelSuspendThread', new Kotlin.Long(-1723534561, 0), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_32(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelDelaySysClockThread', new Kotlin.Long(-1122878050, 0), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_33(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelCheckThreadStack', new Kotlin.Long(-784605547, 0), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_34(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelWakeupThread', new Kotlin.Long(-711021265, 0), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_35(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelCancelWakeupThread', new Kotlin.Long(-53498586, 0), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_36(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelReferThreadRunStatus', new Kotlin.Long(-3970540, 0), 150, void 0, ThreadManForUser_Thread$registerSubmodule$lambda$lambda_37(this));
    return $receiver;
  };
  ThreadManForUser_Thread.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadManForUser_Thread',
    interfaces: [SceSubmodule]
  };
  function ThreadManForUser_Time(tmodule) {
    SceSubmodule.call(this, tmodule);
    this.tmodule = tmodule;
  }
  ThreadManForUser_Time.prototype.sceKernelGetSystemTimeWide = function () {
    return get_rtc(this).getTimeInMicroseconds();
  };
  ThreadManForUser_Time.prototype.sceKernelGetSystemTimeLow = function () {
    return get_rtc(this).getTimeInMicrosecondsInt();
  };
  ThreadManForUser_Time.prototype.sceKernelGetSystemTime_wpue92$ = function (ptr) {
    if (get_isNull(ptr))
      return SceKernelErrors_getInstance().ERROR_ERRNO_INVALID_ARGUMENT;
    ptr.set_6svq3l$(0, get_rtc(this).getTimeInMicroseconds());
    return 0;
  };
  function ThreadManForUser_Time$registerSubmodule$lambda$lambda(this$ThreadManForUser_Time) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Time.sceKernelGetSystemTimeWide();
    };
  }
  function ThreadManForUser_Time$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Time) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Time.sceKernelGetSystemTimeLow();
    };
  }
  function ThreadManForUser_Time$registerSubmodule$lambda$lambda_1(this$ThreadManForUser_Time) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Time.sceKernelGetSystemTime_wpue92$($receiver.ptr64);
    };
  }
  ThreadManForUser_Time.prototype.registerSubmodule = function () {
    var $receiver = this.tmodule;
    $receiver.registerFunctionLong_d75y9q$('sceKernelGetSystemTimeWide', new Kotlin.Long(-2101586057, 0), 150, void 0, ThreadManForUser_Time$registerSubmodule$lambda$lambda(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelGetSystemTimeLow', Kotlin.Long.fromInt(916379037), 150, void 0, ThreadManForUser_Time$registerSubmodule$lambda$lambda_0(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelGetSystemTime', new Kotlin.Long(-613183691, 0), 150, void 0, ThreadManForUser_Time$registerSubmodule$lambda$lambda_1(this));
    return $receiver;
  };
  ThreadManForUser_Time.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadManForUser_Time',
    interfaces: [SceSubmodule]
  };
  function ThreadManForUser_Vpl(tmodule) {
    ThreadManForUser_Vpl$Companion_getInstance();
    SceSubmodule.call(this, tmodule);
    this.tmodule = tmodule;
    this.vpls = new ResourceList('Vpl', ThreadManForUser_Vpl$vpls$lambda, ThreadManForUser_Vpl$vpls$lambda_0);
  }
  function ThreadManForUser_Vpl$Companion() {
    ThreadManForUser_Vpl$Companion_instance = this;
    this.PSP_VPL_ATTR_FIFO = 0;
    this.PSP_VPL_ATTR_PRIORITY = 256;
    this.PSP_VPL_ATTR_SMALLEST = 512;
    this.PSP_VPL_ATTR_MASK_ORDER = 768;
    this.PSP_VPL_ATTR_HIGHMEM = 16384;
    this.PSP_VPL_ATTR_KNOWN = this.PSP_VPL_ATTR_FIFO | this.PSP_VPL_ATTR_PRIORITY | this.PSP_VPL_ATTR_SMALLEST | this.PSP_VPL_ATTR_HIGHMEM;
  }
  ThreadManForUser_Vpl$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ThreadManForUser_Vpl$Companion_instance = null;
  function ThreadManForUser_Vpl$Companion_getInstance() {
    if (ThreadManForUser_Vpl$Companion_instance === null) {
      new ThreadManForUser_Vpl$Companion();
    }
    return ThreadManForUser_Vpl$Companion_instance;
  }
  function ThreadManForUser_Vpl$PspVpl(id) {
    this.id_fvisu8$_0 = id;
    this.info = new ThreadManForUser_Vpl$SceKernelVplInfo();
    this.part_fa5tgo$_0 = this.part_fa5tgo$_0;
    this.waits = ArrayList_init();
  }
  Object.defineProperty(ThreadManForUser_Vpl$PspVpl.prototype, 'id', {
    get: function () {
      return this.id_fvisu8$_0;
    }
  });
  Object.defineProperty(ThreadManForUser_Vpl$PspVpl.prototype, 'part', {
    get: function () {
      if (this.part_fa5tgo$_0 == null)
        return throwUPAE('part');
      return this.part_fa5tgo$_0;
    },
    set: function (part) {
      this.part_fa5tgo$_0 = part;
    }
  });
  function ThreadManForUser_Vpl$PspVpl$WaitHandle(size, signal) {
    if (signal === void 0)
      signal = new Signal();
    this.size = size;
    this.signal = signal;
  }
  ThreadManForUser_Vpl$PspVpl$WaitHandle.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WaitHandle',
    interfaces: []
  };
  ThreadManForUser_Vpl$PspVpl$WaitHandle.prototype.component1 = function () {
    return this.size;
  };
  ThreadManForUser_Vpl$PspVpl$WaitHandle.prototype.component2 = function () {
    return this.signal;
  };
  ThreadManForUser_Vpl$PspVpl$WaitHandle.prototype.copy_xbyy6h$ = function (size, signal) {
    return new ThreadManForUser_Vpl$PspVpl$WaitHandle(size === void 0 ? this.size : size, signal === void 0 ? this.signal : signal);
  };
  ThreadManForUser_Vpl$PspVpl$WaitHandle.prototype.toString = function () {
    return 'WaitHandle(size=' + Kotlin.toString(this.size) + (', signal=' + Kotlin.toString(this.signal)) + ')';
  };
  ThreadManForUser_Vpl$PspVpl$WaitHandle.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.signal) | 0;
    return result;
  };
  ThreadManForUser_Vpl$PspVpl$WaitHandle.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.size, other.size) && Kotlin.equals(this.signal, other.signal)))));
  };
  ThreadManForUser_Vpl$PspVpl.prototype.getUpdatedInfo = function () {
    var $receiver = this.info;
    this.info.freeSize = this.part.getTotalFreeMemoryInt();
    this.info.numWaitThreads = this.waits.size;
    return $receiver;
  };
  ThreadManForUser_Vpl$PspVpl.prototype.waitFree_7vhjuk$ = function (size_0, timeout_0, continuation_0, suspended) {
    var instance = new Coroutine$waitFree_7vhjuk$(this, size_0, timeout_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$waitFree_7vhjuk$($this, size_0, timeout_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 5;
    this.$this = $this;
    this.local$wait = void 0;
    this.local$size = size_0;
    this.local$timeout = timeout_0;
  }
  Coroutine$waitFree_7vhjuk$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitFree_7vhjuk$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitFree_7vhjuk$.prototype.constructor = Coroutine$waitFree_7vhjuk$;
  Coroutine$waitFree_7vhjuk$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$timeout === void 0)
              this.local$timeout = null;
            this.local$wait = new ThreadManForUser_Vpl$PspVpl$WaitHandle(this.local$size);
            this.$this.waits.add_11rb$(this.local$wait);
            this.exceptionState_0 = 3;
            this.state_0 = 1;
            this.result_0 = waitOneOptTimeout(this.local$wait.signal, this.local$timeout, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            this.exceptionState_0 = 5;
            this.finallyPath_0 = [2];
            this.state_0 = 4;
            continue;
          case 2:
            return;
          case 3:
            this.finallyPath_0 = [5];
            this.state_0 = 4;
            continue;
          case 4:
            this.$this.waits.remove_11rb$(this.local$wait);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 5:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 5)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ThreadManForUser_Vpl$PspVpl.prototype.onFree = function () {
    var tmp$;
    var availableMem = this.part.getMaxContiguousFreeMemoryInt();
    tmp$ = this.waits.iterator();
    while (tmp$.hasNext()) {
      var wait = tmp$.next();
      if (availableMem >= wait.size) {
        this.waits.remove_11rb$(wait);
        wait.signal.invoke_11rb$(Unit);
        return;
      }
    }
  };
  ThreadManForUser_Vpl$PspVpl.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspVpl',
    interfaces: [ResourceItem]
  };
  ThreadManForUser_Vpl.prototype.sceKernelCreateVpl_ti95dk$ = function (name, part, attr, size, param) {
    var tmp$, tmp$_0;
    var vpl = this.vpls.alloc();
    var asize = size - 32 | 0;
    vpl.info.name = name;
    vpl.info.attr = attr;
    vpl.info.poolSize = asize;
    tmp$_0 = get_memoryManager(this).userPartition;
    if (hasFlag(attr, ThreadManForUser_Vpl$Companion_getInstance().PSP_VPL_ATTR_HIGHMEM))
      tmp$ = MemoryAnchor$High_getInstance();
    else
      tmp$ = MemoryAnchor$Low_getInstance();
    var anchor = tmp$;
    var address;
    address = Kotlin.Long.ZERO;
    vpl.part = tmp$_0.allocate_vpxtrr$(numberToLong(asize), anchor, numberToLong(address), '');
    return vpl.id;
  };
  ThreadManForUser_Vpl.prototype.vpl_0 = function (uid) {
    var tmp$;
    return (tmp$ = this.vpls.tryGetById_za3lpa$(uid)) != null ? tmp$ : sceKernelException(SceKernelErrors_getInstance().ERROR_KERNEL_NOT_FOUND_VPOOL);
  };
  ThreadManForUser_Vpl.prototype._sceKernelAllocateVpl_p3a8hx$ = function (uid_0, size_0, outPtr_0, timeoutPtr_0, doTry_0, continuation_0, suspended) {
    var instance = new Coroutine$_sceKernelAllocateVpl_p3a8hx$(this, uid_0, size_0, outPtr_0, timeoutPtr_0, doTry_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_sceKernelAllocateVpl_p3a8hx$($this, uid_0, size_0, outPtr_0, timeoutPtr_0, doTry_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 10;
    this.$this = $this;
    this.local$vpl = void 0;
    this.local$uid = uid_0;
    this.local$size = size_0;
    this.local$outPtr = outPtr_0;
    this.local$timeoutPtr = timeoutPtr_0;
    this.local$doTry = doTry_0;
  }
  Coroutine$_sceKernelAllocateVpl_p3a8hx$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_sceKernelAllocateVpl_p3a8hx$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_sceKernelAllocateVpl_p3a8hx$.prototype.constructor = Coroutine$_sceKernelAllocateVpl_p3a8hx$;
  Coroutine$_sceKernelAllocateVpl_p3a8hx$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$vpl = this.$this.vpl_0(this.local$uid);
            this.state_0 = 1;
            continue;
          case 1:
            this.exceptionState_0 = 2;
            if (!(new IntRange(1, this.local$vpl.info.poolSize)).contains_mef7kx$(this.local$size))
              sceKernelException(SceKernelErrors_getInstance().ERROR_KERNEL_ILLEGAL_MEMSIZE);
            var ptr = this.local$vpl.part.allocateHigh_9b8t8t$(numberToLong(nextAlignedTo_0(this.local$size + 8 | 0, 8)), '');
            this.local$outPtr.set_vux9f0$(0, ptr.low_i);
            return 0;
          case 2:
            this.exceptionState_0 = 10;
            var e = this.exception_0;
            if (Kotlin.isType(e, OutOfMemoryError)) {
              if (!this.local$doTry && get_isNotNull(this.local$timeoutPtr) && this.local$timeoutPtr.get() !== 0) {
                this.exceptionState_0 = 4;
                this.state_0 = 3;
                this.result_0 = this.local$vpl.waitFree_7vhjuk$(this.local$size, get_microseconds(this.local$timeoutPtr.get()), this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                break;
              }
               else {
                this.state_0 = 7;
                continue;
              }
            }
             else {
              throw e;
            }

          case 3:
            this.exceptionState_0 = 2;
            this.state_0 = 1;
            continue;
          case 4:
            this.exceptionState_0 = 10;
            var e = this.exception_0;
            if (Kotlin.isType(e, TimeoutException)) {
              this.local$timeoutPtr.set_za3lpa$(0);
              return SceKernelErrors_getInstance().ERROR_KERNEL_WAIT_TIMEOUT;
            }
             else {
              throw e;
            }

          case 5:
            this.state_0 = 6;
            continue;
          case 6:
            this.state_0 = 7;
            continue;
          case 7:
            return SceKernelErrors_getInstance().ERROR_OUT_OF_MEMORY;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            this.state_0 = 1;
            continue;
          case 10:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 10)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ThreadManForUser_Vpl.prototype.sceKernelAllocateVpl_l36aic$ = function (uid, size, outPtr, timeoutPtr, continuation) {
    return this._sceKernelAllocateVpl_p3a8hx$(uid, size, outPtr, timeoutPtr, false, continuation);
  };
  ThreadManForUser_Vpl.prototype.sceKernelTryAllocateVpl_mvti9n$ = function (uid, size, outPtr, continuation) {
    return this._sceKernelAllocateVpl_p3a8hx$(uid, size, outPtr, new Ptr32(nullPtr), true, continuation);
  };
  ThreadManForUser_Vpl.prototype.sceKernelReferVplStatus_o4182t$ = function (uid, info) {
    info.set_11rb$(this.vpl_0(uid).getUpdatedInfo());
    return 0;
  };
  ThreadManForUser_Vpl.prototype.sceKernelDeleteVpl_za3lpa$ = function (uid) {
    var tmp$;
    var vpl = this.vpl_0(uid);
    tmp$ = vpl.waits.iterator();
    while (tmp$.hasNext()) {
      var wait = tmp$.next();
      wait.signal.invoke_11rb$(Unit);
    }
    this.vpls.freeById_za3lpa$(uid);
    return 0;
  };
  ThreadManForUser_Vpl.prototype.sceKernelFreeVpl_vux9f0$ = function (uid, ptr) {
    var tmp$;
    var vpl = this.vpl_0(uid);
    (tmp$ = vpl.part.getAtLow_s8cxhz$(get_unsigned(ptr))) != null ? (tmp$.unallocate(), Unit) : null;
    vpl.onFree();
    return 0;
  };
  ThreadManForUser_Vpl.prototype.sceKernelCancelVpl_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(490150794);
  };
  ThreadManForUser_Vpl.prototype.sceKernelAllocateVplCB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-334862017, 0));
  };
  function ThreadManForUser_Vpl$registerSubmodule$lambda$lambda(this$ThreadManForUser_Vpl) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Vpl.sceKernelCreateVpl_ti95dk$($receiver.istr, $receiver.int, $receiver.int, $receiver.int, $receiver.ptr);
    };
  }
  function ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Vpl_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$ThreadManForUser_Vpl$registerSubmodule$lambda$lambda(this$ThreadManForUser_Vpl_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ThreadManForUser_Vpl$registerSubmodule$lambda$lambda(this$ThreadManForUser_Vpl_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$ThreadManForUser_Vpl = this$ThreadManForUser_Vpl_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ThreadManForUser_Vpl$registerSubmodule$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ThreadManForUser_Vpl$registerSubmodule$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ThreadManForUser_Vpl$registerSubmodule$lambda$lambda.prototype.constructor = Coroutine$ThreadManForUser_Vpl$registerSubmodule$lambda$lambda;
  Coroutine$ThreadManForUser_Vpl$registerSubmodule$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$ThreadManForUser_Vpl.sceKernelAllocateVpl_l36aic$(this.local$$receiver.int, this.local$$receiver.int, this.local$$receiver.ptr32, this.local$$receiver.ptr32, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_1(this$ThreadManForUser_Vpl_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Vpl_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_0(this$ThreadManForUser_Vpl_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$ThreadManForUser_Vpl = this$ThreadManForUser_Vpl_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_0.prototype.constructor = Coroutine$ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_0;
  Coroutine$ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$ThreadManForUser_Vpl.sceKernelTryAllocateVpl_mvti9n$(this.local$$receiver.int, this.local$$receiver.int, this.local$$receiver.ptr32, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_2(this$ThreadManForUser_Vpl) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Vpl.sceKernelReferVplStatus_o4182t$($receiver.int, $receiver.ptr_n7lexo$(ThreadManForUser_Vpl$SceKernelVplInfo$Companion_getInstance()));
    };
  }
  function ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_3(this$ThreadManForUser_Vpl) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Vpl.sceKernelDeleteVpl_za3lpa$($receiver.int);
    };
  }
  function ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_4(this$ThreadManForUser_Vpl) {
    return function ($receiver, it) {
      return this$ThreadManForUser_Vpl.sceKernelFreeVpl_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_5(this$ThreadManForUser_Vpl) {
    return function (it) {
      this$ThreadManForUser_Vpl.sceKernelCancelVpl_xt3zvs$(it);
      return Unit;
    };
  }
  function ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_6(this$ThreadManForUser_Vpl) {
    return function (it) {
      this$ThreadManForUser_Vpl.sceKernelAllocateVplCB_xt3zvs$(it);
      return Unit;
    };
  }
  ThreadManForUser_Vpl.prototype.registerSubmodule = function () {
    var $receiver = this.tmodule;
    $receiver.registerFunctionInt_9l82lv$('sceKernelCreateVpl', Kotlin.Long.fromInt(1455438261), 150, void 0, ThreadManForUser_Vpl$registerSubmodule$lambda$lambda(this));
    $receiver.registerFunctionSuspendInt_q1rm4a$('sceKernelAllocateVpl', new Kotlin.Long(-1093503947, 0), 150, void 0, void 0, ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_0(this));
    $receiver.registerFunctionSuspendInt_q1rm4a$('sceKernelTryAllocateVpl', new Kotlin.Long(-1355360504, 0), 150, void 0, void 0, ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_1(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelReferVplStatus', Kotlin.Long.fromInt(964756069), 150, void 0, ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_2(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelDeleteVpl', new Kotlin.Long(-1984703348, 0), 150, void 0, ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_3(this));
    $receiver.registerFunctionInt_9l82lv$('sceKernelFreeVpl', new Kotlin.Long(-1221137921, 0), 150, void 0, ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_4(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelCancelVpl', Kotlin.Long.fromInt(490150794), 150, void 0, ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_5(this));
    $receiver.registerFunctionRaw_gh35x6$('sceKernelAllocateVplCB', new Kotlin.Long(-334862017, 0), 150, void 0, ThreadManForUser_Vpl$registerSubmodule$lambda$lambda_6(this));
    return $receiver;
  };
  function ThreadManForUser_Vpl$SceKernelVplInfo(size, name, attr, poolSize, freeSize, numWaitThreads) {
    ThreadManForUser_Vpl$SceKernelVplInfo$Companion_getInstance();
    if (size === void 0)
      size = ThreadManForUser_Vpl$SceKernelVplInfo$Companion_getInstance().size;
    if (name === void 0)
      name = '';
    if (attr === void 0)
      attr = 0;
    if (poolSize === void 0)
      poolSize = 0;
    if (freeSize === void 0)
      freeSize = 0;
    if (numWaitThreads === void 0)
      numWaitThreads = 0;
    this.size = size;
    this.name = name;
    this.attr = attr;
    this.poolSize = poolSize;
    this.freeSize = freeSize;
    this.numWaitThreads = numWaitThreads;
  }
  function ThreadManForUser_Vpl$SceKernelVplInfo$Companion() {
    ThreadManForUser_Vpl$SceKernelVplInfo$Companion_instance = this;
    Struct.call(this, ThreadManForUser_Vpl$SceKernelVplInfo$ThreadManForUser_Vpl$SceKernelVplInfo$Companion_init$lambda, [AS(getPropertyCallableRef('size', 1, function ($receiver) {
      return $receiver.size;
    }, function ($receiver, value) {
      $receiver.size = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('name', 1, function ($receiver) {
      return $receiver.name;
    }, function ($receiver, value) {
      $receiver.name = value;
    }), STRINGZ_init(32)), AS(getPropertyCallableRef('attr', 1, function ($receiver) {
      return $receiver.attr;
    }, function ($receiver, value) {
      $receiver.attr = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('poolSize', 1, function ($receiver) {
      return $receiver.poolSize;
    }, function ($receiver, value) {
      $receiver.poolSize = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('freeSize', 1, function ($receiver) {
      return $receiver.freeSize;
    }, function ($receiver, value) {
      $receiver.freeSize = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('numWaitThreads', 1, function ($receiver) {
      return $receiver.numWaitThreads;
    }, function ($receiver, value) {
      $receiver.numWaitThreads = value;
    }), INT32_getInstance())]);
  }
  function ThreadManForUser_Vpl$SceKernelVplInfo$ThreadManForUser_Vpl$SceKernelVplInfo$Companion_init$lambda() {
    return new ThreadManForUser_Vpl$SceKernelVplInfo();
  }
  ThreadManForUser_Vpl$SceKernelVplInfo$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var ThreadManForUser_Vpl$SceKernelVplInfo$Companion_instance = null;
  function ThreadManForUser_Vpl$SceKernelVplInfo$Companion_getInstance() {
    if (ThreadManForUser_Vpl$SceKernelVplInfo$Companion_instance === null) {
      new ThreadManForUser_Vpl$SceKernelVplInfo$Companion();
    }
    return ThreadManForUser_Vpl$SceKernelVplInfo$Companion_instance;
  }
  ThreadManForUser_Vpl$SceKernelVplInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SceKernelVplInfo',
    interfaces: []
  };
  function ThreadManForUser_Vpl$vpls$lambda(it) {
    return sceKernelException(SceKernelErrors_getInstance().ERROR_KERNEL_NOT_FOUND_VPOOL);
  }
  function ThreadManForUser_Vpl$vpls$lambda_0(it) {
    return new ThreadManForUser_Vpl$PspVpl(it);
  }
  ThreadManForUser_Vpl.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ThreadManForUser_Vpl',
    interfaces: [SceSubmodule]
  };
  function UtilsBase(emulator, name, flags, prx, prxName) {
    SceModule.call(this, emulator, name, flags, prx, prxName);
    this.random = MtRand_init(0);
  }
  UtilsBase.prototype.sceKernelUtilsMt19937Init_1fpi1a$ = function (ctx, seed) {
    println('Not implemented UtilsForUser.sceKernelUtilsMt19937Init');
    return 0;
  };
  UtilsBase.prototype.sceKernelUtilsMt19937UInt_xnxgf8$ = function (ctx) {
    var value = this.random.nextInt();
    return value;
  };
  UtilsBase.prototype.sceKernelLibcGettimeofday_dyqe6s$ = function (timevalPtr, timezonePtr) {
    if (get_isNotNull(timevalPtr)) {
      var totalMicroseconds = currentTimeMicroDouble(klock.Klock);
      var totalSeconds = totalMicroseconds / 1000000;
      var microseconds = totalMicroseconds % 1000000;
      timevalPtr.sw_vux9f0$(0, numberToInt(totalSeconds));
      timevalPtr.sw_vux9f0$(4, numberToInt(microseconds));
    }
    if (get_isNotNull(timezonePtr)) {
      var minutesWest = 0;
      var dstTime = 0;
      timevalPtr.sw_vux9f0$(0, minutesWest);
      timevalPtr.sw_vux9f0$(4, dstTime);
    }
    return 0;
  };
  UtilsBase.prototype.sceKernelLibcTime_xnxgf8$ = function (ptr) {
    var seconds = get_rtc(this).getTimeInSeconds();
    if (get_isNotNull(ptr))
      ptr.sw_vux9f0$(0, seconds);
    return seconds;
  };
  UtilsBase.prototype.sceKernelLibcClock = function () {
    return get_timeManager(this).getTimeInMicrosecondsInt();
  };
  UtilsBase.prototype.sceKernelDcacheWritebackAll = function () {
    this.emulator.dataCache_wnu51o$(void 0, void 0, true, false);
  };
  UtilsBase.prototype.sceKernelDcacheWritebackRange_vux9f0$ = function (ptr, size) {
    this.emulator.dataCache_wnu51o$(void 0, void 0, true, false);
  };
  UtilsBase.prototype.sceKernelDcacheWritebackInvalidateAll = function () {
    this.emulator.dataCache_wnu51o$(void 0, void 0, true, true);
  };
  UtilsBase.prototype.sceKernelDcacheWritebackInvalidateRange_vux9f0$ = function (ptr, size) {
    this.emulator.dataCache_wnu51o$(ptr, size, true, true);
  };
  UtilsBase.prototype.sceKernelDcacheInvalidateRange_vux9f0$ = function (ptr, size) {
    this.emulator.dataCache_wnu51o$(ptr, size, false, true);
  };
  UtilsBase.prototype.sceKernelIcacheInvalidateRange_vux9f0$ = function (ptr, size) {
    this.emulator.invalidateInstructionCache_vux9f0$(ptr, size);
  };
  UtilsBase.prototype.sceKernelIcacheInvalidateAll = function () {
    this.emulator.invalidateInstructionCache_vux9f0$();
  };
  UtilsBase.prototype.sceKernelDcacheReadTag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(375659888);
  };
  UtilsBase.prototype.sceKernelIcacheProbe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1339235485);
  };
  UtilsBase.prototype.sceKernelDcacheProbeRange_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2011164807);
  };
  UtilsBase.prototype.sceKernelDcacheProbe_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2147476404, 0));
  };
  UtilsBase.prototype.sceKernelIcacheReadTag_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-83494192, 0));
  };
  UtilsBase.prototype.UtilsForUser_004D4DEE_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(5066222);
  };
  UtilsBase.prototype.sceKernelUtilsMt19937UInt_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(117148259);
  };
  UtilsBase.prototype.UtilsForUser_157A383A_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(360331322);
  };
  UtilsBase.prototype.UtilsForUser_1B0592A3_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(453350051);
  };
  UtilsBase.prototype.sceKernelUtilsSha1BlockUpdate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(879717800);
  };
  UtilsBase.prototype.sceKernelGetGPI_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(939220034);
  };
  UtilsBase.prototype.UtilsForUser_39F49610_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(972330512);
  };
  UtilsBase.prototype.UtilsForUser_3FD3D324_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1070846756);
  };
  UtilsBase.prototype.UtilsForUser_43C9A8DB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1137289435);
  };
  UtilsBase.prototype.UtilsForUser_515B4FAF_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1364938671);
  };
  UtilsBase.prototype.sceKernelUtilsSha1BlockResult_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1482628105);
  };
  UtilsBase.prototype.UtilsForUser_5C7F2B1A_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1551837978);
  };
  UtilsBase.prototype.sceKernelUtilsMd5BlockUpdate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1642194213);
  };
  UtilsBase.prototype.UtilsForUser_6231A71D_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1647421213);
  };
  UtilsBase.prototype.sceKernelSetGPO_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1792230871);
  };
  UtilsBase.prototype.UtilsForUser_7333E539_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1932780857);
  };
  UtilsBase.prototype.UtilsForUser_740DF7F0_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1947072496);
  };
  UtilsBase.prototype.sceKernelUtilsSha1Digest_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2080220687, 0));
  };
  UtilsBase.prototype.sceKernelPutUserLog_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2014833311, 0));
  };
  UtilsBase.prototype.UtilsForUser_99134C3F_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1726788545, 0));
  };
  UtilsBase.prototype.sceKernelUtilsMd5BlockInit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1638117242, 0));
  };
  UtilsBase.prototype.UtilsForUser_AF3766BB_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1355323717, 0));
  };
  UtilsBase.prototype.UtilsForUser_B83A1E76_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1204150666, 0));
  };
  UtilsBase.prototype.sceKernelUtilsMd5BlockResult_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1194176904, 0));
  };
  UtilsBase.prototype.sceKernelUtilsMd5Digest_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-937924008, 0));
  };
  UtilsBase.prototype.UtilsForUser_DBBE9A46_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-608265658, 0));
  };
  UtilsBase.prototype.sceKernelUtilsMt19937Init_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-396302498, 0));
  };
  UtilsBase.prototype.UtilsForUser_F0155BCA_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-267035702, 0));
  };
  UtilsBase.prototype.sceKernelUtilsSha1BlockInit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-117647942, 0));
  };
  function UtilsBase$registerModule$lambda(this$UtilsBase) {
    return function ($receiver, it) {
      return this$UtilsBase.sceKernelUtilsMt19937Init_1fpi1a$($receiver.ptr, $receiver.int);
    };
  }
  function UtilsBase$registerModule$lambda_0(this$UtilsBase) {
    return function ($receiver, it) {
      return this$UtilsBase.sceKernelUtilsMt19937UInt_xnxgf8$($receiver.ptr);
    };
  }
  function UtilsBase$registerModule$lambda_1(this$UtilsBase) {
    return function ($receiver, it) {
      return this$UtilsBase.sceKernelLibcGettimeofday_dyqe6s$($receiver.ptr, $receiver.ptr);
    };
  }
  function UtilsBase$registerModule$lambda_2(this$UtilsBase) {
    return function ($receiver, it) {
      return this$UtilsBase.sceKernelLibcTime_xnxgf8$($receiver.ptr);
    };
  }
  function UtilsBase$registerModule$lambda_3(this$UtilsBase) {
    return function ($receiver, it) {
      return this$UtilsBase.sceKernelLibcClock();
    };
  }
  function UtilsBase$registerModule$lambda_4(this$UtilsBase) {
    return function ($receiver, it) {
      this$UtilsBase.sceKernelDcacheWritebackAll();
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_5(this$UtilsBase) {
    return function ($receiver, it) {
      this$UtilsBase.sceKernelIcacheInvalidateAll();
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_6(this$UtilsBase) {
    return function ($receiver, it) {
      this$UtilsBase.sceKernelDcacheWritebackInvalidateAll();
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_7(this$UtilsBase) {
    return function ($receiver, it) {
      this$UtilsBase.sceKernelDcacheInvalidateRange_vux9f0$($receiver.int, $receiver.int);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_8(this$UtilsBase) {
    return function ($receiver, it) {
      this$UtilsBase.sceKernelDcacheWritebackRange_vux9f0$($receiver.int, $receiver.int);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_9(this$UtilsBase) {
    return function ($receiver, it) {
      this$UtilsBase.sceKernelDcacheWritebackInvalidateRange_vux9f0$($receiver.int, $receiver.int);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_10(this$UtilsBase) {
    return function ($receiver, it) {
      this$UtilsBase.sceKernelIcacheInvalidateRange_vux9f0$($receiver.int, $receiver.int);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_11(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_004D4DEE_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_12(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_157A383A_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_13(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelDcacheReadTag_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_14(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_1B0592A3_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_15(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelUtilsSha1BlockUpdate_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_16(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelGetGPI_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_17(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_39F49610_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_18(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_3FD3D324_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_19(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_43C9A8DB_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_20(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelIcacheProbe_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_21(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_515B4FAF_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_22(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelUtilsSha1BlockResult_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_23(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_5C7F2B1A_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_24(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelUtilsMd5BlockUpdate_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_25(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_6231A71D_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_26(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelSetGPO_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_27(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_7333E539_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_28(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_740DF7F0_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_29(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelDcacheProbeRange_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_30(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelDcacheProbe_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_31(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelUtilsSha1Digest_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_32(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelPutUserLog_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_33(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_99134C3F_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_34(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelUtilsMd5BlockInit_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_35(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_AF3766BB_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_36(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_B83A1E76_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_37(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelUtilsMd5BlockResult_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_38(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelUtilsMd5Digest_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_39(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_DBBE9A46_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_40(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.UtilsForUser_F0155BCA_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_41(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelUtilsSha1BlockInit_xt3zvs$(it);
      return Unit;
    };
  }
  function UtilsBase$registerModule$lambda_42(this$UtilsBase) {
    return function (it) {
      this$UtilsBase.sceKernelIcacheReadTag_xt3zvs$(it);
      return Unit;
    };
  }
  UtilsBase.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceKernelUtilsMt19937Init', new Kotlin.Long(-396302498, 0), 150, 8383, UtilsBase$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceKernelUtilsMt19937UInt', Kotlin.Long.fromInt(117148259), 150, 8384, UtilsBase$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceKernelLibcGettimeofday', Kotlin.Long.fromInt(1911308913), 150, void 0, UtilsBase$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('sceKernelLibcTime', Kotlin.Long.fromInt(667703280), 150, void 0, UtilsBase$registerModule$lambda_2(this));
    this.registerFunctionInt_9l82lv$('sceKernelLibcClock', new Kotlin.Long(-1847265625, 0), 150, void 0, UtilsBase$registerModule$lambda_3(this));
    this.registerFunctionVoid_dc3d86$('sceKernelDcacheWritebackAll', Kotlin.Long.fromInt(2043790330), 150, void 0, UtilsBase$registerModule$lambda_4(this));
    this.registerFunctionVoid_dc3d86$('sceKernelIcacheInvalidateAll', new Kotlin.Long(-1844506550, 0), 150, void 0, UtilsBase$registerModule$lambda_5(this));
    this.registerFunctionVoid_dc3d86$('sceKernelDcacheWritebackInvalidateAll', new Kotlin.Long(-1271537979, 0), 150, void 0, UtilsBase$registerModule$lambda_6(this));
    this.registerFunctionVoid_dc3d86$('sceKernelDcacheInvalidateRange', new Kotlin.Long(-1079410590, 0), 150, void 0, UtilsBase$registerModule$lambda_7(this));
    this.registerFunctionVoid_dc3d86$('sceKernelDcacheWritebackRange', Kotlin.Long.fromInt(1055066145), 150, void 0, UtilsBase$registerModule$lambda_8(this));
    this.registerFunctionVoid_dc3d86$('sceKernelDcacheWritebackInvalidateRange', Kotlin.Long.fromInt(884603550), 150, void 0, UtilsBase$registerModule$lambda_9(this));
    this.registerFunctionVoid_dc3d86$('sceKernelIcacheInvalidateRange', new Kotlin.Long(-1025542386, 0), 150, void 0, UtilsBase$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_004D4DEE', Kotlin.Long.fromInt(5066222), 150, void 0, UtilsBase$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_157A383A', Kotlin.Long.fromInt(360331322), 150, void 0, UtilsBase$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheReadTag', Kotlin.Long.fromInt(375659888), 150, void 0, UtilsBase$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_1B0592A3', Kotlin.Long.fromInt(453350051), 150, void 0, UtilsBase$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsSha1BlockUpdate', Kotlin.Long.fromInt(879717800), 150, void 0, UtilsBase$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceKernelGetGPI', Kotlin.Long.fromInt(939220034), 150, void 0, UtilsBase$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_39F49610', Kotlin.Long.fromInt(972330512), 150, void 0, UtilsBase$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_3FD3D324', Kotlin.Long.fromInt(1070846756), 150, void 0, UtilsBase$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_43C9A8DB', Kotlin.Long.fromInt(1137289435), 150, void 0, UtilsBase$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceKernelIcacheProbe', Kotlin.Long.fromInt(1339235485), 150, void 0, UtilsBase$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_515B4FAF', Kotlin.Long.fromInt(1364938671), 150, void 0, UtilsBase$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsSha1BlockResult', Kotlin.Long.fromInt(1482628105), 150, void 0, UtilsBase$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_5C7F2B1A', Kotlin.Long.fromInt(1551837978), 150, void 0, UtilsBase$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsMd5BlockUpdate', Kotlin.Long.fromInt(1642194213), 150, void 0, UtilsBase$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_6231A71D', Kotlin.Long.fromInt(1647421213), 150, void 0, UtilsBase$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('sceKernelSetGPO', Kotlin.Long.fromInt(1792230871), 150, void 0, UtilsBase$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_7333E539', Kotlin.Long.fromInt(1932780857), 150, void 0, UtilsBase$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_740DF7F0', Kotlin.Long.fromInt(1947072496), 150, void 0, UtilsBase$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheProbeRange', Kotlin.Long.fromInt(2011164807), 150, void 0, UtilsBase$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('sceKernelDcacheProbe', new Kotlin.Long(-2147476404, 0), 150, void 0, UtilsBase$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsSha1Digest', new Kotlin.Long(-2080220687, 0), 150, void 0, UtilsBase$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('sceKernelPutUserLog', new Kotlin.Long(-2014833311, 0), 150, void 0, UtilsBase$registerModule$lambda_32(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_99134C3F', new Kotlin.Long(-1726788545, 0), 150, void 0, UtilsBase$registerModule$lambda_33(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsMd5BlockInit', new Kotlin.Long(-1638117242, 0), 150, void 0, UtilsBase$registerModule$lambda_34(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_AF3766BB', new Kotlin.Long(-1355323717, 0), 150, void 0, UtilsBase$registerModule$lambda_35(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_B83A1E76', new Kotlin.Long(-1204150666, 0), 150, void 0, UtilsBase$registerModule$lambda_36(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsMd5BlockResult', new Kotlin.Long(-1194176904, 0), 150, void 0, UtilsBase$registerModule$lambda_37(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsMd5Digest', new Kotlin.Long(-937924008, 0), 150, void 0, UtilsBase$registerModule$lambda_38(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_DBBE9A46', new Kotlin.Long(-608265658, 0), 150, void 0, UtilsBase$registerModule$lambda_39(this));
    this.registerFunctionRaw_gh35x6$('UtilsForUser_F0155BCA', new Kotlin.Long(-267035702, 0), 150, void 0, UtilsBase$registerModule$lambda_40(this));
    this.registerFunctionRaw_gh35x6$('sceKernelUtilsSha1BlockInit', new Kotlin.Long(-117647942, 0), 150, void 0, UtilsBase$registerModule$lambda_41(this));
    this.registerFunctionRaw_gh35x6$('sceKernelIcacheReadTag', new Kotlin.Long(-83494192, 0), 150, void 0, UtilsBase$registerModule$lambda_42(this));
  };
  UtilsBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UtilsBase',
    interfaces: [SceModule]
  };
  function UtilsForKernel(emulator) {
    UtilsBase.call(this, emulator, 'UtilsForKernel', 589841, 'sysmem.prx', 'sceSystemMemoryManager');
  }
  UtilsForKernel.prototype.registerModule = function () {
    UtilsBase.prototype.registerModule.call(this);
  };
  UtilsForKernel.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UtilsForKernel',
    interfaces: [UtilsBase]
  };
  function UtilsForUser(emulator) {
    UtilsBase.call(this, emulator, 'UtilsForUser', 1073807377, 'sysmem.prx', 'sceSystemMemoryManager');
  }
  UtilsForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UtilsForUser',
    interfaces: [UtilsBase]
  };
  function sceAtrac3plus(emulator) {
    SceModule.call(this, emulator, 'sceAtrac3plus', 65553, 'libatrac3plus.prx', 'sceATRAC3plus_Library');
    var array = Array_0(6);
    var tmp$;
    tmp$ = array.length - 1 | 0;
    for (var i = 0; i <= tmp$; i++) {
      array[i] = new sceAtrac3plus$AtracID(i);
    }
    this.atracIDs_0 = array;
  }
  function sceAtrac3plus$AtracID(id) {
    this.id = id;
    this.decoder = new Atrac3plusDecoder();
    this.inputBuffer = new PtrArray(DummyPtr_getInstance(), 0);
    this.inUse = false;
    this.isSecondBufferNeeded = false;
    this.isSecondBufferSet = false;
    this.info = new Atrac3PlusUtil$AtracFileInfo();
    this.atracCurrentSample = 0;
    this.secondBufferReadPosition = 0;
    this.secondBufferSize = 0;
    this.readAddr = 0;
  }
  Object.defineProperty(sceAtrac3plus$AtracID.prototype, 'atracEndSample', {
    get: function () {
      return this.info.atracEndSample;
    }
  });
  Object.defineProperty(sceAtrac3plus$AtracID.prototype, 'remainFrames', {
    get: function () {
      return 0;
    }
  });
  sceAtrac3plus$AtracID.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AtracID',
    interfaces: []
  };
  sceAtrac3plus.prototype.getAtrac_za3lpa$ = function (id) {
    return this.atracIDs_0[id];
  };
  sceAtrac3plus.prototype.getStartSkippedSamples_za3lpa$ = function (codecType) {
    if (codecType === util_0.Atrac3PlusUtil.PSP_CODEC_AT3)
      return 69;
    else if (codecType === util_0.Atrac3PlusUtil.PSP_CODEC_AT3PLUS)
      return 368;
    else
      return 0;
  };
  sceAtrac3plus.prototype.getMaxSamples_za3lpa$ = function (codecType) {
    if (codecType === util_0.Atrac3PlusUtil.PSP_CODEC_AT3)
      return 1024;
    else if (codecType === util_0.Atrac3PlusUtil.PSP_CODEC_AT3PLUS)
      return Atrac3plusDecoder.Companion.ATRAC3P_FRAME_SAMPLES;
    else
      return 0;
  };
  sceAtrac3plus.prototype.sceAtracSetDataAndGetID_1fpi1a$ = function (data, bufferSize) {
    var tmp$;
    var $receiver = this.atracIDs_0;
    var firstOrNull$result;
    firstOrNull$break: do {
      var tmp$_0;
      for (tmp$_0 = 0; tmp$_0 !== $receiver.length; ++tmp$_0) {
        var element = $receiver[tmp$_0];
        if (!element.inUse) {
          firstOrNull$result = element;
          break firstOrNull$break;
        }
      }
      firstOrNull$result = null;
    }
     while (false);
    var id = (tmp$ = firstOrNull$result) != null ? tmp$ : sceKernelException(SceKernelErrors_getInstance().ERROR_ATRAC_NO_ID);
    var info = id.info;
    var $this = this.logger;
    var level = LogLevel.TRACE;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceAtracSetDataAndGetID Partially implemented');
    }
    var res = util_0.Atrac3PlusUtil.analyzeRiffFile_rta5a5$(openSync_1(data), 0, bufferSize, id.info);
    if (res < 0)
      return res;
    var outputChannels = 2;
    id.inputBuffer = new PtrArray(data, bufferSize);
    var startSkippedSamples = this.getStartSkippedSamples_za3lpa$(util_0.Atrac3PlusUtil.PSP_CODEC_AT3PLUS);
    var maxSamples = this.getMaxSamples_za3lpa$(util_0.Atrac3PlusUtil.PSP_CODEC_AT3PLUS);
    var skippedSamples = startSkippedSamples + info.atracSampleOffset | 0;
    var skippedFrames = toIntCeil(skippedSamples / maxSamples);
    id.readAddr = data.addr + id.info.inputFileDataOffset + Kotlin.imul(skippedFrames, info.atracBytesPerFrame) | 0;
    id.decoder.init_tjonv8$(id.info.atracBytesPerFrame, id.info.atracChannels, outputChannels, 0);
    return id.id;
  };
  sceAtrac3plus.prototype.sceAtracGetSecondBufferInfo_k085z6$ = function (atID, puiPosition, puiDataByte) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceAtracGetSecondBufferInfo Not implemented (' + atID + ', ' + puiPosition + ', ' + puiDataByte + ')');
    }
    var id = this.getAtrac_za3lpa$(atID);
    if (!id.isSecondBufferNeeded) {
      puiPosition.set_vux9f0$(0, 0);
      puiDataByte.set_vux9f0$(0, 0);
      return SceKernelErrors_getInstance().ERROR_ATRAC_SECOND_BUFFER_NOT_NEEDED;
    }
    puiPosition.set_vux9f0$(0, id.secondBufferReadPosition);
    puiDataByte.set_vux9f0$(0, id.secondBufferSize);
    return 0;
  };
  sceAtrac3plus.prototype.sceAtracSetSecondBuffer_ypwtlu$ = function (id, puiPosition, puiDataByte) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceAtracSetSecondBuffer Not implemented (' + id + ', ' + puiPosition + ', ' + puiDataByte + ')');
    }
    return 0;
  };
  sceAtrac3plus.prototype.sceAtracGetSoundSample_u114re$ = function (id, endSamplePtr, loopStartSamplePtr, loopEndSamplePtr) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceAtracGetSoundSample Not implemented (' + id + ', ' + endSamplePtr + ', ' + loopStartSamplePtr + ', ' + loopEndSamplePtr + ')');
    }
    return 0;
  };
  sceAtrac3plus.prototype.sceAtracSetLoopNum_vux9f0$ = function (id, numberOfLoops) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceAtracSetLoopNum Not implemented (' + id + ', ' + numberOfLoops + ')');
    }
    return 0;
  };
  sceAtrac3plus.prototype.sceAtracGetRemainFrame_130naz$ = function (atID, remainFramePtr) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceAtracGetRemainFrame Not implemented (' + atID + ', ' + remainFramePtr + ')');
    }
    var id = this.getAtrac_za3lpa$(atID);
    remainFramePtr.set_za3lpa$(-1);
    return 0;
  };
  sceAtrac3plus.prototype.sceAtracGetNextDecodePosition_o62i3q$ = function (atracId, samplePositionPtr) {
    var id = this.getAtrac_za3lpa$(atracId);
    var $this = this.logger;
    var level = LogLevel.INFO;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceAtracGetNextDecodePosition Not implemented (' + id + ', ' + samplePositionPtr + ')');
    }
    if (id.atracCurrentSample >= id.atracEndSample)
      sceKernelException(SceKernelErrors_getInstance().ERROR_ATRAC_ALL_DATA_DECODED);
    samplePositionPtr.sw_vux9f0$(0, id.atracCurrentSample);
    var $this_0 = this.logger;
    var level_0 = LogLevel.TRACE;
    if ($this_0.isEnabled_ci8eq1$(level_0)) {
      $this_0.actualLog_t189ph$(level_0, format_0('sceAtracGetNextDecodePosition returning pos=%d', [samplePositionPtr.lw_za3lpa$(0)]));
    }
    return 0;
  };
  sceAtrac3plus.prototype.sceAtracDecodeData_jd53a8$ = function (idAT, samplesAddr, samplesNbrAddr, outEndAddr, remainFramesAddr) {
    var $this = this.logger;
    var level = LogLevel.TRACE;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceAtracDecodeData Not implemented (' + idAT + ', ' + samplesAddr + ', ' + samplesNbrAddr + ', ' + outEndAddr + ', ' + remainFramesAddr + ')');
    }
    var id = this.getAtrac_za3lpa$(idAT);
    var info = id.info;
    if (id.isSecondBufferNeeded && !id.isSecondBufferSet) {
      var $this_0 = this.logger;
      var level_0 = LogLevel.WARN;
      if ($this_0.isEnabled_ci8eq1$(level_0)) {
        $this_0.actualLog_t189ph$(level_0, format_0('sceAtracDecodeData atracID=0x%X needs second buffer!', [idAT]));
      }
      return SceKernelErrors_getInstance().ERROR_ATRAC_SECOND_BUFFER_NEEDED;
    }
    var result = id.decoder.decode_ojvk5q$(this.emulator.imem, id.readAddr, id.info.atracBytesPerFrame, openSync_1(samplesAddr));
    if (result < 0) {
      samplesNbrAddr.set_za3lpa$(0);
      return result;
    }
    id.readAddr = id.readAddr + info.atracBytesPerFrame | 0;
    samplesNbrAddr.set_za3lpa$(id.decoder.numberOfSamples);
    remainFramesAddr.set_za3lpa$(id.remainFrames);
    if (result === 0)
      get_threadManager(this).delayThread_za3lpa$(2300);
    return result;
  };
  sceAtrac3plus.prototype.sceAtracGetStreamDataInfo_u114re$ = function (idAT, writePointerPointer, availableBytesPtr, readOffsetPtr) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceAtracGetStreamDataInfo Not implemented (' + idAT + ', ' + writePointerPointer + ', ' + availableBytesPtr + ', ' + readOffsetPtr + ')');
    }
    var id = this.getAtrac_za3lpa$(idAT);
    return 0;
  };
  sceAtrac3plus.prototype.sceAtracAddStreamData_vux9f0$ = function (id, bytesToAdd) {
    return 0;
  };
  sceAtrac3plus.prototype.sceAtracReleaseAtracID_za3lpa$ = function (id) {
    var atrac = this.getAtrac_za3lpa$(id);
    atrac.inUse = false;
    return 0;
  };
  sceAtrac3plus.prototype.sceAtracGetAtracID_za3lpa$ = function (codecType) {
    var $this = this.logger;
    var level = LogLevel.WARN;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceAtracGetAtracID not implemented');
    }
    return 1;
  };
  sceAtrac3plus.prototype.sceAtracSetData_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(237663147);
  };
  sceAtrac3plus.prototype.sceAtracSetHalfwayBufferAndGetID_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(263075598);
  };
  sceAtrac3plus.prototype.sceAtracReinit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(321855178);
  };
  sceAtrac3plus.prototype.sceAtrac3plus_2DD3E298_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(768860824);
  };
  sceAtrac3plus.prototype.sceAtracGetChannel_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(828804010);
  };
  sceAtrac3plus.prototype.sceAtracGetNextSample_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(922397691);
  };
  sceAtrac3plus.prototype.sceAtracSetHalfwayBuffer_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1064183477);
  };
  sceAtrac3plus.prototype.sceAtracSetAA3DataAndGetID_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1445115841);
  };
  sceAtrac3plus.prototype.sceAtracSetMOutHalfwayBuffer_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1559877714);
  };
  sceAtrac3plus.prototype.sceAtracSetAA3HalfwayBufferAndGetID_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1574331784);
  };
  sceAtrac3plus.prototype.sceAtracResetPlayPosition_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1682855431);
  };
  sceAtrac3plus.prototype.sceAtracSetMOutHalfwayBufferAndGetID_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1663574525, 0));
  };
  sceAtrac3plus.prototype.sceAtracGetBitrate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1521180328, 0));
  };
  sceAtrac3plus.prototype.sceAtracGetOutputChannel_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1279930302, 0));
  };
  sceAtrac3plus.prototype.sceAtracGetBufferInfoForReseting_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-901995566, 0));
  };
  sceAtrac3plus.prototype.sceAtracStartEntry_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-772431909, 0));
  };
  sceAtrac3plus.prototype.sceAtracEndEntry_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-708670272, 0));
  };
  sceAtrac3plus.prototype.sceAtracGetMaxSample_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-693767433, 0));
  };
  sceAtrac3plus.prototype.sceAtracGetInternalErrorInfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-393251429, 0));
  };
  sceAtrac3plus.prototype.sceAtracIsSecondBufferNeeded_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-324851047, 0));
  };
  sceAtrac3plus.prototype.sceAtracGetLoopStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-89851749, 0));
  };
  function sceAtrac3plus$registerModule$lambda(this$sceAtrac3plus) {
    return function ($receiver, it) {
      return this$sceAtrac3plus.sceAtracSetDataAndGetID_1fpi1a$($receiver.ptr, $receiver.int);
    };
  }
  function sceAtrac3plus$registerModule$lambda_0(this$sceAtrac3plus) {
    return function ($receiver, it) {
      return this$sceAtrac3plus.sceAtracReleaseAtracID_za3lpa$($receiver.int);
    };
  }
  function sceAtrac3plus$registerModule$lambda_1(this$sceAtrac3plus) {
    return function ($receiver, it) {
      return this$sceAtrac3plus.sceAtracGetSecondBufferInfo_k085z6$($receiver.int, $receiver.ptr32, $receiver.ptr32);
    };
  }
  function sceAtrac3plus$registerModule$lambda_2(this$sceAtrac3plus) {
    return function ($receiver, it) {
      return this$sceAtrac3plus.sceAtracSetSecondBuffer_ypwtlu$($receiver.int, $receiver.ptr, $receiver.ptr);
    };
  }
  function sceAtrac3plus$registerModule$lambda_3(this$sceAtrac3plus) {
    return function ($receiver, it) {
      return this$sceAtrac3plus.sceAtracGetSoundSample_u114re$($receiver.int, $receiver.ptr, $receiver.ptr, $receiver.ptr);
    };
  }
  function sceAtrac3plus$registerModule$lambda_4(this$sceAtrac3plus) {
    return function ($receiver, it) {
      return this$sceAtrac3plus.sceAtracSetLoopNum_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceAtrac3plus$registerModule$lambda_5(this$sceAtrac3plus) {
    return function ($receiver, it) {
      return this$sceAtrac3plus.sceAtracGetRemainFrame_130naz$($receiver.int, $receiver.ptr32);
    };
  }
  function sceAtrac3plus$registerModule$lambda_6(this$sceAtrac3plus) {
    return function ($receiver, it) {
      return this$sceAtrac3plus.sceAtracGetNextDecodePosition_o62i3q$($receiver.int, $receiver.ptr);
    };
  }
  function sceAtrac3plus$registerModule$lambda_7(this$sceAtrac3plus) {
    return function ($receiver, it) {
      return this$sceAtrac3plus.sceAtracDecodeData_jd53a8$($receiver.int, $receiver.ptr, $receiver.ptr32, $receiver.ptr, $receiver.ptr32);
    };
  }
  function sceAtrac3plus$registerModule$lambda_8(this$sceAtrac3plus) {
    return function ($receiver, it) {
      return this$sceAtrac3plus.sceAtracGetStreamDataInfo_u114re$($receiver.int, $receiver.ptr, $receiver.ptr, $receiver.ptr);
    };
  }
  function sceAtrac3plus$registerModule$lambda_9(this$sceAtrac3plus) {
    return function ($receiver, it) {
      return this$sceAtrac3plus.sceAtracAddStreamData_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceAtrac3plus$registerModule$lambda_10(this$sceAtrac3plus) {
    return function ($receiver, it) {
      return this$sceAtrac3plus.sceAtracGetAtracID_za3lpa$($receiver.int);
    };
  }
  function sceAtrac3plus$registerModule$lambda_11(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracSetData_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_12(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracSetHalfwayBufferAndGetID_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_13(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracReinit_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_14(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtrac3plus_2DD3E298_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_15(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracGetChannel_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_16(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracGetNextSample_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_17(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracSetHalfwayBuffer_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_18(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracSetAA3DataAndGetID_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_19(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracSetMOutHalfwayBuffer_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_20(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracSetAA3HalfwayBufferAndGetID_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_21(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracResetPlayPosition_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_22(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracSetMOutHalfwayBufferAndGetID_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_23(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracGetBitrate_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_24(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracGetOutputChannel_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_25(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracGetBufferInfoForReseting_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_26(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracStartEntry_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_27(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracEndEntry_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_28(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracGetMaxSample_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_29(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracGetInternalErrorInfo_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_30(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracIsSecondBufferNeeded_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAtrac3plus$registerModule$lambda_31(this$sceAtrac3plus) {
    return function (it) {
      this$sceAtrac3plus.sceAtracGetLoopStatus_xt3zvs$(it);
      return Unit;
    };
  }
  sceAtrac3plus.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceAtracSetDataAndGetID', Kotlin.Long.fromInt(2048976815), 150, void 0, sceAtrac3plus$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceAtracReleaseAtracID', Kotlin.Long.fromInt(1642804213), 150, void 0, sceAtrac3plus$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceAtracGetSecondBufferInfo', new Kotlin.Long(-2081923424, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('sceAtracSetSecondBuffer', new Kotlin.Long(-2084603139, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_2(this));
    this.registerFunctionInt_9l82lv$('sceAtracGetSoundSample', new Kotlin.Long(-1564759874, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_3(this));
    this.registerFunctionInt_9l82lv$('sceAtracSetLoopNum', new Kotlin.Long(-2038357835, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_4(this));
    this.registerFunctionInt_9l82lv$('sceAtracGetRemainFrame', new Kotlin.Long(-1696052825, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_5(this));
    this.registerFunctionInt_9l82lv$('sceAtracGetNextDecodePosition', new Kotlin.Long(-499238347, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_6(this));
    this.registerFunctionInt_9l82lv$('sceAtracDecodeData', Kotlin.Long.fromInt(1787575509), 150, void 0, sceAtrac3plus$registerModule$lambda_7(this));
    this.registerFunctionInt_9l82lv$('sceAtracGetStreamDataInfo', Kotlin.Long.fromInt(1562806023), 150, void 0, sceAtrac3plus$registerModule$lambda_8(this));
    this.registerFunctionInt_9l82lv$('sceAtracAddStreamData', Kotlin.Long.fromInt(2108887633), 150, void 0, sceAtrac3plus$registerModule$lambda_9(this));
    this.registerFunctionInt_9l82lv$('sceAtracGetAtracID', Kotlin.Long.fromInt(2014283985), 150, void 0, sceAtrac3plus$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceAtracSetData', Kotlin.Long.fromInt(237663147), 150, void 0, sceAtrac3plus$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceAtracSetHalfwayBufferAndGetID', Kotlin.Long.fromInt(263075598), 150, void 0, sceAtrac3plus$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceAtracReinit', Kotlin.Long.fromInt(321855178), 150, void 0, sceAtrac3plus$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceAtrac3plus_2DD3E298', Kotlin.Long.fromInt(768860824), 150, void 0, sceAtrac3plus$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceAtracGetChannel', Kotlin.Long.fromInt(828804010), 150, void 0, sceAtrac3plus$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceAtracGetNextSample', Kotlin.Long.fromInt(922397691), 150, void 0, sceAtrac3plus$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceAtracSetHalfwayBuffer', Kotlin.Long.fromInt(1064183477), 150, void 0, sceAtrac3plus$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceAtracSetAA3DataAndGetID', Kotlin.Long.fromInt(1445115841), 150, void 0, sceAtrac3plus$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceAtracSetMOutHalfwayBuffer', Kotlin.Long.fromInt(1559877714), 150, void 0, sceAtrac3plus$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceAtracSetAA3HalfwayBufferAndGetID', Kotlin.Long.fromInt(1574331784), 150, void 0, sceAtrac3plus$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceAtracResetPlayPosition', Kotlin.Long.fromInt(1682855431), 150, void 0, sceAtrac3plus$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceAtracSetMOutHalfwayBufferAndGetID', new Kotlin.Long(-1663574525, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceAtracGetBitrate', new Kotlin.Long(-1521180328, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceAtracGetOutputChannel', new Kotlin.Long(-1279930302, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('sceAtracGetBufferInfoForReseting', new Kotlin.Long(-901995566, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('sceAtracStartEntry', new Kotlin.Long(-772431909, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('sceAtracEndEntry', new Kotlin.Long(-708670272, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('sceAtracGetMaxSample', new Kotlin.Long(-693767433, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('sceAtracGetInternalErrorInfo', new Kotlin.Long(-393251429, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('sceAtracIsSecondBufferNeeded', new Kotlin.Long(-324851047, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('sceAtracGetLoopStatus', new Kotlin.Long(-89851749, 0), 150, void 0, sceAtrac3plus$registerModule$lambda_31(this));
  };
  sceAtrac3plus.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceAtrac3plus',
    interfaces: [SceModule]
  };
  function sceAudio(emulator) {
    SceModule.call(this, emulator, 'sceAudio', 1073807377, 'popsman.prx', 'scePops_Manager');
    var $receiver = until(0, 32);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(new sceAudio$AudioChannel(item));
    }
    this.channels = destination;
    this.lastId = 0;
    this.pool = Pool_init(void 0, sceAudio$pool$lambda(this));
  }
  function sceAudio$AudioFormat() {
    sceAudio$AudioFormat_instance = this;
    this.STEREO = 0;
    this.MONO = 16;
  }
  sceAudio$AudioFormat.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'AudioFormat',
    interfaces: []
  };
  var sceAudio$AudioFormat_instance = null;
  function sceAudio$AudioFormat_getInstance() {
    if (sceAudio$AudioFormat_instance === null) {
      new sceAudio$AudioFormat();
    }
    return sceAudio$AudioFormat_instance;
  }
  function sceAudio$AudioChannel(id) {
    this.id = id;
    this.reserved = false;
    this.stream_toy6ih$_0 = lazy(sceAudio$AudioChannel$stream$lambda);
    this.audioFormat = 0;
    this.line = new Int16Array(0);
    this.lineEx = new Int16Array(0);
    this.volumeLeft = 1.0;
    this.volumeRight = 1.0;
    this.sampleCount_eadmoa$_0 = 0;
  }
  Object.defineProperty(sceAudio$AudioChannel.prototype, 'stream', {
    get: function () {
      var $receiver = this.stream_toy6ih$_0;
      new PropertyMetadata('stream');
      return $receiver.value;
    }
  });
  Object.defineProperty(sceAudio$AudioChannel.prototype, 'isStereo', {
    get: function () {
      return this.audioFormat === sceAudio$AudioFormat_getInstance().STEREO;
    }
  });
  Object.defineProperty(sceAudio$AudioChannel.prototype, 'shortsPerSamples', {
    get: function () {
      return this.isStereo ? 2 : 1;
    }
  });
  Object.defineProperty(sceAudio$AudioChannel.prototype, 'sampleCount', {
    get: function () {
      return this.sampleCount_eadmoa$_0;
    },
    set: function (value) {
      this.sampleCount_eadmoa$_0 = value;
      this.line = new Int16Array(Kotlin.imul(this.sampleCount, this.shortsPerSamples));
      this.lineEx = new Int16Array(this.sampleCount * 2 | 0);
    }
  });
  sceAudio$AudioChannel.prototype.reconfigure_vux9f0$ = function (audioFormat, sampleCount) {
    if (audioFormat === void 0)
      audioFormat = this.audioFormat;
    if (sampleCount === void 0)
      sampleCount = this.sampleCount;
    this.audioFormat = audioFormat;
    this.sampleCount = sampleCount;
  };
  sceAudio$AudioChannel.prototype.ensureInitStream = function () {
    return this.stream;
  };
  function sceAudio$AudioChannel$stream$lambda() {
    return new NativeAudioStream();
  }
  sceAudio$AudioChannel.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AudioChannel',
    interfaces: []
  };
  sceAudio.prototype.sceAudioChReserve_qt1dr2$ = function (channelId, sampleCount, audioFormat) {
    var tmp$;
    if (channelId >= 0)
      tmp$ = channelId;
    else {
      var $receiver = this.channels;
      var indexOfFirst$result;
      indexOfFirst$break: do {
        var tmp$_0;
        var index = 0;
        tmp$_0 = $receiver.iterator();
        while (tmp$_0.hasNext()) {
          var item = tmp$_0.next();
          if (!item.reserved) {
            indexOfFirst$result = index;
            break indexOfFirst$break;
          }
          index = index + 1 | 0;
        }
        indexOfFirst$result = -1;
      }
       while (false);
      tmp$ = indexOfFirst$result;
    }
    var actualChannelId = tmp$;
    var channel = this.channels.get_za3lpa$(actualChannelId);
    var $this = this.logger;
    var level = LogLevel.INFO;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'WIP: sceAudioChReserve: ' + channelId + ', ' + sampleCount + ', ' + audioFormat);
    }
    channel.ensureInitStream();
    channel.reserved = true;
    channel.reconfigure_vux9f0$(audioFormat, sampleCount);
    return actualChannelId;
  };
  sceAudio.prototype._sceAudioOutputPannedBlocking_myfpo8$ = function (channelId_0, leftVolume_0, rightVolume_0, ptr_0, continuation_0, suspended) {
    var instance = new Coroutine$_sceAudioOutputPannedBlocking_myfpo8$(this, channelId_0, leftVolume_0, rightVolume_0, ptr_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_sceAudioOutputPannedBlocking_myfpo8$($this, channelId_0, leftVolume_0, rightVolume_0, ptr_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$channelId = channelId_0;
    this.local$leftVolume = leftVolume_0;
    this.local$rightVolume = rightVolume_0;
    this.local$ptr = ptr_0;
  }
  Coroutine$_sceAudioOutputPannedBlocking_myfpo8$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_sceAudioOutputPannedBlocking_myfpo8$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_sceAudioOutputPannedBlocking_myfpo8$.prototype.constructor = Coroutine$_sceAudioOutputPannedBlocking_myfpo8$;
  Coroutine$_sceAudioOutputPannedBlocking_myfpo8$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0, tmp$_1;
            var $this = this.$this.logger;
            var level = LogLevel.TRACE;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'WIP: sceAudioOutputPannedBlocking: ChannelId(' + this.local$channelId + '), Volumes(' + this.local$leftVolume + ', ' + this.local$rightVolume + '), Ptr(' + this.local$ptr + ')');
            }

            var channel = this.$this.channels.get_za3lpa$(this.local$channelId);
            get_mem(this.$this).read_r43jz4$(this.local$ptr, channel.line, 0, channel.line.length);
            if (channel.isStereo) {
              var tmp$_2 = channel.line;
              var tmp$_3 = channel.lineEx;
              var a = channel.line.length;
              var b = channel.lineEx.length;
              arraycopy_2(tmp$_2, 0, tmp$_3, 0, Math_0.min(a, b));
            }
             else {
              var m = 0;
              tmp$ = channel.sampleCount;
              for (var n = 0; n < tmp$; n++) {
                var sh = channel.line[n];
                channel.lineEx[tmp$_0 = m, m = tmp$_0 + 1 | 0, tmp$_0] = sh;
                channel.lineEx[tmp$_1 = m, m = tmp$_1 + 1 | 0, tmp$_1] = sh;
              }
            }

            this.state_0 = 2;
            this.result_0 = addSamples(channel.stream, channel.lineEx, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  sceAudio.prototype.sceAudioOutputPannedBlocking_tjonv8$ = function (channelId, leftVolume, rightVolume, ptr, continuation) {
    var channel = this.channels.get_za3lpa$(channelId);
    return this._sceAudioOutputPannedBlocking_myfpo8$(channelId, this.shortVolumeToDouble_0(leftVolume) * channel.volumeLeft, this.shortVolumeToDouble_0(rightVolume) * channel.volumeRight, ptr, continuation);
  };
  sceAudio.prototype.sceAudioOutputBlocking_vux9f0$ = function (channelId, ptr, continuation) {
    var channel = this.channels.get_za3lpa$(channelId);
    return this._sceAudioOutputPannedBlocking_myfpo8$(channelId, channel.volumeLeft, channel.volumeRight, ptr, continuation);
  };
  sceAudio.prototype.shortVolumeToDouble_0 = function ($receiver) {
    return $receiver / 32767.0;
  };
  sceAudio.prototype.sceAudioChangeChannelVolume_qt1dr2$ = function (channelId, volumeLeft, volumeRight) {
    var $this = this.logger;
    var level = LogLevel.INFO;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceAudioChangeChannelVolume not implemented! ' + volumeLeft + ', ' + volumeRight);
    }
    var channel = this.channels.get_za3lpa$(channelId);
    channel.volumeLeft = this.shortVolumeToDouble_0(volumeLeft);
    channel.volumeRight = this.shortVolumeToDouble_0(volumeRight);
    return 0;
  };
  sceAudio.prototype.sceAudioSetChannelDataLen_vux9f0$ = function (channelId, sampleCount) {
    var channel = this.channels.get_za3lpa$(channelId);
    channel.reconfigure_vux9f0$(void 0, sampleCount);
    return 0;
  };
  sceAudio.prototype.sceAudioChangeChannelConfig_vux9f0$ = function (channelId, format) {
    var channel = this.channels.get_za3lpa$(channelId);
    channel.reconfigure_vux9f0$(format);
    return 0;
  };
  sceAudio.prototype.sceAudioChReserve_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1590172757);
  };
  sceAudio.prototype.sceAudioOutput2Reserve_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(22424483);
  };
  sceAudio.prototype.sceAudioInputBlocking_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(141449365);
  };
  sceAudio.prototype.sceAudioOutput2OutputBlocking_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(760476526);
  };
  sceAudio.prototype.sceAudioSRCChReserve_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(945107217);
  };
  sceAudio.prototype.sceAudioOneshotOutput_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1106226663);
  };
  sceAudio.prototype.sceAudioOutput2Release_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1125738565);
  };
  sceAudio.prototype.sceAudioSRCChRelease_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1547157678);
  };
  sceAudio.prototype.sceAudioOutput2ChangeLength_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1676839068);
  };
  sceAudio.prototype.sceAudioOutput2GetRestSample_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1685909299);
  };
  sceAudio.prototype.sceAudioInput_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1833692264);
  };
  sceAudio.prototype.sceAudioChRelease_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1875142739);
  };
  sceAudio.prototype.sceAudioInputInit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2112231048);
  };
  sceAudio.prototype.sceAudioWaitInputEnd_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2018318767, 0));
  };
  sceAudio.prototype.sceAudioOutput_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1945105998, 0));
  };
  sceAudio.prototype.sceAudioPollInputEnd_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1506605938, 0));
  };
  sceAudio.prototype.sceAudioGetInputLength_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1492597082, 0));
  };
  sceAudio.prototype.sceAudioGetChannelRestLength_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1341025745, 0));
  };
  sceAudio.prototype.sceAudioSRCOutputBlocking_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-529371050, 0));
  };
  sceAudio.prototype.sceAudioOutputPanned_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-489329875, 0));
  };
  sceAudio.prototype.sceAudioInputInitEx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-383331333, 0));
  };
  sceAudio.prototype.sceAudioGetChannelRestLen_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-371623679, 0));
  };
  function sceAudio$registerModule$lambda(this$sceAudio) {
    return function ($receiver, it) {
      return this$sceAudio.sceAudioChReserve_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceAudio$registerModule$lambda_0(this$sceAudio) {
    return function ($receiver, it) {
      return this$sceAudio.sceAudioChangeChannelVolume_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceAudio$registerModule$lambda_1(this$sceAudio_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$sceAudio$registerModule$lambda(this$sceAudio_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceAudio$registerModule$lambda(this$sceAudio_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceAudio = this$sceAudio_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceAudio$registerModule$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceAudio$registerModule$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceAudio$registerModule$lambda.prototype.constructor = Coroutine$sceAudio$registerModule$lambda;
  Coroutine$sceAudio$registerModule$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceAudio.sceAudioOutputPannedBlocking_tjonv8$(this.local$$receiver.int, this.local$$receiver.int, this.local$$receiver.int, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceAudio$registerModule$lambda_2(this$sceAudio_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$sceAudio$registerModule$lambda_0(this$sceAudio_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceAudio$registerModule$lambda_0(this$sceAudio_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceAudio = this$sceAudio_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceAudio$registerModule$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceAudio$registerModule$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceAudio$registerModule$lambda_0.prototype.constructor = Coroutine$sceAudio$registerModule$lambda_0;
  Coroutine$sceAudio$registerModule$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceAudio.sceAudioOutputBlocking_vux9f0$(this.local$$receiver.int, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceAudio$registerModule$lambda_3(this$sceAudio) {
    return function ($receiver, it) {
      return this$sceAudio.sceAudioSetChannelDataLen_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceAudio$registerModule$lambda_4(this$sceAudio) {
    return function ($receiver, it) {
      return this$sceAudio.sceAudioChangeChannelConfig_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceAudio$registerModule$lambda_5(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutput2Reserve_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_6(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioInputBlocking_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_7(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutput2OutputBlocking_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_8(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioSRCChReserve_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_9(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOneshotOutput_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_10(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutput2Release_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_11(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioSRCChRelease_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_12(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutput2ChangeLength_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_13(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutput2GetRestSample_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_14(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioInput_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_15(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioChRelease_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_16(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioInputInit_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_17(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioWaitInputEnd_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_18(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutput_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_19(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioPollInputEnd_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_20(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioGetInputLength_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_21(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioGetChannelRestLength_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_22(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioSRCOutputBlocking_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_23(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioOutputPanned_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_24(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioInputInitEx_xt3zvs$(it);
      return Unit;
    };
  }
  function sceAudio$registerModule$lambda_25(this$sceAudio) {
    return function (it) {
      this$sceAudio.sceAudioGetChannelRestLen_xt3zvs$(it);
      return Unit;
    };
  }
  sceAudio.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceAudioChReserve', Kotlin.Long.fromInt(1590172757), 150, void 0, sceAudio$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceAudioChangeChannelVolume', new Kotlin.Long(-1209935641, 0), 150, void 0, sceAudio$registerModule$lambda_0(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceAudioOutputPannedBlocking', Kotlin.Long.fromInt(334860988), 150, void 0, void 0, sceAudio$registerModule$lambda_1(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceAudioOutputBlocking', Kotlin.Long.fromInt(325889873), 150, void 0, void 0, sceAudio$registerModule$lambda_2(this));
    this.registerFunctionInt_9l82lv$('sceAudioSetChannelDataLen', new Kotlin.Long(-886160482, 0), 150, void 0, sceAudio$registerModule$lambda_3(this));
    this.registerFunctionInt_9l82lv$('sceAudioChangeChannelConfig', new Kotlin.Long(-1778578387, 0), 150, void 0, sceAudio$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutput2Reserve', Kotlin.Long.fromInt(22424483), 150, void 0, sceAudio$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceAudioInputBlocking', Kotlin.Long.fromInt(141449365), 150, void 0, sceAudio$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutput2OutputBlocking', Kotlin.Long.fromInt(760476526), 150, void 0, sceAudio$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceAudioSRCChReserve', Kotlin.Long.fromInt(945107217), 150, void 0, sceAudio$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOneshotOutput', Kotlin.Long.fromInt(1106226663), 150, void 0, sceAudio$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutput2Release', Kotlin.Long.fromInt(1125738565), 150, void 0, sceAudio$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceAudioSRCChRelease', Kotlin.Long.fromInt(1547157678), 150, void 0, sceAudio$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutput2ChangeLength', Kotlin.Long.fromInt(1676839068), 150, void 0, sceAudio$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutput2GetRestSample', Kotlin.Long.fromInt(1685909299), 150, void 0, sceAudio$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceAudioInput', Kotlin.Long.fromInt(1833692264), 150, void 0, sceAudio$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceAudioChRelease', Kotlin.Long.fromInt(1875142739), 150, void 0, sceAudio$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceAudioInputInit', Kotlin.Long.fromInt(2112231048), 150, void 0, sceAudio$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceAudioWaitInputEnd', new Kotlin.Long(-2018318767, 0), 150, void 0, sceAudio$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutput', new Kotlin.Long(-1945105998, 0), 150, void 0, sceAudio$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceAudioPollInputEnd', new Kotlin.Long(-1506605938, 0), 150, void 0, sceAudio$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceAudioGetInputLength', new Kotlin.Long(-1492597082, 0), 150, void 0, sceAudio$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceAudioGetChannelRestLength', new Kotlin.Long(-1341025745, 0), 150, void 0, sceAudio$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceAudioSRCOutputBlocking', new Kotlin.Long(-529371050, 0), 150, void 0, sceAudio$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceAudioOutputPanned', new Kotlin.Long(-489329875, 0), 150, void 0, sceAudio$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceAudioInputInitEx', new Kotlin.Long(-383331333, 0), 150, void 0, sceAudio$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('sceAudioGetChannelRestLen', new Kotlin.Long(-371623679, 0), 150, void 0, sceAudio$registerModule$lambda_25(this));
  };
  function sceAudio$pool$lambda(this$sceAudio) {
    return function (it) {
      var tmp$;
      return new sceAudio$AudioChannel((tmp$ = this$sceAudio.lastId, this$sceAudio.lastId = tmp$ + 1 | 0, tmp$));
    };
  }
  sceAudio.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceAudio',
    interfaces: [SceModule]
  };
  function sceCtrl(emulator) {
    SceModule.call(this, emulator, 'sceCtrl', 1073807377, 'ctrl.prx', 'sceController_Service');
  }
  sceCtrl.prototype._sceCtrlPeekBuffer_0 = function (sceCtrlDataPtr, count, positive) {
    var pos = 0;
    for (var n = 0; n < count; n++) {
      var frame = get_controller(this).getFrame_za3lpa$(-n);
      sceCtrlDataPtr.sw_vux9f0$(pos + 0 | 0, frame.timestamp);
      sceCtrlDataPtr.sw_vux9f0$(pos + 4 | 0, positive ? frame.buttons : ~frame.buttons);
      sceCtrlDataPtr.sb_vux9f0$(pos + 8 | 0, frame.lx);
      sceCtrlDataPtr.sb_vux9f0$(pos + 9 | 0, frame.ly);
      pos = pos + 16 | 0;
    }
    return count;
  };
  sceCtrl.prototype.sceCtrlPeekBufferPositive_sww0cq$ = function (thread, sceCtrlDataPtr, count, continuation) {
    return this._sceCtrlPeekBuffer_0(sceCtrlDataPtr, count, true);
  };
  sceCtrl.prototype.sceCtrlReadBufferPositive_sww0cq$ = function (thread_0, sceCtrlDataPtr_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$sceCtrlReadBufferPositive_sww0cq$(this, thread_0, sceCtrlDataPtr_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceCtrlReadBufferPositive_sww0cq$($this, thread_0, sceCtrlDataPtr_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$thread = thread_0;
    this.local$sceCtrlDataPtr = sceCtrlDataPtr_0;
    this.local$count = count_0;
  }
  Coroutine$sceCtrlReadBufferPositive_sww0cq$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceCtrlReadBufferPositive_sww0cq$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceCtrlReadBufferPositive_sww0cq$.prototype.constructor = Coroutine$sceCtrlReadBufferPositive_sww0cq$;
  Coroutine$sceCtrlReadBufferPositive_sww0cq$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = get_display(this.$this).waitVblank_madyma$(this.local$thread, 'sceCtrlReadBufferPositive', this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.$this._sceCtrlPeekBuffer_0(this.local$sceCtrlDataPtr, this.local$count, true);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  sceCtrl.prototype.sceCtrlSetSamplingCycle_za3lpa$ = function (samplingCycle) {
    get_controller(this).samplingCycle = samplingCycle;
    return 0;
  };
  sceCtrl.prototype.sceCtrlSetSamplingMode_za3lpa$ = function (samplingMode) {
    get_controller(this).samplingMode = samplingMode;
    return 0;
  };
  sceCtrl.prototype._peekLatch_xnxgf8$ = function (currentLatchPtr) {
    var ButtonsNew = get_controller(this).currentFrame.buttons;
    var ButtonsOld = get_controller(this).lastLatchData.buttons;
    var ButtonsChanged = ButtonsOld ^ ButtonsNew;
    currentLatchPtr.sw_vux9f0$(0, ButtonsNew & ButtonsChanged);
    currentLatchPtr.sw_vux9f0$(4, ButtonsOld & ButtonsChanged);
    currentLatchPtr.sw_vux9f0$(8, ButtonsNew);
    currentLatchPtr.sw_vux9f0$(12, ButtonsOld & ~ButtonsNew & ButtonsChanged);
    get_controller(this).lastLatchData.setTo_2xrz9e$(get_controller(this).currentFrame);
  };
  sceCtrl.prototype.sceCtrlReadLatch_pcemqw$ = function (thread_0, currentLatchPtr_0, continuation_0, suspended) {
    var instance = new Coroutine$sceCtrlReadLatch_pcemqw$(this, thread_0, currentLatchPtr_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceCtrlReadLatch_pcemqw$($this, thread_0, currentLatchPtr_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$thread = thread_0;
    this.local$currentLatchPtr = currentLatchPtr_0;
  }
  Coroutine$sceCtrlReadLatch_pcemqw$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceCtrlReadLatch_pcemqw$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceCtrlReadLatch_pcemqw$.prototype.constructor = Coroutine$sceCtrlReadLatch_pcemqw$;
  Coroutine$sceCtrlReadLatch_pcemqw$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = get_display(this.$this).waitVblank_madyma$(this.local$thread, 'sceCtrlReadLatch', this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.$this._peekLatch_xnxgf8$(this.local$currentLatchPtr);
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  sceCtrl.prototype.sceCtrlGetSamplingCycle_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(45788561);
  };
  sceCtrl.prototype.sceCtrl_348D99D4_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(881695188);
  };
  sceCtrl.prototype.sceCtrlReadBufferNegative_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1622679430);
  };
  sceCtrl.prototype.sceCtrlSetRapidFire_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1749138970);
  };
  sceCtrl.prototype.sceCtrlGetIdleCancelThreshold_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1752588538);
  };
  sceCtrl.prototype.sceCtrlClearRapidFire_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1500523936, 0));
  };
  sceCtrl.prototype.sceCtrlSetIdleCancelThreshold_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1491843072, 0));
  };
  sceCtrl.prototype.sceCtrl_AF5960F3_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1353096973, 0));
  };
  sceCtrl.prototype.sceCtrlPeekLatch_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1311709747, 0));
  };
  sceCtrl.prototype.sceCtrlPeekBufferNegative_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1051588598, 0));
  };
  sceCtrl.prototype.sceCtrlGetSamplingMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-630491487, 0));
  };
  function sceCtrl$registerModule$lambda(this$sceCtrl_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$sceCtrl$registerModule$lambda(this$sceCtrl_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceCtrl$registerModule$lambda(this$sceCtrl_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceCtrl = this$sceCtrl_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceCtrl$registerModule$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceCtrl$registerModule$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceCtrl$registerModule$lambda.prototype.constructor = Coroutine$sceCtrl$registerModule$lambda;
  Coroutine$sceCtrl$registerModule$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceCtrl.sceCtrlPeekBufferPositive_sww0cq$(this.local$$receiver.thread, this.local$$receiver.ptr, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceCtrl$registerModule$lambda_0(this$sceCtrl_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$sceCtrl$registerModule$lambda_0(this$sceCtrl_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceCtrl$registerModule$lambda_0(this$sceCtrl_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceCtrl = this$sceCtrl_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceCtrl$registerModule$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceCtrl$registerModule$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceCtrl$registerModule$lambda_0.prototype.constructor = Coroutine$sceCtrl$registerModule$lambda_0;
  Coroutine$sceCtrl$registerModule$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceCtrl.sceCtrlReadBufferPositive_sww0cq$(this.local$$receiver.thread, this.local$$receiver.ptr, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceCtrl$registerModule$lambda_1(this$sceCtrl) {
    return function ($receiver, it) {
      return this$sceCtrl.sceCtrlSetSamplingCycle_za3lpa$($receiver.int);
    };
  }
  function sceCtrl$registerModule$lambda_2(this$sceCtrl) {
    return function ($receiver, it) {
      return this$sceCtrl.sceCtrlSetSamplingMode_za3lpa$($receiver.int);
    };
  }
  function sceCtrl$registerModule$lambda_3(this$sceCtrl_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$sceCtrl$registerModule$lambda_1(this$sceCtrl_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceCtrl$registerModule$lambda_1(this$sceCtrl_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceCtrl = this$sceCtrl_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceCtrl$registerModule$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceCtrl$registerModule$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceCtrl$registerModule$lambda_1.prototype.constructor = Coroutine$sceCtrl$registerModule$lambda_1;
  Coroutine$sceCtrl$registerModule$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceCtrl.sceCtrlReadLatch_pcemqw$(this.local$$receiver.thread, this.local$$receiver.ptr, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceCtrl$registerModule$lambda_4(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlGetSamplingCycle_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_5(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrl_348D99D4_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_6(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlReadBufferNegative_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_7(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlSetRapidFire_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_8(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlGetIdleCancelThreshold_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_9(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlClearRapidFire_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_10(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlSetIdleCancelThreshold_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_11(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrl_AF5960F3_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_12(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlPeekLatch_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_13(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlPeekBufferNegative_xt3zvs$(it);
      return Unit;
    };
  }
  function sceCtrl$registerModule$lambda_14(this$sceCtrl) {
    return function (it) {
      this$sceCtrl.sceCtrlGetSamplingMode_xt3zvs$(it);
      return Unit;
    };
  }
  sceCtrl.prototype.registerModule = function () {
    this.registerFunctionSuspendInt_q1rm4a$('sceCtrlPeekBufferPositive', Kotlin.Long.fromInt(979510608), 150, 8528, void 0, sceCtrl$registerModule$lambda(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceCtrlReadBufferPositive', Kotlin.Long.fromInt(528496952), 150, void 0, void 0, sceCtrl$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceCtrlSetSamplingCycle', Kotlin.Long.fromInt(1780970739), 150, void 0, sceCtrl$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('sceCtrlSetSamplingMode', Kotlin.Long.fromInt(524292582), 150, void 0, sceCtrl$registerModule$lambda_2(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceCtrlReadLatch', Kotlin.Long.fromInt(190350593), 150, void 0, void 0, sceCtrl$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlGetSamplingCycle', Kotlin.Long.fromInt(45788561), 150, void 0, sceCtrl$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceCtrl_348D99D4', Kotlin.Long.fromInt(881695188), 150, void 0, sceCtrl$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlReadBufferNegative', Kotlin.Long.fromInt(1622679430), 150, void 0, sceCtrl$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlSetRapidFire', Kotlin.Long.fromInt(1749138970), 150, void 0, sceCtrl$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlGetIdleCancelThreshold', Kotlin.Long.fromInt(1752588538), 150, void 0, sceCtrl$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlClearRapidFire', new Kotlin.Long(-1500523936, 0), 150, void 0, sceCtrl$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlSetIdleCancelThreshold', new Kotlin.Long(-1491843072, 0), 150, void 0, sceCtrl$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceCtrl_AF5960F3', new Kotlin.Long(-1353096973, 0), 150, void 0, sceCtrl$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlPeekLatch', new Kotlin.Long(-1311709747, 0), 150, void 0, sceCtrl$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlPeekBufferNegative', new Kotlin.Long(-1051588598, 0), 150, void 0, sceCtrl$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceCtrlGetSamplingMode', new Kotlin.Long(-630491487, 0), 150, void 0, sceCtrl$registerModule$lambda_14(this));
  };
  sceCtrl.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceCtrl',
    interfaces: [SceModule]
  };
  function sceDisplay(emulator) {
    SceModule.call(this, emulator, 'sceDisplay', 1073807377, 'display_02g.prx', 'sceDisplay_Service');
  }
  sceDisplay.prototype.sceDisplaySetMode_qt1dr2$ = function (mode, width, height) {
    get_display(this).displayMode = mode;
    get_display(this).displayWidth = width;
    get_display(this).displayHeight = height;
    return 0;
  };
  sceDisplay.prototype.sceDisplayWaitVblankStart_6r5tao$ = function (thread_0, continuation_0, suspended) {
    var instance = new Coroutine$sceDisplayWaitVblankStart_6r5tao$(this, thread_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceDisplayWaitVblankStart_6r5tao$($this, thread_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$thread = thread_0;
  }
  Coroutine$sceDisplayWaitVblankStart_6r5tao$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceDisplayWaitVblankStart_6r5tao$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceDisplayWaitVblankStart_6r5tao$.prototype.constructor = Coroutine$sceDisplayWaitVblankStart_6r5tao$;
  Coroutine$sceDisplayWaitVblankStart_6r5tao$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = get_display(this.$this).waitVblankStart_madyma$(this.local$thread, 'sceDisplayWaitVblankStart', this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  sceDisplay.prototype.sceDisplayWaitVblank_6r5tao$ = function (thread_0, continuation_0, suspended) {
    var instance = new Coroutine$sceDisplayWaitVblank_6r5tao$(this, thread_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceDisplayWaitVblank_6r5tao$($this, thread_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$thread = thread_0;
  }
  Coroutine$sceDisplayWaitVblank_6r5tao$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceDisplayWaitVblank_6r5tao$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceDisplayWaitVblank_6r5tao$.prototype.constructor = Coroutine$sceDisplayWaitVblank_6r5tao$;
  Coroutine$sceDisplayWaitVblank_6r5tao$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = get_display(this.$this).waitVblank_madyma$(this.local$thread, 'sceDisplayWaitVblank', this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  sceDisplay.prototype.sceDisplaySetFrameBuf_tjonv8$ = function (address, bufferWidth, pixelFormat, sync) {
    get_display(this).address = address;
    get_display(this).bufferWidth = bufferWidth;
    get_display(this).pixelFormat = PixelFormat$Companion_getInstance().invoke_za3lpa$(pixelFormat);
    get_display(this).sync = sync;
    return 0;
  };
  sceDisplay.prototype.sceDisplayGetFrameBuf_8m3oj1$ = function (topaddrAddr, bufferwidthAddr, pixelformatAddr, syncType) {
    topaddrAddr.set_za3lpa$(get_display(this).address);
    bufferwidthAddr.set_za3lpa$(get_display(this).bufferWidth);
    pixelformatAddr.set_za3lpa$(get_display(this).pixelFormat.id);
    return 0;
  };
  sceDisplay.prototype.sceDisplayGetVcount = function () {
    return this.emulator.display.updatedTimes.vblankCount;
  };
  sceDisplay.prototype.sceDisplayGetCurrentHcount = function () {
    return this.emulator.display.updatedTimes.hcountCurrent;
  };
  sceDisplay.prototype.sceDisplayIsVsync_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(553879827);
  };
  sceDisplay.prototype.sceDisplayGetAccumulatedHcount_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(554609466);
  };
  sceDisplay.prototype.sceDisplayGetBrightness_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(834976424);
  };
  sceDisplay.prototype.sceDisplay_40F1469C_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1089554076);
  };
  sceDisplay.prototype.sceDisplayIsVblank_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1296961772);
  };
  sceDisplay.prototype.sceDisplayGetVblankRest_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1773483329);
  };
  sceDisplay.prototype.sceDisplay_77ED8B3A_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2012056378);
  };
  sceDisplay.prototype.sceDisplaySetHoldMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2127928260);
  };
  sceDisplay.prototype.sceDisplaySetResumeMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1522219898, 0));
  };
  sceDisplay.prototype.sceDisplayAdjustAccumulatedHcount_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1472270023, 0));
  };
  sceDisplay.prototype.sceDisplayIsForeground_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1259112198, 0));
  };
  sceDisplay.prototype.sceDisplayGetResumeMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1082526138, 0));
  };
  sceDisplay.prototype.sceDisplayGetFramePerSec_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-609827644, 0));
  };
  sceDisplay.prototype.sceDisplayGetMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-559835180, 0));
  };
  function sceDisplay$registerModule$lambda(this$sceDisplay) {
    return function ($receiver, it) {
      return this$sceDisplay.sceDisplaySetMode_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceDisplay$registerModule$lambda_0(this$sceDisplay) {
    return function ($receiver, it) {
      return this$sceDisplay.sceDisplaySetFrameBuf_tjonv8$($receiver.int, $receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceDisplay$registerModule$lambda_1(this$sceDisplay_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$sceDisplay$registerModule$lambda(this$sceDisplay_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceDisplay$registerModule$lambda(this$sceDisplay_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceDisplay = this$sceDisplay_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceDisplay$registerModule$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceDisplay$registerModule$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceDisplay$registerModule$lambda.prototype.constructor = Coroutine$sceDisplay$registerModule$lambda;
  Coroutine$sceDisplay$registerModule$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceDisplay.sceDisplayWaitVblank_6r5tao$(this.local$$receiver.thread, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceDisplay$registerModule$lambda_2(this$sceDisplay_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$sceDisplay$registerModule$lambda_0(this$sceDisplay_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceDisplay$registerModule$lambda_0(this$sceDisplay_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceDisplay = this$sceDisplay_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceDisplay$registerModule$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceDisplay$registerModule$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceDisplay$registerModule$lambda_0.prototype.constructor = Coroutine$sceDisplay$registerModule$lambda_0;
  Coroutine$sceDisplay$registerModule$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceDisplay.sceDisplayWaitVblank_6r5tao$(this.local$$receiver.thread, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceDisplay$registerModule$lambda_3(this$sceDisplay_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$sceDisplay$registerModule$lambda_1(this$sceDisplay_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceDisplay$registerModule$lambda_1(this$sceDisplay_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceDisplay = this$sceDisplay_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceDisplay$registerModule$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceDisplay$registerModule$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceDisplay$registerModule$lambda_1.prototype.constructor = Coroutine$sceDisplay$registerModule$lambda_1;
  Coroutine$sceDisplay$registerModule$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceDisplay.sceDisplayWaitVblankStart_6r5tao$(this.local$$receiver.thread, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceDisplay$registerModule$lambda_4(this$sceDisplay_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$sceDisplay$registerModule$lambda_2(this$sceDisplay_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceDisplay$registerModule$lambda_2(this$sceDisplay_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceDisplay = this$sceDisplay_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceDisplay$registerModule$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceDisplay$registerModule$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceDisplay$registerModule$lambda_2.prototype.constructor = Coroutine$sceDisplay$registerModule$lambda_2;
  Coroutine$sceDisplay$registerModule$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceDisplay.sceDisplayWaitVblankStart_6r5tao$(this.local$$receiver.thread, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceDisplay$registerModule$lambda_5(this$sceDisplay) {
    return function ($receiver, it) {
      return this$sceDisplay.sceDisplayGetVcount();
    };
  }
  function sceDisplay$registerModule$lambda_6(this$sceDisplay) {
    return function ($receiver, it) {
      return this$sceDisplay.sceDisplayGetCurrentHcount();
    };
  }
  function sceDisplay$registerModule$lambda_7(this$sceDisplay) {
    return function ($receiver, it) {
      return this$sceDisplay.sceDisplayGetFrameBuf_8m3oj1$($receiver.ptr32, $receiver.ptr32, $receiver.ptr32, $receiver.int);
    };
  }
  function sceDisplay$registerModule$lambda_8(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayIsVsync_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_9(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetAccumulatedHcount_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_10(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetBrightness_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_11(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplay_40F1469C_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_12(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayIsVblank_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_13(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetVblankRest_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_14(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplay_77ED8B3A_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_15(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplaySetHoldMode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_16(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplaySetResumeMode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_17(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayAdjustAccumulatedHcount_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_18(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayIsForeground_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_19(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetResumeMode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_20(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetFramePerSec_xt3zvs$(it);
      return Unit;
    };
  }
  function sceDisplay$registerModule$lambda_21(this$sceDisplay) {
    return function (it) {
      this$sceDisplay.sceDisplayGetMode_xt3zvs$(it);
      return Unit;
    };
  }
  sceDisplay.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceDisplaySetMode', Kotlin.Long.fromInt(237039991), 150, 8506, sceDisplay$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceDisplaySetFrameBuf', Kotlin.Long.fromInt(681411326), 150, 8511, sceDisplay$registerModule$lambda_0(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceDisplayWaitVblank', Kotlin.Long.fromInt(919468766), 150, void 0, false, sceDisplay$registerModule$lambda_1(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceDisplayWaitVblankCB', new Kotlin.Long(-1900417975, 0), 150, void 0, true, sceDisplay$registerModule$lambda_2(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceDisplayWaitVblankStart', new Kotlin.Long(-1739839513, 0), 150, 8519, false, sceDisplay$registerModule$lambda_3(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceDisplayWaitVblankStartCB', Kotlin.Long.fromInt(1190233795), 150, void 0, true, sceDisplay$registerModule$lambda_4(this));
    this.registerFunctionInt_9l82lv$('sceDisplayGetVcount', new Kotlin.Long(-1670468905, 0), 150, void 0, sceDisplay$registerModule$lambda_5(this));
    this.registerFunctionInt_9l82lv$('sceDisplayGetCurrentHcount', Kotlin.Long.fromInt(2000540579), 150, void 0, sceDisplay$registerModule$lambda_6(this));
    this.registerFunctionInt_9l82lv$('sceDisplayGetFrameBuf', new Kotlin.Long(-287691180, 0), 150, void 0, sceDisplay$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayIsVsync', Kotlin.Long.fromInt(553879827), 150, void 0, sceDisplay$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetAccumulatedHcount', Kotlin.Long.fromInt(554609466), 150, void 0, sceDisplay$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetBrightness', Kotlin.Long.fromInt(834976424), 150, void 0, sceDisplay$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceDisplay_40F1469C', Kotlin.Long.fromInt(1089554076), 150, void 0, sceDisplay$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayIsVblank', Kotlin.Long.fromInt(1296961772), 150, void 0, sceDisplay$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetVblankRest', Kotlin.Long.fromInt(1773483329), 150, void 0, sceDisplay$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceDisplay_77ED8B3A', Kotlin.Long.fromInt(2012056378), 150, void 0, sceDisplay$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceDisplaySetHoldMode', Kotlin.Long.fromInt(2127928260), 150, void 0, sceDisplay$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceDisplaySetResumeMode', new Kotlin.Long(-1522219898, 0), 150, void 0, sceDisplay$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayAdjustAccumulatedHcount', new Kotlin.Long(-1472270023, 0), 150, void 0, sceDisplay$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayIsForeground', new Kotlin.Long(-1259112198, 0), 150, void 0, sceDisplay$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetResumeMode', new Kotlin.Long(-1082526138, 0), 150, void 0, sceDisplay$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetFramePerSec', new Kotlin.Long(-609827644, 0), 150, void 0, sceDisplay$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceDisplayGetMode', new Kotlin.Long(-559835180, 0), 150, void 0, sceDisplay$registerModule$lambda_21(this));
  };
  sceDisplay.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceDisplay',
    interfaces: [SceModule]
  };
  function sceDmac(emulator) {
    SceModule.call(this, emulator, 'sceDmac', 1073807377, 'lowio.prx', 'sceLowIO_Driver');
  }
  sceDmac.prototype._sceDmacMemcpy_qt1dr2$ = function (src, dst, size) {
    if (size === 0)
      return SceKernelErrors_getInstance().ERROR_INVALID_SIZE;
    if (src === 0 || dst === 0)
      return SceKernelErrors_getInstance().ERROR_INVALID_POINTER;
    get_mem(this).copy_qt1dr2$(dst, src, size);
    return 0;
  };
  sceDmac.prototype.sceDmacMemcpy_qt1dr2$ = function (src, dst, size) {
    return this._sceDmacMemcpy_qt1dr2$(src, dst, size);
  };
  sceDmac.prototype.sceDmacTryMemcpy_qt1dr2$ = function (src, dst, size) {
    return this._sceDmacMemcpy_qt1dr2$(src, dst, size);
  };
  function sceDmac$registerModule$lambda(this$sceDmac) {
    return function ($receiver, it) {
      return this$sceDmac.sceDmacMemcpy_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceDmac$registerModule$lambda_0(this$sceDmac) {
    return function ($receiver, it) {
      return this$sceDmac.sceDmacTryMemcpy_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  sceDmac.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceDmacMemcpy', Kotlin.Long.fromInt(1635729382), 150, void 0, sceDmac$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceDmacTryMemcpy', new Kotlin.Long(-645950248, 0), 150, void 0, sceDmac$registerModule$lambda_0(this));
  };
  sceDmac.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceDmac',
    interfaces: [SceModule]
  };
  function sceGe_user(emulator) {
    SceModule.call(this, emulator, 'sceGe_user', 1073807377, 'ge.prx', 'sceGE_Manager');
    this.geCallbacks = new ResourceList('GeCallback', void 0, sceGe_user$geCallbacks$lambda);
  }
  sceGe_user.prototype.sceGeEdramGetAddr = function () {
    return 67108864;
  };
  sceGe_user.prototype.sceGeSetCallback_xnxgf8$ = function (callbackDataPtr) {
    var $receiver = this.geCallbacks.alloc();
    $receiver.signal_func = callbackDataPtr.lw_za3lpa$(0);
    $receiver.signal_arg = callbackDataPtr.lw_za3lpa$(4);
    $receiver.finish_func = callbackDataPtr.lw_za3lpa$(8);
    $receiver.finish_arg = callbackDataPtr.lw_za3lpa$(12);
    return $receiver.id;
  };
  sceGe_user.prototype.sceGeUnsetCallback_za3lpa$ = function (callbackId) {
    this.geCallbacks.freeById_za3lpa$(callbackId);
    return 0;
  };
  sceGe_user.prototype.sceGeListEnQueue_dv45i2$ = function (start, stall, callbackId, pspGeListArgs) {
    return get_ge(this).listEnqueue_56435g$(start.addr, stall.addr, this.geCallbacks.get_za3lpa$(callbackId), pspGeListArgs.addr).id;
  };
  sceGe_user.prototype.getList_0 = function (displayListId) {
    var tmp$;
    return (tmp$ = get_ge(this).lists.tryGetById_za3lpa$(displayListId)) != null ? tmp$ : sceKernelException(-1);
  };
  sceGe_user.prototype.sceGeListUpdateStallAddr_o62i3q$ = function (displayListId, stall) {
    var list = this.getList_0(displayListId);
    list.stall = stall.addr;
    list.run();
    return 0;
  };
  sceGe_user.prototype.sceGeListSync_vux9f0$ = function (displayListId, syncType) {
    var displayList = this.getList_0(displayListId);
    displayList.sync_za3lpa$(syncType);
    return 0;
  };
  sceGe_user.prototype.sceGeDrawSync_za3lpa$ = function (syncType_0, continuation_0, suspended) {
    var instance = new Coroutine$sceGeDrawSync_za3lpa$(this, syncType_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceGeDrawSync_za3lpa$($this, syncType_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$syncType = syncType_0;
  }
  Coroutine$sceGeDrawSync_za3lpa$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceGeDrawSync_za3lpa$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceGeDrawSync_za3lpa$.prototype.constructor = Coroutine$sceGeDrawSync_za3lpa$;
  Coroutine$sceGeDrawSync_za3lpa$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            get_ge(this.$this).sync_za3lpa$(this.local$syncType);
            this.$this.emulator.gpu.flush();
            this.$this.emulator.gpuRenderer.tryExecuteNow();
            if (this.local$syncType === PspGeSyncType_getInstance().PSP_GE_LIST_DONE || this.local$syncType === PspGeSyncType_getInstance().PSP_GE_LIST_DRAWING_DONE) {
              this.state_0 = 2;
              this.result_0 = this.$this.emulator.gpuRenderer.queuedJobs.waitValue_11rb$(0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            return 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  sceGe_user.prototype.sceGeSaveContext_xnxgf8$ = function (ptr) {
    var tmp$;
    tmp$ = GeState$Companion_getInstance().STATE_NWORDS;
    for (var n = 0; n < tmp$; n++)
      ptr.sw_vux9f0$(n * 4 | 0, get_ge(this).state.data[n]);
    return 0;
  };
  sceGe_user.prototype.sceGeRestoreContext_xnxgf8$ = function (ptr) {
    var tmp$;
    tmp$ = GeState$Companion_getInstance().STATE_NWORDS;
    for (var n = 0; n < tmp$; n++)
      get_ge(this).state.data[n] = ptr.lw_za3lpa$(n * 4 | 0);
    return 0;
  };
  sceGe_user.prototype.sceGeEdramGetSize = function () {
    return 2097152;
  };
  sceGe_user.prototype.sceGeListEnQueueHead_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(470652326);
  };
  sceGe_user.prototype.sceGeContinue_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1275520114);
  };
  sceGe_user.prototype.sceGeGetMtx_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1472762971);
  };
  sceGe_user.prototype.sceGeListDeQueue_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1605921456);
  };
  sceGe_user.prototype.sceGeBreak_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1270289395, 0));
  };
  sceGe_user.prototype.sceGeEdramSetAddrTranslation_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1216805398, 0));
  };
  sceGe_user.prototype.sceGeGetCmd_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-594292753, 0));
  };
  sceGe_user.prototype.sceGeGetStack_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-429082322, 0));
  };
  function sceGe_user$registerModule$lambda(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeEdramGetAddr();
    };
  }
  function sceGe_user$registerModule$lambda_0(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeEdramGetSize();
    };
  }
  function sceGe_user$registerModule$lambda_1(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeListUpdateStallAddr_o62i3q$($receiver.int, $receiver.ptr);
    };
  }
  function sceGe_user$registerModule$lambda_2(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeListEnQueue_dv45i2$($receiver.ptr, $receiver.ptr, $receiver.int, $receiver.ptr);
    };
  }
  function sceGe_user$registerModule$lambda_3(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeListSync_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceGe_user$registerModule$lambda_4(this$sceGe_user_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$sceGe_user$registerModule$lambda(this$sceGe_user_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceGe_user$registerModule$lambda(this$sceGe_user_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceGe_user = this$sceGe_user_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceGe_user$registerModule$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceGe_user$registerModule$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceGe_user$registerModule$lambda.prototype.constructor = Coroutine$sceGe_user$registerModule$lambda;
  Coroutine$sceGe_user$registerModule$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceGe_user.sceGeDrawSync_za3lpa$(this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceGe_user$registerModule$lambda_5(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeSetCallback_xnxgf8$($receiver.ptr);
    };
  }
  function sceGe_user$registerModule$lambda_6(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeUnsetCallback_za3lpa$($receiver.int);
    };
  }
  function sceGe_user$registerModule$lambda_7(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeSaveContext_xnxgf8$($receiver.ptr);
    };
  }
  function sceGe_user$registerModule$lambda_8(this$sceGe_user) {
    return function ($receiver, it) {
      return this$sceGe_user.sceGeRestoreContext_xnxgf8$($receiver.ptr);
    };
  }
  function sceGe_user$registerModule$lambda_9(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeListEnQueueHead_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_10(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeContinue_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_11(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeGetMtx_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_12(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeListDeQueue_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_13(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeBreak_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_14(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeEdramSetAddrTranslation_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_15(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeGetCmd_xt3zvs$(it);
      return Unit;
    };
  }
  function sceGe_user$registerModule$lambda_16(this$sceGe_user) {
    return function (it) {
      this$sceGe_user.sceGeGetStack_xt3zvs$(it);
      return Unit;
    };
  }
  sceGe_user.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceGeEdramGetAddr', new Kotlin.Long(-461487900, 0), 150, void 0, sceGe_user$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceGeEdramGetSize', Kotlin.Long.fromInt(526865069), 150, void 0, sceGe_user$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceGeListUpdateStallAddr', new Kotlin.Long(-522813112, 0), 150, void 0, sceGe_user$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('sceGeListEnQueue', new Kotlin.Long(-1421219990, 0), 150, void 0, sceGe_user$registerModule$lambda_2(this));
    this.registerFunctionInt_9l82lv$('sceGeListSync', Kotlin.Long.fromInt(54808244), 150, void 0, sceGe_user$registerModule$lambda_3(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceGeDrawSync', new Kotlin.Long(-1299727007, 0), 150, void 0, void 0, sceGe_user$registerModule$lambda_4(this));
    this.registerFunctionInt_9l82lv$('sceGeSetCallback', new Kotlin.Long(-1526987100, 0), 150, void 0, sceGe_user$registerModule$lambda_5(this));
    this.registerFunctionInt_9l82lv$('sceGeUnsetCallback', Kotlin.Long.fromInt(98247374), 150, void 0, sceGe_user$registerModule$lambda_6(this));
    this.registerFunctionInt_9l82lv$('sceGeSaveContext', Kotlin.Long.fromInt(1133131866), 150, void 0, sceGe_user$registerModule$lambda_7(this));
    this.registerFunctionInt_9l82lv$('sceGeRestoreContext', Kotlin.Long.fromInt(200673531), 150, void 0, sceGe_user$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceGeListEnQueueHead', Kotlin.Long.fromInt(470652326), 150, void 0, sceGe_user$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceGeContinue', Kotlin.Long.fromInt(1275520114), 150, void 0, sceGe_user$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceGeGetMtx', Kotlin.Long.fromInt(1472762971), 150, void 0, sceGe_user$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceGeListDeQueue', Kotlin.Long.fromInt(1605921456), 150, void 0, sceGe_user$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceGeBreak', new Kotlin.Long(-1270289395, 0), 150, void 0, sceGe_user$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceGeEdramSetAddrTranslation', new Kotlin.Long(-1216805398, 0), 150, void 0, sceGe_user$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceGeGetCmd', new Kotlin.Long(-594292753, 0), 150, void 0, sceGe_user$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceGeGetStack', new Kotlin.Long(-429082322, 0), 150, void 0, sceGe_user$registerModule$lambda_16(this));
  };
  function sceGe_user$geCallbacks$lambda(it) {
    return new GeCallback(it);
  }
  sceGe_user.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceGe_user',
    interfaces: [SceModule]
  };
  function sceHprm(emulator) {
    sceHprm$Companion_getInstance();
    SceModule.call(this, emulator, 'sceHprm', 1073807377, 'hpremote_02g.prx', 'sceHP_Remote_Driver');
  }
  sceHprm.prototype.sceHprmPeekCurrentKey_xnxgf8$ = function (ptr) {
    ptr.sw_vux9f0$(0, 0);
    return 0;
  };
  sceHprm.prototype.sceHprmIsRemoteExist_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(546156989);
  };
  sceHprm.prototype.sceHprmIsMicrophoneExist_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(563894513);
  };
  sceHprm.prototype.sceHprmPeekLatch_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(734971966);
  };
  sceHprm.prototype.sceHprm_3953DE6B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(961797739);
  };
  sceHprm.prototype.sceHprm_396FD885_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(963631237);
  };
  sceHprm.prototype.sceHprmReadLatch_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1087568368);
  };
  sceHprm.prototype.sceHprmUnregitserCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1146015927);
  };
  sceHprm.prototype.sceHprmGetHpDetect_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1907751783);
  };
  sceHprm.prototype.sceHprmIsHeadphoneExist_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2120871332);
  };
  sceHprm.prototype.sceHprmRegisterCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-954908362, 0));
  };
  sceHprm.prototype.sceHprm_FD7DE6CD_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-42080563, 0));
  };
  function sceHprm$registerModule$lambda(this$sceHprm) {
    return function ($receiver, it) {
      return this$sceHprm.sceHprmPeekCurrentKey_xnxgf8$($receiver.ptr);
    };
  }
  function sceHprm$registerModule$lambda_0(this$sceHprm) {
    return function (it) {
      this$sceHprm.sceHprmIsRemoteExist_xt3zvs$(it);
      return Unit;
    };
  }
  function sceHprm$registerModule$lambda_1(this$sceHprm) {
    return function (it) {
      this$sceHprm.sceHprmIsMicrophoneExist_xt3zvs$(it);
      return Unit;
    };
  }
  function sceHprm$registerModule$lambda_2(this$sceHprm) {
    return function (it) {
      this$sceHprm.sceHprmPeekLatch_xt3zvs$(it);
      return Unit;
    };
  }
  function sceHprm$registerModule$lambda_3(this$sceHprm) {
    return function (it) {
      this$sceHprm.sceHprm_3953DE6B_xt3zvs$(it);
      return Unit;
    };
  }
  function sceHprm$registerModule$lambda_4(this$sceHprm) {
    return function (it) {
      this$sceHprm.sceHprm_396FD885_xt3zvs$(it);
      return Unit;
    };
  }
  function sceHprm$registerModule$lambda_5(this$sceHprm) {
    return function (it) {
      this$sceHprm.sceHprmReadLatch_xt3zvs$(it);
      return Unit;
    };
  }
  function sceHprm$registerModule$lambda_6(this$sceHprm) {
    return function (it) {
      this$sceHprm.sceHprmUnregitserCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function sceHprm$registerModule$lambda_7(this$sceHprm) {
    return function (it) {
      this$sceHprm.sceHprmGetHpDetect_xt3zvs$(it);
      return Unit;
    };
  }
  function sceHprm$registerModule$lambda_8(this$sceHprm) {
    return function (it) {
      this$sceHprm.sceHprmIsHeadphoneExist_xt3zvs$(it);
      return Unit;
    };
  }
  function sceHprm$registerModule$lambda_9(this$sceHprm) {
    return function (it) {
      this$sceHprm.sceHprmRegisterCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function sceHprm$registerModule$lambda_10(this$sceHprm) {
    return function (it) {
      this$sceHprm.sceHprm_FD7DE6CD_xt3zvs$(it);
      return Unit;
    };
  }
  sceHprm.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceHprmPeekCurrentKey', Kotlin.Long.fromInt(420524839), 150, void 0, sceHprm$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('sceHprmIsRemoteExist', Kotlin.Long.fromInt(546156989), 150, void 0, sceHprm$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceHprmIsMicrophoneExist', Kotlin.Long.fromInt(563894513), 150, void 0, sceHprm$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceHprmPeekLatch', Kotlin.Long.fromInt(734971966), 150, void 0, sceHprm$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceHprm_3953DE6B', Kotlin.Long.fromInt(961797739), 150, void 0, sceHprm$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceHprm_396FD885', Kotlin.Long.fromInt(963631237), 150, void 0, sceHprm$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceHprmReadLatch', Kotlin.Long.fromInt(1087568368), 150, void 0, sceHprm$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceHprmUnregitserCallback', Kotlin.Long.fromInt(1146015927), 150, void 0, sceHprm$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceHprmGetHpDetect', Kotlin.Long.fromInt(1907751783), 150, void 0, sceHprm$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceHprmIsHeadphoneExist', Kotlin.Long.fromInt(2120871332), 150, void 0, sceHprm$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceHprmRegisterCallback', new Kotlin.Long(-954908362, 0), 150, void 0, sceHprm$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceHprm_FD7DE6CD', new Kotlin.Long(-42080563, 0), 150, void 0, sceHprm$registerModule$lambda_10(this));
  };
  function sceHprm$Companion() {
    sceHprm$Companion_instance = this;
    this.PSP_HPRM_PLAYPAUSE = 1;
    this.PSP_HPRM_FORWARD = 4;
    this.PSP_HPRM_BACK = 8;
    this.PSP_HPRM_VOL_UP = 16;
    this.PSP_HPRM_VOL_DOWN = 32;
    this.PSP_HPRM_HOLD = 8;
  }
  sceHprm$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var sceHprm$Companion_instance = null;
  function sceHprm$Companion_getInstance() {
    if (sceHprm$Companion_instance === null) {
      new sceHprm$Companion();
    }
    return sceHprm$Companion_instance;
  }
  sceHprm.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceHprm',
    interfaces: [SceModule]
  };
  function sceImpose(emulator) {
    sceImpose$Companion_getInstance();
    SceModule.call(this, emulator, 'sceImpose', 1073807377, 'impose.prx', 'sceImpose_Driver');
    this.language = sceImpose$Companion_getInstance().PSP_LANGUAGE_ENGLISH;
    this.confirmButton = sceImpose$Companion_getInstance().PSP_CONFIRM_BUTTON_CROSS;
  }
  function sceImpose$Companion() {
    sceImpose$Companion_instance = this;
    this.PSP_LANGUAGE_JAPANESE = 0;
    this.PSP_LANGUAGE_ENGLISH = 1;
    this.PSP_LANGUAGE_FRENCH = 2;
    this.PSP_LANGUAGE_SPANISH = 3;
    this.PSP_LANGUAGE_GERMAN = 4;
    this.PSP_LANGUAGE_ITALIAN = 5;
    this.PSP_LANGUAGE_DUTCH = 6;
    this.PSP_LANGUAGE_PORTUGUESE = 7;
    this.PSP_LANGUAGE_RUSSIAN = 8;
    this.PSP_LANGUAGE_KOREAN = 9;
    this.PSP_LANGUAGE_TRADITIONAL_CHINESE = 10;
    this.PSP_LANGUAGE_SIMPLIFIED_CHINESE = 11;
    this.PSP_CONFIRM_BUTTON_CIRCLE = 0;
    this.PSP_CONFIRM_BUTTON_CROSS = 1;
  }
  sceImpose$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var sceImpose$Companion_instance = null;
  function sceImpose$Companion_getInstance() {
    if (sceImpose$Companion_instance === null) {
      new sceImpose$Companion();
    }
    return sceImpose$Companion_instance;
  }
  sceImpose.prototype.sceImposeGetBatteryIconStatus_dyqe6s$ = function (charging, status) {
    charging.sw_vux9f0$(0, this.emulator.battery.chargingType.id);
    status.sw_vux9f0$(0, this.emulator.battery.iconStatus.id);
    return 0;
  };
  sceImpose.prototype.sceImposeSetLanguageMode_vux9f0$ = function (language, confirmButton) {
    this.language = language;
    this.confirmButton = confirmButton;
    return 0;
  };
  sceImpose.prototype.sceImposeGetLanguageMode_1nf0ng$ = function (language, confirmButton) {
    language.set_za3lpa$(this.language);
    confirmButton.set_za3lpa$(this.confirmButton);
    return 0;
  };
  sceImpose.prototype.sceImposeGetHomePopup_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(255073252);
  };
  sceImpose.prototype.sceImposeHomeButton_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(941349351);
  };
  sceImpose.prototype.sceImposeSetHomePopup_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1435871002);
  };
  sceImpose.prototype.sceImposeSetUMDPopup_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1914215496);
  };
  sceImpose.prototype.sceImposeGetBacklightOffTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1888602856, 0));
  };
  sceImpose.prototype.sceImposeSetBacklightOffTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1770033846, 0));
  };
  sceImpose.prototype.sceImpose_9BA61B49_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1683612855, 0));
  };
  sceImpose.prototype.sceImpose_A9884B00_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1450685696, 0));
  };
  sceImpose.prototype.sceImpose_BB3F5DEC_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1153475092, 0));
  };
  sceImpose.prototype.sceImposeGetUMDPopup_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-527926328, 0));
  };
  sceImpose.prototype.sceImpose_FCD44963_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-53196445, 0));
  };
  sceImpose.prototype.sceImpose_FF1A2F07_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-15061241, 0));
  };
  function sceImpose$registerModule$lambda(this$sceImpose) {
    return function ($receiver, it) {
      return this$sceImpose.sceImposeGetBatteryIconStatus_dyqe6s$($receiver.ptr, $receiver.ptr);
    };
  }
  function sceImpose$registerModule$lambda_0(this$sceImpose) {
    return function ($receiver, it) {
      return this$sceImpose.sceImposeSetLanguageMode_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceImpose$registerModule$lambda_1(this$sceImpose) {
    return function ($receiver, it) {
      return this$sceImpose.sceImposeGetLanguageMode_1nf0ng$($receiver.ptr32, $receiver.ptr32);
    };
  }
  function sceImpose$registerModule$lambda_2(this$sceImpose) {
    return function (it) {
      this$sceImpose.sceImposeGetHomePopup_xt3zvs$(it);
      return Unit;
    };
  }
  function sceImpose$registerModule$lambda_3(this$sceImpose) {
    return function (it) {
      this$sceImpose.sceImposeHomeButton_xt3zvs$(it);
      return Unit;
    };
  }
  function sceImpose$registerModule$lambda_4(this$sceImpose) {
    return function (it) {
      this$sceImpose.sceImposeSetHomePopup_xt3zvs$(it);
      return Unit;
    };
  }
  function sceImpose$registerModule$lambda_5(this$sceImpose) {
    return function (it) {
      this$sceImpose.sceImposeSetUMDPopup_xt3zvs$(it);
      return Unit;
    };
  }
  function sceImpose$registerModule$lambda_6(this$sceImpose) {
    return function (it) {
      this$sceImpose.sceImposeGetBacklightOffTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceImpose$registerModule$lambda_7(this$sceImpose) {
    return function (it) {
      this$sceImpose.sceImposeSetBacklightOffTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceImpose$registerModule$lambda_8(this$sceImpose) {
    return function (it) {
      this$sceImpose.sceImpose_9BA61B49_xt3zvs$(it);
      return Unit;
    };
  }
  function sceImpose$registerModule$lambda_9(this$sceImpose) {
    return function (it) {
      this$sceImpose.sceImpose_A9884B00_xt3zvs$(it);
      return Unit;
    };
  }
  function sceImpose$registerModule$lambda_10(this$sceImpose) {
    return function (it) {
      this$sceImpose.sceImpose_BB3F5DEC_xt3zvs$(it);
      return Unit;
    };
  }
  function sceImpose$registerModule$lambda_11(this$sceImpose) {
    return function (it) {
      this$sceImpose.sceImposeGetUMDPopup_xt3zvs$(it);
      return Unit;
    };
  }
  function sceImpose$registerModule$lambda_12(this$sceImpose) {
    return function (it) {
      this$sceImpose.sceImpose_FCD44963_xt3zvs$(it);
      return Unit;
    };
  }
  function sceImpose$registerModule$lambda_13(this$sceImpose) {
    return function (it) {
      this$sceImpose.sceImpose_FF1A2F07_xt3zvs$(it);
      return Unit;
    };
  }
  sceImpose.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceImposeGetBatteryIconStatus', new Kotlin.Long(-1936445039, 0), 150, void 0, sceImpose$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceImposeSetLanguageMode', Kotlin.Long.fromInt(917139089), 150, void 0, sceImpose$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceImposeGetLanguageMode', Kotlin.Long.fromInt(620592079), 150, void 0, sceImpose$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceImposeGetHomePopup', Kotlin.Long.fromInt(255073252), 150, void 0, sceImpose$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceImposeHomeButton', Kotlin.Long.fromInt(941349351), 150, void 0, sceImpose$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceImposeSetHomePopup', Kotlin.Long.fromInt(1435871002), 150, void 0, sceImpose$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceImposeSetUMDPopup', Kotlin.Long.fromInt(1914215496), 150, void 0, sceImpose$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceImposeGetBacklightOffTime', new Kotlin.Long(-1888602856, 0), 150, void 0, sceImpose$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceImposeSetBacklightOffTime', new Kotlin.Long(-1770033846, 0), 150, void 0, sceImpose$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceImpose_9BA61B49', new Kotlin.Long(-1683612855, 0), 150, void 0, sceImpose$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceImpose_A9884B00', new Kotlin.Long(-1450685696, 0), 150, void 0, sceImpose$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceImpose_BB3F5DEC', new Kotlin.Long(-1153475092, 0), 150, void 0, sceImpose$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceImposeGetUMDPopup', new Kotlin.Long(-527926328, 0), 150, void 0, sceImpose$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceImpose_FCD44963', new Kotlin.Long(-53196445, 0), 150, void 0, sceImpose$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceImpose_FF1A2F07', new Kotlin.Long(-15061241, 0), 150, void 0, sceImpose$registerModule$lambda_13(this));
  };
  sceImpose.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceImpose',
    interfaces: [SceModule]
  };
  function sceMp3(emulator) {
    SceModule.call(this, emulator, 'sceMp3', 65553, 'libmp3.prx', 'sceMp3_Library');
  }
  sceMp3.prototype.sceMp3ReserveMp3Handle_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(132919834);
  };
  sceMp3.prototype.sceMp3NotifyAddStreamData_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(229722612);
  };
  sceMp3.prototype.sceMp3ResetPlayPosition_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(708216417);
  };
  sceMp3.prototype.sceMp3GetSumDecodedSample_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(894248938);
  };
  sceMp3.prototype.sceMp3InitResource_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(896860272);
  };
  sceMp3.prototype.sceMp3TermResource_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1009754200);
  };
  sceMp3.prototype.sceMp3SetLoopNum_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1022314575);
  };
  sceMp3.prototype.sceMp3Init_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1155559721);
  };
  sceMp3.prototype.sceMp3EndEntry_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1932198954);
  };
  sceMp3.prototype.sceMp3GetMp3ChannelNum_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2137614210);
  };
  sceMp3.prototype.sceMp3GetBitRate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2023260608, 0));
  };
  sceMp3.prototype.sceMp3GetMaxOutputSample_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2017303599, 0));
  };
  sceMp3.prototype.sceMp3StartEntry_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1967647400, 0));
  };
  sceMp3.prototype.sceMp3GetSamplingRate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1891300968, 0));
  };
  sceMp3.prototype.sceMp3GetInfoToAddStreamData_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1492910577, 0));
  };
  sceMp3.prototype.sceMp3Decode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-803094277, 0));
  };
  sceMp3.prototype.sceMp3CheckStreamDataNeeded_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-794467690, 0));
  };
  sceMp3.prototype.sceMp3GetLoopNum_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-655013295, 0));
  };
  sceMp3.prototype.sceMp3ReleaseMp3Handle_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-179862989, 0));
  };
  function sceMp3$registerModule$lambda(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3ReserveMp3Handle_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_0(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3NotifyAddStreamData_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_1(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3ResetPlayPosition_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_2(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3GetSumDecodedSample_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_3(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3InitResource_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_4(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3TermResource_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_5(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3SetLoopNum_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_6(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3Init_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_7(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3EndEntry_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_8(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3GetMp3ChannelNum_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_9(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3GetBitRate_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_10(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3GetMaxOutputSample_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_11(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3StartEntry_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_12(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3GetSamplingRate_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_13(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3GetInfoToAddStreamData_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_14(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3Decode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_15(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3CheckStreamDataNeeded_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_16(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3GetLoopNum_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMp3$registerModule$lambda_17(this$sceMp3) {
    return function (it) {
      this$sceMp3.sceMp3ReleaseMp3Handle_xt3zvs$(it);
      return Unit;
    };
  }
  sceMp3.prototype.registerModule = function () {
    this.registerFunctionRaw_gh35x6$('sceMp3ReserveMp3Handle', Kotlin.Long.fromInt(132919834), 150, void 0, sceMp3$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('sceMp3NotifyAddStreamData', Kotlin.Long.fromInt(229722612), 150, void 0, sceMp3$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceMp3ResetPlayPosition', Kotlin.Long.fromInt(708216417), 150, void 0, sceMp3$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceMp3GetSumDecodedSample', Kotlin.Long.fromInt(894248938), 150, void 0, sceMp3$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceMp3InitResource', Kotlin.Long.fromInt(896860272), 150, void 0, sceMp3$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceMp3TermResource', Kotlin.Long.fromInt(1009754200), 150, void 0, sceMp3$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceMp3SetLoopNum', Kotlin.Long.fromInt(1022314575), 150, void 0, sceMp3$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceMp3Init', Kotlin.Long.fromInt(1155559721), 150, void 0, sceMp3$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceMp3EndEntry', Kotlin.Long.fromInt(1932198954), 150, void 0, sceMp3$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceMp3GetMp3ChannelNum', Kotlin.Long.fromInt(2137614210), 150, void 0, sceMp3$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceMp3GetBitRate', new Kotlin.Long(-2023260608, 0), 150, void 0, sceMp3$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceMp3GetMaxOutputSample', new Kotlin.Long(-2017303599, 0), 150, void 0, sceMp3$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceMp3StartEntry', new Kotlin.Long(-1967647400, 0), 150, void 0, sceMp3$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceMp3GetSamplingRate', new Kotlin.Long(-1891300968, 0), 150, void 0, sceMp3$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceMp3GetInfoToAddStreamData', new Kotlin.Long(-1492910577, 0), 150, void 0, sceMp3$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceMp3Decode', new Kotlin.Long(-803094277, 0), 150, void 0, sceMp3$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceMp3CheckStreamDataNeeded', new Kotlin.Long(-794467690, 0), 150, void 0, sceMp3$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceMp3GetLoopNum', new Kotlin.Long(-655013295, 0), 150, void 0, sceMp3$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceMp3ReleaseMp3Handle', new Kotlin.Long(-179862989, 0), 150, void 0, sceMp3$registerModule$lambda_17(this));
  };
  sceMp3.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceMp3',
    interfaces: [SceModule]
  };
  function sceMpeg(emulator) {
    SceModule.call(this, emulator, 'sceMpeg', 65553, 'mpeg_vsh.prx', 'sceMpegVsh_library');
  }
  sceMpeg.prototype.sceMpegInit = function () {
    return -1;
  };
  sceMpeg.prototype.sceMpegQueryUserdataEsSize_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(26701908);
  };
  sceMpeg.prototype.sceMpeg_0558B075_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(89698421);
  };
  sceMpeg.prototype.sceMpegAvcDecode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(238825117);
  };
  sceMpeg.prototype.sceMpegAvcDecodeDetail_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(258742487);
  };
  sceMpeg.prototype.sceMpeg_11CAB459_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(298497113);
  };
  sceMpeg.prototype.sceMpegGetAvcNalAu_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(301554929);
  };
  sceMpeg.prototype.sceMpegRingbufferDestruct_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(322993939);
  };
  sceMpeg.prototype.sceMpegInitAu_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(377159070);
  };
  sceMpeg.prototype.sceMpegAvcQueryYCbCrSize_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(555353468);
  };
  sceMpeg.prototype.sceMpegQueryStreamOffset_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(570392804);
  };
  sceMpeg.prototype.sceMpegChangeGetAvcAuMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(591759022);
  };
  sceMpeg.prototype.sceMpegAvcCsc_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(834470514);
  };
  sceMpeg.prototype.sceMpegRingbufferConstruct_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(925458136);
  };
  sceMpeg.prototype.sceMpegNextAvcRpAu_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1010280358);
  };
  sceMpeg.prototype.sceMpegRegistStream_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1112936227);
  };
  sceMpeg.prototype.sceMpeg_42C679F6_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1120303606);
  };
  sceMpeg.prototype.sceMpegAvcDecodeFlush_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1165085796);
  };
  sceMpeg.prototype.sceMpegFlushStream_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1343161385);
  };
  sceMpeg.prototype.sceMpegUnRegistStream_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1494895266);
  };
  sceMpeg.prototype.sceMpeg_5AC68A41_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1522960961);
  };
  sceMpeg.prototype.sceMpegDelete_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1617577545);
  };
  sceMpeg.prototype.sceMpegQueryStreamSize_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1629396497);
  };
  sceMpeg.prototype.sceMpegAvcInitYCbCr_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1729600283);
  };
  sceMpeg.prototype.sceMpegAvcDecodeGetDecodeSEI_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1865499664);
  };
  sceMpeg.prototype.sceMpegFlushAllStream_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1887139369);
  };
  sceMpeg.prototype.sceMpegAvcDecodeStop_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1947192529);
  };
  sceMpeg.prototype.sceMpeg_75E21135_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1977749813);
  };
  sceMpeg.prototype.sceMpegRingbufferQueryPackNum_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1989929910);
  };
  sceMpeg.prototype.sceMpegAtracDecode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2146679585, 0));
  };
  sceMpeg.prototype.sceMpegFinish_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2025446186, 0));
  };
  sceMpeg.prototype.sceMpegGetPcmAu_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1944190339, 0));
  };
  sceMpeg.prototype.sceMpegGetAvcEsAu_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1843409713, 0));
  };
  sceMpeg.prototype.sceMpeg_988E9E12_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1735483886, 0));
  };
  sceMpeg.prototype.sceMpegChangeGetAuMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1647331350, 0));
  };
  sceMpeg.prototype.sceMpegAvcDecodeMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1591971802, 0));
  };
  sceMpeg.prototype.sceMpegMallocAvcEsBuf_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1484730498, 0));
  };
  sceMpeg.prototype.sceMpeg_AB0E9556_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1425107626, 0));
  };
  sceMpeg.prototype.sceMpeg_AE693D0B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1368834805, 0));
  };
  sceMpeg.prototype.sceMpegRingbufferPut_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1304386146, 0));
  };
  sceMpeg.prototype.sceMpeg_B27711A8_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1300819544, 0));
  };
  sceMpeg.prototype.sceMpegRingbufferAvailableSize_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1242112889, 0));
  };
  sceMpeg.prototype.sceMpegQueryPcmEsSize_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1070795083, 0));
  };
  sceMpeg.prototype.sceMpegQueryMemSize_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1053629905, 0));
  };
  sceMpeg.prototype.sceMpeg_C2F02CDD_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1024447267, 0));
  };
  sceMpeg.prototype.sceMpeg_C345DED2_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1018831150, 0));
  };
  sceMpeg.prototype.sceMpegFreeAvcEsBuf_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-826773327, 0));
  };
  sceMpeg.prototype.sceMpegAvcDecodeDetail2_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-818591838, 0));
  };
  sceMpeg.prototype.sceMpegAvcCscMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-775009968, 0));
  };
  sceMpeg.prototype.sceMpeg_D4DD6E75_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-723685771, 0));
  };
  sceMpeg.prototype.sceMpegRingbufferQueryMemSize_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-677208250, 0));
  };
  sceMpeg.prototype.sceMpegCreate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-658116319, 0));
  };
  sceMpeg.prototype.sceMpegFlushAu_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-608827816, 0));
  };
  sceMpeg.prototype.sceMpegGetAtracAu_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-506559577, 0));
  };
  sceMpeg.prototype.sceMpeg_E49EB257_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-459361705, 0));
  };
  sceMpeg.prototype.sceMpegAvcCscInfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-380094218, 0));
  };
  sceMpeg.prototype.sceMpegAvcDecodeYCbCr_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-253030107, 0));
  };
  sceMpeg.prototype.sceMpegAvcDecodeStopYCbCr_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-225244004, 0));
  };
  sceMpeg.prototype.sceMpegQueryAtracEsSize_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-119753095, 0));
  };
  sceMpeg.prototype.sceMpegGetAvcAu_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-31168728, 0));
  };
  function sceMpeg$registerModule$lambda(this$sceMpeg) {
    return function ($receiver, it) {
      return this$sceMpeg.sceMpegInit();
    };
  }
  function sceMpeg$registerModule$lambda_0(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegQueryUserdataEsSize_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_1(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpeg_0558B075_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_2(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAvcDecode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_3(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAvcDecodeDetail_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_4(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpeg_11CAB459_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_5(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegGetAvcNalAu_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_6(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegRingbufferDestruct_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_7(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegInitAu_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_8(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAvcQueryYCbCrSize_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_9(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegQueryStreamOffset_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_10(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegChangeGetAvcAuMode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_11(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAvcCsc_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_12(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegRingbufferConstruct_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_13(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegNextAvcRpAu_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_14(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegRegistStream_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_15(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpeg_42C679F6_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_16(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAvcDecodeFlush_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_17(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegFlushStream_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_18(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegUnRegistStream_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_19(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpeg_5AC68A41_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_20(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegDelete_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_21(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegQueryStreamSize_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_22(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAvcInitYCbCr_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_23(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAvcDecodeGetDecodeSEI_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_24(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegFlushAllStream_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_25(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAvcDecodeStop_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_26(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpeg_75E21135_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_27(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegRingbufferQueryPackNum_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_28(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAtracDecode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_29(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegFinish_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_30(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegGetPcmAu_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_31(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegGetAvcEsAu_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_32(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpeg_988E9E12_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_33(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegChangeGetAuMode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_34(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAvcDecodeMode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_35(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegMallocAvcEsBuf_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_36(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpeg_AB0E9556_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_37(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpeg_AE693D0B_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_38(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegRingbufferPut_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_39(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpeg_B27711A8_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_40(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegRingbufferAvailableSize_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_41(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegQueryPcmEsSize_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_42(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegQueryMemSize_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_43(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpeg_C2F02CDD_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_44(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpeg_C345DED2_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_45(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegQueryUserdataEsSize_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_46(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegFreeAvcEsBuf_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_47(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAvcDecodeDetail2_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_48(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAvcCscMode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_49(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpeg_D4DD6E75_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_50(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegRingbufferQueryMemSize_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_51(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegCreate_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_52(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegFlushAu_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_53(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegGetAtracAu_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_54(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpeg_E49EB257_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_55(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAvcCscInfo_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_56(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAvcDecodeYCbCr_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_57(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegAvcDecodeStopYCbCr_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_58(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegQueryAtracEsSize_xt3zvs$(it);
      return Unit;
    };
  }
  function sceMpeg$registerModule$lambda_59(this$sceMpeg) {
    return function (it) {
      this$sceMpeg.sceMpegGetAvcAu_xt3zvs$(it);
      return Unit;
    };
  }
  sceMpeg.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceMpegInit', Kotlin.Long.fromInt(1747607963), 150, void 0, sceMpeg$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('sceMpegQueryUserdataEsSize', Kotlin.Long.fromInt(26701908), 150, void 0, sceMpeg$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceMpeg_0558B075', Kotlin.Long.fromInt(89698421), 150, void 0, sceMpeg$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAvcDecode', Kotlin.Long.fromInt(238825117), 150, void 0, sceMpeg$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAvcDecodeDetail', Kotlin.Long.fromInt(258742487), 150, void 0, sceMpeg$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceMpeg_11CAB459', Kotlin.Long.fromInt(298497113), 150, void 0, sceMpeg$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceMpegGetAvcNalAu', Kotlin.Long.fromInt(301554929), 150, void 0, sceMpeg$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceMpegRingbufferDestruct', Kotlin.Long.fromInt(322993939), 150, void 0, sceMpeg$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceMpegInitAu', Kotlin.Long.fromInt(377159070), 150, void 0, sceMpeg$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAvcQueryYCbCrSize', Kotlin.Long.fromInt(555353468), 150, void 0, sceMpeg$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceMpegQueryStreamOffset', Kotlin.Long.fromInt(570392804), 150, void 0, sceMpeg$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceMpegChangeGetAvcAuMode', Kotlin.Long.fromInt(591759022), 150, void 0, sceMpeg$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAvcCsc', Kotlin.Long.fromInt(834470514), 150, void 0, sceMpeg$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceMpegRingbufferConstruct', Kotlin.Long.fromInt(925458136), 150, void 0, sceMpeg$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceMpegNextAvcRpAu', Kotlin.Long.fromInt(1010280358), 150, void 0, sceMpeg$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceMpegRegistStream', Kotlin.Long.fromInt(1112936227), 150, void 0, sceMpeg$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceMpeg_42C679F6', Kotlin.Long.fromInt(1120303606), 150, void 0, sceMpeg$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAvcDecodeFlush', Kotlin.Long.fromInt(1165085796), 150, void 0, sceMpeg$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceMpegFlushStream', Kotlin.Long.fromInt(1343161385), 150, void 0, sceMpeg$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceMpegUnRegistStream', Kotlin.Long.fromInt(1494895266), 150, void 0, sceMpeg$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceMpeg_5AC68A41', Kotlin.Long.fromInt(1522960961), 150, void 0, sceMpeg$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceMpegDelete', Kotlin.Long.fromInt(1617577545), 150, void 0, sceMpeg$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceMpegQueryStreamSize', Kotlin.Long.fromInt(1629396497), 150, void 0, sceMpeg$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAvcInitYCbCr', Kotlin.Long.fromInt(1729600283), 150, void 0, sceMpeg$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAvcDecodeGetDecodeSEI', Kotlin.Long.fromInt(1865499664), 150, void 0, sceMpeg$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceMpegFlushAllStream', Kotlin.Long.fromInt(1887139369), 150, void 0, sceMpeg$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAvcDecodeStop', Kotlin.Long.fromInt(1947192529), 150, void 0, sceMpeg$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('sceMpeg_75E21135', Kotlin.Long.fromInt(1977749813), 150, void 0, sceMpeg$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('sceMpegRingbufferQueryPackNum', Kotlin.Long.fromInt(1989929910), 150, void 0, sceMpeg$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAtracDecode', new Kotlin.Long(-2146679585, 0), 150, void 0, sceMpeg$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('sceMpegFinish', new Kotlin.Long(-2025446186, 0), 150, void 0, sceMpeg$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('sceMpegGetPcmAu', new Kotlin.Long(-1944190339, 0), 150, void 0, sceMpeg$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('sceMpegGetAvcEsAu', new Kotlin.Long(-1843409713, 0), 150, void 0, sceMpeg$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('sceMpeg_988E9E12', new Kotlin.Long(-1735483886, 0), 150, void 0, sceMpeg$registerModule$lambda_32(this));
    this.registerFunctionRaw_gh35x6$('sceMpegChangeGetAuMode', new Kotlin.Long(-1647331350, 0), 150, void 0, sceMpeg$registerModule$lambda_33(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAvcDecodeMode', new Kotlin.Long(-1591971802, 0), 150, void 0, sceMpeg$registerModule$lambda_34(this));
    this.registerFunctionRaw_gh35x6$('sceMpegMallocAvcEsBuf', new Kotlin.Long(-1484730498, 0), 150, void 0, sceMpeg$registerModule$lambda_35(this));
    this.registerFunctionRaw_gh35x6$('sceMpeg_AB0E9556', new Kotlin.Long(-1425107626, 0), 150, void 0, sceMpeg$registerModule$lambda_36(this));
    this.registerFunctionRaw_gh35x6$('sceMpeg_AE693D0B', new Kotlin.Long(-1368834805, 0), 150, void 0, sceMpeg$registerModule$lambda_37(this));
    this.registerFunctionRaw_gh35x6$('sceMpegRingbufferPut', new Kotlin.Long(-1304386146, 0), 150, void 0, sceMpeg$registerModule$lambda_38(this));
    this.registerFunctionRaw_gh35x6$('sceMpeg_B27711A8', new Kotlin.Long(-1300819544, 0), 150, void 0, sceMpeg$registerModule$lambda_39(this));
    this.registerFunctionRaw_gh35x6$('sceMpegRingbufferAvailableSize', new Kotlin.Long(-1242112889, 0), 150, void 0, sceMpeg$registerModule$lambda_40(this));
    this.registerFunctionRaw_gh35x6$('sceMpegQueryPcmEsSize', new Kotlin.Long(-1070795083, 0), 150, void 0, sceMpeg$registerModule$lambda_41(this));
    this.registerFunctionRaw_gh35x6$('sceMpegQueryMemSize', new Kotlin.Long(-1053629905, 0), 150, void 0, sceMpeg$registerModule$lambda_42(this));
    this.registerFunctionRaw_gh35x6$('sceMpeg_C2F02CDD', new Kotlin.Long(-1024447267, 0), 150, void 0, sceMpeg$registerModule$lambda_43(this));
    this.registerFunctionRaw_gh35x6$('sceMpeg_C345DED2', new Kotlin.Long(-1018831150, 0), 150, void 0, sceMpeg$registerModule$lambda_44(this));
    this.registerFunctionRaw_gh35x6$('sceMpegQueryUserdataEsSize', new Kotlin.Long(-1000564276, 0), 150, void 0, sceMpeg$registerModule$lambda_45(this));
    this.registerFunctionRaw_gh35x6$('sceMpegFreeAvcEsBuf', new Kotlin.Long(-826773327, 0), 150, void 0, sceMpeg$registerModule$lambda_46(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAvcDecodeDetail2', new Kotlin.Long(-818591838, 0), 150, void 0, sceMpeg$registerModule$lambda_47(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAvcCscMode', new Kotlin.Long(-775009968, 0), 150, void 0, sceMpeg$registerModule$lambda_48(this));
    this.registerFunctionRaw_gh35x6$('sceMpeg_D4DD6E75', new Kotlin.Long(-723685771, 0), 150, void 0, sceMpeg$registerModule$lambda_49(this));
    this.registerFunctionRaw_gh35x6$('sceMpegRingbufferQueryMemSize', new Kotlin.Long(-677208250, 0), 150, void 0, sceMpeg$registerModule$lambda_50(this));
    this.registerFunctionRaw_gh35x6$('sceMpegCreate', new Kotlin.Long(-658116319, 0), 150, void 0, sceMpeg$registerModule$lambda_51(this));
    this.registerFunctionRaw_gh35x6$('sceMpegFlushAu', new Kotlin.Long(-608827816, 0), 150, void 0, sceMpeg$registerModule$lambda_52(this));
    this.registerFunctionRaw_gh35x6$('sceMpegGetAtracAu', new Kotlin.Long(-506559577, 0), 150, void 0, sceMpeg$registerModule$lambda_53(this));
    this.registerFunctionRaw_gh35x6$('sceMpeg_E49EB257', new Kotlin.Long(-459361705, 0), 150, void 0, sceMpeg$registerModule$lambda_54(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAvcCscInfo', new Kotlin.Long(-380094218, 0), 150, void 0, sceMpeg$registerModule$lambda_55(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAvcDecodeYCbCr', new Kotlin.Long(-253030107, 0), 150, void 0, sceMpeg$registerModule$lambda_56(this));
    this.registerFunctionRaw_gh35x6$('sceMpegAvcDecodeStopYCbCr', new Kotlin.Long(-225244004, 0), 150, void 0, sceMpeg$registerModule$lambda_57(this));
    this.registerFunctionRaw_gh35x6$('sceMpegQueryAtracEsSize', new Kotlin.Long(-119753095, 0), 150, void 0, sceMpeg$registerModule$lambda_58(this));
    this.registerFunctionRaw_gh35x6$('sceMpegGetAvcAu', new Kotlin.Long(-31168728, 0), 150, void 0, sceMpeg$registerModule$lambda_59(this));
  };
  sceMpeg.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceMpeg',
    interfaces: [SceModule]
  };
  function sceNet(emulator) {
    SceModule.call(this, emulator, 'sceNet', 65553, 'pspnet.prx', 'sceNet_Library');
  }
  sceNet.prototype.sceNetGetLocalEtherAddr_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(200319918);
  };
  sceNet.prototype.sceNetTerm_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(672737449);
  };
  sceNet.prototype.sceNetInit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(967784870);
  };
  sceNet.prototype.sceNet_3B617AA0_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(996244128);
  };
  sceNet.prototype.sceNetFreeThreadinfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1348760880);
  };
  sceNet.prototype.sceNetEtherNtostr_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1992947376, 0));
  };
  sceNet.prototype.sceNetThreadAbort_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1385675578, 0));
  };
  sceNet.prototype.sceNet_B6FC0A5B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1224996261, 0));
  };
  sceNet.prototype.sceNet_BFCFEFF6_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1076891658, 0));
  };
  sceNet.prototype.sceNet_C431A214_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1003380204, 0));
  };
  sceNet.prototype.sceNetGetMallocStat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-868663736, 0));
  };
  sceNet.prototype.sceNetEtherStrton_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-763797047, 0));
  };
  sceNet.prototype.sceNet_DB88F458_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-611781544, 0));
  };
  sceNet.prototype.sceNet_E1F4696F_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-504075921, 0));
  };
  function sceNet$registerModule$lambda(this$sceNet) {
    return function (it) {
      this$sceNet.sceNetGetLocalEtherAddr_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNet$registerModule$lambda_0(this$sceNet) {
    return function (it) {
      this$sceNet.sceNetTerm_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNet$registerModule$lambda_1(this$sceNet) {
    return function (it) {
      this$sceNet.sceNetInit_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNet$registerModule$lambda_2(this$sceNet) {
    return function (it) {
      this$sceNet.sceNet_3B617AA0_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNet$registerModule$lambda_3(this$sceNet) {
    return function (it) {
      this$sceNet.sceNetFreeThreadinfo_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNet$registerModule$lambda_4(this$sceNet) {
    return function (it) {
      this$sceNet.sceNetEtherNtostr_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNet$registerModule$lambda_5(this$sceNet) {
    return function (it) {
      this$sceNet.sceNetThreadAbort_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNet$registerModule$lambda_6(this$sceNet) {
    return function (it) {
      this$sceNet.sceNet_B6FC0A5B_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNet$registerModule$lambda_7(this$sceNet) {
    return function (it) {
      this$sceNet.sceNet_BFCFEFF6_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNet$registerModule$lambda_8(this$sceNet) {
    return function (it) {
      this$sceNet.sceNet_C431A214_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNet$registerModule$lambda_9(this$sceNet) {
    return function (it) {
      this$sceNet.sceNetGetMallocStat_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNet$registerModule$lambda_10(this$sceNet) {
    return function (it) {
      this$sceNet.sceNetEtherStrton_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNet$registerModule$lambda_11(this$sceNet) {
    return function (it) {
      this$sceNet.sceNet_DB88F458_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNet$registerModule$lambda_12(this$sceNet) {
    return function (it) {
      this$sceNet.sceNet_E1F4696F_xt3zvs$(it);
      return Unit;
    };
  }
  sceNet.prototype.registerModule = function () {
    this.registerFunctionRaw_gh35x6$('sceNetGetLocalEtherAddr', Kotlin.Long.fromInt(200319918), 150, void 0, sceNet$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('sceNetTerm', Kotlin.Long.fromInt(672737449), 150, void 0, sceNet$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceNetInit', Kotlin.Long.fromInt(967784870), 150, void 0, sceNet$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceNet_3B617AA0', Kotlin.Long.fromInt(996244128), 150, void 0, sceNet$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceNetFreeThreadinfo', Kotlin.Long.fromInt(1348760880), 150, void 0, sceNet$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceNetEtherNtostr', new Kotlin.Long(-1992947376, 0), 150, void 0, sceNet$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceNetThreadAbort', new Kotlin.Long(-1385675578, 0), 150, void 0, sceNet$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceNet_B6FC0A5B', new Kotlin.Long(-1224996261, 0), 150, void 0, sceNet$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceNet_BFCFEFF6', new Kotlin.Long(-1076891658, 0), 150, void 0, sceNet$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceNet_C431A214', new Kotlin.Long(-1003380204, 0), 150, void 0, sceNet$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceNetGetMallocStat', new Kotlin.Long(-868663736, 0), 150, void 0, sceNet$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceNetEtherStrton', new Kotlin.Long(-763797047, 0), 150, void 0, sceNet$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceNet_DB88F458', new Kotlin.Long(-611781544, 0), 150, void 0, sceNet$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceNet_E1F4696F', new Kotlin.Long(-504075921, 0), 150, void 0, sceNet$registerModule$lambda_12(this));
  };
  sceNet.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceNet',
    interfaces: [SceModule]
  };
  function sceNetAdhoc(emulator) {
    SceModule.call(this, emulator, 'sceNetAdhoc', 65553, 'pspnet_adhoc.prx', 'sceNetAdhoc_Library');
  }
  sceNetAdhoc.prototype.sceNetAdhocGameModeDeleteReplica_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(186788073);
  };
  sceNetAdhoc.prototype.sceNetAdhocPtpClose_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(360604197);
  };
  sceNetAdhoc.prototype.sceNetAdhocGameModeCreateReplica_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(846768908);
  };
  sceNetAdhoc.prototype.sceNetAdhocGetSocketAlert_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1294786969);
  };
  sceNetAdhoc.prototype.sceNetAdhocPtpSend_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1302644616);
  };
  sceNetAdhoc.prototype.sceNetAdhoc_67346A2A_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1731488298);
  };
  sceNetAdhoc.prototype.sceNetAdhocPdpCreate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1871868955);
  };
  sceNetAdhoc.prototype.sceNetAdhocSetSocketAlert_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1941951789);
  };
  sceNetAdhoc.prototype.sceNetAdhocPollSocket_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2053516651);
  };
  sceNetAdhoc.prototype.sceNetAdhocPdpDelete_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2133310302);
  };
  sceNetAdhoc.prototype.sceNetAdhocGameModeCreateMaster_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2138424120);
  };
  sceNetAdhoc.prototype.sceNetAdhocPtpOpen_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2021692058, 0));
  };
  sceNetAdhoc.prototype.sceNetAdhocPtpRecv_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1947587778, 0));
  };
  sceNetAdhoc.prototype.sceNetAdhocGameModeUpdateMaster_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1732115256, 0));
  };
  sceNetAdhoc.prototype.sceNetAdhocPtpFlush_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1698500948, 0));
  };
  sceNetAdhoc.prototype.sceNetAdhocPtpAccept_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1644686952, 0));
  };
  sceNetAdhoc.prototype.sceNetAdhocGameModeDeleteMaster_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1608346782, 0));
  };
  sceNetAdhoc.prototype.sceNetAdhocTerm_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1507037353, 0));
  };
  sceNetAdhoc.prototype.sceNetAdhocPdpSend_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1410517104, 0));
  };
  sceNetAdhoc.prototype.sceNetAdhocGetPtpStat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1184345832, 0));
  };
  sceNetAdhoc.prototype.sceNetAdhocGetPdpStat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-943588265, 0));
  };
  sceNetAdhoc.prototype.sceNetAdhocPdpRecv_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-538624509, 0));
  };
  sceNetAdhoc.prototype.sceNetAdhocPtpListen_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-527705407, 0));
  };
  sceNetAdhoc.prototype.sceNetAdhocInit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-506060329, 0));
  };
  sceNetAdhoc.prototype.sceNetAdhocGameModeUpdateReplica_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-97367218, 0));
  };
  sceNetAdhoc.prototype.sceNetAdhocPtpConnect_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-59785093, 0));
  };
  function sceNetAdhoc$registerModule$lambda(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocGameModeDeleteReplica_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_0(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocPtpClose_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_1(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocGameModeCreateReplica_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_2(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocGetSocketAlert_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_3(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocPtpSend_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_4(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhoc_67346A2A_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_5(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocPdpCreate_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_6(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocSetSocketAlert_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_7(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocPollSocket_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_8(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocPdpDelete_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_9(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocGameModeCreateMaster_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_10(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocPtpOpen_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_11(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocPtpRecv_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_12(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocGameModeUpdateMaster_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_13(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocPtpFlush_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_14(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocPtpAccept_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_15(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocGameModeDeleteMaster_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_16(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocTerm_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_17(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocPdpSend_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_18(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocGetPtpStat_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_19(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocGetPdpStat_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_20(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocPdpRecv_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_21(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocPtpListen_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_22(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocInit_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_23(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocGameModeUpdateReplica_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhoc$registerModule$lambda_24(this$sceNetAdhoc) {
    return function (it) {
      this$sceNetAdhoc.sceNetAdhocPtpConnect_xt3zvs$(it);
      return Unit;
    };
  }
  sceNetAdhoc.prototype.registerModule = function () {
    this.registerFunctionRaw_gh35x6$('sceNetAdhocGameModeDeleteReplica', Kotlin.Long.fromInt(186788073), 150, void 0, sceNetAdhoc$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocPtpClose', Kotlin.Long.fromInt(360604197), 150, void 0, sceNetAdhoc$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocGameModeCreateReplica', Kotlin.Long.fromInt(846768908), 150, void 0, sceNetAdhoc$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocGetSocketAlert', Kotlin.Long.fromInt(1294786969), 150, void 0, sceNetAdhoc$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocPtpSend', Kotlin.Long.fromInt(1302644616), 150, void 0, sceNetAdhoc$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhoc_67346A2A', Kotlin.Long.fromInt(1731488298), 150, void 0, sceNetAdhoc$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocPdpCreate', Kotlin.Long.fromInt(1871868955), 150, void 0, sceNetAdhoc$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocSetSocketAlert', Kotlin.Long.fromInt(1941951789), 150, void 0, sceNetAdhoc$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocPollSocket', Kotlin.Long.fromInt(2053516651), 150, void 0, sceNetAdhoc$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocPdpDelete', Kotlin.Long.fromInt(2133310302), 150, void 0, sceNetAdhoc$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocGameModeCreateMaster', Kotlin.Long.fromInt(2138424120), 150, void 0, sceNetAdhoc$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocPtpOpen', new Kotlin.Long(-2021692058, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocPtpRecv', new Kotlin.Long(-1947587778, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocGameModeUpdateMaster', new Kotlin.Long(-1732115256, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocPtpFlush', new Kotlin.Long(-1698500948, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocPtpAccept', new Kotlin.Long(-1644686952, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocGameModeDeleteMaster', new Kotlin.Long(-1608346782, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocTerm', new Kotlin.Long(-1507037353, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocPdpSend', new Kotlin.Long(-1410517104, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocGetPtpStat', new Kotlin.Long(-1184345832, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocGetPdpStat', new Kotlin.Long(-943588265, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocPdpRecv', new Kotlin.Long(-538624509, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocPtpListen', new Kotlin.Long(-527705407, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocInit', new Kotlin.Long(-506060329, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocGameModeUpdateReplica', new Kotlin.Long(-97367218, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocPtpConnect', new Kotlin.Long(-59785093, 0), 150, void 0, sceNetAdhoc$registerModule$lambda_24(this));
  };
  sceNetAdhoc.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceNetAdhoc',
    interfaces: [SceModule]
  };
  function sceNetAdhocMatching(emulator) {
    SceModule.call(this, emulator, 'sceNetAdhocMatching', 65553, 'pspnet_adhoc_matching.prx', 'sceNetAdhocMatching_Library');
  }
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingInit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(707403271);
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingStop_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(850482867);
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingGetPoolMaxAlloc_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1090057269);
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingSelectTarget_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1581075321);
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingTerm_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2034625754);
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingCancelTargetWithOpt_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1890009377, 0));
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingStart_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1813039037, 0));
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingGetPoolStat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1671627907, 0));
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingSetHelloOpt_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1248960073, 0));
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingGetHelloOpt_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1244042198, 0));
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingGetMembers_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-980693602, 0));
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingCreate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-899753361, 0));
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingCancelTarget_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-365141752, 0));
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingAbortSendData_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-333892739, 0));
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingDelete_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-244404401, 0));
  };
  sceNetAdhocMatching.prototype.sceNetAdhocMatchingSendData_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-141266217, 0));
  };
  function sceNetAdhocMatching$registerModule$lambda(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingInit_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_0(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingStop_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_1(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingGetPoolMaxAlloc_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_2(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingSelectTarget_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_3(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingTerm_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_4(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingCancelTargetWithOpt_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_5(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingStart_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_6(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingGetPoolStat_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_7(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingSetHelloOpt_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_8(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingGetHelloOpt_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_9(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingGetMembers_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_10(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingCreate_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_11(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingCancelTarget_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_12(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingAbortSendData_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_13(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingDelete_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocMatching$registerModule$lambda_14(this$sceNetAdhocMatching) {
    return function (it) {
      this$sceNetAdhocMatching.sceNetAdhocMatchingSendData_xt3zvs$(it);
      return Unit;
    };
  }
  sceNetAdhocMatching.prototype.registerModule = function () {
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingInit', Kotlin.Long.fromInt(707403271), 150, void 0, sceNetAdhocMatching$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingStop', Kotlin.Long.fromInt(850482867), 150, void 0, sceNetAdhocMatching$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingGetPoolMaxAlloc', Kotlin.Long.fromInt(1090057269), 150, void 0, sceNetAdhocMatching$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingSelectTarget', Kotlin.Long.fromInt(1581075321), 150, void 0, sceNetAdhocMatching$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingTerm', Kotlin.Long.fromInt(2034625754), 150, void 0, sceNetAdhocMatching$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingCancelTargetWithOpt', new Kotlin.Long(-1890009377, 0), 150, void 0, sceNetAdhocMatching$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingStart', new Kotlin.Long(-1813039037, 0), 150, void 0, sceNetAdhocMatching$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingGetPoolStat', new Kotlin.Long(-1671627907, 0), 150, void 0, sceNetAdhocMatching$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingSetHelloOpt', new Kotlin.Long(-1248960073, 0), 150, void 0, sceNetAdhocMatching$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingGetHelloOpt', new Kotlin.Long(-1244042198, 0), 150, void 0, sceNetAdhocMatching$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingGetMembers', new Kotlin.Long(-980693602, 0), 150, void 0, sceNetAdhocMatching$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingCreate', new Kotlin.Long(-899753361, 0), 150, void 0, sceNetAdhocMatching$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingCancelTarget', new Kotlin.Long(-365141752, 0), 150, void 0, sceNetAdhocMatching$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingAbortSendData', new Kotlin.Long(-333892739, 0), 150, void 0, sceNetAdhocMatching$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingDelete', new Kotlin.Long(-244404401, 0), 150, void 0, sceNetAdhocMatching$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocMatchingSendData', new Kotlin.Long(-141266217, 0), 150, void 0, sceNetAdhocMatching$registerModule$lambda_14(this));
  };
  sceNetAdhocMatching.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceNetAdhocMatching',
    interfaces: [SceModule]
  };
  function sceNetAdhocctl(emulator) {
    SceModule.call(this, emulator, 'sceNetAdhocctl', 65553, 'pspnet_adhocctl.prx', 'sceNetAdhocctl_Library');
  }
  sceNetAdhocctl.prototype.sceNetAdhocctlScan_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(150992800);
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlConnect_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(181421037);
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlJoinEnterGameMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(536385349);
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlAddHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(548607904);
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlDisconnect_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(876617061);
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlGetAdhocId_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(908902031);
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlGetGameModeInfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1510034656);
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlJoin_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1585412553);
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlDelHandler_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1677871371);
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlGetState_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1978454918);
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlGetScanInfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2119245378, 0));
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlGetNameByAddr_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1994997757, 0));
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlGetPeerInfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1917304868, 0));
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlGetAddrByName_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1722414402, 0));
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlTerm_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1654088173, 0));
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlCreateEnterGameMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1514121778, 0));
  };
  sceNetAdhocctl.prototype.sceNetAdhocctl_B0B80E80_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1330114944, 0));
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlExitGameMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-812775347, 0));
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlGetParameter_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-556150130, 0));
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlGetPeerList_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-513619180, 0));
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlInit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-496033170, 0));
  };
  sceNetAdhocctl.prototype.sceNetAdhocctlCreate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-335137343, 0));
  };
  function sceNetAdhocctl$registerModule$lambda(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlScan_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_0(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlConnect_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_1(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlJoinEnterGameMode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_2(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlAddHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_3(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlDisconnect_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_4(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlGetAdhocId_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_5(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlGetGameModeInfo_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_6(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlJoin_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_7(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlDelHandler_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_8(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlGetState_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_9(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlGetScanInfo_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_10(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlGetNameByAddr_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_11(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlGetPeerInfo_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_12(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlGetAddrByName_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_13(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlTerm_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_14(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlCreateEnterGameMode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_15(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctl_B0B80E80_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_16(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlExitGameMode_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_17(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlGetParameter_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_18(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlGetPeerList_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_19(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlInit_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetAdhocctl$registerModule$lambda_20(this$sceNetAdhocctl) {
    return function (it) {
      this$sceNetAdhocctl.sceNetAdhocctlCreate_xt3zvs$(it);
      return Unit;
    };
  }
  sceNetAdhocctl.prototype.registerModule = function () {
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlScan', Kotlin.Long.fromInt(150992800), 150, void 0, sceNetAdhocctl$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlConnect', Kotlin.Long.fromInt(181421037), 150, void 0, sceNetAdhocctl$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlJoinEnterGameMode', Kotlin.Long.fromInt(536385349), 150, void 0, sceNetAdhocctl$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlAddHandler', Kotlin.Long.fromInt(548607904), 150, void 0, sceNetAdhocctl$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlDisconnect', Kotlin.Long.fromInt(876617061), 150, void 0, sceNetAdhocctl$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlGetAdhocId', Kotlin.Long.fromInt(908902031), 150, void 0, sceNetAdhocctl$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlGetGameModeInfo', Kotlin.Long.fromInt(1510034656), 150, void 0, sceNetAdhocctl$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlJoin', Kotlin.Long.fromInt(1585412553), 150, void 0, sceNetAdhocctl$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlDelHandler', Kotlin.Long.fromInt(1677871371), 150, void 0, sceNetAdhocctl$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlGetState', Kotlin.Long.fromInt(1978454918), 150, void 0, sceNetAdhocctl$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlGetScanInfo', new Kotlin.Long(-2119245378, 0), 150, void 0, sceNetAdhocctl$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlGetNameByAddr', new Kotlin.Long(-1994997757, 0), 150, void 0, sceNetAdhocctl$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlGetPeerInfo', new Kotlin.Long(-1917304868, 0), 150, void 0, sceNetAdhocctl$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlGetAddrByName', new Kotlin.Long(-1722414402, 0), 150, void 0, sceNetAdhocctl$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlTerm', new Kotlin.Long(-1654088173, 0), 150, void 0, sceNetAdhocctl$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlCreateEnterGameMode', new Kotlin.Long(-1514121778, 0), 150, void 0, sceNetAdhocctl$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctl_B0B80E80', new Kotlin.Long(-1330114944, 0), 150, void 0, sceNetAdhocctl$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlExitGameMode', new Kotlin.Long(-812775347, 0), 150, void 0, sceNetAdhocctl$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlGetParameter', new Kotlin.Long(-556150130, 0), 150, void 0, sceNetAdhocctl$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlGetPeerList', new Kotlin.Long(-513619180, 0), 150, void 0, sceNetAdhocctl$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlInit', new Kotlin.Long(-496033170, 0), 150, void 0, sceNetAdhocctl$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceNetAdhocctlCreate', new Kotlin.Long(-335137343, 0), 150, void 0, sceNetAdhocctl$registerModule$lambda_20(this));
  };
  sceNetAdhocctl.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceNetAdhocctl',
    interfaces: [SceModule]
  };
  function sceNetInet(emulator) {
    SceModule.call(this, emulator, 'sceNetInet', 65553, 'pspnet_inet.prx', 'sceNetInet_Library');
  }
  sceNetInet.prototype.sceNetInetSendto_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(84119495);
  };
  sceNetInet.prototype.sceNetInetGetsockname_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(372142037);
  };
  sceNetInet.prototype.sceNetInetInit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(395588505);
  };
  sceNetInet.prototype.sceNetInetBind_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(439613870);
  };
  sceNetInet.prototype.sceNetInetInetAton_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(467623187);
  };
  sceNetInet.prototype.sceNetInet_1D023504_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(486683908);
  };
  sceNetInet.prototype.sceNetInet_2D5868C0_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(760768704);
  };
  sceNetInet.prototype.sceNetInetSetsockopt_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(803676135);
  };
  sceNetInet.prototype.sceNetInetGetUdpcbstat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(967886803);
  };
  sceNetInet.prototype.sceNetInetConnect_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1091253418);
  };
  sceNetInet.prototype.sceNetInetGetsockopt_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1242647676);
  };
  sceNetInet.prototype.sceNetInetShutdown_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1291734614);
  };
  sceNetInet.prototype.sceNetInetSelect_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1541985685);
  };
  sceNetInet.prototype.sceNetInetSendmsg_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2001614580);
  };
  sceNetInet.prototype.sceNetInetSend_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2057728444);
  };
  sceNetInet.prototype.sceNetInetCloseWithRST_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2141912355, 0));
  };
  sceNetInet.prototype.sceNetInetSocketAbort_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2136859971, 0));
  };
  sceNetInet.prototype.sceNetInetSocket_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1954864625, 0));
  };
  sceNetInet.prototype.sceNetInetGetPspError_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1935431298, 0));
  };
  sceNetInet.prototype.sceNetInetClose_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1921874710, 0));
  };
  sceNetInet.prototype.sceNetInetTerm_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1444059463, 0));
  };
  sceNetInet.prototype.sceNetInetGetTcpcbstat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1282897196, 0));
  };
  sceNetInet.prototype.sceNetInetInetAddr_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1218618614, 0));
  };
  sceNetInet.prototype.sceNetInetRecvfrom_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-921615644, 0));
  };
  sceNetInet.prototype.sceNetInet_CCC18C45_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-859730875, 0));
  };
  sceNetInet.prototype.sceNetInetRecv_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-844604263, 0));
  };
  sceNetInet.prototype.sceNetInetInetNtop_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-797366682, 0));
  };
  sceNetInet.prototype.sceNetInetListen_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-787867014, 0));
  };
  sceNetInet.prototype.sceNetInetAccept_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-620147173, 0));
  };
  sceNetInet.prototype.sceNetInetGetpeername_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-498616618, 0));
  };
  sceNetInet.prototype.sceNetInetInetPton_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-485782503, 0));
  };
  sceNetInet.prototype.sceNetInetRecvmsg_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-288464430, 0));
  };
  sceNetInet.prototype.sceNetInetPoll_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-89411107, 0));
  };
  sceNetInet.prototype.sceNetInetGetErrno_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-72621039, 0));
  };
  function sceNetInet$registerModule$lambda(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetSendto_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_0(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetGetsockname_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_1(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetInit_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_2(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetBind_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_3(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetInetAton_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_4(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInet_1D023504_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_5(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInet_2D5868C0_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_6(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetSetsockopt_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_7(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetGetUdpcbstat_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_8(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetConnect_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_9(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetGetsockopt_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_10(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetShutdown_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_11(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetSelect_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_12(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetSendmsg_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_13(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetSend_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_14(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetCloseWithRST_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_15(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetSocketAbort_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_16(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetSocket_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_17(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetGetPspError_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_18(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetClose_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_19(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetTerm_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_20(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetGetTcpcbstat_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_21(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetInetAddr_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_22(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetRecvfrom_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_23(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInet_CCC18C45_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_24(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetRecv_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_25(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetInetNtop_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_26(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetListen_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_27(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetAccept_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_28(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetGetpeername_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_29(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetInetPton_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_30(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetRecvmsg_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_31(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetPoll_xt3zvs$(it);
      return Unit;
    };
  }
  function sceNetInet$registerModule$lambda_32(this$sceNetInet) {
    return function (it) {
      this$sceNetInet.sceNetInetGetErrno_xt3zvs$(it);
      return Unit;
    };
  }
  sceNetInet.prototype.registerModule = function () {
    this.registerFunctionRaw_gh35x6$('sceNetInetSendto', Kotlin.Long.fromInt(84119495), 150, void 0, sceNetInet$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetGetsockname', Kotlin.Long.fromInt(372142037), 150, void 0, sceNetInet$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetInit', Kotlin.Long.fromInt(395588505), 150, void 0, sceNetInet$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetBind', Kotlin.Long.fromInt(439613870), 150, void 0, sceNetInet$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetInetAton', Kotlin.Long.fromInt(467623187), 150, void 0, sceNetInet$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceNetInet_1D023504', Kotlin.Long.fromInt(486683908), 150, void 0, sceNetInet$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceNetInet_2D5868C0', Kotlin.Long.fromInt(760768704), 150, void 0, sceNetInet$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetSetsockopt', Kotlin.Long.fromInt(803676135), 150, void 0, sceNetInet$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetGetUdpcbstat', Kotlin.Long.fromInt(967886803), 150, void 0, sceNetInet$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetConnect', Kotlin.Long.fromInt(1091253418), 150, void 0, sceNetInet$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetGetsockopt', Kotlin.Long.fromInt(1242647676), 150, void 0, sceNetInet$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetShutdown', Kotlin.Long.fromInt(1291734614), 150, void 0, sceNetInet$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetSelect', Kotlin.Long.fromInt(1541985685), 150, void 0, sceNetInet$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetSendmsg', Kotlin.Long.fromInt(2001614580), 150, void 0, sceNetInet$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetSend', Kotlin.Long.fromInt(2057728444), 150, void 0, sceNetInet$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetCloseWithRST', new Kotlin.Long(-2141912355, 0), 150, void 0, sceNetInet$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetSocketAbort', new Kotlin.Long(-2136859971, 0), 150, void 0, sceNetInet$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetSocket', new Kotlin.Long(-1954864625, 0), 150, void 0, sceNetInet$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetGetPspError', new Kotlin.Long(-1935431298, 0), 150, void 0, sceNetInet$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetClose', new Kotlin.Long(-1921874710, 0), 150, void 0, sceNetInet$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetTerm', new Kotlin.Long(-1444059463, 0), 150, void 0, sceNetInet$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetGetTcpcbstat', new Kotlin.Long(-1282897196, 0), 150, void 0, sceNetInet$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetInetAddr', new Kotlin.Long(-1218618614, 0), 150, void 0, sceNetInet$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetRecvfrom', new Kotlin.Long(-921615644, 0), 150, void 0, sceNetInet$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceNetInet_CCC18C45', new Kotlin.Long(-859730875, 0), 150, void 0, sceNetInet$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetRecv', new Kotlin.Long(-844604263, 0), 150, void 0, sceNetInet$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetInetNtop', new Kotlin.Long(-797366682, 0), 150, void 0, sceNetInet$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetListen', new Kotlin.Long(-787867014, 0), 150, void 0, sceNetInet$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetAccept', new Kotlin.Long(-620147173, 0), 150, void 0, sceNetInet$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetGetpeername', new Kotlin.Long(-498616618, 0), 150, void 0, sceNetInet$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetInetPton', new Kotlin.Long(-485782503, 0), 150, void 0, sceNetInet$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetRecvmsg', new Kotlin.Long(-288464430, 0), 150, void 0, sceNetInet$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetPoll', new Kotlin.Long(-89411107, 0), 150, void 0, sceNetInet$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('sceNetInetGetErrno', new Kotlin.Long(-72621039, 0), 150, void 0, sceNetInet$registerModule$lambda_32(this));
  };
  sceNetInet.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceNetInet',
    interfaces: [SceModule]
  };
  function scePower(emulator) {
    SceModule.call(this, emulator, 'scePower', 1073807377, 'power.prx', 'scePower_Service');
    this.cpuMult_0 = 511.0;
    this.pllFreq_0 = 222.0;
    this.busFreq_0 = 111.0;
  }
  scePower.prototype._getCpuMult = function () {
    return 0.43444228 * (this.busFreq_0 / 111.0);
  };
  scePower.prototype._getCpuFreq = function () {
    return this.cpuMult_0 * this._getCpuMult();
  };
  scePower.prototype._isValidCpuFreq_za3lpa$ = function (freq) {
    return (new IntRange(1, 222)).contains_mef7kx$(freq);
  };
  scePower.prototype._isValidBusFreq_za3lpa$ = function (freq) {
    return (new IntRange(1, 111)).contains_mef7kx$(freq);
  };
  scePower.prototype._isValidPllFreq_za3lpa$ = function (freq) {
    return (new IntRange(19, 111)).contains_mef7kx$(freq);
  };
  scePower.prototype._setCpuFreq_za3lpa$ = function (cpuFreq) {
    var tmp$;
    if (cpuFreq > 222)
      tmp$ = this.cpuMult_0;
    else if (cpuFreq === 222)
      tmp$ = 511.0;
    else
      tmp$ = cpuFreq / this._getCpuMult();
    this.cpuMult_0 = tmp$;
  };
  scePower.prototype.scePowerGetCpuClockFrequency = function () {
    return numberToInt(this._getCpuFreq());
  };
  scePower.prototype.scePowerGetCpuClockFrequencyInt = function () {
    return numberToInt(this._getCpuFreq());
  };
  scePower.prototype.scePowerGetCpuClockFrequencyFloat = function () {
    return this._getCpuFreq();
  };
  scePower.prototype.scePowerGetBusClockFrequency = function () {
    return numberToInt(this.busFreq_0);
  };
  scePower.prototype.scePowerGetBusClockFrequencyInt = function () {
    return numberToInt(this.busFreq_0);
  };
  scePower.prototype.scePowerGetBusClockFrequencyFloat = function () {
    return this.busFreq_0;
  };
  scePower.prototype.scePowerGetPllClockFrequencyInt = function () {
    return numberToInt(this.pllFreq_0);
  };
  scePower.prototype.scePowerGetPllClockFrequencyFloat = function () {
    return this.pllFreq_0;
  };
  scePower.prototype.scePowerSetBusClockFrequency_za3lpa$ = function (busFreq) {
    if (!this._isValidBusFreq_za3lpa$(busFreq))
      return SceKernelErrors_getInstance().ERROR_INVALID_VALUE;
    this.busFreq_0 = busFreq;
    return 0;
  };
  scePower.prototype.scePowerSetCpuClockFrequency_za3lpa$ = function (cpuFreq) {
    if (!this._isValidCpuFreq_za3lpa$(cpuFreq))
      return SceKernelErrors_getInstance().ERROR_INVALID_VALUE;
    this._setCpuFreq_za3lpa$(cpuFreq);
    return 0;
  };
  scePower.prototype.scePowerSetClockFrequency_qt1dr2$ = function (pllFreq, cpuFreq, busFreq) {
    var $this = this.logger;
    var level = LogLevel.WARN;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'Unimplemented scePowerSetClockFrequency(' + pllFreq + ', ' + cpuFreq + ', ' + busFreq + ')');
    }
    return 0;
  };
  scePower.prototype.scePowerRegisterCallback_vux9f0$ = function (slot, callbackId) {
    var $this = this.logger;
    var level = LogLevel.WARN;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'Unimplemented scePowerRegisterCallback(' + slot + ', ' + callbackId + ')');
    }
    return 0;
  };
  scePower.prototype.scePowerIsBatteryExist = function () {
    return this.emulator.battery.batteryExists ? 1 : 0;
  };
  scePower.prototype.scePowerIsLowBattery = function () {
    return this.emulator.battery.isLowBattery ? 1 : 0;
  };
  scePower.prototype.scePowerIsPowerOnline = function () {
    return this.emulator.battery.charging ? 1 : 0;
  };
  scePower.prototype.scePowerIsBatteryCharging = function () {
    return this.emulator.battery.charging ? 1 : 0;
  };
  scePower.prototype.scePowerGetBatteryLifeTime = function () {
    return numberToInt(this.emulator.battery.lifetimeSeconds / 60.0);
  };
  scePower.prototype.scePowerGetBatteryLifePercent = function () {
    return numberToInt(this.emulator.battery.chargedRatio * 100);
  };
  scePower.prototype.scePowerGetBatteryVolt = function () {
    return this.emulator.battery.volt;
  };
  scePower.prototype.scePowerGetBatteryTemp = function () {
    return this.emulator.battery.temp;
  };
  scePower.prototype.scePowerGetResumeCount_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(7663515);
  };
  scePower.prototype.scePowerRequestColdReset_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(71489618);
  };
  scePower.prototype.scePowerSetPowerSwMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(215096095);
  };
  scePower.prototype.scePowerGetPowerSwMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(375185541);
  };
  scePower.prototype.scePowerGetInnerTemp_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(591620682);
  };
  scePower.prototype.scePowerVolatileMemLock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(599990270);
  };
  scePower.prototype.scePowerBatteryUpdateInfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(670247212);
  };
  scePower.prototype.scePower_2875994B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(678795595);
  };
  scePower.prototype.scePower_2B51FE2F_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(726793775);
  };
  scePower.prototype.scePowerRequestStandby_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(729578740);
  };
  scePower.prototype.scePowerWaitRequestCompletion_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(961654611);
  };
  scePower.prototype.scePowerGetBacklightMaximum_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1143733164);
  };
  scePower.prototype.scePower_545A7F3C_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1415216956);
  };
  scePower.prototype.scePowerIsSuspendRequired_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2023860118);
  };
  scePower.prototype.scePowerIdleTimerEnable_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2133898161);
  };
  scePower.prototype.scePowerIsRequest_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2141456093);
  };
  scePower.prototype.scePowerGetBatteryElec_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2044010074, 0));
  };
  scePower.prototype.scePowerGetBatteryRemainCapacity_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1795840705, 0));
  };
  scePower.prototype.scePowerIdleTimerDisable_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1758664383, 0));
  };
  scePower.prototype.scePower_A4E93389_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1528220791, 0));
  };
  scePower.prototype.scePowerSetCallbackMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1445846478, 0));
  };
  scePower.prototype.scePowerRequestSuspend_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1405957684, 0));
  };
  scePower.prototype.scePowerVolatileMemUnlock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1276258303, 0));
  };
  scePower.prototype.scePowerGetBatteryChargingStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1270666296, 0));
  };
  scePower.prototype.scePowerGetLowBatteryCapacity_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1181149108, 0));
  };
  scePower.prototype.scePowerGetCallbackMode_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1158005264, 0));
  };
  scePower.prototype.scePowerUnlock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-901958463, 0));
  };
  scePower.prototype.scePowerGetBatteryChargeCycle_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-884345394, 0));
  };
  scePower.prototype.scePowerLock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-691005713, 0));
  };
  scePower.prototype.scePowerCancelRequest_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-614282801, 0));
  };
  scePower.prototype.scePowerUnregitserCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-610457379, 0));
  };
  scePower.prototype.scePowerUnregisterCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-542590216, 0));
  };
  scePower.prototype.scePower_E8E4E204_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-387653116, 0));
  };
  scePower.prototype.scePower_EBD177D6_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-338593834, 0));
  };
  scePower.prototype.scePowerGetIdleTimer_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-306102299, 0));
  };
  scePower.prototype.scePowerTick_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-271333021, 0));
  };
  scePower.prototype.scePowerVolatileMemTryLock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-90724967, 0));
  };
  scePower.prototype.scePowerGetBatteryFullCapacity_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-48717569, 0));
  };
  function scePower$registerModule$lambda(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerGetCpuClockFrequency();
    };
  }
  function scePower$registerModule$lambda_0(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerGetCpuClockFrequencyInt();
    };
  }
  function scePower$registerModule$lambda_1(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerGetCpuClockFrequencyFloat();
    };
  }
  function scePower$registerModule$lambda_2(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerGetPllClockFrequencyInt();
    };
  }
  function scePower$registerModule$lambda_3(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerGetPllClockFrequencyFloat();
    };
  }
  function scePower$registerModule$lambda_4(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerGetBusClockFrequency();
    };
  }
  function scePower$registerModule$lambda_5(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerGetBusClockFrequencyInt();
    };
  }
  function scePower$registerModule$lambda_6(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerGetBusClockFrequencyFloat();
    };
  }
  function scePower$registerModule$lambda_7(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerSetBusClockFrequency_za3lpa$($receiver.int);
    };
  }
  function scePower$registerModule$lambda_8(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerSetCpuClockFrequency_za3lpa$($receiver.int);
    };
  }
  function scePower$registerModule$lambda_9(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerSetClockFrequency_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function scePower$registerModule$lambda_10(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerIsBatteryExist();
    };
  }
  function scePower$registerModule$lambda_11(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerIsLowBattery();
    };
  }
  function scePower$registerModule$lambda_12(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerIsPowerOnline();
    };
  }
  function scePower$registerModule$lambda_13(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerIsBatteryCharging();
    };
  }
  function scePower$registerModule$lambda_14(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerGetBatteryLifeTime();
    };
  }
  function scePower$registerModule$lambda_15(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerGetBatteryLifePercent();
    };
  }
  function scePower$registerModule$lambda_16(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerGetBatteryVolt();
    };
  }
  function scePower$registerModule$lambda_17(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerGetBatteryTemp();
    };
  }
  function scePower$registerModule$lambda_18(this$scePower) {
    return function ($receiver, it) {
      return this$scePower.scePowerRegisterCallback_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function scePower$registerModule$lambda_19(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetResumeCount_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_20(this$scePower) {
    return function (it) {
      this$scePower.scePowerRequestColdReset_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_21(this$scePower) {
    return function (it) {
      this$scePower.scePowerSetPowerSwMode_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_22(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetPowerSwMode_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_23(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetInnerTemp_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_24(this$scePower) {
    return function (it) {
      this$scePower.scePowerVolatileMemLock_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_25(this$scePower) {
    return function (it) {
      this$scePower.scePowerBatteryUpdateInfo_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_26(this$scePower) {
    return function (it) {
      this$scePower.scePower_2875994B_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_27(this$scePower) {
    return function (it) {
      this$scePower.scePower_2B51FE2F_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_28(this$scePower) {
    return function (it) {
      this$scePower.scePowerRequestStandby_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_29(this$scePower) {
    return function (it) {
      this$scePower.scePowerWaitRequestCompletion_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_30(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBacklightMaximum_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_31(this$scePower) {
    return function (it) {
      this$scePower.scePower_545A7F3C_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_32(this$scePower) {
    return function (it) {
      this$scePower.scePowerIsSuspendRequired_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_33(this$scePower) {
    return function (it) {
      this$scePower.scePowerIdleTimerEnable_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_34(this$scePower) {
    return function (it) {
      this$scePower.scePowerIsRequest_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_35(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBatteryElec_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_36(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBatteryRemainCapacity_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_37(this$scePower) {
    return function (it) {
      this$scePower.scePowerIdleTimerDisable_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_38(this$scePower) {
    return function (it) {
      this$scePower.scePower_A4E93389_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_39(this$scePower) {
    return function (it) {
      this$scePower.scePowerSetCallbackMode_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_40(this$scePower) {
    return function (it) {
      this$scePower.scePowerRequestSuspend_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_41(this$scePower) {
    return function (it) {
      this$scePower.scePowerVolatileMemUnlock_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_42(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBatteryChargingStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_43(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetLowBatteryCapacity_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_44(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetCallbackMode_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_45(this$scePower) {
    return function (it) {
      this$scePower.scePowerUnlock_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_46(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBatteryChargeCycle_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_47(this$scePower) {
    return function (it) {
      this$scePower.scePowerLock_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_48(this$scePower) {
    return function (it) {
      this$scePower.scePowerCancelRequest_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_49(this$scePower) {
    return function (it) {
      this$scePower.scePowerUnregitserCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_50(this$scePower) {
    return function (it) {
      this$scePower.scePowerUnregisterCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_51(this$scePower) {
    return function (it) {
      this$scePower.scePower_E8E4E204_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_52(this$scePower) {
    return function (it) {
      this$scePower.scePower_EBD177D6_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_53(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetIdleTimer_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_54(this$scePower) {
    return function (it) {
      this$scePower.scePowerTick_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_55(this$scePower) {
    return function (it) {
      this$scePower.scePowerVolatileMemTryLock_xt3zvs$(it);
      return Unit;
    };
  }
  function scePower$registerModule$lambda_56(this$scePower) {
    return function (it) {
      this$scePower.scePowerGetBatteryFullCapacity_xt3zvs$(it);
      return Unit;
    };
  }
  scePower.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('scePowerGetCpuClockFrequency', new Kotlin.Long(-18859473, 0), 150, void 0, scePower$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('scePowerGetCpuClockFrequencyInt', new Kotlin.Long(-38420503, 0), 150, void 0, scePower$registerModule$lambda_0(this));
    this.registerFunctionFloat_jwgdqy$('scePowerGetCpuClockFrequencyFloat', new Kotlin.Long(-1314575229, 0), 150, void 0, scePower$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('scePowerGetPllClockFrequencyInt', Kotlin.Long.fromInt(888783971), 150, void 0, scePower$registerModule$lambda_2(this));
    this.registerFunctionFloat_jwgdqy$('scePowerGetPllClockFrequencyFloat', new Kotlin.Long(-365417945, 0), 150, void 0, scePower$registerModule$lambda_3(this));
    this.registerFunctionInt_9l82lv$('scePowerGetBusClockFrequency', Kotlin.Long.fromInt(1200613109), 150, void 0, scePower$registerModule$lambda_4(this));
    this.registerFunctionInt_9l82lv$('scePowerGetBusClockFrequencyInt', new Kotlin.Long(-1117251223, 0), 150, void 0, scePower$registerModule$lambda_5(this));
    this.registerFunctionFloat_jwgdqy$('scePowerGetBusClockFrequencyFloat', new Kotlin.Long(-1683115029, 0), 150, void 0, scePower$registerModule$lambda_6(this));
    this.registerFunctionInt_9l82lv$('scePowerSetBusClockFrequency', new Kotlin.Long(-1193823237, 0), 150, void 0, scePower$registerModule$lambda_7(this));
    this.registerFunctionInt_9l82lv$('scePowerSetCpuClockFrequency', new Kotlin.Long(-2076197053, 0), 150, void 0, scePower$registerModule$lambda_8(this));
    this.registerFunctionInt_9l82lv$('scePowerSetClockFrequency', Kotlin.Long.fromInt(1937016562), 150, void 0, scePower$registerModule$lambda_9(this));
    this.registerFunctionInt_9l82lv$('scePowerIsBatteryExist', Kotlin.Long.fromInt(184356235), 150, void 0, scePower$registerModule$lambda_10(this));
    this.registerFunctionInt_9l82lv$('scePowerIsLowBattery', new Kotlin.Long(-754493146, 0), 150, void 0, scePower$registerModule$lambda_11(this));
    this.registerFunctionInt_9l82lv$('scePowerIsPowerOnline', new Kotlin.Long(-2025582754, 0), 150, void 0, scePower$registerModule$lambda_12(this));
    this.registerFunctionInt_9l82lv$('scePowerIsBatteryCharging', Kotlin.Long.fromInt(508101633), 150, void 0, scePower$registerModule$lambda_13(this));
    this.registerFunctionInt_9l82lv$('scePowerGetBatteryLifeTime', new Kotlin.Long(-1896136798, 0), 150, void 0, scePower$registerModule$lambda_14(this));
    this.registerFunctionInt_9l82lv$('scePowerGetBatteryLifePercent', Kotlin.Long.fromInt(545640797), 150, void 0, scePower$registerModule$lambda_15(this));
    this.registerFunctionInt_9l82lv$('scePowerGetBatteryVolt', Kotlin.Long.fromInt(1211951211), 150, void 0, scePower$registerModule$lambda_16(this));
    this.registerFunctionInt_9l82lv$('scePowerGetBatteryTemp', Kotlin.Long.fromInt(685842467), 150, void 0, scePower$registerModule$lambda_17(this));
    this.registerFunctionInt_9l82lv$('scePowerRegisterCallback', Kotlin.Long.fromInt(79132270), 150, void 0, scePower$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetResumeCount', Kotlin.Long.fromInt(7663515), 150, void 0, scePower$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('scePowerRequestColdReset', Kotlin.Long.fromInt(71489618), 150, void 0, scePower$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('scePowerSetPowerSwMode', Kotlin.Long.fromInt(215096095), 150, void 0, scePower$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetPowerSwMode', Kotlin.Long.fromInt(375185541), 150, void 0, scePower$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetInnerTemp', Kotlin.Long.fromInt(591620682), 150, void 0, scePower$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('scePowerVolatileMemLock', Kotlin.Long.fromInt(599990270), 150, void 0, scePower$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('scePowerBatteryUpdateInfo', Kotlin.Long.fromInt(670247212), 150, void 0, scePower$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('scePower_2875994B', Kotlin.Long.fromInt(678795595), 150, void 0, scePower$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('scePower_2B51FE2F', Kotlin.Long.fromInt(726793775), 150, void 0, scePower$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('scePowerRequestStandby', Kotlin.Long.fromInt(729578740), 150, void 0, scePower$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('scePowerWaitRequestCompletion', Kotlin.Long.fromInt(961654611), 150, void 0, scePower$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBacklightMaximum', Kotlin.Long.fromInt(1143733164), 150, void 0, scePower$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('scePower_545A7F3C', Kotlin.Long.fromInt(1415216956), 150, void 0, scePower$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('scePowerIsSuspendRequired', Kotlin.Long.fromInt(2023860118), 150, void 0, scePower$registerModule$lambda_32(this));
    this.registerFunctionRaw_gh35x6$('scePowerIdleTimerEnable', Kotlin.Long.fromInt(2133898161), 150, void 0, scePower$registerModule$lambda_33(this));
    this.registerFunctionRaw_gh35x6$('scePowerIsRequest', Kotlin.Long.fromInt(2141456093), 150, void 0, scePower$registerModule$lambda_34(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBatteryElec', new Kotlin.Long(-2044010074, 0), 150, void 0, scePower$registerModule$lambda_35(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBatteryRemainCapacity', new Kotlin.Long(-1795840705, 0), 150, void 0, scePower$registerModule$lambda_36(this));
    this.registerFunctionRaw_gh35x6$('scePowerIdleTimerDisable', new Kotlin.Long(-1758664383, 0), 150, void 0, scePower$registerModule$lambda_37(this));
    this.registerFunctionRaw_gh35x6$('scePower_A4E93389', new Kotlin.Long(-1528220791, 0), 150, void 0, scePower$registerModule$lambda_38(this));
    this.registerFunctionRaw_gh35x6$('scePowerSetCallbackMode', new Kotlin.Long(-1445846478, 0), 150, void 0, scePower$registerModule$lambda_39(this));
    this.registerFunctionRaw_gh35x6$('scePowerRequestSuspend', new Kotlin.Long(-1405957684, 0), 150, void 0, scePower$registerModule$lambda_40(this));
    this.registerFunctionRaw_gh35x6$('scePowerVolatileMemUnlock', new Kotlin.Long(-1276258303, 0), 150, void 0, scePower$registerModule$lambda_41(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBatteryChargingStatus', new Kotlin.Long(-1270666296, 0), 150, void 0, scePower$registerModule$lambda_42(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetLowBatteryCapacity', new Kotlin.Long(-1181149108, 0), 150, void 0, scePower$registerModule$lambda_43(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetCallbackMode', new Kotlin.Long(-1158005264, 0), 150, void 0, scePower$registerModule$lambda_44(this));
    this.registerFunctionRaw_gh35x6$('scePowerUnlock', new Kotlin.Long(-901958463, 0), 150, void 0, scePower$registerModule$lambda_45(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBatteryChargeCycle', new Kotlin.Long(-884345394, 0), 150, void 0, scePower$registerModule$lambda_46(this));
    this.registerFunctionRaw_gh35x6$('scePowerLock', new Kotlin.Long(-691005713, 0), 150, void 0, scePower$registerModule$lambda_47(this));
    this.registerFunctionRaw_gh35x6$('scePowerCancelRequest', new Kotlin.Long(-614282801, 0), 150, void 0, scePower$registerModule$lambda_48(this));
    this.registerFunctionRaw_gh35x6$('scePowerUnregitserCallback', new Kotlin.Long(-610457379, 0), 150, void 0, scePower$registerModule$lambda_49(this));
    this.registerFunctionRaw_gh35x6$('scePowerUnregisterCallback', new Kotlin.Long(-542590216, 0), 150, void 0, scePower$registerModule$lambda_50(this));
    this.registerFunctionRaw_gh35x6$('scePower_E8E4E204', new Kotlin.Long(-387653116, 0), 150, void 0, scePower$registerModule$lambda_51(this));
    this.registerFunctionRaw_gh35x6$('scePower_EBD177D6', new Kotlin.Long(-338593834, 0), 150, void 0, scePower$registerModule$lambda_52(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetIdleTimer', new Kotlin.Long(-306102299, 0), 150, void 0, scePower$registerModule$lambda_53(this));
    this.registerFunctionRaw_gh35x6$('scePowerTick', new Kotlin.Long(-271333021, 0), 150, void 0, scePower$registerModule$lambda_54(this));
    this.registerFunctionRaw_gh35x6$('scePowerVolatileMemTryLock', new Kotlin.Long(-90724967, 0), 150, void 0, scePower$registerModule$lambda_55(this));
    this.registerFunctionRaw_gh35x6$('scePowerGetBatteryFullCapacity', new Kotlin.Long(-48717569, 0), 150, void 0, scePower$registerModule$lambda_56(this));
  };
  scePower.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'scePower',
    interfaces: [SceModule]
  };
  function sceReg(emulator) {
    SceModule.call(this, emulator, 'sceReg', 1073807377, 'registry.prx', 'sceRegistry_Service');
  }
  sceReg.prototype.sceRegOpenRegistry_km1ogm$ = function (regParamPtr, mode, regHandlePtr) {
    var param = read(regParamPtr, RegParam$Companion_getInstance());
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceRegOpenRegistry:' + param + ',' + mode + ',' + regHandlePtr);
    }
    regHandlePtr.sw_vux9f0$(0, 0);
    return 0;
  };
  sceReg.prototype.sceRegOpenCategory_nfdkp1$ = function (regHandle, name, mode, regCategoryHandlePtr) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceRegOpenCategory:' + regHandle + ',' + toString(name) + ',' + mode + ',' + regCategoryHandlePtr);
    }
    return 0;
  };
  sceReg.prototype.sceRegGetKeyInfo_8hb1i5$ = function (categoryHandle, name, regKeyHandlePtr, regKeyTypesPtr, sizePtr) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceRegGetKeyInfo:' + categoryHandle + ',' + toString(name) + ',' + regKeyHandlePtr + ',' + regKeyTypesPtr + ',' + sizePtr);
    }
    return 0;
  };
  sceReg.prototype.sceRegGetKeyValue_bunovm$ = function (categoryHandle, regKeyHandle, bufferPtr, size) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceRegGetKeyValue:' + categoryHandle + ',' + regKeyHandle + ',' + bufferPtr + ',' + size);
    }
    return 0;
  };
  sceReg.prototype.sceRegFlushCategory_za3lpa$ = function (categoryHandle) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceRegFlushCategory:' + categoryHandle);
    }
    return 0;
  };
  sceReg.prototype.sceRegCloseCategory_za3lpa$ = function (categoryHandle) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceRegCloseCategory:' + categoryHandle);
    }
    return 0;
  };
  sceReg.prototype.sceRegFlushRegistry_za3lpa$ = function (regHandle) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceRegFlushRegistry:' + regHandle);
    }
    return 0;
  };
  sceReg.prototype.sceRegCloseRegistry_za3lpa$ = function (regHandle) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceRegCloseRegistry:' + regHandle);
    }
    return 0;
  };
  sceReg.prototype.sceRegSetKeyValue_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(393645588);
  };
  sceReg.prototype.sceRegGetKeysNum_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(739097053);
  };
  sceReg.prototype.sceRegGetKeys_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(757141813);
  };
  sceReg.prototype.sceRegGetKeyValueByName_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(817758809);
  };
  sceReg.prototype.sceRegRemoveKey_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(907394183);
  };
  sceReg.prototype.sceRegRemoveCategory_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1285646483);
  };
  sceReg.prototype.sceRegCreateKey_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1466178177);
  };
  sceReg.prototype.sceReg_835ECE6F_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2090938769, 0));
  };
  sceReg.prototype.sceRegExit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1692013071, 0));
  };
  sceReg.prototype.sceReg_BE8C1263_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1098116509, 0));
  };
  sceReg.prototype.sceRegGetKeyInfoByName_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-982086398, 0));
  };
  sceReg.prototype.sceRegRemoveRegistry_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-556100929, 0));
  };
  function sceReg$registerModule$lambda(this$sceReg) {
    return function ($receiver, it) {
      return this$sceReg.sceRegOpenRegistry_km1ogm$($receiver.ptr, $receiver.int, $receiver.ptr);
    };
  }
  function sceReg$registerModule$lambda_0(this$sceReg) {
    return function ($receiver, it) {
      return this$sceReg.sceRegOpenCategory_nfdkp1$($receiver.int, $receiver.str, $receiver.int, $receiver.ptr);
    };
  }
  function sceReg$registerModule$lambda_1(this$sceReg) {
    return function ($receiver, it) {
      return this$sceReg.sceRegGetKeyInfo_8hb1i5$($receiver.int, $receiver.str, $receiver.ptr, $receiver.ptr, $receiver.ptr);
    };
  }
  function sceReg$registerModule$lambda_2(this$sceReg) {
    return function ($receiver, it) {
      return this$sceReg.sceRegGetKeyValue_bunovm$($receiver.int, $receiver.int, $receiver.ptr, $receiver.int);
    };
  }
  function sceReg$registerModule$lambda_3(this$sceReg) {
    return function ($receiver, it) {
      return this$sceReg.sceRegFlushCategory_za3lpa$($receiver.int);
    };
  }
  function sceReg$registerModule$lambda_4(this$sceReg) {
    return function ($receiver, it) {
      return this$sceReg.sceRegCloseCategory_za3lpa$($receiver.int);
    };
  }
  function sceReg$registerModule$lambda_5(this$sceReg) {
    return function ($receiver, it) {
      return this$sceReg.sceRegFlushRegistry_za3lpa$($receiver.int);
    };
  }
  function sceReg$registerModule$lambda_6(this$sceReg) {
    return function ($receiver, it) {
      return this$sceReg.sceRegCloseRegistry_za3lpa$($receiver.int);
    };
  }
  function sceReg$registerModule$lambda_7(this$sceReg) {
    return function (it) {
      this$sceReg.sceRegSetKeyValue_xt3zvs$(it);
      return Unit;
    };
  }
  function sceReg$registerModule$lambda_8(this$sceReg) {
    return function (it) {
      this$sceReg.sceRegGetKeysNum_xt3zvs$(it);
      return Unit;
    };
  }
  function sceReg$registerModule$lambda_9(this$sceReg) {
    return function (it) {
      this$sceReg.sceRegGetKeys_xt3zvs$(it);
      return Unit;
    };
  }
  function sceReg$registerModule$lambda_10(this$sceReg) {
    return function (it) {
      this$sceReg.sceRegGetKeyValueByName_xt3zvs$(it);
      return Unit;
    };
  }
  function sceReg$registerModule$lambda_11(this$sceReg) {
    return function (it) {
      this$sceReg.sceRegRemoveKey_xt3zvs$(it);
      return Unit;
    };
  }
  function sceReg$registerModule$lambda_12(this$sceReg) {
    return function (it) {
      this$sceReg.sceRegRemoveCategory_xt3zvs$(it);
      return Unit;
    };
  }
  function sceReg$registerModule$lambda_13(this$sceReg) {
    return function (it) {
      this$sceReg.sceRegCreateKey_xt3zvs$(it);
      return Unit;
    };
  }
  function sceReg$registerModule$lambda_14(this$sceReg) {
    return function (it) {
      this$sceReg.sceReg_835ECE6F_xt3zvs$(it);
      return Unit;
    };
  }
  function sceReg$registerModule$lambda_15(this$sceReg) {
    return function (it) {
      this$sceReg.sceRegExit_xt3zvs$(it);
      return Unit;
    };
  }
  function sceReg$registerModule$lambda_16(this$sceReg) {
    return function (it) {
      this$sceReg.sceReg_BE8C1263_xt3zvs$(it);
      return Unit;
    };
  }
  function sceReg$registerModule$lambda_17(this$sceReg) {
    return function (it) {
      this$sceReg.sceRegGetKeyInfoByName_xt3zvs$(it);
      return Unit;
    };
  }
  function sceReg$registerModule$lambda_18(this$sceReg) {
    return function (it) {
      this$sceReg.sceRegRemoveRegistry_xt3zvs$(it);
      return Unit;
    };
  }
  sceReg.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceRegOpenRegistry', new Kotlin.Long(-1830546816, 0), 150, void 0, sceReg$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceRegOpenCategory', Kotlin.Long.fromInt(495613486), 150, void 0, sceReg$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceRegGetKeyInfo', new Kotlin.Long(-733521240, 0), 150, void 0, sceReg$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('sceRegGetKeyValue', Kotlin.Long.fromInt(682158474), 150, void 0, sceReg$registerModule$lambda_2(this));
    this.registerFunctionInt_9l82lv$('sceRegFlushCategory', Kotlin.Long.fromInt(225034048), 150, void 0, sceReg$registerModule$lambda_3(this));
    this.registerFunctionInt_9l82lv$('sceRegCloseCategory', Kotlin.Long.fromInt(212763435), 150, void 0, sceReg$registerModule$lambda_4(this));
    this.registerFunctionInt_9l82lv$('sceRegFlushRegistry', Kotlin.Long.fromInt(960895821), 150, void 0, sceReg$registerModule$lambda_5(this));
    this.registerFunctionInt_9l82lv$('sceRegCloseRegistry', new Kotlin.Long(-91596999, 0), 150, void 0, sceReg$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceRegSetKeyValue', Kotlin.Long.fromInt(393645588), 150, void 0, sceReg$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceRegGetKeysNum', Kotlin.Long.fromInt(739097053), 150, void 0, sceReg$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceRegGetKeys', Kotlin.Long.fromInt(757141813), 150, void 0, sceReg$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceRegGetKeyValueByName', Kotlin.Long.fromInt(817758809), 150, void 0, sceReg$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceRegRemoveKey', Kotlin.Long.fromInt(907394183), 150, void 0, sceReg$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceRegRemoveCategory', Kotlin.Long.fromInt(1285646483), 150, void 0, sceReg$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceRegCreateKey', Kotlin.Long.fromInt(1466178177), 150, void 0, sceReg$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceReg_835ECE6F', new Kotlin.Long(-2090938769, 0), 150, void 0, sceReg$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceRegExit', new Kotlin.Long(-1692013071, 0), 150, void 0, sceReg$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceReg_BE8C1263', new Kotlin.Long(-1098116509, 0), 150, void 0, sceReg$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceRegGetKeyInfoByName', new Kotlin.Long(-982086398, 0), 150, void 0, sceReg$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceRegRemoveRegistry', new Kotlin.Long(-556100929, 0), 150, void 0, sceReg$registerModule$lambda_18(this));
  };
  sceReg.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceReg',
    interfaces: [SceModule]
  };
  function RegParam(regType, name, nameLength, unknown2, unknown3) {
    RegParam$Companion_getInstance();
    if (regType === void 0)
      regType = 0;
    if (name === void 0)
      name = '';
    if (nameLength === void 0)
      nameLength = 0;
    if (unknown2 === void 0)
      unknown2 = 0;
    if (unknown3 === void 0)
      unknown3 = 0;
    this.regType = regType;
    this.name = name;
    this.nameLength = nameLength;
    this.unknown2 = unknown2;
    this.unknown3 = unknown3;
  }
  function RegParam$Companion() {
    RegParam$Companion_instance = this;
    Struct.call(this, RegParam$RegParam$Companion_init$lambda, [AS(getPropertyCallableRef('regType', 1, function ($receiver) {
      return $receiver.regType;
    }, function ($receiver, value) {
      $receiver.regType = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('name', 1, function ($receiver) {
      return $receiver.name;
    }, function ($receiver, value) {
      $receiver.name = value;
    }), STRINGZ_init(256)), AS(getPropertyCallableRef('nameLength', 1, function ($receiver) {
      return $receiver.nameLength;
    }, function ($receiver, value) {
      $receiver.nameLength = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('unknown2', 1, function ($receiver) {
      return $receiver.unknown2;
    }, function ($receiver, value) {
      $receiver.unknown2 = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('unknown3', 1, function ($receiver) {
      return $receiver.unknown3;
    }, function ($receiver, value) {
      $receiver.unknown3 = value;
    }), INT32_getInstance())]);
  }
  function RegParam$RegParam$Companion_init$lambda() {
    return new RegParam();
  }
  RegParam$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var RegParam$Companion_instance = null;
  function RegParam$Companion_getInstance() {
    if (RegParam$Companion_instance === null) {
      new RegParam$Companion();
    }
    return RegParam$Companion_instance;
  }
  RegParam.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RegParam',
    interfaces: []
  };
  RegParam.prototype.component1 = function () {
    return this.regType;
  };
  RegParam.prototype.component2 = function () {
    return this.name;
  };
  RegParam.prototype.component3 = function () {
    return this.nameLength;
  };
  RegParam.prototype.component4 = function () {
    return this.unknown2;
  };
  RegParam.prototype.component5 = function () {
    return this.unknown3;
  };
  RegParam.prototype.copy_k592oq$ = function (regType, name, nameLength, unknown2, unknown3) {
    return new RegParam(regType === void 0 ? this.regType : regType, name === void 0 ? this.name : name, nameLength === void 0 ? this.nameLength : nameLength, unknown2 === void 0 ? this.unknown2 : unknown2, unknown3 === void 0 ? this.unknown3 : unknown3);
  };
  RegParam.prototype.toString = function () {
    return 'RegParam(regType=' + Kotlin.toString(this.regType) + (', name=' + Kotlin.toString(this.name)) + (', nameLength=' + Kotlin.toString(this.nameLength)) + (', unknown2=' + Kotlin.toString(this.unknown2)) + (', unknown3=' + Kotlin.toString(this.unknown3)) + ')';
  };
  RegParam.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.regType) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.nameLength) | 0;
    result = result * 31 + Kotlin.hashCode(this.unknown2) | 0;
    result = result * 31 + Kotlin.hashCode(this.unknown3) | 0;
    return result;
  };
  RegParam.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.regType, other.regType) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.nameLength, other.nameLength) && Kotlin.equals(this.unknown2, other.unknown2) && Kotlin.equals(this.unknown3, other.unknown3)))));
  };
  function sceRtc(emulator) {
    SceModule.call(this, emulator, 'sceRtc', 1073807377, 'rtc.prx', 'sceRTC_Service');
  }
  sceRtc.prototype.sceRtcGetCurrentTick_xnxgf8$ = function (ptr) {
    ptr.sdw_6svq3l$(0, get_timeManager(this).getTimeInMicroseconds());
    return 0;
  };
  sceRtc.prototype.sceRtcGetTickResolution = function () {
    return 1000000;
  };
  sceRtc.prototype.sceRtcGetDayOfWeek_qt1dr2$ = function (year, month, day) {
    return DateTime.Companion.invoke_ui44o2$(year, month, day).dayOfWeekInt;
  };
  sceRtc.prototype.sceRtcGetDaysInMonth_vux9f0$ = function (year, month) {
    return Month.Companion.days_vux9f0$(month, year);
  };
  sceRtc.prototype.sceRtcSetTick_v99ocp$ = function (datePtr, ticksPtr) {
    datePtr.set_11rb$(ScePspDateTime$Companion_getInstance().invoke_s8cxhz$(ticksPtr.get()));
    return 0;
  };
  sceRtc.prototype.sceRtcGetTick_v99ocp$ = function (datePtr, ticksPtr) {
    ticksPtr.set_s8cxhz$(datePtr.get().tick);
    return 0;
  };
  sceRtc.prototype.sceRtcGetCurrentClock_eadsu9$ = function (date, timezone) {
    date.set_11rb$(ScePspDateTime$Companion_getInstance().invoke_yatgbp$(DateTime.Companion.now().addOffset_za3lpa$(clamp_0(timezone, -600000, 600000))));
    return 0;
  };
  sceRtc.prototype.sceRtcGetCurrentClockLocalTime_am2u8h$ = function (date) {
    date.set_11rb$(ScePspDateTime$Companion_getInstance().invoke_yatgbp$(DateTime.Companion.now().toLocal()));
    return 0;
  };
  sceRtc.prototype.sceRtcTickAddTicks_v522i1$ = function (dst, src, count) {
    dst.set_s8cxhz$(src.get().add(count));
    return 0;
  };
  sceRtc.prototype.sceRtcTickAddMicroseconds_v522i1$ = function (dst, src, count) {
    return this.sceRtcTickAddTicks_v522i1$(dst, src, count);
  };
  sceRtc.prototype.sceRtcTickAddSeconds_v522i1$ = function (dst, src, count) {
    return this.sceRtcTickAddMicroseconds_v522i1$(dst, src, count.multiply(Kotlin.Long.fromInt(1000000)));
  };
  sceRtc.prototype.sceRtcTickAddMinutes_v522i1$ = function (dst, src, count) {
    return this.sceRtcTickAddSeconds_v522i1$(dst, src, count.multiply(Kotlin.Long.fromInt(60)));
  };
  sceRtc.prototype.sceRtcTickAddHours_h1kntu$ = function (dst, src, count) {
    return this.sceRtcTickAddSeconds_v522i1$(dst, src, Kotlin.Long.fromInt(count).multiply(Kotlin.Long.fromInt(3600)));
  };
  sceRtc.prototype._sceRtcTickAddTimeDist_0 = function (dst, src, distance) {
    var srcDate = ScePspDateTime$Companion_getInstance().invoke_s8cxhz$(src.get());
    var newDate = srcDate.date.plus_5t6mhc$(distance);
    dst.set_s8cxhz$(ScePspDateTime$Companion_getInstance().invoke_yatgbp$(newDate, srcDate.microAdjust).tick);
    return 0;
  };
  var TimeDistance_init = $module$klock_js.com.soywiz.klock.TimeDistance;
  sceRtc.prototype.sceRtcTickAddDays_h1kntu$ = function (dst, src, count) {
    return this._sceRtcTickAddTimeDist_0.call(this, dst, src, new TimeDistance_init(void 0, void 0, numberToDouble(count)));
  };
  sceRtc.prototype.sceRtcTickAddWeeks_h1kntu$ = function (dst, src, count) {
    return this._sceRtcTickAddTimeDist_0.call(this, dst, src, new TimeDistance_init(void 0, void 0, numberToDouble(count * 7 | 0)));
  };
  sceRtc.prototype.sceRtcTickAddMonths_h1kntu$ = function (dst, src, count) {
    return this._sceRtcTickAddTimeDist_0.call(this, dst, src, new TimeDistance_init(void 0, count));
  };
  sceRtc.prototype.sceRtcTickAddYears_h1kntu$ = function (dst, src, count) {
    return this._sceRtcTickAddTimeDist_0.call(this, dst, src, new TimeDistance_init(count));
  };
  sceRtc.prototype.sceRtcCompareTick_jfgorw$ = function (tick1, tick2) {
    return tick1.get().compareTo_11rb$(tick2.get());
  };
  sceRtc.prototype.sceRtcGetAccumulativeTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(18809793);
  };
  sceRtc.prototype.sceRtcGetAccumlativeTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(43819955);
  };
  sceRtc.prototype.sceRtcFormatRFC3339_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(77134652);
  };
  sceRtc.prototype.sceRtcSetTime64_t_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(420071835);
  };
  sceRtc.prototype.sceRtcGetLastReincarnatedTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(540863245);
  };
  sceRtc.prototype.sceRtcGetTime_t_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(667179340);
  };
  sceRtc.prototype.sceRtcFormatRFC3339LocalTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(670664003);
  };
  sceRtc.prototype.sceRtcParseRFC3339_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(685894024);
  };
  sceRtc.prototype.sceRtcConvertUtcToLocalTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(881352205);
  };
  sceRtc.prototype.sceRtcGetDosTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(906450279);
  };
  sceRtc.prototype.sceRtcSetTime_t_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(981499080);
  };
  sceRtc.prototype.sceRtcIsLeapYear_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1110473239);
  };
  sceRtc.prototype.sceRtcCheckValid_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1260084866);
  };
  sceRtc.prototype.sceRtcGetLastAdjustedTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1651007128);
  };
  sceRtc.prototype.sceRtcUnregisterCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1785163053);
  };
  sceRtc.prototype.sceRtcConvertLocalTimeToUTC_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2006074018);
  };
  sceRtc.prototype.sceRtcSetWin32FileTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2060340228);
  };
  sceRtc.prototype.sceRtc_7D1FBED3_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2099232467);
  };
  sceRtc.prototype.sceRtcFormatRFC2822LocalTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2112254235);
  };
  sceRtc.prototype.sceRtcIsAlarmed_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2114135500, 0));
  };
  sceRtc.prototype.sceRtc_A93CF7D8_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1455622184, 0));
  };
  sceRtc.prototype.sceRtc_C2DDBEB5_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1025655115, 0));
  };
  sceRtc.prototype.sceRtcFormatRFC2822_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-966544455, 0));
  };
  sceRtc.prototype.sceRtcGetWin32FileTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-816441197, 0));
  };
  sceRtc.prototype.sceRtcParseDateTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-541303018, 0));
  };
  sceRtc.prototype.sceRtcGetTime64_t_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-506905017, 0));
  };
  sceRtc.prototype.sceRtcSetDosTime_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-267980188, 0));
  };
  sceRtc.prototype.sceRtc_F5FCC995_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-167982699, 0));
  };
  sceRtc.prototype.sceRtcRegisterCallback_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-80013107, 0));
  };
  function sceRtc$registerModule$lambda(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcGetCurrentTick_xnxgf8$($receiver.ptr);
    };
  }
  function sceRtc$registerModule$lambda_0(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcGetTickResolution();
    };
  }
  function sceRtc$registerModule$lambda_1(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcGetDayOfWeek_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceRtc$registerModule$lambda_2(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcGetDaysInMonth_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceRtc$registerModule$lambda_3(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcSetTick_v99ocp$($receiver.ptr_n7lexo$(ScePspDateTime$Companion_getInstance()), $receiver.ptr64);
    };
  }
  function sceRtc$registerModule$lambda_4(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcGetTick_v99ocp$($receiver.ptr_n7lexo$(ScePspDateTime$Companion_getInstance()), $receiver.ptr64);
    };
  }
  function sceRtc$registerModule$lambda_5(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcGetCurrentClock_eadsu9$($receiver.ptr_n7lexo$(ScePspDateTime$Companion_getInstance()), $receiver.int);
    };
  }
  function sceRtc$registerModule$lambda_6(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcGetCurrentClockLocalTime_am2u8h$($receiver.ptr_n7lexo$(ScePspDateTime$Companion_getInstance()));
    };
  }
  function sceRtc$registerModule$lambda_7(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcCompareTick_jfgorw$($receiver.ptr64, $receiver.ptr64);
    };
  }
  function sceRtc$registerModule$lambda_8(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcTickAddTicks_v522i1$($receiver.ptr64, $receiver.ptr64, $receiver.long);
    };
  }
  function sceRtc$registerModule$lambda_9(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcTickAddMicroseconds_v522i1$($receiver.ptr64, $receiver.ptr64, $receiver.long);
    };
  }
  function sceRtc$registerModule$lambda_10(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcTickAddSeconds_v522i1$($receiver.ptr64, $receiver.ptr64, $receiver.long);
    };
  }
  function sceRtc$registerModule$lambda_11(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcTickAddMinutes_v522i1$($receiver.ptr64, $receiver.ptr64, $receiver.long);
    };
  }
  function sceRtc$registerModule$lambda_12(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcTickAddHours_h1kntu$($receiver.ptr64, $receiver.ptr64, $receiver.int);
    };
  }
  function sceRtc$registerModule$lambda_13(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcTickAddDays_h1kntu$($receiver.ptr64, $receiver.ptr64, $receiver.int);
    };
  }
  function sceRtc$registerModule$lambda_14(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcTickAddWeeks_h1kntu$($receiver.ptr64, $receiver.ptr64, $receiver.int);
    };
  }
  function sceRtc$registerModule$lambda_15(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcTickAddMonths_h1kntu$($receiver.ptr64, $receiver.ptr64, $receiver.int);
    };
  }
  function sceRtc$registerModule$lambda_16(this$sceRtc) {
    return function ($receiver, it) {
      return this$sceRtc.sceRtcTickAddYears_h1kntu$($receiver.ptr64, $receiver.ptr64, $receiver.int);
    };
  }
  function sceRtc$registerModule$lambda_17(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetAccumulativeTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_18(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetAccumlativeTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_19(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcFormatRFC3339_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_20(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcSetTime64_t_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_21(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetLastReincarnatedTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_22(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetTime_t_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_23(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcFormatRFC3339LocalTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_24(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcParseRFC3339_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_25(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcConvertUtcToLocalTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_26(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetDosTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_27(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcSetTime_t_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_28(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcIsLeapYear_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_29(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcCheckValid_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_30(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetLastAdjustedTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_31(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcUnregisterCallback_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_32(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcConvertLocalTimeToUTC_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_33(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcSetWin32FileTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_34(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtc_7D1FBED3_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_35(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcFormatRFC2822LocalTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_36(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcIsAlarmed_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_37(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtc_A93CF7D8_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_38(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtc_C2DDBEB5_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_39(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcFormatRFC2822_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_40(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetWin32FileTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_41(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcParseDateTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_42(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcGetTime64_t_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_43(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcSetDosTime_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_44(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtc_F5FCC995_xt3zvs$(it);
      return Unit;
    };
  }
  function sceRtc$registerModule$lambda_45(this$sceRtc) {
    return function (it) {
      this$sceRtc.sceRtcRegisterCallback_xt3zvs$(it);
      return Unit;
    };
  }
  sceRtc.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceRtcGetCurrentTick', Kotlin.Long.fromInt(1065015143), 150, void 0, sceRtc$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceRtcGetTickResolution', new Kotlin.Long(-1004787629, 0), 150, void 0, sceRtc$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceRtcGetDayOfWeek', Kotlin.Long.fromInt(1467116481), 150, void 0, sceRtc$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('sceRtcGetDaysInMonth', Kotlin.Long.fromInt(99562028), 150, void 0, sceRtc$registerModule$lambda_2(this));
    this.registerFunctionInt_9l82lv$('sceRtcSetTick', Kotlin.Long.fromInt(2127732288), 150, void 0, sceRtc$registerModule$lambda_3(this));
    this.registerFunctionInt_9l82lv$('sceRtcGetTick', Kotlin.Long.fromInt(1878264524), 150, void 0, sceRtc$registerModule$lambda_4(this));
    this.registerFunctionInt_9l82lv$('sceRtcGetCurrentClock', Kotlin.Long.fromInt(1291474864), 150, void 0, sceRtc$registerModule$lambda_5(this));
    this.registerFunctionInt_9l82lv$('sceRtcGetCurrentClockLocalTime', new Kotlin.Long(-406684389, 0), 150, void 0, sceRtc$registerModule$lambda_6(this));
    this.registerFunctionInt_9l82lv$('sceRtcCompareTick', new Kotlin.Long(-1630491001, 0), 150, void 0, sceRtc$registerModule$lambda_7(this));
    this.registerFunctionInt_9l82lv$('sceRtcTickAddTicks', Kotlin.Long.fromInt(1156865541), 150, void 0, sceRtc$registerModule$lambda_8(this));
    this.registerFunctionInt_9l82lv$('sceRtcTickAddMicroseconds', Kotlin.Long.fromInt(651319901), 150, void 0, sceRtc$registerModule$lambda_9(this));
    this.registerFunctionInt_9l82lv$('sceRtcTickAddSeconds', new Kotlin.Long(-224088091, 0), 150, void 0, sceRtc$registerModule$lambda_10(this));
    this.registerFunctionInt_9l82lv$('sceRtcTickAddMinutes', new Kotlin.Long(-429892662, 0), 150, void 0, sceRtc$registerModule$lambda_11(this));
    this.registerFunctionInt_9l82lv$('sceRtcTickAddHours', Kotlin.Long.fromInt(651665994), 150, void 0, sceRtc$registerModule$lambda_12(this));
    this.registerFunctionInt_9l82lv$('sceRtcTickAddDays', new Kotlin.Long(-451196038, 0), 150, void 0, sceRtc$registerModule$lambda_13(this));
    this.registerFunctionInt_9l82lv$('sceRtcTickAddWeeks', new Kotlin.Long(-818271064, 0), 150, void 0, sceRtc$registerModule$lambda_14(this));
    this.registerFunctionInt_9l82lv$('sceRtcTickAddMonths', new Kotlin.Long(-604549349, 0), 150, void 0, sceRtc$registerModule$lambda_15(this));
    this.registerFunctionInt_9l82lv$('sceRtcTickAddYears', Kotlin.Long.fromInt(1115958391), 150, void 0, sceRtc$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetAccumulativeTime', Kotlin.Long.fromInt(18809793), 150, void 0, sceRtc$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetAccumlativeTime', Kotlin.Long.fromInt(43819955), 150, void 0, sceRtc$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceRtcFormatRFC3339', Kotlin.Long.fromInt(77134652), 150, void 0, sceRtc$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceRtcSetTime64_t', Kotlin.Long.fromInt(420071835), 150, void 0, sceRtc$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetLastReincarnatedTime', Kotlin.Long.fromInt(540863245), 150, void 0, sceRtc$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetTime_t', Kotlin.Long.fromInt(667179340), 150, void 0, sceRtc$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceRtcFormatRFC3339LocalTime', Kotlin.Long.fromInt(670664003), 150, void 0, sceRtc$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceRtcParseRFC3339', Kotlin.Long.fromInt(685894024), 150, void 0, sceRtc$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('sceRtcConvertUtcToLocalTime', Kotlin.Long.fromInt(881352205), 150, void 0, sceRtc$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetDosTime', Kotlin.Long.fromInt(906450279), 150, void 0, sceRtc$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('sceRtcSetTime_t', Kotlin.Long.fromInt(981499080), 150, void 0, sceRtc$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('sceRtcIsLeapYear', Kotlin.Long.fromInt(1110473239), 150, void 0, sceRtc$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('sceRtcCheckValid', Kotlin.Long.fromInt(1260084866), 150, void 0, sceRtc$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetLastAdjustedTime', Kotlin.Long.fromInt(1651007128), 150, void 0, sceRtc$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('sceRtcUnregisterCallback', Kotlin.Long.fromInt(1785163053), 150, void 0, sceRtc$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('sceRtcConvertLocalTimeToUTC', Kotlin.Long.fromInt(2006074018), 150, void 0, sceRtc$registerModule$lambda_32(this));
    this.registerFunctionRaw_gh35x6$('sceRtcSetWin32FileTime', Kotlin.Long.fromInt(2060340228), 150, void 0, sceRtc$registerModule$lambda_33(this));
    this.registerFunctionRaw_gh35x6$('sceRtc_7D1FBED3', Kotlin.Long.fromInt(2099232467), 150, void 0, sceRtc$registerModule$lambda_34(this));
    this.registerFunctionRaw_gh35x6$('sceRtcFormatRFC2822LocalTime', Kotlin.Long.fromInt(2112254235), 150, void 0, sceRtc$registerModule$lambda_35(this));
    this.registerFunctionRaw_gh35x6$('sceRtcIsAlarmed', new Kotlin.Long(-2114135500, 0), 150, void 0, sceRtc$registerModule$lambda_36(this));
    this.registerFunctionRaw_gh35x6$('sceRtc_A93CF7D8', new Kotlin.Long(-1455622184, 0), 150, void 0, sceRtc$registerModule$lambda_37(this));
    this.registerFunctionRaw_gh35x6$('sceRtc_C2DDBEB5', new Kotlin.Long(-1025655115, 0), 150, void 0, sceRtc$registerModule$lambda_38(this));
    this.registerFunctionRaw_gh35x6$('sceRtcFormatRFC2822', new Kotlin.Long(-966544455, 0), 150, void 0, sceRtc$registerModule$lambda_39(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetWin32FileTime', new Kotlin.Long(-816441197, 0), 150, void 0, sceRtc$registerModule$lambda_40(this));
    this.registerFunctionRaw_gh35x6$('sceRtcParseDateTime', new Kotlin.Long(-541303018, 0), 150, void 0, sceRtc$registerModule$lambda_41(this));
    this.registerFunctionRaw_gh35x6$('sceRtcGetTime64_t', new Kotlin.Long(-506905017, 0), 150, void 0, sceRtc$registerModule$lambda_42(this));
    this.registerFunctionRaw_gh35x6$('sceRtcSetDosTime', new Kotlin.Long(-267980188, 0), 150, void 0, sceRtc$registerModule$lambda_43(this));
    this.registerFunctionRaw_gh35x6$('sceRtc_F5FCC995', new Kotlin.Long(-167982699, 0), 150, void 0, sceRtc$registerModule$lambda_44(this));
    this.registerFunctionRaw_gh35x6$('sceRtcRegisterCallback', new Kotlin.Long(-80013107, 0), 150, void 0, sceRtc$registerModule$lambda_45(this));
  };
  sceRtc.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceRtc',
    interfaces: [SceModule]
  };
  function sceSasCore(emulator) {
    sceSasCore$Companion_getInstance();
    SceModule.call(this, emulator, 'sceSasCore', 1073807377, 'sc_sascore.prx', 'sceSAScore');
    this.core_0 = new sceSasCore$SasCore();
  }
  function sceSasCore$Companion() {
    sceSasCore$Companion_instance = this;
    this.PSP_SAS_VOL_MAX = 4096;
    this.PSP_SAS_PITCH_MIN = 1;
    this.PSP_SAS_PITCH_BASE = 4096;
    this.PSP_SAS_PITCH_MAX = 16384;
    this.PSP_SAS_VOICES_MAX = 32;
    this.PSP_SAS_GRAIN_SAMPLES = 256;
    this.PSP_SAS_LOOP_MODE_OFF = 0;
    this.PSP_SAS_LOOP_MODE_ON = 1;
    this.PSP_SAS_NOISE_FREQ_MAX = 63;
    this.PSP_SAS_ENVELOPE_HEIGHT_MAX = 1073741824;
    this.PSP_SAS_ENVELOPE_FREQ_MAX = 2147483647;
    this.PSP_SAS_ADSR_CURVE_MODE_LINEAR_INCREASE = 0;
    this.PSP_SAS_ADSR_CURVE_MODE_LINEAR_DECREASE = 1;
    this.PSP_SAS_ADSR_CURVE_MODE_LINEAR_BENT = 2;
    this.PSP_SAS_ADSR_CURVE_MODE_EXPONENT_DECREASE = 3;
    this.PSP_SAS_ADSR_CURVE_MODE_EXPONENT_INCREASE = 4;
    this.PSP_SAS_ADSR_CURVE_MODE_DIRECT = 5;
    this.PSP_SAS_ADSR_ATTACK = 1;
    this.PSP_SAS_ADSR_DECAY = 2;
    this.PSP_SAS_ADSR_SUSTAIN = 4;
    this.PSP_SAS_ADSR_RELEASE = 8;
    this.PSP_SAS_OUTPUTMODE_STEREO = 0;
    this.PSP_SAS_OUTPUTMODE_MONO = 1;
    this.PSP_SAS_EFFECT_TYPE_OFF = -1;
    this.PSP_SAS_EFFECT_TYPE_ROOM = 0;
    this.PSP_SAS_EFFECT_TYPE_UNK1 = 1;
    this.PSP_SAS_EFFECT_TYPE_UNK2 = 2;
    this.PSP_SAS_EFFECT_TYPE_UNK3 = 3;
    this.PSP_SAS_EFFECT_TYPE_HALL = 4;
    this.PSP_SAS_EFFECT_TYPE_SPACE = 5;
    this.PSP_SAS_EFFECT_TYPE_ECHO = 6;
    this.PSP_SAS_EFFECT_TYPE_DELAY = 7;
    this.PSP_SAS_EFFECT_TYPE_PIPE = 8;
  }
  sceSasCore$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var sceSasCore$Companion_instance = null;
  function sceSasCore$Companion_getInstance() {
    if (sceSasCore$Companion_instance === null) {
      new sceSasCore$Companion();
    }
    return sceSasCore$Companion_instance;
  }
  sceSasCore.prototype.__sceSasCoreWithMix_tjonv8$ = function (sas, sasInOut, leftVolume, rightVolume) {
    var $this = this.logger;
    var level = LogLevel.TRACE;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, '__sceSasCoreWithMix');
    }
    return 0;
  };
  sceSasCore.prototype.__sceSasCore_vux9f0$ = function (sas, sasInOut) {
    return this.__sceSasCoreWithMix_tjonv8$(sas, sasInOut, 4096, 4096);
  };
  sceSasCore.prototype.__sceSasInit_4qozqa$ = function (sasCorePointer, grainSamples, maxVoices, outputMode, sampleRate) {
    if (sampleRate !== 44100)
      sceKernelException(SceKernelErrors_getInstance().ERROR_SAS_INVALID_SAMPLE_RATE);
    if (maxVoices < 1 || maxVoices > sceSasCore$Companion_getInstance().PSP_SAS_VOICES_MAX)
      sceKernelException(SceKernelErrors_getInstance().ERROR_SAS_INVALID_MAX_VOICES);
    if (outputMode !== sceSasCore$OutputMode$STEREO_getInstance().id && outputMode !== sceSasCore$OutputMode$MULTICHANNEL_getInstance().id)
      sceKernelException(SceKernelErrors_getInstance().ERROR_SAS_INVALID_OUTPUT_MODE);
    this.core_0.grainSamples = grainSamples;
    this.core_0.maxVoices = maxVoices;
    this.core_0.outputMode = sceSasCore$OutputMode$Companion_getInstance().invoke_za3lpa$(outputMode);
    this.core_0.sampleRate = sampleRate;
    this.core_0.initialized = true;
    return 0;
  };
  sceSasCore.prototype.getVoice_0 = function (sas, voiceId) {
    var tmp$;
    return (tmp$ = getOrNull_0(this.core_0.voices, voiceId)) != null ? tmp$ : sceKernelException(SceKernelErrors_getInstance().ERROR_SAS_INVALID_VOICE);
  };
  sceSasCore.prototype.__sceSasSetADSR_ui44o2$ = function (sasCorePointer, voiceId, flags, attackRate, decayRate, sustainRate, releaseRate) {
    var voice = this.getVoice_0(sasCorePointer, voiceId);
    if (hasFlag(flags, sceSasCore$AdsrFlags_getInstance().HasAttack))
      voice.envelope.attackRate = attackRate;
    if (hasFlag(flags, sceSasCore$AdsrFlags_getInstance().HasDecay))
      voice.envelope.decayRate = decayRate;
    if (hasFlag(flags, sceSasCore$AdsrFlags_getInstance().HasSustain))
      voice.envelope.sustainRate = sustainRate;
    if (hasFlag(flags, sceSasCore$AdsrFlags_getInstance().HasRelease))
      voice.envelope.releaseRate = releaseRate;
    var $this = this.logger;
    var level = LogLevel.WARN;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, '__sceSasSetADSR');
    }
    return 0;
  };
  sceSasCore.prototype.__sceSasGetEndFlag_za3lpa$ = function (sas) {
    var tmp$;
    var endFlag = 0;
    tmp$ = withIndex_0(this.core_0.voices).iterator();
    while (tmp$.hasNext()) {
      var tmp$_0 = tmp$.next();
      var i = tmp$_0.component1()
      , voice = tmp$_0.component2();
      if (voice.ended)
        endFlag = endFlag | 1 << i;
    }
    return endFlag;
  };
  sceSasCore.prototype.__sceSasSetVolume_mbbjvw$ = function (sas, voice, leftVolume, rightVolume, effectLeftVolume, effectRightVolume) {
    var v = this.getVoice_0(sas, voice);
    v.leftVolume = leftVolume * 8 | 0;
    v.rightVolume = rightVolume * 8 | 0;
    v.effectLeftVolume = effectLeftVolume * 8 | 0;
    v.effectRightVolume = effectRightVolume * 8 | 0;
    return 0;
  };
  sceSasCore.prototype.__sceSasSetKeyOnOff_ydzd23$ = function (sas, voice, on) {
    var v = this.getVoice_0(sas, voice);
    if (v.paused === on)
      return SceKernelErrors_getInstance().ERROR_SAS_VOICE_PAUSED;
    v.setOn_6taknv$(on);
    return 0;
  };
  sceSasCore.prototype.__sceSasRevType_vux9f0$ = function (sas, type) {
    this.core_0.waveformEffectType = sceSasCore$WaveformEffectType$Companion_getInstance().invoke_za3lpa$(type);
    return 0;
  };
  sceSasCore.prototype.__sceSasSetPitch_qt1dr2$ = function (sas, voice, pitch) {
    this.getVoice_0(sas, voice).pitch = pitch;
    return 0;
  };
  sceSasCore.prototype.__sceSasSetKeyOn_vux9f0$ = function (sas, voice) {
    return this.__sceSasSetKeyOnOff_ydzd23$(sas, voice, true);
  };
  sceSasCore.prototype.__sceSasSetKeyOff_vux9f0$ = function (sas, voice) {
    return this.__sceSasSetKeyOnOff_ydzd23$(sas, voice, false);
  };
  sceSasCore.prototype.__sceSasSetSL_qt1dr2$ = function (sas, voice, level) {
    this.getVoice_0(sas, voice).envelope.sustainLevel = level;
    return 0;
  };
  sceSasCore.prototype.__sceSasSetNoise_qt1dr2$ = function (sas, voice, freq) {
    this.getVoice_0(sas, voice).noise = freq;
    return 0;
  };
  sceSasCore.prototype.__sceSasSetGrain_vux9f0$ = function (sas, grain) {
    this.core_0.grainSamples = grain;
    return 0;
  };
  sceSasCore.prototype.__sceSasSetPause_ydzd23$ = function (sas, voiceBits, setPause) {
    for (var n = 0; n < 32; n++) {
      if (hasFlag(voiceBits, 1 << n))
        this.core_0.voices[n].paused = true;
    }
    return 0;
  };
  sceSasCore.prototype.__sceSasSetVoice_lzh7qc$ = function (sas, voice, vagAddr, size, loopCount) {
    var $this = this.logger;
    var level = LogLevel.WARN;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, '__sceSasSetVoice: ' + get_hex(vagAddr.addr) + ', size=' + size + ', loopmode=' + loopCount);
    }
    var v = this.getVoice_0(sas, voice);
    v.setAdpcm_bmhzp$(readSlice(openSync_1(vagAddr), Kotlin.Long.fromInt(size)), loopCount);
    return 0;
  };
  sceSasCore.prototype.__sceSasSetVoicePCM_lzh7qc$ = function (sas, voice, pcmAddr, size, loopCount) {
    var $this = this.logger;
    var level = LogLevel.WARN;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, '__sceSasSetVoicePCM: ' + get_hex(pcmAddr.addr) + ', size=' + size + ', loopmode=' + loopCount);
    }
    var v = this.getVoice_0(sas, voice);
    v.setPCM_bmhzp$(readSlice(openSync_1(pcmAddr), Kotlin.Long.fromInt(size)), loopCount);
    return 0;
  };
  sceSasCore.prototype.__sceSasSetSteepWave_qt1dr2$ = function (sas, voice, steepWave) {
    this.getVoice_0(sas, voice).steepWave = steepWave;
    return 0;
  };
  sceSasCore.prototype.__sceSasSetADSRmode_ui44o2$ = function (sas, voice, flag, attackType, decayType, sustainType, releaseType) {
    var envelope = this.getVoice_0(sas, voice).envelope;
    if ((flag & 1) !== 0)
      envelope.attackCurveType = attackType;
    if ((flag & 2) !== 0)
      envelope.decayCurveType = decayType;
    if ((flag & 4) !== 0)
      envelope.sustainCurveType = sustainType;
    if ((flag & 8) !== 0)
      envelope.releaseCurveType = releaseType;
    return 0;
  };
  sceSasCore.prototype.__sceSasSetOutputmode_vux9f0$ = function (sas, outputMode) {
    this.core_0.outputMode = sceSasCore$OutputMode$Companion_getInstance().invoke_za3lpa$(outputMode);
    return 0;
  };
  sceSasCore.prototype.__sceSasGetGrain_za3lpa$ = function (sas) {
    return this.core_0.grainSamples;
  };
  sceSasCore.prototype.__sceSasRevParam_qt1dr2$ = function (sas, delay, feedback) {
    this.core_0.waveformEffectDelay = delay;
    this.core_0.waveformEffectFeedback = delay;
    return 0;
  };
  sceSasCore.prototype.__sceSasRevEVOL_qt1dr2$ = function (sas, lvol, rvol) {
    this.core_0.waveformEffectLeftVol = lvol;
    this.core_0.waveformEffectRightVol = rvol;
    return 0;
  };
  sceSasCore.prototype.__sceSasRevVON_qt1dr2$ = function (sas, dry, wet) {
    this.core_0.waveformEffectIsDry = dry > 0;
    this.core_0.waveformEffectIsWet = wet > 0;
    return 0;
  };
  sceSasCore.prototype.__sceSasGetOutputmode_za3lpa$ = function (sas) {
    return this.core_0.outputMode.id;
  };
  sceSasCore.prototype.__sceSasSetTrianglarWave_qt1dr2$ = function (sas, voice, triangularWave) {
    this.getVoice_0(sas, voice).triangularWave = triangularWave;
    return 0;
  };
  sceSasCore.prototype.__sceSasSetSimpleADSR_tjonv8$ = function (sas, voice, adsrEnv1, adsrEnv2) {
    var v = this.getVoice_0(sas, voice);
    var envelope = v.envelope;
    var e1 = adsrEnv1 & 65535;
    var d2 = adsrEnv2 & 65535;
    envelope.sustainLevel = this.getSimpleSustainLevel_za3lpa$(e1);
    envelope.decayRate = this.getSimpleDecayRate_za3lpa$(e1);
    envelope.decayCurveType = sceSasCore$Companion_getInstance().PSP_SAS_ADSR_CURVE_MODE_EXPONENT_DECREASE;
    envelope.attackRate = this.getSimpleAttackRate_za3lpa$(e1);
    envelope.attackCurveType = this.getSimpleAttackCurveType_za3lpa$(e1);
    envelope.releaseRate = this.getSimpleReleaseRate_za3lpa$(d2);
    envelope.releaseCurveType = this.getSimpleReleaseCurveType_za3lpa$(d2);
    envelope.sustainRate = this.getSimpleSustainRate_za3lpa$(d2);
    envelope.sustainCurveType = this.getSimpleSustainCurveType_za3lpa$(d2);
    return 0;
  };
  sceSasCore.prototype.__sceSasGetPauseFlag_za3lpa$ = function (sas) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var pauseFlag = 0;
    tmp$ = get_indices(this.core_0.voices);
    tmp$_0 = tmp$.first;
    tmp$_1 = tmp$.last;
    tmp$_2 = tmp$.step;
    for (var i = tmp$_0; i <= tmp$_1; i += tmp$_2) {
      if (this.core_0.voices[i].paused)
        pauseFlag = pauseFlag | 1 << i;
    }
    return pauseFlag;
  };
  sceSasCore.prototype.__sceSasGetEnvelopeHeight_vux9f0$ = function (sas, voice) {
    return this.core_0.voices[voice].envelope.height;
  };
  sceSasCore.prototype.__sceSasGetAllEnvelopeHeights_130naz$ = function (sas, heights) {
    for (var n = 0; n < 32; n++)
      heights.set_vux9f0$(n, this.core_0.voices[n].height);
    return 0;
  };
  function sceSasCore$registerModule$lambda(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasInit_4qozqa$($receiver.int, $receiver.int, $receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_0(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetADSR_ui44o2$($receiver.int, $receiver.int, $receiver.int, $receiver.int, $receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_1(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasGetEndFlag_za3lpa$($receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_2(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasRevType_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_3(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetVolume_mbbjvw$($receiver.int, $receiver.int, $receiver.int, $receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_4(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasCoreWithMix_tjonv8$($receiver.int, $receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_5(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasCore_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_6(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetPitch_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_7(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetKeyOn_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_8(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetKeyOff_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_9(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetSL_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_10(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasGetAllEnvelopeHeights_130naz$($receiver.int, $receiver.ptr32);
    };
  }
  function sceSasCore$registerModule$lambda_11(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasRevParam_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_12(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasGetPauseFlag_za3lpa$($receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_13(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasGetEnvelopeHeight_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_14(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetPause_ydzd23$($receiver.int, $receiver.int, $receiver.bool);
    };
  }
  function sceSasCore$registerModule$lambda_15(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetVoice_lzh7qc$($receiver.int, $receiver.int, $receiver.ptr, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_16(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetADSRmode_ui44o2$($receiver.int, $receiver.int, $receiver.int, $receiver.int, $receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_17(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetTrianglarWave_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_18(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetNoise_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_19(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasGetGrain_za3lpa$($receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_20(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetSimpleADSR_tjonv8$($receiver.int, $receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_21(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetGrain_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_22(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasRevEVOL_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_23(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetSteepWave_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_24(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasGetOutputmode_za3lpa$($receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_25(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetVoicePCM_lzh7qc$($receiver.int, $receiver.int, $receiver.ptr, $receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_26(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasSetOutputmode_vux9f0$($receiver.int, $receiver.int);
    };
  }
  function sceSasCore$registerModule$lambda_27(this$sceSasCore) {
    return function ($receiver, it) {
      return this$sceSasCore.__sceSasRevVON_qt1dr2$($receiver.int, $receiver.int, $receiver.int);
    };
  }
  sceSasCore.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('__sceSasInit', Kotlin.Long.fromInt(1115130527), 150, void 0, sceSasCore$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetADSR', Kotlin.Long.fromInt(26945003), 150, void 0, sceSasCore$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('__sceSasGetEndFlag', Kotlin.Long.fromInt(1755605909), 150, void 0, sceSasCore$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('__sceSasRevType', Kotlin.Long.fromInt(869575479), 150, void 0, sceSasCore$registerModule$lambda_2(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetVolume', Kotlin.Long.fromInt(1141680088), 150, void 0, sceSasCore$registerModule$lambda_3(this));
    this.registerFunctionInt_9l82lv$('__sceSasCoreWithMix', Kotlin.Long.fromInt(1352748540), 150, void 0, sceSasCore$registerModule$lambda_4(this));
    this.registerFunctionInt_9l82lv$('__sceSasCore', new Kotlin.Long(-1554473599, 0), 150, void 0, sceSasCore$registerModule$lambda_5(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetPitch', new Kotlin.Long(-1383804033, 0), 150, void 0, sceSasCore$registerModule$lambda_6(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetKeyOn', Kotlin.Long.fromInt(1995446986), 150, void 0, sceSasCore$registerModule$lambda_7(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetKeyOff', new Kotlin.Long(-1597034588, 0), 150, void 0, sceSasCore$registerModule$lambda_8(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetSL', Kotlin.Long.fromInt(1603611126), 150, void 0, sceSasCore$registerModule$lambda_9(this));
    this.registerFunctionInt_9l82lv$('__sceSasGetAllEnvelopeHeights', Kotlin.Long.fromInt(133532708), 150, void 0, sceSasCore$registerModule$lambda_10(this));
    this.registerFunctionInt_9l82lv$('__sceSasRevParam', Kotlin.Long.fromInt(645557714), 150, void 0, sceSasCore$registerModule$lambda_11(this));
    this.registerFunctionInt_9l82lv$('__sceSasGetPauseFlag', Kotlin.Long.fromInt(747530931), 150, void 0, sceSasCore$registerModule$lambda_12(this));
    this.registerFunctionInt_9l82lv$('__sceSasGetEnvelopeHeight', Kotlin.Long.fromInt(1957582890), 150, void 0, sceSasCore$registerModule$lambda_13(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetPause', Kotlin.Long.fromInt(2021459157), 150, void 0, sceSasCore$registerModule$lambda_14(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetVoice', new Kotlin.Long(-1718337399, 0), 150, void 0, sceSasCore$registerModule$lambda_15(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetADSRmode', new Kotlin.Long(-1631361174, 0), 150, void 0, sceSasCore$registerModule$lambda_16(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetTrianglarWave', new Kotlin.Long(-1573729306, 0), 150, void 0, sceSasCore$registerModule$lambda_17(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetNoise', new Kotlin.Long(-1218049501, 0), 150, void 0, sceSasCore$registerModule$lambda_18(this));
    this.registerFunctionInt_9l82lv$('__sceSasGetGrain', new Kotlin.Long(-1122912318, 0), 150, void 0, sceSasCore$registerModule$lambda_19(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetSimpleADSR', new Kotlin.Long(-875737223, 0), 150, void 0, sceSasCore$registerModule$lambda_20(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetGrain', new Kotlin.Long(-773808098, 0), 150, void 0, sceSasCore$registerModule$lambda_21(this));
    this.registerFunctionInt_9l82lv$('__sceSasRevEVOL', new Kotlin.Long(-710792759, 0), 150, void 0, sceSasCore$registerModule$lambda_22(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetSteepWave', new Kotlin.Long(-705971251, 0), 150, void 0, sceSasCore$registerModule$lambda_23(this));
    this.registerFunctionInt_9l82lv$('__sceSasGetOutputmode', new Kotlin.Long(-512364698, 0), 150, void 0, sceSasCore$registerModule$lambda_24(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetVoicePCM', new Kotlin.Long(-506620575, 0), 150, void 0, sceSasCore$registerModule$lambda_25(this));
    this.registerFunctionInt_9l82lv$('__sceSasSetOutputmode', new Kotlin.Long(-397033610, 0), 150, void 0, sceSasCore$registerModule$lambda_26(this));
    this.registerFunctionInt_9l82lv$('__sceSasRevVON', new Kotlin.Long(-108809850, 0), 150, void 0, sceSasCore$registerModule$lambda_27(this));
  };
  function sceSasCore$WaveformEffectType(name, ordinal, id) {
    Enum.call(this);
    this.id_1hf4ph$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function sceSasCore$WaveformEffectType_initFields() {
    sceSasCore$WaveformEffectType_initFields = function () {
    };
    sceSasCore$WaveformEffectType$OFF_instance = new sceSasCore$WaveformEffectType('OFF', 0, -1);
    sceSasCore$WaveformEffectType$ROOM_instance = new sceSasCore$WaveformEffectType('ROOM', 1, 0);
    sceSasCore$WaveformEffectType$UNK1_instance = new sceSasCore$WaveformEffectType('UNK1', 2, 1);
    sceSasCore$WaveformEffectType$UNK2_instance = new sceSasCore$WaveformEffectType('UNK2', 3, 2);
    sceSasCore$WaveformEffectType$UNK3_instance = new sceSasCore$WaveformEffectType('UNK3', 4, 3);
    sceSasCore$WaveformEffectType$HALL_instance = new sceSasCore$WaveformEffectType('HALL', 5, 4);
    sceSasCore$WaveformEffectType$SPACE_instance = new sceSasCore$WaveformEffectType('SPACE', 6, 5);
    sceSasCore$WaveformEffectType$ECHO_instance = new sceSasCore$WaveformEffectType('ECHO', 7, 6);
    sceSasCore$WaveformEffectType$DELAY_instance = new sceSasCore$WaveformEffectType('DELAY', 8, 7);
    sceSasCore$WaveformEffectType$PIPE_instance = new sceSasCore$WaveformEffectType('PIPE', 9, 8);
    sceSasCore$WaveformEffectType$Companion_getInstance();
  }
  Object.defineProperty(sceSasCore$WaveformEffectType.prototype, 'id', {
    get: function () {
      return this.id_1hf4ph$_0;
    }
  });
  var sceSasCore$WaveformEffectType$OFF_instance;
  function sceSasCore$WaveformEffectType$OFF_getInstance() {
    sceSasCore$WaveformEffectType_initFields();
    return sceSasCore$WaveformEffectType$OFF_instance;
  }
  var sceSasCore$WaveformEffectType$ROOM_instance;
  function sceSasCore$WaveformEffectType$ROOM_getInstance() {
    sceSasCore$WaveformEffectType_initFields();
    return sceSasCore$WaveformEffectType$ROOM_instance;
  }
  var sceSasCore$WaveformEffectType$UNK1_instance;
  function sceSasCore$WaveformEffectType$UNK1_getInstance() {
    sceSasCore$WaveformEffectType_initFields();
    return sceSasCore$WaveformEffectType$UNK1_instance;
  }
  var sceSasCore$WaveformEffectType$UNK2_instance;
  function sceSasCore$WaveformEffectType$UNK2_getInstance() {
    sceSasCore$WaveformEffectType_initFields();
    return sceSasCore$WaveformEffectType$UNK2_instance;
  }
  var sceSasCore$WaveformEffectType$UNK3_instance;
  function sceSasCore$WaveformEffectType$UNK3_getInstance() {
    sceSasCore$WaveformEffectType_initFields();
    return sceSasCore$WaveformEffectType$UNK3_instance;
  }
  var sceSasCore$WaveformEffectType$HALL_instance;
  function sceSasCore$WaveformEffectType$HALL_getInstance() {
    sceSasCore$WaveformEffectType_initFields();
    return sceSasCore$WaveformEffectType$HALL_instance;
  }
  var sceSasCore$WaveformEffectType$SPACE_instance;
  function sceSasCore$WaveformEffectType$SPACE_getInstance() {
    sceSasCore$WaveformEffectType_initFields();
    return sceSasCore$WaveformEffectType$SPACE_instance;
  }
  var sceSasCore$WaveformEffectType$ECHO_instance;
  function sceSasCore$WaveformEffectType$ECHO_getInstance() {
    sceSasCore$WaveformEffectType_initFields();
    return sceSasCore$WaveformEffectType$ECHO_instance;
  }
  var sceSasCore$WaveformEffectType$DELAY_instance;
  function sceSasCore$WaveformEffectType$DELAY_getInstance() {
    sceSasCore$WaveformEffectType_initFields();
    return sceSasCore$WaveformEffectType$DELAY_instance;
  }
  var sceSasCore$WaveformEffectType$PIPE_instance;
  function sceSasCore$WaveformEffectType$PIPE_getInstance() {
    sceSasCore$WaveformEffectType_initFields();
    return sceSasCore$WaveformEffectType$PIPE_instance;
  }
  function sceSasCore$WaveformEffectType$Companion() {
    sceSasCore$WaveformEffectType$Companion_instance = this;
    SmallCompanion2.call(this, sceSasCore$WaveformEffectType$values());
  }
  sceSasCore$WaveformEffectType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [SmallCompanion2]
  };
  var sceSasCore$WaveformEffectType$Companion_instance = null;
  function sceSasCore$WaveformEffectType$Companion_getInstance() {
    sceSasCore$WaveformEffectType_initFields();
    if (sceSasCore$WaveformEffectType$Companion_instance === null) {
      new sceSasCore$WaveformEffectType$Companion();
    }
    return sceSasCore$WaveformEffectType$Companion_instance;
  }
  sceSasCore$WaveformEffectType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WaveformEffectType',
    interfaces: [IdEnum, Enum]
  };
  function sceSasCore$WaveformEffectType$values() {
    return [sceSasCore$WaveformEffectType$OFF_getInstance(), sceSasCore$WaveformEffectType$ROOM_getInstance(), sceSasCore$WaveformEffectType$UNK1_getInstance(), sceSasCore$WaveformEffectType$UNK2_getInstance(), sceSasCore$WaveformEffectType$UNK3_getInstance(), sceSasCore$WaveformEffectType$HALL_getInstance(), sceSasCore$WaveformEffectType$SPACE_getInstance(), sceSasCore$WaveformEffectType$ECHO_getInstance(), sceSasCore$WaveformEffectType$DELAY_getInstance(), sceSasCore$WaveformEffectType$PIPE_getInstance()];
  }
  sceSasCore$WaveformEffectType.values = sceSasCore$WaveformEffectType$values;
  function sceSasCore$WaveformEffectType$valueOf(name) {
    switch (name) {
      case 'OFF':
        return sceSasCore$WaveformEffectType$OFF_getInstance();
      case 'ROOM':
        return sceSasCore$WaveformEffectType$ROOM_getInstance();
      case 'UNK1':
        return sceSasCore$WaveformEffectType$UNK1_getInstance();
      case 'UNK2':
        return sceSasCore$WaveformEffectType$UNK2_getInstance();
      case 'UNK3':
        return sceSasCore$WaveformEffectType$UNK3_getInstance();
      case 'HALL':
        return sceSasCore$WaveformEffectType$HALL_getInstance();
      case 'SPACE':
        return sceSasCore$WaveformEffectType$SPACE_getInstance();
      case 'ECHO':
        return sceSasCore$WaveformEffectType$ECHO_getInstance();
      case 'DELAY':
        return sceSasCore$WaveformEffectType$DELAY_getInstance();
      case 'PIPE':
        return sceSasCore$WaveformEffectType$PIPE_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.modules.sceSasCore.WaveformEffectType.' + name);
    }
  }
  sceSasCore$WaveformEffectType.valueOf_61zpoe$ = sceSasCore$WaveformEffectType$valueOf;
  function sceSasCore$SasCore() {
    this.initialized = false;
    this.grainSamples = 0;
    this.maxVoices = 32;
    this.outputMode = sceSasCore$OutputMode$STEREO_getInstance();
    this.sampleRate = 44100;
    this.delay = 0;
    this.feedback = 0;
    this.endFlags = 0;
    this.waveformEffectType = sceSasCore$WaveformEffectType$OFF_getInstance();
    this.waveformEffectIsDry = false;
    this.waveformEffectIsWet = false;
    this.leftVolume = sceSasCore$Companion_getInstance().PSP_SAS_VOL_MAX;
    this.rightVolume = sceSasCore$Companion_getInstance().PSP_SAS_VOL_MAX;
    var array = Array_0(32);
    var tmp$;
    tmp$ = array.length - 1 | 0;
    for (var i = 0; i <= tmp$; i++) {
      array[i] = new sceSasCore$Voice(i);
    }
    this.voices = array;
    this.bufferTempArray = ArrayList_init();
    this.waveformEffectDelay = 0;
    this.waveformEffectFeedback = 0;
    this.waveformEffectLeftVol = 0;
    this.waveformEffectRightVol = 0;
  }
  sceSasCore$SasCore.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SasCore',
    interfaces: []
  };
  function sceSasCore$SoundSource() {
  }
  sceSasCore$SoundSource.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SoundSource',
    interfaces: []
  };
  function sceSasCore$Sample(left, right) {
    this.left = left;
    this.right = right;
  }
  sceSasCore$Sample.prototype.set_lu1900$ = function (left, right) {
    this.left = left;
    this.right = right;
    return this;
  };
  sceSasCore$Sample.prototype.scale_lu1900$ = function (leftScale, rightScale) {
    this.left = this.left * leftScale;
    this.right = this.right * rightScale;
  };
  sceSasCore$Sample.prototype.addScaled_us8kyo$ = function (sample, leftScale, rightScale) {
    this.left = this.left + sample.left * leftScale;
    this.right = this.right + sample.right * rightScale;
  };
  sceSasCore$Sample.prototype.GetNextSample = function () {
  };
  sceSasCore$Sample.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Sample',
    interfaces: []
  };
  function sceSasCore$Voice(index) {
    this.index = index;
    this.envelope = new sceSasCore$Envelope();
    this.sustainLevel = 0;
    this._on = false;
    this._playing = false;
    this.paused = false;
    this.leftVolume = sceSasCore$Companion_getInstance().PSP_SAS_VOL_MAX;
    this.rightVolume = sceSasCore$Companion_getInstance().PSP_SAS_VOL_MAX;
    this.effectLeftVolume = sceSasCore$Companion_getInstance().PSP_SAS_VOL_MAX;
    this.effectRightVolume = sceSasCore$Companion_getInstance().PSP_SAS_VOL_MAX;
    this.pitch = sceSasCore$Companion_getInstance().PSP_SAS_PITCH_BASE;
    this.source = null;
    this.noise = 0;
    this.steepWave = 0;
    this.triangularWave = 0;
    this.height = 0;
  }
  Object.defineProperty(sceSasCore$Voice.prototype, 'onAndPlaying', {
    get: function () {
      return this._on && this._playing;
    }
  });
  sceSasCore$Voice.prototype.setOn_6taknv$ = function (set) {
    this._on = set;
    this.setPlaying_6taknv$(set);
  };
  sceSasCore$Voice.prototype.setPlaying_6taknv$ = function (set) {
    var tmp$;
    this._playing = set;
    (tmp$ = this.source) != null ? (tmp$.reset(), Unit) : null;
  };
  Object.defineProperty(sceSasCore$Voice.prototype, 'ended', {
    get: function () {
      return !this._playing;
    }
  });
  sceSasCore$Voice.prototype.unsetSource = function () {
    this.source = null;
  };
  sceSasCore$Voice.prototype.setAdpcm_bmhzp$ = function (stream, loopCount) {
    var tmp$;
    this.source = null;
    (tmp$ = this.source) != null ? (tmp$.reset(), Unit) : null;
  };
  sceSasCore$Voice.prototype.setPCM_bmhzp$ = function (stream, loopCount) {
    var tmp$;
    this.source = new sceSasCore$PcmSoundSource(stream, loopCount);
    (tmp$ = this.source) != null ? (tmp$.reset(), Unit) : null;
  };
  sceSasCore$Voice.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Voice',
    interfaces: []
  };
  function sceSasCore$PcmSoundSource(stream, loopCount) {
    this.stream = stream;
    this.loopCount = loopCount;
    this.sample = new sceSasCore$Sample(0.0, 0.0);
  }
  sceSasCore$PcmSoundSource.prototype.reset = function () {
  };
  Object.defineProperty(sceSasCore$PcmSoundSource.prototype, 'hasMore', {
    get: function () {
      return false;
    }
  });
  sceSasCore$PcmSoundSource.prototype.getNextSample = function () {
    return this.sample;
  };
  sceSasCore$PcmSoundSource.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PcmSoundSource',
    interfaces: [sceSasCore$SoundSource]
  };
  function sceSasCore$Envelope() {
    this.attackRate = 0;
    this.decayRate = 0;
    this.sustainRate = 0;
    this.releaseRate = 0;
    this.height = 0;
    this.sustainLevel = 0;
    this.attackCurveType = 0;
    this.decayCurveType = 0;
    this.sustainCurveType = 0;
    this.releaseCurveType = 0;
  }
  sceSasCore$Envelope.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Envelope',
    interfaces: []
  };
  function sceSasCore$OutputMode(name, ordinal, id) {
    Enum.call(this);
    this.id_gya0nt$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function sceSasCore$OutputMode_initFields() {
    sceSasCore$OutputMode_initFields = function () {
    };
    sceSasCore$OutputMode$STEREO_instance = new sceSasCore$OutputMode('STEREO', 0, 0);
    sceSasCore$OutputMode$MULTICHANNEL_instance = new sceSasCore$OutputMode('MULTICHANNEL', 1, 1);
    sceSasCore$OutputMode$Companion_getInstance();
  }
  Object.defineProperty(sceSasCore$OutputMode.prototype, 'id', {
    get: function () {
      return this.id_gya0nt$_0;
    }
  });
  var sceSasCore$OutputMode$STEREO_instance;
  function sceSasCore$OutputMode$STEREO_getInstance() {
    sceSasCore$OutputMode_initFields();
    return sceSasCore$OutputMode$STEREO_instance;
  }
  var sceSasCore$OutputMode$MULTICHANNEL_instance;
  function sceSasCore$OutputMode$MULTICHANNEL_getInstance() {
    sceSasCore$OutputMode_initFields();
    return sceSasCore$OutputMode$MULTICHANNEL_instance;
  }
  function sceSasCore$OutputMode$Companion() {
    sceSasCore$OutputMode$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, sceSasCore$OutputMode$values());
  }
  sceSasCore$OutputMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var sceSasCore$OutputMode$Companion_instance = null;
  function sceSasCore$OutputMode$Companion_getInstance() {
    sceSasCore$OutputMode_initFields();
    if (sceSasCore$OutputMode$Companion_instance === null) {
      new sceSasCore$OutputMode$Companion();
    }
    return sceSasCore$OutputMode$Companion_instance;
  }
  sceSasCore$OutputMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'OutputMode',
    interfaces: [IdEnum, Enum]
  };
  function sceSasCore$OutputMode$values() {
    return [sceSasCore$OutputMode$STEREO_getInstance(), sceSasCore$OutputMode$MULTICHANNEL_getInstance()];
  }
  sceSasCore$OutputMode.values = sceSasCore$OutputMode$values;
  function sceSasCore$OutputMode$valueOf(name) {
    switch (name) {
      case 'STEREO':
        return sceSasCore$OutputMode$STEREO_getInstance();
      case 'MULTICHANNEL':
        return sceSasCore$OutputMode$MULTICHANNEL_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.modules.sceSasCore.OutputMode.' + name);
    }
  }
  sceSasCore$OutputMode.valueOf_61zpoe$ = sceSasCore$OutputMode$valueOf;
  function sceSasCore$AdsrCurveMode(name, ordinal, id) {
    Enum.call(this);
    this.id_whvgv$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function sceSasCore$AdsrCurveMode_initFields() {
    sceSasCore$AdsrCurveMode_initFields = function () {
    };
    sceSasCore$AdsrCurveMode$LINEAR_INCREASE_instance = new sceSasCore$AdsrCurveMode('LINEAR_INCREASE', 0, 0);
    sceSasCore$AdsrCurveMode$LINEAR_DECREASE_instance = new sceSasCore$AdsrCurveMode('LINEAR_DECREASE', 1, 1);
    sceSasCore$AdsrCurveMode$LINEAR_BENT_instance = new sceSasCore$AdsrCurveMode('LINEAR_BENT', 2, 2);
    sceSasCore$AdsrCurveMode$EXPONENT_REV_instance = new sceSasCore$AdsrCurveMode('EXPONENT_REV', 3, 3);
    sceSasCore$AdsrCurveMode$EXPONENT_instance = new sceSasCore$AdsrCurveMode('EXPONENT', 4, 4);
    sceSasCore$AdsrCurveMode$DIRECT_instance = new sceSasCore$AdsrCurveMode('DIRECT', 5, 5);
    sceSasCore$AdsrCurveMode$Companion_getInstance();
  }
  Object.defineProperty(sceSasCore$AdsrCurveMode.prototype, 'id', {
    get: function () {
      return this.id_whvgv$_0;
    }
  });
  var sceSasCore$AdsrCurveMode$LINEAR_INCREASE_instance;
  function sceSasCore$AdsrCurveMode$LINEAR_INCREASE_getInstance() {
    sceSasCore$AdsrCurveMode_initFields();
    return sceSasCore$AdsrCurveMode$LINEAR_INCREASE_instance;
  }
  var sceSasCore$AdsrCurveMode$LINEAR_DECREASE_instance;
  function sceSasCore$AdsrCurveMode$LINEAR_DECREASE_getInstance() {
    sceSasCore$AdsrCurveMode_initFields();
    return sceSasCore$AdsrCurveMode$LINEAR_DECREASE_instance;
  }
  var sceSasCore$AdsrCurveMode$LINEAR_BENT_instance;
  function sceSasCore$AdsrCurveMode$LINEAR_BENT_getInstance() {
    sceSasCore$AdsrCurveMode_initFields();
    return sceSasCore$AdsrCurveMode$LINEAR_BENT_instance;
  }
  var sceSasCore$AdsrCurveMode$EXPONENT_REV_instance;
  function sceSasCore$AdsrCurveMode$EXPONENT_REV_getInstance() {
    sceSasCore$AdsrCurveMode_initFields();
    return sceSasCore$AdsrCurveMode$EXPONENT_REV_instance;
  }
  var sceSasCore$AdsrCurveMode$EXPONENT_instance;
  function sceSasCore$AdsrCurveMode$EXPONENT_getInstance() {
    sceSasCore$AdsrCurveMode_initFields();
    return sceSasCore$AdsrCurveMode$EXPONENT_instance;
  }
  var sceSasCore$AdsrCurveMode$DIRECT_instance;
  function sceSasCore$AdsrCurveMode$DIRECT_getInstance() {
    sceSasCore$AdsrCurveMode_initFields();
    return sceSasCore$AdsrCurveMode$DIRECT_instance;
  }
  function sceSasCore$AdsrCurveMode$Companion() {
    sceSasCore$AdsrCurveMode$Companion_instance = this;
    IdEnum$SmallCompanion.call(this, sceSasCore$AdsrCurveMode$values());
  }
  sceSasCore$AdsrCurveMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [IdEnum$SmallCompanion]
  };
  var sceSasCore$AdsrCurveMode$Companion_instance = null;
  function sceSasCore$AdsrCurveMode$Companion_getInstance() {
    sceSasCore$AdsrCurveMode_initFields();
    if (sceSasCore$AdsrCurveMode$Companion_instance === null) {
      new sceSasCore$AdsrCurveMode$Companion();
    }
    return sceSasCore$AdsrCurveMode$Companion_instance;
  }
  sceSasCore$AdsrCurveMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AdsrCurveMode',
    interfaces: [IdEnum, Enum]
  };
  function sceSasCore$AdsrCurveMode$values() {
    return [sceSasCore$AdsrCurveMode$LINEAR_INCREASE_getInstance(), sceSasCore$AdsrCurveMode$LINEAR_DECREASE_getInstance(), sceSasCore$AdsrCurveMode$LINEAR_BENT_getInstance(), sceSasCore$AdsrCurveMode$EXPONENT_REV_getInstance(), sceSasCore$AdsrCurveMode$EXPONENT_getInstance(), sceSasCore$AdsrCurveMode$DIRECT_getInstance()];
  }
  sceSasCore$AdsrCurveMode.values = sceSasCore$AdsrCurveMode$values;
  function sceSasCore$AdsrCurveMode$valueOf(name) {
    switch (name) {
      case 'LINEAR_INCREASE':
        return sceSasCore$AdsrCurveMode$LINEAR_INCREASE_getInstance();
      case 'LINEAR_DECREASE':
        return sceSasCore$AdsrCurveMode$LINEAR_DECREASE_getInstance();
      case 'LINEAR_BENT':
        return sceSasCore$AdsrCurveMode$LINEAR_BENT_getInstance();
      case 'EXPONENT_REV':
        return sceSasCore$AdsrCurveMode$EXPONENT_REV_getInstance();
      case 'EXPONENT':
        return sceSasCore$AdsrCurveMode$EXPONENT_getInstance();
      case 'DIRECT':
        return sceSasCore$AdsrCurveMode$DIRECT_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.modules.sceSasCore.AdsrCurveMode.' + name);
    }
  }
  sceSasCore$AdsrCurveMode.valueOf_61zpoe$ = sceSasCore$AdsrCurveMode$valueOf;
  function sceSasCore$AdsrFlags() {
    sceSasCore$AdsrFlags_instance = this;
    this.HasAttack = 1 << 0;
    this.HasDecay = 1 << 1;
    this.HasSustain = 1 << 2;
    this.HasRelease = 1 << 3;
  }
  sceSasCore$AdsrFlags.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'AdsrFlags',
    interfaces: []
  };
  var sceSasCore$AdsrFlags_instance = null;
  function sceSasCore$AdsrFlags_getInstance() {
    if (sceSasCore$AdsrFlags_instance === null) {
      new sceSasCore$AdsrFlags();
    }
    return sceSasCore$AdsrFlags_instance;
  }
  sceSasCore.prototype.getSimpleRate_za3lpa$ = function (n) {
    var n_0 = n;
    n_0 = n_0 & 127;
    if (n_0 === 127)
      return 0;
    var rate = 7 - (n_0 & 3) << 26 >>> (n_0 >> 2);
    return rate === 0 ? 1 : rate;
  };
  sceSasCore.prototype.getSimpleSustainLevel_za3lpa$ = function (bitfield1) {
    return (bitfield1 & 15) + 1 << 26;
  };
  sceSasCore.prototype.getSimpleDecayRate_za3lpa$ = function (bitfield1) {
    var bitShift = bitfield1 >> 4 & 15;
    return bitShift === 0 ? sceSasCore$Companion_getInstance().PSP_SAS_ENVELOPE_FREQ_MAX : -((new Kotlin.Long(-2147483648, 0)).toInt() >>> bitShift);
  };
  sceSasCore.prototype.getSimpleExponentRate_za3lpa$ = function (n) {
    var n_0 = n;
    n_0 = n_0 & 127;
    if (n_0 === 127)
      return 0;
    var rate = 7 - (n_0 & 3) << 24 >>> (n_0 >> 2);
    return rate === 0 ? 1 : rate;
  };
  sceSasCore.prototype.getSimpleAttackRate_za3lpa$ = function (bitfield1) {
    return this.getSimpleRate_za3lpa$(bitfield1 >> 8);
  };
  sceSasCore.prototype.getSimpleAttackCurveType_za3lpa$ = function (bitfield1) {
    return (bitfield1 & 32768) === 0 ? sceSasCore$Companion_getInstance().PSP_SAS_ADSR_CURVE_MODE_LINEAR_INCREASE : sceSasCore$Companion_getInstance().PSP_SAS_ADSR_CURVE_MODE_LINEAR_BENT;
  };
  sceSasCore.prototype.getSimpleReleaseCurveType_za3lpa$ = function (bitfield2) {
    return (bitfield2 & 32) === 0 ? sceSasCore$Companion_getInstance().PSP_SAS_ADSR_CURVE_MODE_LINEAR_DECREASE : sceSasCore$Companion_getInstance().PSP_SAS_ADSR_CURVE_MODE_EXPONENT_DECREASE;
  };
  sceSasCore.prototype.getSimpleReleaseRate_za3lpa$ = function (bitfield2) {
    var tmp$;
    var n = bitfield2 & 31;
    if (n === 31) {
      return 0;
    }
    if (this.getSimpleReleaseCurveType_za3lpa$(bitfield2) === sceSasCore$Companion_getInstance().PSP_SAS_ADSR_CURVE_MODE_LINEAR_DECREASE) {
      if (n === 30) {
        return 1073741824;
      }
       else if (n === 29) {
        return 1;
      }
      return 268435456 >> n;
    }
    if (n === 0) {
      tmp$ = sceSasCore$Companion_getInstance().PSP_SAS_ENVELOPE_FREQ_MAX;
    }
     else
      tmp$ = -((new Kotlin.Long(-2147483648, 0)).toInt() >>> n);
    return tmp$;
  };
  sceSasCore.prototype.getSimpleSustainCurveType_za3lpa$ = function (bitfield2) {
    var tmp$;
    tmp$ = bitfield2 >> 13;
    if (tmp$ === 0)
      return sceSasCore$Companion_getInstance().PSP_SAS_ADSR_CURVE_MODE_LINEAR_INCREASE;
    else if (tmp$ === 2)
      return sceSasCore$Companion_getInstance().PSP_SAS_ADSR_CURVE_MODE_LINEAR_DECREASE;
    else if (tmp$ === 4)
      return sceSasCore$Companion_getInstance().PSP_SAS_ADSR_CURVE_MODE_LINEAR_BENT;
    else if (tmp$ === 6)
      return sceSasCore$Companion_getInstance().PSP_SAS_ADSR_CURVE_MODE_EXPONENT_DECREASE;
    sceKernelException(SceKernelErrors_getInstance().ERROR_SAS_INVALID_ADSR_CURVE_MODE);
  };
  sceSasCore.prototype.getSimpleSustainRate_za3lpa$ = function (bitfield2) {
    var tmp$;
    if (this.getSimpleSustainCurveType_za3lpa$(bitfield2) === sceSasCore$Companion_getInstance().PSP_SAS_ADSR_CURVE_MODE_EXPONENT_DECREASE) {
      tmp$ = this.getSimpleExponentRate_za3lpa$(bitfield2 >> 6);
    }
     else
      tmp$ = this.getSimpleRate_za3lpa$(bitfield2 >> 6);
    return tmp$;
  };
  sceSasCore.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceSasCore',
    interfaces: [SceModule]
  };
  function sceSuspendForUser(emulator) {
    SceModule.call(this, emulator, 'sceSuspendForUser', 1073741841, 'sysmem.prx', 'sceSystemMemoryManager');
  }
  sceSuspendForUser.prototype.sceKernelPowerLock_za3lpa$ = function (lockType) {
    return 0;
  };
  sceSuspendForUser.prototype.sceKernelPowerUnlock_za3lpa$ = function (lockType) {
    return 0;
  };
  sceSuspendForUser.prototype.sceKernelPowerTick_za3lpa$ = function (value) {
    return 0;
  };
  sceSuspendForUser.prototype.sceKernelVolatileMemLock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1040347603);
  };
  sceSuspendForUser.prototype.sceKernelVolatileMemTryLock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1588641614, 0));
  };
  sceSuspendForUser.prototype.sceKernelVolatileMemUnlock_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1519786971, 0));
  };
  function sceSuspendForUser$registerModule$lambda(this$sceSuspendForUser) {
    return function ($receiver, it) {
      return this$sceSuspendForUser.sceKernelPowerLock_za3lpa$($receiver.int);
    };
  }
  function sceSuspendForUser$registerModule$lambda_0(this$sceSuspendForUser) {
    return function ($receiver, it) {
      return this$sceSuspendForUser.sceKernelPowerUnlock_za3lpa$($receiver.int);
    };
  }
  function sceSuspendForUser$registerModule$lambda_1(this$sceSuspendForUser) {
    return function ($receiver, it) {
      return this$sceSuspendForUser.sceKernelPowerTick_za3lpa$($receiver.int);
    };
  }
  function sceSuspendForUser$registerModule$lambda_2(this$sceSuspendForUser) {
    return function (it) {
      this$sceSuspendForUser.sceKernelVolatileMemLock_xt3zvs$(it);
      return Unit;
    };
  }
  function sceSuspendForUser$registerModule$lambda_3(this$sceSuspendForUser) {
    return function (it) {
      this$sceSuspendForUser.sceKernelVolatileMemTryLock_xt3zvs$(it);
      return Unit;
    };
  }
  function sceSuspendForUser$registerModule$lambda_4(this$sceSuspendForUser) {
    return function (it) {
      this$sceSuspendForUser.sceKernelVolatileMemUnlock_xt3zvs$(it);
      return Unit;
    };
  }
  sceSuspendForUser.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceKernelPowerLock', new Kotlin.Long(-354739241, 0), 150, void 0, sceSuspendForUser$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceKernelPowerUnlock', Kotlin.Long.fromInt(988705377), 150, void 0, sceSuspendForUser$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceKernelPowerTick', Kotlin.Long.fromInt(151833407), 150, void 0, sceSuspendForUser$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceKernelVolatileMemLock', Kotlin.Long.fromInt(1040347603), 150, void 0, sceSuspendForUser$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceKernelVolatileMemTryLock', new Kotlin.Long(-1588641614, 0), 150, void 0, sceSuspendForUser$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceKernelVolatileMemUnlock', new Kotlin.Long(-1519786971, 0), 150, void 0, sceSuspendForUser$registerModule$lambda_4(this));
  };
  sceSuspendForUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceSuspendForUser',
    interfaces: [SceModule]
  };
  function sceUmdUser(emulator) {
    SceModule.call(this, emulator, 'sceUmdUser', 1073807377, 'np9660.prx', 'sceNp9660_driver');
    this.PSP_UMD_INIT = 0;
    this.PSP_UMD_NOT_PRESENT = 1 << 0;
    this.PSP_UMD_PRESENT = 1 << 1;
    this.PSP_UMD_CHANGED = 1 << 2;
    this.PSP_UMD_NOT_READY = 1 << 3;
    this.PSP_UMD_READY = 1 << 4;
    this.PSP_UMD_READABLE = 1 << 5;
    this.statusEvent = new EventStatus(sceUmdUser$statusEvent$lambda(this));
    this.status_umbw2x$_0 = this.statusEvent;
    this.inserted_nunam5$_0 = true;
    this.activated_bb6baw$_0 = false;
  }
  Object.defineProperty(sceUmdUser.prototype, 'status', {
    get: function () {
      return this.status_umbw2x$_0.getValue_n5byny$(this, new PropertyMetadata('status'));
    }
  });
  Object.defineProperty(sceUmdUser.prototype, 'inserted_0', {
    get: function () {
      return this.inserted_nunam5$_0;
    },
    set: function (value) {
      this.inserted_nunam5$_0 = value;
      this.statusEvent.updated();
    }
  });
  Object.defineProperty(sceUmdUser.prototype, 'activated_0', {
    get: function () {
      return this.activated_bb6baw$_0;
    },
    set: function (value) {
      this.activated_bb6baw$_0 = value;
      this.statusEvent.updated();
    }
  });
  sceUmdUser.prototype.sceUmdCheckMedium = function () {
    return this.inserted_0 ? 1 : 0;
  };
  sceUmdUser.prototype.sceUmdActivate_19mbxw$ = function (mode, device) {
    this.activated_0 = true;
    return 0;
  };
  sceUmdUser.prototype.sceUmdDeactivate_19mbxw$ = function (mode, device) {
    this.activated_0 = false;
    return 0;
  };
  function sceUmdUser$_sceUmdWaitDriveStatTimeout$lambda(this$sceUmdUser_0, closure$stat_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$sceUmdUser$_sceUmdWaitDriveStatTimeout$lambda(this$sceUmdUser_0, closure$stat_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceUmdUser$_sceUmdWaitDriveStatTimeout$lambda(this$sceUmdUser_0, closure$stat_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$sceUmdUser = this$sceUmdUser_0;
    this.local$closure$stat = closure$stat_0;
  }
  Coroutine$sceUmdUser$_sceUmdWaitDriveStatTimeout$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceUmdUser$_sceUmdWaitDriveStatTimeout$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceUmdUser$_sceUmdWaitDriveStatTimeout$lambda.prototype.constructor = Coroutine$sceUmdUser$_sceUmdWaitDriveStatTimeout$lambda;
  Coroutine$sceUmdUser$_sceUmdWaitDriveStatTimeout$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceUmdUser.statusEvent.waitAllBits_za3lpa$(this.local$closure$stat, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  sceUmdUser.prototype._sceUmdWaitDriveStatTimeout_vux9f0$ = function (stat_0, timeout_0, continuation_0, suspended) {
    var instance = new Coroutine$_sceUmdWaitDriveStatTimeout_vux9f0$(this, stat_0, timeout_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_sceUmdWaitDriveStatTimeout_vux9f0$($this, stat_0, timeout_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 5;
    this.$this = $this;
    this.local$stat = stat_0;
    this.local$timeout = timeout_0;
  }
  Coroutine$_sceUmdWaitDriveStatTimeout_vux9f0$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_sceUmdWaitDriveStatTimeout_vux9f0$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_sceUmdWaitDriveStatTimeout_vux9f0$.prototype.constructor = Coroutine$_sceUmdWaitDriveStatTimeout_vux9f0$;
  Coroutine$_sceUmdWaitDriveStatTimeout_vux9f0$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.exceptionState_0 = 2;
            this.state_0 = 1;
            this.result_0 = withOptTimeout(this.local$timeout < 0 ? null : this.local$timeout / 1000 | 0, '_sceUmdWaitDriveStat', sceUmdUser$_sceUmdWaitDriveStatTimeout$lambda(this.$this, this.local$stat), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            return 0;
          case 2:
            this.exceptionState_0 = 5;
            var e = this.exception_0;
            if (Kotlin.isType(e, CancellationException)) {
              return SceKernelErrors_getInstance().ERROR_KERNEL_WAIT_TIMEOUT;
            }
             else {
              throw e;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            return;
          case 5:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 5)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  sceUmdUser.prototype.sceUmdWaitDriveStat_za3lpa$ = function (stat, continuation) {
    return this._sceUmdWaitDriveStatTimeout_vux9f0$(stat, -1, continuation);
  };
  sceUmdUser.prototype.sceUmdWaitDriveStatCB_vux9f0$ = function (stat, timeout, continuation) {
    return this._sceUmdWaitDriveStatTimeout_vux9f0$(stat, timeout, continuation);
  };
  sceUmdUser.prototype.sceUmdWaitDriveStatWithTimer_vux9f0$ = function (stat, timeout, continuation) {
    return this._sceUmdWaitDriveStatTimeout_vux9f0$(stat, timeout, continuation);
  };
  sceUmdUser.prototype.sceUmdGetDriveStat = function () {
    return this.status;
  };
  sceUmdUser.prototype.sceUmdRegisterUMDCallBack_za3lpa$ = function (callbackId) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceUmdRegisterUMDCallBack UNIMPLEMENTED');
    }
    return 0;
  };
  sceUmdUser.prototype.sceUmdUnRegisterUMDCallBack_za3lpa$ = function (callbackId) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceUmdUnRegisterUMDCallBack UNIMPLEMENTED');
    }
    return 0;
  };
  sceUmdUser.prototype.sceUmdGetErrorStat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(543329903);
  };
  sceUmdUser.prototype.sceUmdGetDiscInfo_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(873166470);
  };
  sceUmdUser.prototype.sceUmdCancelWaitDriveStat_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1794749706);
  };
  sceUmdUser.prototype.sceUmdReplaceProhibit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2024588992, 0));
  };
  sceUmdUser.prototype.sceUmdReplacePermit_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-873861078, 0));
  };
  function sceUmdUser$registerModule$lambda(this$sceUmdUser) {
    return function ($receiver, it) {
      return this$sceUmdUser.sceUmdCheckMedium();
    };
  }
  function sceUmdUser$registerModule$lambda_0(this$sceUmdUser) {
    return function ($receiver, it) {
      return this$sceUmdUser.sceUmdActivate_19mbxw$($receiver.int, $receiver.istr);
    };
  }
  function sceUmdUser$registerModule$lambda_1(this$sceUmdUser) {
    return function ($receiver, it) {
      return this$sceUmdUser.sceUmdDeactivate_19mbxw$($receiver.int, $receiver.istr);
    };
  }
  function sceUmdUser$registerModule$lambda_2(this$sceUmdUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$sceUmdUser$registerModule$lambda(this$sceUmdUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceUmdUser$registerModule$lambda(this$sceUmdUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceUmdUser = this$sceUmdUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceUmdUser$registerModule$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceUmdUser$registerModule$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceUmdUser$registerModule$lambda.prototype.constructor = Coroutine$sceUmdUser$registerModule$lambda;
  Coroutine$sceUmdUser$registerModule$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceUmdUser.sceUmdWaitDriveStat_za3lpa$(this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceUmdUser$registerModule$lambda_3(this$sceUmdUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$sceUmdUser$registerModule$lambda_0(this$sceUmdUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceUmdUser$registerModule$lambda_0(this$sceUmdUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceUmdUser = this$sceUmdUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceUmdUser$registerModule$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceUmdUser$registerModule$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceUmdUser$registerModule$lambda_0.prototype.constructor = Coroutine$sceUmdUser$registerModule$lambda_0;
  Coroutine$sceUmdUser$registerModule$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceUmdUser.sceUmdWaitDriveStatCB_vux9f0$(this.local$$receiver.int, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceUmdUser$registerModule$lambda_4(this$sceUmdUser_0) {
    return function ($receiver_0, it, continuation_0, suspended) {
      var instance = new Coroutine$sceUmdUser$registerModule$lambda_1(this$sceUmdUser_0, $receiver_0, it, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceUmdUser$registerModule$lambda_1(this$sceUmdUser_0, $receiver_0, it, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$sceUmdUser = this$sceUmdUser_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceUmdUser$registerModule$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceUmdUser$registerModule$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceUmdUser$registerModule$lambda_1.prototype.constructor = Coroutine$sceUmdUser$registerModule$lambda_1;
  Coroutine$sceUmdUser$registerModule$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$sceUmdUser.sceUmdWaitDriveStatWithTimer_vux9f0$(this.local$$receiver.int, this.local$$receiver.int, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sceUmdUser$registerModule$lambda_5(this$sceUmdUser) {
    return function ($receiver, it) {
      return this$sceUmdUser.sceUmdGetDriveStat();
    };
  }
  function sceUmdUser$registerModule$lambda_6(this$sceUmdUser) {
    return function ($receiver, it) {
      return this$sceUmdUser.sceUmdRegisterUMDCallBack_za3lpa$($receiver.int);
    };
  }
  function sceUmdUser$registerModule$lambda_7(this$sceUmdUser) {
    return function ($receiver, it) {
      return this$sceUmdUser.sceUmdUnRegisterUMDCallBack_za3lpa$($receiver.int);
    };
  }
  function sceUmdUser$registerModule$lambda_8(this$sceUmdUser) {
    return function (it) {
      this$sceUmdUser.sceUmdGetErrorStat_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUmdUser$registerModule$lambda_9(this$sceUmdUser) {
    return function (it) {
      this$sceUmdUser.sceUmdGetDiscInfo_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUmdUser$registerModule$lambda_10(this$sceUmdUser) {
    return function (it) {
      this$sceUmdUser.sceUmdCancelWaitDriveStat_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUmdUser$registerModule$lambda_11(this$sceUmdUser) {
    return function (it) {
      this$sceUmdUser.sceUmdReplaceProhibit_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUmdUser$registerModule$lambda_12(this$sceUmdUser) {
    return function (it) {
      this$sceUmdUser.sceUmdReplacePermit_xt3zvs$(it);
      return Unit;
    };
  }
  sceUmdUser.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceUmdCheckMedium', Kotlin.Long.fromInt(1189852969), 150, void 0, sceUmdUser$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceUmdActivate', new Kotlin.Long(-971489977, 0), 150, void 0, sceUmdUser$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceUmdDeactivate', new Kotlin.Long(-399031622, 0), 150, void 0, sceUmdUser$registerModule$lambda_1(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceUmdWaitDriveStat', new Kotlin.Long(-1896837170, 0), 150, void 0, false, sceUmdUser$registerModule$lambda_2(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceUmdWaitDriveStatCB', Kotlin.Long.fromInt(1251892777), 150, void 0, true, sceUmdUser$registerModule$lambda_3(this));
    this.registerFunctionSuspendInt_q1rm4a$('sceUmdWaitDriveStatWithTimer', Kotlin.Long.fromInt(1444948339), 150, void 0, void 0, sceUmdUser$registerModule$lambda_4(this));
    this.registerFunctionInt_9l82lv$('sceUmdGetDriveStat', Kotlin.Long.fromInt(1800017004), 150, void 0, sceUmdUser$registerModule$lambda_5(this));
    this.registerFunctionInt_9l82lv$('sceUmdRegisterUMDCallBack', new Kotlin.Long(-1360576435, 0), 150, void 0, sceUmdUser$registerModule$lambda_6(this));
    this.registerFunctionInt_9l82lv$('sceUmdUnRegisterUMDCallBack', new Kotlin.Long(-1121198585, 0), 150, void 0, sceUmdUser$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceUmdGetErrorStat', Kotlin.Long.fromInt(543329903), 150, void 0, sceUmdUser$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceUmdGetDiscInfo', Kotlin.Long.fromInt(873166470), 150, void 0, sceUmdUser$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceUmdCancelWaitDriveStat', Kotlin.Long.fromInt(1794749706), 150, void 0, sceUmdUser$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceUmdReplaceProhibit', new Kotlin.Long(-2024588992, 0), 150, void 0, sceUmdUser$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceUmdReplacePermit', new Kotlin.Long(-873861078, 0), 150, void 0, sceUmdUser$registerModule$lambda_12(this));
  };
  function sceUmdUser$statusEvent$lambda(this$sceUmdUser) {
    return function () {
      var out = this$sceUmdUser.PSP_UMD_PRESENT | this$sceUmdUser.PSP_UMD_READY;
      if (this$sceUmdUser.activated_0)
        out = out | this$sceUmdUser.PSP_UMD_READABLE;
      return out;
    };
  }
  sceUmdUser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceUmdUser',
    interfaces: [SceModule]
  };
  function sceUtility(emulator) {
    sceUtility$Companion_getInstance();
    SceModule.call(this, emulator, 'sceUtility', 1073807377, 'utility.prx', 'sceUtility_Driver');
    this.adhocChannel = 0;
    this.wlanPowersave = 0;
    this.dateFormat = sceUtility$Companion_getInstance().PSP_SYSTEMPARAM_DATE_FORMAT_YYYYMMDD;
    this.timeFormat = sceUtility$Companion_getInstance().PSP_SYSTEMPARAM_TIME_FORMAT_24HR;
    this.language = sceUtility$Companion_getInstance().PSP_SYSTEMPARAM_LANGUAGE_ENGLISH;
    this.timezone = 0;
    this.daylightSavings = sceUtility$Companion_getInstance().PSP_SYSTEMPARAM_DAYLIGHTSAVINGS_STD;
    this.currentStep = DialogStepEnum$NONE_getInstance();
  }
  sceUtility.prototype.sceUtilitySavedataInitStart_xnxgf8$ = function (paramsPtr) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceUtilitySavedataInitStart: ' + paramsPtr);
    }
    var struct = SceUtilitySavedataParam$Companion_getInstance();
    var ptr = paramsPtr;
    var obj = read_0(openSync_1(ptr), struct);
    try {
      obj.base.result = SceKernelErrors_getInstance().ERROR_SAVEDATA_LOAD_NO_DATA;
    }
    finally {
      write_0(openSync_1(ptr), struct, obj);
    }
    return 0;
  };
  sceUtility.prototype.sceUtilitySavedataGetStatus = function () {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceUtilitySavedataGetStatus');
    }
    return 0;
  };
  function sceUtility$Companion() {
    sceUtility$Companion_instance = this;
    this.PSP_SYSTEMPARAM_ID_STRING_NICKNAME = 1;
    this.PSP_SYSTEMPARAM_ID_INT_ADHOC_CHANNEL = 2;
    this.PSP_SYSTEMPARAM_ID_INT_WLAN_POWERSAVE = 3;
    this.PSP_SYSTEMPARAM_ID_INT_DATE_FORMAT = 4;
    this.PSP_SYSTEMPARAM_ID_INT_TIME_FORMAT = 5;
    this.PSP_SYSTEMPARAM_ID_INT_TIMEZONE = 6;
    this.PSP_SYSTEMPARAM_ID_INT_DAYLIGHTSAVINGS = 7;
    this.PSP_SYSTEMPARAM_ID_INT_LANGUAGE = 8;
    this.PSP_SYSTEMPARAM_ID_INT_UNKNOWN = 9;
    this.PSP_SYSTEMPARAM_RETVAL_OK = 0;
    this.PSP_SYSTEMPARAM_RETVAL_FAIL = new Kotlin.Long(-2146369277, 0);
    this.PSP_SYSTEMPARAM_ADHOC_CHANNEL_AUTOMATIC = 0;
    this.PSP_SYSTEMPARAM_ADHOC_CHANNEL_1 = 1;
    this.PSP_SYSTEMPARAM_ADHOC_CHANNEL_6 = 6;
    this.PSP_SYSTEMPARAM_ADHOC_CHANNEL_11 = 11;
    this.PSP_SYSTEMPARAM_WLAN_POWERSAVE_OFF = 0;
    this.PSP_SYSTEMPARAM_WLAN_POWERSAVE_ON = 1;
    this.PSP_SYSTEMPARAM_DATE_FORMAT_YYYYMMDD = 0;
    this.PSP_SYSTEMPARAM_DATE_FORMAT_MMDDYYYY = 1;
    this.PSP_SYSTEMPARAM_DATE_FORMAT_DDMMYYYY = 2;
    this.PSP_SYSTEMPARAM_TIME_FORMAT_24HR = 0;
    this.PSP_SYSTEMPARAM_TIME_FORMAT_12HR = 1;
    this.PSP_SYSTEMPARAM_DAYLIGHTSAVINGS_STD = 0;
    this.PSP_SYSTEMPARAM_DAYLIGHTSAVINGS_SAVING = 1;
    this.PSP_SYSTEMPARAM_LANGUAGE_JAPANESE = 0;
    this.PSP_SYSTEMPARAM_LANGUAGE_ENGLISH = 1;
    this.PSP_SYSTEMPARAM_LANGUAGE_FRENCH = 2;
    this.PSP_SYSTEMPARAM_LANGUAGE_SPANISH = 3;
    this.PSP_SYSTEMPARAM_LANGUAGE_GERMAN = 4;
    this.PSP_SYSTEMPARAM_LANGUAGE_ITALIAN = 5;
    this.PSP_SYSTEMPARAM_LANGUAGE_DUTCH = 6;
    this.PSP_SYSTEMPARAM_LANGUAGE_PORTUGUESE = 7;
    this.PSP_SYSTEMPARAM_LANGUAGE_RUSSIAN = 8;
    this.PSP_SYSTEMPARAM_LANGUAGE_KOREAN = 9;
    this.PSP_SYSTEMPARAM_LANGUAGE_CHINESE_TRADITIONAL = 10;
    this.PSP_SYSTEMPARAM_LANGUAGE_CHINESE_SIMPLIFIED = 11;
  }
  sceUtility$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var sceUtility$Companion_instance = null;
  function sceUtility$Companion_getInstance() {
    if (sceUtility$Companion_instance === null) {
      new sceUtility$Companion();
    }
    return sceUtility$Companion_instance;
  }
  sceUtility.prototype.sceUtilityGetSystemParamInt_o62i3q$ = function (id, value) {
    var tmp$;
    var $this = this.logger;
    var level = LogLevel.TRACE;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'Not implemented: sceUtilityGetSystemParamInt:' + id + ',' + value);
    }
    if (id === sceUtility$Companion_getInstance().PSP_SYSTEMPARAM_ID_STRING_NICKNAME)
      tmp$ = -1;
    else if (id === sceUtility$Companion_getInstance().PSP_SYSTEMPARAM_ID_INT_ADHOC_CHANNEL)
      tmp$ = this.adhocChannel;
    else if (id === sceUtility$Companion_getInstance().PSP_SYSTEMPARAM_ID_INT_WLAN_POWERSAVE)
      tmp$ = this.wlanPowersave;
    else if (id === sceUtility$Companion_getInstance().PSP_SYSTEMPARAM_ID_INT_DATE_FORMAT)
      tmp$ = this.dateFormat;
    else if (id === sceUtility$Companion_getInstance().PSP_SYSTEMPARAM_ID_INT_TIME_FORMAT)
      tmp$ = this.timeFormat;
    else if (id === sceUtility$Companion_getInstance().PSP_SYSTEMPARAM_ID_INT_TIMEZONE)
      tmp$ = this.timezone;
    else if (id === sceUtility$Companion_getInstance().PSP_SYSTEMPARAM_ID_INT_DAYLIGHTSAVINGS)
      tmp$ = this.daylightSavings;
    else if (id === sceUtility$Companion_getInstance().PSP_SYSTEMPARAM_ID_INT_LANGUAGE)
      tmp$ = this.language;
    else if (id === sceUtility$Companion_getInstance().PSP_SYSTEMPARAM_ID_INT_UNKNOWN)
      tmp$ = -1;
    else
      tmp$ = -1;
    var avalue = tmp$;
    value.sw_vux9f0$(0, avalue);
    return sceUtility$Companion_getInstance().PSP_SYSTEMPARAM_RETVAL_OK;
  };
  sceUtility.prototype.sceUtilityMsgDialogInitStart_xnxgf8$ = function (paramsPtr) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceUtilityMsgDialogInitStart:' + paramsPtr);
    }
    var struct = PspUtilityMsgDialogParams$Companion_getInstance();
    var ptr = paramsPtr;
    var obj = read_0(openSync_1(ptr), struct);
    try {
      obj.buttonPressed = PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_YES_getInstance();
      this.currentStep = DialogStepEnum$SUCCESS_getInstance();
    }
    finally {
      write_0(openSync_1(ptr), struct, obj);
    }
    return 0;
  };
  sceUtility.prototype.sceUtilityMsgDialogGetStatus = function () {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceUtilityMsgDialogGetStatus');
    }
    try {
      return this.currentStep.id;
    }
    finally {
      if (this.currentStep === DialogStepEnum$SHUTDOWN_getInstance())
        this.currentStep = DialogStepEnum$NONE_getInstance();
    }
  };
  sceUtility.prototype.sceUtilityMsgDialogShutdownStart = function () {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceUtilityMsgDialogShutdownStart');
    }
    this.currentStep = DialogStepEnum$SHUTDOWN_getInstance();
  };
  sceUtility.prototype.sceUtilityLoadAvModule_za3lpa$ = function (module_0) {
    var $this = this.logger;
    var level = LogLevel.ERROR;
    if ($this.isEnabled_ci8eq1$(level)) {
      $this.actualLog_t189ph$(level, 'sceUtilityLoadAvModule');
    }
    return 1;
  };
  sceUtility.prototype.sceUtility_0251B134_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(38908212);
  };
  sceUtility.prototype.sceUtilityHtmlViewerUpdate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(95402468);
  };
  sceUtility.prototype.sceUtility_06A48659_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(111445593);
  };
  sceUtility.prototype.sceUtilityLoadUsbModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(224118482);
  };
  sceUtility.prototype.sceUtility_0F3EEAAC_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(255781548);
  };
  sceUtility.prototype.sceUtilityInstallInitStart_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(310499982);
  };
  sceUtility.prototype.sceUtility_147F7C85_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(343899269);
  };
  sceUtility.prototype.sceUtility_149A7895_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(345667733);
  };
  sceUtility.prototype.sceUtilityLoadNetModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(360292697);
  };
  sceUtility.prototype.sceUtility_16A1A8D8_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(379693272);
  };
  sceUtility.prototype.sceUtility_16D02AF0_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(382741232);
  };
  sceUtility.prototype.sceUtility_28D35634_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(684938804);
  };
  sceUtility.prototype.sceUtility_2995D020_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(697684000);
  };
  sceUtility.prototype.sceUtilityLoadModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(707476960);
  };
  sceUtility.prototype.sceUtility_2B96173B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(731256635);
  };
  sceUtility.prototype.sceUtilityGetSystemParamString_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(884441923);
  };
  sceUtility.prototype.sceUtility_3AAD51DC_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(984437212);
  };
  sceUtility.prototype.sceNetplayDialogInitStart_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(987040487);
  };
  sceUtility.prototype.sceUtilityOskShutdownStart_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1039854505);
  };
  sceUtility.prototype.sceNetplayDialogUpdate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1098640724);
  };
  sceUtility.prototype.sceUtilitySetSystemParamString_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1105397364);
  };
  sceUtility.prototype.sceUtility_42071A83_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1107761795);
  };
  sceUtility.prototype.sceUtilityGetNetParam_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1129139002);
  };
  sceUtility.prototype.sceUtilitySetSystemParamInt_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1170310406);
  };
  sceUtility.prototype.sceUtilityMsgDialogAbort_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1227406742);
  };
  sceUtility.prototype.sceUtility_4A833BA4_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1250114468);
  };
  sceUtility.prototype.sceUtility_4B0A8FE5_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1258983397);
  };
  sceUtility.prototype.sceUtilityOskUpdate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1267058785);
  };
  sceUtility.prototype.sceUtilityNetconfInitStart_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1303504697);
  };
  sceUtility.prototype.sceUtilityGetNetParamLatestID_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1340941528);
  };
  sceUtility.prototype.sceUtility_54A5C62F_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1420150319);
  };
  sceUtility.prototype.sceUtilityCheckNetParam_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1592681800);
  };
  sceUtility.prototype.sceUtilityInstallShutdownStart_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1592902218);
  };
  sceUtility.prototype.sceUtilityNetconfGetStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1664264761);
  };
  sceUtility.prototype.sceUtilityUnloadNetModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1691683926);
  };
  sceUtility.prototype.sceUtility_6F56F9CF_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1867971023);
  };
  sceUtility.prototype.sceUtility_70267ADF_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1881570015);
  };
  sceUtility.prototype.sceUtilityGameSharingUpdate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(2018711597);
  };
  sceUtility.prototype.sceUtility_81C44706_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2117843194, 0));
  };
  sceUtility.prototype.sceUtility_8326AB05_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2094617851, 0));
  };
  sceUtility.prototype.sceUtility_86A03A27_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2036319705, 0));
  };
  sceUtility.prototype.sceUtility_86ABDB1B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2035557605, 0));
  };
  sceUtility.prototype.sceUtility_88BC7406_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-2000915450, 0));
  };
  sceUtility.prototype.sceUtility_89317C8F_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1993245553, 0));
  };
  sceUtility.prototype.sceUtilityNetconfUpdate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1847128523, 0));
  };
  sceUtility.prototype.sceUtility_943CBA46_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1807959482, 0));
  };
  sceUtility.prototype.sceUtilityGameSharingGetStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1805032461, 0));
  };
  sceUtility.prototype.sceUtilityMsgDialogUpdate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1778637509, 0));
  };
  sceUtility.prototype.sceUtilitySavedataShutdownStart_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1752124612, 0));
  };
  sceUtility.prototype.sceUtilityInstallUpdate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1606604358, 0));
  };
  sceUtility.prototype.sceUtility_A084E056_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1601904554, 0));
  };
  sceUtility.prototype.sceUtility_A50E5B30_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1525785808, 0));
  };
  sceUtility.prototype.sceUtility_AB083EA9_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1425523031, 0));
  };
  sceUtility.prototype.sceUtility_B0FB7FF5_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1325694987, 0));
  };
  sceUtility.prototype.sceUtility_B62A4061_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1238744991, 0));
  };
  sceUtility.prototype.sceNetplayDialogGetStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1227954793, 0));
  };
  sceUtility.prototype.sceUtility_B8592D5F_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1202115233, 0));
  };
  sceUtility.prototype.sceNetplayDialogShutdownStart_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1133813098, 0));
  };
  sceUtility.prototype.sceUtilityHtmlViewerGetStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1113073516, 0));
  };
  sceUtility.prototype.sceUtilityInstallGetStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-999288925, 0));
  };
  sceUtility.prototype.sceUtilityGameSharingInitStart_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-997001391, 0));
  };
  sceUtility.prototype.sceUtilityHtmlViewerInitStart_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-842814911, 0));
  };
  sceUtility.prototype.sceUtility_D17A0573_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-780532365, 0));
  };
  sceUtility.prototype.sceUtilitySavedataUpdate_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-726048773, 0));
  };
  sceUtility.prototype.sceUtility_D81957B7_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-669427785, 0));
  };
  sceUtility.prototype.sceUtility_D852CDCE_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-665662002, 0));
  };
  sceUtility.prototype.sceUtility_DA97F1AA_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-627576406, 0));
  };
  sceUtility.prototype.sceUtility_DDE5389D_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-572180323, 0));
  };
  sceUtility.prototype.sceUtility_E19C97D6_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-509831210, 0));
  };
  sceUtility.prototype.sceUtilityUnloadModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-459538798, 0));
  };
  sceUtility.prototype.sceUtility_E7B778D8_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-407406376, 0));
  };
  sceUtility.prototype.sceUtility_ECE1D3E5_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-320744475, 0));
  };
  sceUtility.prototype.sceUtility_ED0FAD38_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-317739720, 0));
  };
  sceUtility.prototype.sceUtility_EF3582B2_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-281705806, 0));
  };
  sceUtility.prototype.sceUtilityGameSharingShutdownStart_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-272173041, 0));
  };
  sceUtility.prototype.sceUtilityOskGetStatus_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-201891817, 0));
  };
  sceUtility.prototype.sceUtility_F3FBC572_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-201603726, 0));
  };
  sceUtility.prototype.sceUtilityHtmlViewerShutdownStart_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-171044556, 0));
  };
  sceUtility.prototype.sceUtilityOskInitStart_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-165241982, 0));
  };
  sceUtility.prototype.sceUtilityUnloadUsbModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-162983696, 0));
  };
  sceUtility.prototype.sceUtilityUnloadAvModule_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-136785774, 0));
  };
  sceUtility.prototype.sceUtilityNetconfShutdownStart_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-125741578, 0));
  };
  sceUtility.prototype.sceUtility_F9E0008C_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-102760308, 0));
  };
  function sceUtility$registerModule$lambda(this$sceUtility) {
    return function ($receiver, it) {
      return this$sceUtility.sceUtilitySavedataInitStart_xnxgf8$($receiver.ptr);
    };
  }
  function sceUtility$registerModule$lambda_0(this$sceUtility) {
    return function ($receiver, it) {
      return this$sceUtility.sceUtilitySavedataGetStatus();
    };
  }
  function sceUtility$registerModule$lambda_1(this$sceUtility) {
    return function ($receiver, it) {
      return this$sceUtility.sceUtilityGetSystemParamInt_o62i3q$($receiver.int, $receiver.ptr);
    };
  }
  function sceUtility$registerModule$lambda_2(this$sceUtility) {
    return function ($receiver, it) {
      return this$sceUtility.sceUtilityMsgDialogInitStart_xnxgf8$($receiver.ptr);
    };
  }
  function sceUtility$registerModule$lambda_3(this$sceUtility) {
    return function ($receiver, it) {
      return this$sceUtility.sceUtilityMsgDialogGetStatus();
    };
  }
  function sceUtility$registerModule$lambda_4(this$sceUtility) {
    return function ($receiver, it) {
      this$sceUtility.sceUtilityMsgDialogShutdownStart();
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_5(this$sceUtility) {
    return function ($receiver, it) {
      return this$sceUtility.sceUtilityLoadAvModule_za3lpa$($receiver.int);
    };
  }
  function sceUtility$registerModule$lambda_6(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_0251B134_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_7(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityHtmlViewerUpdate_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_8(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_06A48659_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_9(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityLoadUsbModule_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_10(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_0F3EEAAC_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_11(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityInstallInitStart_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_12(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_147F7C85_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_13(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_149A7895_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_14(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityLoadNetModule_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_15(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_16A1A8D8_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_16(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_16D02AF0_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_17(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_28D35634_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_18(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_2995D020_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_19(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityLoadModule_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_20(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_2B96173B_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_21(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityGetSystemParamString_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_22(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_3AAD51DC_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_23(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceNetplayDialogInitStart_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_24(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityOskShutdownStart_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_25(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceNetplayDialogUpdate_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_26(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilitySetSystemParamString_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_27(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_42071A83_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_28(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityGetNetParam_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_29(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilitySetSystemParamInt_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_30(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityMsgDialogAbort_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_31(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_4A833BA4_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_32(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_4B0A8FE5_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_33(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityOskUpdate_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_34(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityNetconfInitStart_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_35(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityGetNetParamLatestID_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_36(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_54A5C62F_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_37(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityCheckNetParam_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_38(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityInstallShutdownStart_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_39(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityNetconfGetStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_40(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityUnloadNetModule_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_41(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_6F56F9CF_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_42(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_70267ADF_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_43(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityGameSharingUpdate_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_44(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_81C44706_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_45(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_8326AB05_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_46(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_86A03A27_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_47(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_86ABDB1B_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_48(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_88BC7406_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_49(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_89317C8F_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_50(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityNetconfUpdate_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_51(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_943CBA46_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_52(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityGameSharingGetStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_53(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityMsgDialogUpdate_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_54(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilitySavedataShutdownStart_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_55(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityInstallUpdate_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_56(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_A084E056_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_57(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_A50E5B30_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_58(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_AB083EA9_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_59(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_B0FB7FF5_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_60(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_B62A4061_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_61(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceNetplayDialogGetStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_62(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_B8592D5F_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_63(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceNetplayDialogShutdownStart_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_64(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityHtmlViewerGetStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_65(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityInstallGetStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_66(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityGameSharingInitStart_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_67(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityHtmlViewerInitStart_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_68(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_D17A0573_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_69(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilitySavedataUpdate_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_70(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_D81957B7_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_71(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_D852CDCE_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_72(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_DA97F1AA_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_73(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_DDE5389D_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_74(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_E19C97D6_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_75(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityUnloadModule_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_76(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_E7B778D8_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_77(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_ECE1D3E5_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_78(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_ED0FAD38_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_79(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_EF3582B2_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_80(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityGameSharingShutdownStart_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_81(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityOskGetStatus_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_82(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_F3FBC572_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_83(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityHtmlViewerShutdownStart_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_84(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityOskInitStart_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_85(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityUnloadUsbModule_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_86(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityUnloadAvModule_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_87(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtilityNetconfShutdownStart_xt3zvs$(it);
      return Unit;
    };
  }
  function sceUtility$registerModule$lambda_88(this$sceUtility) {
    return function (it) {
      this$sceUtility.sceUtility_F9E0008C_xt3zvs$(it);
      return Unit;
    };
  }
  sceUtility.prototype.registerModule = function () {
    this.registerFunctionInt_9l82lv$('sceUtilitySavedataInitStart', Kotlin.Long.fromInt(1355074903), 150, void 0, sceUtility$registerModule$lambda(this));
    this.registerFunctionInt_9l82lv$('sceUtilitySavedataGetStatus', new Kotlin.Long(-2005607456, 0), 150, void 0, sceUtility$registerModule$lambda_0(this));
    this.registerFunctionInt_9l82lv$('sceUtilityGetSystemParamInt', new Kotlin.Long(-1512430586, 0), 150, void 0, sceUtility$registerModule$lambda_1(this));
    this.registerFunctionInt_9l82lv$('sceUtilityMsgDialogInitStart', Kotlin.Long.fromInt(718856761), 150, void 0, sceUtility$registerModule$lambda_2(this));
    this.registerFunctionInt_9l82lv$('sceUtilityMsgDialogGetStatus', new Kotlin.Long(-1709403689, 0), 150, void 0, sceUtility$registerModule$lambda_3(this));
    this.registerFunctionVoid_dc3d86$('sceUtilityMsgDialogShutdownStart', Kotlin.Long.fromInt(1739535400), 150, void 0, sceUtility$registerModule$lambda_4(this));
    this.registerFunctionInt_9l82lv$('sceUtilityLoadAvModule', new Kotlin.Long(-970346714, 0), 150, void 0, sceUtility$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_0251B134', Kotlin.Long.fromInt(38908212), 150, void 0, sceUtility$registerModule$lambda_6(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityHtmlViewerUpdate', Kotlin.Long.fromInt(95402468), 150, void 0, sceUtility$registerModule$lambda_7(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_06A48659', Kotlin.Long.fromInt(111445593), 150, void 0, sceUtility$registerModule$lambda_8(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityLoadUsbModule', Kotlin.Long.fromInt(224118482), 150, void 0, sceUtility$registerModule$lambda_9(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_0F3EEAAC', Kotlin.Long.fromInt(255781548), 150, void 0, sceUtility$registerModule$lambda_10(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityInstallInitStart', Kotlin.Long.fromInt(310499982), 150, void 0, sceUtility$registerModule$lambda_11(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_147F7C85', Kotlin.Long.fromInt(343899269), 150, void 0, sceUtility$registerModule$lambda_12(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_149A7895', Kotlin.Long.fromInt(345667733), 150, void 0, sceUtility$registerModule$lambda_13(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityLoadNetModule', Kotlin.Long.fromInt(360292697), 150, void 0, sceUtility$registerModule$lambda_14(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_16A1A8D8', Kotlin.Long.fromInt(379693272), 150, void 0, sceUtility$registerModule$lambda_15(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_16D02AF0', Kotlin.Long.fromInt(382741232), 150, void 0, sceUtility$registerModule$lambda_16(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_28D35634', Kotlin.Long.fromInt(684938804), 150, void 0, sceUtility$registerModule$lambda_17(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_2995D020', Kotlin.Long.fromInt(697684000), 150, void 0, sceUtility$registerModule$lambda_18(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityLoadModule', Kotlin.Long.fromInt(707476960), 150, void 0, sceUtility$registerModule$lambda_19(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_2B96173B', Kotlin.Long.fromInt(731256635), 150, void 0, sceUtility$registerModule$lambda_20(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityGetSystemParamString', Kotlin.Long.fromInt(884441923), 150, void 0, sceUtility$registerModule$lambda_21(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_3AAD51DC', Kotlin.Long.fromInt(984437212), 150, void 0, sceUtility$registerModule$lambda_22(this));
    this.registerFunctionRaw_gh35x6$('sceNetplayDialogInitStart', Kotlin.Long.fromInt(987040487), 150, void 0, sceUtility$registerModule$lambda_23(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityOskShutdownStart', Kotlin.Long.fromInt(1039854505), 150, void 0, sceUtility$registerModule$lambda_24(this));
    this.registerFunctionRaw_gh35x6$('sceNetplayDialogUpdate', Kotlin.Long.fromInt(1098640724), 150, void 0, sceUtility$registerModule$lambda_25(this));
    this.registerFunctionRaw_gh35x6$('sceUtilitySetSystemParamString', Kotlin.Long.fromInt(1105397364), 150, void 0, sceUtility$registerModule$lambda_26(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_42071A83', Kotlin.Long.fromInt(1107761795), 150, void 0, sceUtility$registerModule$lambda_27(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityGetNetParam', Kotlin.Long.fromInt(1129139002), 150, void 0, sceUtility$registerModule$lambda_28(this));
    this.registerFunctionRaw_gh35x6$('sceUtilitySetSystemParamInt', Kotlin.Long.fromInt(1170310406), 150, void 0, sceUtility$registerModule$lambda_29(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityMsgDialogAbort', Kotlin.Long.fromInt(1227406742), 150, void 0, sceUtility$registerModule$lambda_30(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_4A833BA4', Kotlin.Long.fromInt(1250114468), 150, void 0, sceUtility$registerModule$lambda_31(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_4B0A8FE5', Kotlin.Long.fromInt(1258983397), 150, void 0, sceUtility$registerModule$lambda_32(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityOskUpdate', Kotlin.Long.fromInt(1267058785), 150, void 0, sceUtility$registerModule$lambda_33(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityNetconfInitStart', Kotlin.Long.fromInt(1303504697), 150, void 0, sceUtility$registerModule$lambda_34(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityGetNetParamLatestID', Kotlin.Long.fromInt(1340941528), 150, void 0, sceUtility$registerModule$lambda_35(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_54A5C62F', Kotlin.Long.fromInt(1420150319), 150, void 0, sceUtility$registerModule$lambda_36(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityCheckNetParam', Kotlin.Long.fromInt(1592681800), 150, void 0, sceUtility$registerModule$lambda_37(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityInstallShutdownStart', Kotlin.Long.fromInt(1592902218), 150, void 0, sceUtility$registerModule$lambda_38(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityNetconfGetStatus', Kotlin.Long.fromInt(1664264761), 150, void 0, sceUtility$registerModule$lambda_39(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityUnloadNetModule', Kotlin.Long.fromInt(1691683926), 150, void 0, sceUtility$registerModule$lambda_40(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_6F56F9CF', Kotlin.Long.fromInt(1867971023), 150, void 0, sceUtility$registerModule$lambda_41(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_70267ADF', Kotlin.Long.fromInt(1881570015), 150, void 0, sceUtility$registerModule$lambda_42(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityGameSharingUpdate', Kotlin.Long.fromInt(2018711597), 150, void 0, sceUtility$registerModule$lambda_43(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_81C44706', new Kotlin.Long(-2117843194, 0), 150, void 0, sceUtility$registerModule$lambda_44(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_8326AB05', new Kotlin.Long(-2094617851, 0), 150, void 0, sceUtility$registerModule$lambda_45(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_86A03A27', new Kotlin.Long(-2036319705, 0), 150, void 0, sceUtility$registerModule$lambda_46(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_86ABDB1B', new Kotlin.Long(-2035557605, 0), 150, void 0, sceUtility$registerModule$lambda_47(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_88BC7406', new Kotlin.Long(-2000915450, 0), 150, void 0, sceUtility$registerModule$lambda_48(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_89317C8F', new Kotlin.Long(-1993245553, 0), 150, void 0, sceUtility$registerModule$lambda_49(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityNetconfUpdate', new Kotlin.Long(-1847128523, 0), 150, void 0, sceUtility$registerModule$lambda_50(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_943CBA46', new Kotlin.Long(-1807959482, 0), 150, void 0, sceUtility$registerModule$lambda_51(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityGameSharingGetStatus', new Kotlin.Long(-1805032461, 0), 150, void 0, sceUtility$registerModule$lambda_52(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityMsgDialogUpdate', new Kotlin.Long(-1778637509, 0), 150, void 0, sceUtility$registerModule$lambda_53(this));
    this.registerFunctionRaw_gh35x6$('sceUtilitySavedataShutdownStart', new Kotlin.Long(-1752124612, 0), 150, void 0, sceUtility$registerModule$lambda_54(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityInstallUpdate', new Kotlin.Long(-1606604358, 0), 150, void 0, sceUtility$registerModule$lambda_55(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_A084E056', new Kotlin.Long(-1601904554, 0), 150, void 0, sceUtility$registerModule$lambda_56(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_A50E5B30', new Kotlin.Long(-1525785808, 0), 150, void 0, sceUtility$registerModule$lambda_57(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_AB083EA9', new Kotlin.Long(-1425523031, 0), 150, void 0, sceUtility$registerModule$lambda_58(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_B0FB7FF5', new Kotlin.Long(-1325694987, 0), 150, void 0, sceUtility$registerModule$lambda_59(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_B62A4061', new Kotlin.Long(-1238744991, 0), 150, void 0, sceUtility$registerModule$lambda_60(this));
    this.registerFunctionRaw_gh35x6$('sceNetplayDialogGetStatus', new Kotlin.Long(-1227954793, 0), 150, void 0, sceUtility$registerModule$lambda_61(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_B8592D5F', new Kotlin.Long(-1202115233, 0), 150, void 0, sceUtility$registerModule$lambda_62(this));
    this.registerFunctionRaw_gh35x6$('sceNetplayDialogShutdownStart', new Kotlin.Long(-1133813098, 0), 150, void 0, sceUtility$registerModule$lambda_63(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityHtmlViewerGetStatus', new Kotlin.Long(-1113073516, 0), 150, void 0, sceUtility$registerModule$lambda_64(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityInstallGetStatus', new Kotlin.Long(-999288925, 0), 150, void 0, sceUtility$registerModule$lambda_65(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityGameSharingInitStart', new Kotlin.Long(-997001391, 0), 150, void 0, sceUtility$registerModule$lambda_66(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityHtmlViewerInitStart', new Kotlin.Long(-842814911, 0), 150, void 0, sceUtility$registerModule$lambda_67(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_D17A0573', new Kotlin.Long(-780532365, 0), 150, void 0, sceUtility$registerModule$lambda_68(this));
    this.registerFunctionRaw_gh35x6$('sceUtilitySavedataUpdate', new Kotlin.Long(-726048773, 0), 150, void 0, sceUtility$registerModule$lambda_69(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_D81957B7', new Kotlin.Long(-669427785, 0), 150, void 0, sceUtility$registerModule$lambda_70(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_D852CDCE', new Kotlin.Long(-665662002, 0), 150, void 0, sceUtility$registerModule$lambda_71(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_DA97F1AA', new Kotlin.Long(-627576406, 0), 150, void 0, sceUtility$registerModule$lambda_72(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_DDE5389D', new Kotlin.Long(-572180323, 0), 150, void 0, sceUtility$registerModule$lambda_73(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_E19C97D6', new Kotlin.Long(-509831210, 0), 150, void 0, sceUtility$registerModule$lambda_74(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityUnloadModule', new Kotlin.Long(-459538798, 0), 150, void 0, sceUtility$registerModule$lambda_75(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_E7B778D8', new Kotlin.Long(-407406376, 0), 150, void 0, sceUtility$registerModule$lambda_76(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_ECE1D3E5', new Kotlin.Long(-320744475, 0), 150, void 0, sceUtility$registerModule$lambda_77(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_ED0FAD38', new Kotlin.Long(-317739720, 0), 150, void 0, sceUtility$registerModule$lambda_78(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_EF3582B2', new Kotlin.Long(-281705806, 0), 150, void 0, sceUtility$registerModule$lambda_79(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityGameSharingShutdownStart', new Kotlin.Long(-272173041, 0), 150, void 0, sceUtility$registerModule$lambda_80(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityOskGetStatus', new Kotlin.Long(-201891817, 0), 150, void 0, sceUtility$registerModule$lambda_81(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_F3FBC572', new Kotlin.Long(-201603726, 0), 150, void 0, sceUtility$registerModule$lambda_82(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityHtmlViewerShutdownStart', new Kotlin.Long(-171044556, 0), 150, void 0, sceUtility$registerModule$lambda_83(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityOskInitStart', new Kotlin.Long(-165241982, 0), 150, void 0, sceUtility$registerModule$lambda_84(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityUnloadUsbModule', new Kotlin.Long(-162983696, 0), 150, void 0, sceUtility$registerModule$lambda_85(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityUnloadAvModule', new Kotlin.Long(-136785774, 0), 150, void 0, sceUtility$registerModule$lambda_86(this));
    this.registerFunctionRaw_gh35x6$('sceUtilityNetconfShutdownStart', new Kotlin.Long(-125741578, 0), 150, void 0, sceUtility$registerModule$lambda_87(this));
    this.registerFunctionRaw_gh35x6$('sceUtility_F9E0008C', new Kotlin.Long(-102760308, 0), 150, void 0, sceUtility$registerModule$lambda_88(this));
  };
  sceUtility.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceUtility',
    interfaces: [SceModule]
  };
  function PspLanguages(name, ordinal, id) {
    Enum.call(this);
    this.id_quihkc$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PspLanguages_initFields() {
    PspLanguages_initFields = function () {
    };
    PspLanguages$JAPANESE_instance = new PspLanguages('JAPANESE', 0, 0);
    PspLanguages$ENGLISH_instance = new PspLanguages('ENGLISH', 1, 1);
    PspLanguages$FRENCH_instance = new PspLanguages('FRENCH', 2, 2);
    PspLanguages$SPANISH_instance = new PspLanguages('SPANISH', 3, 3);
    PspLanguages$GERMAN_instance = new PspLanguages('GERMAN', 4, 4);
    PspLanguages$ITALIAN_instance = new PspLanguages('ITALIAN', 5, 5);
    PspLanguages$DUTCH_instance = new PspLanguages('DUTCH', 6, 6);
    PspLanguages$PORTUGUESE_instance = new PspLanguages('PORTUGUESE', 7, 7);
    PspLanguages$RUSSIAN_instance = new PspLanguages('RUSSIAN', 8, 8);
    PspLanguages$KOREAN_instance = new PspLanguages('KOREAN', 9, 9);
    PspLanguages$TRADITIONAL_CHINESE_instance = new PspLanguages('TRADITIONAL_CHINESE', 10, 10);
    PspLanguages$SIMPLIFIED_CHINESE_instance = new PspLanguages('SIMPLIFIED_CHINESE', 11, 11);
    PspLanguages$Companion_getInstance();
  }
  Object.defineProperty(PspLanguages.prototype, 'id', {
    get: function () {
      return this.id_quihkc$_0;
    }
  });
  var PspLanguages$JAPANESE_instance;
  function PspLanguages$JAPANESE_getInstance() {
    PspLanguages_initFields();
    return PspLanguages$JAPANESE_instance;
  }
  var PspLanguages$ENGLISH_instance;
  function PspLanguages$ENGLISH_getInstance() {
    PspLanguages_initFields();
    return PspLanguages$ENGLISH_instance;
  }
  var PspLanguages$FRENCH_instance;
  function PspLanguages$FRENCH_getInstance() {
    PspLanguages_initFields();
    return PspLanguages$FRENCH_instance;
  }
  var PspLanguages$SPANISH_instance;
  function PspLanguages$SPANISH_getInstance() {
    PspLanguages_initFields();
    return PspLanguages$SPANISH_instance;
  }
  var PspLanguages$GERMAN_instance;
  function PspLanguages$GERMAN_getInstance() {
    PspLanguages_initFields();
    return PspLanguages$GERMAN_instance;
  }
  var PspLanguages$ITALIAN_instance;
  function PspLanguages$ITALIAN_getInstance() {
    PspLanguages_initFields();
    return PspLanguages$ITALIAN_instance;
  }
  var PspLanguages$DUTCH_instance;
  function PspLanguages$DUTCH_getInstance() {
    PspLanguages_initFields();
    return PspLanguages$DUTCH_instance;
  }
  var PspLanguages$PORTUGUESE_instance;
  function PspLanguages$PORTUGUESE_getInstance() {
    PspLanguages_initFields();
    return PspLanguages$PORTUGUESE_instance;
  }
  var PspLanguages$RUSSIAN_instance;
  function PspLanguages$RUSSIAN_getInstance() {
    PspLanguages_initFields();
    return PspLanguages$RUSSIAN_instance;
  }
  var PspLanguages$KOREAN_instance;
  function PspLanguages$KOREAN_getInstance() {
    PspLanguages_initFields();
    return PspLanguages$KOREAN_instance;
  }
  var PspLanguages$TRADITIONAL_CHINESE_instance;
  function PspLanguages$TRADITIONAL_CHINESE_getInstance() {
    PspLanguages_initFields();
    return PspLanguages$TRADITIONAL_CHINESE_instance;
  }
  var PspLanguages$SIMPLIFIED_CHINESE_instance;
  function PspLanguages$SIMPLIFIED_CHINESE_getInstance() {
    PspLanguages_initFields();
    return PspLanguages$SIMPLIFIED_CHINESE_instance;
  }
  function PspLanguages$Companion() {
    PspLanguages$Companion_instance = this;
    INT32_ENUM.call(this, PspLanguages$values());
  }
  PspLanguages$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [INT32_ENUM]
  };
  var PspLanguages$Companion_instance = null;
  function PspLanguages$Companion_getInstance() {
    PspLanguages_initFields();
    if (PspLanguages$Companion_instance === null) {
      new PspLanguages$Companion();
    }
    return PspLanguages$Companion_instance;
  }
  PspLanguages.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspLanguages',
    interfaces: [IdEnum, Enum]
  };
  function PspLanguages$values() {
    return [PspLanguages$JAPANESE_getInstance(), PspLanguages$ENGLISH_getInstance(), PspLanguages$FRENCH_getInstance(), PspLanguages$SPANISH_getInstance(), PspLanguages$GERMAN_getInstance(), PspLanguages$ITALIAN_getInstance(), PspLanguages$DUTCH_getInstance(), PspLanguages$PORTUGUESE_getInstance(), PspLanguages$RUSSIAN_getInstance(), PspLanguages$KOREAN_getInstance(), PspLanguages$TRADITIONAL_CHINESE_getInstance(), PspLanguages$SIMPLIFIED_CHINESE_getInstance()];
  }
  PspLanguages.values = PspLanguages$values;
  function PspLanguages$valueOf(name) {
    switch (name) {
      case 'JAPANESE':
        return PspLanguages$JAPANESE_getInstance();
      case 'ENGLISH':
        return PspLanguages$ENGLISH_getInstance();
      case 'FRENCH':
        return PspLanguages$FRENCH_getInstance();
      case 'SPANISH':
        return PspLanguages$SPANISH_getInstance();
      case 'GERMAN':
        return PspLanguages$GERMAN_getInstance();
      case 'ITALIAN':
        return PspLanguages$ITALIAN_getInstance();
      case 'DUTCH':
        return PspLanguages$DUTCH_getInstance();
      case 'PORTUGUESE':
        return PspLanguages$PORTUGUESE_getInstance();
      case 'RUSSIAN':
        return PspLanguages$RUSSIAN_getInstance();
      case 'KOREAN':
        return PspLanguages$KOREAN_getInstance();
      case 'TRADITIONAL_CHINESE':
        return PspLanguages$TRADITIONAL_CHINESE_getInstance();
      case 'SIMPLIFIED_CHINESE':
        return PspLanguages$SIMPLIFIED_CHINESE_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.modules.PspLanguages.' + name);
    }
  }
  PspLanguages.valueOf_61zpoe$ = PspLanguages$valueOf;
  function PspUtilitySavedataMode(name, ordinal, id) {
    Enum.call(this);
    this.id_xtlbcp$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PspUtilitySavedataMode_initFields() {
    PspUtilitySavedataMode_initFields = function () {
    };
    PspUtilitySavedataMode$Autoload_instance = new PspUtilitySavedataMode('Autoload', 0, 0);
    PspUtilitySavedataMode$Autosave_instance = new PspUtilitySavedataMode('Autosave', 1, 1);
    PspUtilitySavedataMode$Load_instance = new PspUtilitySavedataMode('Load', 2, 2);
    PspUtilitySavedataMode$Save_instance = new PspUtilitySavedataMode('Save', 3, 3);
    PspUtilitySavedataMode$ListLoad_instance = new PspUtilitySavedataMode('ListLoad', 4, 4);
    PspUtilitySavedataMode$ListSave_instance = new PspUtilitySavedataMode('ListSave', 5, 5);
    PspUtilitySavedataMode$ListDelete_instance = new PspUtilitySavedataMode('ListDelete', 6, 6);
    PspUtilitySavedataMode$Delete_instance = new PspUtilitySavedataMode('Delete', 7, 7);
    PspUtilitySavedataMode$Sizes_instance = new PspUtilitySavedataMode('Sizes', 8, 8);
    PspUtilitySavedataMode$AutoDelete_instance = new PspUtilitySavedataMode('AutoDelete', 9, 9);
    PspUtilitySavedataMode$SingleDelete_instance = new PspUtilitySavedataMode('SingleDelete', 10, 10);
    PspUtilitySavedataMode$List_instance = new PspUtilitySavedataMode('List', 11, 11);
    PspUtilitySavedataMode$Files_instance = new PspUtilitySavedataMode('Files', 12, 12);
    PspUtilitySavedataMode$MakeDataSecure_instance = new PspUtilitySavedataMode('MakeDataSecure', 13, 13);
    PspUtilitySavedataMode$MakeData_instance = new PspUtilitySavedataMode('MakeData', 14, 14);
    PspUtilitySavedataMode$ReadSecure_instance = new PspUtilitySavedataMode('ReadSecure', 15, 15);
    PspUtilitySavedataMode$Read_instance = new PspUtilitySavedataMode('Read', 16, 16);
    PspUtilitySavedataMode$WriteSecure_instance = new PspUtilitySavedataMode('WriteSecure', 17, 17);
    PspUtilitySavedataMode$Write_instance = new PspUtilitySavedataMode('Write', 18, 18);
    PspUtilitySavedataMode$EraseSecure_instance = new PspUtilitySavedataMode('EraseSecure', 19, 19);
    PspUtilitySavedataMode$Erase_instance = new PspUtilitySavedataMode('Erase', 20, 20);
    PspUtilitySavedataMode$DeleteData_instance = new PspUtilitySavedataMode('DeleteData', 21, 21);
    PspUtilitySavedataMode$GetSize_instance = new PspUtilitySavedataMode('GetSize', 22, 22);
    PspUtilitySavedataMode$Companion_getInstance();
  }
  Object.defineProperty(PspUtilitySavedataMode.prototype, 'id', {
    get: function () {
      return this.id_xtlbcp$_0;
    }
  });
  var PspUtilitySavedataMode$Autoload_instance;
  function PspUtilitySavedataMode$Autoload_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$Autoload_instance;
  }
  var PspUtilitySavedataMode$Autosave_instance;
  function PspUtilitySavedataMode$Autosave_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$Autosave_instance;
  }
  var PspUtilitySavedataMode$Load_instance;
  function PspUtilitySavedataMode$Load_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$Load_instance;
  }
  var PspUtilitySavedataMode$Save_instance;
  function PspUtilitySavedataMode$Save_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$Save_instance;
  }
  var PspUtilitySavedataMode$ListLoad_instance;
  function PspUtilitySavedataMode$ListLoad_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$ListLoad_instance;
  }
  var PspUtilitySavedataMode$ListSave_instance;
  function PspUtilitySavedataMode$ListSave_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$ListSave_instance;
  }
  var PspUtilitySavedataMode$ListDelete_instance;
  function PspUtilitySavedataMode$ListDelete_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$ListDelete_instance;
  }
  var PspUtilitySavedataMode$Delete_instance;
  function PspUtilitySavedataMode$Delete_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$Delete_instance;
  }
  var PspUtilitySavedataMode$Sizes_instance;
  function PspUtilitySavedataMode$Sizes_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$Sizes_instance;
  }
  var PspUtilitySavedataMode$AutoDelete_instance;
  function PspUtilitySavedataMode$AutoDelete_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$AutoDelete_instance;
  }
  var PspUtilitySavedataMode$SingleDelete_instance;
  function PspUtilitySavedataMode$SingleDelete_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$SingleDelete_instance;
  }
  var PspUtilitySavedataMode$List_instance;
  function PspUtilitySavedataMode$List_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$List_instance;
  }
  var PspUtilitySavedataMode$Files_instance;
  function PspUtilitySavedataMode$Files_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$Files_instance;
  }
  var PspUtilitySavedataMode$MakeDataSecure_instance;
  function PspUtilitySavedataMode$MakeDataSecure_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$MakeDataSecure_instance;
  }
  var PspUtilitySavedataMode$MakeData_instance;
  function PspUtilitySavedataMode$MakeData_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$MakeData_instance;
  }
  var PspUtilitySavedataMode$ReadSecure_instance;
  function PspUtilitySavedataMode$ReadSecure_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$ReadSecure_instance;
  }
  var PspUtilitySavedataMode$Read_instance;
  function PspUtilitySavedataMode$Read_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$Read_instance;
  }
  var PspUtilitySavedataMode$WriteSecure_instance;
  function PspUtilitySavedataMode$WriteSecure_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$WriteSecure_instance;
  }
  var PspUtilitySavedataMode$Write_instance;
  function PspUtilitySavedataMode$Write_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$Write_instance;
  }
  var PspUtilitySavedataMode$EraseSecure_instance;
  function PspUtilitySavedataMode$EraseSecure_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$EraseSecure_instance;
  }
  var PspUtilitySavedataMode$Erase_instance;
  function PspUtilitySavedataMode$Erase_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$Erase_instance;
  }
  var PspUtilitySavedataMode$DeleteData_instance;
  function PspUtilitySavedataMode$DeleteData_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$DeleteData_instance;
  }
  var PspUtilitySavedataMode$GetSize_instance;
  function PspUtilitySavedataMode$GetSize_getInstance() {
    PspUtilitySavedataMode_initFields();
    return PspUtilitySavedataMode$GetSize_instance;
  }
  function PspUtilitySavedataMode$Companion() {
    PspUtilitySavedataMode$Companion_instance = this;
    INT32_ENUM.call(this, PspUtilitySavedataMode$values());
  }
  PspUtilitySavedataMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [INT32_ENUM]
  };
  var PspUtilitySavedataMode$Companion_instance = null;
  function PspUtilitySavedataMode$Companion_getInstance() {
    PspUtilitySavedataMode_initFields();
    if (PspUtilitySavedataMode$Companion_instance === null) {
      new PspUtilitySavedataMode$Companion();
    }
    return PspUtilitySavedataMode$Companion_instance;
  }
  PspUtilitySavedataMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspUtilitySavedataMode',
    interfaces: [IdEnum, Enum]
  };
  function PspUtilitySavedataMode$values() {
    return [PspUtilitySavedataMode$Autoload_getInstance(), PspUtilitySavedataMode$Autosave_getInstance(), PspUtilitySavedataMode$Load_getInstance(), PspUtilitySavedataMode$Save_getInstance(), PspUtilitySavedataMode$ListLoad_getInstance(), PspUtilitySavedataMode$ListSave_getInstance(), PspUtilitySavedataMode$ListDelete_getInstance(), PspUtilitySavedataMode$Delete_getInstance(), PspUtilitySavedataMode$Sizes_getInstance(), PspUtilitySavedataMode$AutoDelete_getInstance(), PspUtilitySavedataMode$SingleDelete_getInstance(), PspUtilitySavedataMode$List_getInstance(), PspUtilitySavedataMode$Files_getInstance(), PspUtilitySavedataMode$MakeDataSecure_getInstance(), PspUtilitySavedataMode$MakeData_getInstance(), PspUtilitySavedataMode$ReadSecure_getInstance(), PspUtilitySavedataMode$Read_getInstance(), PspUtilitySavedataMode$WriteSecure_getInstance(), PspUtilitySavedataMode$Write_getInstance(), PspUtilitySavedataMode$EraseSecure_getInstance(), PspUtilitySavedataMode$Erase_getInstance(), PspUtilitySavedataMode$DeleteData_getInstance(), PspUtilitySavedataMode$GetSize_getInstance()];
  }
  PspUtilitySavedataMode.values = PspUtilitySavedataMode$values;
  function PspUtilitySavedataMode$valueOf(name) {
    switch (name) {
      case 'Autoload':
        return PspUtilitySavedataMode$Autoload_getInstance();
      case 'Autosave':
        return PspUtilitySavedataMode$Autosave_getInstance();
      case 'Load':
        return PspUtilitySavedataMode$Load_getInstance();
      case 'Save':
        return PspUtilitySavedataMode$Save_getInstance();
      case 'ListLoad':
        return PspUtilitySavedataMode$ListLoad_getInstance();
      case 'ListSave':
        return PspUtilitySavedataMode$ListSave_getInstance();
      case 'ListDelete':
        return PspUtilitySavedataMode$ListDelete_getInstance();
      case 'Delete':
        return PspUtilitySavedataMode$Delete_getInstance();
      case 'Sizes':
        return PspUtilitySavedataMode$Sizes_getInstance();
      case 'AutoDelete':
        return PspUtilitySavedataMode$AutoDelete_getInstance();
      case 'SingleDelete':
        return PspUtilitySavedataMode$SingleDelete_getInstance();
      case 'List':
        return PspUtilitySavedataMode$List_getInstance();
      case 'Files':
        return PspUtilitySavedataMode$Files_getInstance();
      case 'MakeDataSecure':
        return PspUtilitySavedataMode$MakeDataSecure_getInstance();
      case 'MakeData':
        return PspUtilitySavedataMode$MakeData_getInstance();
      case 'ReadSecure':
        return PspUtilitySavedataMode$ReadSecure_getInstance();
      case 'Read':
        return PspUtilitySavedataMode$Read_getInstance();
      case 'WriteSecure':
        return PspUtilitySavedataMode$WriteSecure_getInstance();
      case 'Write':
        return PspUtilitySavedataMode$Write_getInstance();
      case 'EraseSecure':
        return PspUtilitySavedataMode$EraseSecure_getInstance();
      case 'Erase':
        return PspUtilitySavedataMode$Erase_getInstance();
      case 'DeleteData':
        return PspUtilitySavedataMode$DeleteData_getInstance();
      case 'GetSize':
        return PspUtilitySavedataMode$GetSize_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.modules.PspUtilitySavedataMode.' + name);
    }
  }
  PspUtilitySavedataMode.valueOf_61zpoe$ = PspUtilitySavedataMode$valueOf;
  function PspUtilitySavedataFocus(name, ordinal, id) {
    Enum.call(this);
    this.id_71zyuu$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PspUtilitySavedataFocus_initFields() {
    PspUtilitySavedataFocus_initFields = function () {
    };
    PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN_instance = new PspUtilitySavedataFocus('PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN', 0, 0);
    PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_FIRSTLIST_instance = new PspUtilitySavedataFocus('PSP_UTILITY_SAVEDATA_FOCUS_FIRSTLIST', 1, 1);
    PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LASTLIST_instance = new PspUtilitySavedataFocus('PSP_UTILITY_SAVEDATA_FOCUS_LASTLIST', 2, 2);
    PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LATEST_instance = new PspUtilitySavedataFocus('PSP_UTILITY_SAVEDATA_FOCUS_LATEST', 3, 3);
    PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_OLDEST_instance = new PspUtilitySavedataFocus('PSP_UTILITY_SAVEDATA_FOCUS_OLDEST', 4, 4);
    PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN2_instance = new PspUtilitySavedataFocus('PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN2', 5, 5);
    PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN3_instance = new PspUtilitySavedataFocus('PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN3', 6, 6);
    PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_FIRSTEMPTY_instance = new PspUtilitySavedataFocus('PSP_UTILITY_SAVEDATA_FOCUS_FIRSTEMPTY', 7, 7);
    PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LASTEMPTY_instance = new PspUtilitySavedataFocus('PSP_UTILITY_SAVEDATA_FOCUS_LASTEMPTY', 8, 8);
    PspUtilitySavedataFocus$Companion_getInstance();
  }
  Object.defineProperty(PspUtilitySavedataFocus.prototype, 'id', {
    get: function () {
      return this.id_71zyuu$_0;
    }
  });
  var PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN_instance;
  function PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN_getInstance() {
    PspUtilitySavedataFocus_initFields();
    return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN_instance;
  }
  var PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_FIRSTLIST_instance;
  function PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_FIRSTLIST_getInstance() {
    PspUtilitySavedataFocus_initFields();
    return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_FIRSTLIST_instance;
  }
  var PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LASTLIST_instance;
  function PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LASTLIST_getInstance() {
    PspUtilitySavedataFocus_initFields();
    return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LASTLIST_instance;
  }
  var PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LATEST_instance;
  function PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LATEST_getInstance() {
    PspUtilitySavedataFocus_initFields();
    return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LATEST_instance;
  }
  var PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_OLDEST_instance;
  function PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_OLDEST_getInstance() {
    PspUtilitySavedataFocus_initFields();
    return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_OLDEST_instance;
  }
  var PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN2_instance;
  function PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN2_getInstance() {
    PspUtilitySavedataFocus_initFields();
    return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN2_instance;
  }
  var PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN3_instance;
  function PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN3_getInstance() {
    PspUtilitySavedataFocus_initFields();
    return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN3_instance;
  }
  var PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_FIRSTEMPTY_instance;
  function PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_FIRSTEMPTY_getInstance() {
    PspUtilitySavedataFocus_initFields();
    return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_FIRSTEMPTY_instance;
  }
  var PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LASTEMPTY_instance;
  function PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LASTEMPTY_getInstance() {
    PspUtilitySavedataFocus_initFields();
    return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LASTEMPTY_instance;
  }
  function PspUtilitySavedataFocus$Companion() {
    PspUtilitySavedataFocus$Companion_instance = this;
    INT32_ENUM.call(this, PspUtilitySavedataFocus$values());
  }
  PspUtilitySavedataFocus$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [INT32_ENUM]
  };
  var PspUtilitySavedataFocus$Companion_instance = null;
  function PspUtilitySavedataFocus$Companion_getInstance() {
    PspUtilitySavedataFocus_initFields();
    if (PspUtilitySavedataFocus$Companion_instance === null) {
      new PspUtilitySavedataFocus$Companion();
    }
    return PspUtilitySavedataFocus$Companion_instance;
  }
  PspUtilitySavedataFocus.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspUtilitySavedataFocus',
    interfaces: [IdEnum, Enum]
  };
  function PspUtilitySavedataFocus$values() {
    return [PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN_getInstance(), PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_FIRSTLIST_getInstance(), PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LASTLIST_getInstance(), PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LATEST_getInstance(), PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_OLDEST_getInstance(), PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN2_getInstance(), PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN3_getInstance(), PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_FIRSTEMPTY_getInstance(), PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LASTEMPTY_getInstance()];
  }
  PspUtilitySavedataFocus.values = PspUtilitySavedataFocus$values;
  function PspUtilitySavedataFocus$valueOf(name) {
    switch (name) {
      case 'PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN':
        return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN_getInstance();
      case 'PSP_UTILITY_SAVEDATA_FOCUS_FIRSTLIST':
        return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_FIRSTLIST_getInstance();
      case 'PSP_UTILITY_SAVEDATA_FOCUS_LASTLIST':
        return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LASTLIST_getInstance();
      case 'PSP_UTILITY_SAVEDATA_FOCUS_LATEST':
        return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LATEST_getInstance();
      case 'PSP_UTILITY_SAVEDATA_FOCUS_OLDEST':
        return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_OLDEST_getInstance();
      case 'PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN2':
        return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN2_getInstance();
      case 'PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN3':
        return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN3_getInstance();
      case 'PSP_UTILITY_SAVEDATA_FOCUS_FIRSTEMPTY':
        return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_FIRSTEMPTY_getInstance();
      case 'PSP_UTILITY_SAVEDATA_FOCUS_LASTEMPTY':
        return PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LASTEMPTY_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.modules.PspUtilitySavedataFocus.' + name);
    }
  }
  PspUtilitySavedataFocus.valueOf_61zpoe$ = PspUtilitySavedataFocus$valueOf;
  function PspUtilityDialogCommon(size, language, buttonSwap, graphicsThread, accessThread, fontThread, soundThread, result, reserved) {
    PspUtilityDialogCommon$Companion_getInstance();
    if (size === void 0)
      size = 0;
    if (language === void 0)
      language = PspLanguages$SPANISH_getInstance();
    if (buttonSwap === void 0)
      buttonSwap = 0;
    if (graphicsThread === void 0)
      graphicsThread = 0;
    if (accessThread === void 0)
      accessThread = 0;
    if (fontThread === void 0)
      fontThread = 0;
    if (soundThread === void 0)
      soundThread = 0;
    if (result === void 0)
      result = SceKernelErrors_getInstance().ERROR_OK;
    if (reserved === void 0)
      reserved = arrayListOf([0, 0, 0, 0]);
    this.size = size;
    this.language = language;
    this.buttonSwap = buttonSwap;
    this.graphicsThread = graphicsThread;
    this.accessThread = accessThread;
    this.fontThread = fontThread;
    this.soundThread = soundThread;
    this.result = result;
    this.reserved = reserved;
  }
  function PspUtilityDialogCommon$Companion() {
    PspUtilityDialogCommon$Companion_instance = this;
    Struct.call(this, PspUtilityDialogCommon$PspUtilityDialogCommon$Companion_init$lambda, [AS(getPropertyCallableRef('size', 1, function ($receiver) {
      return $receiver.size;
    }, function ($receiver, value) {
      $receiver.size = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('language', 1, function ($receiver) {
      return $receiver.language;
    }, function ($receiver, value) {
      $receiver.language = value;
    }), PspLanguages$Companion_getInstance()), AS(getPropertyCallableRef('buttonSwap', 1, function ($receiver) {
      return $receiver.buttonSwap;
    }, function ($receiver, value) {
      $receiver.buttonSwap = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('graphicsThread', 1, function ($receiver) {
      return $receiver.graphicsThread;
    }, function ($receiver, value) {
      $receiver.graphicsThread = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('accessThread', 1, function ($receiver) {
      return $receiver.accessThread;
    }, function ($receiver, value) {
      $receiver.accessThread = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('fontThread', 1, function ($receiver) {
      return $receiver.fontThread;
    }, function ($receiver, value) {
      $receiver.fontThread = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('soundThread', 1, function ($receiver) {
      return $receiver.soundThread;
    }, function ($receiver, value) {
      $receiver.soundThread = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('result', 1, function ($receiver) {
      return $receiver.result;
    }, function ($receiver, value) {
      $receiver.result = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('reserved', 1, function ($receiver) {
      return $receiver.reserved;
    }, function ($receiver, value) {
      $receiver.reserved = value;
    }), new ARRAY(INT32_getInstance(), 4))]);
  }
  function PspUtilityDialogCommon$PspUtilityDialogCommon$Companion_init$lambda() {
    return new PspUtilityDialogCommon();
  }
  PspUtilityDialogCommon$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var PspUtilityDialogCommon$Companion_instance = null;
  function PspUtilityDialogCommon$Companion_getInstance() {
    if (PspUtilityDialogCommon$Companion_instance === null) {
      new PspUtilityDialogCommon$Companion();
    }
    return PspUtilityDialogCommon$Companion_instance;
  }
  PspUtilityDialogCommon.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspUtilityDialogCommon',
    interfaces: []
  };
  PspUtilityDialogCommon.prototype.component1 = function () {
    return this.size;
  };
  PspUtilityDialogCommon.prototype.component2 = function () {
    return this.language;
  };
  PspUtilityDialogCommon.prototype.component3 = function () {
    return this.buttonSwap;
  };
  PspUtilityDialogCommon.prototype.component4 = function () {
    return this.graphicsThread;
  };
  PspUtilityDialogCommon.prototype.component5 = function () {
    return this.accessThread;
  };
  PspUtilityDialogCommon.prototype.component6 = function () {
    return this.fontThread;
  };
  PspUtilityDialogCommon.prototype.component7 = function () {
    return this.soundThread;
  };
  PspUtilityDialogCommon.prototype.component8 = function () {
    return this.result;
  };
  PspUtilityDialogCommon.prototype.component9 = function () {
    return this.reserved;
  };
  PspUtilityDialogCommon.prototype.copy_uuncng$ = function (size, language, buttonSwap, graphicsThread, accessThread, fontThread, soundThread, result, reserved) {
    return new PspUtilityDialogCommon(size === void 0 ? this.size : size, language === void 0 ? this.language : language, buttonSwap === void 0 ? this.buttonSwap : buttonSwap, graphicsThread === void 0 ? this.graphicsThread : graphicsThread, accessThread === void 0 ? this.accessThread : accessThread, fontThread === void 0 ? this.fontThread : fontThread, soundThread === void 0 ? this.soundThread : soundThread, result === void 0 ? this.result : result, reserved === void 0 ? this.reserved : reserved);
  };
  PspUtilityDialogCommon.prototype.toString = function () {
    return 'PspUtilityDialogCommon(size=' + Kotlin.toString(this.size) + (', language=' + Kotlin.toString(this.language)) + (', buttonSwap=' + Kotlin.toString(this.buttonSwap)) + (', graphicsThread=' + Kotlin.toString(this.graphicsThread)) + (', accessThread=' + Kotlin.toString(this.accessThread)) + (', fontThread=' + Kotlin.toString(this.fontThread)) + (', soundThread=' + Kotlin.toString(this.soundThread)) + (', result=' + Kotlin.toString(this.result)) + (', reserved=' + Kotlin.toString(this.reserved)) + ')';
  };
  PspUtilityDialogCommon.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.language) | 0;
    result = result * 31 + Kotlin.hashCode(this.buttonSwap) | 0;
    result = result * 31 + Kotlin.hashCode(this.graphicsThread) | 0;
    result = result * 31 + Kotlin.hashCode(this.accessThread) | 0;
    result = result * 31 + Kotlin.hashCode(this.fontThread) | 0;
    result = result * 31 + Kotlin.hashCode(this.soundThread) | 0;
    result = result * 31 + Kotlin.hashCode(this.result) | 0;
    result = result * 31 + Kotlin.hashCode(this.reserved) | 0;
    return result;
  };
  PspUtilityDialogCommon.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.size, other.size) && Kotlin.equals(this.language, other.language) && Kotlin.equals(this.buttonSwap, other.buttonSwap) && Kotlin.equals(this.graphicsThread, other.graphicsThread) && Kotlin.equals(this.accessThread, other.accessThread) && Kotlin.equals(this.fontThread, other.fontThread) && Kotlin.equals(this.soundThread, other.soundThread) && Kotlin.equals(this.result, other.result) && Kotlin.equals(this.reserved, other.reserved)))));
  };
  function PspUtilitySavedataSFOParam(title, savedataTitle, detail, parentalLevel, unknown) {
    PspUtilitySavedataSFOParam$Companion_getInstance();
    if (title === void 0)
      title = '';
    if (savedataTitle === void 0)
      savedataTitle = '';
    if (detail === void 0)
      detail = '';
    if (parentalLevel === void 0)
      parentalLevel = 0;
    if (unknown === void 0)
      unknown = arrayListOf([0, 0, 0]);
    this.title = title;
    this.savedataTitle = savedataTitle;
    this.detail = detail;
    this.parentalLevel = parentalLevel;
    this.unknown = unknown;
  }
  function PspUtilitySavedataSFOParam$Companion() {
    PspUtilitySavedataSFOParam$Companion_instance = this;
    Struct.call(this, PspUtilitySavedataSFOParam$PspUtilitySavedataSFOParam$Companion_init$lambda, [AS(getPropertyCallableRef('title', 1, function ($receiver) {
      return $receiver.title;
    }, function ($receiver, value) {
      $receiver.title = value;
    }), STRINGZ_init(128)), AS(getPropertyCallableRef('savedataTitle', 1, function ($receiver) {
      return $receiver.savedataTitle;
    }, function ($receiver, value) {
      $receiver.savedataTitle = value;
    }), STRINGZ_init(128)), AS(getPropertyCallableRef('detail', 1, function ($receiver) {
      return $receiver.detail;
    }, function ($receiver, value) {
      $receiver.detail = value;
    }), STRINGZ_init(1024)), AS(getPropertyCallableRef('parentalLevel', 1, function ($receiver) {
      return $receiver.parentalLevel;
    }, function ($receiver, value) {
      $receiver.parentalLevel = value;
    }), UINT8_getInstance()), AS(getPropertyCallableRef('unknown', 1, function ($receiver) {
      return $receiver.unknown;
    }, function ($receiver, value) {
      $receiver.unknown = value;
    }), new ARRAY(UINT8_getInstance(), 3))]);
  }
  function PspUtilitySavedataSFOParam$PspUtilitySavedataSFOParam$Companion_init$lambda() {
    return new PspUtilitySavedataSFOParam();
  }
  PspUtilitySavedataSFOParam$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var PspUtilitySavedataSFOParam$Companion_instance = null;
  function PspUtilitySavedataSFOParam$Companion_getInstance() {
    if (PspUtilitySavedataSFOParam$Companion_instance === null) {
      new PspUtilitySavedataSFOParam$Companion();
    }
    return PspUtilitySavedataSFOParam$Companion_instance;
  }
  PspUtilitySavedataSFOParam.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspUtilitySavedataSFOParam',
    interfaces: []
  };
  PspUtilitySavedataSFOParam.prototype.component1 = function () {
    return this.title;
  };
  PspUtilitySavedataSFOParam.prototype.component2 = function () {
    return this.savedataTitle;
  };
  PspUtilitySavedataSFOParam.prototype.component3 = function () {
    return this.detail;
  };
  PspUtilitySavedataSFOParam.prototype.component4 = function () {
    return this.parentalLevel;
  };
  PspUtilitySavedataSFOParam.prototype.component5 = function () {
    return this.unknown;
  };
  PspUtilitySavedataSFOParam.prototype.copy_hupmi7$ = function (title, savedataTitle, detail, parentalLevel, unknown) {
    return new PspUtilitySavedataSFOParam(title === void 0 ? this.title : title, savedataTitle === void 0 ? this.savedataTitle : savedataTitle, detail === void 0 ? this.detail : detail, parentalLevel === void 0 ? this.parentalLevel : parentalLevel, unknown === void 0 ? this.unknown : unknown);
  };
  PspUtilitySavedataSFOParam.prototype.toString = function () {
    return 'PspUtilitySavedataSFOParam(title=' + Kotlin.toString(this.title) + (', savedataTitle=' + Kotlin.toString(this.savedataTitle)) + (', detail=' + Kotlin.toString(this.detail)) + (', parentalLevel=' + Kotlin.toString(this.parentalLevel)) + (', unknown=' + Kotlin.toString(this.unknown)) + ')';
  };
  PspUtilitySavedataSFOParam.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.title) | 0;
    result = result * 31 + Kotlin.hashCode(this.savedataTitle) | 0;
    result = result * 31 + Kotlin.hashCode(this.detail) | 0;
    result = result * 31 + Kotlin.hashCode(this.parentalLevel) | 0;
    result = result * 31 + Kotlin.hashCode(this.unknown) | 0;
    return result;
  };
  PspUtilitySavedataSFOParam.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.title, other.title) && Kotlin.equals(this.savedataTitle, other.savedataTitle) && Kotlin.equals(this.detail, other.detail) && Kotlin.equals(this.parentalLevel, other.parentalLevel) && Kotlin.equals(this.unknown, other.unknown)))));
  };
  function PspUtilitySavedataFileData(bufferPointer, bufferSize, size, unknown) {
    PspUtilitySavedataFileData$Companion_getInstance();
    if (bufferPointer === void 0)
      bufferPointer = 0;
    if (bufferSize === void 0)
      bufferSize = 0;
    if (size === void 0)
      size = 0;
    if (unknown === void 0)
      unknown = 0;
    this.bufferPointer = bufferPointer;
    this.bufferSize = bufferSize;
    this.size = size;
    this.unknown = unknown;
  }
  Object.defineProperty(PspUtilitySavedataFileData.prototype, 'used', {
    get: function () {
      if (this.bufferPointer === 0)
        return false;
      if (this.size === 0)
        return false;
      return true;
    }
  });
  function PspUtilitySavedataFileData$Companion() {
    PspUtilitySavedataFileData$Companion_instance = this;
    Struct.call(this, PspUtilitySavedataFileData$PspUtilitySavedataFileData$Companion_init$lambda, [AS(getPropertyCallableRef('bufferPointer', 1, function ($receiver) {
      return $receiver.bufferPointer;
    }, function ($receiver, value) {
      $receiver.bufferPointer = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('bufferSize', 1, function ($receiver) {
      return $receiver.bufferSize;
    }, function ($receiver, value) {
      $receiver.bufferSize = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('size', 1, function ($receiver) {
      return $receiver.size;
    }, function ($receiver, value) {
      $receiver.size = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('unknown', 1, function ($receiver) {
      return $receiver.unknown;
    }, function ($receiver, value) {
      $receiver.unknown = value;
    }), INT32_getInstance())]);
  }
  function PspUtilitySavedataFileData$PspUtilitySavedataFileData$Companion_init$lambda() {
    return new PspUtilitySavedataFileData();
  }
  PspUtilitySavedataFileData$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var PspUtilitySavedataFileData$Companion_instance = null;
  function PspUtilitySavedataFileData$Companion_getInstance() {
    if (PspUtilitySavedataFileData$Companion_instance === null) {
      new PspUtilitySavedataFileData$Companion();
    }
    return PspUtilitySavedataFileData$Companion_instance;
  }
  PspUtilitySavedataFileData.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspUtilitySavedataFileData',
    interfaces: []
  };
  PspUtilitySavedataFileData.prototype.component1 = function () {
    return this.bufferPointer;
  };
  PspUtilitySavedataFileData.prototype.component2 = function () {
    return this.bufferSize;
  };
  PspUtilitySavedataFileData.prototype.component3 = function () {
    return this.size;
  };
  PspUtilitySavedataFileData.prototype.component4 = function () {
    return this.unknown;
  };
  PspUtilitySavedataFileData.prototype.copy_tjonv8$ = function (bufferPointer, bufferSize, size, unknown) {
    return new PspUtilitySavedataFileData(bufferPointer === void 0 ? this.bufferPointer : bufferPointer, bufferSize === void 0 ? this.bufferSize : bufferSize, size === void 0 ? this.size : size, unknown === void 0 ? this.unknown : unknown);
  };
  PspUtilitySavedataFileData.prototype.toString = function () {
    return 'PspUtilitySavedataFileData(bufferPointer=' + Kotlin.toString(this.bufferPointer) + (', bufferSize=' + Kotlin.toString(this.bufferSize)) + (', size=' + Kotlin.toString(this.size)) + (', unknown=' + Kotlin.toString(this.unknown)) + ')';
  };
  PspUtilitySavedataFileData.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.bufferPointer) | 0;
    result = result * 31 + Kotlin.hashCode(this.bufferSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.unknown) | 0;
    return result;
  };
  PspUtilitySavedataFileData.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.bufferPointer, other.bufferPointer) && Kotlin.equals(this.bufferSize, other.bufferSize) && Kotlin.equals(this.size, other.size) && Kotlin.equals(this.unknown, other.unknown)))));
  };
  function SceUtilitySavedataParam(base, mode, unknown1, overwrite, gameName, saveName, saveNameListPointer, fileName, dataBufPointer, dataBufSize, dataSize, sfoParam, icon0FileData, icon1FileData, pic1FileData, snd0FileData, newDataPointer, focus, abortStatus, msFreeAddr, msDataAddr, utilityDataAddr, key, secureVersion, multiStatus, idListAddr, fileListAddr, sizeAddr, unknown3) {
    SceUtilitySavedataParam$Companion_getInstance();
    if (base === void 0)
      base = new PspUtilityDialogCommon();
    if (mode === void 0)
      mode = PspUtilitySavedataMode$Autoload_getInstance();
    if (unknown1 === void 0)
      unknown1 = 0;
    if (overwrite === void 0)
      overwrite = 0;
    if (gameName === void 0)
      gameName = '';
    if (saveName === void 0)
      saveName = '';
    if (saveNameListPointer === void 0)
      saveNameListPointer = 0;
    if (fileName === void 0)
      fileName = '';
    if (dataBufPointer === void 0)
      dataBufPointer = 0;
    if (dataBufSize === void 0)
      dataBufSize = 0;
    if (dataSize === void 0)
      dataSize = 0;
    if (sfoParam === void 0)
      sfoParam = new PspUtilitySavedataSFOParam();
    if (icon0FileData === void 0)
      icon0FileData = new PspUtilitySavedataFileData();
    if (icon1FileData === void 0)
      icon1FileData = new PspUtilitySavedataFileData();
    if (pic1FileData === void 0)
      pic1FileData = new PspUtilitySavedataFileData();
    if (snd0FileData === void 0)
      snd0FileData = new PspUtilitySavedataFileData();
    if (newDataPointer === void 0)
      newDataPointer = 0;
    if (focus === void 0)
      focus = PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN_getInstance();
    if (abortStatus === void 0)
      abortStatus = 0;
    if (msFreeAddr === void 0)
      msFreeAddr = 0;
    if (msDataAddr === void 0)
      msDataAddr = 0;
    if (utilityDataAddr === void 0)
      utilityDataAddr = 0;
    if (key === void 0)
      key = arrayListOf([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    if (secureVersion === void 0)
      secureVersion = 0;
    if (multiStatus === void 0)
      multiStatus = 0;
    if (idListAddr === void 0)
      idListAddr = 0;
    if (fileListAddr === void 0)
      fileListAddr = 0;
    if (sizeAddr === void 0)
      sizeAddr = 0;
    if (unknown3 === void 0)
      unknown3 = arrayListOf([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    this.base = base;
    this.mode = mode;
    this.unknown1 = unknown1;
    this.overwrite = overwrite;
    this.gameName = gameName;
    this.saveName = saveName;
    this.saveNameListPointer = saveNameListPointer;
    this.fileName = fileName;
    this.dataBufPointer = dataBufPointer;
    this.dataBufSize = dataBufSize;
    this.dataSize = dataSize;
    this.sfoParam = sfoParam;
    this.icon0FileData = icon0FileData;
    this.icon1FileData = icon1FileData;
    this.pic1FileData = pic1FileData;
    this.snd0FileData = snd0FileData;
    this.newDataPointer = newDataPointer;
    this.focus = focus;
    this.abortStatus = abortStatus;
    this.msFreeAddr = msFreeAddr;
    this.msDataAddr = msDataAddr;
    this.utilityDataAddr = utilityDataAddr;
    this.key = key;
    this.secureVersion = secureVersion;
    this.multiStatus = multiStatus;
    this.idListAddr = idListAddr;
    this.fileListAddr = fileListAddr;
    this.sizeAddr = sizeAddr;
    this.unknown3 = unknown3;
  }
  function SceUtilitySavedataParam$Companion() {
    SceUtilitySavedataParam$Companion_instance = this;
    Struct.call(this, SceUtilitySavedataParam$SceUtilitySavedataParam$Companion_init$lambda, [AS(getPropertyCallableRef('base', 1, function ($receiver) {
      return $receiver.base;
    }, function ($receiver, value) {
      $receiver.base = value;
    }), PspUtilityDialogCommon$Companion_getInstance()), AS(getPropertyCallableRef('mode', 1, function ($receiver) {
      return $receiver.mode;
    }, function ($receiver, value) {
      $receiver.mode = value;
    }), PspUtilitySavedataMode$Companion_getInstance()), AS(getPropertyCallableRef('unknown1', 1, function ($receiver) {
      return $receiver.unknown1;
    }, function ($receiver, value) {
      $receiver.unknown1 = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('overwrite', 1, function ($receiver) {
      return $receiver.overwrite;
    }, function ($receiver, value) {
      $receiver.overwrite = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('gameName', 1, function ($receiver) {
      return $receiver.gameName;
    }, function ($receiver, value) {
      $receiver.gameName = value;
    }), STRINGZ_init(16)), AS(getPropertyCallableRef('saveName', 1, function ($receiver) {
      return $receiver.saveName;
    }, function ($receiver, value) {
      $receiver.saveName = value;
    }), STRINGZ_init(20)), AS(getPropertyCallableRef('saveNameListPointer', 1, function ($receiver) {
      return $receiver.saveNameListPointer;
    }, function ($receiver, value) {
      $receiver.saveNameListPointer = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('fileName', 1, function ($receiver) {
      return $receiver.fileName;
    }, function ($receiver, value) {
      $receiver.fileName = value;
    }), STRINGZ_init(16)), AS(getPropertyCallableRef('dataBufPointer', 1, function ($receiver) {
      return $receiver.dataBufPointer;
    }, function ($receiver, value) {
      $receiver.dataBufPointer = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('dataBufSize', 1, function ($receiver) {
      return $receiver.dataBufSize;
    }, function ($receiver, value) {
      $receiver.dataBufSize = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('dataSize', 1, function ($receiver) {
      return $receiver.dataSize;
    }, function ($receiver, value) {
      $receiver.dataSize = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('sfoParam', 1, function ($receiver) {
      return $receiver.sfoParam;
    }, function ($receiver, value) {
      $receiver.sfoParam = value;
    }), PspUtilitySavedataSFOParam$Companion_getInstance()), AS(getPropertyCallableRef('icon0FileData', 1, function ($receiver) {
      return $receiver.icon0FileData;
    }, function ($receiver, value) {
      $receiver.icon0FileData = value;
    }), PspUtilitySavedataFileData$Companion_getInstance()), AS(getPropertyCallableRef('icon1FileData', 1, function ($receiver) {
      return $receiver.icon1FileData;
    }, function ($receiver, value) {
      $receiver.icon1FileData = value;
    }), PspUtilitySavedataFileData$Companion_getInstance()), AS(getPropertyCallableRef('pic1FileData', 1, function ($receiver) {
      return $receiver.pic1FileData;
    }, function ($receiver, value) {
      $receiver.pic1FileData = value;
    }), PspUtilitySavedataFileData$Companion_getInstance()), AS(getPropertyCallableRef('snd0FileData', 1, function ($receiver) {
      return $receiver.snd0FileData;
    }, function ($receiver, value) {
      $receiver.snd0FileData = value;
    }), PspUtilitySavedataFileData$Companion_getInstance()), AS(getPropertyCallableRef('newDataPointer', 1, function ($receiver) {
      return $receiver.newDataPointer;
    }, function ($receiver, value) {
      $receiver.newDataPointer = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('focus', 1, function ($receiver) {
      return $receiver.focus;
    }, function ($receiver, value) {
      $receiver.focus = value;
    }), PspUtilitySavedataFocus$Companion_getInstance()), AS(getPropertyCallableRef('abortStatus', 1, function ($receiver) {
      return $receiver.abortStatus;
    }, function ($receiver, value) {
      $receiver.abortStatus = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('msFreeAddr', 1, function ($receiver) {
      return $receiver.msFreeAddr;
    }, function ($receiver, value) {
      $receiver.msFreeAddr = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('msDataAddr', 1, function ($receiver) {
      return $receiver.msDataAddr;
    }, function ($receiver, value) {
      $receiver.msDataAddr = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('utilityDataAddr', 1, function ($receiver) {
      return $receiver.utilityDataAddr;
    }, function ($receiver, value) {
      $receiver.utilityDataAddr = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('key', 1, function ($receiver) {
      return $receiver.key;
    }, function ($receiver, value) {
      $receiver.key = value;
    }), new ARRAY(UINT8_getInstance(), 16)), AS(getPropertyCallableRef('secureVersion', 1, function ($receiver) {
      return $receiver.secureVersion;
    }, function ($receiver, value) {
      $receiver.secureVersion = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('multiStatus', 1, function ($receiver) {
      return $receiver.multiStatus;
    }, function ($receiver, value) {
      $receiver.multiStatus = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('idListAddr', 1, function ($receiver) {
      return $receiver.idListAddr;
    }, function ($receiver, value) {
      $receiver.idListAddr = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('fileListAddr', 1, function ($receiver) {
      return $receiver.fileListAddr;
    }, function ($receiver, value) {
      $receiver.fileListAddr = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('sizeAddr', 1, function ($receiver) {
      return $receiver.sizeAddr;
    }, function ($receiver, value) {
      $receiver.sizeAddr = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('unknown3', 1, function ($receiver) {
      return $receiver.unknown3;
    }, function ($receiver, value) {
      $receiver.unknown3 = value;
    }), new ARRAY(UINT8_getInstance(), 20 - 5 | 0))]);
  }
  function SceUtilitySavedataParam$SceUtilitySavedataParam$Companion_init$lambda() {
    return new SceUtilitySavedataParam();
  }
  SceUtilitySavedataParam$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var SceUtilitySavedataParam$Companion_instance = null;
  function SceUtilitySavedataParam$Companion_getInstance() {
    if (SceUtilitySavedataParam$Companion_instance === null) {
      new SceUtilitySavedataParam$Companion();
    }
    return SceUtilitySavedataParam$Companion_instance;
  }
  SceUtilitySavedataParam.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SceUtilitySavedataParam',
    interfaces: []
  };
  SceUtilitySavedataParam.prototype.component1 = function () {
    return this.base;
  };
  SceUtilitySavedataParam.prototype.component2 = function () {
    return this.mode;
  };
  SceUtilitySavedataParam.prototype.component3 = function () {
    return this.unknown1;
  };
  SceUtilitySavedataParam.prototype.component4 = function () {
    return this.overwrite;
  };
  SceUtilitySavedataParam.prototype.component5 = function () {
    return this.gameName;
  };
  SceUtilitySavedataParam.prototype.component6 = function () {
    return this.saveName;
  };
  SceUtilitySavedataParam.prototype.component7 = function () {
    return this.saveNameListPointer;
  };
  SceUtilitySavedataParam.prototype.component8 = function () {
    return this.fileName;
  };
  SceUtilitySavedataParam.prototype.component9 = function () {
    return this.dataBufPointer;
  };
  SceUtilitySavedataParam.prototype.component10 = function () {
    return this.dataBufSize;
  };
  SceUtilitySavedataParam.prototype.component11 = function () {
    return this.dataSize;
  };
  SceUtilitySavedataParam.prototype.component12 = function () {
    return this.sfoParam;
  };
  SceUtilitySavedataParam.prototype.component13 = function () {
    return this.icon0FileData;
  };
  SceUtilitySavedataParam.prototype.component14 = function () {
    return this.icon1FileData;
  };
  SceUtilitySavedataParam.prototype.component15 = function () {
    return this.pic1FileData;
  };
  SceUtilitySavedataParam.prototype.component16 = function () {
    return this.snd0FileData;
  };
  SceUtilitySavedataParam.prototype.component17 = function () {
    return this.newDataPointer;
  };
  SceUtilitySavedataParam.prototype.component18 = function () {
    return this.focus;
  };
  SceUtilitySavedataParam.prototype.component19 = function () {
    return this.abortStatus;
  };
  SceUtilitySavedataParam.prototype.component20 = function () {
    return this.msFreeAddr;
  };
  SceUtilitySavedataParam.prototype.component21 = function () {
    return this.msDataAddr;
  };
  SceUtilitySavedataParam.prototype.component22 = function () {
    return this.utilityDataAddr;
  };
  SceUtilitySavedataParam.prototype.component23 = function () {
    return this.key;
  };
  SceUtilitySavedataParam.prototype.component24 = function () {
    return this.secureVersion;
  };
  SceUtilitySavedataParam.prototype.component25 = function () {
    return this.multiStatus;
  };
  SceUtilitySavedataParam.prototype.component26 = function () {
    return this.idListAddr;
  };
  SceUtilitySavedataParam.prototype.component27 = function () {
    return this.fileListAddr;
  };
  SceUtilitySavedataParam.prototype.component28 = function () {
    return this.sizeAddr;
  };
  SceUtilitySavedataParam.prototype.component29 = function () {
    return this.unknown3;
  };
  SceUtilitySavedataParam.prototype.copy_o1665a$ = function (base, mode, unknown1, overwrite, gameName, saveName, saveNameListPointer, fileName, dataBufPointer, dataBufSize, dataSize, sfoParam, icon0FileData, icon1FileData, pic1FileData, snd0FileData, newDataPointer, focus, abortStatus, msFreeAddr, msDataAddr, utilityDataAddr, key, secureVersion, multiStatus, idListAddr, fileListAddr, sizeAddr, unknown3) {
    return new SceUtilitySavedataParam(base === void 0 ? this.base : base, mode === void 0 ? this.mode : mode, unknown1 === void 0 ? this.unknown1 : unknown1, overwrite === void 0 ? this.overwrite : overwrite, gameName === void 0 ? this.gameName : gameName, saveName === void 0 ? this.saveName : saveName, saveNameListPointer === void 0 ? this.saveNameListPointer : saveNameListPointer, fileName === void 0 ? this.fileName : fileName, dataBufPointer === void 0 ? this.dataBufPointer : dataBufPointer, dataBufSize === void 0 ? this.dataBufSize : dataBufSize, dataSize === void 0 ? this.dataSize : dataSize, sfoParam === void 0 ? this.sfoParam : sfoParam, icon0FileData === void 0 ? this.icon0FileData : icon0FileData, icon1FileData === void 0 ? this.icon1FileData : icon1FileData, pic1FileData === void 0 ? this.pic1FileData : pic1FileData, snd0FileData === void 0 ? this.snd0FileData : snd0FileData, newDataPointer === void 0 ? this.newDataPointer : newDataPointer, focus === void 0 ? this.focus : focus, abortStatus === void 0 ? this.abortStatus : abortStatus, msFreeAddr === void 0 ? this.msFreeAddr : msFreeAddr, msDataAddr === void 0 ? this.msDataAddr : msDataAddr, utilityDataAddr === void 0 ? this.utilityDataAddr : utilityDataAddr, key === void 0 ? this.key : key, secureVersion === void 0 ? this.secureVersion : secureVersion, multiStatus === void 0 ? this.multiStatus : multiStatus, idListAddr === void 0 ? this.idListAddr : idListAddr, fileListAddr === void 0 ? this.fileListAddr : fileListAddr, sizeAddr === void 0 ? this.sizeAddr : sizeAddr, unknown3 === void 0 ? this.unknown3 : unknown3);
  };
  SceUtilitySavedataParam.prototype.toString = function () {
    return 'SceUtilitySavedataParam(base=' + Kotlin.toString(this.base) + (', mode=' + Kotlin.toString(this.mode)) + (', unknown1=' + Kotlin.toString(this.unknown1)) + (', overwrite=' + Kotlin.toString(this.overwrite)) + (', gameName=' + Kotlin.toString(this.gameName)) + (', saveName=' + Kotlin.toString(this.saveName)) + (', saveNameListPointer=' + Kotlin.toString(this.saveNameListPointer)) + (', fileName=' + Kotlin.toString(this.fileName)) + (', dataBufPointer=' + Kotlin.toString(this.dataBufPointer)) + (', dataBufSize=' + Kotlin.toString(this.dataBufSize)) + (', dataSize=' + Kotlin.toString(this.dataSize)) + (', sfoParam=' + Kotlin.toString(this.sfoParam)) + (', icon0FileData=' + Kotlin.toString(this.icon0FileData)) + (', icon1FileData=' + Kotlin.toString(this.icon1FileData)) + (', pic1FileData=' + Kotlin.toString(this.pic1FileData)) + (', snd0FileData=' + Kotlin.toString(this.snd0FileData)) + (', newDataPointer=' + Kotlin.toString(this.newDataPointer)) + (', focus=' + Kotlin.toString(this.focus)) + (', abortStatus=' + Kotlin.toString(this.abortStatus)) + (', msFreeAddr=' + Kotlin.toString(this.msFreeAddr)) + (', msDataAddr=' + Kotlin.toString(this.msDataAddr)) + (', utilityDataAddr=' + Kotlin.toString(this.utilityDataAddr)) + (', key=' + Kotlin.toString(this.key)) + (', secureVersion=' + Kotlin.toString(this.secureVersion)) + (', multiStatus=' + Kotlin.toString(this.multiStatus)) + (', idListAddr=' + Kotlin.toString(this.idListAddr)) + (', fileListAddr=' + Kotlin.toString(this.fileListAddr)) + (', sizeAddr=' + Kotlin.toString(this.sizeAddr)) + (', unknown3=' + Kotlin.toString(this.unknown3)) + ')';
  };
  SceUtilitySavedataParam.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.base) | 0;
    result = result * 31 + Kotlin.hashCode(this.mode) | 0;
    result = result * 31 + Kotlin.hashCode(this.unknown1) | 0;
    result = result * 31 + Kotlin.hashCode(this.overwrite) | 0;
    result = result * 31 + Kotlin.hashCode(this.gameName) | 0;
    result = result * 31 + Kotlin.hashCode(this.saveName) | 0;
    result = result * 31 + Kotlin.hashCode(this.saveNameListPointer) | 0;
    result = result * 31 + Kotlin.hashCode(this.fileName) | 0;
    result = result * 31 + Kotlin.hashCode(this.dataBufPointer) | 0;
    result = result * 31 + Kotlin.hashCode(this.dataBufSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.dataSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.sfoParam) | 0;
    result = result * 31 + Kotlin.hashCode(this.icon0FileData) | 0;
    result = result * 31 + Kotlin.hashCode(this.icon1FileData) | 0;
    result = result * 31 + Kotlin.hashCode(this.pic1FileData) | 0;
    result = result * 31 + Kotlin.hashCode(this.snd0FileData) | 0;
    result = result * 31 + Kotlin.hashCode(this.newDataPointer) | 0;
    result = result * 31 + Kotlin.hashCode(this.focus) | 0;
    result = result * 31 + Kotlin.hashCode(this.abortStatus) | 0;
    result = result * 31 + Kotlin.hashCode(this.msFreeAddr) | 0;
    result = result * 31 + Kotlin.hashCode(this.msDataAddr) | 0;
    result = result * 31 + Kotlin.hashCode(this.utilityDataAddr) | 0;
    result = result * 31 + Kotlin.hashCode(this.key) | 0;
    result = result * 31 + Kotlin.hashCode(this.secureVersion) | 0;
    result = result * 31 + Kotlin.hashCode(this.multiStatus) | 0;
    result = result * 31 + Kotlin.hashCode(this.idListAddr) | 0;
    result = result * 31 + Kotlin.hashCode(this.fileListAddr) | 0;
    result = result * 31 + Kotlin.hashCode(this.sizeAddr) | 0;
    result = result * 31 + Kotlin.hashCode(this.unknown3) | 0;
    return result;
  };
  SceUtilitySavedataParam.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.base, other.base) && Kotlin.equals(this.mode, other.mode) && Kotlin.equals(this.unknown1, other.unknown1) && Kotlin.equals(this.overwrite, other.overwrite) && Kotlin.equals(this.gameName, other.gameName) && Kotlin.equals(this.saveName, other.saveName) && Kotlin.equals(this.saveNameListPointer, other.saveNameListPointer) && Kotlin.equals(this.fileName, other.fileName) && Kotlin.equals(this.dataBufPointer, other.dataBufPointer) && Kotlin.equals(this.dataBufSize, other.dataBufSize) && Kotlin.equals(this.dataSize, other.dataSize) && Kotlin.equals(this.sfoParam, other.sfoParam) && Kotlin.equals(this.icon0FileData, other.icon0FileData) && Kotlin.equals(this.icon1FileData, other.icon1FileData) && Kotlin.equals(this.pic1FileData, other.pic1FileData) && Kotlin.equals(this.snd0FileData, other.snd0FileData) && Kotlin.equals(this.newDataPointer, other.newDataPointer) && Kotlin.equals(this.focus, other.focus) && Kotlin.equals(this.abortStatus, other.abortStatus) && Kotlin.equals(this.msFreeAddr, other.msFreeAddr) && Kotlin.equals(this.msDataAddr, other.msDataAddr) && Kotlin.equals(this.utilityDataAddr, other.utilityDataAddr) && Kotlin.equals(this.key, other.key) && Kotlin.equals(this.secureVersion, other.secureVersion) && Kotlin.equals(this.multiStatus, other.multiStatus) && Kotlin.equals(this.idListAddr, other.idListAddr) && Kotlin.equals(this.fileListAddr, other.fileListAddr) && Kotlin.equals(this.sizeAddr, other.sizeAddr) && Kotlin.equals(this.unknown3, other.unknown3)))));
  };
  function PspUtilityMsgDialogMode(name, ordinal, id) {
    Enum.call(this);
    this.id_iz3byn$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PspUtilityMsgDialogMode_initFields() {
    PspUtilityMsgDialogMode_initFields = function () {
    };
    PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_ERROR_instance = new PspUtilityMsgDialogMode('PSP_UTILITY_MSGDIALOG_MODE_ERROR', 0, 0);
    PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_TEXT_instance = new PspUtilityMsgDialogMode('PSP_UTILITY_MSGDIALOG_MODE_TEXT', 1, 1);
    PspUtilityMsgDialogMode$Companion_getInstance();
  }
  Object.defineProperty(PspUtilityMsgDialogMode.prototype, 'id', {
    get: function () {
      return this.id_iz3byn$_0;
    }
  });
  var PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_ERROR_instance;
  function PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_ERROR_getInstance() {
    PspUtilityMsgDialogMode_initFields();
    return PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_ERROR_instance;
  }
  var PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_TEXT_instance;
  function PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_TEXT_getInstance() {
    PspUtilityMsgDialogMode_initFields();
    return PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_TEXT_instance;
  }
  function PspUtilityMsgDialogMode$Companion() {
    PspUtilityMsgDialogMode$Companion_instance = this;
    INT32_ENUM.call(this, PspUtilityMsgDialogMode$values());
  }
  PspUtilityMsgDialogMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [INT32_ENUM]
  };
  var PspUtilityMsgDialogMode$Companion_instance = null;
  function PspUtilityMsgDialogMode$Companion_getInstance() {
    PspUtilityMsgDialogMode_initFields();
    if (PspUtilityMsgDialogMode$Companion_instance === null) {
      new PspUtilityMsgDialogMode$Companion();
    }
    return PspUtilityMsgDialogMode$Companion_instance;
  }
  PspUtilityMsgDialogMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspUtilityMsgDialogMode',
    interfaces: [IdEnum, Enum]
  };
  function PspUtilityMsgDialogMode$values() {
    return [PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_ERROR_getInstance(), PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_TEXT_getInstance()];
  }
  PspUtilityMsgDialogMode.values = PspUtilityMsgDialogMode$values;
  function PspUtilityMsgDialogMode$valueOf(name) {
    switch (name) {
      case 'PSP_UTILITY_MSGDIALOG_MODE_ERROR':
        return PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_ERROR_getInstance();
      case 'PSP_UTILITY_MSGDIALOG_MODE_TEXT':
        return PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_TEXT_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.modules.PspUtilityMsgDialogMode.' + name);
    }
  }
  PspUtilityMsgDialogMode.valueOf_61zpoe$ = PspUtilityMsgDialogMode$valueOf;
  function PspUtilityMsgDialogOption(name, ordinal, id) {
    Enum.call(this);
    this.id_xroxq5$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PspUtilityMsgDialogOption_initFields() {
    PspUtilityMsgDialogOption_initFields = function () {
    };
    PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_ERROR_instance = new PspUtilityMsgDialogOption('PSP_UTILITY_MSGDIALOG_OPTION_ERROR', 0, 0);
    PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_TEXT_instance = new PspUtilityMsgDialogOption('PSP_UTILITY_MSGDIALOG_OPTION_TEXT', 1, 1);
    PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_YESNO_BUTTONS_instance = new PspUtilityMsgDialogOption('PSP_UTILITY_MSGDIALOG_OPTION_YESNO_BUTTONS', 2, 16);
    PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_DEFAULT_NO_instance = new PspUtilityMsgDialogOption('PSP_UTILITY_MSGDIALOG_OPTION_DEFAULT_NO', 3, 256);
    PspUtilityMsgDialogOption$Companion_getInstance();
  }
  Object.defineProperty(PspUtilityMsgDialogOption.prototype, 'id', {
    get: function () {
      return this.id_xroxq5$_0;
    }
  });
  var PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_ERROR_instance;
  function PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_ERROR_getInstance() {
    PspUtilityMsgDialogOption_initFields();
    return PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_ERROR_instance;
  }
  var PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_TEXT_instance;
  function PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_TEXT_getInstance() {
    PspUtilityMsgDialogOption_initFields();
    return PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_TEXT_instance;
  }
  var PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_YESNO_BUTTONS_instance;
  function PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_YESNO_BUTTONS_getInstance() {
    PspUtilityMsgDialogOption_initFields();
    return PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_YESNO_BUTTONS_instance;
  }
  var PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_DEFAULT_NO_instance;
  function PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_DEFAULT_NO_getInstance() {
    PspUtilityMsgDialogOption_initFields();
    return PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_DEFAULT_NO_instance;
  }
  function PspUtilityMsgDialogOption$Companion() {
    PspUtilityMsgDialogOption$Companion_instance = this;
    INT32_ENUM.call(this, PspUtilityMsgDialogOption$values());
  }
  PspUtilityMsgDialogOption$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [INT32_ENUM]
  };
  var PspUtilityMsgDialogOption$Companion_instance = null;
  function PspUtilityMsgDialogOption$Companion_getInstance() {
    PspUtilityMsgDialogOption_initFields();
    if (PspUtilityMsgDialogOption$Companion_instance === null) {
      new PspUtilityMsgDialogOption$Companion();
    }
    return PspUtilityMsgDialogOption$Companion_instance;
  }
  PspUtilityMsgDialogOption.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspUtilityMsgDialogOption',
    interfaces: [IdEnum, Enum]
  };
  function PspUtilityMsgDialogOption$values() {
    return [PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_ERROR_getInstance(), PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_TEXT_getInstance(), PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_YESNO_BUTTONS_getInstance(), PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_DEFAULT_NO_getInstance()];
  }
  PspUtilityMsgDialogOption.values = PspUtilityMsgDialogOption$values;
  function PspUtilityMsgDialogOption$valueOf(name) {
    switch (name) {
      case 'PSP_UTILITY_MSGDIALOG_OPTION_ERROR':
        return PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_ERROR_getInstance();
      case 'PSP_UTILITY_MSGDIALOG_OPTION_TEXT':
        return PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_TEXT_getInstance();
      case 'PSP_UTILITY_MSGDIALOG_OPTION_YESNO_BUTTONS':
        return PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_YESNO_BUTTONS_getInstance();
      case 'PSP_UTILITY_MSGDIALOG_OPTION_DEFAULT_NO':
        return PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_DEFAULT_NO_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.modules.PspUtilityMsgDialogOption.' + name);
    }
  }
  PspUtilityMsgDialogOption.valueOf_61zpoe$ = PspUtilityMsgDialogOption$valueOf;
  function PspUtilityMsgDialogPressed(name, ordinal, id) {
    Enum.call(this);
    this.id_734pd6$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function PspUtilityMsgDialogPressed_initFields() {
    PspUtilityMsgDialogPressed_initFields = function () {
    };
    PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_UNKNOWN1_instance = new PspUtilityMsgDialogPressed('PSP_UTILITY_MSGDIALOG_RESULT_UNKNOWN1', 0, 0);
    PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_YES_instance = new PspUtilityMsgDialogPressed('PSP_UTILITY_MSGDIALOG_RESULT_YES', 1, 1);
    PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_NO_instance = new PspUtilityMsgDialogPressed('PSP_UTILITY_MSGDIALOG_RESULT_NO', 2, 2);
    PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_BACK_instance = new PspUtilityMsgDialogPressed('PSP_UTILITY_MSGDIALOG_RESULT_BACK', 3, 3);
    PspUtilityMsgDialogPressed$Companion_getInstance();
  }
  Object.defineProperty(PspUtilityMsgDialogPressed.prototype, 'id', {
    get: function () {
      return this.id_734pd6$_0;
    }
  });
  var PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_UNKNOWN1_instance;
  function PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_UNKNOWN1_getInstance() {
    PspUtilityMsgDialogPressed_initFields();
    return PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_UNKNOWN1_instance;
  }
  var PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_YES_instance;
  function PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_YES_getInstance() {
    PspUtilityMsgDialogPressed_initFields();
    return PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_YES_instance;
  }
  var PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_NO_instance;
  function PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_NO_getInstance() {
    PspUtilityMsgDialogPressed_initFields();
    return PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_NO_instance;
  }
  var PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_BACK_instance;
  function PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_BACK_getInstance() {
    PspUtilityMsgDialogPressed_initFields();
    return PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_BACK_instance;
  }
  function PspUtilityMsgDialogPressed$Companion() {
    PspUtilityMsgDialogPressed$Companion_instance = this;
    INT32_ENUM.call(this, PspUtilityMsgDialogPressed$values());
  }
  PspUtilityMsgDialogPressed$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [INT32_ENUM]
  };
  var PspUtilityMsgDialogPressed$Companion_instance = null;
  function PspUtilityMsgDialogPressed$Companion_getInstance() {
    PspUtilityMsgDialogPressed_initFields();
    if (PspUtilityMsgDialogPressed$Companion_instance === null) {
      new PspUtilityMsgDialogPressed$Companion();
    }
    return PspUtilityMsgDialogPressed$Companion_instance;
  }
  PspUtilityMsgDialogPressed.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspUtilityMsgDialogPressed',
    interfaces: [IdEnum, Enum]
  };
  function PspUtilityMsgDialogPressed$values() {
    return [PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_UNKNOWN1_getInstance(), PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_YES_getInstance(), PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_NO_getInstance(), PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_BACK_getInstance()];
  }
  PspUtilityMsgDialogPressed.values = PspUtilityMsgDialogPressed$values;
  function PspUtilityMsgDialogPressed$valueOf(name) {
    switch (name) {
      case 'PSP_UTILITY_MSGDIALOG_RESULT_UNKNOWN1':
        return PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_UNKNOWN1_getInstance();
      case 'PSP_UTILITY_MSGDIALOG_RESULT_YES':
        return PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_YES_getInstance();
      case 'PSP_UTILITY_MSGDIALOG_RESULT_NO':
        return PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_NO_getInstance();
      case 'PSP_UTILITY_MSGDIALOG_RESULT_BACK':
        return PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_BACK_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.modules.PspUtilityMsgDialogPressed.' + name);
    }
  }
  PspUtilityMsgDialogPressed.valueOf_61zpoe$ = PspUtilityMsgDialogPressed$valueOf;
  function DialogStepEnum(name, ordinal, id) {
    Enum.call(this);
    this.id_w08qb$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function DialogStepEnum_initFields() {
    DialogStepEnum_initFields = function () {
    };
    DialogStepEnum$NONE_instance = new DialogStepEnum('NONE', 0, 0);
    DialogStepEnum$INIT_instance = new DialogStepEnum('INIT', 1, 1);
    DialogStepEnum$PROCESSING_instance = new DialogStepEnum('PROCESSING', 2, 2);
    DialogStepEnum$SUCCESS_instance = new DialogStepEnum('SUCCESS', 3, 3);
    DialogStepEnum$SHUTDOWN_instance = new DialogStepEnum('SHUTDOWN', 4, 4);
    DialogStepEnum$Companion_getInstance();
  }
  Object.defineProperty(DialogStepEnum.prototype, 'id', {
    get: function () {
      return this.id_w08qb$_0;
    }
  });
  var DialogStepEnum$NONE_instance;
  function DialogStepEnum$NONE_getInstance() {
    DialogStepEnum_initFields();
    return DialogStepEnum$NONE_instance;
  }
  var DialogStepEnum$INIT_instance;
  function DialogStepEnum$INIT_getInstance() {
    DialogStepEnum_initFields();
    return DialogStepEnum$INIT_instance;
  }
  var DialogStepEnum$PROCESSING_instance;
  function DialogStepEnum$PROCESSING_getInstance() {
    DialogStepEnum_initFields();
    return DialogStepEnum$PROCESSING_instance;
  }
  var DialogStepEnum$SUCCESS_instance;
  function DialogStepEnum$SUCCESS_getInstance() {
    DialogStepEnum_initFields();
    return DialogStepEnum$SUCCESS_instance;
  }
  var DialogStepEnum$SHUTDOWN_instance;
  function DialogStepEnum$SHUTDOWN_getInstance() {
    DialogStepEnum_initFields();
    return DialogStepEnum$SHUTDOWN_instance;
  }
  function DialogStepEnum$Companion() {
    DialogStepEnum$Companion_instance = this;
    INT32_ENUM.call(this, DialogStepEnum$values());
  }
  DialogStepEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [INT32_ENUM]
  };
  var DialogStepEnum$Companion_instance = null;
  function DialogStepEnum$Companion_getInstance() {
    DialogStepEnum_initFields();
    if (DialogStepEnum$Companion_instance === null) {
      new DialogStepEnum$Companion();
    }
    return DialogStepEnum$Companion_instance;
  }
  DialogStepEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DialogStepEnum',
    interfaces: [IdEnum, Enum]
  };
  function DialogStepEnum$values() {
    return [DialogStepEnum$NONE_getInstance(), DialogStepEnum$INIT_getInstance(), DialogStepEnum$PROCESSING_getInstance(), DialogStepEnum$SUCCESS_getInstance(), DialogStepEnum$SHUTDOWN_getInstance()];
  }
  DialogStepEnum.values = DialogStepEnum$values;
  function DialogStepEnum$valueOf(name) {
    switch (name) {
      case 'NONE':
        return DialogStepEnum$NONE_getInstance();
      case 'INIT':
        return DialogStepEnum$INIT_getInstance();
      case 'PROCESSING':
        return DialogStepEnum$PROCESSING_getInstance();
      case 'SUCCESS':
        return DialogStepEnum$SUCCESS_getInstance();
      case 'SHUTDOWN':
        return DialogStepEnum$SHUTDOWN_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.hle.modules.DialogStepEnum.' + name);
    }
  }
  DialogStepEnum.valueOf_61zpoe$ = DialogStepEnum$valueOf;
  function PspUtilityMsgDialogParams(base, unknown, mnode, errorValue, message, options, buttonPressed) {
    PspUtilityMsgDialogParams$Companion_getInstance();
    if (base === void 0)
      base = new PspUtilityDialogCommon();
    if (unknown === void 0)
      unknown = 0;
    if (mnode === void 0)
      mnode = PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_ERROR_getInstance();
    if (errorValue === void 0)
      errorValue = 0;
    if (message === void 0)
      message = '';
    if (options === void 0)
      options = PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_DEFAULT_NO_getInstance();
    if (buttonPressed === void 0)
      buttonPressed = PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_BACK_getInstance();
    this.base = base;
    this.unknown = unknown;
    this.mnode = mnode;
    this.errorValue = errorValue;
    this.message = message;
    this.options = options;
    this.buttonPressed = buttonPressed;
  }
  function PspUtilityMsgDialogParams$Companion() {
    PspUtilityMsgDialogParams$Companion_instance = this;
    Struct.call(this, PspUtilityMsgDialogParams$PspUtilityMsgDialogParams$Companion_init$lambda, [AS(getPropertyCallableRef('base', 1, function ($receiver) {
      return $receiver.base;
    }, function ($receiver, value) {
      $receiver.base = value;
    }), PspUtilityDialogCommon$Companion_getInstance()), AS(getPropertyCallableRef('unknown', 1, function ($receiver) {
      return $receiver.unknown;
    }, function ($receiver, value) {
      $receiver.unknown = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('mnode', 1, function ($receiver) {
      return $receiver.mnode;
    }, function ($receiver, value) {
      $receiver.mnode = value;
    }), PspUtilityMsgDialogMode$Companion_getInstance()), AS(getPropertyCallableRef('errorValue', 1, function ($receiver) {
      return $receiver.errorValue;
    }, function ($receiver, value) {
      $receiver.errorValue = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('message', 1, function ($receiver) {
      return $receiver.message;
    }, function ($receiver, value) {
      $receiver.message = value;
    }), STRINGZ_init(512)), AS(getPropertyCallableRef('options', 1, function ($receiver) {
      return $receiver.options;
    }, function ($receiver, value) {
      $receiver.options = value;
    }), PspUtilityMsgDialogOption$Companion_getInstance()), AS(getPropertyCallableRef('buttonPressed', 1, function ($receiver) {
      return $receiver.buttonPressed;
    }, function ($receiver, value) {
      $receiver.buttonPressed = value;
    }), PspUtilityMsgDialogPressed$Companion_getInstance())]);
  }
  function PspUtilityMsgDialogParams$PspUtilityMsgDialogParams$Companion_init$lambda() {
    return new PspUtilityMsgDialogParams();
  }
  PspUtilityMsgDialogParams$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var PspUtilityMsgDialogParams$Companion_instance = null;
  function PspUtilityMsgDialogParams$Companion_getInstance() {
    if (PspUtilityMsgDialogParams$Companion_instance === null) {
      new PspUtilityMsgDialogParams$Companion();
    }
    return PspUtilityMsgDialogParams$Companion_instance;
  }
  PspUtilityMsgDialogParams.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PspUtilityMsgDialogParams',
    interfaces: []
  };
  PspUtilityMsgDialogParams.prototype.component1 = function () {
    return this.base;
  };
  PspUtilityMsgDialogParams.prototype.component2 = function () {
    return this.unknown;
  };
  PspUtilityMsgDialogParams.prototype.component3 = function () {
    return this.mnode;
  };
  PspUtilityMsgDialogParams.prototype.component4 = function () {
    return this.errorValue;
  };
  PspUtilityMsgDialogParams.prototype.component5 = function () {
    return this.message;
  };
  PspUtilityMsgDialogParams.prototype.component6 = function () {
    return this.options;
  };
  PspUtilityMsgDialogParams.prototype.component7 = function () {
    return this.buttonPressed;
  };
  PspUtilityMsgDialogParams.prototype.copy_amx59w$ = function (base, unknown, mnode, errorValue, message, options, buttonPressed) {
    return new PspUtilityMsgDialogParams(base === void 0 ? this.base : base, unknown === void 0 ? this.unknown : unknown, mnode === void 0 ? this.mnode : mnode, errorValue === void 0 ? this.errorValue : errorValue, message === void 0 ? this.message : message, options === void 0 ? this.options : options, buttonPressed === void 0 ? this.buttonPressed : buttonPressed);
  };
  PspUtilityMsgDialogParams.prototype.toString = function () {
    return 'PspUtilityMsgDialogParams(base=' + Kotlin.toString(this.base) + (', unknown=' + Kotlin.toString(this.unknown)) + (', mnode=' + Kotlin.toString(this.mnode)) + (', errorValue=' + Kotlin.toString(this.errorValue)) + (', message=' + Kotlin.toString(this.message)) + (', options=' + Kotlin.toString(this.options)) + (', buttonPressed=' + Kotlin.toString(this.buttonPressed)) + ')';
  };
  PspUtilityMsgDialogParams.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.base) | 0;
    result = result * 31 + Kotlin.hashCode(this.unknown) | 0;
    result = result * 31 + Kotlin.hashCode(this.mnode) | 0;
    result = result * 31 + Kotlin.hashCode(this.errorValue) | 0;
    result = result * 31 + Kotlin.hashCode(this.message) | 0;
    result = result * 31 + Kotlin.hashCode(this.options) | 0;
    result = result * 31 + Kotlin.hashCode(this.buttonPressed) | 0;
    return result;
  };
  PspUtilityMsgDialogParams.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.base, other.base) && Kotlin.equals(this.unknown, other.unknown) && Kotlin.equals(this.mnode, other.mnode) && Kotlin.equals(this.errorValue, other.errorValue) && Kotlin.equals(this.message, other.message) && Kotlin.equals(this.options, other.options) && Kotlin.equals(this.buttonPressed, other.buttonPressed)))));
  };
  function sceVaudio(emulator) {
    SceModule.call(this, emulator, 'sceVaudio', 1073807377, 'vaudio.prx', 'sceVaudio_driver');
  }
  sceVaudio.prototype.sceVaudioChReserve_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(62292093);
  };
  sceVaudio.prototype.sceVaudio_27ACC20B_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(665633291);
  };
  sceVaudio.prototype.sceVaudio_346FBE94_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(879738516);
  };
  sceVaudio.prototype.sceVaudio_504E4745_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1347307333);
  };
  sceVaudio.prototype.sceVaudioChRelease_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(1733844477);
  };
  sceVaudio.prototype.sceVaudioOutputBlocking_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1987696290, 0));
  };
  sceVaudio.prototype.sceVaudio_CBD4AC51_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-875254703, 0));
  };
  sceVaudio.prototype.sceVaudio_E8E78DC8_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-387478072, 0));
  };
  function sceVaudio$registerModule$lambda(this$sceVaudio) {
    return function (it) {
      this$sceVaudio.sceVaudioChReserve_xt3zvs$(it);
      return Unit;
    };
  }
  function sceVaudio$registerModule$lambda_0(this$sceVaudio) {
    return function (it) {
      this$sceVaudio.sceVaudio_27ACC20B_xt3zvs$(it);
      return Unit;
    };
  }
  function sceVaudio$registerModule$lambda_1(this$sceVaudio) {
    return function (it) {
      this$sceVaudio.sceVaudio_346FBE94_xt3zvs$(it);
      return Unit;
    };
  }
  function sceVaudio$registerModule$lambda_2(this$sceVaudio) {
    return function (it) {
      this$sceVaudio.sceVaudio_504E4745_xt3zvs$(it);
      return Unit;
    };
  }
  function sceVaudio$registerModule$lambda_3(this$sceVaudio) {
    return function (it) {
      this$sceVaudio.sceVaudioChRelease_xt3zvs$(it);
      return Unit;
    };
  }
  function sceVaudio$registerModule$lambda_4(this$sceVaudio) {
    return function (it) {
      this$sceVaudio.sceVaudioOutputBlocking_xt3zvs$(it);
      return Unit;
    };
  }
  function sceVaudio$registerModule$lambda_5(this$sceVaudio) {
    return function (it) {
      this$sceVaudio.sceVaudio_CBD4AC51_xt3zvs$(it);
      return Unit;
    };
  }
  function sceVaudio$registerModule$lambda_6(this$sceVaudio) {
    return function (it) {
      this$sceVaudio.sceVaudio_E8E78DC8_xt3zvs$(it);
      return Unit;
    };
  }
  sceVaudio.prototype.registerModule = function () {
    this.registerFunctionRaw_gh35x6$('sceVaudioChReserve', Kotlin.Long.fromInt(62292093), 150, void 0, sceVaudio$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('sceVaudio_27ACC20B', Kotlin.Long.fromInt(665633291), 150, void 0, sceVaudio$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceVaudio_346FBE94', Kotlin.Long.fromInt(879738516), 150, void 0, sceVaudio$registerModule$lambda_1(this));
    this.registerFunctionRaw_gh35x6$('sceVaudio_504E4745', Kotlin.Long.fromInt(1347307333), 150, void 0, sceVaudio$registerModule$lambda_2(this));
    this.registerFunctionRaw_gh35x6$('sceVaudioChRelease', Kotlin.Long.fromInt(1733844477), 150, void 0, sceVaudio$registerModule$lambda_3(this));
    this.registerFunctionRaw_gh35x6$('sceVaudioOutputBlocking', new Kotlin.Long(-1987696290, 0), 150, void 0, sceVaudio$registerModule$lambda_4(this));
    this.registerFunctionRaw_gh35x6$('sceVaudio_CBD4AC51', new Kotlin.Long(-875254703, 0), 150, void 0, sceVaudio$registerModule$lambda_5(this));
    this.registerFunctionRaw_gh35x6$('sceVaudio_E8E78DC8', new Kotlin.Long(-387478072, 0), 150, void 0, sceVaudio$registerModule$lambda_6(this));
  };
  sceVaudio.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceVaudio',
    interfaces: [SceModule]
  };
  function sceWlanDrv(emulator) {
    SceModule.call(this, emulator, 'sceWlanDrv', 1073807377, 'wlan.prx', 'sceWlan_Driver');
  }
  sceWlanDrv.prototype.sceWlanGetEtherAddr_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_za3lpa$(207757441);
  };
  sceWlanDrv.prototype.sceWlanDevIsPowerOn_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-1824257263, 0));
  };
  sceWlanDrv.prototype.sceWlanGetSwitchState_xt3zvs$ = function (cpu) {
    this.UNIMPLEMENTED_s8cxhz$(new Kotlin.Long(-680118631, 0));
  };
  function sceWlanDrv$registerModule$lambda(this$sceWlanDrv) {
    return function (it) {
      this$sceWlanDrv.sceWlanGetEtherAddr_xt3zvs$(it);
      return Unit;
    };
  }
  function sceWlanDrv$registerModule$lambda_0(this$sceWlanDrv) {
    return function (it) {
      this$sceWlanDrv.sceWlanDevIsPowerOn_xt3zvs$(it);
      return Unit;
    };
  }
  function sceWlanDrv$registerModule$lambda_1(this$sceWlanDrv) {
    return function (it) {
      this$sceWlanDrv.sceWlanGetSwitchState_xt3zvs$(it);
      return Unit;
    };
  }
  sceWlanDrv.prototype.registerModule = function () {
    this.registerFunctionRaw_gh35x6$('sceWlanGetEtherAddr', Kotlin.Long.fromInt(207757441), 150, void 0, sceWlanDrv$registerModule$lambda(this));
    this.registerFunctionRaw_gh35x6$('sceWlanDevIsPowerOn', new Kotlin.Long(-1824257263, 0), 150, void 0, sceWlanDrv$registerModule$lambda_0(this));
    this.registerFunctionRaw_gh35x6$('sceWlanGetSwitchState', new Kotlin.Long(-680118631, 0), 150, void 0, sceWlanDrv$registerModule$lambda_1(this));
  };
  sceWlanDrv.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'sceWlanDrv',
    interfaces: [SceModule]
  };
  function LibDoc() {
    LibDoc_instance = this;
  }
  function LibDoc$Entry() {
  }
  LibDoc$Entry.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Entry',
    interfaces: []
  };
  function LibDoc$Function(nid, name) {
    this.nid_ymg15s$_0 = nid;
    this.name_7uza74$_0 = name;
  }
  Object.defineProperty(LibDoc$Function.prototype, 'nid', {
    get: function () {
      return this.nid_ymg15s$_0;
    }
  });
  Object.defineProperty(LibDoc$Function.prototype, 'name', {
    get: function () {
      return this.name_7uza74$_0;
    }
  });
  LibDoc$Function.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Function',
    interfaces: [LibDoc$Entry]
  };
  LibDoc$Function.prototype.component1 = function () {
    return this.nid;
  };
  LibDoc$Function.prototype.component2 = function () {
    return this.name;
  };
  LibDoc$Function.prototype.copy_19mbxw$ = function (nid, name) {
    return new LibDoc$Function(nid === void 0 ? this.nid : nid, name === void 0 ? this.name : name);
  };
  LibDoc$Function.prototype.toString = function () {
    return 'Function(nid=' + Kotlin.toString(this.nid) + (', name=' + Kotlin.toString(this.name)) + ')';
  };
  LibDoc$Function.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.nid) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    return result;
  };
  LibDoc$Function.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.nid, other.nid) && Kotlin.equals(this.name, other.name)))));
  };
  function LibDoc$Variable(nid, name) {
    this.nid_ms230c$_0 = nid;
    this.name_45gum4$_0 = name;
  }
  Object.defineProperty(LibDoc$Variable.prototype, 'nid', {
    get: function () {
      return this.nid_ms230c$_0;
    }
  });
  Object.defineProperty(LibDoc$Variable.prototype, 'name', {
    get: function () {
      return this.name_45gum4$_0;
    }
  });
  LibDoc$Variable.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Variable',
    interfaces: [LibDoc$Entry]
  };
  LibDoc$Variable.prototype.component1 = function () {
    return this.nid;
  };
  LibDoc$Variable.prototype.component2 = function () {
    return this.name;
  };
  LibDoc$Variable.prototype.copy_19mbxw$ = function (nid, name) {
    return new LibDoc$Variable(nid === void 0 ? this.nid : nid, name === void 0 ? this.name : name);
  };
  LibDoc$Variable.prototype.toString = function () {
    return 'Variable(nid=' + Kotlin.toString(this.nid) + (', name=' + Kotlin.toString(this.name)) + ')';
  };
  LibDoc$Variable.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.nid) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    return result;
  };
  LibDoc$Variable.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.nid, other.nid) && Kotlin.equals(this.name, other.name)))));
  };
  function LibDoc$Library(name, flags, functions, variables) {
    if (functions === void 0) {
      functions = ArrayList_init();
    }
    if (variables === void 0) {
      variables = ArrayList_init();
    }
    this.name = name;
    this.flags = flags;
    this.functions = functions;
    this.variables = variables;
  }
  LibDoc$Library.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Library',
    interfaces: []
  };
  LibDoc$Library.prototype.component1 = function () {
    return this.name;
  };
  LibDoc$Library.prototype.component2 = function () {
    return this.flags;
  };
  LibDoc$Library.prototype.component3 = function () {
    return this.functions;
  };
  LibDoc$Library.prototype.component4 = function () {
    return this.variables;
  };
  LibDoc$Library.prototype.copy_l3vpxw$ = function (name, flags, functions, variables) {
    return new LibDoc$Library(name === void 0 ? this.name : name, flags === void 0 ? this.flags : flags, functions === void 0 ? this.functions : functions, variables === void 0 ? this.variables : variables);
  };
  LibDoc$Library.prototype.toString = function () {
    return 'Library(name=' + Kotlin.toString(this.name) + (', flags=' + Kotlin.toString(this.flags)) + (', functions=' + Kotlin.toString(this.functions)) + (', variables=' + Kotlin.toString(this.variables)) + ')';
  };
  LibDoc$Library.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    result = result * 31 + Kotlin.hashCode(this.functions) | 0;
    result = result * 31 + Kotlin.hashCode(this.variables) | 0;
    return result;
  };
  LibDoc$Library.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.flags, other.flags) && Kotlin.equals(this.functions, other.functions) && Kotlin.equals(this.variables, other.variables)))));
  };
  function LibDoc$Prx(fileName, name, libraries) {
    if (libraries === void 0) {
      libraries = ArrayList_init();
    }
    this.fileName = fileName;
    this.name = name;
    this.libraries = libraries;
  }
  LibDoc$Prx.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Prx',
    interfaces: []
  };
  LibDoc$Prx.prototype.component1 = function () {
    return this.fileName;
  };
  LibDoc$Prx.prototype.component2 = function () {
    return this.name;
  };
  LibDoc$Prx.prototype.component3 = function () {
    return this.libraries;
  };
  LibDoc$Prx.prototype.copy_ihrspz$ = function (fileName, name, libraries) {
    return new LibDoc$Prx(fileName === void 0 ? this.fileName : fileName, name === void 0 ? this.name : name, libraries === void 0 ? this.libraries : libraries);
  };
  LibDoc$Prx.prototype.toString = function () {
    return 'Prx(fileName=' + Kotlin.toString(this.fileName) + (', name=' + Kotlin.toString(this.name)) + (', libraries=' + Kotlin.toString(this.libraries)) + ')';
  };
  LibDoc$Prx.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.fileName) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.libraries) | 0;
    return result;
  };
  LibDoc$Prx.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.fileName, other.fileName) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.libraries, other.libraries)))));
  };
  function LibDoc$Doc(prxs) {
    if (prxs === void 0) {
      prxs = ArrayList_init();
    }
    this.prxs = prxs;
  }
  var addAll = Kotlin.kotlin.collections.addAll_ipc267$;
  Object.defineProperty(LibDoc$Doc.prototype, 'allLibraries', {
    get: function () {
      var $receiver = this.prxs;
      var destination = ArrayList_init();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        var list = element.libraries;
        addAll(destination, list);
      }
      return destination;
    }
  });
  LibDoc$Doc.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Doc',
    interfaces: []
  };
  LibDoc$Doc.prototype.component1 = function () {
    return this.prxs;
  };
  LibDoc$Doc.prototype.copy_cemo9y$ = function (prxs) {
    return new LibDoc$Doc(prxs === void 0 ? this.prxs : prxs);
  };
  LibDoc$Doc.prototype.toString = function () {
    return 'Doc(prxs=' + Kotlin.toString(this.prxs) + ')';
  };
  LibDoc$Doc.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.prxs) | 0;
    return result;
  };
  LibDoc$Doc.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.prxs, other.prxs))));
  };
  LibDoc.prototype.parse_473e7m$ = function (PSPLIBDOC) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var doc = new LibDoc$Doc();
    tmp$ = get_0(PSPLIBDOC.get_61zpoe$('PRXFILES'), 'PRXFILE').iterator();
    while (tmp$.hasNext()) {
      var PRXFILE = tmp$.next();
      var prxFile = first_0(PRXFILE.get_61zpoe$('prx')).text;
      var prxName = first_0(PRXFILE.get_61zpoe$('prxname')).text;
      var $receiver = new LibDoc$Prx(prxFile, prxName);
      doc.prxs.add_11rb$($receiver);
      var prx = $receiver;
      tmp$_0 = get_0(PRXFILE.get_61zpoe$('LIBRARIES'), 'LIBRARY').iterator();
      while (tmp$_0.hasNext()) {
        var LIBRARY = tmp$_0.next();
        var libraryName = first_0(LIBRARY.get_61zpoe$('name')).text;
        var libraryFlags = parseInt(first_0(LIBRARY.get_61zpoe$('flags')).text);
        var $receiver_0 = new LibDoc$Library(libraryName, libraryFlags);
        prx.libraries.add_11rb$($receiver_0);
        var library = $receiver_0;
        tmp$_1 = get_0(LIBRARY.get_61zpoe$('FUNCTIONS'), 'FUNCTION').iterator();
        while (tmp$_1.hasNext()) {
          var FUNCTION = tmp$_1.next();
          var functionNid = parseInt(first_0(FUNCTION.get_61zpoe$('nid')).text);
          var functionName = first_0(FUNCTION.get_61zpoe$('name')).text;
          var $receiver_1 = new LibDoc$Function(functionNid, functionName);
          library.functions.add_11rb$($receiver_1);
          var function_0 = $receiver_1;
        }
        tmp$_2 = get_0(LIBRARY.get_61zpoe$('VARIABLES'), 'VARIABLE').iterator();
        while (tmp$_2.hasNext()) {
          var VARIABLE = tmp$_2.next();
          var variableNid = parseInt(first_0(VARIABLE.get_61zpoe$('nid')).text);
          var variableName = first_0(VARIABLE.get_61zpoe$('name')).text;
          var $receiver_2 = new LibDoc$Variable(variableNid, variableName);
          library.variables.add_11rb$($receiver_2);
          var variable = $receiver_2;
        }
      }
    }
    return doc;
  };
  LibDoc.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'LibDoc',
    interfaces: []
  };
  var LibDoc_instance = null;
  function LibDoc_getInstance() {
    if (LibDoc_instance === null) {
      new LibDoc();
    }
    return LibDoc_instance;
  }
  function dump($receiver) {
    println('    - ' + $receiver);
  }
  function dump_0($receiver) {
    var tmp$, tmp$_0;
    println('  - name=' + $receiver.name + ', flags=' + $receiver.flags);
    tmp$ = $receiver.functions.iterator();
    while (tmp$.hasNext()) {
      var function_0 = tmp$.next();
      dump(function_0);
    }
    tmp$_0 = $receiver.variables.iterator();
    while (tmp$_0.hasNext()) {
      var variable = tmp$_0.next();
      dump(variable);
    }
  }
  function dump_1($receiver) {
    var tmp$;
    println('- fileName=' + $receiver.fileName + ', name=' + $receiver.name);
    tmp$ = $receiver.libraries.iterator();
    while (tmp$.hasNext()) {
      var library = tmp$.next();
      dump_0(library);
    }
  }
  function dump_2($receiver) {
    var tmp$;
    tmp$ = $receiver.prxs.iterator();
    while (tmp$.hasNext()) {
      var prx = tmp$.next();
      dump_1(prx);
    }
  }
  function Kirk() {
    Kirk_instance = this;
  }
  Kirk.prototype.hleUtilsBufferCopyWithRange_pkg093$ = function (output, outputSize, input, inputSize, command) {
    try {
      var o = openSync_2(output, outputSize);
      var i = openSync_2(input, inputSize);
      this.hleUtilsBufferCopyWithRange_kusl65$(o, i, command);
      return 0;
    }
     catch (e) {
      if (Kotlin.isType(e, Throwable)) {
        println('ERROR at: hleUtilsBufferCopyWithRange');
        printStackTrace(e);
        return -1;
      }
       else
        throw e;
    }
  };
  Kirk.prototype.hleUtilsBufferCopyWithRange_kusl65$ = function (output, input, command) {
    var tmp$;
    if (equals(command, Kirk$CommandEnum$DECRYPT_PRIVATE_getInstance()))
      tmp$ = this.kirk_CMD1_usflho$(output, input);
    else if (equals(command, Kirk$CommandEnum$ENCRYPT_IV_0_getInstance()))
      tmp$ = this.kirk_CMD4_usflho$(output, input);
    else if (equals(command, Kirk$CommandEnum$DECRYPT_IV_0_getInstance()))
      tmp$ = this.kirk_CMD7_usflho$(output, input);
    else if (equals(command, Kirk$CommandEnum$PRIV_SIG_CHECK_getInstance()))
      tmp$ = this.kirk_CMD10_39qel5$(input);
    else if (equals(command, Kirk$CommandEnum$SHA1_HASH_getInstance()))
      tmp$ = this.kirk_CMD11_usflho$(output, input);
    else if (equals(command, Kirk$CommandEnum$ECDSA_GEN_KEYS_getInstance()))
      tmp$ = this.kirk_CMD12_39qel5$(output);
    else if (equals(command, Kirk$CommandEnum$ECDSA_MULTIPLY_POINT_getInstance()))
      tmp$ = this.kirk_CMD13_usflho$(output, input);
    else if (equals(command, Kirk$CommandEnum$PRNG_getInstance())) {
      this.kirk_CMD14_bmc2a$;
      throw new NotImplementedError_init('An operation is not implemented: ' + 'argument outSize');
    }
     else if (equals(command, Kirk$CommandEnum$ECDSA_SIGN_getInstance()))
      tmp$ = this.kirk_CMD16_usflho$(output, input);
    else if (equals(command, Kirk$CommandEnum$ECDSA_VERIFY_getInstance()))
      tmp$ = this.kirk_CMD17_39qel5$(input);
    else {
      throw new NotImplementedError_init('An operation is not implemented: ' + ('Not implemented hleUtilsBufferCopyWithRange! with command ' + command + ': ' + command));
    }
    return tmp$;
  };
  Kirk.prototype.kirk_CMD7_usflho$ = function (output, input) {
    writeBytes(output.clone(), this.CMD7_39qel5$(slice_0(input)));
  };
  Kirk.prototype.kirk_CMD1_usflho$ = function (output, input) {
    var header = read_0(slice_0(input), Kirk$AES128CMACHeader$Companion_getInstance());
    if (header.Mode !== Kirk$KirkMode$Cmd1_getInstance())
      throw invalidOp('Kirk mode != Cmd1');
    var Keys = AES.Companion.decryptAes128Cbc_r9qwmk$(readBytes(slice_0(input), 32), KirkKeys_getInstance().kirk1_key);
    var KeyAes = Keys.slice(0, 16);
    var KeyCmac = Keys.slice(16, 32);
    var PaddedDataSize = header.DataSize + 15 & -16;
    var Output = AES.Companion.decryptAes128Cbc_r9qwmk$(readBytes(skip(slice_0(input), header.DataOffset + Kirk$AES128CMACHeader$Companion_getInstance().size | 0), PaddedDataSize), KeyAes);
    output.write_mj6st8$(Output, 0, header.DataSize);
  };
  Kirk.prototype.kirk_CMD17_39qel5$ = function (input) {
    throw new NotImplementedError_init();
  };
  Kirk.prototype.kirk_CMD16_usflho$ = function (output, input) {
    throw new NotImplementedError_init();
  };
  Kirk.prototype.kirk_CMD14_bmc2a$ = function (output, outsize) {
    throw new NotImplementedError_init();
  };
  Kirk.prototype.kirk_CMD13_usflho$ = function (output, input) {
    throw new NotImplementedError_init();
  };
  Kirk.prototype.kirk_CMD12_39qel5$ = function (output) {
    throw new NotImplementedError_init();
  };
  Kirk.prototype.kirk_CMD11_usflho$ = function (output, input) {
    if (equals(input.length, Kotlin.Long.ZERO))
      error.invalidOp;
    var headerDataSize = readS32_le_0(slice_0(input));
    if (headerDataSize === 0)
      error.invalidOp;
    var data = readBytes(sliceWithStart(input, Kotlin.Long.fromInt(4)), headerDataSize);
    var hash = SHA1_getInstance().hash_fqrh44$(data);
    writeBytes(output, hash);
  };
  Kirk.prototype.kirk_CMD4_usflho$ = function (output, input) {
    throw new NotImplementedError_init();
  };
  Kirk.prototype.kirk_CMD10_39qel5$ = function (input) {
    throw new NotImplementedError_init();
  };
  Kirk.prototype.CMD7_39qel5$ = function (input) {
    var header = read_0(input, Kirk$KIRK_AES128CBC_HEADER$Companion_getInstance());
    if (header.mode !== Kirk$KirkMode$DecryptCbc_getInstance()) {
      throw Error_init("Kirk Invalid mode '" + toString(header.mode) + "'");
    }
    if (header.data_size === 0)
      invalidOp('Kirk data size == 0');
    return AES.Companion.decryptAes128Cbc_r9qwmk$(readAll_0(input), this.getKirk7Key_za3lpa$(header.keyseed));
  };
  Kirk.prototype.getKirk7Key_za3lpa$ = function (key_type) {
    var tmp$;
    return (tmp$ = KirkKeys_getInstance().kirk7_keys.get_11rb$(key_type)) != null ? tmp$ : invalidOp('Unsupported key ' + key_type);
  };
  function Kirk$KirkMode(name, ordinal, id) {
    Enum.call(this);
    this.id_6jp05g$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function Kirk$KirkMode_initFields() {
    Kirk$KirkMode_initFields = function () {
    };
    Kirk$KirkMode$Invalid0_instance = new Kirk$KirkMode('Invalid0', 0, 0);
    Kirk$KirkMode$Cmd1_instance = new Kirk$KirkMode('Cmd1', 1, 1);
    Kirk$KirkMode$Cmd2_instance = new Kirk$KirkMode('Cmd2', 2, 2);
    Kirk$KirkMode$Cmd3_instance = new Kirk$KirkMode('Cmd3', 3, 3);
    Kirk$KirkMode$EncryptCbc_instance = new Kirk$KirkMode('EncryptCbc', 4, 4);
    Kirk$KirkMode$DecryptCbc_instance = new Kirk$KirkMode('DecryptCbc', 5, 5);
    Kirk$KirkMode$Companion_getInstance();
  }
  Object.defineProperty(Kirk$KirkMode.prototype, 'id', {
    get: function () {
      return this.id_6jp05g$_0;
    }
  });
  var Kirk$KirkMode$Invalid0_instance;
  function Kirk$KirkMode$Invalid0_getInstance() {
    Kirk$KirkMode_initFields();
    return Kirk$KirkMode$Invalid0_instance;
  }
  var Kirk$KirkMode$Cmd1_instance;
  function Kirk$KirkMode$Cmd1_getInstance() {
    Kirk$KirkMode_initFields();
    return Kirk$KirkMode$Cmd1_instance;
  }
  var Kirk$KirkMode$Cmd2_instance;
  function Kirk$KirkMode$Cmd2_getInstance() {
    Kirk$KirkMode_initFields();
    return Kirk$KirkMode$Cmd2_instance;
  }
  var Kirk$KirkMode$Cmd3_instance;
  function Kirk$KirkMode$Cmd3_getInstance() {
    Kirk$KirkMode_initFields();
    return Kirk$KirkMode$Cmd3_instance;
  }
  var Kirk$KirkMode$EncryptCbc_instance;
  function Kirk$KirkMode$EncryptCbc_getInstance() {
    Kirk$KirkMode_initFields();
    return Kirk$KirkMode$EncryptCbc_instance;
  }
  var Kirk$KirkMode$DecryptCbc_instance;
  function Kirk$KirkMode$DecryptCbc_getInstance() {
    Kirk$KirkMode_initFields();
    return Kirk$KirkMode$DecryptCbc_instance;
  }
  function Kirk$KirkMode$Companion() {
    Kirk$KirkMode$Companion_instance = this;
    UINT8_ENUM.call(this, Kirk$KirkMode$values());
  }
  Kirk$KirkMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [UINT8_ENUM]
  };
  var Kirk$KirkMode$Companion_instance = null;
  function Kirk$KirkMode$Companion_getInstance() {
    Kirk$KirkMode_initFields();
    if (Kirk$KirkMode$Companion_instance === null) {
      new Kirk$KirkMode$Companion();
    }
    return Kirk$KirkMode$Companion_instance;
  }
  Kirk$KirkMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KirkMode',
    interfaces: [IdEnum, Enum]
  };
  function Kirk$KirkMode$values() {
    return [Kirk$KirkMode$Invalid0_getInstance(), Kirk$KirkMode$Cmd1_getInstance(), Kirk$KirkMode$Cmd2_getInstance(), Kirk$KirkMode$Cmd3_getInstance(), Kirk$KirkMode$EncryptCbc_getInstance(), Kirk$KirkMode$DecryptCbc_getInstance()];
  }
  Kirk$KirkMode.values = Kirk$KirkMode$values;
  function Kirk$KirkMode$valueOf(name) {
    switch (name) {
      case 'Invalid0':
        return Kirk$KirkMode$Invalid0_getInstance();
      case 'Cmd1':
        return Kirk$KirkMode$Cmd1_getInstance();
      case 'Cmd2':
        return Kirk$KirkMode$Cmd2_getInstance();
      case 'Cmd3':
        return Kirk$KirkMode$Cmd3_getInstance();
      case 'EncryptCbc':
        return Kirk$KirkMode$EncryptCbc_getInstance();
      case 'DecryptCbc':
        return Kirk$KirkMode$DecryptCbc_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.kirk.Kirk.KirkMode.' + name);
    }
  }
  Kirk$KirkMode.valueOf_61zpoe$ = Kirk$KirkMode$valueOf;
  function Kirk$CommandEnum(name, ordinal, id) {
    Enum.call(this);
    this.id_f34118$_0 = id;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function Kirk$CommandEnum_initFields() {
    Kirk$CommandEnum_initFields = function () {
    };
    Kirk$CommandEnum$DECRYPT_PRIVATE_instance = new Kirk$CommandEnum('DECRYPT_PRIVATE', 0, 1);
    Kirk$CommandEnum$ENCRYPT_SIGN_instance = new Kirk$CommandEnum('ENCRYPT_SIGN', 1, 2);
    Kirk$CommandEnum$DECRYPT_SIGN_instance = new Kirk$CommandEnum('DECRYPT_SIGN', 2, 3);
    Kirk$CommandEnum$ENCRYPT_IV_0_instance = new Kirk$CommandEnum('ENCRYPT_IV_0', 3, 4);
    Kirk$CommandEnum$ENCRYPT_IV_FUSE_instance = new Kirk$CommandEnum('ENCRYPT_IV_FUSE', 4, 5);
    Kirk$CommandEnum$ENCRYPT_IV_USER_instance = new Kirk$CommandEnum('ENCRYPT_IV_USER', 5, 6);
    Kirk$CommandEnum$DECRYPT_IV_0_instance = new Kirk$CommandEnum('DECRYPT_IV_0', 6, 7);
    Kirk$CommandEnum$DECRYPT_IV_FUSE_instance = new Kirk$CommandEnum('DECRYPT_IV_FUSE', 7, 8);
    Kirk$CommandEnum$DECRYPT_IV_USER_instance = new Kirk$CommandEnum('DECRYPT_IV_USER', 8, 9);
    Kirk$CommandEnum$PRIV_SIG_CHECK_instance = new Kirk$CommandEnum('PRIV_SIG_CHECK', 9, 10);
    Kirk$CommandEnum$SHA1_HASH_instance = new Kirk$CommandEnum('SHA1_HASH', 10, 11);
    Kirk$CommandEnum$ECDSA_GEN_KEYS_instance = new Kirk$CommandEnum('ECDSA_GEN_KEYS', 11, 12);
    Kirk$CommandEnum$ECDSA_MULTIPLY_POINT_instance = new Kirk$CommandEnum('ECDSA_MULTIPLY_POINT', 12, 13);
    Kirk$CommandEnum$PRNG_instance = new Kirk$CommandEnum('PRNG', 13, 14);
    Kirk$CommandEnum$INIT_instance = new Kirk$CommandEnum('INIT', 14, 15);
    Kirk$CommandEnum$ECDSA_SIGN_instance = new Kirk$CommandEnum('ECDSA_SIGN', 15, 16);
    Kirk$CommandEnum$ECDSA_VERIFY_instance = new Kirk$CommandEnum('ECDSA_VERIFY', 16, 17);
    Kirk$CommandEnum$CERT_VERIFY_instance = new Kirk$CommandEnum('CERT_VERIFY', 17, 18);
    Kirk$CommandEnum$Companion_getInstance();
  }
  Object.defineProperty(Kirk$CommandEnum.prototype, 'id', {
    get: function () {
      return this.id_f34118$_0;
    }
  });
  var Kirk$CommandEnum$DECRYPT_PRIVATE_instance;
  function Kirk$CommandEnum$DECRYPT_PRIVATE_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$DECRYPT_PRIVATE_instance;
  }
  var Kirk$CommandEnum$ENCRYPT_SIGN_instance;
  function Kirk$CommandEnum$ENCRYPT_SIGN_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$ENCRYPT_SIGN_instance;
  }
  var Kirk$CommandEnum$DECRYPT_SIGN_instance;
  function Kirk$CommandEnum$DECRYPT_SIGN_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$DECRYPT_SIGN_instance;
  }
  var Kirk$CommandEnum$ENCRYPT_IV_0_instance;
  function Kirk$CommandEnum$ENCRYPT_IV_0_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$ENCRYPT_IV_0_instance;
  }
  var Kirk$CommandEnum$ENCRYPT_IV_FUSE_instance;
  function Kirk$CommandEnum$ENCRYPT_IV_FUSE_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$ENCRYPT_IV_FUSE_instance;
  }
  var Kirk$CommandEnum$ENCRYPT_IV_USER_instance;
  function Kirk$CommandEnum$ENCRYPT_IV_USER_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$ENCRYPT_IV_USER_instance;
  }
  var Kirk$CommandEnum$DECRYPT_IV_0_instance;
  function Kirk$CommandEnum$DECRYPT_IV_0_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$DECRYPT_IV_0_instance;
  }
  var Kirk$CommandEnum$DECRYPT_IV_FUSE_instance;
  function Kirk$CommandEnum$DECRYPT_IV_FUSE_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$DECRYPT_IV_FUSE_instance;
  }
  var Kirk$CommandEnum$DECRYPT_IV_USER_instance;
  function Kirk$CommandEnum$DECRYPT_IV_USER_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$DECRYPT_IV_USER_instance;
  }
  var Kirk$CommandEnum$PRIV_SIG_CHECK_instance;
  function Kirk$CommandEnum$PRIV_SIG_CHECK_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$PRIV_SIG_CHECK_instance;
  }
  var Kirk$CommandEnum$SHA1_HASH_instance;
  function Kirk$CommandEnum$SHA1_HASH_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$SHA1_HASH_instance;
  }
  var Kirk$CommandEnum$ECDSA_GEN_KEYS_instance;
  function Kirk$CommandEnum$ECDSA_GEN_KEYS_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$ECDSA_GEN_KEYS_instance;
  }
  var Kirk$CommandEnum$ECDSA_MULTIPLY_POINT_instance;
  function Kirk$CommandEnum$ECDSA_MULTIPLY_POINT_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$ECDSA_MULTIPLY_POINT_instance;
  }
  var Kirk$CommandEnum$PRNG_instance;
  function Kirk$CommandEnum$PRNG_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$PRNG_instance;
  }
  var Kirk$CommandEnum$INIT_instance;
  function Kirk$CommandEnum$INIT_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$INIT_instance;
  }
  var Kirk$CommandEnum$ECDSA_SIGN_instance;
  function Kirk$CommandEnum$ECDSA_SIGN_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$ECDSA_SIGN_instance;
  }
  var Kirk$CommandEnum$ECDSA_VERIFY_instance;
  function Kirk$CommandEnum$ECDSA_VERIFY_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$ECDSA_VERIFY_instance;
  }
  var Kirk$CommandEnum$CERT_VERIFY_instance;
  function Kirk$CommandEnum$CERT_VERIFY_getInstance() {
    Kirk$CommandEnum_initFields();
    return Kirk$CommandEnum$CERT_VERIFY_instance;
  }
  function Kirk$CommandEnum$Companion() {
    Kirk$CommandEnum$Companion_instance = this;
    UINT8_ENUM.call(this, Kirk$CommandEnum$values());
  }
  Kirk$CommandEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [UINT8_ENUM]
  };
  var Kirk$CommandEnum$Companion_instance = null;
  function Kirk$CommandEnum$Companion_getInstance() {
    Kirk$CommandEnum_initFields();
    if (Kirk$CommandEnum$Companion_instance === null) {
      new Kirk$CommandEnum$Companion();
    }
    return Kirk$CommandEnum$Companion_instance;
  }
  Kirk$CommandEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CommandEnum',
    interfaces: [IdEnum, Enum]
  };
  function Kirk$CommandEnum$values() {
    return [Kirk$CommandEnum$DECRYPT_PRIVATE_getInstance(), Kirk$CommandEnum$ENCRYPT_SIGN_getInstance(), Kirk$CommandEnum$DECRYPT_SIGN_getInstance(), Kirk$CommandEnum$ENCRYPT_IV_0_getInstance(), Kirk$CommandEnum$ENCRYPT_IV_FUSE_getInstance(), Kirk$CommandEnum$ENCRYPT_IV_USER_getInstance(), Kirk$CommandEnum$DECRYPT_IV_0_getInstance(), Kirk$CommandEnum$DECRYPT_IV_FUSE_getInstance(), Kirk$CommandEnum$DECRYPT_IV_USER_getInstance(), Kirk$CommandEnum$PRIV_SIG_CHECK_getInstance(), Kirk$CommandEnum$SHA1_HASH_getInstance(), Kirk$CommandEnum$ECDSA_GEN_KEYS_getInstance(), Kirk$CommandEnum$ECDSA_MULTIPLY_POINT_getInstance(), Kirk$CommandEnum$PRNG_getInstance(), Kirk$CommandEnum$INIT_getInstance(), Kirk$CommandEnum$ECDSA_SIGN_getInstance(), Kirk$CommandEnum$ECDSA_VERIFY_getInstance(), Kirk$CommandEnum$CERT_VERIFY_getInstance()];
  }
  Kirk$CommandEnum.values = Kirk$CommandEnum$values;
  function Kirk$CommandEnum$valueOf(name) {
    switch (name) {
      case 'DECRYPT_PRIVATE':
        return Kirk$CommandEnum$DECRYPT_PRIVATE_getInstance();
      case 'ENCRYPT_SIGN':
        return Kirk$CommandEnum$ENCRYPT_SIGN_getInstance();
      case 'DECRYPT_SIGN':
        return Kirk$CommandEnum$DECRYPT_SIGN_getInstance();
      case 'ENCRYPT_IV_0':
        return Kirk$CommandEnum$ENCRYPT_IV_0_getInstance();
      case 'ENCRYPT_IV_FUSE':
        return Kirk$CommandEnum$ENCRYPT_IV_FUSE_getInstance();
      case 'ENCRYPT_IV_USER':
        return Kirk$CommandEnum$ENCRYPT_IV_USER_getInstance();
      case 'DECRYPT_IV_0':
        return Kirk$CommandEnum$DECRYPT_IV_0_getInstance();
      case 'DECRYPT_IV_FUSE':
        return Kirk$CommandEnum$DECRYPT_IV_FUSE_getInstance();
      case 'DECRYPT_IV_USER':
        return Kirk$CommandEnum$DECRYPT_IV_USER_getInstance();
      case 'PRIV_SIG_CHECK':
        return Kirk$CommandEnum$PRIV_SIG_CHECK_getInstance();
      case 'SHA1_HASH':
        return Kirk$CommandEnum$SHA1_HASH_getInstance();
      case 'ECDSA_GEN_KEYS':
        return Kirk$CommandEnum$ECDSA_GEN_KEYS_getInstance();
      case 'ECDSA_MULTIPLY_POINT':
        return Kirk$CommandEnum$ECDSA_MULTIPLY_POINT_getInstance();
      case 'PRNG':
        return Kirk$CommandEnum$PRNG_getInstance();
      case 'INIT':
        return Kirk$CommandEnum$INIT_getInstance();
      case 'ECDSA_SIGN':
        return Kirk$CommandEnum$ECDSA_SIGN_getInstance();
      case 'ECDSA_VERIFY':
        return Kirk$CommandEnum$ECDSA_VERIFY_getInstance();
      case 'CERT_VERIFY':
        return Kirk$CommandEnum$CERT_VERIFY_getInstance();
      default:throwISE('No enum constant com.soywiz.kpspemu.kirk.Kirk.CommandEnum.' + name);
    }
  }
  Kirk$CommandEnum.valueOf_61zpoe$ = Kirk$CommandEnum$valueOf;
  function Kirk$KIRK_AES128CBC_HEADER(mode, unk_4, unk_8, keyseed, data_size) {
    Kirk$KIRK_AES128CBC_HEADER$Companion_getInstance();
    if (mode === void 0)
      mode = Kirk$KirkMode$Invalid0_getInstance();
    if (unk_4 === void 0)
      unk_4 = 0;
    if (unk_8 === void 0)
      unk_8 = 0;
    if (keyseed === void 0)
      keyseed = 0;
    if (data_size === void 0)
      data_size = 0;
    this.mode = mode;
    this.unk_4 = unk_4;
    this.unk_8 = unk_8;
    this.keyseed = keyseed;
    this.data_size = data_size;
  }
  function Kirk$KIRK_AES128CBC_HEADER$Companion() {
    Kirk$KIRK_AES128CBC_HEADER$Companion_instance = this;
    Struct.call(this, Kirk$KIRK_AES128CBC_HEADER$Kirk$KIRK_AES128CBC_HEADER$Companion_init$lambda, [AS(getPropertyCallableRef('mode', 1, function ($receiver) {
      return $receiver.mode;
    }, function ($receiver, value) {
      $receiver.mode = value;
    }), asEnum(INT32_getInstance(), Kirk$KirkMode$Companion_getInstance())), AS(getPropertyCallableRef('unk_4', 1, function ($receiver) {
      return $receiver.unk_4;
    }, function ($receiver, value) {
      $receiver.unk_4 = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('unk_8', 1, function ($receiver) {
      return $receiver.unk_8;
    }, function ($receiver, value) {
      $receiver.unk_8 = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('keyseed', 1, function ($receiver) {
      return $receiver.keyseed;
    }, function ($receiver, value) {
      $receiver.keyseed = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('data_size', 1, function ($receiver) {
      return $receiver.data_size;
    }, function ($receiver, value) {
      $receiver.data_size = value;
    }), INT32_getInstance())]);
  }
  function Kirk$KIRK_AES128CBC_HEADER$Kirk$KIRK_AES128CBC_HEADER$Companion_init$lambda() {
    return new Kirk$KIRK_AES128CBC_HEADER();
  }
  Kirk$KIRK_AES128CBC_HEADER$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var Kirk$KIRK_AES128CBC_HEADER$Companion_instance = null;
  function Kirk$KIRK_AES128CBC_HEADER$Companion_getInstance() {
    if (Kirk$KIRK_AES128CBC_HEADER$Companion_instance === null) {
      new Kirk$KIRK_AES128CBC_HEADER$Companion();
    }
    return Kirk$KIRK_AES128CBC_HEADER$Companion_instance;
  }
  Kirk$KIRK_AES128CBC_HEADER.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KIRK_AES128CBC_HEADER',
    interfaces: []
  };
  Kirk$KIRK_AES128CBC_HEADER.prototype.component1 = function () {
    return this.mode;
  };
  Kirk$KIRK_AES128CBC_HEADER.prototype.component2 = function () {
    return this.unk_4;
  };
  Kirk$KIRK_AES128CBC_HEADER.prototype.component3 = function () {
    return this.unk_8;
  };
  Kirk$KIRK_AES128CBC_HEADER.prototype.component4 = function () {
    return this.keyseed;
  };
  Kirk$KIRK_AES128CBC_HEADER.prototype.component5 = function () {
    return this.data_size;
  };
  Kirk$KIRK_AES128CBC_HEADER.prototype.copy_ebrgmr$ = function (mode, unk_4, unk_8, keyseed, data_size) {
    return new Kirk$KIRK_AES128CBC_HEADER(mode === void 0 ? this.mode : mode, unk_4 === void 0 ? this.unk_4 : unk_4, unk_8 === void 0 ? this.unk_8 : unk_8, keyseed === void 0 ? this.keyseed : keyseed, data_size === void 0 ? this.data_size : data_size);
  };
  Kirk$KIRK_AES128CBC_HEADER.prototype.toString = function () {
    return 'KIRK_AES128CBC_HEADER(mode=' + Kotlin.toString(this.mode) + (', unk_4=' + Kotlin.toString(this.unk_4)) + (', unk_8=' + Kotlin.toString(this.unk_8)) + (', keyseed=' + Kotlin.toString(this.keyseed)) + (', data_size=' + Kotlin.toString(this.data_size)) + ')';
  };
  Kirk$KIRK_AES128CBC_HEADER.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.mode) | 0;
    result = result * 31 + Kotlin.hashCode(this.unk_4) | 0;
    result = result * 31 + Kotlin.hashCode(this.unk_8) | 0;
    result = result * 31 + Kotlin.hashCode(this.keyseed) | 0;
    result = result * 31 + Kotlin.hashCode(this.data_size) | 0;
    return result;
  };
  Kirk$KIRK_AES128CBC_HEADER.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.mode, other.mode) && Kotlin.equals(this.unk_4, other.unk_4) && Kotlin.equals(this.unk_8, other.unk_8) && Kotlin.equals(this.keyseed, other.keyseed) && Kotlin.equals(this.data_size, other.data_size)))));
  };
  function Kirk$AES128CMACHeader(AES_key, CMAC_key, CMAC_header_hash, CMAC_data_hash, Unknown1, Mode, UseECDSAhash, Unknown2, DataSize, DataOffset, Unknown3, Unknown4) {
    Kirk$AES128CMACHeader$Companion_getInstance();
    if (AES_key === void 0)
      AES_key = new Int8Array(16);
    if (CMAC_key === void 0)
      CMAC_key = new Int8Array(16);
    if (CMAC_header_hash === void 0)
      CMAC_header_hash = new Int8Array(16);
    if (CMAC_data_hash === void 0)
      CMAC_data_hash = new Int8Array(16);
    if (Unknown1 === void 0)
      Unknown1 = new Int8Array(32);
    if (Mode === void 0)
      Mode = Kirk$KirkMode$Invalid0_getInstance();
    if (UseECDSAhash === void 0)
      UseECDSAhash = 0;
    if (Unknown2 === void 0)
      Unknown2 = new Int8Array(14);
    if (DataSize === void 0)
      DataSize = 0;
    if (DataOffset === void 0)
      DataOffset = 0;
    if (Unknown3 === void 0)
      Unknown3 = new Int8Array(8);
    if (Unknown4 === void 0)
      Unknown4 = new Int8Array(16);
    this.AES_key = AES_key;
    this.CMAC_key = CMAC_key;
    this.CMAC_header_hash = CMAC_header_hash;
    this.CMAC_data_hash = CMAC_data_hash;
    this.Unknown1 = Unknown1;
    this.Mode = Mode;
    this.UseECDSAhash = UseECDSAhash;
    this.Unknown2 = Unknown2;
    this.DataSize = DataSize;
    this.DataOffset = DataOffset;
    this.Unknown3 = Unknown3;
    this.Unknown4 = Unknown4;
  }
  function Kirk$AES128CMACHeader$Companion() {
    Kirk$AES128CMACHeader$Companion_instance = this;
    Struct.call(this, Kirk$AES128CMACHeader$Kirk$AES128CMACHeader$Companion_init$lambda, [AS(getPropertyCallableRef('AES_key', 1, function ($receiver) {
      return $receiver.AES_key;
    }, function ($receiver, value) {
      $receiver.AES_key = value;
    }), new BYTEARRAY(16)), AS(getPropertyCallableRef('CMAC_key', 1, function ($receiver) {
      return $receiver.CMAC_key;
    }, function ($receiver, value) {
      $receiver.CMAC_key = value;
    }), new BYTEARRAY(16)), AS(getPropertyCallableRef('CMAC_header_hash', 1, function ($receiver) {
      return $receiver.CMAC_header_hash;
    }, function ($receiver, value) {
      $receiver.CMAC_header_hash = value;
    }), new BYTEARRAY(16)), AS(getPropertyCallableRef('CMAC_data_hash', 1, function ($receiver) {
      return $receiver.CMAC_data_hash;
    }, function ($receiver, value) {
      $receiver.CMAC_data_hash = value;
    }), new BYTEARRAY(16)), AS(getPropertyCallableRef('Unknown1', 1, function ($receiver) {
      return $receiver.Unknown1;
    }, function ($receiver, value) {
      $receiver.Unknown1 = value;
    }), new BYTEARRAY(32)), AS(getPropertyCallableRef('Mode', 1, function ($receiver) {
      return $receiver.Mode;
    }, function ($receiver, value) {
      $receiver.Mode = value;
    }), asEnum(UINT8_getInstance(), Kirk$KirkMode$Companion_getInstance())), AS(getPropertyCallableRef('UseECDSAhash', 1, function ($receiver) {
      return $receiver.UseECDSAhash;
    }, function ($receiver, value) {
      $receiver.UseECDSAhash = value;
    }), UINT8_getInstance()), AS(getPropertyCallableRef('Unknown2', 1, function ($receiver) {
      return $receiver.Unknown2;
    }, function ($receiver, value) {
      $receiver.Unknown2 = value;
    }), new BYTEARRAY(14)), AS(getPropertyCallableRef('DataSize', 1, function ($receiver) {
      return $receiver.DataSize;
    }, function ($receiver, value) {
      $receiver.DataSize = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('DataOffset', 1, function ($receiver) {
      return $receiver.DataOffset;
    }, function ($receiver, value) {
      $receiver.DataOffset = value;
    }), INT32_getInstance()), AS(getPropertyCallableRef('Unknown3', 1, function ($receiver) {
      return $receiver.Unknown3;
    }, function ($receiver, value) {
      $receiver.Unknown3 = value;
    }), new BYTEARRAY(8)), AS(getPropertyCallableRef('Unknown4', 1, function ($receiver) {
      return $receiver.Unknown4;
    }, function ($receiver, value) {
      $receiver.Unknown4 = value;
    }), new BYTEARRAY(16))]);
  }
  function Kirk$AES128CMACHeader$Kirk$AES128CMACHeader$Companion_init$lambda() {
    return new Kirk$AES128CMACHeader();
  }
  Kirk$AES128CMACHeader$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Struct]
  };
  var Kirk$AES128CMACHeader$Companion_instance = null;
  function Kirk$AES128CMACHeader$Companion_getInstance() {
    if (Kirk$AES128CMACHeader$Companion_instance === null) {
      new Kirk$AES128CMACHeader$Companion();
    }
    return Kirk$AES128CMACHeader$Companion_instance;
  }
  Kirk$AES128CMACHeader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AES128CMACHeader',
    interfaces: []
  };
  Kirk$AES128CMACHeader.prototype.component1 = function () {
    return this.AES_key;
  };
  Kirk$AES128CMACHeader.prototype.component2 = function () {
    return this.CMAC_key;
  };
  Kirk$AES128CMACHeader.prototype.component3 = function () {
    return this.CMAC_header_hash;
  };
  Kirk$AES128CMACHeader.prototype.component4 = function () {
    return this.CMAC_data_hash;
  };
  Kirk$AES128CMACHeader.prototype.component5 = function () {
    return this.Unknown1;
  };
  Kirk$AES128CMACHeader.prototype.component6 = function () {
    return this.Mode;
  };
  Kirk$AES128CMACHeader.prototype.component7 = function () {
    return this.UseECDSAhash;
  };
  Kirk$AES128CMACHeader.prototype.component8 = function () {
    return this.Unknown2;
  };
  Kirk$AES128CMACHeader.prototype.component9 = function () {
    return this.DataSize;
  };
  Kirk$AES128CMACHeader.prototype.component10 = function () {
    return this.DataOffset;
  };
  Kirk$AES128CMACHeader.prototype.component11 = function () {
    return this.Unknown3;
  };
  Kirk$AES128CMACHeader.prototype.component12 = function () {
    return this.Unknown4;
  };
  Kirk$AES128CMACHeader.prototype.copy_5eisb7$ = function (AES_key, CMAC_key, CMAC_header_hash, CMAC_data_hash, Unknown1, Mode, UseECDSAhash, Unknown2, DataSize, DataOffset, Unknown3, Unknown4) {
    return new Kirk$AES128CMACHeader(AES_key === void 0 ? this.AES_key : AES_key, CMAC_key === void 0 ? this.CMAC_key : CMAC_key, CMAC_header_hash === void 0 ? this.CMAC_header_hash : CMAC_header_hash, CMAC_data_hash === void 0 ? this.CMAC_data_hash : CMAC_data_hash, Unknown1 === void 0 ? this.Unknown1 : Unknown1, Mode === void 0 ? this.Mode : Mode, UseECDSAhash === void 0 ? this.UseECDSAhash : UseECDSAhash, Unknown2 === void 0 ? this.Unknown2 : Unknown2, DataSize === void 0 ? this.DataSize : DataSize, DataOffset === void 0 ? this.DataOffset : DataOffset, Unknown3 === void 0 ? this.Unknown3 : Unknown3, Unknown4 === void 0 ? this.Unknown4 : Unknown4);
  };
  Kirk$AES128CMACHeader.prototype.toString = function () {
    return 'AES128CMACHeader(AES_key=' + Kotlin.toString(this.AES_key) + (', CMAC_key=' + Kotlin.toString(this.CMAC_key)) + (', CMAC_header_hash=' + Kotlin.toString(this.CMAC_header_hash)) + (', CMAC_data_hash=' + Kotlin.toString(this.CMAC_data_hash)) + (', Unknown1=' + Kotlin.toString(this.Unknown1)) + (', Mode=' + Kotlin.toString(this.Mode)) + (', UseECDSAhash=' + Kotlin.toString(this.UseECDSAhash)) + (', Unknown2=' + Kotlin.toString(this.Unknown2)) + (', DataSize=' + Kotlin.toString(this.DataSize)) + (', DataOffset=' + Kotlin.toString(this.DataOffset)) + (', Unknown3=' + Kotlin.toString(this.Unknown3)) + (', Unknown4=' + Kotlin.toString(this.Unknown4)) + ')';
  };
  Kirk$AES128CMACHeader.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.AES_key) | 0;
    result = result * 31 + Kotlin.hashCode(this.CMAC_key) | 0;
    result = result * 31 + Kotlin.hashCode(this.CMAC_header_hash) | 0;
    result = result * 31 + Kotlin.hashCode(this.CMAC_data_hash) | 0;
    result = result * 31 + Kotlin.hashCode(this.Unknown1) | 0;
    result = result * 31 + Kotlin.hashCode(this.Mode) | 0;
    result = result * 31 + Kotlin.hashCode(this.UseECDSAhash) | 0;
    result = result * 31 + Kotlin.hashCode(this.Unknown2) | 0;
    result = result * 31 + Kotlin.hashCode(this.DataSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.DataOffset) | 0;
    result = result * 31 + Kotlin.hashCode(this.Unknown3) | 0;
    result = result * 31 + Kotlin.hashCode(this.Unknown4) | 0;
    return result;
  };
  Kirk$AES128CMACHeader.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.AES_key, other.AES_key) && Kotlin.equals(this.CMAC_key, other.CMAC_key) && Kotlin.equals(this.CMAC_header_hash, other.CMAC_header_hash) && Kotlin.equals(this.CMAC_data_hash, other.CMAC_data_hash) && Kotlin.equals(this.Unknown1, other.Unknown1) && Kotlin.equals(this.Mode, other.Mode) && Kotlin.equals(this.UseECDSAhash, other.UseECDSAhash) && Kotlin.equals(this.Unknown2, other.Unknown2) && Kotlin.equals(this.DataSize, other.DataSize) && Kotlin.equals(this.DataOffset, other.DataOffset) && Kotlin.equals(this.Unknown3, other.Unknown3) && Kotlin.equals(this.Unknown4, other.Unknown4)))));
  };
  Kirk.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Kirk',
    interfaces: []
  };
  var Kirk_instance = null;
  function Kirk_getInstance() {
    if (Kirk_instance === null) {
      new Kirk();
    }
    return Kirk_instance;
  }
  function KirkKeys() {
    KirkKeys_instance = this;
    this.kirk1_key = crypto.Hex.decode_61zpoe$('98C940975C1D10E87FE60EA3FD03A8BA');
    this.kirk16_key = crypto.Hex.decode_61zpoe$('475E09F4A237DA9BEFFF3BC077143D8A');
    this.kirk7_keys = hashMapOf([to(2, crypto.Hex.decode_61zpoe$('B813C35EC64441E3DC3C16F5B45E6484')), to(3, crypto.Hex.decode_61zpoe$('9802C4E6EC9E9E2FFC634CE42FBB4668')), to(4, crypto.Hex.decode_61zpoe$('99244CD258F51BCBB0619CA73830075F')), to(5, crypto.Hex.decode_61zpoe$('0225D7BA63ECB94A9D237601B3F6AC17')), to(7, crypto.Hex.decode_61zpoe$('76368B438F77D87EFE5FB6115939885C')), to(12, crypto.Hex.decode_61zpoe$('8485C848750843BC9B9AECA79C7F6018')), to(13, crypto.Hex.decode_61zpoe$('B5B16EDE23A97B0EA17CDBA2DCDEC46E')), to(14, crypto.Hex.decode_61zpoe$('C871FDB3BCC5D2F2E2D7729DDF826882')), to(15, crypto.Hex.decode_61zpoe$('0ABB336C96D4CDD8CB5F4BE0BADB9E03')), to(16, crypto.Hex.decode_61zpoe$('32295BD5EAF7A34216C88E48FF50D371')), to(17, crypto.Hex.decode_61zpoe$('46F25E8E4D2AA540730BC46E47EE6F0A')), to(18, crypto.Hex.decode_61zpoe$('5DC71139D01938BC027FDDDCB0837D9D')), to(56, crypto.Hex.decode_61zpoe$('12468D7E1C42209BBA5426835EB03303')), to(57, crypto.Hex.decode_61zpoe$('C43BB6D653EE67493EA95FBC0CED6F8A')), to(58, crypto.Hex.decode_61zpoe$('2CC3CF8C2878A5A663E2AF2D715E86BA')), to(68, crypto.Hex.decode_61zpoe$('7DF49265E3FAD678D6FE78ADBB3DFB63')), to(75, crypto.Hex.decode_61zpoe$('0CFD679AF9B4724FD78DD6E99642288B')), to(83, crypto.Hex.decode_61zpoe$('AFFE8EB13DD17ED80A61241C959256B6')), to(87, crypto.Hex.decode_61zpoe$('1C9BC490E3066481FA59FDB600BB2870')), to(93, crypto.Hex.decode_61zpoe$('115A5D20D53A8DD39CC5AF410F0F186F')), to(99, crypto.Hex.decode_61zpoe$('9C9B1372F8C640CF1C62F5D592DDB582')), to(100, crypto.Hex.decode_61zpoe$('03B302E85FF381B13B8DAA2A90FF5E61'))]);
    this.ec_p = crypto.Hex.decode_61zpoe$('FFFFFFFFFFFFFFFF00000001FFFFFFFFFFFFFFFF');
    this.ec_a = crypto.Hex.decode_61zpoe$('FFFFFFFFFFFFFFFF00000001FFFFFFFFFFFFFFFC');
    this.ec_b2 = crypto.Hex.decode_61zpoe$('A68BEDC33418029C1D3CE33B9A321FCCBB9E0F0B');
    this.ec_N2 = crypto.Hex.decode_61zpoe$('00FFFFFFFFFFFFFFFEFFFFB5AE3C523E63944F2127');
    this.Gx2 = crypto.Hex.decode_61zpoe$('128EC4256487FD8FDF64E2437BC0A1F6D5AFDE2C');
    this.Gy2 = crypto.Hex.decode_61zpoe$('5958557EB1DB001260425524DBC379D5AC5F4ADF');
    this.ec_b1 = crypto.Hex.decode_61zpoe$('65D1488C0359E234ADC95BD3908014BD91A525F9');
    this.ec_N1 = crypto.Hex.decode_61zpoe$('00FFFFFFFFFFFFFFFF0001B5C617F290EAE1DBAD8F');
    this.Gx1 = crypto.Hex.decode_61zpoe$('2259ACEE15489CB096A882F0AE1CF9FD8EE5F8FA');
    this.Gy1 = crypto.Hex.decode_61zpoe$('604358456D0A1CB2908DE90F27D75C82BEC108C0');
    this.Px1 = crypto.Hex.decode_61zpoe$('ED9CE58234E61A53C685D64D51D0236BC3B5D4B9');
    this.Py1 = crypto.Hex.decode_61zpoe$('049DF1A075C0E04FB344858B61B79B69A63D2C39 ');
  }
  KirkKeys.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'KirkKeys',
    interfaces: []
  };
  var KirkKeys_instance = null;
  function KirkKeys_getInstance() {
    if (KirkKeys_instance === null) {
      new KirkKeys();
    }
    return KirkKeys_instance;
  }
  function SHA1() {
    SHA1_instance = this;
    this.H0_0 = Kotlin.Long.fromInt(1732584193).toInt();
    this.H1_0 = (new Kotlin.Long(-271733879, 0)).toInt();
    this.H2_0 = (new Kotlin.Long(-1732584194, 0)).toInt();
    this.H3_0 = Kotlin.Long.fromInt(271733878).toInt();
    this.H4_0 = (new Kotlin.Long(-1009589776, 0)).toInt();
    this.K0020_0 = Kotlin.Long.fromInt(1518500249).toInt();
    this.K2040_0 = Kotlin.Long.fromInt(1859775393).toInt();
    this.K4060_0 = (new Kotlin.Long(-1894007588, 0)).toInt();
    this.K6080_0 = (new Kotlin.Long(-899497514, 0)).toInt();
  }
  function SHA1$Uint32ArrayBigEndian(bytes) {
    this.bytes = bytes;
    var $receiver = this.bytes.data.buffer;
    this.ints = new Int32Array_init($receiver, 0 * 4 | 0, ($receiver.byteLength / 4 | 0) - 0 | 0);
  }
  SHA1$Uint32ArrayBigEndian.prototype.get_za3lpa$ = function (index) {
    return reverseBytes(this.ints[index]);
  };
  SHA1$Uint32ArrayBigEndian.prototype.set_vux9f0$ = function (index, value) {
    this.ints[index] = reverseBytes(value);
  };
  SHA1$Uint32ArrayBigEndian.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Uint32ArrayBigEndian',
    interfaces: []
  };
  function SHA1$SHA1$Uint32ArrayBigEndian_init(length, $this) {
    $this = $this || Object.create(SHA1$Uint32ArrayBigEndian.prototype);
    SHA1$Uint32ArrayBigEndian.call($this, new UByteArray(new Int8Array(length * 4 | 0)));
    return $this;
  }
  SHA1.prototype.hash_fqrh44$ = function (input) {
    var tmp$, tmp$_0, tmp$_1;
    var uinput = new UByteArray(input);
    var inputBits = Kotlin.Long.fromInt(uinput.size).multiply(Kotlin.Long.fromInt(8));
    var minBits = inputBits.add(Kotlin.Long.fromInt(65));
    var x = minBits.toNumber() / 512.0;
    var bits = numberToInt(Math_0.ceil(x)) << 9;
    var bytes = bits / 8 | 0;
    var slen = bytes / 4 | 0;
    var s = SHA1$SHA1$Uint32ArrayBigEndian_init(slen);
    var w = new Int32Array(80);
    var h0 = {v: this.H0_0};
    var h1 = {v: this.H1_0};
    var h2 = {v: this.H2_0};
    var h3 = {v: this.H3_0};
    var h4 = {v: this.H4_0};
    tmp$ = uinput.size;
    for (var i = 0; i < tmp$; i++) {
      var tmp$_2 = s.bytes;
      var v = uinput.data[i] & 255;
      tmp$_2.data[i] = toByte(v);
    }
    var $this = s.bytes;
    var n = uinput.size;
    $this.data[n] = toByte(128);
    s.set_vux9f0$(slen - 2 | 0, inputBits.shiftRightUnsigned(32).toInt());
    s.set_vux9f0$(slen - 1 | 0, inputBits.shiftRightUnsigned(0).toInt());
    for (var i_0 = 0; i_0 < slen; i_0 += 16) {
      for (var j = 0; j < 16; j++)
        w[j] = s.get_za3lpa$(i_0 + j | 0);
      for (var j_0 = 16; j_0 < 80; j_0++)
        w[j_0] = this.rotateLeft_0(w[j_0 - 3 | 0] ^ w[j_0 - 8 | 0] ^ w[j_0 - 14 | 0] ^ w[j_0 - 16 | 0], 1);
      var a = h0.v;
      var b = h1.v;
      var c = h2.v;
      var d = h3.v;
      var e = h4.v;
      for (var j_1 = 0; j_1 < 80; j_1++) {
        tmp$_1 = this.rotateLeft_0(a, 5) + e + w[j_1] | 0;
        if (until(0, 20).contains_mef7kx$(j_1))
          tmp$_0 = (b & c | ~b & d) + this.K0020_0 | 0;
        else if (until(20, 40).contains_mef7kx$(j_1))
          tmp$_0 = (b ^ c ^ d) + this.K2040_0 | 0;
        else if (until(40, 60).contains_mef7kx$(j_1))
          tmp$_0 = (b & c ^ b & d ^ c & d) + this.K4060_0 | 0;
        else
          tmp$_0 = (b ^ c ^ d) + this.K6080_0 | 0;
        var temp = tmp$_1 + tmp$_0 | 0;
        e = d;
        d = c;
        c = this.rotateLeft_0(b, 30);
        b = a;
        a = temp;
      }
      h0.v = h0.v + a | 0;
      h1.v = h1.v + b | 0;
      h2.v = h2.v + c | 0;
      h3.v = h3.v + d | 0;
      h4.v = h4.v + e | 0;
    }
    var $receiver = new Int8Array(4 * 5 | 0);
    write32_be($receiver, 0, h0.v);
    write32_be($receiver, 4, h1.v);
    write32_be($receiver, 8, h2.v);
    write32_be($receiver, 12, h3.v);
    write32_be($receiver, 16, h4.v);
    return $receiver;
  };
  SHA1.prototype.rotateLeft_0 = function ($receiver, bits) {
    return $receiver << bits | $receiver >>> 32 - bits;
  };
  SHA1.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'SHA1',
    interfaces: []
  };
  var SHA1_instance = null;
  function SHA1_getInstance() {
    if (SHA1_instance === null) {
      new SHA1();
    }
    return SHA1_instance;
  }
  var MEMORY_MASK;
  var MASK;
  var LWR_MASK;
  var LWR_SHIFT;
  var LWL_MASK;
  var LWL_SHIFT;
  var SWL_MASK;
  var SWL_SHIFT;
  var SWR_MASK;
  var SWR_SHIFT;
  function Memory(dummy) {
    Memory$Companion_getInstance();
  }
  function Memory$Companion() {
    Memory$Companion_instance = this;
    this.MASK = MEMORY_MASK;
    this.MAIN_OFFSET = 134217728;
    this.HIGH_MASK = (new Kotlin.Long(-268435456, 0)).toInt();
    this.SCRATCHPAD = new Memory$MemorySegment('scatchpad', until(0, 65536));
    this.VIDEOMEM = new Memory$MemorySegment('videomem', until(67108864, 69206016));
    this.MAINMEM = new Memory$MemorySegment('mainmem', until(this.MAIN_OFFSET, 167772160));
  }
  Memory$Companion.prototype.invoke = function () {
    return new NormalMemory();
  };
  Memory$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Memory$Companion_instance = null;
  function Memory$Companion_getInstance() {
    if (Memory$Companion_instance === null) {
      new Memory$Companion();
    }
    return Memory$Companion_instance;
  }
  function Memory$MemorySegment(name, range) {
    this.name = name;
    this.range = range;
  }
  Object.defineProperty(Memory$MemorySegment.prototype, 'start', {
    get: function () {
      return this.range.start;
    }
  });
  Object.defineProperty(Memory$MemorySegment.prototype, 'end', {
    get: function () {
      return this.range.endInclusive + 1 | 0;
    }
  });
  Object.defineProperty(Memory$MemorySegment.prototype, 'size', {
    get: function () {
      return this.end - this.start | 0;
    }
  });
  Memory$MemorySegment.prototype.contains_za3lpa$ = function (index) {
    return this.range.contains_mef7kx$(index & MEMORY_MASK);
  };
  Memory$MemorySegment.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemorySegment',
    interfaces: []
  };
  Memory$MemorySegment.prototype.component1 = function () {
    return this.name;
  };
  Memory$MemorySegment.prototype.component2 = function () {
    return this.range;
  };
  Memory$MemorySegment.prototype.copy_olwhvr$ = function (name, range) {
    return new Memory$MemorySegment(name === void 0 ? this.name : name, range === void 0 ? this.range : range);
  };
  Memory$MemorySegment.prototype.toString = function () {
    return 'MemorySegment(name=' + Kotlin.toString(this.name) + (', range=' + Kotlin.toString(this.range)) + ')';
  };
  Memory$MemorySegment.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.range) | 0;
    return result;
  };
  Memory$MemorySegment.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.range, other.range)))));
  };
  Memory.prototype.hash_vux9f0$ = function (address4, nwords) {
    var hash = 0;
    for (var n = 0; n < nwords; n++)
      hash = hash + this.lw_za3lpa$(address4 + (n * 4 | 0) | 0) | 0;
    return hash;
  };
  Memory.prototype.readBytes_vux9f0$ = function (srcPos, count) {
    var $receiver = new Int8Array(count);
    this.read_3fge6q$(srcPos, $receiver, 0, count);
    return $receiver;
  };
  Memory.prototype.write_3fge6q$$default = function (dstPos, src, srcPos, len) {
    for (var n = 0; n < len; n++)
      this.sb_vux9f0$(dstPos + n | 0, src[srcPos + n | 0]);
  };
  Memory.prototype.write_3fge6q$ = function (dstPos, src, srcPos, len, callback$default) {
    if (srcPos === void 0)
      srcPos = 0;
    if (len === void 0)
      len = src.length - srcPos | 0;
    callback$default ? callback$default(dstPos, src, srcPos, len) : this.write_3fge6q$$default(dstPos, src, srcPos, len);
  };
  Memory.prototype.read_3fge6q$$default = function (srcPos, dst, dstPos, len) {
    for (var n = 0; n < len; n++)
      dst[dstPos + n | 0] = toByte(this.lb_za3lpa$(srcPos + n | 0));
  };
  Memory.prototype.read_3fge6q$ = function (srcPos, dst, dstPos, len, callback$default) {
    if (dstPos === void 0)
      dstPos = 0;
    if (len === void 0)
      len = dst.length - dstPos | 0;
    callback$default ? callback$default(srcPos, dst, dstPos, len) : this.read_3fge6q$$default(srcPos, dst, dstPos, len);
  };
  Memory.prototype.write_coga0j$$default = function (dstPos, src, srcPos, len) {
    for (var n = 0; n < len; n++)
      this.sw_vux9f0$(dstPos + (n * 4 | 0) | 0, src[srcPos + n | 0]);
  };
  Memory.prototype.write_coga0j$ = function (dstPos, src, srcPos, len, callback$default) {
    if (srcPos === void 0)
      srcPos = 0;
    if (len === void 0)
      len = src.length - srcPos | 0;
    callback$default ? callback$default(dstPos, src, srcPos, len) : this.write_coga0j$$default(dstPos, src, srcPos, len);
  };
  Memory.prototype.read_r43jz4$$default = function (srcPos, dst, dstPos, len) {
    for (var n = 0; n < len; n++)
      dst[dstPos + n | 0] = toShort(this.lh_za3lpa$(srcPos + (n * 4 | 0) | 0));
  };
  Memory.prototype.read_r43jz4$ = function (srcPos, dst, dstPos, len, callback$default) {
    if (dstPos === void 0)
      dstPos = 0;
    if (len === void 0)
      len = dst.length - dstPos | 0;
    callback$default ? callback$default(srcPos, dst, dstPos, len) : this.read_r43jz4$$default(srcPos, dst, dstPos, len);
  };
  Memory.prototype.read_coga0j$$default = function (srcPos, dst, dstPos, len) {
    for (var n = 0; n < len; n++)
      dst[dstPos + n | 0] = this.lw_za3lpa$(srcPos + (n * 4 | 0) | 0);
  };
  Memory.prototype.read_coga0j$ = function (srcPos, dst, dstPos, len, callback$default) {
    if (dstPos === void 0)
      dstPos = 0;
    if (len === void 0)
      len = dst.length - dstPos | 0;
    callback$default ? callback$default(srcPos, dst, dstPos, len) : this.read_coga0j$$default(srcPos, dst, dstPos, len);
  };
  Memory.prototype.lwl_vux9f0$ = function (address, value) {
    var align = address & 3;
    var oldvalue = this.lw_za3lpa$(address & ~3);
    return oldvalue << LWL_SHIFT[align] | value & LWL_MASK[align];
  };
  Memory.prototype.lwr_vux9f0$ = function (address, value) {
    var align = address & 3;
    var oldvalue = this.lw_za3lpa$(address & ~3);
    return oldvalue >>> LWR_SHIFT[align] | value & LWR_MASK[align];
  };
  Memory.prototype.swl_vux9f0$ = function (address, value) {
    var align = address & 3;
    var aadress = address & ~3;
    var vwrite = value >>> SWL_SHIFT[align] | this.lw_za3lpa$(aadress) & SWL_MASK[align];
    this.sw_vux9f0$(aadress, vwrite);
  };
  Memory.prototype.swr_vux9f0$ = function (address, value) {
    var align = address & 3;
    var aadress = address & ~3;
    var vwrite = value << SWR_SHIFT[align] | this.lw_za3lpa$(aadress) & SWR_MASK[align];
    this.sw_vux9f0$(aadress, vwrite);
  };
  Memory.prototype.getFastMem = function () {
    return null;
  };
  Memory.prototype.getFastMemOffset_za3lpa$ = function (addr) {
    return 0;
  };
  Memory.prototype.svl_q_wc9gac$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.mem.Memory.svl_q_wc9gac$', function (address, read) {
    var k = 3 - (address >>> 2 & 3) | 0;
    var addr = address & ~15;
    for (var n = k; n < 4; n++) {
      this.sw_vux9f0$(addr, read(n));
      addr = addr + 4 | 0;
    }
  });
  Memory.prototype.svr_q_wc9gac$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.mem.Memory.svr_q_wc9gac$', function (address, read) {
    var k = 4 - (address >>> 2 & 3) | 0;
    var addr = address;
    for (var n = 0; n < k; n++) {
      this.sw_vux9f0$(addr, read(n));
      addr = addr + 4 | 0;
    }
  });
  Memory.prototype.lvl_q_62rrlz$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.mem.Memory.lvl_q_62rrlz$', function (address, writer) {
    var k = 3 - (address >>> 2 & 3) | 0;
    var addr = address & ~15;
    for (var n = k; n < 4; n++) {
      writer(n, this.lw_za3lpa$(addr));
      addr = addr + 4 | 0;
    }
  });
  Memory.prototype.lvr_q_62rrlz$ = defineInlineFunction('kpspemu.com.soywiz.kpspemu.mem.Memory.lvr_q_62rrlz$', function (address, writer) {
    var k = 4 - (address >>> 2 & 3) | 0;
    var addr = address;
    for (var n = 0; n < k; n++) {
      writer(n, this.lw_za3lpa$(addr));
      addr = addr + 4 | 0;
    }
  });
  Memory.prototype.lbu_za3lpa$ = function (address) {
    return this.lb_za3lpa$(address) & 255;
  };
  Memory.prototype.lhu_za3lpa$ = function (address) {
    return this.lh_za3lpa$(address) & 65535;
  };
  Memory.prototype.memset_qt1dr2$ = function (address, value, size) {
    for (var n = 0; n < size; n++)
      this.sb_vux9f0$(address, value);
  };
  Memory.prototype.lwSafe_za3lpa$ = function (address) {
    return this.isValidAddress_za3lpa$(address) ? this.lw_za3lpa$(address) : 0;
  };
  Memory.prototype.lbuSafe_za3lpa$ = function (address) {
    return this.isValidAddress_za3lpa$(address) ? this.lbu_za3lpa$(address) : 0;
  };
  Memory.prototype.isValidAddress_za3lpa$ = function (address) {
    return Memory$Companion_getInstance().MAINMEM.contains_za3lpa$(address) || Memory$Companion_getInstance().VIDEOMEM.contains_za3lpa$(address) || Memory$Companion_getInstance().SCRATCHPAD.contains_za3lpa$(address);
  };
  Memory.prototype.copy_qt1dr2$ = function (srcPos, dstPos, size) {
    for (var n = 0; n < size; n++)
      this.sb_vux9f0$(dstPos + n | 0, this.lb_za3lpa$(srcPos + n | 0));
  };
  Memory.prototype.getPointerStream_vux9f0$ = function (address, size) {
    return sliceWithSize_0(openSync_0(this), address, size);
  };
  Memory.prototype.getPointerStream_za3lpa$ = function (address) {
    return sliceWithStart(openSync_0(this), Kotlin.Long.fromInt(address));
  };
  Memory.prototype.readStringzOrNull_za3lpa$ = function (offset) {
    return offset !== 0 ? this.readStringz_za3lpa$(offset) : null;
  };
  Memory.prototype.readStringz_za3lpa$ = function (offset) {
    return readStringz_0(sliceWithStart(openSync_0(this), Kotlin.Long.fromInt(offset)));
  };
  Memory.prototype.fill_qt1dr2$ = function (value, address, size) {
    for (var n = 0; n < size; n++)
      this.sb_vux9f0$(address + n | 0, value);
  };
  Memory.prototype.reset = function () {
    var tmp$;
    tmp$ = listOf([Memory$Companion_getInstance().SCRATCHPAD, Memory$Companion_getInstance().MAINMEM, Memory$Companion_getInstance().VIDEOMEM]).iterator();
    while (tmp$.hasNext()) {
      var seg = tmp$.next();
      this.fill_qt1dr2$(0, seg.start, seg.size);
    }
  };
  Memory.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Memory',
    interfaces: []
  };
  function DummyMemory() {
    DummyMemory_instance = this;
    Memory.call(this, true);
  }
  DummyMemory.prototype.sb_vux9f0$ = function (address, value) {
  };
  DummyMemory.prototype.sh_vux9f0$ = function (address, value) {
  };
  DummyMemory.prototype.sw_vux9f0$ = function (address, value) {
  };
  DummyMemory.prototype.lb_za3lpa$ = function (address) {
    return 0;
  };
  DummyMemory.prototype.lh_za3lpa$ = function (address) {
    return 0;
  };
  DummyMemory.prototype.lw_za3lpa$ = function (address) {
    return 0;
  };
  DummyMemory.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'DummyMemory',
    interfaces: [Memory]
  };
  var DummyMemory_instance = null;
  function DummyMemory_getInstance() {
    if (DummyMemory_instance === null) {
      new DummyMemory();
    }
    return DummyMemory_instance;
  }
  function trace($receiver, traceWrites, traceReads) {
    if (traceWrites === void 0)
      traceWrites = true;
    if (traceReads === void 0)
      traceReads = false;
    return new TraceMemory($receiver, traceWrites, traceReads);
  }
  function TraceMemory(parent, traceWrites, traceReads) {
    if (parent === void 0)
      parent = Memory$Companion_getInstance().invoke();
    if (traceWrites === void 0)
      traceWrites = true;
    if (traceReads === void 0)
      traceReads = false;
    Memory.call(this, true);
    this.parent = parent;
    this.traceWrites = traceWrites;
    this.traceReads = traceReads;
  }
  TraceMemory.prototype.normalized_za3lpa$ = function (address) {
    return address & Memory$Companion_getInstance().MASK;
  };
  TraceMemory.prototype.sb_vux9f0$ = function (address, value) {
    if (this.traceWrites)
      println(format_0('sb(0x%08X) = %d', [this.normalized_za3lpa$(address), value]));
    this.parent.sb_vux9f0$(address, value);
  };
  TraceMemory.prototype.sh_vux9f0$ = function (address, value) {
    if (this.traceWrites)
      println(format_0('sh(0x%08X) = %d', [this.normalized_za3lpa$(address), value]));
    this.parent.sh_vux9f0$(address, value);
  };
  TraceMemory.prototype.sw_vux9f0$ = function (address, value) {
    if (this.traceWrites)
      println(format_0('sw(0x%08X) = %d', [this.normalized_za3lpa$(address), value]));
    this.parent.sw_vux9f0$(address, value);
  };
  TraceMemory.prototype.lb_za3lpa$ = function (address) {
    if (this.traceReads)
      println(format_0('lb(0x%08X)', [this.normalized_za3lpa$(address)]));
    var res = this.parent.lb_za3lpa$(address);
    if (this.traceReads)
      println(format_0('-> %d', [res]));
    return res;
  };
  TraceMemory.prototype.lh_za3lpa$ = function (address) {
    if (this.traceReads)
      println(format_0('lh(0x%08X)', [this.normalized_za3lpa$(address)]));
    var res = this.parent.lh_za3lpa$(address);
    if (this.traceReads)
      println(format_0('-> %d', [res]));
    return res;
  };
  TraceMemory.prototype.lw_za3lpa$ = function (address) {
    if (this.traceReads)
      println(format_0('lw(0x%08X)', [this.normalized_za3lpa$(address)]));
    var res = this.parent.lw_za3lpa$(address);
    if (this.traceReads)
      println(format_0('-> %d', [res]));
    return res;
  };
  TraceMemory.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TraceMemory',
    interfaces: [Memory]
  };
  function ListenerMemory(parent, listener) {
    if (parent === void 0)
      parent = Memory$Companion_getInstance().invoke();
    Memory.call(this, true);
    this.parent = parent;
    this.listener = listener;
  }
  ListenerMemory.prototype.normalized_za3lpa$ = function (address) {
    return address & 268435455;
  };
  ListenerMemory.prototype.check_htupxp$_0 = function (address, callback) {
    try {
      return callback();
    }
     catch (e) {
      if (Kotlin.isType(e, IndexOutOfBoundsException)) {
        lang.Console.error_s8jyv4$('OUT OF BOUNDS trying to read: ' + get_hex(address));
        throw e;
      }
       else
        throw e;
    }
  };
  ListenerMemory.prototype.sb_vux9f0$ = function (address, value) {
    try {
      this.listener(1, address, this.parent.lb_za3lpa$(address), value);
      this.parent.sb_vux9f0$(this.normalized_za3lpa$(address), value);
    }
     catch (e) {
      if (Kotlin.isType(e, IndexOutOfBoundsException)) {
        lang.Console.error_s8jyv4$('OUT OF BOUNDS trying to read: ' + get_hex(address));
        throw e;
      }
       else
        throw e;
    }
  };
  ListenerMemory.prototype.sh_vux9f0$ = function (address, value) {
    try {
      this.listener(2, address, this.parent.lh_za3lpa$(address), value);
      this.parent.sh_vux9f0$(this.normalized_za3lpa$(address), value);
    }
     catch (e) {
      if (Kotlin.isType(e, IndexOutOfBoundsException)) {
        lang.Console.error_s8jyv4$('OUT OF BOUNDS trying to read: ' + get_hex(address));
        throw e;
      }
       else
        throw e;
    }
  };
  ListenerMemory.prototype.sw_vux9f0$ = function (address, value) {
    try {
      this.listener(4, address, this.parent.lw_za3lpa$(address), value);
      this.parent.sw_vux9f0$(this.normalized_za3lpa$(address), value);
    }
     catch (e) {
      if (Kotlin.isType(e, IndexOutOfBoundsException)) {
        lang.Console.error_s8jyv4$('OUT OF BOUNDS trying to read: ' + get_hex(address));
        throw e;
      }
       else
        throw e;
    }
  };
  ListenerMemory.prototype.lb_za3lpa$ = function (address) {
    var check_htupxp$_0$result;
    try {
      check_htupxp$_0$result = this.parent.lb_za3lpa$(this.normalized_za3lpa$(address));
    }
     catch (e) {
      if (Kotlin.isType(e, IndexOutOfBoundsException)) {
        lang.Console.error_s8jyv4$('OUT OF BOUNDS trying to read: ' + get_hex(address));
        throw e;
      }
       else
        throw e;
    }
    return check_htupxp$_0$result;
  };
  ListenerMemory.prototype.lh_za3lpa$ = function (address) {
    var check_htupxp$_0$result;
    try {
      check_htupxp$_0$result = this.parent.lh_za3lpa$(this.normalized_za3lpa$(address));
    }
     catch (e) {
      if (Kotlin.isType(e, IndexOutOfBoundsException)) {
        lang.Console.error_s8jyv4$('OUT OF BOUNDS trying to read: ' + get_hex(address));
        throw e;
      }
       else
        throw e;
    }
    return check_htupxp$_0$result;
  };
  ListenerMemory.prototype.lw_za3lpa$ = function (address) {
    var check_htupxp$_0$result;
    try {
      check_htupxp$_0$result = this.parent.lw_za3lpa$(this.normalized_za3lpa$(address));
    }
     catch (e) {
      if (Kotlin.isType(e, IndexOutOfBoundsException)) {
        lang.Console.error_s8jyv4$('OUT OF BOUNDS trying to read: ' + get_hex(address));
        throw e;
      }
       else
        throw e;
    }
    return check_htupxp$_0$result;
  };
  ListenerMemory.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ListenerMemory',
    interfaces: [Memory]
  };
  function FastMemoryBacked(fmem) {
    Memory.call(this, true);
    this.fmem = fmem;
    this.i8 = this.fmem.i8;
    this.i16 = this.fmem.i16;
    this.i32 = this.fmem.i32;
  }
  FastMemoryBacked.prototype.hash_vux9f0$ = function (address4, nwords) {
    var hash = 0;
    var i32 = this.i32;
    var ptr = this.index_za3lpa$(address4) >>> 2;
    for (var n = 0; n < nwords; n++) {
      hash = hash + i32[ptr + n | 0] | 0;
    }
    return hash;
  };
  FastMemoryBacked.prototype.sb_vux9f0$ = function (address, value) {
    this.i8[this.index_za3lpa$(address)] = toByte(value);
  };
  FastMemoryBacked.prototype.sh_vux9f0$ = function (address, value) {
    this.i16[this.index_za3lpa$(address) >>> 1] = toShort(value);
  };
  FastMemoryBacked.prototype.sw_vux9f0$ = function (address, value) {
    this.i32[this.index_za3lpa$(address) >>> 2] = value;
  };
  FastMemoryBacked.prototype.lb_za3lpa$ = function (address) {
    return this.i8[this.index_za3lpa$(address)];
  };
  FastMemoryBacked.prototype.lh_za3lpa$ = function (address) {
    return this.i16[this.index_za3lpa$(address) >>> 1];
  };
  FastMemoryBacked.prototype.lw_za3lpa$ = function (address) {
    return this.i32[this.index_za3lpa$(address) >>> 2];
  };
  FastMemoryBacked.prototype.copy_qt1dr2$ = function (srcPos, dstPos, size) {
    arraycopy_3(this.fmem.buffer, this.index_za3lpa$(srcPos), this.fmem.buffer, this.index_za3lpa$(dstPos), size);
  };
  FastMemoryBacked.prototype.read_3fge6q$$default = function (srcPos, dst, dstPos, len) {
    this.fmem.getArrayInt8_3fge6q$(this.index_za3lpa$(srcPos), dst, dstPos, len);
  };
  FastMemoryBacked.prototype.read_r43jz4$$default = function (srcPos, dst, dstPos, len) {
    this.fmem.getAlignedArrayInt16_r43jz4$(this.index_za3lpa$(srcPos) >>> 1, dst, dstPos, len);
  };
  FastMemoryBacked.prototype.read_coga0j$$default = function (srcPos, dst, dstPos, len) {
    this.fmem.getAlignedArrayInt32_coga0j$(this.index_za3lpa$(srcPos) >>> 2, dst, dstPos, len);
  };
  FastMemoryBacked.prototype.write_3fge6q$$default = function (dstPos, src, srcPos, len) {
    this.fmem.setAlignedArrayInt8_3fge6q$(this.index_za3lpa$(dstPos), src, srcPos, len);
  };
  FastMemoryBacked.prototype.write_coga0j$$default = function (dstPos, src, srcPos, len) {
    this.fmem.setAlignedArrayInt32_coga0j$(this.index_za3lpa$(dstPos) >>> 2, src, srcPos, len);
  };
  FastMemoryBacked.prototype.fill_qt1dr2$ = function (value, address, size) {
    var m = this.i8;
    var start = this.index_za3lpa$(address);
    for (var n = 0; n < size; n++) {
      m[start + n | 0] = toByte(value);
    }
  };
  FastMemoryBacked.prototype.getFastMem = function () {
    return this.fmem;
  };
  FastMemoryBacked.prototype.getFastMemOffset_za3lpa$ = function (addr) {
    return this.index_za3lpa$(addr);
  };
  FastMemoryBacked.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FastMemoryBacked',
    interfaces: [Memory]
  };
  function NormalMemory() {
    FastMemoryBacked.call(this, FastMemory.Companion.alloc_za3lpa$(167772160));
  }
  NormalMemory.prototype.index_za3lpa$ = function (address) {
    return address & 268435455;
  };
  NormalMemory.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NormalMemory',
    interfaces: [FastMemoryBacked]
  };
  function SmallMemory() {
    FastMemoryBacked.call(this, FastMemory.Companion.alloc_za3lpa$(33554432 + 2097152 + 65536 | 0));
  }
  SmallMemory.prototype.index_za3lpa$ = function (address) {
    var tmp$;
    var addr = address & 268435455;
    if (addr >= 134217728)
      tmp$ = addr - 134217728 | 0;
    else if (addr >= 67108864)
      tmp$ = addr - 67108864 + 33554432 | 0;
    else
      tmp$ = addr + 67108864 + 33554432 | 0;
    return tmp$;
  };
  SmallMemory.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SmallMemory',
    interfaces: [FastMemoryBacked]
  };
  function openSync$ObjectLiteral(closure$mem) {
    this.closure$mem = closure$mem;
    SyncStreamBase.call(this);
  }
  Object.defineProperty(openSync$ObjectLiteral.prototype, 'length', {
    get: function () {
      return new Kotlin.Long(-1, 0);
    },
    set: function (value) {
      error.invalidOp;
    }
  });
  openSync$ObjectLiteral.prototype.close = function () {
  };
  openSync$ObjectLiteral.prototype.read_4m9kcn$ = function (position, buffer, offset, len) {
    this.closure$mem.read_3fge6q$(position.toInt(), buffer, offset, len);
    return len;
  };
  openSync$ObjectLiteral.prototype.write_4m9kcn$ = function (position, buffer, offset, len) {
    this.closure$mem.write_3fge6q$(position.toInt(), buffer, offset, len);
  };
  openSync$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [SyncStreamBase]
  };
  function openSync_0($receiver) {
    var mem = $receiver;
    return new SyncStream(new openSync$ObjectLiteral(mem));
  }
  function PtrArray(ptr, size) {
    this.ptr = ptr;
    this.size = size;
  }
  Object.defineProperty(PtrArray.prototype, 'addr', {
    get: function () {
      return this.ptr.addr;
    }
  });
  Object.defineProperty(PtrArray.prototype, 'low', {
    get: function () {
      return this.ptr.addr;
    }
  });
  Object.defineProperty(PtrArray.prototype, 'high', {
    get: function () {
      return this.low + this.size | 0;
    }
  });
  PtrArray.prototype.toString = function () {
    return 'PtrArray(' + this.ptr + ', ' + this.size + ')';
  };
  PtrArray.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PtrArray',
    interfaces: []
  };
  PtrArray.prototype.component1 = function () {
    return this.ptr;
  };
  PtrArray.prototype.component2 = function () {
    return this.size;
  };
  PtrArray.prototype.copy_1fpi1a$ = function (ptr, size) {
    return new PtrArray(ptr === void 0 ? this.ptr : ptr, size === void 0 ? this.size : size);
  };
  PtrArray.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.ptr) | 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    return result;
  };
  PtrArray.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.ptr, other.ptr) && Kotlin.equals(this.size, other.size)))));
  };
  function BasePtr() {
  }
  BasePtr.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'BasePtr',
    interfaces: []
  };
  function Ptr32(ptr) {
    this.ptr_d04ba7$_0 = ptr;
  }
  Object.defineProperty(Ptr32.prototype, 'ptr', {
    get: function () {
      return this.ptr_d04ba7$_0;
    }
  });
  Ptr32.prototype.get = function () {
    return this.get_za3lpa$(0);
  };
  Ptr32.prototype.set_za3lpa$ = function (value) {
    this.set_vux9f0$(0, value);
  };
  Ptr32.prototype.get_za3lpa$ = function (index) {
    return this.ptr.lw_za3lpa$(index * 4 | 0);
  };
  Ptr32.prototype.set_vux9f0$ = function (index, value) {
    this.ptr.sw_vux9f0$(index * 4 | 0, value);
  };
  Ptr32.prototype.plus_za3lpa$ = function (offset) {
    return new Ptr32(this.ptr.plus_za3lpa$(offset * 4 | 0));
  };
  Ptr32.prototype.toString = function () {
    return 'Ptr32(' + this.ptr + ')';
  };
  Ptr32.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Ptr32',
    interfaces: [BasePtr]
  };
  function Ptr64(ptr) {
    this.ptr_d1pn8g$_0 = ptr;
  }
  Object.defineProperty(Ptr64.prototype, 'ptr', {
    get: function () {
      return this.ptr_d1pn8g$_0;
    }
  });
  Ptr64.prototype.get = function () {
    return this.get_za3lpa$(0);
  };
  Ptr64.prototype.set_s8cxhz$ = function (value) {
    this.set_6svq3l$(0, value);
  };
  Ptr64.prototype.get_za3lpa$ = function (index) {
    return this.ptr.ldw_za3lpa$(index * 8 | 0);
  };
  Ptr64.prototype.set_6svq3l$ = function (index, value) {
    this.ptr.sdw_6svq3l$(index * 8 | 0, value);
  };
  Ptr64.prototype.plus_za3lpa$ = function (offset) {
    return new Ptr64(this.ptr.plus_za3lpa$(offset * 8 | 0));
  };
  Ptr64.prototype.toString = function () {
    return 'Ptr64(' + this.ptr + ')';
  };
  Ptr64.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Ptr64',
    interfaces: [BasePtr]
  };
  function PtrStruct(kind, ptr) {
    this.kind = kind;
    this.ptr_sstinr$_0 = ptr;
    this.kindSize = this.kind.size;
  }
  Object.defineProperty(PtrStruct.prototype, 'ptr', {
    get: function () {
      return this.ptr_sstinr$_0;
    }
  });
  PtrStruct.prototype.get = function () {
    return this.get_za3lpa$(0);
  };
  PtrStruct.prototype.set_11rb$ = function (value) {
    this.set_wxm5ur$(0, value);
  };
  PtrStruct.prototype.get_za3lpa$ = function (index) {
    return this.kind.read_39qel5$(openSync_1(this.ptr, Kotlin.imul(index, this.kindSize)));
  };
  PtrStruct.prototype.set_wxm5ur$ = function (index, value) {
    this.kind.write_paoklw$(openSync_1(this.ptr, Kotlin.imul(index, this.kindSize)), value);
  };
  PtrStruct.prototype.plus_za3lpa$ = function (offset) {
    return new PtrStruct(this.kind, this.ptr.plus_za3lpa$(Kotlin.imul(offset, this.kindSize)));
  };
  PtrStruct.prototype.toString = function () {
    return 'PtrStruct(' + this.kind + ', ' + this.ptr + ')';
  };
  PtrStruct.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PtrStruct',
    interfaces: [BasePtr]
  };
  function Ptr() {
  }
  Ptr.prototype.sdw_6svq3l$ = function (offset, value) {
    this.sw_vux9f0$(offset + 0 | 0, value.shiftRightUnsigned(0).toInt());
    this.sw_vux9f0$(offset + 4 | 0, value.shiftRightUnsigned(32).toInt());
  };
  Ptr.prototype.ldw_za3lpa$ = function (offset) {
    var low = get_unsigned(this.lw_za3lpa$(offset + 0 | 0));
    var high = get_unsigned(this.lw_za3lpa$(offset + 4 | 0));
    return high.shiftLeft(32).or(low);
  };
  Ptr.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Ptr',
    interfaces: [BasePtr]
  };
  function DummyPtr() {
    DummyPtr_instance = this;
    this.ptr_k3b0fy$_0 = this;
    this.addr_g6zqcz$_0 = 0;
  }
  Object.defineProperty(DummyPtr.prototype, 'ptr', {
    get: function () {
      return this.ptr_k3b0fy$_0;
    }
  });
  Object.defineProperty(DummyPtr.prototype, 'addr', {
    get: function () {
      return this.addr_g6zqcz$_0;
    }
  });
  DummyPtr.prototype.sb_vux9f0$ = function (offset, value) {
  };
  DummyPtr.prototype.sh_vux9f0$ = function (offset, value) {
  };
  DummyPtr.prototype.sw_vux9f0$ = function (offset, value) {
  };
  DummyPtr.prototype.lb_za3lpa$ = function (offset) {
    return 0;
  };
  DummyPtr.prototype.lh_za3lpa$ = function (offset) {
    return 0;
  };
  DummyPtr.prototype.lw_za3lpa$ = function (offset) {
    return 0;
  };
  DummyPtr.prototype.plus_za3lpa$ = function (offset) {
    return DummyPtr_getInstance();
  };
  DummyPtr.prototype.toString = function () {
    return 'DummyPtr(' + get_hex(this.addr) + ')';
  };
  DummyPtr.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'DummyPtr',
    interfaces: [Ptr]
  };
  var DummyPtr_instance = null;
  function DummyPtr_getInstance() {
    if (DummyPtr_instance === null) {
      new DummyPtr();
    }
    return DummyPtr_instance;
  }
  var nullPtr;
  function read($receiver, struct) {
    return read_0(openSync_1($receiver), struct);
  }
  function write($receiver, struct, value) {
    write_0(openSync_1($receiver), struct, value);
  }
  var capture = defineInlineFunction('kpspemu.com.soywiz.kpspemu.mem.capture_r3ciq9$', wrapFunction(function () {
    var openSync = _.com.soywiz.kpspemu.mem.openSync_jk65or$;
    var read = _.com.soywiz.kpspemu.util.read_316kh2$;
    var write = _.com.soywiz.kpspemu.util.write_qawobk$;
    return function ($receiver, struct, callback) {
      var ptr = $receiver;
      var obj = read(openSync(ptr), struct);
      try {
        return callback(obj);
      }
      finally {
        write(openSync(ptr), struct, obj);
      }
    };
  }));
  function MemPtr(mem, addr) {
    this.mem = mem;
    this.addr_xq0922$_0 = addr;
    this.ptr_uv81u9$_0 = this;
  }
  Object.defineProperty(MemPtr.prototype, 'addr', {
    get: function () {
      return this.addr_xq0922$_0;
    }
  });
  Object.defineProperty(MemPtr.prototype, 'ptr', {
    get: function () {
      return this.ptr_uv81u9$_0;
    }
  });
  MemPtr.prototype.sb_vux9f0$ = function (offset, value) {
    this.mem.sb_vux9f0$(this.addr + offset | 0, value);
  };
  MemPtr.prototype.sh_vux9f0$ = function (offset, value) {
    this.mem.sh_vux9f0$(this.addr + offset | 0, value);
  };
  MemPtr.prototype.sw_vux9f0$ = function (offset, value) {
    this.mem.sw_vux9f0$(this.addr + offset | 0, value);
  };
  MemPtr.prototype.lb_za3lpa$ = function (offset) {
    return this.mem.lb_za3lpa$(this.addr + offset | 0);
  };
  MemPtr.prototype.lh_za3lpa$ = function (offset) {
    return this.mem.lh_za3lpa$(this.addr + offset | 0);
  };
  MemPtr.prototype.lw_za3lpa$ = function (offset) {
    return this.mem.lw_za3lpa$(this.addr + offset | 0);
  };
  MemPtr.prototype.toString = function () {
    return 'MemPtr(' + get_hex(this.addr) + ')';
  };
  MemPtr.prototype.plus_za3lpa$ = function (offset) {
    return new MemPtr(this.mem, this.addr + offset | 0);
  };
  MemPtr.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemPtr',
    interfaces: [Ptr]
  };
  MemPtr.prototype.component1 = function () {
    return this.mem;
  };
  MemPtr.prototype.component2 = function () {
    return this.addr;
  };
  MemPtr.prototype.copy_ktor8l$ = function (mem, addr) {
    return new MemPtr(mem === void 0 ? this.mem : mem, addr === void 0 ? this.addr : addr);
  };
  MemPtr.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.mem) | 0;
    result = result * 31 + Kotlin.hashCode(this.addr) | 0;
    return result;
  };
  MemPtr.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.mem, other.mem) && Kotlin.equals(this.addr, other.addr)))));
  };
  function array($receiver, size) {
    return new PtrArray($receiver, size);
  }
  function ptr($receiver, addr) {
    return new MemPtr($receiver, addr);
  }
  function get_isNotNull($receiver) {
    return $receiver.ptr.addr !== 0;
  }
  function get_isNull($receiver) {
    return $receiver.ptr.addr === 0;
  }
  function writeBytes_0($receiver, bytes, offset, size) {
    if (offset === void 0)
      offset = 0;
    if (size === void 0)
      size = bytes.length - offset | 0;
    for (var n = 0; n < size; n++)
      $receiver.sb_vux9f0$(n, bytes[offset + n | 0]);
  }
  function readBytes_1($receiver, count, offset) {
    if (offset === void 0)
      offset = 0;
    var out = new Int8Array(count);
    for (var n = 0; n < count; n++)
      out[n] = toByte($receiver.lb_za3lpa$(offset + n | 0));
    return out;
  }
  function readStringz_2($receiver, charset) {
    if (charset === void 0)
      charset = lang.Charsets.UTF_8;
    var tmp$;
    var out = ByteArrayBuilderSmall_init();
    var n = 0;
    while (true) {
      var c = $receiver.lb_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$));
      if (c === 0)
        break;
      out.append_s8j3t7$(toByte(c));
      if (out.size >= 4096)
        invalidOp('String is too big!');
    }
    return out.toString_qa9gbo$(charset);
  }
  function openSync$ObjectLiteral_0(this$openSync) {
    this.this$openSync = this$openSync;
    SyncStreamBase.call(this);
    this.length_o2qtui$_0 = new Kotlin.Long(-1, 2147483647);
  }
  Object.defineProperty(openSync$ObjectLiteral_0.prototype, 'length', {
    get: function () {
      return this.length_o2qtui$_0;
    },
    set: function (length) {
      this.length_o2qtui$_0 = length;
    }
  });
  openSync$ObjectLiteral_0.prototype.close = function () {
  };
  openSync$ObjectLiteral_0.prototype.read_4m9kcn$ = function (position, buffer, offset, len) {
    var start = position.toInt();
    for (var n = 0; n < len; n++)
      buffer[offset + n | 0] = toByte(this.this$openSync.lb_za3lpa$(start + n | 0));
    return len;
  };
  openSync$ObjectLiteral_0.prototype.write_4m9kcn$ = function (position, buffer, offset, len) {
    var start = position.toInt();
    for (var n = 0; n < len; n++)
      this.this$openSync.sb_vux9f0$(start + n | 0, buffer[offset + n | 0]);
  };
  openSync$ObjectLiteral_0.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [SyncStreamBase]
  };
  function openSync_1($receiver, offset) {
    if (offset === void 0)
      offset = 0;
    return toSyncStream(new openSync$ObjectLiteral_0($receiver), Kotlin.Long.fromInt(offset));
  }
  function CurrentVfs$lambda() {
    return LocalVfs(KPspEmuNative_getInstance().getCurrentDirectory());
  }
  var CurrentVfs;
  function get_CurrentVfs() {
    new PropertyMetadata('CurrentVfs');
    return CurrentVfs.value;
  }
  function PromptConfigurator(browser, emulator) {
    this.browser_0 = browser;
    this.emulator_0 = emulator;
    this.actions_0 = LinkedHashMap_init();
    this.actions_0.put_xwzc9p$('help', PromptConfigurator_init$lambda(this));
    this.actions_0.put_xwzc9p$('dropbox', PromptConfigurator_init$lambda_0(this));
    this.actions_0.put_xwzc9p$('storage', PromptConfigurator_init$lambda_1(this));
    this.actions_0.put_xwzc9p$('memdump', PromptConfigurator_init$lambda_2(this));
  }
  PromptConfigurator.prototype.prompt = function (continuation_0, suspended) {
    var instance = new Coroutine$prompt(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$prompt($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 9;
    this.$this = $this;
  }
  Coroutine$prompt.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$prompt.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$prompt.prototype.constructor = Coroutine$prompt;
  Coroutine$prompt.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.exceptionState_0 = 4;
            this.state_0 = 1;
            this.result_0 = this.$this.browser_0.prompt_puj7f4$('(F7) Action to perform ' + this.$this.actions_0.keys, '', this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            var action = this.result_0;
            println('action -> ' + action);
            var $receiver = this.$this.actions_0;
            var tmp$;
            if ((Kotlin.isType(tmp$ = $receiver, Map) ? tmp$ : throwCCE()).containsKey_11rb$(action)) {
              this.state_0 = 2;
              this.result_0 = ensureNotNull(this.$this.actions_0.get_11rb$(action))(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              invalidOp('Unknown action ' + action + ' : Supported actions: ' + this.$this.actions_0.keys);
              this.state_0 = 3;
              continue;
            }

          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            this.exceptionState_0 = 9;
            this.state_0 = 8;
            continue;
          case 4:
            this.exceptionState_0 = 9;
            var e = this.exception_0;
            if (!Kotlin.isType(e, CancellationException)) {
              if (Kotlin.isType(e, Throwable)) {
                printStackTrace(e);
                this.state_0 = 5;
                this.result_0 = this.$this.browser_0.alert_61zpoe$('Error: ' + toString(e.message) + '\n' + '\n' + e, this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                break;
              }
               else {
                throw e;
              }
            }
             else {
              this.state_0 = 7;
              continue;
            }

          case 5:
            this.state_0 = 6;
            continue;
          case 6:
            this.state_0 = 7;
            continue;
          case 7:
            this.state_0 = 8;
            continue;
          case 8:
            return;
          case 9:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 9)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  PromptConfigurator.prototype.dropbox_0 = function (continuation_0, suspended) {
    var instance = new Coroutine$dropbox_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$dropbox_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$bearerConfig = void 0;
  }
  Coroutine$dropbox_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$dropbox_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$dropbox_0.prototype.constructor = Coroutine$dropbox_0;
  Coroutine$dropbox_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$bearerConfig = this.$this.emulator_0.configManager.dropboxBearer;
            this.local$tmp$ = this.$this.browser_0;
            this.state_0 = 2;
            this.result_0 = this.local$bearerConfig.get(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$tmp$.prompt_puj7f4$('Set Dropbox Bearer token', this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            var bearer = this.result_0;
            var tmp$;
            this.state_0 = 4;
            this.result_0 = this.local$bearerConfig.set_61zpoe$(trim_0(Kotlin.isCharSequence(tmp$ = bearer) ? tmp$ : throwCCE()).toString(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  PromptConfigurator.prototype.storage_0 = function (continuation_0, suspended) {
    var instance = new Coroutine$storage_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$storage_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$supportedStorages = void 0;
    this.local$storageConfig = void 0;
  }
  Coroutine$storage_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$storage_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$storage_0.prototype.constructor = Coroutine$storage_0;
  Coroutine$storage_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$supportedStorages = listOf(['local', 'dropbox']);
            this.local$storageConfig = this.$this.emulator_0.configManager.storage;
            this.local$tmp$ = this.$this.browser_0;
            this.state_0 = 2;
            this.result_0 = this.local$storageConfig.get(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$tmp$.prompt_puj7f4$('Select storage engine (' + this.local$supportedStorages + ')', this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            var storage = this.result_0;
            if (!this.local$supportedStorages.contains_11rb$(storage))
              invalidOp("Invalid storage type '" + storage + "' (must be )");
            this.state_0 = 4;
            this.result_0 = this.local$storageConfig.set_61zpoe$(storage, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  PromptConfigurator.prototype.memdump_0 = function (continuation_0, suspended) {
    var instance = new Coroutine$memdump_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$memdump_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$outFile = void 0;
  }
  Coroutine$memdump_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$memdump_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$memdump_0.prototype.constructor = Coroutine$memdump_0;
  Coroutine$memdump_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$outFile = vfs.applicationVfs.get_61zpoe$('memdump.bin');
            this.state_0 = 2;
            this.result_0 = this.local$outFile.writeBytes_gssovf$(this.$this.emulator_0.mem.readBytes_vux9f0$(Memory$Companion_getInstance().MAINMEM.start, Memory$Companion_getInstance().MAINMEM.size), [], this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var $this = KpspemuMainScene$Companion_getInstance().logger;
            var level = LogLevel.WARN;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'Writted memory to ' + this.local$outFile);
            }

            this.state_0 = 3;
            this.result_0 = this.$this.browser_0.alert_61zpoe$('Writted memory to ' + this.local$outFile, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function PromptConfigurator_init$lambda(this$PromptConfigurator_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$PromptConfigurator_init$lambda(this$PromptConfigurator_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$PromptConfigurator_init$lambda(this$PromptConfigurator_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$PromptConfigurator = this$PromptConfigurator_0;
  }
  Coroutine$PromptConfigurator_init$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$PromptConfigurator_init$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$PromptConfigurator_init$lambda.prototype.constructor = Coroutine$PromptConfigurator_init$lambda;
  Coroutine$PromptConfigurator_init$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$PromptConfigurator.browser_0.alert_61zpoe$('Type any of the following actions: ' + this.local$this$PromptConfigurator.actions_0.keys, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function PromptConfigurator_init$lambda_0(this$PromptConfigurator_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$PromptConfigurator_init$lambda_0(this$PromptConfigurator_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$PromptConfigurator_init$lambda_0(this$PromptConfigurator_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$PromptConfigurator = this$PromptConfigurator_0;
  }
  Coroutine$PromptConfigurator_init$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$PromptConfigurator_init$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$PromptConfigurator_init$lambda_0.prototype.constructor = Coroutine$PromptConfigurator_init$lambda_0;
  Coroutine$PromptConfigurator_init$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$PromptConfigurator.dropbox_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function PromptConfigurator_init$lambda_1(this$PromptConfigurator_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$PromptConfigurator_init$lambda_1(this$PromptConfigurator_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$PromptConfigurator_init$lambda_1(this$PromptConfigurator_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$PromptConfigurator = this$PromptConfigurator_0;
  }
  Coroutine$PromptConfigurator_init$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$PromptConfigurator_init$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$PromptConfigurator_init$lambda_1.prototype.constructor = Coroutine$PromptConfigurator_init$lambda_1;
  Coroutine$PromptConfigurator_init$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$PromptConfigurator.storage_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function PromptConfigurator_init$lambda_2(this$PromptConfigurator_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$PromptConfigurator_init$lambda_2(this$PromptConfigurator_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$PromptConfigurator_init$lambda_2(this$PromptConfigurator_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$PromptConfigurator = this$PromptConfigurator_0;
  }
  Coroutine$PromptConfigurator_init$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$PromptConfigurator_init$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$PromptConfigurator_init$lambda_2.prototype.constructor = Coroutine$PromptConfigurator_init$lambda_2;
  Coroutine$PromptConfigurator_init$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$PromptConfigurator.memdump_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  PromptConfigurator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PromptConfigurator',
    interfaces: []
  };
  function simpleButton$lambda(closure$colorOut_0, closure$bg_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$simpleButton$lambda(closure$colorOut_0, closure$bg_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$simpleButton$lambda(closure$colorOut_0, closure$bg_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$colorOut = closure$colorOut_0;
    this.local$closure$bg = closure$bg_0;
  }
  Coroutine$simpleButton$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$simpleButton$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$simpleButton$lambda.prototype.constructor = Coroutine$simpleButton$lambda;
  Coroutine$simpleButton$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$closure$bg.colorMul = this.local$closure$colorOut, Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function simpleButton$lambda_0(closure$colorOver_0, closure$bg_0) {
    return function (it, continuation_0, suspended) {
      var instance = new Coroutine$simpleButton$lambda_0(closure$colorOver_0, closure$bg_0, it, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$simpleButton$lambda_0(closure$colorOver_0, closure$bg_0, it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$colorOver = closure$colorOver_0;
    this.local$closure$bg = closure$bg_0;
  }
  Coroutine$simpleButton$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$simpleButton$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$simpleButton$lambda_0.prototype.constructor = Coroutine$simpleButton$lambda_0;
  Coroutine$simpleButton$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$closure$bg.colorMul = this.local$closure$colorOver, Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function simpleButton($receiver, text_0, width, height, font) {
    if (width === void 0)
      width = 80;
    if (height === void 0)
      height = 18;
    if (font === void 0)
      font = $receiver.defaultFont;
    var button = $receiver.container();
    var colorOver = color.RGBA.invoke_tjonv8$(160, 160, 160, 255);
    var colorOut = color.RGBA.invoke_tjonv8$(144, 144, 144, 255);
    var bg = new SolidRect_init($receiver, numberToDouble(width), numberToDouble(height), colorOut);
    var $receiver_0 = text($receiver, text_0, height - 2.0, void 0, font);
    $receiver_0.x = 4.0;
    $receiver_0.y = 2.0;
    $receiver_0.autoSize = true;
    var txt = $receiver_0;
    button.plusAssign_l5rad2$(bg);
    button.plusAssign_l5rad2$(txt);
    var tmp$, tmp$_0;
    (tmp$_0 = (tmp$ = button != null ? get_mouse(button) : null) != null ? tmp$.onOut : null) != null ? addSuspend(tmp$_0, button.views.coroutineContext, simpleButton$lambda(colorOut, bg)) : null;
    var tmp$_1, tmp$_0_0;
    (tmp$_0_0 = (tmp$_1 = button != null ? get_mouse(button) : null) != null ? tmp$_1.onOver : null) != null ? addSuspend(tmp$_0_0, button.views.coroutineContext, simpleButton$lambda_0(colorOver, bg)) : null;
    return button;
  }
  function Resetable() {
  }
  Resetable.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Resetable',
    interfaces: []
  };
  function PoolItem() {
  }
  PoolItem.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'PoolItem',
    interfaces: [Resetable]
  };
  function AsyncPool2(maxItems, initId, create) {
    if (maxItems === void 0)
      maxItems = kotlin_js_internal_IntCompanionObject.MAX_VALUE;
    if (initId === void 0)
      initId = 0;
    this.maxItems = maxItems;
    this.initId = initId;
    this.create = create;
    this.createdItems = new AtomicInteger();
    this.freedItem_0 = new ProduceConsumer();
    this.allocatedItems = LinkedHashMap_init();
  }
  AsyncPool2.prototype.get_za3lpa$ = function (id) {
    return this.allocatedItems.get_11rb$(id);
  };
  AsyncPool2.prototype.tempAlloc_8bj7vc$ = function (callback_0, continuation_0, suspended) {
    var instance = new Coroutine$tempAlloc_8bj7vc$(this, callback_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$tempAlloc_8bj7vc$($this, callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 7;
    this.$this = $this;
    this.local$item = void 0;
    this.local$callback = callback_0;
  }
  Coroutine$tempAlloc_8bj7vc$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$tempAlloc_8bj7vc$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$tempAlloc_8bj7vc$.prototype.constructor = Coroutine$tempAlloc_8bj7vc$;
  Coroutine$tempAlloc_8bj7vc$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 1;
            this.result_0 = this.$this.alloc(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            this.local$item = this.result_0;
            this.exceptionState_0 = 5;
            this.state_0 = 2;
            this.result_0 = this.local$callback(this.local$item, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 2:
            this.exceptionState_0 = 7;
            this.finallyPath_0 = [3];
            this.state_0 = 6;
            this.$returnValue = this.result_0;
            continue;
          case 3:
            return this.$returnValue;
          case 4:
            return;
          case 5:
            this.finallyPath_0 = [7];
            this.state_0 = 6;
            continue;
          case 6:
            this.$this.free_ngi76a$(this.local$item);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 7:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 7)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncPool2.prototype.alloc = function (continuation_0, suspended) {
    var instance = new Coroutine$alloc(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$alloc($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$_0 = void 0;
  }
  Coroutine$alloc.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$alloc.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$alloc.prototype.constructor = Coroutine$alloc;
  Coroutine$alloc.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            if (this.$this.createdItems.get() >= this.$this.maxItems) {
              this.state_0 = 3;
              this.result_0 = this.$this.freedItem_0.consume_4l50dc$(void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.$this.createdItems.addAndGet_za3lpa$(1);
              this.state_0 = 2;
              this.result_0 = this.$this.create((tmp$ = this.$this.initId, this.$this.initId = tmp$ + 1 | 0, tmp$), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$_0 = this.result_0;
            this.state_0 = 4;
            continue;
          case 3:
            this.local$tmp$_0 = ensureNotNull(this.result_0);
            this.state_0 = 4;
            continue;
          case 4:
            var res = this.local$tmp$_0;
            res.reset();
            var $receiver = this.$this.allocatedItems;
            var key = res.id;
            $receiver.put_xwzc9p$(key, res);
            return res;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncPool2.prototype.free_ngi76a$ = function (item) {
    this.freedItem_0.produce_11rb$(item);
    this.allocatedItems.remove_11rb$(item.id);
  };
  AsyncPool2.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncPool2',
    interfaces: []
  };
  function AutoArrayList(gen) {
    this.gen = gen;
    this.items = ArrayList_init();
  }
  AutoArrayList.prototype.get_za3lpa$ = function (index) {
    while (this.items.size <= index) {
      var $receiver = this.items;
      var element = this.gen(this.items.size);
      $receiver.add_11rb$(element);
    }
    return this.items.get_za3lpa$(index);
  };
  AutoArrayList.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AutoArrayList',
    interfaces: []
  };
  function p_void(ba, pos) {
    this.ba = ba;
    this.pos = pos;
  }
  p_void.prototype.equals = function (other) {
    if (!Kotlin.isType(other, p_void))
      return false;
    return this.ba === other.ba && this.pos === other.pos;
  };
  p_void.prototype.hashCode = function () {
    return hashCode(this.ba) + this.pos | 0;
  };
  p_void.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'p_void',
    interfaces: []
  };
  function p_base(ba, pos, esize) {
    p_void.call(this, ba, pos);
    this.esize = esize;
  }
  p_base.prototype.plus_za3lpa$ = function (offset) {
    return this.create_ir89t6$(this.ba, this.pos + offset | 0);
  };
  p_base.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'p_base',
    interfaces: [p_void]
  };
  function p_u8(ba, pos) {
    p_base.call(this, ba, pos, 1);
  }
  p_u8.prototype.create_ir89t6$ = function (ba, pos) {
    return new p_u8(ba, pos);
  };
  p_u8.prototype.get_za3lpa$ = function (offset) {
    return this.ba[this.pos + offset | 0] & 255;
  };
  p_u8.prototype.set_vux9f0$ = function (offset, value) {
    this.ba[this.pos + offset | 0] = toByte(value);
  };
  p_u8.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'p_u8',
    interfaces: [p_base]
  };
  function p_u32(ba, pos) {
    p_base.call(this, ba, pos, 4);
  }
  p_u32.prototype.create_ir89t6$ = function (ba, pos) {
    return new p_u32(ba, pos);
  };
  p_u32.prototype.get_za3lpa$ = function (offset) {
    return readS32_le_1(this.ba, this.pos + (offset * 4 | 0) | 0);
  };
  p_u32.prototype.set_vux9f0$ = function (offset, value) {
    write32_le_0(this.ba, this.pos + (offset * 4 | 0) | 0, value);
  };
  p_u32.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'p_u32',
    interfaces: [p_base]
  };
  function memcpy(dst, src, num) {
    arraycopy_0(src.ba, src.pos, dst.ba, dst.pos, num);
  }
  function memset(dst, value, num) {
    var $receiver = dst.ba;
    var value_0 = toByte(value);
    var start = dst.pos;
    var end = dst.pos + num | 0;
    $receiver.fill(value_0, start, end);
  }
  function memcmp(ptr1, ptr2, num) {
    var p1 = p_u8_2(ptr1);
    var p2 = p_u8_2(ptr2);
    for (var n = 0; n < num; n++) {
      var c1 = p1.get_za3lpa$(n);
      var c2 = p2.get_za3lpa$(n);
      if (c1 < c2)
        return -1;
      if (c1 > c2)
        return 1;
    }
    return 0;
  }
  function p_u8_0($receiver) {
    return new p_u8($receiver.data, 0);
  }
  function p_u8_1($receiver) {
    return new p_u8($receiver, 0);
  }
  function p_u32_0($receiver) {
    return new p_u32($receiver.data, 0);
  }
  function p_u32_1($receiver) {
    return new p_u32($receiver, 0);
  }
  function p_u8_2($receiver) {
    return new p_u8($receiver.ba, $receiver.pos);
  }
  function p_u32_2($receiver) {
    return new p_u32($receiver.ba, $receiver.pos);
  }
  function openSync_2($receiver, len) {
    return sliceWithSize_0(openSync($receiver.ba), $receiver.pos, len);
  }
  function unsigned($receiver) {
    return new UByteArray($receiver);
  }
  function DyAccess(obj) {
    this.obj = obj;
  }
  DyAccess.prototype.get_za3lpa$ = function (key) {
    var tmp$;
    if (Kotlin.isType(this.obj, List))
      tmp$ = this.obj.get_za3lpa$(key);
    else
      tmp$ = null;
    return get_dy(tmp$);
  };
  DyAccess.prototype.get_61zpoe$ = function (key) {
    var tmp$;
    if (Kotlin.isType(this.obj, Map)) {
      var $receiver = this.obj;
      var tmp$_0;
      tmp$ = (Kotlin.isType(tmp$_0 = $receiver, Map) ? tmp$_0 : throwCCE()).get_11rb$(key);
    }
     else
      tmp$ = null;
    return get_dy(tmp$);
  };
  DyAccess.prototype.list = function () {
    var tmp$;
    if (Kotlin.isType(this.obj, List)) {
      var $receiver = this.obj;
      var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
      var tmp$_0;
      tmp$_0 = $receiver.iterator();
      while (tmp$_0.hasNext()) {
        var item = tmp$_0.next();
        destination.add_11rb$(get_dy(item));
      }
      tmp$ = destination;
    }
     else {
      tmp$ = emptyList();
    }
    return tmp$;
  };
  Object.defineProperty(DyAccess.prototype, 'keys', {
    get: function () {
      if (Kotlin.isType(this.obj, Map)) {
        var $receiver = this.obj.keys;
        var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
        var tmp$;
        tmp$ = $receiver.iterator();
        while (tmp$.hasNext()) {
          var item = tmp$.next();
          destination.add_11rb$(get_dy(item));
        }
        return destination;
      }
       else {
        return emptyList();
      }
    }
  });
  DyAccess.prototype.toIntOrNull = function () {
    if (Kotlin.isNumber(this.obj))
      return numberToInt(this.obj);
    else
      return toIntOrNull(toString(this.obj));
  };
  DyAccess.prototype.toLongOrNull = function () {
    if (Kotlin.isNumber(this.obj))
      return numberToLong(this.obj);
    else
      return toLongOrNull(toString(this.obj));
  };
  DyAccess.prototype.toDoubleOrNull = function () {
    if (Kotlin.isNumber(this.obj))
      return numberToDouble(this.obj);
    else
      return toDoubleOrNull(toString(this.obj));
  };
  DyAccess.prototype.iterator = function () {
    return this.list().iterator();
  };
  DyAccess.prototype.toLong_s8cxhz$ = function (default_0) {
    if (default_0 === void 0)
      default_0 = Kotlin.Long.ZERO;
    var tmp$;
    return (tmp$ = this.toLongOrNull()) != null ? tmp$ : default_0;
  };
  DyAccess.prototype.toInt_za3lpa$ = function (default_0) {
    if (default_0 === void 0)
      default_0 = 0;
    var tmp$;
    return (tmp$ = this.toIntOrNull()) != null ? tmp$ : default_0;
  };
  DyAccess.prototype.toDouble_14dthe$ = function (default_0) {
    if (default_0 === void 0)
      default_0 = 0.0;
    var tmp$;
    return (tmp$ = this.toDoubleOrNull()) != null ? tmp$ : default_0;
  };
  DyAccess.prototype.toString = function () {
    return toString(this.obj);
  };
  DyAccess.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DyAccess',
    interfaces: [Iterable]
  };
  function get_dy($receiver) {
    return toDyAccess($receiver);
  }
  function toDyAccess($receiver) {
    return new DyAccess($receiver);
  }
  function EventFlag(initial) {
    this.initial = initial;
    this.value_xmytng$_0 = this.initial;
    this.onUpdated = new Signal();
  }
  Object.defineProperty(EventFlag.prototype, 'value', {
    get: function () {
      return this.value_xmytng$_0;
    },
    set: function (value) {
      if (!equals(this.value_xmytng$_0, value)) {
        this.value_xmytng$_0 = value;
        this.onUpdated.invoke_11rb$(Unit);
      }
    }
  });
  EventFlag.prototype.waitValue_11rb$ = function (expected_0, continuation_0, suspended) {
    var instance = new Coroutine$waitValue_11rb$(this, expected_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$waitValue_11rb$($this, expected_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$expected = expected_0;
  }
  Coroutine$waitValue_11rb$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitValue_11rb$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitValue_11rb$.prototype.constructor = Coroutine$waitValue_11rb$;
  Coroutine$waitValue_11rb$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (equals(this.$this.value, this.local$expected)) {
              this.state_0 = 4;
              continue;
            }

            this.state_0 = 3;
            this.result_0 = waitOne(this.$this.onUpdated, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  EventFlag.prototype.getValue_n5byny$ = function (obj, property) {
    return this.value;
  };
  EventFlag.prototype.setValue_sq4zib$ = function (obj, property, value) {
    this.value = value;
  };
  EventFlag.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EventFlag',
    interfaces: []
  };
  function waitAllBits($receiver_0, expected_0, continuation_0, suspended) {
    var instance = new Coroutine$waitAllBits($receiver_0, expected_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$waitAllBits($receiver_0, expected_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$expected = expected_0;
  }
  Coroutine$waitAllBits.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitAllBits.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitAllBits.prototype.constructor = Coroutine$waitAllBits;
  Coroutine$waitAllBits.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if ((this.local$$receiver.value & this.local$expected) === this.local$expected) {
              this.state_0 = 4;
              continue;
            }

            this.state_0 = 3;
            this.result_0 = waitOne(this.local$$receiver.onUpdated, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function waitAnyBits($receiver_0, expected_0, continuation_0, suspended) {
    var instance = new Coroutine$waitAnyBits($receiver_0, expected_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$waitAnyBits($receiver_0, expected_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$expected = expected_0;
  }
  Coroutine$waitAnyBits.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitAnyBits.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitAnyBits.prototype.constructor = Coroutine$waitAnyBits;
  Coroutine$waitAnyBits.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if ((this.local$$receiver.value & this.local$expected) !== 0) {
              this.state_0 = 4;
              continue;
            }

            this.state_0 = 3;
            this.result_0 = waitOne(this.local$$receiver.onUpdated, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function EventStatus(generator) {
    this.generator = generator;
    this.onUpdated_0 = new Signal();
  }
  Object.defineProperty(EventStatus.prototype, 'v', {
    get: function () {
      return this.generator();
    }
  });
  EventStatus.prototype.getValue_n5byny$ = function (obj, property) {
    return this.generator();
  };
  EventStatus.prototype.updated = function () {
    this.onUpdated_0.invoke_11rb$(Unit);
  };
  EventStatus.prototype.waitValue_za3lpa$ = function (expected_0, continuation_0, suspended) {
    var instance = new Coroutine$waitValue_za3lpa$(this, expected_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$waitValue_za3lpa$($this, expected_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$expected = expected_0;
  }
  Coroutine$waitValue_za3lpa$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitValue_za3lpa$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitValue_za3lpa$.prototype.constructor = Coroutine$waitValue_za3lpa$;
  Coroutine$waitValue_za3lpa$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.$this.v === this.local$expected) {
              this.state_0 = 4;
              continue;
            }

            this.state_0 = 3;
            this.result_0 = waitOne(this.$this.onUpdated_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  EventStatus.prototype.waitAllBits_za3lpa$ = function (expected_0, continuation_0, suspended) {
    var instance = new Coroutine$waitAllBits_za3lpa$(this, expected_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$waitAllBits_za3lpa$($this, expected_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$expected = expected_0;
  }
  Coroutine$waitAllBits_za3lpa$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitAllBits_za3lpa$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitAllBits_za3lpa$.prototype.constructor = Coroutine$waitAllBits_za3lpa$;
  Coroutine$waitAllBits_za3lpa$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if ((this.$this.v & this.local$expected) === this.local$expected) {
              this.state_0 = 4;
              continue;
            }

            this.state_0 = 3;
            this.result_0 = waitOne(this.$this.onUpdated_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  EventStatus.prototype.waitAnyBits_za3lpa$ = function (expected_0, continuation_0, suspended) {
    var instance = new Coroutine$waitAnyBits_za3lpa$(this, expected_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$waitAnyBits_za3lpa$($this, expected_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$expected = expected_0;
  }
  Coroutine$waitAnyBits_za3lpa$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitAnyBits_za3lpa$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitAnyBits_za3lpa$.prototype.constructor = Coroutine$waitAnyBits_za3lpa$;
  Coroutine$waitAnyBits_za3lpa$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if ((this.$this.v & this.local$expected) !== 0) {
              this.state_0 = 4;
              continue;
            }

            this.state_0 = 3;
            this.result_0 = waitOne(this.$this.onUpdated_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  EventStatus.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EventStatus',
    interfaces: []
  };
  function FloatArray2(cols, rows, data) {
    if (data === void 0)
      data = new Float32Array(Kotlin.imul(rows, cols));
    this.cols = cols;
    this.rows = rows;
    this.data = data;
  }
  FloatArray2.prototype.index_vux9f0$ = function (col, row) {
    return Kotlin.imul(row, this.cols) + col | 0;
  };
  FloatArray2.prototype.get_vux9f0$ = function (col, row) {
    return this.data[this.index_vux9f0$(col, row)];
  };
  FloatArray2.prototype.set_n0b4r3$ = function (col, row, value) {
    this.data[this.index_vux9f0$(col, row)] = value;
  };
  FloatArray2.prototype.toString = function () {
    var $receiver = until(0, this.rows);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      var tmp$_0 = destination.add_11rb$;
      var $receiver_0 = until(0, this.cols);
      var destination_0 = ArrayList_init(collectionSizeOrDefault($receiver_0, 10));
      var tmp$_1;
      tmp$_1 = $receiver_0.iterator();
      while (tmp$_1.hasNext()) {
        var item_0 = tmp$_1.next();
        destination_0.add_11rb$(this.get_vux9f0$(item_0, item));
      }
      tmp$_0.call(destination, '[' + joinToString(destination_0, ', ') + ']');
    }
    return joinToString(destination, '\n');
  };
  FloatArray2.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FloatArray2',
    interfaces: []
  };
  function IntArray2(cols, rows, data) {
    if (data === void 0)
      data = new Int32Array(Kotlin.imul(rows, cols));
    this.cols = cols;
    this.rows = rows;
    this.data = data;
  }
  IntArray2.prototype.index_vux9f0$ = function (col, row) {
    return Kotlin.imul(row, this.cols) + col | 0;
  };
  IntArray2.prototype.get_vux9f0$ = function (col, row) {
    return this.data[this.index_vux9f0$(col, row)];
  };
  IntArray2.prototype.set_qt1dr2$ = function (col, row, value) {
    this.data[this.index_vux9f0$(col, row)] = value;
  };
  IntArray2.prototype.toString = function () {
    var $receiver = until(0, this.rows);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      var tmp$_0 = destination.add_11rb$;
      var $receiver_0 = until(0, this.cols);
      var destination_0 = ArrayList_init(collectionSizeOrDefault($receiver_0, 10));
      var tmp$_1;
      tmp$_1 = $receiver_0.iterator();
      while (tmp$_1.hasNext()) {
        var item_0 = tmp$_1.next();
        destination_0.add_11rb$(this.get_vux9f0$(item_0, item));
      }
      tmp$_0.call(destination, '[' + joinToString(destination_0, ', ') + ']');
    }
    return joinToString(destination, '\n');
  };
  IntArray2.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IntArray2',
    interfaces: []
  };
  var sumByFloat = defineInlineFunction('kpspemu.com.soywiz.kpspemu.util.sumByFloat_v16v6p$', function ($receiver, selector) {
    var tmp$;
    var out = 0.0;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var i = tmp$.next();
      out += selector(i);
    }
    return out;
  });
  function get_pspSign($receiver) {
    return $receiver === 0.0 || $receiver === -0.0 ? 0.0 : toRawBits($receiver) >>> 31 !== 0 ? -1.0 : +1.0;
  }
  function get_pspAbs($receiver) {
    var bits = toRawBits($receiver) & ~(new Kotlin.Long(-2147483648, 0)).toInt();
    return Kotlin.floatFromBits(bits);
  }
  function get_pspSat0($receiver) {
    return $receiver === -0.0 ? 0.0 : clampf($receiver, 0.0, 1.0);
  }
  function get_pspSat1($receiver) {
    return clampf($receiver, -1.0, 1.0);
  }
  function pspAdd($receiver, that) {
    return isNaN_0($receiver) || isNaN_0(that) ? kotlin_js_internal_FloatCompanionObject.NaN : $receiver + that;
  }
  function pspSub($receiver, that) {
    return isNaN_0($receiver) || isNaN_0(that) ? kotlin_js_internal_FloatCompanionObject.NaN : $receiver - that;
  }
  function FloatIntBuffer(size) {
    this.size = size;
    this.mem = new ArrayBuffer_init((this.size * 4 | 0) + 15 & ~15);
    var $receiver = this.mem;
    this.f = new Float32Array_init($receiver, 0 * 4 | 0, ($receiver.byteLength / 4 | 0) - 0 | 0);
    var $receiver_0 = this.mem;
    this.i = new Int32Array_init($receiver_0, 0 * 4 | 0, ($receiver_0.byteLength / 4 | 0) - 0 | 0);
  }
  FloatIntBuffer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FloatIntBuffer',
    interfaces: []
  };
  function toFloat($receiver) {
    return $receiver.f;
  }
  function toHalfFloat($receiver) {
    return HalfFloat_init($receiver);
  }
  function HalfFloat(v) {
    HalfFloat$Companion_getInstance();
    this.v = v;
  }
  Object.defineProperty(HalfFloat.prototype, 'f', {
    get: function () {
      return reinterpretAsFloat(HalfFloat$Companion_getInstance().halfFloatBitsToFloatBits_za3lpa$(unboxChar(this.v) | 0));
    }
  });
  HalfFloat.prototype.toString = function () {
    return this.f.toString();
  };
  HalfFloat.prototype.toBits = function () {
    return this.v;
  };
  function HalfFloat$Companion() {
    HalfFloat$Companion_instance = this;
  }
  HalfFloat$Companion.prototype.fromBits_s8itvh$ = function (v) {
    return new HalfFloat(v);
  };
  HalfFloat$Companion.prototype.halfFloatBitsToFloat_za3lpa$ = function (imm16) {
    var bits = this.halfFloatBitsToFloatBits_za3lpa$(imm16);
    return Kotlin.floatFromBits(bits);
  };
  HalfFloat$Companion.prototype.floatToHalfFloatBits_mx4ult$ = function (i) {
    return this.floatBitsToHalfFloatBits_za3lpa$(toRawBits(i));
  };
  HalfFloat$Companion.prototype.halfFloatBitsToFloatBits_za3lpa$ = function (imm16) {
    var tmp$;
    var s = imm16 >> 15 & 1;
    var e = imm16 >> 10 & 31;
    var f = imm16 >> 0 & 1023;
    if (e === 0) {
      if (f === 0) {
        return s << 31;
      }
      while ((f & 1024) === 0) {
        f = f << 1;
        e = e - 1 | 0;
      }
      e = e + 1 | 0;
      f = f & ~1024;
    }
     else if (e === 31) {
      if (f === 0) {
        tmp$ = s << 31 | 2139095040;
      }
       else
        tmp$ = s << 31 | 2139095040 | f;
      return tmp$;
    }
    e = e + (127 - 15) | 0;
    f = f << 13;
    return s << 31 | e << 23 | f;
  };
  HalfFloat$Companion.prototype.floatBitsToHalfFloatBits_za3lpa$ = function (i) {
    var tmp$, tmp$_0;
    var s = i >> 16 & 32768;
    var e = (i >> 23 & 255) - (127 - 15) | 0;
    var f = i >> 0 & 8388607;
    if (e <= 0) {
      if (e < -10) {
        if (s !== 0) {
          tmp$ = 32768;
        }
         else
          tmp$ = 0;
        return tmp$;
      }
      f = (f | 8388608) >> 1 - e;
      return s | f >> 13;
    }
     else if (e === (255 - (127 - 15) | 0)) {
      if (f === 0) {
        return s | 31744;
      }
      f = f >> 13;
      f = 1023;
      return s | 31744 | f | (f === 0 ? 1 : 0);
    }
    if (e > 30) {
      tmp$_0 = s | 31744;
    }
     else
      tmp$_0 = s | e << 10 | f >> 13;
    return tmp$_0;
  };
  HalfFloat$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var HalfFloat$Companion_instance = null;
  function HalfFloat$Companion_getInstance() {
    if (HalfFloat$Companion_instance === null) {
      new HalfFloat$Companion();
    }
    return HalfFloat$Companion_instance;
  }
  HalfFloat.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HalfFloat',
    interfaces: []
  };
  function HalfFloat_init(v, $this) {
    $this = $this || Object.create(HalfFloat.prototype);
    HalfFloat.call($this, toChar(HalfFloat$Companion_getInstance().floatBitsToHalfFloatBits_za3lpa$(reinterpretAsInt(v))));
    return $this;
  }
  HalfFloat.prototype.component1 = function () {
    return this.v;
  };
  HalfFloat.prototype.copy_s8itvh$ = function (v) {
    return new HalfFloat(v === void 0 ? this.v : v);
  };
  HalfFloat.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.v) | 0;
    return result;
  };
  HalfFloat.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.v, other.v))));
  };
  function SmallCompanion2(values) {
    this.values = values;
    this.defaultValue_i0l7ca$_0 = first_1(this.values);
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var $receiver = this.values;
    var destination = ArrayList_init($receiver.length);
    var tmp$_3;
    for (tmp$_3 = 0; tmp$_3 !== $receiver.length; ++tmp$_3) {
      var item = $receiver[tmp$_3];
      destination.add_11rb$(item.id);
    }
    this.MIN_ID_mnzf9e$_0 = (tmp$ = min(destination)) != null ? tmp$ : 0;
    var $receiver_0 = this.values;
    var destination_0 = ArrayList_init($receiver_0.length);
    var tmp$_4;
    for (tmp$_4 = 0; tmp$_4 !== $receiver_0.length; ++tmp$_4) {
      var item_0 = $receiver_0[tmp$_4];
      destination_0.add_11rb$(item_0.id);
    }
    this.MAX_ID_qaughc$_0 = (tmp$_0 = max(destination_0)) != null ? tmp$_0 : 0;
    this.SIZE_ID_r7bxvv$_0 = this.MAX_ID_qaughc$_0 - this.MIN_ID_mnzf9e$_0 | 0;
    var array = Array_0(this.SIZE_ID_r7bxvv$_0 + 1 | 0);
    var tmp$_5;
    tmp$_5 = array.length - 1 | 0;
    for (var i = 0; i <= tmp$_5; i++) {
      array[i] = this.defaultValue_i0l7ca$_0;
    }
    this.valuesById_frxxgy$_0 = array;
    tmp$_1 = this.values;
    for (tmp$_2 = 0; tmp$_2 !== tmp$_1.length; ++tmp$_2) {
      var v = tmp$_1[tmp$_2];
      this.valuesById_frxxgy$_0[v.id - this.MIN_ID_mnzf9e$_0 | 0] = v;
    }
  }
  var get_lastIndex = Kotlin.kotlin.collections.get_lastIndex_m7z4lg$;
  SmallCompanion2.prototype.invoke_za3lpa$ = function (id) {
    var tmp$;
    var $receiver = this.valuesById_frxxgy$_0;
    var index = id - this.MIN_ID_mnzf9e$_0 | 0;
    return Kotlin.isType(tmp$ = index >= 0 && index <= get_lastIndex($receiver) ? $receiver[index] : this.defaultValue_i0l7ca$_0, IdEnum) ? tmp$ : throwCCE();
  };
  SmallCompanion2.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SmallCompanion2',
    interfaces: []
  };
  function copyOfIntArray($receiver) {
    return copyOf_1($receiver.data, $receiver.size);
  }
  function copyOfShortArray($receiver) {
    var tmp$;
    var out = new Int16Array($receiver.size);
    tmp$ = $receiver.size;
    for (var n = 0; n < tmp$; n++)
      out[n] = toShort($receiver.data[n]);
    return out;
  }
  function setBits($receiver, bits, set) {
    if (set === void 0)
      set = true;
    if (set) {
      return $receiver | bits;
    }
     else {
      return $receiver & ~bits;
    }
  }
  function asNull($receiver, nullValue) {
    if (nullValue === void 0)
      nullValue = 0;
    return $receiver === nullValue ? null : $receiver;
  }
  function currentTimeMicroInt($receiver) {
    var millisDouble = $receiver.currentTimeMillisDouble();
    var millisInt = numberToInt(millisDouble % 2147483647);
    var res = millisecondsToMicroseconds_1($receiver, millisInt);
    return res;
  }
  function currentTimeMicroDouble($receiver) {
    return millisecondsToMicroseconds_0($receiver, $receiver.currentTimeMillisDouble());
  }
  function currentTimeMicro($receiver) {
    return millisecondsToMicroseconds($receiver, $receiver.currentTimeMillis());
  }
  function millisecondsToMicroseconds($receiver, millis) {
    return millis.multiply(Kotlin.Long.fromInt(1000));
  }
  function millisecondsToMicroseconds_0($receiver, millis) {
    return millis * 1000.0;
  }
  function millisecondsToMicroseconds_1($receiver, millis) {
    return millis * 1000 | 0;
  }
  function cosv1(value) {
    var x = value * math_0.PI * 0.5;
    return Math_0.cos(x);
  }
  function sinv1(value) {
    var tmp$;
    var angle = value;
    var x = angle * 0.25;
    angle -= Math_0.floor(x) * 4.0;
    if (angle === 0.0)
      tmp$ = 0.0;
    else if (angle === 2.0)
      tmp$ = -0.0;
    else if (angle === 1.0)
      tmp$ = 1.0;
    else if (angle === 3.0)
      tmp$ = -1.0;
    else {
      var x_0 = triangle.Constants.PI_2 * angle;
      tmp$ = Math_0.sin(x_0);
    }
    return tmp$;
  }
  function nsinv1(value) {
    var x = value * math_0.PI * 0.5;
    return -Math_0.sin(x);
  }
  function asinv1(value) {
    return Math_0.asin(value) / (math_0.PI * 0.5);
  }
  function clampf($receiver, min, max) {
    if ($receiver < min)
      return min;
    else if ($receiver > max)
      return max;
    else
      return $receiver;
  }
  function isNanOrInfinitef($receiver) {
    return isNaN_0($receiver) || isInfinite($receiver);
  }
  function scalab(f, scaleFactor) {
    return f * Math_0.pow(2.0, scaleFactor);
  }
  var nullIf = defineInlineFunction('kpspemu.com.soywiz.kpspemu.util.nullIf_ujn5f2$', function ($receiver, callback) {
    return callback($receiver) ? null : $receiver;
  });
  function PspEmuKeys() {
    PspEmuKeys_instance = this;
    this.RETURN = 10;
    this.SPACE = 32;
    this.PGUP = 33;
    this.PGDOWN = 34;
    this.LEFT = 37;
    this.UP = 38;
    this.RIGHT = 39;
    this.DOWN = 40;
    this.A = 65;
    this.B = 66;
    this.C = 67;
    this.D = 68;
    this.E = 69;
    this.F = 70;
    this.G = 71;
    this.H = 72;
    this.I = 73;
    this.J = 74;
    this.K = 75;
    this.L = 76;
    this.M = 77;
    this.N = 78;
    this.O = 79;
    this.P = 80;
    this.Q = 81;
    this.R = 82;
    this.S = 83;
    this.T = 84;
    this.U = 85;
    this.V = 86;
    this.W = 87;
    this.X = 88;
    this.Y = 89;
    this.Z = 90;
    this.F1 = 112;
    this.F2 = 113;
    this.F3 = 114;
    this.F4 = 115;
    this.F5 = 116;
    this.F6 = 117;
    this.F7 = 118;
    this.F8 = 119;
    this.F9 = 120;
    this.F10 = 121;
    this.F11 = 122;
    this.F12 = 123;
  }
  PspEmuKeys.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'PspEmuKeys',
    interfaces: []
  };
  var PspEmuKeys_instance = null;
  function PspEmuKeys_getInstance() {
    if (PspEmuKeys_instance === null) {
      new PspEmuKeys();
    }
    return PspEmuKeys_instance;
  }
  function ResourceItem() {
  }
  ResourceItem.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'ResourceItem',
    interfaces: []
  };
  function ResourceList(name, notFound, create) {
    if (notFound === void 0)
      notFound = ResourceList_init$lambda(name);
    this.name = name;
    this.notFound_0 = notFound;
    this.create_0 = create;
    this.items_0 = IntMap_init();
    this.lastId_0 = 1;
    this.freeList_0 = Pool_init(void 0, ResourceList$freeList$lambda(this));
  }
  ResourceList.prototype.alloc = function () {
    var item = this.freeList_0.alloc();
    this.items_0.set_wxm5ur$(item.id, item);
    return item;
  };
  ResourceList.prototype.free_51l2nw$ = function (item) {
    this.freeList_0.free_11rb$(item);
    this.items_0.remove_za3lpa$(item.id);
  };
  ResourceList.prototype.freeById_za3lpa$ = function (id) {
    if (this.contains_za3lpa$(id)) {
      this.free_51l2nw$(this.get_za3lpa$(id));
      return true;
    }
     else {
      return false;
    }
  };
  ResourceList.prototype.tryGetById_za3lpa$ = function (id) {
    return this.items_0.get_za3lpa$(id);
  };
  ResourceList.prototype.get_za3lpa$ = function (id) {
    var tmp$;
    return (tmp$ = this.tryGetById_za3lpa$(id)) != null ? tmp$ : this.notFound_0(id);
  };
  ResourceList.prototype.contains_za3lpa$ = function (id) {
    return this.tryGetById_za3lpa$(id) != null;
  };
  function ResourceList$reset$lambda(this$ResourceList) {
    return function (it) {
      var tmp$;
      return this$ResourceList.create_0((tmp$ = this$ResourceList.lastId_0, this$ResourceList.lastId_0 = tmp$ + 1 | 0, tmp$));
    };
  }
  ResourceList.prototype.reset = function () {
    this.lastId_0 = 1;
    this.items_0 = IntMap_init();
    this.freeList_0 = Pool_init(void 0, ResourceList$reset$lambda(this));
  };
  function ResourceList_init$lambda(closure$name) {
    return function (it) {
      return invalidOp("Can't find " + closure$name + ' with id ' + get_hex(it));
    };
  }
  function ResourceList$freeList$lambda(this$ResourceList) {
    return function (it) {
      var tmp$;
      return this$ResourceList.create_0((tmp$ = this$ResourceList.lastId_0, this$ResourceList.lastId_0 = tmp$ + 1 | 0, tmp$));
    };
  }
  ResourceList.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ResourceList',
    interfaces: []
  };
  function Signal2(onRegister) {
    if (onRegister === void 0)
      onRegister = Signal2_init$lambda;
    this.onRegister = onRegister;
    this.handlers_0 = LinkedList_init();
  }
  function Signal2$Node($outer, once, item) {
    this.$outer = $outer;
    this.once = once;
    this.item = item;
  }
  Signal2$Node.prototype.close = function () {
    this.$outer.handlers_0.remove_11rb$(this);
  };
  Signal2$Node.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Node',
    interfaces: [Closeable]
  };
  Object.defineProperty(Signal2.prototype, 'listenerCount', {
    get: function () {
      return this.handlers_0.size;
    }
  });
  Signal2.prototype.once_qlkmfe$ = function (handler) {
    return this._add_0(true, handler);
  };
  Signal2.prototype.add_qlkmfe$ = function (handler) {
    return this._add_0(false, handler);
  };
  Signal2.prototype.clear = function () {
    this.handlers_0.clear();
  };
  Signal2.prototype._add_0 = function (once, handler) {
    this.onRegister();
    var node = new Signal2$Node(this, once, handler);
    this.handlers_0.add_11rb$(node);
    return node;
  };
  Signal2.prototype.invoke_11rb$ = function (value) {
    var it = this.handlers_0.iterator();
    while (it.hasNext()) {
      var node = it.next();
      if (node.once)
        it.remove();
      node.item(value);
    }
  };
  Signal2.prototype.invoke_qlkmfe$ = function (handler) {
    return this.add_qlkmfe$(handler);
  };
  function Signal2_init$lambda() {
    return Unit;
  }
  Signal2.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Signal2',
    interfaces: []
  };
  function mapSignal$lambda(closure$out, closure$transform) {
    return function (it) {
      closure$out.invoke_11rb$(closure$transform(it));
      return Unit;
    };
  }
  function mapSignal($receiver, transform) {
    var out = new Signal2();
    $receiver.add_qlkmfe$(mapSignal$lambda(out, transform));
    return out;
  }
  function invoke($receiver) {
    $receiver.invoke_11rb$(Unit);
  }
  function waitOne$lambda$lambda(closure$close, closure$c) {
    return function (it) {
      var tmp$;
      (tmp$ = closure$close.v) != null ? (tmp$.close(), Unit) : null;
      closure$c.resume_11rb$(it);
      return Unit;
    };
  }
  function waitOne$lambda$lambda_0(closure$close, closure$c) {
    return function () {
      closure$close.v.close();
      closure$c.resumeWithException_tcv7n7$(new TimeoutException());
      return Unit;
    };
  }
  function waitOne$lambda$lambda_1(closure$close) {
    return function (it) {
      closure$close.v.close();
      return Unit;
    };
  }
  function waitOne$lambda(this$waitOne, closure$timeout) {
    return function (c) {
      var close = {v: null};
      close.v = this$waitOne.once_qlkmfe$(waitOne$lambda$lambda(close, c));
      if (closure$timeout != null) {
        get_eventLoop(c.context).setTimeout_n53o35$(closure$timeout, waitOne$lambda$lambda_0(close, c));
      }
      c.onCancel_4m4org$(waitOne$lambda$lambda_1(close));
      return Unit;
    };
  }
  var CancellableContinuation_init = $module$korio_js.com.soywiz.korio.async.CancellableContinuation;
  function suspendCancellableCoroutine$lambda(closure$block) {
    return function (c) {
      closure$block(new CancellableContinuation_init(c));
      return Unit;
    };
  }
  var toEventLoop = $module$korio_js.com.soywiz.korio.async.toEventLoop_5cx0c9$;
  function suspendCoroutineEL$lambda(closure$block) {
    return function (c) {
      closure$block(toEventLoop(c));
      return Unit;
    };
  }
  function _korioSuspendCoroutine$lambda(closure$block) {
    return function (c) {
      closure$block(c);
      return Unit;
    };
  }
  var SafeContinuation_init = Kotlin.kotlin.coroutines.experimental.SafeContinuation_init_n4f53e$;
  function suspendCoroutine$lambda(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(c);
      closure$block(safe);
      return safe.getResult();
    };
  }
  function waitOne_0($receiver, timeout, continuation) {
    if (timeout === void 0)
      timeout = null;
    Kotlin.suspendCall(suspendCoroutine$lambda(_korioSuspendCoroutine$lambda(suspendCoroutineEL$lambda(suspendCancellableCoroutine$lambda(waitOne$lambda($receiver, timeout)))))(Kotlin.coroutineReceiver().facade));
    Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
  }
  function waitOnePromise$lambda(closure$close, closure$deferred) {
    return function (it) {
      var tmp$;
      (tmp$ = closure$close.v) != null ? (tmp$.close(), Unit) : null;
      closure$deferred.resolve_11rb$(it);
      return Unit;
    };
  }
  function waitOnePromise$lambda_0(closure$close) {
    return function (it) {
      closure$close.v.close();
      return Unit;
    };
  }
  function waitOnePromise($receiver) {
    var deferred = new Promise$Deferred();
    var close = {v: null};
    close.v = $receiver.once_qlkmfe$(waitOnePromise$lambda(close, deferred));
    deferred.onCancel.invoke_qlkmfe$(waitOnePromise$lambda_0(close));
    return deferred.promise;
  }
  function waitOneTimeout$lambda$lambda(closure$close, closure$c) {
    return function () {
      var tmp$;
      (tmp$ = closure$close.v) != null ? (tmp$.close(), Unit) : null;
      closure$c.cancel_tcv7n7$(new TimeoutException());
      return Unit;
    };
  }
  function waitOneTimeout$lambda$lambda_0(closure$close, closure$timer, closure$c) {
    return function (it) {
      var tmp$;
      (tmp$ = closure$close.v) != null ? (tmp$.close(), Unit) : null;
      closure$timer.close();
      closure$c.resume_11rb$(it);
      return Unit;
    };
  }
  function waitOneTimeout$lambda$lambda_1(closure$close, closure$timer) {
    return function (it) {
      closure$close.v.close();
      closure$timer.close();
      return Unit;
    };
  }
  function waitOneTimeout$lambda(closure$timeout, this$waitOneTimeout) {
    return function (c) {
      var close = {v: null};
      var timer = get_eventLoop_0(c).setTimeout_n53o35$(closure$timeout.ms, waitOneTimeout$lambda$lambda(close, c));
      close.v = this$waitOneTimeout.once_qlkmfe$(waitOneTimeout$lambda$lambda_0(close, timer, c));
      c.onCancel_4m4org$(waitOneTimeout$lambda$lambda_1(close, timer));
      return Unit;
    };
  }
  function suspendCancellableCoroutine$lambda_0(closure$block) {
    return function (c) {
      closure$block(new CancellableContinuation_init(c));
      return Unit;
    };
  }
  function suspendCoroutineEL$lambda_0(closure$block) {
    return function (c) {
      closure$block(toEventLoop(c));
      return Unit;
    };
  }
  function _korioSuspendCoroutine$lambda_0(closure$block) {
    return function (c) {
      closure$block(c);
      return Unit;
    };
  }
  function suspendCoroutine$lambda_0(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(c);
      closure$block(safe);
      return safe.getResult();
    };
  }
  function waitOneTimeout($receiver, timeout, continuation) {
    Kotlin.suspendCall(suspendCoroutine$lambda_0(_korioSuspendCoroutine$lambda_0(suspendCoroutineEL$lambda_0(suspendCancellableCoroutine$lambda_0(waitOneTimeout$lambda(timeout, $receiver)))))(Kotlin.coroutineReceiver().facade));
    Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
  }
  function waitOneOptTimeout($receiver, timeout, continuation) {
    if (timeout === void 0)
      timeout = null;
    if (timeout != null)
      return waitOneTimeout($receiver, timeout, continuation);
    else
      return waitOne($receiver, continuation);
  }
  function get_shex($receiver) {
    return format_0('%08X', [$receiver]);
  }
  function Struct(create, items) {
    this.create = create;
    this.items = items;
    var $receiver = this.items;
    var destination = ArrayList_init($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(item.type.size);
    }
    this.size_27gi7n$_0 = sum_0(destination);
  }
  Object.defineProperty(Struct.prototype, 'size', {
    get: function () {
      return this.size_27gi7n$_0;
    }
  });
  function Struct$Item(type, property) {
    this.type = type;
    this.property = property;
  }
  Struct$Item.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Item',
    interfaces: []
  };
  Struct$Item.prototype.component1 = function () {
    return this.type;
  };
  Struct$Item.prototype.component2 = function () {
    return this.property;
  };
  Struct$Item.prototype.copy_hawb8o$ = function (type, property) {
    return new Struct$Item(type === void 0 ? this.type : type, property === void 0 ? this.property : property);
  };
  Struct$Item.prototype.toString = function () {
    return 'Item(type=' + Kotlin.toString(this.type) + (', property=' + Kotlin.toString(this.property)) + ')';
  };
  Struct$Item.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    result = result * 31 + Kotlin.hashCode(this.property) | 0;
    return result;
  };
  Struct$Item.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.type, other.type) && Kotlin.equals(this.property, other.property)))));
  };
  Struct.prototype.write_paoklw$ = function (s, value) {
    var tmp$, tmp$_0, tmp$_1;
    tmp$ = this.items;
    for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
      var item = tmp$[tmp$_0];
      var i = Kotlin.isType(tmp$_1 = item, Struct$Item) ? tmp$_1 : throwCCE();
      i.type.write_paoklw$(s, i.property.get(value));
    }
  };
  Struct.prototype.read_39qel5$ = function (s) {
    return this.read_paoklw$(s, this.create());
  };
  Struct.prototype.read_paoklw$ = function (s, value) {
    var tmp$, tmp$_0, tmp$_1;
    tmp$ = this.items;
    for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
      var item = tmp$[tmp$_0];
      var i = Kotlin.isType(tmp$_1 = item, Struct$Item) ? tmp$_1 : throwCCE();
      i.property.set(value, i.type.read_39qel5$(s));
    }
    return value;
  };
  Struct.prototype.toByteArray_11rb$ = function (value) {
    var $receiver = MemorySyncStream();
    this.write_paoklw$($receiver, value);
    return toByteArray_0($receiver);
  };
  Struct.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Struct',
    interfaces: [StructType]
  };
  function AS($receiver, type) {
    return new Struct$Item(type, $receiver);
  }
  function StructType() {
  }
  StructType.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'StructType',
    interfaces: []
  };
  function write_0($receiver, s, value) {
    s.write_paoklw$($receiver, value);
  }
  function read_0($receiver, s) {
    return s.read_39qel5$($receiver);
  }
  function UINT8() {
    UINT8_instance = this;
    this.size_pkn95i$_0 = 1;
  }
  Object.defineProperty(UINT8.prototype, 'size', {
    get: function () {
      return this.size_pkn95i$_0;
    }
  });
  UINT8.prototype.write_paoklw$ = function (s, value) {
    write8(s, value);
  };
  UINT8.prototype.read_39qel5$ = function (s) {
    return readU8_0(s);
  };
  UINT8.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'UINT8',
    interfaces: [StructType]
  };
  var UINT8_instance = null;
  function UINT8_getInstance() {
    if (UINT8_instance === null) {
      new UINT8();
    }
    return UINT8_instance;
  }
  function UINT16() {
    UINT16_instance = this;
    this.size_ye732b$_0 = 2;
  }
  Object.defineProperty(UINT16.prototype, 'size', {
    get: function () {
      return this.size_ye732b$_0;
    }
  });
  UINT16.prototype.write_paoklw$ = function (s, value) {
    write16_le(s, value);
  };
  UINT16.prototype.read_39qel5$ = function (s) {
    return readU16_le(s);
  };
  UINT16.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'UINT16',
    interfaces: [StructType]
  };
  var UINT16_instance = null;
  function UINT16_getInstance() {
    if (UINT16_instance === null) {
      new UINT16();
    }
    return UINT16_instance;
  }
  function INT32() {
    INT32_instance = this;
    this.size_9cjoa$_0 = 4;
  }
  Object.defineProperty(INT32.prototype, 'size', {
    get: function () {
      return this.size_9cjoa$_0;
    }
  });
  INT32.prototype.write_paoklw$ = function (s, value) {
    write32_le(s, value);
  };
  INT32.prototype.read_39qel5$ = function (s) {
    return readS32_le_0(s);
  };
  INT32.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'INT32',
    interfaces: [StructType]
  };
  var INT32_instance = null;
  function INT32_getInstance() {
    if (INT32_instance === null) {
      new INT32();
    }
    return INT32_instance;
  }
  function INT32_be() {
    INT32_be_instance = this;
    this.size_gygn3m$_0 = 4;
  }
  Object.defineProperty(INT32_be.prototype, 'size', {
    get: function () {
      return this.size_gygn3m$_0;
    }
  });
  INT32_be.prototype.write_paoklw$ = function (s, value) {
    write32_be_0(s, value);
  };
  INT32_be.prototype.read_39qel5$ = function (s) {
    return readS32_be(s);
  };
  INT32_be.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'INT32_be',
    interfaces: [StructType]
  };
  var INT32_be_instance = null;
  function INT32_be_getInstance() {
    if (INT32_be_instance === null) {
      new INT32_be();
    }
    return INT32_be_instance;
  }
  function map$ObjectLiteral(this$map, closure$invMap, closure$map) {
    this.this$map = this$map;
    this.closure$invMap = closure$invMap;
    this.closure$map = closure$map;
    this.size_kcjclj$_0 = this$map.size;
  }
  Object.defineProperty(map$ObjectLiteral.prototype, 'size', {
    get: function () {
      return this.size_kcjclj$_0;
    }
  });
  map$ObjectLiteral.prototype.write_paoklw$ = function (s, value) {
    this.this$map.write_paoklw$(s, this.closure$invMap(value));
  };
  map$ObjectLiteral.prototype.read_39qel5$ = function (s) {
    return this.closure$map(this.this$map.read_39qel5$(s));
  };
  map$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [StructType]
  };
  function map($receiver, map, invMap) {
    return new map$ObjectLiteral($receiver, invMap, map);
  }
  function asEnum$lambda(closure$e) {
    return function (it) {
      return closure$e.invoke_za3lpa$(it);
    };
  }
  function asEnum$lambda_0(it) {
    return it.id;
  }
  function asEnum($receiver, e) {
    return map($receiver, asEnum$lambda(e), asEnum$lambda_0);
  }
  function INT64() {
    INT64_instance = this;
    this.size_qhwnzv$_0 = 8;
  }
  Object.defineProperty(INT64.prototype, 'size', {
    get: function () {
      return this.size_qhwnzv$_0;
    }
  });
  INT64.prototype.write_paoklw$ = function (s, value) {
    write64_le(s, value);
  };
  INT64.prototype.read_39qel5$ = function (s) {
    return readS64_le_0(s);
  };
  INT64.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'INT64',
    interfaces: [StructType]
  };
  var INT64_instance = null;
  function INT64_getInstance() {
    if (INT64_instance === null) {
      new INT64();
    }
    return INT64_instance;
  }
  function FLOAT32() {
    FLOAT32_instance = this;
    this.size_1lz9t9$_0 = 4;
  }
  Object.defineProperty(FLOAT32.prototype, 'size', {
    get: function () {
      return this.size_1lz9t9$_0;
    }
  });
  FLOAT32.prototype.write_paoklw$ = function (s, value) {
    writeF32_le(s, value);
  };
  FLOAT32.prototype.read_39qel5$ = function (s) {
    return readF32_le(s);
  };
  FLOAT32.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'FLOAT32',
    interfaces: [StructType]
  };
  var FLOAT32_instance = null;
  function FLOAT32_getInstance() {
    if (FLOAT32_instance === null) {
      new FLOAT32();
    }
    return FLOAT32_instance;
  }
  function STRINGZ(charset, len) {
    if (len === void 0)
      len = null;
    this.charset = charset;
    this.len = len;
    var tmp$;
    this.size_rdija7$_0 = (tmp$ = this.len) != null ? tmp$ : 0;
  }
  Object.defineProperty(STRINGZ.prototype, 'size', {
    get: function () {
      return this.size_rdija7$_0;
    }
  });
  STRINGZ.prototype.write_paoklw$ = function (s, value) {
    if (this.len == null)
      writeStringz(s, value, this.charset);
    else
      writeStringz_0(s, value, this.len, this.charset);
  };
  STRINGZ.prototype.read_39qel5$ = function (s) {
    if (this.len == null)
      return readStringz_0(s, this.charset);
    else
      return readStringz_1(s, this.len, this.charset);
  };
  STRINGZ.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'STRINGZ',
    interfaces: [StructType]
  };
  function STRINGZ_init(size, $this) {
    if (size === void 0)
      size = null;
    $this = $this || Object.create(STRINGZ.prototype);
    STRINGZ.call($this, lang.UTF8, size);
    return $this;
  }
  function ARRAY(etype, len) {
    this.etype = etype;
    this.len = len;
    this.size_ic2exb$_0 = Kotlin.imul(this.len, this.etype.size);
  }
  Object.defineProperty(ARRAY.prototype, 'size', {
    get: function () {
      return this.size_ic2exb$_0;
    }
  });
  ARRAY.prototype.write_paoklw$ = function (s, value) {
    var tmp$;
    tmp$ = value.iterator();
    while (tmp$.hasNext()) {
      var v = tmp$.next();
      write_0(s, this.etype, v);
    }
  };
  ARRAY.prototype.read_39qel5$ = function (s) {
    var tmp$;
    var out = ArrayList_init();
    tmp$ = this.len;
    for (var n = 0; n < tmp$; n++) {
      var element = read_0(s, this.etype);
      out.add_11rb$(element);
    }
    return out;
  };
  ARRAY.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ARRAY',
    interfaces: [StructType]
  };
  function INTLIKEARRAY(etype, len) {
    this.etype = etype;
    this.len = len;
    this.size_qc13e7$_0 = Kotlin.imul(this.len, this.etype.size);
  }
  Object.defineProperty(INTLIKEARRAY.prototype, 'size', {
    get: function () {
      return this.size_qc13e7$_0;
    }
  });
  INTLIKEARRAY.prototype.write_paoklw$ = function (s, value) {
    var tmp$;
    for (tmp$ = 0; tmp$ !== value.length; ++tmp$) {
      var v = value[tmp$];
      write_0(s, this.etype, v);
    }
  };
  INTLIKEARRAY.prototype.read_39qel5$ = function (s) {
    var tmp$;
    var out = new Int32Array(this.len);
    tmp$ = this.len;
    for (var n = 0; n < tmp$; n++)
      out[n] = read_0(s, this.etype);
    return out;
  };
  INTLIKEARRAY.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'INTLIKEARRAY',
    interfaces: [StructType]
  };
  function BYTEARRAY(len) {
    this.len = len;
    this.size_4diell$_0 = this.len;
  }
  Object.defineProperty(BYTEARRAY.prototype, 'size', {
    get: function () {
      return this.size_4diell$_0;
    }
  });
  BYTEARRAY.prototype.write_paoklw$ = function (s, value) {
    writeBytes(s, value);
  };
  BYTEARRAY.prototype.read_39qel5$ = function (s) {
    return readBytes(s, this.len);
  };
  BYTEARRAY.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BYTEARRAY',
    interfaces: [StructType]
  };
  function SHORTARRAY(len) {
    this.len = len;
    this.size_bbzfmt$_0 = 2 * this.len | 0;
  }
  Object.defineProperty(SHORTARRAY.prototype, 'size', {
    get: function () {
      return this.size_bbzfmt$_0;
    }
  });
  SHORTARRAY.prototype.write_paoklw$ = function (s, value) {
    writeShortArray_le(s, value);
  };
  SHORTARRAY.prototype.read_39qel5$ = function (s) {
    return readShortArray_le(s, this.len);
  };
  SHORTARRAY.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SHORTARRAY',
    interfaces: [StructType]
  };
  function CHARARRAY(len) {
    this.len = len;
    this.size_79ndcr$_0 = 2 * this.len | 0;
  }
  Object.defineProperty(CHARARRAY.prototype, 'size', {
    get: function () {
      return this.size_79ndcr$_0;
    }
  });
  CHARARRAY.prototype.write_paoklw$ = function (s, value) {
    writeCharArray_le(s, value);
  };
  CHARARRAY.prototype.read_39qel5$ = function (s) {
    return readCharArray_le(s, this.len);
  };
  CHARARRAY.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CHARARRAY',
    interfaces: [StructType]
  };
  function INTARRAY(len) {
    this.len = len;
    this.size_y9irnc$_0 = 4 * this.len | 0;
  }
  Object.defineProperty(INTARRAY.prototype, 'size', {
    get: function () {
      return this.size_y9irnc$_0;
    }
  });
  INTARRAY.prototype.write_paoklw$ = function (s, value) {
    writeIntArray_le(s, value);
  };
  INTARRAY.prototype.read_39qel5$ = function (s) {
    return readIntArray_le_0(s, this.len);
  };
  INTARRAY.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'INTARRAY',
    interfaces: [StructType]
  };
  function BaseEnum() {
  }
  BaseEnum.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'BaseEnum',
    interfaces: []
  };
  function INT32_ENUM(values) {
    this.values = values;
    this.size_cpxyo$_0 = 4;
    this.defaultValue_h4udep$_0 = first_1(this.values);
    var tmp$, tmp$_0, tmp$_1;
    var $receiver = this.values;
    var destination = ArrayList_init($receiver.length);
    var tmp$_2;
    for (tmp$_2 = 0; tmp$_2 !== $receiver.length; ++tmp$_2) {
      var item = $receiver[tmp$_2];
      destination.add_11rb$(item.id);
    }
    this.MAX_ID_ojsd7p$_0 = (tmp$ = max(destination)) != null ? tmp$ : 0;
    var array = Array_0(this.MAX_ID_ojsd7p$_0 + 1 | 0);
    var tmp$_3;
    tmp$_3 = array.length - 1 | 0;
    for (var i = 0; i <= tmp$_3; i++) {
      array[i] = this.defaultValue_h4udep$_0;
    }
    this.valuesById_9j30ot$_0 = array;
    tmp$_0 = this.values;
    for (tmp$_1 = 0; tmp$_1 !== tmp$_0.length; ++tmp$_1) {
      var v = tmp$_0[tmp$_1];
      this.valuesById_9j30ot$_0[v.id] = v;
    }
  }
  Object.defineProperty(INT32_ENUM.prototype, 'size', {
    get: function () {
      return this.size_cpxyo$_0;
    }
  });
  INT32_ENUM.prototype.write_paoklw$ = function (s, value) {
    write32_le(s, value.id);
  };
  INT32_ENUM.prototype.read_39qel5$ = function (s) {
    return this.invoke_za3lpa$(readS32_le_0(s));
  };
  INT32_ENUM.prototype.invoke_za3lpa$ = function (id) {
    var tmp$;
    var $receiver = this.valuesById_9j30ot$_0;
    return Kotlin.isType(tmp$ = id >= 0 && id <= get_lastIndex($receiver) ? $receiver[id] : this.defaultValue_h4udep$_0, IdEnum) ? tmp$ : throwCCE();
  };
  INT32_ENUM.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'INT32_ENUM',
    interfaces: [BaseEnum, StructType]
  };
  function UINT8_ENUM(values) {
    this.values = values;
    this.size_wdhrwg$_0 = 1;
    this.defaultValue_z6840f$_0 = first_1(this.values);
    var tmp$, tmp$_0, tmp$_1;
    var $receiver = this.values;
    var destination = ArrayList_init($receiver.length);
    var tmp$_2;
    for (tmp$_2 = 0; tmp$_2 !== $receiver.length; ++tmp$_2) {
      var item = $receiver[tmp$_2];
      destination.add_11rb$(item.id);
    }
    this.MAX_ID_8alxud$_0 = (tmp$ = max(destination)) != null ? tmp$ : 0;
    var array = Array_0(this.MAX_ID_8alxud$_0 + 1 | 0);
    var tmp$_3;
    tmp$_3 = array.length - 1 | 0;
    for (var i = 0; i <= tmp$_3; i++) {
      array[i] = this.defaultValue_z6840f$_0;
    }
    this.valuesById_89hl6b$_0 = array;
    tmp$_0 = this.values;
    for (tmp$_1 = 0; tmp$_1 !== tmp$_0.length; ++tmp$_1) {
      var v = tmp$_0[tmp$_1];
      this.valuesById_89hl6b$_0[v.id] = v;
    }
  }
  Object.defineProperty(UINT8_ENUM.prototype, 'size', {
    get: function () {
      return this.size_wdhrwg$_0;
    }
  });
  UINT8_ENUM.prototype.write_paoklw$ = function (s, value) {
    write8(s, value.id);
  };
  UINT8_ENUM.prototype.read_39qel5$ = function (s) {
    return this.invoke_za3lpa$(readU8_0(s));
  };
  UINT8_ENUM.prototype.invoke_za3lpa$ = function (id) {
    var tmp$;
    var $receiver = this.valuesById_89hl6b$_0;
    return Kotlin.isType(tmp$ = id >= 0 && id <= get_lastIndex($receiver) ? $receiver[id] : this.defaultValue_z6840f$_0, IdEnum) ? tmp$ : throwCCE();
  };
  UINT8_ENUM.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UINT8_ENUM',
    interfaces: [BaseEnum, StructType]
  };
  function TimeoutException() {
    Exception_init(this);
    this.name = 'TimeoutException';
  }
  TimeoutException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TimeoutException',
    interfaces: [Exception]
  };
  function mkdirsSafe($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$mkdirsSafe($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$mkdirsSafe($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 7;
    this.local$ignoreErrors$result = void 0;
    this.local$closure$continuation = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$mkdirsSafe.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$mkdirsSafe.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$mkdirsSafe.prototype.constructor = Coroutine$mkdirsSafe;
  Coroutine$mkdirsSafe.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 1;
            continue;
          case 1:
            this.exceptionState_0 = 3;
            this.local$closure$continuation = this;
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.mkdirs_uzmvfn$([], this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 2:
            this.local$ignoreErrors$result = this.local$closure$continuation.result_0;
            this.exceptionState_0 = 7;
            this.state_0 = 5;
            continue;
          case 3:
            this.exceptionState_0 = 7;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              if (false)
                printStackTrace(e);
              this.local$ignoreErrors$result = null;
              this.exceptionState_0 = 3;
              this.state_0 = 6;
              continue;
            }
             else {
              throw e;
            }

          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            if (!false) {
              this.state_0 = 6;
              continue;
            }

            this.state_0 = 1;
            continue;
          case 6:
            return this.local$ignoreErrors$result;
          case 7:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 7)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Dropbox(bearer, http) {
    Dropbox$Companion_getInstance();
    if (http === void 0)
      http = createHttpClient();
    this.bearer = bearer;
    this.http = http;
    this.BASE_CONTENT = 'https://content.dropboxapi.com';
    this.BASE = 'https://api.dropboxapi.com';
  }
  function Dropbox$Companion() {
    Dropbox$Companion_instance = this;
    this.logger = Logger.Companion.invoke_61zpoe$('Dropbox');
  }
  Dropbox$Companion.prototype.login = function (continuation) {
  };
  Dropbox$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Dropbox$Companion_instance = null;
  function Dropbox$Companion_getInstance() {
    if (Dropbox$Companion_instance === null) {
      new Dropbox$Companion();
    }
    return Dropbox$Companion_instance;
  }
  Dropbox.prototype.rawRequest_kbh8q$ = function (path, content, headers, method, base, continuation) {
    if (content === void 0)
      content = null;
    if (headers === void 0)
      headers = Http$Http$Headers_init([]);
    if (method === void 0)
      method = Http$Method.Companion.POST;
    if (base === void 0)
      base = this.BASE;
    var fullUrl = base + '/' + path;
    var allHeaders = Http$Http$Headers_init([to('Authorization', 'Bearer ' + this.bearer)]).withReplaceHeaders_3efbss$(headers.items);
    return this.http.request_v6tn8p$(method, fullUrl, allHeaders, content, void 0, continuation);
  };
  Dropbox.prototype.jsonRawRequest_ydxc9r$ = function (path_0, data_0, headers_0, method_0, base_0, continuation_0, suspended) {
    var instance = new Coroutine$jsonRawRequest_ydxc9r$(this, path_0, data_0, headers_0, method_0, base_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$jsonRawRequest_ydxc9r$($this, path_0, data_0, headers_0, method_0, base_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$tmp$_0 = void 0;
    this.local$req = void 0;
    this.local$path = path_0;
    this.local$data = data_0;
    this.local$headers = headers_0;
    this.local$method = method_0;
    this.local$base = base_0;
  }
  Coroutine$jsonRawRequest_ydxc9r$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$jsonRawRequest_ydxc9r$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$jsonRawRequest_ydxc9r$.prototype.constructor = Coroutine$jsonRawRequest_ydxc9r$;
  Coroutine$jsonRawRequest_ydxc9r$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$headers === void 0)
              this.local$headers = Http$Http$Headers_init([]);
            if (this.local$method === void 0)
              this.local$method = Http$Method.Companion.POST;
            if (this.local$base === void 0)
              this.local$base = this.$this.BASE;
            this.state_0 = 2;
            this.result_0 = this.$this.rawRequest_kbh8q$(this.local$path, openAsync_0(toJsonUntyped(this.local$data)), Http$Http$Headers_init([to('Content-Type', 'application/json')]).withReplaceHeaders_3efbss$(this.local$headers.items), this.local$method, this.local$base, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$req = this.result_0;
            if (!this.local$req.success) {
              this.local$tmp$ = this.local$req.status;
              this.local$tmp$_0 = this.local$req.statusText;
              this.state_0 = 3;
              this.result_0 = this.local$req.readAllString_qa9gbo$(void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 3:
            throw new Http$HttpException(this.local$tmp$, this.local$tmp$_0, this.result_0, this.local$req.headers);
          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$req.readAllString_qa9gbo$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 5:
            var res = this.result_0;
            var $this = Dropbox$Companion_getInstance().logger;
            var level = LogLevel.TRACE;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'jsonRawRequest.res:' + res);
            }

            return get_dy(json.Json.decode_61zpoe$(res));
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Dropbox$Entry(name, id, tag, size, contentHash) {
    this.name = name;
    this.id = id;
    this.tag = tag;
    this.size = size;
    this.contentHash = contentHash;
  }
  Object.defineProperty(Dropbox$Entry.prototype, 'isDirectory', {
    get: function () {
      return equals(this.tag, 'folder');
    }
  });
  Object.defineProperty(Dropbox$Entry.prototype, 'isFile', {
    get: function () {
      return !this.isDirectory;
    }
  });
  Dropbox$Entry.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Entry',
    interfaces: []
  };
  Dropbox$Entry.prototype.component1 = function () {
    return this.name;
  };
  Dropbox$Entry.prototype.component2 = function () {
    return this.id;
  };
  Dropbox$Entry.prototype.component3 = function () {
    return this.tag;
  };
  Dropbox$Entry.prototype.component4 = function () {
    return this.size;
  };
  Dropbox$Entry.prototype.component5 = function () {
    return this.contentHash;
  };
  Dropbox$Entry.prototype.copy_otjk0f$ = function (name, id, tag, size, contentHash) {
    return new Dropbox$Entry(name === void 0 ? this.name : name, id === void 0 ? this.id : id, tag === void 0 ? this.tag : tag, size === void 0 ? this.size : size, contentHash === void 0 ? this.contentHash : contentHash);
  };
  Dropbox$Entry.prototype.toString = function () {
    return 'Entry(name=' + Kotlin.toString(this.name) + (', id=' + Kotlin.toString(this.id)) + (', tag=' + Kotlin.toString(this.tag)) + (', size=' + Kotlin.toString(this.size)) + (', contentHash=' + Kotlin.toString(this.contentHash)) + ')';
  };
  Dropbox$Entry.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    result = result * 31 + Kotlin.hashCode(this.tag) | 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.contentHash) | 0;
    return result;
  };
  Dropbox$Entry.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.id, other.id) && Kotlin.equals(this.tag, other.tag) && Kotlin.equals(this.size, other.size) && Kotlin.equals(this.contentHash, other.contentHash)))));
  };
  Dropbox.prototype.asMetadata_16cfod$ = function ($receiver) {
    return new Dropbox$Entry($receiver.get_61zpoe$('name').toString(), $receiver.get_61zpoe$('id').toString(), $receiver.get_61zpoe$('.tag').toString(), $receiver.get_61zpoe$('size').toLong_s8cxhz$(), $receiver.get_61zpoe$('content_hash').toString());
  };
  Dropbox.prototype.listFolder_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$listFolder_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$listFolder_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$listFolder_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$listFolder_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$listFolder_61zpoe$.prototype.constructor = Coroutine$listFolder_61zpoe$;
  Coroutine$listFolder_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var rpath = equals(this.local$path, '/') ? '' : this.local$path;
            this.state_0 = 2;
            this.result_0 = this.$this.jsonRawRequest_ydxc9r$('2/files/list_folder', hashMapOf([to('path', rpath), to('recursive', false)]), void 0, void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var result = this.result_0;
            var $this = Dropbox$Companion_getInstance().logger;
            var level = LogLevel.TRACE;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'listFolder: ' + result);
            }

            var $receiver = result.get_61zpoe$('entries').list();
            var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
            var tmp$;
            tmp$ = $receiver.iterator();
            while (tmp$.hasNext()) {
              var item = tmp$.next();
              destination.add_11rb$(this.$this.asMetadata_16cfod$(item));
            }

            return destination;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Dropbox.prototype.createFolder_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$createFolder_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$createFolder_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$createFolder_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$createFolder_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$createFolder_61zpoe$.prototype.constructor = Coroutine$createFolder_61zpoe$;
  Coroutine$createFolder_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var rpath = equals(this.local$path, '/') ? '' : this.local$path;
            this.state_0 = 2;
            this.result_0 = this.$this.jsonRawRequest_ydxc9r$('2/files/create_folder', hashMapOf([to('path', rpath), to('autorename', false)]), void 0, void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var result = this.result_0;
            var $this = Dropbox$Companion_getInstance().logger;
            var level = LogLevel.TRACE;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'create_folder: ' + result);
            }

            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Dropbox.prototype.getMetadata_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$getMetadata_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$getMetadata_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$getMetadata_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getMetadata_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getMetadata_61zpoe$.prototype.constructor = Coroutine$getMetadata_61zpoe$;
  Coroutine$getMetadata_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var rpath = equals(this.local$path, '/') ? '' : this.local$path;
            this.state_0 = 2;
            this.result_0 = this.$this.jsonRawRequest_ydxc9r$('2/files/get_metadata', hashMapOf([to('path', rpath)]), void 0, void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var result = this.result_0;
            var $this = Dropbox$Companion_getInstance().logger;
            var level = LogLevel.TRACE;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'getMetadata: ' + result);
            }

            return this.$this.asMetadata_16cfod$(result);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Dropbox.prototype.download_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$download_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$download_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$download_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$download_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$download_61zpoe$.prototype.constructor = Coroutine$download_61zpoe$;
  Coroutine$download_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.rawRequest_kbh8q$('2/files/download', void 0, Http$Http$Headers_init([to('Dropbox-API-Arg', toJsonUntyped(mapOf_0(to('path', this.local$path))))]), void 0, this.$this.BASE_CONTENT, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.content;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Dropbox.prototype.downloadChunk_dckg8j$ = function (path_0, start_0, size_0, continuation_0, suspended) {
    var instance = new Coroutine$downloadChunk_dckg8j$(this, path_0, start_0, size_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$downloadChunk_dckg8j$($this, path_0, start_0, size_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$start = start_0;
    this.local$size = size_0;
  }
  Coroutine$downloadChunk_dckg8j$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$downloadChunk_dckg8j$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$downloadChunk_dckg8j$.prototype.constructor = Coroutine$downloadChunk_dckg8j$;
  Coroutine$downloadChunk_dckg8j$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.rawRequest_kbh8q$('2/files/download', void 0, Http$Http$Headers_init([to('Dropbox-API-Arg', toJsonUntyped(mapOf_0(to('path', this.local$path)))), to('Range', 'bytes=' + this.local$start + '-' + this.local$start.add(Kotlin.Long.fromInt(this.local$size)).subtract(Kotlin.Long.fromInt(1)))]), void 0, this.$this.BASE_CONTENT, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.content;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Dropbox.prototype.upload_519pps$ = function (path_0, content_0, continuation_0, suspended) {
    var instance = new Coroutine$upload_519pps$(this, path_0, content_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$upload_519pps$($this, path_0, content_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$path = path_0;
    this.local$content = content_0;
  }
  Coroutine$upload_519pps$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$upload_519pps$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$upload_519pps$.prototype.constructor = Coroutine$upload_519pps$;
  Coroutine$upload_519pps$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.rawRequest_kbh8q$('2/files/upload', this.local$content, Http$Http$Headers_init([to('Dropbox-API-Arg', toJsonUntyped(mapOf([to('path', this.local$path), to('mode', 'overwrite'), to('autorename', false), to('mute', false)]))), to('Content-Type', 'application/octet-stream')]), void 0, this.$this.BASE_CONTENT, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var req = this.result_0;
            this.local$tmp$ = json.Json;
            this.state_0 = 3;
            this.result_0 = req.readAllString_qa9gbo$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return this.$this.asMetadata_16cfod$(get_dy(this.local$tmp$.parse_61zpoe$(this.result_0)));
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Dropbox.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Dropbox',
    interfaces: []
  };
  function overlapsWith($receiver, that) {
    return Kotlin.compareTo($receiver.start, that.endInclusive) <= 0 && Kotlin.compareTo(that.start, $receiver.endInclusive) <= 0;
  }
  function Option(item) {
    this.item = item;
  }
  Option.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Option',
    interfaces: []
  };
  Option.prototype.component1 = function () {
    return this.item;
  };
  Option.prototype.copy_11rb$ = function (item) {
    return new Option(item === void 0 ? this.item : item);
  };
  Option.prototype.toString = function () {
    return 'Option(item=' + Kotlin.toString(this.item) + ')';
  };
  Option.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.item) | 0;
    return result;
  };
  Option.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.item, other.item))));
  };
  function DropboxVfs(dropbox) {
    DropboxVfs$Companion_getInstance();
    Vfs.call(this);
    this.dropbox = dropbox;
    this.statCache = HashMap_init();
    this.pathCache = HashMap_init();
  }
  function DropboxVfs$Companion() {
    DropboxVfs$Companion_instance = this;
    this.logger = Logger.Companion.invoke_61zpoe$('DropboxVfs');
  }
  DropboxVfs$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var DropboxVfs$Companion_instance = null;
  function DropboxVfs$Companion_getInstance() {
    if (DropboxVfs$Companion_instance === null) {
      new DropboxVfs$Companion();
    }
    return DropboxVfs$Companion_instance;
  }
  DropboxVfs.prototype.normalizePath_pdl1vz$ = function ($receiver) {
    return '/' + replace_0(trim($receiver, Kotlin.charArrayOf(47)), '\\', '/');
  };
  DropboxVfs.prototype.touched_ivxn3r$ = function (path, created) {
    this.statCache.remove_11rb$(this.normalizePath_pdl1vz$(path));
    if (created) {
      this.pathCache.remove_11rb$(this.normalizePath_pdl1vz$((new PathInfo(path)).folder));
    }
  };
  DropboxVfs.prototype.stat_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$stat_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$stat_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 8;
    this.$this = $this;
    this.local$npath = void 0;
    this.local$$receiver = void 0;
    this.local$tmp$ = void 0;
    this.local$closure$continuation = void 0;
    this.local$ignoreErrors$result = void 0;
    this.local$path = path_0;
  }
  Coroutine$stat_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$stat_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$stat_61zpoe$.prototype.constructor = Coroutine$stat_61zpoe$;
  Coroutine$stat_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.local$npath = this.$this.normalizePath_pdl1vz$(this.local$path);
            this.local$$receiver = this.$this.statCache;
            var value = this.local$$receiver.get_11rb$(this.local$npath);
            if (value == null) {
              this.local$closure$continuation = this;
              var tmp$_0;
              this.state_0 = 1;
              continue;
            }
             else {
              this.local$tmp$ = value;
              this.state_0 = 7;
              continue;
            }

          case 1:
            this.exceptionState_0 = 3;
            this.state_0 = 2;
            this.result_0 = this.$this.dropbox.getMetadata_61zpoe$(this.local$path, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 2:
            this.local$ignoreErrors$result = new Option(this.local$closure$continuation.result_0);
            this.exceptionState_0 = 8;
            this.state_0 = 5;
            continue;
          case 3:
            this.exceptionState_0 = 8;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              if (false)
                printStackTrace(e);
              this.local$ignoreErrors$result = null;
              this.exceptionState_0 = 3;
              this.state_0 = 6;
              continue;
            }
             else {
              throw e;
            }

          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            if (!false) {
              this.state_0 = 6;
              continue;
            }

            this.state_0 = 1;
            continue;
          case 6:
            var answer = (tmp$_0 = this.local$ignoreErrors$result) != null ? tmp$_0 : new Option(null);
            this.local$$receiver.put_xwzc9p$(this.local$npath, answer);
            this.local$tmp$ = answer;
            this.state_0 = 7;
            continue;
          case 7:
            var info = this.local$tmp$;
            var i = info.item;
            if (i != null) {
              tmp$ = this.$this.createExistsStat_sjl0ub$(this.local$path, i.isDirectory, i.size);
            }
             else {
              tmp$ = this.$this.createNonExistsStat_4w9ihe$(this.local$path);
            }

            return tmp$;
          case 8:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 8)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DropboxVfs.prototype.list_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$list_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$list_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$npath = void 0;
    this.local$$receiver = void 0;
    this.local$tmp$ = void 0;
    this.local$closure$continuation = void 0;
    this.local$path = path_0;
  }
  Coroutine$list_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$list_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$list_61zpoe$.prototype.constructor = Coroutine$list_61zpoe$;
  Coroutine$list_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$npath = this.$this.normalizePath_pdl1vz$(this.local$path);
            this.local$$receiver = this.$this.pathCache;
            var value = this.local$$receiver.get_11rb$(this.local$npath);
            if (value == null) {
              this.local$closure$continuation = this;
              this.state_0 = 2;
              this.result_0 = this.$this.dropbox.listFolder_61zpoe$(this.local$path, this.local$closure$continuation);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.local$tmp$ = value;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            var $receiver = this.local$closure$continuation.result_0;
            var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
            var tmp$;
            tmp$ = $receiver.iterator();
            while (tmp$.hasNext()) {
              var item = tmp$.next();
              destination.add_11rb$(this.local$path + '/' + item.name);
            }

            var answer = destination;
            this.local$$receiver.put_xwzc9p$(this.local$npath, answer);
            this.local$tmp$ = answer;
            this.state_0 = 3;
            continue;
          case 3:
            var names = this.local$tmp$;
            var destination_0 = ArrayList_init(collectionSizeOrDefault(names, 10));
            var tmp$_0;
            tmp$_0 = names.iterator();
            while (tmp$_0.hasNext()) {
              var item_0 = tmp$_0.next();
              destination_0.add_11rb$(this.$this.file_61zpoe$(item_0));
            }

            return toAsync(destination_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DropboxVfs.prototype.mkdir_2aqdj1$ = function (path_0, attributes, continuation_0, suspended) {
    var instance = new Coroutine$mkdir_2aqdj1$(this, path_0, attributes, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$mkdir_2aqdj1$($this, path_0, attributes, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$mkdir_2aqdj1$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$mkdir_2aqdj1$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$mkdir_2aqdj1$.prototype.constructor = Coroutine$mkdir_2aqdj1$;
  Coroutine$mkdir_2aqdj1$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            println('Creating ' + this.local$path + '...');
            this.state_0 = 2;
            this.result_0 = this.$this.dropbox.createFolder_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.$this.touched_ivxn3r$(this.local$path, true);
            println('Done Creating ' + this.local$path + '...');
            return true;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DropboxVfs$open$ObjectLiteral(closure$fullContent, closure$patches, closure$setLengthPatch, this$DropboxVfs, closure$path, closure$size) {
    this.closure$fullContent = closure$fullContent;
    this.closure$patches = closure$patches;
    this.closure$setLengthPatch = closure$setLengthPatch;
    this.this$DropboxVfs = this$DropboxVfs;
    this.closure$path = closure$path;
    this.closure$size = closure$size;
    AsyncStreamBase.call(this);
    this.consolidateTimer = null;
    this.consolidateQueue = new AsyncQueue();
  }
  DropboxVfs$open$ObjectLiteral.prototype.mustConsolidate = function () {
    var tmp$ = this.closure$fullContent.v != null;
    if (!tmp$) {
      tmp$ = !this.closure$patches.isEmpty();
    }
    return tmp$ || this.closure$setLengthPatch.v != null;
  };
  var ByteArrayBuffer_init = $module$korio_js.$$importsForInline$$['kmem-js'].com.soywiz.kmem.ByteArrayBuffer_init_za3lpa$;
  var MemorySyncStream_0 = $module$korio_js.com.soywiz.korio.stream.MemorySyncStream_yyklod$;
  function DropboxVfs$open$ObjectLiteral$consolidateContent$lambda(closure$fullContent_0, this$DropboxVfs_0, closure$path_0, closure$patches_0, closure$setLengthPatch_0, closure$size_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$DropboxVfs$open$ObjectLiteral$consolidateContent$lambda(closure$fullContent_0, this$DropboxVfs_0, closure$path_0, closure$patches_0, closure$setLengthPatch_0, closure$size_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DropboxVfs$open$ObjectLiteral$consolidateContent$lambda(closure$fullContent_0, this$DropboxVfs_0, closure$path_0, closure$patches_0, closure$setLengthPatch_0, closure$size_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$fullContent = closure$fullContent_0;
    this.local$this$DropboxVfs = this$DropboxVfs_0;
    this.local$closure$path = closure$path_0;
    this.local$closure$patches = closure$patches_0;
    this.local$closure$setLengthPatch = closure$setLengthPatch_0;
    this.local$closure$size = closure$size_0;
    this.local$changed = void 0;
  }
  Coroutine$DropboxVfs$open$ObjectLiteral$consolidateContent$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DropboxVfs$open$ObjectLiteral$consolidateContent$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DropboxVfs$open$ObjectLiteral$consolidateContent$lambda.prototype.constructor = Coroutine$DropboxVfs$open$ObjectLiteral$consolidateContent$lambda;
  Coroutine$DropboxVfs$open$ObjectLiteral$consolidateContent$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.local$changed = false;
            if (this.local$closure$fullContent.v == null) {
              this.state_0 = 2;
              this.result_0 = this.local$this$DropboxVfs.dropbox.download_61zpoe$(this.local$closure$path, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = readAll(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            tmp$ = this.result_0;
            this.local$closure$fullContent.v = tmp$;
            this.state_0 = 4;
            continue;
          case 4:
            if (!this.local$closure$patches.isEmpty()) {
              var tmp$_0 = this.local$closure$fullContent;
              var buffer = ByteArrayBuffer_init(4096);
              var s = MemorySyncStream_0(buffer);
              var closure$fullContent = this.local$closure$fullContent;
              var closure$patches = this.local$closure$patches;
              var tmp$_1;
              s.position = Kotlin.Long.ZERO;
              writeBytes(s, ensureNotNull(closure$fullContent.v));
              var apatches = toList_3(closure$patches);
              closure$patches.clear();
              tmp$_1 = apatches.iterator();
              while (tmp$_1.hasNext()) {
                var patch = tmp$_1.next();
                s.position = patch.first;
                writeBytes(s, patch.second);
              }
              tmp$_0.v = buffer.toByteArray();
              this.local$changed = true;
            }

            if (this.local$closure$setLengthPatch.v != null) {
              this.local$closure$fullContent.v = copyOf(ensureNotNull(this.local$closure$fullContent.v), ensureNotNull(this.local$closure$setLengthPatch.v).toInt());
              this.local$closure$setLengthPatch.v = null;
              this.local$changed = true;
            }

            this.local$closure$size.v = Kotlin.Long.fromInt(ensureNotNull(this.local$closure$fullContent.v).length);
            var $this = DropboxVfs$Companion_getInstance().logger;
            var level = LogLevel.WARN;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'Must save to dropbox?');
            }

            if (this.local$changed) {
              var $this_0 = DropboxVfs$Companion_getInstance().logger;
              var level_0 = LogLevel.WARN;
              if ($this_0.isEnabled_ci8eq1$(level_0)) {
                $this_0.actualLog_t189ph$(level_0, 'Yes! It Changed');
              }
              this.state_0 = 5;
              this.result_0 = this.local$this$DropboxVfs.dropbox.upload_519pps$(this.local$closure$path, openAsync(ensureNotNull(this.local$closure$fullContent.v)), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              var $this_1 = DropboxVfs$Companion_getInstance().logger;
              var level_1 = LogLevel.WARN;
              if ($this_1.isEnabled_ci8eq1$(level_1)) {
                $this_1.actualLog_t189ph$(level_1, "No it didn't change!");
              }
              return Unit;
            }

          case 5:
            return this.local$this$DropboxVfs.touched_ivxn3r$(this.local$closure$path, false), Unit;
          case 6:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DropboxVfs$open$ObjectLiteral.prototype.consolidateContent_0 = function (continuation_0, suspended) {
    var instance = new Coroutine$consolidateContent_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$consolidateContent_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$consolidateContent_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$consolidateContent_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$consolidateContent_0.prototype.constructor = Coroutine$consolidateContent_0;
  Coroutine$consolidateContent_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.consolidateQueue.invoke_g2bo5h$(DropboxVfs$open$ObjectLiteral$consolidateContent$lambda(this.$this.closure$fullContent, this.$this.this$DropboxVfs, this.$this.closure$path, this.$this.closure$patches, this.$this.closure$setLengthPatch, this.$this.closure$size), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DropboxVfs$open$ObjectLiteral.prototype.addConsolidateTimer_0 = wrapFunction(function () {
    function DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda(this$_0) {
      return function ($receiver, continuation_0, suspended) {
        var instance = new Coroutine$DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda(this$_0, $receiver, this, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function Coroutine$DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda(this$_0, $receiver, controller, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.$controller = controller;
      this.exceptionState_0 = 1;
      this.local$this$ = this$_0;
    }
    Coroutine$DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda.prototype.constructor = Coroutine$DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda;
    Coroutine$DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$this$.consolidateContent_0(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
          }
        }
         catch (e) {
          if (this.state_0 === 1)
            throw e;
          else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda(closure$coroutineContext, this$) {
      return function () {
        go_1(closure$coroutineContext, DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda(this$));
        return Unit;
      };
    }
    return function (callback, continuation) {
      var tmp$;
      getCoroutineContext($this$);
      var coroutineContext = $this$.$$coroutineResult$$;
      (tmp$ = this.consolidateTimer) != null ? (tmp$.close(), Unit) : null;
      try {
        return callback();
      }
      finally {
        this.consolidateTimer = get_eventLoop(coroutineContext).setTimeout_n53o35$(200, DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda(coroutineContext, this));
      }
    };
  });
  DropboxVfs$open$ObjectLiteral.prototype.close = function (continuation_0, suspended) {
    var instance = new Coroutine$close_1(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$close_1($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$close_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$close_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$close_1.prototype.constructor = Coroutine$close_1;
  Coroutine$close_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.consolidateContent_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DropboxVfs$open$ObjectLiteral.prototype.getLength = function (continuation) {
    return this.closure$size.v;
  };
  DropboxVfs$open$ObjectLiteral.prototype.read_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_4m9kcn$_1(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_4m9kcn$_1($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_4m9kcn$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_4m9kcn$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_4m9kcn$_1.prototype.constructor = Coroutine$read_4m9kcn$_1;
  Coroutine$read_4m9kcn$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.$this.mustConsolidate()) {
              this.state_0 = 4;
              this.result_0 = this.$this.consolidateContent_0(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 2;
              this.result_0 = this.$this.this$DropboxVfs.dropbox.downloadChunk_dckg8j$(this.$this.closure$path, this.local$position, this.local$len, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = readAll(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            var chunk = this.result_0;
            arraycopy_0(chunk, 0, this.local$buffer, this.local$offset, chunk.length);
            return chunk.length;
          case 4:
            var content = ensureNotNull(this.$this.closure$fullContent.v);
            var available = content.length - this.local$position.toInt() | 0;
            var read = Math_0.min(available, this.local$len);
            arraycopy_0(content, this.local$position.toInt(), this.local$buffer, this.local$offset, read);
            return read;
          case 5:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda(this$_0) {
    return function ($receiver, continuation_0, suspended) {
      var instance = new Coroutine$DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda(this$_0, $receiver, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda(this$_0, $receiver, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$ = this$_0;
  }
  Coroutine$DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda.prototype.constructor = Coroutine$DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda;
  Coroutine$DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$.consolidateContent_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda(closure$coroutineContext, this$) {
    return function () {
      go_1(closure$coroutineContext, DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda$lambda(this$));
      return Unit;
    };
  }
  DropboxVfs$open$ObjectLiteral.prototype.setLength_s8cxhz$ = function (value_0, continuation_0, suspended) {
    var instance = new Coroutine$setLength_s8cxhz$_1(this, value_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setLength_s8cxhz$_1($this, value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$value = value_0;
  }
  Coroutine$setLength_s8cxhz$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setLength_s8cxhz$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setLength_s8cxhz$_1.prototype.constructor = Coroutine$setLength_s8cxhz$_1;
  Coroutine$setLength_s8cxhz$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.closure$setLengthPatch;
            var tmp$;
            this.state_0 = 2;
            this.result_0 = getCoroutineContext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var coroutineContext = this.result_0;
            (tmp$ = this.$this.consolidateTimer) != null ? (tmp$.close(), Unit) : null;
            try {
              this.$this.closure$setLengthPatch.v = this.local$value;
              this.result_0 = Unit;
            }
            finally {
              this.$this.consolidateTimer = get_eventLoop(coroutineContext).setTimeout_n53o35$(200, DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda(coroutineContext, this.$this));
            }

            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DropboxVfs$open$ObjectLiteral.prototype.write_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$write_4m9kcn$_1(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$write_4m9kcn$_1($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$write_4m9kcn$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$write_4m9kcn$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$write_4m9kcn$_1.prototype.constructor = Coroutine$write_4m9kcn$_1;
  Coroutine$write_4m9kcn$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.closure$patches;
            var tmp$;
            this.state_0 = 2;
            this.result_0 = getCoroutineContext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var coroutineContext = this.result_0;
            (tmp$ = this.$this.consolidateTimer) != null ? (tmp$.close(), Unit) : null;
            try {
              var tmp$_0 = this.$this.closure$patches;
              var toIndex = this.local$offset + this.local$len | 0;
              var element = to(this.local$position, this.local$buffer.slice(this.local$offset, toIndex));
              tmp$_0.add_11rb$(element);
              this.result_0 = Unit;
            }
            finally {
              this.$this.consolidateTimer = get_eventLoop(coroutineContext).setTimeout_n53o35$(200, DropboxVfs$open$ObjectLiteral$addConsolidateTimer$lambda(coroutineContext, this.$this));
            }

            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DropboxVfs$open$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncStreamBase]
  };
  DropboxVfs.prototype.open_j4ip3x$ = function (path_0, mode_0, continuation_0, suspended) {
    var instance = new Coroutine$open_j4ip3x$(this, path_0, mode_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$open_j4ip3x$($this, path_0, mode_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 12;
    this.$this = $this;
    this.local$ignoreErrors$result = void 0;
    this.local$closure$continuation = void 0;
    this.local$size = void 0;
    this.local$fullContent = void 0;
    this.local$patches = void 0;
    this.local$setLengthPatch = void 0;
    this.local$path = path_0;
    this.local$mode = mode_0;
  }
  Coroutine$open_j4ip3x$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$open_j4ip3x$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$open_j4ip3x$.prototype.constructor = Coroutine$open_j4ip3x$;
  Coroutine$open_j4ip3x$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 1;
            continue;
          case 1:
            this.exceptionState_0 = 3;
            this.local$closure$continuation = this;
            this.state_0 = 2;
            this.result_0 = this.$this.dropbox.getMetadata_61zpoe$(this.local$path, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 2:
            this.local$ignoreErrors$result = this.local$closure$continuation.result_0;
            this.exceptionState_0 = 12;
            this.state_0 = 5;
            continue;
          case 3:
            this.exceptionState_0 = 12;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              if (false)
                printStackTrace(e);
              this.local$ignoreErrors$result = null;
              this.exceptionState_0 = 3;
              this.state_0 = 6;
              continue;
            }
             else {
              throw e;
            }

          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            if (!false) {
              this.state_0 = 6;
              continue;
            }

            this.state_0 = 1;
            continue;
          case 6:
            var info = this.local$ignoreErrors$result;
            if (info == null && !this.local$mode.createIfNotExists)
              invalidOp("File '" + this.local$path + "' doesn't exists");
            this.local$size = {v: (tmp$ = info != null ? info.size : null) != null ? tmp$ : Kotlin.Long.ZERO};
            this.local$fullContent = {v: null};
            this.local$patches = ArrayList_init();
            this.local$setLengthPatch = {v: null};
            if (info == null) {
              this.state_0 = 7;
              this.result_0 = this.$this.dropbox.upload_519pps$(this.local$path, openAsync(new Int8Array([])), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 8;
              continue;
            }

          case 7:
            this.$this.touched_ivxn3r$(this.local$path, true);
            this.state_0 = 8;
            continue;
          case 8:
            if (this.local$size.v.compareTo_11rb$(Kotlin.Long.fromInt(1048576)) <= 0) {
              this.state_0 = 9;
              this.result_0 = this.$this.dropbox.download_61zpoe$(this.local$path, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 11;
              continue;
            }

          case 9:
            this.state_0 = 10;
            this.result_0 = readAll(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 10:
            this.local$fullContent.v = this.result_0;
            this.state_0 = 11;
            continue;
          case 11:
            return toAsyncStream(new DropboxVfs$open$ObjectLiteral(this.local$fullContent, this.local$patches, this.local$setLengthPatch, this.$this, this.local$path, this.local$size));
          case 12:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 12)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DropboxVfs.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DropboxVfs',
    interfaces: [Vfs]
  };
  function main$lambda($receiver, continuation_0, suspended) {
    var instance = new Coroutine$main$lambda($receiver, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$main$lambda($receiver, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
  }
  Coroutine$main$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$main$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$main$lambda.prototype.constructor = Coroutine$main$lambda;
  Coroutine$main$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = vfs.ApplicationDataVfs.get_61zpoe$('config/dropbox.bearer').readString_qa9gbo$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var $receiver = this.result_0;
            var tmp$;
            var bearer = trim_0(Kotlin.isCharSequence(tmp$ = $receiver) ? tmp$ : throwCCE()).toString();
            var db = new Dropbox(bearer);
            this.state_0 = 3;
            this.result_0 = db.getMetadata_61zpoe$('/demo.png', this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return println(this.result_0), Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function main_0(args) {
    Korio(main$lambda);
  }
  function ExprNode() {
    ExprNode$Companion_getInstance();
  }
  function ExprNode$EvalContext() {
  }
  ExprNode$EvalContext.prototype.getProp_61zpoe$ = function (name) {
    throw new NotImplementedError_init();
  };
  ExprNode$EvalContext.prototype.get_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.getProp_61zpoe$(name)) != null ? tmp$.get() : null;
  };
  ExprNode$EvalContext.prototype.set_4w9ihe$ = function (name, value) {
    var tmp$, tmp$_0;
    (tmp$_0 = (tmp$ = this.getProp_61zpoe$(name)) == null || Kotlin.isType(tmp$, KMutableProperty0) ? tmp$ : null) != null ? (tmp$_0.set(value), Unit) : null;
  };
  ExprNode$EvalContext.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EvalContext',
    interfaces: []
  };
  function ExprNode$VAR(name) {
    this.name = name;
  }
  ExprNode$VAR.prototype.eval_g9fpaa$ = function (context) {
    return context.get_61zpoe$(this.name);
  };
  ExprNode$VAR.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VAR',
    interfaces: [ExprNode]
  };
  ExprNode$VAR.prototype.component1 = function () {
    return this.name;
  };
  ExprNode$VAR.prototype.copy_61zpoe$ = function (name) {
    return new ExprNode$VAR(name === void 0 ? this.name : name);
  };
  ExprNode$VAR.prototype.toString = function () {
    return 'VAR(name=' + Kotlin.toString(this.name) + ')';
  };
  ExprNode$VAR.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    return result;
  };
  ExprNode$VAR.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.name, other.name))));
  };
  function ExprNode$LIT(value) {
    this.value = value;
  }
  ExprNode$LIT.prototype.eval_g9fpaa$ = function (context) {
    return this.value;
  };
  ExprNode$LIT.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LIT',
    interfaces: [ExprNode]
  };
  ExprNode$LIT.prototype.component1 = function () {
    return this.value;
  };
  ExprNode$LIT.prototype.copy_s8jyv4$ = function (value) {
    return new ExprNode$LIT(value === void 0 ? this.value : value);
  };
  ExprNode$LIT.prototype.toString = function () {
    return 'LIT(value=' + Kotlin.toString(this.value) + ')';
  };
  ExprNode$LIT.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.value) | 0;
    return result;
  };
  ExprNode$LIT.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.value, other.value))));
  };
  function ExprNode$ARRAY_LIT(items) {
    this.items = items;
  }
  ExprNode$ARRAY_LIT.prototype.eval_g9fpaa$ = function (context) {
    var $receiver = this.items;
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(item.eval_g9fpaa$(context));
    }
    return destination;
  };
  ExprNode$ARRAY_LIT.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ARRAY_LIT',
    interfaces: [ExprNode]
  };
  ExprNode$ARRAY_LIT.prototype.component1 = function () {
    return this.items;
  };
  ExprNode$ARRAY_LIT.prototype.copy_a5f2fg$ = function (items) {
    return new ExprNode$ARRAY_LIT(items === void 0 ? this.items : items);
  };
  ExprNode$ARRAY_LIT.prototype.toString = function () {
    return 'ARRAY_LIT(items=' + Kotlin.toString(this.items) + ')';
  };
  ExprNode$ARRAY_LIT.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.items) | 0;
    return result;
  };
  ExprNode$ARRAY_LIT.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.items, other.items))));
  };
  function ExprNode$OBJECT_LIT(items) {
    this.items = items;
  }
  ExprNode$OBJECT_LIT.prototype.eval_g9fpaa$ = function (context) {
    var $receiver = this.items;
    var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(to(item.first.eval_g9fpaa$(context), item.second.eval_g9fpaa$(context)));
    }
    return toMap(destination);
  };
  ExprNode$OBJECT_LIT.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'OBJECT_LIT',
    interfaces: [ExprNode]
  };
  ExprNode$OBJECT_LIT.prototype.component1 = function () {
    return this.items;
  };
  ExprNode$OBJECT_LIT.prototype.copy_l2e7qc$ = function (items) {
    return new ExprNode$OBJECT_LIT(items === void 0 ? this.items : items);
  };
  ExprNode$OBJECT_LIT.prototype.toString = function () {
    return 'OBJECT_LIT(items=' + Kotlin.toString(this.items) + ')';
  };
  ExprNode$OBJECT_LIT.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.items) | 0;
    return result;
  };
  ExprNode$OBJECT_LIT.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.items, other.items))));
  };
  function ExprNode$ACCESS(expr, name) {
    this.expr = expr;
    this.name = name;
  }
  ExprNode$ACCESS.prototype.eval_g9fpaa$ = function (context) {
    throw new NotImplementedError_init();
  };
  ExprNode$ACCESS.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ACCESS',
    interfaces: [ExprNode]
  };
  ExprNode$ACCESS.prototype.component1 = function () {
    return this.expr;
  };
  ExprNode$ACCESS.prototype.component2 = function () {
    return this.name;
  };
  ExprNode$ACCESS.prototype.copy_b08hiq$ = function (expr, name) {
    return new ExprNode$ACCESS(expr === void 0 ? this.expr : expr, name === void 0 ? this.name : name);
  };
  ExprNode$ACCESS.prototype.toString = function () {
    return 'ACCESS(expr=' + Kotlin.toString(this.expr) + (', name=' + Kotlin.toString(this.name)) + ')';
  };
  ExprNode$ACCESS.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.expr) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    return result;
  };
  ExprNode$ACCESS.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.expr, other.expr) && Kotlin.equals(this.name, other.name)))));
  };
  function ExprNode$CALL(method, args) {
    this.method = method;
    this.args = args;
  }
  ExprNode$CALL.prototype.eval_g9fpaa$ = function (context) {
    throw new NotImplementedError_init();
  };
  ExprNode$CALL.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CALL',
    interfaces: [ExprNode]
  };
  ExprNode$CALL.prototype.component1 = function () {
    return this.method;
  };
  ExprNode$CALL.prototype.component2 = function () {
    return this.args;
  };
  ExprNode$CALL.prototype.copy_w6rw2t$ = function (method, args) {
    return new ExprNode$CALL(method === void 0 ? this.method : method, args === void 0 ? this.args : args);
  };
  ExprNode$CALL.prototype.toString = function () {
    return 'CALL(method=' + Kotlin.toString(this.method) + (', args=' + Kotlin.toString(this.args)) + ')';
  };
  ExprNode$CALL.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.method) | 0;
    result = result * 31 + Kotlin.hashCode(this.args) | 0;
    return result;
  };
  ExprNode$CALL.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.method, other.method) && Kotlin.equals(this.args, other.args)))));
  };
  function ExprNode$BINOP(l, r, op) {
    this.l = l;
    this.r = r;
    this.op = op;
  }
  ExprNode$BINOP.prototype.eval_g9fpaa$ = function (context) {
    var lr = this.l.eval_g9fpaa$(context);
    var rr = this.r.eval_g9fpaa$(context);
    return Dynamic2_getInstance().binop_d0xna2$(lr, rr, this.op);
  };
  ExprNode$BINOP.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BINOP',
    interfaces: [ExprNode]
  };
  ExprNode$BINOP.prototype.component1 = function () {
    return this.l;
  };
  ExprNode$BINOP.prototype.component2 = function () {
    return this.r;
  };
  ExprNode$BINOP.prototype.component3 = function () {
    return this.op;
  };
  ExprNode$BINOP.prototype.copy_losly8$ = function (l, r, op) {
    return new ExprNode$BINOP(l === void 0 ? this.l : l, r === void 0 ? this.r : r, op === void 0 ? this.op : op);
  };
  ExprNode$BINOP.prototype.toString = function () {
    return 'BINOP(l=' + Kotlin.toString(this.l) + (', r=' + Kotlin.toString(this.r)) + (', op=' + Kotlin.toString(this.op)) + ')';
  };
  ExprNode$BINOP.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.l) | 0;
    result = result * 31 + Kotlin.hashCode(this.r) | 0;
    result = result * 31 + Kotlin.hashCode(this.op) | 0;
    return result;
  };
  ExprNode$BINOP.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.l, other.l) && Kotlin.equals(this.r, other.r) && Kotlin.equals(this.op, other.op)))));
  };
  function ExprNode$TERNARY(cond, etrue, efalse) {
    this.cond = cond;
    this.etrue = etrue;
    this.efalse = efalse;
  }
  ExprNode$TERNARY.prototype.eval_g9fpaa$ = function (context) {
    var tmp$;
    if (toDynamicBool(this.cond.eval_g9fpaa$(context))) {
      tmp$ = this.etrue.eval_g9fpaa$(context);
    }
     else {
      tmp$ = this.efalse.eval_g9fpaa$(context);
    }
    return tmp$;
  };
  ExprNode$TERNARY.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TERNARY',
    interfaces: [ExprNode]
  };
  ExprNode$TERNARY.prototype.component1 = function () {
    return this.cond;
  };
  ExprNode$TERNARY.prototype.component2 = function () {
    return this.etrue;
  };
  ExprNode$TERNARY.prototype.component3 = function () {
    return this.efalse;
  };
  ExprNode$TERNARY.prototype.copy_b4z473$ = function (cond, etrue, efalse) {
    return new ExprNode$TERNARY(cond === void 0 ? this.cond : cond, etrue === void 0 ? this.etrue : etrue, efalse === void 0 ? this.efalse : efalse);
  };
  ExprNode$TERNARY.prototype.toString = function () {
    return 'TERNARY(cond=' + Kotlin.toString(this.cond) + (', etrue=' + Kotlin.toString(this.etrue)) + (', efalse=' + Kotlin.toString(this.efalse)) + ')';
  };
  ExprNode$TERNARY.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.cond) | 0;
    result = result * 31 + Kotlin.hashCode(this.etrue) | 0;
    result = result * 31 + Kotlin.hashCode(this.efalse) | 0;
    return result;
  };
  ExprNode$TERNARY.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.cond, other.cond) && Kotlin.equals(this.etrue, other.etrue) && Kotlin.equals(this.efalse, other.efalse)))));
  };
  function ExprNode$UNOP(r, op) {
    this.r = r;
    this.op = op;
  }
  ExprNode$UNOP.prototype.eval_g9fpaa$ = function (context) {
    var tmp$, tmp$_0;
    tmp$ = this.op;
    if (equals(tmp$, '') || equals(tmp$, '+'))
      tmp$_0 = this.r.eval_g9fpaa$(context);
    else
      tmp$_0 = Dynamic2_getInstance().unop_hvn9da$(this.r.eval_g9fpaa$(context), this.op);
    return tmp$_0;
  };
  ExprNode$UNOP.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UNOP',
    interfaces: [ExprNode]
  };
  ExprNode$UNOP.prototype.component1 = function () {
    return this.r;
  };
  ExprNode$UNOP.prototype.component2 = function () {
    return this.op;
  };
  ExprNode$UNOP.prototype.copy_of0q8h$ = function (r, op) {
    return new ExprNode$UNOP(r === void 0 ? this.r : r, op === void 0 ? this.op : op);
  };
  ExprNode$UNOP.prototype.toString = function () {
    return 'UNOP(r=' + Kotlin.toString(this.r) + (', op=' + Kotlin.toString(this.op)) + ')';
  };
  ExprNode$UNOP.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.r) | 0;
    result = result * 31 + Kotlin.hashCode(this.op) | 0;
    return result;
  };
  ExprNode$UNOP.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.r, other.r) && Kotlin.equals(this.op, other.op)))));
  };
  function ExprNode$Companion() {
    ExprNode$Companion_instance = this;
    this.BINOPS_PRIORITIES_LIST_0 = listOf([listOf(['*', '/', '%']), listOf(['+', '-', '~']), listOf(['==', '!=', '<', '>', '<=', '>=', '<=>']), listOf_0('&&'), listOf_0('||'), listOf_0('in'), listOf_0('..'), listOf_0('?:')]);
    var $receiver = withIndex(this.BINOPS_PRIORITIES_LIST_0);
    var destination = ArrayList_init();
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      var index = element.component1()
      , ops = element.component2();
      var destination_0 = ArrayList_init(collectionSizeOrDefault(ops, 10));
      var tmp$_0;
      tmp$_0 = ops.iterator();
      while (tmp$_0.hasNext()) {
        var item = tmp$_0.next();
        destination_0.add_11rb$(to(item, index));
      }
      var list = destination_0;
      addAll(destination, list);
    }
    this.BINOPS_0 = toMap(destination);
  }
  ExprNode$Companion.prototype.parse_61zpoe$ = function (str) {
    var tokens = ExprNode$Token$Companion_getInstance().tokenize_61zpoe$(str);
    return ExprNode$Companion_getInstance().parseFullExpr_m50c8p$(tokens);
  };
  ExprNode$Companion.prototype.parseId_m50c8p$ = function (r) {
    return r.read().text;
  };
  ExprNode$Companion.prototype.expect_fik7nk$ = function (r, tokens) {
    var token = r.read();
    if (!contains_0(tokens, token.text))
      invalidOp('Expected ' + joinToString_0(tokens, ', ') + ' but found ' + token);
  };
  ExprNode$Companion.prototype.parseFullExpr_m50c8p$ = function (r) {
    var result = ExprNode$Companion_getInstance().parseExpr_m50c8p$(r);
    if (r.hasMore && !Kotlin.isType(r.peek(), ExprNode$Token$TEnd)) {
      var tmp$ = 'Expected expression at ' + toString(r.peek()) + ' :: ';
      var $receiver = r.list;
      var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
      var tmp$_0;
      tmp$_0 = $receiver.iterator();
      while (tmp$_0.hasNext()) {
        var item = tmp$_0.next();
        destination.add_11rb$(item.text);
      }
      invalidOp(tmp$ + joinToString(destination, ''));
    }
    return result;
  };
  ExprNode$Companion.prototype.binopPr_61zpoe$ = function (str) {
    var tmp$;
    return (tmp$ = this.BINOPS_0.get_11rb$(str)) != null ? tmp$ : 0;
  };
  ExprNode$Companion.prototype.parseBinExpr_m50c8p$ = function (r) {
    var result = this.parseFinal_0(r);
    while (r.hasMore) {
      var $receiver = ExprNode$Companion_getInstance().BINOPS_0;
      var key = r.peek().text;
      var tmp$;
      if (!(Kotlin.isType(tmp$ = $receiver, Map) ? tmp$ : throwCCE()).containsKey_11rb$(key))
        break;
      var operator = r.read().text;
      var right = this.parseFinal_0(r);
      if (Kotlin.isType(result, ExprNode$BINOP)) {
        var a = result.l;
        var lop = result.op;
        var b = result.r;
        var rop = operator;
        var c = right;
        var lopPr = this.binopPr_61zpoe$(lop);
        var ropPr = this.binopPr_61zpoe$(rop);
        if (lopPr > ropPr) {
          result = new ExprNode$BINOP(a, new ExprNode$BINOP(b, c, rop), lop);
          continue;
        }
      }
      result = new ExprNode$BINOP(result, right, operator);
    }
    return result;
  };
  ExprNode$Companion.prototype.parseTernaryExpr_m50c8p$ = function (r) {
    var left = this.parseBinExpr_m50c8p$(r);
    if (equals(r.peek().text, '?')) {
      r.skip_za3lpa$();
      var middle = this.parseExpr_m50c8p$(r);
      expect(r, [':']);
      var right = this.parseExpr_m50c8p$(r);
      left = new ExprNode$TERNARY(left, middle, right);
    }
    return left;
  };
  ExprNode$Companion.prototype.parseExpr_m50c8p$ = function (r) {
    return this.parseTernaryExpr_m50c8p$(r);
  };
  ExprNode$Companion.prototype.parseFinal_0 = function (r) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12, tmp$_13;
    var tok = r.peek().text.toUpperCase();
    if (equals(tok, '!') || equals(tok, '~') || equals(tok, '-') || equals(tok, '+') || equals(tok, 'NOT')) {
      var op = tok;
      r.skip_za3lpa$();
      tmp$ = this.parseFinal_0(r);
      if (equals(op, 'NOT'))
        tmp$_0 = '!';
      else
        tmp$_0 = op;
      tmp$_11 = new ExprNode$UNOP(tmp$, tmp$_0);
    }
     else if (equals(tok, '(')) {
      r.read();
      var result = ExprNode$Companion_getInstance().parseExpr_m50c8p$(r);
      if (!equals(r.read().text, ')'))
        throw RuntimeException_init("Expected ')'");
      tmp$_11 = new ExprNode$UNOP(result, '');
    }
     else if (equals(tok, '[')) {
      r.read();
      var items = ArrayList_init();
      loop: while (r.hasMore && !equals(r.peek().text, ']')) {
        var element = ExprNode$Companion_getInstance().parseExpr_m50c8p$(r);
        items.add_11rb$(element);
        tmp$_1 = r.peek().text;
        if (equals(tmp$_1, ','))
          r.read();
        else if (equals(tmp$_1, ']'))
          continue loop;
        else
          invalidOp('Expected , or ]');
      }
      expect(r, [']']);
      tmp$_11 = new ExprNode$ARRAY_LIT(items);
    }
     else if (equals(tok, '{')) {
      r.read();
      var items_0 = ArrayList_init();
      loop: while (r.hasMore && !equals(r.peek().text, '}')) {
        var k = ExprNode$Companion_getInstance().parseFinal_0(r);
        expect(r, [':']);
        var v = ExprNode$Companion_getInstance().parseExpr_m50c8p$(r);
        var element_0 = to(k, v);
        items_0.add_11rb$(element_0);
        tmp$_2 = r.peek().text;
        if (equals(tmp$_2, ','))
          r.read();
        else if (equals(tmp$_2, '}'))
          continue loop;
        else
          invalidOp('Expected , or }');
      }
      expect(r, ['}']);
      tmp$_11 = new ExprNode$OBJECT_LIT(items_0);
    }
     else {
      if (Kotlin.isType(r.peek(), ExprNode$Token$TNumber)) {
        var ntext = r.read().text;
        if (startsWith(ntext, '0x')) {
          tmp$_11 = new ExprNode$LIT((tmp$_3 = toIntOrNull_0(substr(ntext, 2), 16)) != null ? tmp$_3 : 0);
        }
         else if (contains(ntext, 46)) {
          tmp$_11 = new ExprNode$LIT((tmp$_4 = toDoubleOrNull(ntext)) != null ? tmp$_4 : 0.0);
        }
         else {
          tmp$_5 = toLongOrNull(ntext);
          if (equals(tmp$_5, (tmp$_7 = toIntOrNull(ntext)) != null ? Kotlin.Long.fromInt(tmp$_7) : null)) {
            tmp$_11 = new ExprNode$LIT((tmp$_6 = toIntOrNull(ntext)) != null ? tmp$_6 : 0);
          }
           else if (equals(tmp$_5, toLongOrNull(ntext))) {
            tmp$_11 = new ExprNode$LIT((tmp$_8 = toLongOrNull(ntext)) != null ? tmp$_8 : Kotlin.Long.ZERO);
          }
           else {
            tmp$_11 = new ExprNode$LIT((tmp$_9 = toDoubleOrNull(ntext)) != null ? tmp$_9 : 0.0);
          }
        }
      }
       else if (Kotlin.isType(r.peek(), ExprNode$Token$TString)) {
        tmp$_11 = new ExprNode$LIT((Kotlin.isType(tmp$_10 = r.read(), ExprNode$Token$TString) ? tmp$_10 : throwCCE()).processedValue);
      }
       else {
        tmp$_11 = new ExprNode$VAR(r.read().text);
      }
    }
    var construct = tmp$_11;
    loop: while (r.hasMore) {
      tmp$_12 = r.peek().text;
      if (equals(tmp$_12, '.')) {
        r.read();
        var id = r.read().text;
        construct = new ExprNode$ACCESS(construct, new ExprNode$LIT(id));
        continue loop;
      }
       else if (equals(tmp$_12, '[')) {
        r.read();
        var expr = ExprNode$Companion_getInstance().parseExpr_m50c8p$(r);
        construct = new ExprNode$ACCESS(construct, expr);
        var end = r.read();
        if (!equals(end.text, ']'))
          throw RuntimeException_init("Expected ']' but found " + end);
      }
       else if (equals(tmp$_12, '(')) {
        r.read();
        var args = ArrayList_init();
        callargsloop: while (r.hasMore && !equals(r.peek().text, ')')) {
          var element_1 = ExprNode$Companion_getInstance().parseExpr_m50c8p$(r);
          args.add_11rb$(element_1);
          tmp$_13 = expectPeek(r, [',', ')']).text;
          if (equals(tmp$_13, ','))
            r.read();
          else if (equals(tmp$_13, ')'))
            break callargsloop;
        }
        expect(r, [')']);
        construct = new ExprNode$CALL(construct, args);
      }
       else
        break loop;
    }
    return construct;
  };
  ExprNode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ExprNode$Companion_instance = null;
  function ExprNode$Companion_getInstance() {
    if (ExprNode$Companion_instance === null) {
      new ExprNode$Companion();
    }
    return ExprNode$Companion_instance;
  }
  function ExprNode$Token() {
    ExprNode$Token$Companion_getInstance();
  }
  function ExprNode$Token$TId(text) {
    this.text_fzotaw$_0 = text;
  }
  Object.defineProperty(ExprNode$Token$TId.prototype, 'text', {
    get: function () {
      return this.text_fzotaw$_0;
    }
  });
  ExprNode$Token$TId.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TId',
    interfaces: [ExprNode$Token]
  };
  ExprNode$Token$TId.prototype.component1 = function () {
    return this.text;
  };
  ExprNode$Token$TId.prototype.copy_61zpoe$ = function (text) {
    return new ExprNode$Token$TId(text === void 0 ? this.text : text);
  };
  ExprNode$Token$TId.prototype.toString = function () {
    return 'TId(text=' + Kotlin.toString(this.text) + ')';
  };
  ExprNode$Token$TId.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.text) | 0;
    return result;
  };
  ExprNode$Token$TId.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.text, other.text))));
  };
  function ExprNode$Token$TNumber(text) {
    this.text_snk312$_0 = text;
  }
  Object.defineProperty(ExprNode$Token$TNumber.prototype, 'text', {
    get: function () {
      return this.text_snk312$_0;
    }
  });
  ExprNode$Token$TNumber.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TNumber',
    interfaces: [ExprNode$Token]
  };
  ExprNode$Token$TNumber.prototype.component1 = function () {
    return this.text;
  };
  ExprNode$Token$TNumber.prototype.copy_61zpoe$ = function (text) {
    return new ExprNode$Token$TNumber(text === void 0 ? this.text : text);
  };
  ExprNode$Token$TNumber.prototype.toString = function () {
    return 'TNumber(text=' + Kotlin.toString(this.text) + ')';
  };
  ExprNode$Token$TNumber.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.text) | 0;
    return result;
  };
  ExprNode$Token$TNumber.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.text, other.text))));
  };
  function ExprNode$Token$TString(text, processedValue) {
    this.text_cj9nha$_0 = text;
    this.processedValue = processedValue;
  }
  Object.defineProperty(ExprNode$Token$TString.prototype, 'text', {
    get: function () {
      return this.text_cj9nha$_0;
    }
  });
  ExprNode$Token$TString.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TString',
    interfaces: [ExprNode$Token]
  };
  ExprNode$Token$TString.prototype.component1 = function () {
    return this.text;
  };
  ExprNode$Token$TString.prototype.component2 = function () {
    return this.processedValue;
  };
  ExprNode$Token$TString.prototype.copy_puj7f4$ = function (text, processedValue) {
    return new ExprNode$Token$TString(text === void 0 ? this.text : text, processedValue === void 0 ? this.processedValue : processedValue);
  };
  ExprNode$Token$TString.prototype.toString = function () {
    return 'TString(text=' + Kotlin.toString(this.text) + (', processedValue=' + Kotlin.toString(this.processedValue)) + ')';
  };
  ExprNode$Token$TString.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.text) | 0;
    result = result * 31 + Kotlin.hashCode(this.processedValue) | 0;
    return result;
  };
  ExprNode$Token$TString.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.text, other.text) && Kotlin.equals(this.processedValue, other.processedValue)))));
  };
  function ExprNode$Token$TOperator(text) {
    this.text_742lu7$_0 = text;
  }
  Object.defineProperty(ExprNode$Token$TOperator.prototype, 'text', {
    get: function () {
      return this.text_742lu7$_0;
    }
  });
  ExprNode$Token$TOperator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TOperator',
    interfaces: [ExprNode$Token]
  };
  ExprNode$Token$TOperator.prototype.component1 = function () {
    return this.text;
  };
  ExprNode$Token$TOperator.prototype.copy_61zpoe$ = function (text) {
    return new ExprNode$Token$TOperator(text === void 0 ? this.text : text);
  };
  ExprNode$Token$TOperator.prototype.toString = function () {
    return 'TOperator(text=' + Kotlin.toString(this.text) + ')';
  };
  ExprNode$Token$TOperator.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.text) | 0;
    return result;
  };
  ExprNode$Token$TOperator.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.text, other.text))));
  };
  function ExprNode$Token$TEnd(text) {
    if (text === void 0)
      text = '';
    this.text_wghslo$_0 = text;
  }
  Object.defineProperty(ExprNode$Token$TEnd.prototype, 'text', {
    get: function () {
      return this.text_wghslo$_0;
    }
  });
  ExprNode$Token$TEnd.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TEnd',
    interfaces: [ExprNode$Token]
  };
  ExprNode$Token$TEnd.prototype.component1 = function () {
    return this.text;
  };
  ExprNode$Token$TEnd.prototype.copy_61zpoe$ = function (text) {
    return new ExprNode$Token$TEnd(text === void 0 ? this.text : text);
  };
  ExprNode$Token$TEnd.prototype.toString = function () {
    return 'TEnd(text=' + Kotlin.toString(this.text) + ')';
  };
  ExprNode$Token$TEnd.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.text) | 0;
    return result;
  };
  ExprNode$Token$TEnd.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.text, other.text))));
  };
  function ExprNode$Token$Companion() {
    ExprNode$Token$Companion_instance = this;
    this.OPERATORS_0 = setOf(['(', ')', '[', ']', '{', '}', '&&', '||', '&', '|', '^', '==', '!=', '<', '>', '<=', '>=', '<=>', '?:', '..', '+', '-', '*', '/', '%', '**', '!', '~', '.', ',', ';', ':', '?', '=']);
  }
  function ExprNode$Token$Companion$tokenize$emit(closure$out) {
    return function (str) {
      closure$out.add_11rb$(str);
    };
  }
  var StrReader$readWhile$lambda = wrapFunction(function () {
    return function (closure$filter, this$StrReader) {
      return function () {
        var $this = this$StrReader;
        var filter = closure$filter;
        while ($this.hasMore && filter($this.peekChar()))
          $this.readChar();
        return Unit;
      };
    };
  });
  ExprNode$Token$Companion.prototype.tokenize_61zpoe$ = function (str) {
    var tmp$;
    var r = new StrReader(str);
    var out = ArrayList_init();
    var emit = ExprNode$Token$Companion$tokenize$emit(out);
    while (r.hasMore) {
      var start = r.pos;
      r.skipSpaces();
      var tmp$_0;
      var start_0 = r.pos;
      while (true) {
        var tmp$_1 = r.hasMore;
        if (tmp$_1) {
          tmp$_1 = isLetterDigitOrUnderscore(unboxChar(r.peekChar()));
        }
        if (!tmp$_1)
          break;
        r.readChar();
      }
      var end = r.pos;
      var id = (tmp$_0 = end > start_0 ? r.slice_vux9f0$(start_0, end) : null) != null ? tmp$_0 : '';
      if (id.length > 0) {
        if (isDigit(id.charCodeAt(0)))
          emit(new ExprNode$Token$TNumber(id));
        else
          emit(new ExprNode$Token$TId(id));
      }
      r.skipSpaces();
      if (ExprNode$Token$Companion_getInstance().OPERATORS_0.contains_11rb$(r.peek_za3lpa$(3)))
        emit(new ExprNode$Token$TOperator(r.read_za3lpa$(3)));
      if (ExprNode$Token$Companion_getInstance().OPERATORS_0.contains_11rb$(r.peek_za3lpa$(2)))
        emit(new ExprNode$Token$TOperator(r.read_za3lpa$(2)));
      if (ExprNode$Token$Companion_getInstance().OPERATORS_0.contains_11rb$(r.peek_za3lpa$(1)))
        emit(new ExprNode$Token$TOperator(r.read_za3lpa$(1)));
      if (unboxChar(r.peek()) === 39 || unboxChar(r.peek()) === 34) {
        var strStart = unboxChar(r.read());
        var strBody = (tmp$ = r.readUntil_s8itvh$(strStart)) != null ? tmp$ : '';
        var strEnd = unboxChar(r.read());
        emit(new ExprNode$Token$TString(String.fromCharCode(strStart) + strBody + String.fromCharCode(toBoxedChar(strEnd)), unescape(strBody)));
      }
      var end_0 = r.pos;
      if (end_0 === start)
        invalidOp("Don't know how to handle '" + String.fromCharCode(unboxChar(r.peek())) + "'");
    }
    emit(new ExprNode$Token$TEnd());
    return new ListReader(out);
  };
  ExprNode$Token$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ExprNode$Token$Companion_instance = null;
  function ExprNode$Token$Companion_getInstance() {
    if (ExprNode$Token$Companion_instance === null) {
      new ExprNode$Token$Companion();
    }
    return ExprNode$Token$Companion_instance;
  }
  ExprNode$Token.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Token',
    interfaces: []
  };
  ExprNode.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'ExprNode',
    interfaces: []
  };
  function tryRead($receiver, types) {
    var token = $receiver.peek();
    if (contains_0(types, token.text)) {
      $receiver.read();
      return token;
    }
     else {
      return null;
    }
  }
  function expectPeek($receiver, types) {
    var token = $receiver.peek();
    if (!contains_0(types, token.text))
      throw RuntimeException_init('Expected ' + joinToString_0(types, ', ') + " but found '" + token.text + "'");
    return token;
  }
  function expect($receiver, types) {
    var token = $receiver.read();
    if (!contains_0(types, token.text))
      throw RuntimeException_init('Expected ' + joinToString_0(types, ', '));
    return token;
  }
  function parseExpr($receiver) {
    return ExprNode$Companion_getInstance().parseExpr_m50c8p$($receiver);
  }
  function parseId($receiver) {
    return ExprNode$Companion_getInstance().parseId_m50c8p$($receiver);
  }
  function parseIdList($receiver) {
    var ids = ArrayList_init();
    do {
      var element = parseId($receiver);
      ids.add_11rb$(element);
    }
     while (tryRead($receiver, [',']) != null);
    return ids;
  }
  function Dynamic2() {
    Dynamic2_instance = this;
  }
  Dynamic2.prototype.binop_d0xna2$ = function (l, r, op) {
    if (equals(op, '+')) {
      if (typeof l === 'string')
        return l.toString() + toString(r);
      else if (Kotlin.isType(l, Iterable))
        return plus_1(this.toIterable_s8jyv4$(l), this.toIterable_s8jyv4$(r));
      else
        return this.toDouble_s8jyv4$(l) + this.toDouble_s8jyv4$(r);
    }
     else if (equals(op, '-'))
      return this.toDouble_s8jyv4$(l) - this.toDouble_s8jyv4$(r);
    else if (equals(op, '*'))
      return this.toDouble_s8jyv4$(l) * this.toDouble_s8jyv4$(r);
    else if (equals(op, '/'))
      return this.toDouble_s8jyv4$(l) / this.toDouble_s8jyv4$(r);
    else if (equals(op, '%'))
      return this.toDouble_s8jyv4$(l) % this.toDouble_s8jyv4$(r);
    else if (equals(op, '**')) {
      var $receiver = this.toDouble_s8jyv4$(l);
      var x = this.toDouble_s8jyv4$(r);
      return Math_0.pow($receiver, x);
    }
     else if (equals(op, '&'))
      return this.toInt_s8jyv4$(l) & this.toInt_s8jyv4$(r);
    else if (equals(op, 'or'))
      return this.toInt_s8jyv4$(l) | this.toInt_s8jyv4$(r);
    else if (equals(op, '^'))
      return this.toInt_s8jyv4$(l) ^ this.toInt_s8jyv4$(r);
    else if (equals(op, '&&'))
      return this.toBool_s8jyv4$(l) && this.toBool_s8jyv4$(r);
    else if (equals(op, '||'))
      return this.toBool_s8jyv4$(l) || this.toBool_s8jyv4$(r);
    else if (equals(op, '=='))
      if (Kotlin.isNumber(l) && Kotlin.isNumber(r)) {
        return numberToDouble(l) === numberToDouble(r);
      }
       else {
        return equals(l, r);
      }
     else if (equals(op, '!='))
      if (Kotlin.isNumber(l) && Kotlin.isNumber(r)) {
        return numberToDouble(l) !== numberToDouble(r);
      }
       else {
        return !equals(l, r);
      }
     else if (equals(op, '<'))
      return this.compare_oaftn8$(l, r) < 0;
    else if (equals(op, '<='))
      return this.compare_oaftn8$(l, r) <= 0;
    else if (equals(op, '>'))
      return this.compare_oaftn8$(l, r) > 0;
    else if (equals(op, '>='))
      return this.compare_oaftn8$(l, r) >= 0;
    else if (equals(op, 'in'))
      return this.contains_oaftn8$(r, l);
    else if (equals(op, '?:'))
      return this.toBool_s8jyv4$(l) ? l : r;
    else
      return noImpl("Not implemented binary operator '" + op + "'");
  };
  Dynamic2.prototype.unop_hvn9da$ = function (r, op) {
    if (equals(op, '+'))
      return r;
    else if (equals(op, '-'))
      return -this.toDouble_s8jyv4$(r);
    else if (equals(op, '~'))
      return ~this.toInt_s8jyv4$(r);
    else if (equals(op, '!'))
      return !this.toBool_s8jyv4$(r);
    else
      return noImpl('Not implemented unary operator ' + op);
  };
  Dynamic2.prototype.toBool_s8jyv4$ = function (it) {
    var tmp$;
    if (it == null)
      return false;
    else
      return (tmp$ = this.toBoolOrNull_s8jyv4$(it)) != null ? tmp$ : true;
  };
  Dynamic2.prototype.toBoolOrNull_s8jyv4$ = function (it) {
    if (it == null)
      return null;
    else if (typeof it === 'boolean')
      return it;
    else if (Kotlin.isNumber(it))
      return numberToDouble(it) !== 0.0;
    else if (typeof it === 'string') {
      return it.length > 0 && !equals(it, '0') && !equals(it, 'false');
    }
     else
      return null;
  };
  Dynamic2.prototype.toNumber_s8jyv4$ = function (it) {
    if (it == null)
      return 0.0;
    else if (Kotlin.isNumber(it))
      return it;
    else
      return toNumber(it.toString());
  };
  Dynamic2.prototype.toInt_s8jyv4$ = function (it) {
    if (typeof it === 'number')
      return it;
    else if (Kotlin.isType(it, Kotlin.Long))
      return it.and(new Kotlin.Long(-1, 0)).toInt();
    else if (typeof it === 'number')
      return this.toInt_s8jyv4$(Kotlin.Long.fromNumber(it));
    else
      return numberToInt(this.toNumber_s8jyv4$(it));
  };
  Dynamic2.prototype.toLong_s8jyv4$ = function (it) {
    return numberToLong(this.toNumber_s8jyv4$(it));
  };
  Dynamic2.prototype.toDouble_s8jyv4$ = function (it) {
    return numberToDouble(this.toNumber_s8jyv4$(it));
  };
  Dynamic2.prototype.compare_oaftn8$ = function (l, r) {
    if (Kotlin.isNumber(l) && Kotlin.isNumber(r)) {
      return Kotlin.primitiveCompareTo(numberToDouble(l), numberToDouble(r));
    }
    var lc = this.toComparable_s8jyv4$(l);
    var rc = this.toComparable_s8jyv4$(r);
    if (Kotlin.getKClassFromExpression(lc).isInstance_s8jyv4$(rc)) {
      return Kotlin.compareTo(lc, rc);
    }
     else {
      return -1;
    }
  };
  Dynamic2.prototype.toComparable_s8jyv4$ = function (it) {
    var tmp$, tmp$_0, tmp$_1;
    if (it == null)
      return Kotlin.isComparable(tmp$ = 0) ? tmp$ : throwCCE();
    else if (Kotlin.isComparable(it))
      return Kotlin.isComparable(tmp$_0 = it) ? tmp$_0 : throwCCE();
    else
      return Kotlin.isComparable(tmp$_1 = it.toString()) ? tmp$_1 : throwCCE();
  };
  Dynamic2.prototype.toList_s8jyv4$ = function (it) {
    return toList_3(this.toIterable_s8jyv4$(it));
  };
  Dynamic2.prototype.toIterable_s8jyv4$ = function (it) {
    if (it == null) {
      return emptyList();
    }
     else if (Kotlin.isType(it, Iterable))
      return it;
    else if (Kotlin.isCharSequence(it))
      return toList_5(it);
    else if (Kotlin.isType(it, Map))
      return toList_6(it);
    else {
      return emptyList();
    }
  };
  Dynamic2.prototype.contains_oaftn8$ = function (collection, element) {
    if (Kotlin.isType(collection, Set))
      return collection.contains_11rb$(element);
    else
      return this.toList_s8jyv4$(collection).contains_11rb$(element);
  };
  Dynamic2.prototype.toString_s8jyv4$ = function (value) {
    if (value == null)
      return '';
    else if (typeof value === 'string')
      return value;
    else if (typeof value === 'number')
      if (value === numberToInt(value)) {
        return numberToInt(value).toString();
      }
       else {
        return value.toString();
      }
     else if (Kotlin.isType(value, Iterable)) {
      var destination = ArrayList_init(collectionSizeOrDefault(value, 10));
      var tmp$;
      tmp$ = value.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        destination.add_11rb$(this.toString_s8jyv4$(item));
      }
      return '[' + joinToString(destination, ', ') + ']';
    }
     else if (Kotlin.isType(value, Map)) {
      var destination_0 = ArrayList_init(value.size);
      var tmp$_0;
      tmp$_0 = value.entries.iterator();
      while (tmp$_0.hasNext()) {
        var item_0 = tmp$_0.next();
        destination_0.add_11rb$(quote(this.toString_s8jyv4$(item_0.key)) + ': ' + this.toString_s8jyv4$(item_0.value));
      }
      return '{' + joinToString(destination_0, ', ') + '}';
    }
     else
      return value.toString();
  };
  Dynamic2.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Dynamic2',
    interfaces: []
  };
  var Dynamic2_instance = null;
  function Dynamic2_getInstance() {
    if (Dynamic2_instance === null) {
      new Dynamic2();
    }
    return Dynamic2_instance;
  }
  function toDynamicString($receiver) {
    return Dynamic2_getInstance().toString_s8jyv4$($receiver);
  }
  function toDynamicBool($receiver) {
    return Dynamic2_getInstance().toBool_s8jyv4$($receiver);
  }
  function toDynamicInt($receiver) {
    return Dynamic2_getInstance().toInt_s8jyv4$($receiver);
  }
  function toDynamicList($receiver) {
    return Dynamic2_getInstance().toList_s8jyv4$($receiver);
  }
  function IsoVfs2(file_0, continuation_0, suspended) {
    var instance = new Coroutine$IsoVfs2(file_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$IsoVfs2(file_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$file = file_0;
  }
  Coroutine$IsoVfs2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IsoVfs2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IsoVfs2.prototype.constructor = Coroutine$IsoVfs2;
  Coroutine$IsoVfs2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$tmp$ = ISO2_getInstance();
            this.state_0 = 2;
            this.result_0 = this.local$file.open_7c7tmz$(VfsOpenMode.READ, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$tmp$.openVfs_axnxby$(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IsoVfs2_0(s, continuation) {
    return ISO2_getInstance().openVfs_axnxby$(s, continuation);
  }
  function openAsIso2($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$openAsIso2($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$openAsIso2($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$iso = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$openAsIso2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$openAsIso2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$openAsIso2.prototype.constructor = Coroutine$openAsIso2;
  Coroutine$openAsIso2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = IsoVfs2_0(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$iso = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$iso.listRecursive_tj1ql9$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.local$tmp$ = this.result_0.iterator();
            this.state_0 = 4;
            continue;
          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$tmp$.hasNext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 5:
            if (!this.result_0) {
              this.state_0 = 8;
              continue;
            }
             else {
              this.state_0 = 6;
              continue;
            }

          case 6:
            this.state_0 = 7;
            this.result_0 = this.local$tmp$.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 7:
            var file = this.result_0;
            println(file);
            this.state_0 = 4;
            continue;
          case 8:
            return this.local$iso;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function openAsIso2_0($receiver, continuation) {
    return IsoVfs2($receiver, continuation);
  }
  function ISO2() {
    ISO2_instance = this;
    this.logger = Logger.Companion.invoke_61zpoe$('ISO2');
    this.CHARSET = lang.ASCII;
    this.SECTOR_SIZE = Kotlin.Long.fromInt(2048);
    this.SCE_LBN_REGEX = Regex_init('^/?sce_lbn0x([0-9a-fA-F]+)_size0x([0-9a-fA-F]+)$');
  }
  ISO2.prototype.read_axnxby$ = function (s, continuation) {
    return (new ISO2$IsoReader(s)).read(continuation);
  };
  function ISO2$openVfs$lambda$ObjectLiteral(this$, closure$iso) {
    this.this$ = this$;
    Vfs.call(this);
    this.vfs = this;
    this.isoFile = closure$iso;
  }
  ISO2$openVfs$lambda$ObjectLiteral.prototype.getVfsStat_rwxcyd$ = function (file) {
    return this.createExistsStat_sjl0ub$(file.fullname, file.isDirectory, file.size, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, new Int32Array([file.record.extent, 0, 0, 0, 0, 0]));
  };
  ISO2$openVfs$lambda$ObjectLiteral.prototype.stat_61zpoe$ = function (path, continuation) {
    try {
      return this.getVfsStat_rwxcyd$(this.isoFile.get_61zpoe$(path));
    }
     catch (e) {
      if (Kotlin.isType(e, Throwable)) {
        return this.createNonExistsStat_4w9ihe$(path);
      }
       else
        throw e;
    }
  };
  ISO2$openVfs$lambda$ObjectLiteral.prototype.open_j4ip3x$ = function (path, mode, continuation) {
    println('Opening ISO path: ' + path);
    var result = ISO2_getInstance().SCE_LBN_REGEX.matchEntire_6bul2c$(path);
    if (result != null) {
      var tmp$ = result.groupValues;
      var lbnString = tmp$.get_za3lpa$(1);
      var sizeString = tmp$.get_za3lpa$(2);
      var lbn = toInt_0(lbnString, 16);
      var size = toInt_0(sizeString, 16);
      println('Matching sce_lbn: ' + result.groupValues + ' : ' + lbn + ', ' + size);
      return this.isoFile.reader.getSector_vux9f0$(lbn, size, continuation);
    }
     else {
      return this.isoFile.get_61zpoe$(path).open2_7c7tmz$(mode, continuation);
    }
  };
  function ISO2$openVfs$lambda$ObjectLiteral$list$lambda(this$_0, closure$path_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$ISO2$openVfs$lambda$ObjectLiteral$list$lambda(this$_0, closure$path_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ISO2$openVfs$lambda$ObjectLiteral$list$lambda(this$_0, closure$path_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$ = this$_0;
    this.local$closure$path = closure$path_0;
    this.local$tmp$ = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ISO2$openVfs$lambda$ObjectLiteral$list$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ISO2$openVfs$lambda$ObjectLiteral$list$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ISO2$openVfs$lambda$ObjectLiteral$list$lambda.prototype.constructor = Coroutine$ISO2$openVfs$lambda$ObjectLiteral$list$lambda;
  Coroutine$ISO2$openVfs$lambda$ObjectLiteral$list$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var file = this.local$this$.isoFile.get_61zpoe$(this.local$closure$path);
            this.local$tmp$ = file.children.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 4;
              continue;
            }

            var c = this.local$tmp$.next();
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.yield_11rb$(this.local$this$.vfs.get_61zpoe$(c.fullname), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ISO2$openVfs$lambda$ObjectLiteral.prototype.list_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$list_61zpoe$_0(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$list_61zpoe$_0($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$list_61zpoe$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$list_61zpoe$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$list_61zpoe$_0.prototype.constructor = Coroutine$list_61zpoe$_0;
  Coroutine$list_61zpoe$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return asyncGenerate(this.$this.this$, ISO2$openVfs$lambda$ObjectLiteral$list$lambda(this.$this, this.local$path));
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ISO2$openVfs$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Vfs]
  };
  function ISO2$openVfs$lambda(closure$s_0, this$ISO2_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$ISO2$openVfs$lambda(closure$s_0, this$ISO2_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ISO2$openVfs$lambda(closure$s_0, this$ISO2_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$s = closure$s_0;
    this.local$this$ISO2 = this$ISO2_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ISO2$openVfs$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ISO2$openVfs$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ISO2$openVfs$lambda.prototype.constructor = Coroutine$ISO2$openVfs$lambda;
  Coroutine$ISO2$openVfs$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$ISO2.read_axnxby$(this.local$closure$s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            var iso = this.result_0;
            return (new ISO2$openVfs$lambda$ObjectLiteral(this.local$$receiver, iso)).root;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ISO2.prototype.openVfs_axnxby$ = function (s_0, continuation_0, suspended) {
    var instance = new Coroutine$openVfs_axnxby$(this, s_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$openVfs_axnxby$($this, s_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$s = s_0;
  }
  Coroutine$openVfs_axnxby$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$openVfs_axnxby$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$openVfs_axnxby$.prototype.constructor = Coroutine$openVfs_axnxby$;
  Coroutine$openVfs_axnxby$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = withCoroutineContext(ISO2$openVfs$lambda(this.local$s, this.$this), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ISO2$IsoReader(s) {
    this.s = s;
  }
  ISO2$IsoReader.prototype.getSector_vux9f0$ = function (sector, size, continuation) {
    return sliceWithSize_1(this.s, Kotlin.Long.fromInt(sector).multiply(Kotlin.Long.fromInt(2048)), Kotlin.Long.fromInt(size), continuation);
  };
  ISO2$IsoReader.prototype.getSectorMemory_vux9f0$ = function (sector_0, size_0, continuation_0, suspended) {
    var instance = new Coroutine$getSectorMemory_vux9f0$(this, sector_0, size_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$getSectorMemory_vux9f0$($this, sector_0, size_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$sector = sector_0;
    this.local$size = size_0;
  }
  Coroutine$getSectorMemory_vux9f0$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getSectorMemory_vux9f0$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getSectorMemory_vux9f0$.prototype.constructor = Coroutine$getSectorMemory_vux9f0$;
  Coroutine$getSectorMemory_vux9f0$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$size === void 0)
              this.local$size = Kotlin.Long.fromInt(2048).toInt();
            this.state_0 = 2;
            this.result_0 = this.$this.getSector_vux9f0$(this.local$sector, this.local$size, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = readAvailable(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            return openSync(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ISO2$IsoReader.prototype.read = function (continuation_0, suspended) {
    var instance = new Coroutine$read(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$primary = void 0;
    this.local$udfFileSystem = void 0;
    this.local$n = void 0;
    this.local$root = void 0;
  }
  Coroutine$read.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read.prototype.constructor = Coroutine$read;
  Coroutine$read.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            this.state_0 = 2;
            this.result_0 = this.$this.getSectorMemory_vux9f0$(16, Kotlin.Long.fromInt(2048).toInt(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$primary = ISO2$ISO2$PrimaryVolumeDescriptor_init(this.result_0);
            this.local$udfFileSystem = false;
            this.local$n = 0;
            this.state_0 = 3;
            continue;
          case 3:
            if (this.local$n >= 16) {
              this.state_0 = 6;
              continue;
            }

            this.state_0 = 4;
            this.result_0 = this.$this.getSectorMemory_vux9f0$(17 + this.local$n | 0, Kotlin.Long.fromInt(2048).toInt(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            var s = this.result_0;
            var vdh = ISO2$ISO2$VolumeDescriptorHeader_init(s.clone());
            tmp$ = vdh.id;
            if (!equals(tmp$, 'CD001'))
              if (!equals(tmp$, 'BEA01'))
                if (equals(tmp$, 'NSR02'))
                  this.local$udfFileSystem = true;
                else if (equals(tmp$, 'NSR03'))
                  this.local$udfFileSystem = true;
                else if (!equals(tmp$, 'BOOT2'))
                  equals(tmp$, 'TEA01');
            this.state_0 = 5;
            continue;
          case 5:
            this.local$n++;
            this.state_0 = 3;
            continue;
          case 6:
            if (this.local$udfFileSystem) {
              this.state_0 = 7;
              this.result_0 = this.$this.getSectorMemory_vux9f0$(256, void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 9;
              continue;
            }

          case 7:
            var udfs = this.result_0;
            var avd = ISO2$ISO2$UdfAnchorVolumeDescriptorPointer_init(udfs);
            this.state_0 = 8;
            this.result_0 = this.$this.getSectorMemory_vux9f0$(avd.mainVolumeDescriptorSequenceExtent.location, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 8:
            var mvd = this.result_0;
            var pv = ISO2$ISO2$UdfPrimaryVolumeDescriptor_init(mvd);
            if (!((tmp$_0 = pv.descriptorTag.tagId) != null ? tmp$_0.equals(ISO2$UdfDescriptorTag$TagId$Companion_getInstance().PRIMARY_VOLUME_DESCRIPTOR) : null)) {
              invalidOp('Expected UDF primary volume descriptor');
            }

            this.state_0 = 9;
            continue;
          case 9:
            this.local$root = new ISO2$IsoFile(this.$this, this.local$primary.rootDirectoryRecord, null);
            this.state_0 = 10;
            this.result_0 = this.$this.getSectorMemory_vux9f0$(this.local$primary.rootDirectoryRecord.extent, this.local$primary.rootDirectoryRecord.size, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 10:
            this.state_0 = 11;
            this.result_0 = this.$this.readDirectoryRecords_ljf5w0$(this.local$root, this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 11:
            return this.local$root;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ISO2$IsoReader.prototype.readDirectoryRecords_ljf5w0$ = function (parent_0, sector_0, continuation_0, suspended) {
    var instance = new Coroutine$readDirectoryRecords_ljf5w0$(this, parent_0, sector_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readDirectoryRecords_ljf5w0$($this, parent_0, sector_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$dr = void 0;
    this.local$file = void 0;
    this.local$parent = parent_0;
    this.local$sector = sector_0;
  }
  Coroutine$readDirectoryRecords_ljf5w0$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readDirectoryRecords_ljf5w0$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readDirectoryRecords_ljf5w0$.prototype.constructor = Coroutine$readDirectoryRecords_ljf5w0$;
  Coroutine$readDirectoryRecords_ljf5w0$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (get_eof(this.local$sector)) {
              this.state_0 = 8;
              continue;
            }

            this.local$dr = ISO2$DirectoryRecord$Companion_getInstance().invoke_39qel5$(this.local$sector);
            if (this.local$dr == null) {
              skipToAlign(this.local$sector, Kotlin.Long.fromInt(2048).toInt());
              this.state_0 = 2;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            if (equals(this.local$dr.name, '') || equals(this.local$dr.name, '\x01')) {
              this.state_0 = 2;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.local$file = new ISO2$IsoFile(this.$this, this.local$dr, this.local$parent);
            var $this = ISO2_getInstance().logger;
            var level = LogLevel.INFO;
            if ($this.isEnabled_ci8eq1$(level)) {
              $this.actualLog_t189ph$(level, 'IsoFile: ' + this.local$file.fullname);
            }

            if (this.local$dr.isDirectory) {
              this.state_0 = 5;
              this.result_0 = this.$this.getSectorMemory_vux9f0$(this.local$dr.extent, this.local$dr.size, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              break;
            }
             else {
              this.state_0 = 7;
              continue;
            }

          case 5:
            this.state_0 = 6;
            this.result_0 = this.$this.readDirectoryRecords_ljf5w0$(this.local$file, this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 6:
            this.state_0 = 7;
            continue;
          case 7:
            this.state_0 = 2;
            continue;
          case 8:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ISO2$IsoReader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IsoReader',
    interfaces: []
  };
  function ISO2$IsoFile(reader, record, parent) {
    this.reader = reader;
    this.record = record;
    this.parent = parent;
    this.fullname = this.parent == null ? this.record.name : trimStart(this.parent.fullname + '/' + this.record.name, Kotlin.charArrayOf(47));
    this.children = ArrayList_init();
    this.size = Kotlin.Long.fromInt(this.record.size);
    var tmp$, tmp$_0;
    (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.children : null) != null ? tmp$_0.add_11rb$(this) : null;
  }
  Object.defineProperty(ISO2$IsoFile.prototype, 'name', {
    get: function () {
      return this.record.name;
    }
  });
  Object.defineProperty(ISO2$IsoFile.prototype, 'isDirectory', {
    get: function () {
      return this.record.isDirectory;
    }
  });
  ISO2$IsoFile.prototype.dump = function () {
    var tmp$;
    println(this.fullname + ': ' + this.record);
    tmp$ = this.children.iterator();
    while (tmp$.hasNext()) {
      var c = tmp$.next();
      c.dump();
    }
  };
  ISO2$IsoFile.prototype.open2_7c7tmz$ = function (mode, continuation) {
    return this.reader.getSector_vux9f0$(this.record.extent, this.record.size, continuation);
  };
  ISO2$IsoFile.prototype.get_61zpoe$ = function (name) {
    var tmp$, tmp$_0;
    var current = this;
    tmp$ = split_0(name, ['/']).iterator();
    while (tmp$.hasNext()) {
      var part = tmp$.next();
      if (!equals(part, ''))
        if (!equals(part, '.'))
          if (equals(part, '..'))
            current = ensureNotNull(current.parent);
          else {
            var $receiver = current.children;
            var firstOrNull$result;
            firstOrNull$break: do {
              var tmp$_1;
              tmp$_1 = $receiver.iterator();
              while (tmp$_1.hasNext()) {
                var element = tmp$_1.next();
                if (equals(element.name.toUpperCase(), part.toUpperCase())) {
                  firstOrNull$result = element;
                  break firstOrNull$break;
                }
              }
              firstOrNull$result = null;
            }
             while (false);
            tmp$_0 = firstOrNull$result;
            if (tmp$_0 == null) {
              throw IllegalStateException_init("Can't find part " + part + ' for accessing path ' + name + ' children: ' + current.children);
            }
            current = tmp$_0;
          }
    }
    return current;
  };
  ISO2$IsoFile.prototype.toString = function () {
    return "IsoFile(fullname='" + this.fullname + "', size=" + this.size + ')';
  };
  ISO2$IsoFile.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IsoFile',
    interfaces: []
  };
  ISO2.prototype.readLongArray_le_hsu5ns$ = function ($receiver, count) {
    var $receiver_0 = until(0, count);
    var destination = ArrayList_init(collectionSizeOrDefault($receiver_0, 10));
    var tmp$;
    tmp$ = $receiver_0.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(readS64_le_0($receiver));
    }
    return toLongArray(destination);
  };
  ISO2.prototype.readU32_le_be_ucmi9i$ = function ($receiver) {
    var le = readS32_le_0($receiver);
    readS32_be($receiver);
    return le;
  };
  ISO2.prototype.readTextWithLength_ucmi9i$ = function ($receiver) {
    var len = readU8_0($receiver);
    return readStringz_1($receiver, len, this.CHARSET);
  };
  ISO2.prototype.readU16_le_be_ucmi9i$ = function ($receiver) {
    var le = readS16_le_0($receiver);
    readS16_be($receiver);
    return le;
  };
  function ISO2$UdfDescriptorTag(tagId, descVersion, tagChecksum, reserved, tagSerialNumber, descriptorCRC, descriptorCRCLength, tagLocation) {
    this.tagId = tagId;
    this.descVersion = descVersion;
    this.tagChecksum = tagChecksum;
    this.reserved = reserved;
    this.tagSerialNumber = tagSerialNumber;
    this.descriptorCRC = descriptorCRC;
    this.descriptorCRCLength = descriptorCRCLength;
    this.tagLocation = tagLocation;
  }
  function ISO2$UdfDescriptorTag$TagId(id) {
    ISO2$UdfDescriptorTag$TagId$Companion_getInstance();
    this.id = id;
  }
  function ISO2$UdfDescriptorTag$TagId$Companion() {
    ISO2$UdfDescriptorTag$TagId$Companion_instance = this;
    this.PRIMARY_VOLUME_DESCRIPTOR = new ISO2$UdfDescriptorTag$TagId(1);
    this.ANCHOR_VOLUME_DESCRIPTOR_POINTER = new ISO2$UdfDescriptorTag$TagId(2);
    this.VOLUME_DESCRIPTOR_POINTER = new ISO2$UdfDescriptorTag$TagId(3);
    this.IMPLEMENTATION_USE_VOLUME_DESCRIPTOR = new ISO2$UdfDescriptorTag$TagId(4);
    this.PARTITION_DESCRIPTOR = new ISO2$UdfDescriptorTag$TagId(5);
    this.LOGICAL_VOLUME_DESCRIPTOR = new ISO2$UdfDescriptorTag$TagId(6);
    this.UNALLOCATED_SPACE_DESCRIPTOR = new ISO2$UdfDescriptorTag$TagId(7);
    this.TERMINATING_DESCRIPTOR = new ISO2$UdfDescriptorTag$TagId(8);
    this.LOGICAL_VOLUME_INTEGRITY_DESCRIPTOR = new ISO2$UdfDescriptorTag$TagId(9);
    this.FILE_SET_DESCRIPTOR = new ISO2$UdfDescriptorTag$TagId(256);
    this.FILE_IDENTIFIER_DESCRIPTOR = new ISO2$UdfDescriptorTag$TagId(257);
    this.ALLOCATION_EXTENT_DESCRIPTOR = new ISO2$UdfDescriptorTag$TagId(258);
    this.INDIRECT_ENTRY = new ISO2$UdfDescriptorTag$TagId(259);
    this.TERMINAL_ENTRY = new ISO2$UdfDescriptorTag$TagId(260);
    this.FILE_ENTRY = new ISO2$UdfDescriptorTag$TagId(261);
    this.EXTENDED_ATTRIBUTE_HEADER_DESCRIPTOR = new ISO2$UdfDescriptorTag$TagId(262);
    this.UNALLOCATED_SPACE_ENTRY = new ISO2$UdfDescriptorTag$TagId(263);
    this.SPACE_BITMAP_DESCRIPTOR = new ISO2$UdfDescriptorTag$TagId(264);
    this.PARTITION_INTEGRITY_ENTRY = new ISO2$UdfDescriptorTag$TagId(265);
    this.EXTENDED_FILE_ENTRY = new ISO2$UdfDescriptorTag$TagId(266);
  }
  ISO2$UdfDescriptorTag$TagId$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ISO2$UdfDescriptorTag$TagId$Companion_instance = null;
  function ISO2$UdfDescriptorTag$TagId$Companion_getInstance() {
    if (ISO2$UdfDescriptorTag$TagId$Companion_instance === null) {
      new ISO2$UdfDescriptorTag$TagId$Companion();
    }
    return ISO2$UdfDescriptorTag$TagId$Companion_instance;
  }
  ISO2$UdfDescriptorTag$TagId.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TagId',
    interfaces: []
  };
  ISO2$UdfDescriptorTag$TagId.prototype.component1 = function () {
    return this.id;
  };
  ISO2$UdfDescriptorTag$TagId.prototype.copy_za3lpa$ = function (id) {
    return new ISO2$UdfDescriptorTag$TagId(id === void 0 ? this.id : id);
  };
  ISO2$UdfDescriptorTag$TagId.prototype.toString = function () {
    return 'TagId(id=' + Kotlin.toString(this.id) + ')';
  };
  ISO2$UdfDescriptorTag$TagId.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  ISO2$UdfDescriptorTag$TagId.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  ISO2$UdfDescriptorTag.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UdfDescriptorTag',
    interfaces: []
  };
  function ISO2$ISO2$UdfDescriptorTag_init(s, $this) {
    $this = $this || Object.create(ISO2$UdfDescriptorTag.prototype);
    ISO2$UdfDescriptorTag.call($this, new ISO2$UdfDescriptorTag$TagId(readU16_le(s)), readU16_le(s), readU8_0(s), readU8_0(s), readU16_le(s), readU16_le(s), readU16_le(s), readS32_le_0(s));
    return $this;
  }
  ISO2$UdfDescriptorTag.prototype.component1 = function () {
    return this.tagId;
  };
  ISO2$UdfDescriptorTag.prototype.component2 = function () {
    return this.descVersion;
  };
  ISO2$UdfDescriptorTag.prototype.component3 = function () {
    return this.tagChecksum;
  };
  ISO2$UdfDescriptorTag.prototype.component4 = function () {
    return this.reserved;
  };
  ISO2$UdfDescriptorTag.prototype.component5 = function () {
    return this.tagSerialNumber;
  };
  ISO2$UdfDescriptorTag.prototype.component6 = function () {
    return this.descriptorCRC;
  };
  ISO2$UdfDescriptorTag.prototype.component7 = function () {
    return this.descriptorCRCLength;
  };
  ISO2$UdfDescriptorTag.prototype.component8 = function () {
    return this.tagLocation;
  };
  ISO2$UdfDescriptorTag.prototype.copy_p84gdj$ = function (tagId, descVersion, tagChecksum, reserved, tagSerialNumber, descriptorCRC, descriptorCRCLength, tagLocation) {
    return new ISO2$UdfDescriptorTag(tagId === void 0 ? this.tagId : tagId, descVersion === void 0 ? this.descVersion : descVersion, tagChecksum === void 0 ? this.tagChecksum : tagChecksum, reserved === void 0 ? this.reserved : reserved, tagSerialNumber === void 0 ? this.tagSerialNumber : tagSerialNumber, descriptorCRC === void 0 ? this.descriptorCRC : descriptorCRC, descriptorCRCLength === void 0 ? this.descriptorCRCLength : descriptorCRCLength, tagLocation === void 0 ? this.tagLocation : tagLocation);
  };
  ISO2$UdfDescriptorTag.prototype.toString = function () {
    return 'UdfDescriptorTag(tagId=' + Kotlin.toString(this.tagId) + (', descVersion=' + Kotlin.toString(this.descVersion)) + (', tagChecksum=' + Kotlin.toString(this.tagChecksum)) + (', reserved=' + Kotlin.toString(this.reserved)) + (', tagSerialNumber=' + Kotlin.toString(this.tagSerialNumber)) + (', descriptorCRC=' + Kotlin.toString(this.descriptorCRC)) + (', descriptorCRCLength=' + Kotlin.toString(this.descriptorCRCLength)) + (', tagLocation=' + Kotlin.toString(this.tagLocation)) + ')';
  };
  ISO2$UdfDescriptorTag.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.tagId) | 0;
    result = result * 31 + Kotlin.hashCode(this.descVersion) | 0;
    result = result * 31 + Kotlin.hashCode(this.tagChecksum) | 0;
    result = result * 31 + Kotlin.hashCode(this.reserved) | 0;
    result = result * 31 + Kotlin.hashCode(this.tagSerialNumber) | 0;
    result = result * 31 + Kotlin.hashCode(this.descriptorCRC) | 0;
    result = result * 31 + Kotlin.hashCode(this.descriptorCRCLength) | 0;
    result = result * 31 + Kotlin.hashCode(this.tagLocation) | 0;
    return result;
  };
  ISO2$UdfDescriptorTag.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.tagId, other.tagId) && Kotlin.equals(this.descVersion, other.descVersion) && Kotlin.equals(this.tagChecksum, other.tagChecksum) && Kotlin.equals(this.reserved, other.reserved) && Kotlin.equals(this.tagSerialNumber, other.tagSerialNumber) && Kotlin.equals(this.descriptorCRC, other.descriptorCRC) && Kotlin.equals(this.descriptorCRCLength, other.descriptorCRCLength) && Kotlin.equals(this.tagLocation, other.tagLocation)))));
  };
  function ISO2$UdfExtent(length, location) {
    this.length = length;
    this.location = location;
  }
  ISO2$UdfExtent.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UdfExtent',
    interfaces: []
  };
  function ISO2$ISO2$UdfExtent_init(s, $this) {
    $this = $this || Object.create(ISO2$UdfExtent.prototype);
    ISO2$UdfExtent.call($this, readS32_le_0(s), readS32_le_0(s));
    return $this;
  }
  ISO2$UdfExtent.prototype.component1 = function () {
    return this.length;
  };
  ISO2$UdfExtent.prototype.component2 = function () {
    return this.location;
  };
  ISO2$UdfExtent.prototype.copy_vux9f0$ = function (length, location) {
    return new ISO2$UdfExtent(length === void 0 ? this.length : length, location === void 0 ? this.location : location);
  };
  ISO2$UdfExtent.prototype.toString = function () {
    return 'UdfExtent(length=' + Kotlin.toString(this.length) + (', location=' + Kotlin.toString(this.location)) + ')';
  };
  ISO2$UdfExtent.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.length) | 0;
    result = result * 31 + Kotlin.hashCode(this.location) | 0;
    return result;
  };
  ISO2$UdfExtent.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.length, other.length) && Kotlin.equals(this.location, other.location)))));
  };
  function ISO2$UdfAnchorVolumeDescriptorPointer(descriptorTag, mainVolumeDescriptorSequenceExtent, reserveVolumeDescriptorSequenceExtent) {
    this.descriptorTag = descriptorTag;
    this.mainVolumeDescriptorSequenceExtent = mainVolumeDescriptorSequenceExtent;
    this.reserveVolumeDescriptorSequenceExtent = reserveVolumeDescriptorSequenceExtent;
  }
  ISO2$UdfAnchorVolumeDescriptorPointer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UdfAnchorVolumeDescriptorPointer',
    interfaces: []
  };
  function ISO2$ISO2$UdfAnchorVolumeDescriptorPointer_init(s, $this) {
    $this = $this || Object.create(ISO2$UdfAnchorVolumeDescriptorPointer.prototype);
    ISO2$UdfAnchorVolumeDescriptorPointer.call($this, ISO2$ISO2$UdfDescriptorTag_init(s), ISO2$ISO2$UdfExtent_init(s), ISO2$ISO2$UdfExtent_init(s));
    return $this;
  }
  ISO2$UdfAnchorVolumeDescriptorPointer.prototype.component1 = function () {
    return this.descriptorTag;
  };
  ISO2$UdfAnchorVolumeDescriptorPointer.prototype.component2 = function () {
    return this.mainVolumeDescriptorSequenceExtent;
  };
  ISO2$UdfAnchorVolumeDescriptorPointer.prototype.component3 = function () {
    return this.reserveVolumeDescriptorSequenceExtent;
  };
  ISO2$UdfAnchorVolumeDescriptorPointer.prototype.copy_oskysu$ = function (descriptorTag, mainVolumeDescriptorSequenceExtent, reserveVolumeDescriptorSequenceExtent) {
    return new ISO2$UdfAnchorVolumeDescriptorPointer(descriptorTag === void 0 ? this.descriptorTag : descriptorTag, mainVolumeDescriptorSequenceExtent === void 0 ? this.mainVolumeDescriptorSequenceExtent : mainVolumeDescriptorSequenceExtent, reserveVolumeDescriptorSequenceExtent === void 0 ? this.reserveVolumeDescriptorSequenceExtent : reserveVolumeDescriptorSequenceExtent);
  };
  ISO2$UdfAnchorVolumeDescriptorPointer.prototype.toString = function () {
    return 'UdfAnchorVolumeDescriptorPointer(descriptorTag=' + Kotlin.toString(this.descriptorTag) + (', mainVolumeDescriptorSequenceExtent=' + Kotlin.toString(this.mainVolumeDescriptorSequenceExtent)) + (', reserveVolumeDescriptorSequenceExtent=' + Kotlin.toString(this.reserveVolumeDescriptorSequenceExtent)) + ')';
  };
  ISO2$UdfAnchorVolumeDescriptorPointer.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.descriptorTag) | 0;
    result = result * 31 + Kotlin.hashCode(this.mainVolumeDescriptorSequenceExtent) | 0;
    result = result * 31 + Kotlin.hashCode(this.reserveVolumeDescriptorSequenceExtent) | 0;
    return result;
  };
  ISO2$UdfAnchorVolumeDescriptorPointer.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.descriptorTag, other.descriptorTag) && Kotlin.equals(this.mainVolumeDescriptorSequenceExtent, other.mainVolumeDescriptorSequenceExtent) && Kotlin.equals(this.reserveVolumeDescriptorSequenceExtent, other.reserveVolumeDescriptorSequenceExtent)))));
  };
  function ISO2$UdfCharspec(characterSetType, characterSetInfo) {
    this.characterSetType = characterSetType;
    this.characterSetInfo = characterSetInfo;
  }
  ISO2$UdfCharspec.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UdfCharspec',
    interfaces: []
  };
  function ISO2$ISO2$UdfCharspec_init(s, $this) {
    $this = $this || Object.create(ISO2$UdfCharspec.prototype);
    ISO2$UdfCharspec.call($this, readU8_0(s), readStringz_1(s, 63, ISO2_getInstance().CHARSET));
    return $this;
  }
  ISO2$UdfCharspec.prototype.component1 = function () {
    return this.characterSetType;
  };
  ISO2$UdfCharspec.prototype.component2 = function () {
    return this.characterSetInfo;
  };
  ISO2$UdfCharspec.prototype.copy_19mbxw$ = function (characterSetType, characterSetInfo) {
    return new ISO2$UdfCharspec(characterSetType === void 0 ? this.characterSetType : characterSetType, characterSetInfo === void 0 ? this.characterSetInfo : characterSetInfo);
  };
  ISO2$UdfCharspec.prototype.toString = function () {
    return 'UdfCharspec(characterSetType=' + Kotlin.toString(this.characterSetType) + (', characterSetInfo=' + Kotlin.toString(this.characterSetInfo)) + ')';
  };
  ISO2$UdfCharspec.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.characterSetType) | 0;
    result = result * 31 + Kotlin.hashCode(this.characterSetInfo) | 0;
    return result;
  };
  ISO2$UdfCharspec.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.characterSetType, other.characterSetType) && Kotlin.equals(this.characterSetInfo, other.characterSetInfo)))));
  };
  function ISO2$UdfEntityId(flags, identifier, identifierSuffix) {
    this.flags = flags;
    this.identifier = identifier;
    this.identifierSuffix = identifierSuffix;
  }
  ISO2$UdfEntityId.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UdfEntityId',
    interfaces: []
  };
  function ISO2$ISO2$UdfEntityId_init(s, $this) {
    $this = $this || Object.create(ISO2$UdfEntityId.prototype);
    ISO2$UdfEntityId.call($this, readU8_0(s), readStringz_1(s, 23, ISO2_getInstance().CHARSET), readStringz_1(s, 8, ISO2_getInstance().CHARSET));
    return $this;
  }
  ISO2$UdfEntityId.prototype.component1 = function () {
    return this.flags;
  };
  ISO2$UdfEntityId.prototype.component2 = function () {
    return this.identifier;
  };
  ISO2$UdfEntityId.prototype.component3 = function () {
    return this.identifierSuffix;
  };
  ISO2$UdfEntityId.prototype.copy_s4fhmi$ = function (flags, identifier, identifierSuffix) {
    return new ISO2$UdfEntityId(flags === void 0 ? this.flags : flags, identifier === void 0 ? this.identifier : identifier, identifierSuffix === void 0 ? this.identifierSuffix : identifierSuffix);
  };
  ISO2$UdfEntityId.prototype.toString = function () {
    return 'UdfEntityId(flags=' + Kotlin.toString(this.flags) + (', identifier=' + Kotlin.toString(this.identifier)) + (', identifierSuffix=' + Kotlin.toString(this.identifierSuffix)) + ')';
  };
  ISO2$UdfEntityId.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    result = result * 31 + Kotlin.hashCode(this.identifier) | 0;
    result = result * 31 + Kotlin.hashCode(this.identifierSuffix) | 0;
    return result;
  };
  ISO2$UdfEntityId.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.flags, other.flags) && Kotlin.equals(this.identifier, other.identifier) && Kotlin.equals(this.identifierSuffix, other.identifierSuffix)))));
  };
  function ISO2$UdfTimestamp(typeAndTimezone, year, month, day, hour, minute, second, centiseconds, hundredsofMicroseconds, microseconds) {
    this.typeAndTimezone = typeAndTimezone;
    this.year = year;
    this.month = month;
    this.day = day;
    this.hour = hour;
    this.minute = minute;
    this.second = second;
    this.centiseconds = centiseconds;
    this.hundredsofMicroseconds = hundredsofMicroseconds;
    this.microseconds = microseconds;
  }
  ISO2$UdfTimestamp.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UdfTimestamp',
    interfaces: []
  };
  function ISO2$ISO2$UdfTimestamp_init(s, $this) {
    $this = $this || Object.create(ISO2$UdfTimestamp.prototype);
    ISO2$UdfTimestamp.call($this, readS16_le_0(s), readS16_le_0(s), readU8_0(s), readU8_0(s), readU8_0(s), readU8_0(s), readU8_0(s), readU8_0(s), readU8_0(s), readU8_0(s));
    return $this;
  }
  ISO2$UdfTimestamp.prototype.component1 = function () {
    return this.typeAndTimezone;
  };
  ISO2$UdfTimestamp.prototype.component2 = function () {
    return this.year;
  };
  ISO2$UdfTimestamp.prototype.component3 = function () {
    return this.month;
  };
  ISO2$UdfTimestamp.prototype.component4 = function () {
    return this.day;
  };
  ISO2$UdfTimestamp.prototype.component5 = function () {
    return this.hour;
  };
  ISO2$UdfTimestamp.prototype.component6 = function () {
    return this.minute;
  };
  ISO2$UdfTimestamp.prototype.component7 = function () {
    return this.second;
  };
  ISO2$UdfTimestamp.prototype.component8 = function () {
    return this.centiseconds;
  };
  ISO2$UdfTimestamp.prototype.component9 = function () {
    return this.hundredsofMicroseconds;
  };
  ISO2$UdfTimestamp.prototype.component10 = function () {
    return this.microseconds;
  };
  ISO2$UdfTimestamp.prototype.copy_q2ofzg$ = function (typeAndTimezone, year, month, day, hour, minute, second, centiseconds, hundredsofMicroseconds, microseconds) {
    return new ISO2$UdfTimestamp(typeAndTimezone === void 0 ? this.typeAndTimezone : typeAndTimezone, year === void 0 ? this.year : year, month === void 0 ? this.month : month, day === void 0 ? this.day : day, hour === void 0 ? this.hour : hour, minute === void 0 ? this.minute : minute, second === void 0 ? this.second : second, centiseconds === void 0 ? this.centiseconds : centiseconds, hundredsofMicroseconds === void 0 ? this.hundredsofMicroseconds : hundredsofMicroseconds, microseconds === void 0 ? this.microseconds : microseconds);
  };
  ISO2$UdfTimestamp.prototype.toString = function () {
    return 'UdfTimestamp(typeAndTimezone=' + Kotlin.toString(this.typeAndTimezone) + (', year=' + Kotlin.toString(this.year)) + (', month=' + Kotlin.toString(this.month)) + (', day=' + Kotlin.toString(this.day)) + (', hour=' + Kotlin.toString(this.hour)) + (', minute=' + Kotlin.toString(this.minute)) + (', second=' + Kotlin.toString(this.second)) + (', centiseconds=' + Kotlin.toString(this.centiseconds)) + (', hundredsofMicroseconds=' + Kotlin.toString(this.hundredsofMicroseconds)) + (', microseconds=' + Kotlin.toString(this.microseconds)) + ')';
  };
  ISO2$UdfTimestamp.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.typeAndTimezone) | 0;
    result = result * 31 + Kotlin.hashCode(this.year) | 0;
    result = result * 31 + Kotlin.hashCode(this.month) | 0;
    result = result * 31 + Kotlin.hashCode(this.day) | 0;
    result = result * 31 + Kotlin.hashCode(this.hour) | 0;
    result = result * 31 + Kotlin.hashCode(this.minute) | 0;
    result = result * 31 + Kotlin.hashCode(this.second) | 0;
    result = result * 31 + Kotlin.hashCode(this.centiseconds) | 0;
    result = result * 31 + Kotlin.hashCode(this.hundredsofMicroseconds) | 0;
    result = result * 31 + Kotlin.hashCode(this.microseconds) | 0;
    return result;
  };
  ISO2$UdfTimestamp.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.typeAndTimezone, other.typeAndTimezone) && Kotlin.equals(this.year, other.year) && Kotlin.equals(this.month, other.month) && Kotlin.equals(this.day, other.day) && Kotlin.equals(this.hour, other.hour) && Kotlin.equals(this.minute, other.minute) && Kotlin.equals(this.second, other.second) && Kotlin.equals(this.centiseconds, other.centiseconds) && Kotlin.equals(this.hundredsofMicroseconds, other.hundredsofMicroseconds) && Kotlin.equals(this.microseconds, other.microseconds)))));
  };
  function ISO2$UdfPrimaryVolumeDescriptor(descriptorTag, volumeDescriptorSequenceNumber, primaryVolumeDescriptorNumber, volumeId, volumeSequenceNumber, maximumVolumeSequenceNumber, interchangeLevel, maximumInterchangeLevel, characterSetList, maximumCharacterSetList, volumeSetIdentifier, descriptorCharacterSet, explanatoryCharacterSet, volumeAbstract, volumeCopyrightNotice, applicationIdentifier, recordingDateandTime, implementationIdentifier, implementationUse, predecessorVolumeDescriptorSequenceLocation, flags) {
    this.descriptorTag = descriptorTag;
    this.volumeDescriptorSequenceNumber = volumeDescriptorSequenceNumber;
    this.primaryVolumeDescriptorNumber = primaryVolumeDescriptorNumber;
    this.volumeId = volumeId;
    this.volumeSequenceNumber = volumeSequenceNumber;
    this.maximumVolumeSequenceNumber = maximumVolumeSequenceNumber;
    this.interchangeLevel = interchangeLevel;
    this.maximumInterchangeLevel = maximumInterchangeLevel;
    this.characterSetList = characterSetList;
    this.maximumCharacterSetList = maximumCharacterSetList;
    this.volumeSetIdentifier = volumeSetIdentifier;
    this.descriptorCharacterSet = descriptorCharacterSet;
    this.explanatoryCharacterSet = explanatoryCharacterSet;
    this.volumeAbstract = volumeAbstract;
    this.volumeCopyrightNotice = volumeCopyrightNotice;
    this.applicationIdentifier = applicationIdentifier;
    this.recordingDateandTime = recordingDateandTime;
    this.implementationIdentifier = implementationIdentifier;
    this.implementationUse = implementationUse;
    this.predecessorVolumeDescriptorSequenceLocation = predecessorVolumeDescriptorSequenceLocation;
    this.flags = flags;
  }
  ISO2$UdfPrimaryVolumeDescriptor.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UdfPrimaryVolumeDescriptor',
    interfaces: []
  };
  function ISO2$ISO2$UdfPrimaryVolumeDescriptor_init(s, $this) {
    $this = $this || Object.create(ISO2$UdfPrimaryVolumeDescriptor.prototype);
    ISO2$UdfPrimaryVolumeDescriptor.call($this, ISO2$ISO2$UdfDescriptorTag_init(s), readS32_le_0(s), readS32_le_0(s), readUdfDString(s, 32), readU16_le(s), readU16_le(s), readU16_le(s), readU16_le(s), readS32_le_0(s), readS32_le_0(s), readUdfDString(s, 128), ISO2$ISO2$UdfCharspec_init(s), ISO2$ISO2$UdfCharspec_init(s), ISO2$ISO2$UdfExtent_init(s), ISO2$ISO2$UdfExtent_init(s), ISO2$ISO2$UdfEntityId_init(s), ISO2$ISO2$UdfTimestamp_init(s), ISO2$ISO2$UdfEntityId_init(s), readBytesExact_0(s, 64), readS32_le_0(s), readU16_le(s));
    return $this;
  }
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component1 = function () {
    return this.descriptorTag;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component2 = function () {
    return this.volumeDescriptorSequenceNumber;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component3 = function () {
    return this.primaryVolumeDescriptorNumber;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component4 = function () {
    return this.volumeId;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component5 = function () {
    return this.volumeSequenceNumber;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component6 = function () {
    return this.maximumVolumeSequenceNumber;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component7 = function () {
    return this.interchangeLevel;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component8 = function () {
    return this.maximumInterchangeLevel;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component9 = function () {
    return this.characterSetList;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component10 = function () {
    return this.maximumCharacterSetList;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component11 = function () {
    return this.volumeSetIdentifier;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component12 = function () {
    return this.descriptorCharacterSet;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component13 = function () {
    return this.explanatoryCharacterSet;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component14 = function () {
    return this.volumeAbstract;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component15 = function () {
    return this.volumeCopyrightNotice;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component16 = function () {
    return this.applicationIdentifier;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component17 = function () {
    return this.recordingDateandTime;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component18 = function () {
    return this.implementationIdentifier;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component19 = function () {
    return this.implementationUse;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component20 = function () {
    return this.predecessorVolumeDescriptorSequenceLocation;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.component21 = function () {
    return this.flags;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.copy_xc76y9$ = function (descriptorTag, volumeDescriptorSequenceNumber, primaryVolumeDescriptorNumber, volumeId, volumeSequenceNumber, maximumVolumeSequenceNumber, interchangeLevel, maximumInterchangeLevel, characterSetList, maximumCharacterSetList, volumeSetIdentifier, descriptorCharacterSet, explanatoryCharacterSet, volumeAbstract, volumeCopyrightNotice, applicationIdentifier, recordingDateandTime, implementationIdentifier, implementationUse, predecessorVolumeDescriptorSequenceLocation, flags) {
    return new ISO2$UdfPrimaryVolumeDescriptor(descriptorTag === void 0 ? this.descriptorTag : descriptorTag, volumeDescriptorSequenceNumber === void 0 ? this.volumeDescriptorSequenceNumber : volumeDescriptorSequenceNumber, primaryVolumeDescriptorNumber === void 0 ? this.primaryVolumeDescriptorNumber : primaryVolumeDescriptorNumber, volumeId === void 0 ? this.volumeId : volumeId, volumeSequenceNumber === void 0 ? this.volumeSequenceNumber : volumeSequenceNumber, maximumVolumeSequenceNumber === void 0 ? this.maximumVolumeSequenceNumber : maximumVolumeSequenceNumber, interchangeLevel === void 0 ? this.interchangeLevel : interchangeLevel, maximumInterchangeLevel === void 0 ? this.maximumInterchangeLevel : maximumInterchangeLevel, characterSetList === void 0 ? this.characterSetList : characterSetList, maximumCharacterSetList === void 0 ? this.maximumCharacterSetList : maximumCharacterSetList, volumeSetIdentifier === void 0 ? this.volumeSetIdentifier : volumeSetIdentifier, descriptorCharacterSet === void 0 ? this.descriptorCharacterSet : descriptorCharacterSet, explanatoryCharacterSet === void 0 ? this.explanatoryCharacterSet : explanatoryCharacterSet, volumeAbstract === void 0 ? this.volumeAbstract : volumeAbstract, volumeCopyrightNotice === void 0 ? this.volumeCopyrightNotice : volumeCopyrightNotice, applicationIdentifier === void 0 ? this.applicationIdentifier : applicationIdentifier, recordingDateandTime === void 0 ? this.recordingDateandTime : recordingDateandTime, implementationIdentifier === void 0 ? this.implementationIdentifier : implementationIdentifier, implementationUse === void 0 ? this.implementationUse : implementationUse, predecessorVolumeDescriptorSequenceLocation === void 0 ? this.predecessorVolumeDescriptorSequenceLocation : predecessorVolumeDescriptorSequenceLocation, flags === void 0 ? this.flags : flags);
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.toString = function () {
    return 'UdfPrimaryVolumeDescriptor(descriptorTag=' + Kotlin.toString(this.descriptorTag) + (', volumeDescriptorSequenceNumber=' + Kotlin.toString(this.volumeDescriptorSequenceNumber)) + (', primaryVolumeDescriptorNumber=' + Kotlin.toString(this.primaryVolumeDescriptorNumber)) + (', volumeId=' + Kotlin.toString(this.volumeId)) + (', volumeSequenceNumber=' + Kotlin.toString(this.volumeSequenceNumber)) + (', maximumVolumeSequenceNumber=' + Kotlin.toString(this.maximumVolumeSequenceNumber)) + (', interchangeLevel=' + Kotlin.toString(this.interchangeLevel)) + (', maximumInterchangeLevel=' + Kotlin.toString(this.maximumInterchangeLevel)) + (', characterSetList=' + Kotlin.toString(this.characterSetList)) + (', maximumCharacterSetList=' + Kotlin.toString(this.maximumCharacterSetList)) + (', volumeSetIdentifier=' + Kotlin.toString(this.volumeSetIdentifier)) + (', descriptorCharacterSet=' + Kotlin.toString(this.descriptorCharacterSet)) + (', explanatoryCharacterSet=' + Kotlin.toString(this.explanatoryCharacterSet)) + (', volumeAbstract=' + Kotlin.toString(this.volumeAbstract)) + (', volumeCopyrightNotice=' + Kotlin.toString(this.volumeCopyrightNotice)) + (', applicationIdentifier=' + Kotlin.toString(this.applicationIdentifier)) + (', recordingDateandTime=' + Kotlin.toString(this.recordingDateandTime)) + (', implementationIdentifier=' + Kotlin.toString(this.implementationIdentifier)) + (', implementationUse=' + Kotlin.toString(this.implementationUse)) + (', predecessorVolumeDescriptorSequenceLocation=' + Kotlin.toString(this.predecessorVolumeDescriptorSequenceLocation)) + (', flags=' + Kotlin.toString(this.flags)) + ')';
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.descriptorTag) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeDescriptorSequenceNumber) | 0;
    result = result * 31 + Kotlin.hashCode(this.primaryVolumeDescriptorNumber) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeId) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeSequenceNumber) | 0;
    result = result * 31 + Kotlin.hashCode(this.maximumVolumeSequenceNumber) | 0;
    result = result * 31 + Kotlin.hashCode(this.interchangeLevel) | 0;
    result = result * 31 + Kotlin.hashCode(this.maximumInterchangeLevel) | 0;
    result = result * 31 + Kotlin.hashCode(this.characterSetList) | 0;
    result = result * 31 + Kotlin.hashCode(this.maximumCharacterSetList) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeSetIdentifier) | 0;
    result = result * 31 + Kotlin.hashCode(this.descriptorCharacterSet) | 0;
    result = result * 31 + Kotlin.hashCode(this.explanatoryCharacterSet) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeAbstract) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeCopyrightNotice) | 0;
    result = result * 31 + Kotlin.hashCode(this.applicationIdentifier) | 0;
    result = result * 31 + Kotlin.hashCode(this.recordingDateandTime) | 0;
    result = result * 31 + Kotlin.hashCode(this.implementationIdentifier) | 0;
    result = result * 31 + Kotlin.hashCode(this.implementationUse) | 0;
    result = result * 31 + Kotlin.hashCode(this.predecessorVolumeDescriptorSequenceLocation) | 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    return result;
  };
  ISO2$UdfPrimaryVolumeDescriptor.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.descriptorTag, other.descriptorTag) && Kotlin.equals(this.volumeDescriptorSequenceNumber, other.volumeDescriptorSequenceNumber) && Kotlin.equals(this.primaryVolumeDescriptorNumber, other.primaryVolumeDescriptorNumber) && Kotlin.equals(this.volumeId, other.volumeId) && Kotlin.equals(this.volumeSequenceNumber, other.volumeSequenceNumber) && Kotlin.equals(this.maximumVolumeSequenceNumber, other.maximumVolumeSequenceNumber) && Kotlin.equals(this.interchangeLevel, other.interchangeLevel) && Kotlin.equals(this.maximumInterchangeLevel, other.maximumInterchangeLevel) && Kotlin.equals(this.characterSetList, other.characterSetList) && Kotlin.equals(this.maximumCharacterSetList, other.maximumCharacterSetList) && Kotlin.equals(this.volumeSetIdentifier, other.volumeSetIdentifier) && Kotlin.equals(this.descriptorCharacterSet, other.descriptorCharacterSet) && Kotlin.equals(this.explanatoryCharacterSet, other.explanatoryCharacterSet) && Kotlin.equals(this.volumeAbstract, other.volumeAbstract) && Kotlin.equals(this.volumeCopyrightNotice, other.volumeCopyrightNotice) && Kotlin.equals(this.applicationIdentifier, other.applicationIdentifier) && Kotlin.equals(this.recordingDateandTime, other.recordingDateandTime) && Kotlin.equals(this.implementationIdentifier, other.implementationIdentifier) && Kotlin.equals(this.implementationUse, other.implementationUse) && Kotlin.equals(this.predecessorVolumeDescriptorSequenceLocation, other.predecessorVolumeDescriptorSequenceLocation) && Kotlin.equals(this.flags, other.flags)))));
  };
  function ISO2$PrimaryVolumeDescriptor(volumeDescriptorHeader, pad1, systemId, volumeId, pad2, volumeSpaceSize, pad3, volumeSetSize, volumeSequenceNumber, logicalBlockSize, pathTableSize, typeLPathTable, optType1PathTable, typeMPathTable, optTypeMPathTable, rootDirectoryRecord, volumeSetId, publisherId, preparerId, applicationId, copyrightFileId, abstractFileId, bibliographicFileId, creationDate, modificationDate, expirationDate, effectiveDate, fileStructureVersion, pad5, applicationData, pad6) {
    this.volumeDescriptorHeader = volumeDescriptorHeader;
    this.pad1 = pad1;
    this.systemId = systemId;
    this.volumeId = volumeId;
    this.pad2 = pad2;
    this.volumeSpaceSize = volumeSpaceSize;
    this.pad3 = pad3;
    this.volumeSetSize = volumeSetSize;
    this.volumeSequenceNumber = volumeSequenceNumber;
    this.logicalBlockSize = logicalBlockSize;
    this.pathTableSize = pathTableSize;
    this.typeLPathTable = typeLPathTable;
    this.optType1PathTable = optType1PathTable;
    this.typeMPathTable = typeMPathTable;
    this.optTypeMPathTable = optTypeMPathTable;
    this.rootDirectoryRecord = rootDirectoryRecord;
    this.volumeSetId = volumeSetId;
    this.publisherId = publisherId;
    this.preparerId = preparerId;
    this.applicationId = applicationId;
    this.copyrightFileId = copyrightFileId;
    this.abstractFileId = abstractFileId;
    this.bibliographicFileId = bibliographicFileId;
    this.creationDate = creationDate;
    this.modificationDate = modificationDate;
    this.expirationDate = expirationDate;
    this.effectiveDate = effectiveDate;
    this.fileStructureVersion = fileStructureVersion;
    this.pad5 = pad5;
    this.applicationData = applicationData;
    this.pad6 = pad6;
  }
  ISO2$PrimaryVolumeDescriptor.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PrimaryVolumeDescriptor',
    interfaces: []
  };
  function ISO2$ISO2$PrimaryVolumeDescriptor_init(s, $this) {
    $this = $this || Object.create(ISO2$PrimaryVolumeDescriptor.prototype);
    ISO2$PrimaryVolumeDescriptor.call($this, ISO2$ISO2$VolumeDescriptorHeader_init(s), readU8_0(s), readStringz_1(s, 32, ISO2_getInstance().CHARSET), readStringz_1(s, 32, ISO2_getInstance().CHARSET), readS64_le_0(s), ISO2_getInstance().readU32_le_be_ucmi9i$(s), ISO2_getInstance().readLongArray_le_hsu5ns$(s, 4), ISO2_getInstance().readU16_le_be_ucmi9i$(s), ISO2_getInstance().readU16_le_be_ucmi9i$(s), ISO2_getInstance().readU16_le_be_ucmi9i$(s), ISO2_getInstance().readU32_le_be_ucmi9i$(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), readS32_le_0(s), ensureNotNull(ISO2$DirectoryRecord$Companion_getInstance().invoke_39qel5$(s)), readStringz_1(s, 128, ISO2_getInstance().CHARSET), readStringz_1(s, 128, ISO2_getInstance().CHARSET), readStringz_1(s, 128, ISO2_getInstance().CHARSET), readStringz_1(s, 128, ISO2_getInstance().CHARSET), readStringz_1(s, 37, ISO2_getInstance().CHARSET), readStringz_1(s, 37, ISO2_getInstance().CHARSET), readStringz_1(s, 37, ISO2_getInstance().CHARSET), ISO2$ISO2$IsoDate_init(s), ISO2$ISO2$IsoDate_init(s), ISO2$ISO2$IsoDate_init(s), ISO2$ISO2$IsoDate_init(s), readU8_0(s), readU8_0(s), readBytes(s, 512), readBytes(s, 653));
    return $this;
  }
  ISO2$PrimaryVolumeDescriptor.prototype.component1 = function () {
    return this.volumeDescriptorHeader;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component2 = function () {
    return this.pad1;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component3 = function () {
    return this.systemId;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component4 = function () {
    return this.volumeId;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component5 = function () {
    return this.pad2;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component6 = function () {
    return this.volumeSpaceSize;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component7 = function () {
    return this.pad3;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component8 = function () {
    return this.volumeSetSize;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component9 = function () {
    return this.volumeSequenceNumber;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component10 = function () {
    return this.logicalBlockSize;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component11 = function () {
    return this.pathTableSize;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component12 = function () {
    return this.typeLPathTable;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component13 = function () {
    return this.optType1PathTable;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component14 = function () {
    return this.typeMPathTable;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component15 = function () {
    return this.optTypeMPathTable;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component16 = function () {
    return this.rootDirectoryRecord;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component17 = function () {
    return this.volumeSetId;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component18 = function () {
    return this.publisherId;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component19 = function () {
    return this.preparerId;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component20 = function () {
    return this.applicationId;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component21 = function () {
    return this.copyrightFileId;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component22 = function () {
    return this.abstractFileId;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component23 = function () {
    return this.bibliographicFileId;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component24 = function () {
    return this.creationDate;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component25 = function () {
    return this.modificationDate;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component26 = function () {
    return this.expirationDate;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component27 = function () {
    return this.effectiveDate;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component28 = function () {
    return this.fileStructureVersion;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component29 = function () {
    return this.pad5;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component30 = function () {
    return this.applicationData;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.component31 = function () {
    return this.pad6;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.copy_st023v$ = function (volumeDescriptorHeader, pad1, systemId, volumeId, pad2, volumeSpaceSize, pad3, volumeSetSize, volumeSequenceNumber, logicalBlockSize, pathTableSize, typeLPathTable, optType1PathTable, typeMPathTable, optTypeMPathTable, rootDirectoryRecord, volumeSetId, publisherId, preparerId, applicationId, copyrightFileId, abstractFileId, bibliographicFileId, creationDate, modificationDate, expirationDate, effectiveDate, fileStructureVersion, pad5, applicationData, pad6) {
    return new ISO2$PrimaryVolumeDescriptor(volumeDescriptorHeader === void 0 ? this.volumeDescriptorHeader : volumeDescriptorHeader, pad1 === void 0 ? this.pad1 : pad1, systemId === void 0 ? this.systemId : systemId, volumeId === void 0 ? this.volumeId : volumeId, pad2 === void 0 ? this.pad2 : pad2, volumeSpaceSize === void 0 ? this.volumeSpaceSize : volumeSpaceSize, pad3 === void 0 ? this.pad3 : pad3, volumeSetSize === void 0 ? this.volumeSetSize : volumeSetSize, volumeSequenceNumber === void 0 ? this.volumeSequenceNumber : volumeSequenceNumber, logicalBlockSize === void 0 ? this.logicalBlockSize : logicalBlockSize, pathTableSize === void 0 ? this.pathTableSize : pathTableSize, typeLPathTable === void 0 ? this.typeLPathTable : typeLPathTable, optType1PathTable === void 0 ? this.optType1PathTable : optType1PathTable, typeMPathTable === void 0 ? this.typeMPathTable : typeMPathTable, optTypeMPathTable === void 0 ? this.optTypeMPathTable : optTypeMPathTable, rootDirectoryRecord === void 0 ? this.rootDirectoryRecord : rootDirectoryRecord, volumeSetId === void 0 ? this.volumeSetId : volumeSetId, publisherId === void 0 ? this.publisherId : publisherId, preparerId === void 0 ? this.preparerId : preparerId, applicationId === void 0 ? this.applicationId : applicationId, copyrightFileId === void 0 ? this.copyrightFileId : copyrightFileId, abstractFileId === void 0 ? this.abstractFileId : abstractFileId, bibliographicFileId === void 0 ? this.bibliographicFileId : bibliographicFileId, creationDate === void 0 ? this.creationDate : creationDate, modificationDate === void 0 ? this.modificationDate : modificationDate, expirationDate === void 0 ? this.expirationDate : expirationDate, effectiveDate === void 0 ? this.effectiveDate : effectiveDate, fileStructureVersion === void 0 ? this.fileStructureVersion : fileStructureVersion, pad5 === void 0 ? this.pad5 : pad5, applicationData === void 0 ? this.applicationData : applicationData, pad6 === void 0 ? this.pad6 : pad6);
  };
  ISO2$PrimaryVolumeDescriptor.prototype.toString = function () {
    return 'PrimaryVolumeDescriptor(volumeDescriptorHeader=' + Kotlin.toString(this.volumeDescriptorHeader) + (', pad1=' + Kotlin.toString(this.pad1)) + (', systemId=' + Kotlin.toString(this.systemId)) + (', volumeId=' + Kotlin.toString(this.volumeId)) + (', pad2=' + Kotlin.toString(this.pad2)) + (', volumeSpaceSize=' + Kotlin.toString(this.volumeSpaceSize)) + (', pad3=' + Kotlin.toString(this.pad3)) + (', volumeSetSize=' + Kotlin.toString(this.volumeSetSize)) + (', volumeSequenceNumber=' + Kotlin.toString(this.volumeSequenceNumber)) + (', logicalBlockSize=' + Kotlin.toString(this.logicalBlockSize)) + (', pathTableSize=' + Kotlin.toString(this.pathTableSize)) + (', typeLPathTable=' + Kotlin.toString(this.typeLPathTable)) + (', optType1PathTable=' + Kotlin.toString(this.optType1PathTable)) + (', typeMPathTable=' + Kotlin.toString(this.typeMPathTable)) + (', optTypeMPathTable=' + Kotlin.toString(this.optTypeMPathTable)) + (', rootDirectoryRecord=' + Kotlin.toString(this.rootDirectoryRecord)) + (', volumeSetId=' + Kotlin.toString(this.volumeSetId)) + (', publisherId=' + Kotlin.toString(this.publisherId)) + (', preparerId=' + Kotlin.toString(this.preparerId)) + (', applicationId=' + Kotlin.toString(this.applicationId)) + (', copyrightFileId=' + Kotlin.toString(this.copyrightFileId)) + (', abstractFileId=' + Kotlin.toString(this.abstractFileId)) + (', bibliographicFileId=' + Kotlin.toString(this.bibliographicFileId)) + (', creationDate=' + Kotlin.toString(this.creationDate)) + (', modificationDate=' + Kotlin.toString(this.modificationDate)) + (', expirationDate=' + Kotlin.toString(this.expirationDate)) + (', effectiveDate=' + Kotlin.toString(this.effectiveDate)) + (', fileStructureVersion=' + Kotlin.toString(this.fileStructureVersion)) + (', pad5=' + Kotlin.toString(this.pad5)) + (', applicationData=' + Kotlin.toString(this.applicationData)) + (', pad6=' + Kotlin.toString(this.pad6)) + ')';
  };
  ISO2$PrimaryVolumeDescriptor.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.volumeDescriptorHeader) | 0;
    result = result * 31 + Kotlin.hashCode(this.pad1) | 0;
    result = result * 31 + Kotlin.hashCode(this.systemId) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeId) | 0;
    result = result * 31 + Kotlin.hashCode(this.pad2) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeSpaceSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.pad3) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeSetSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeSequenceNumber) | 0;
    result = result * 31 + Kotlin.hashCode(this.logicalBlockSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.pathTableSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.typeLPathTable) | 0;
    result = result * 31 + Kotlin.hashCode(this.optType1PathTable) | 0;
    result = result * 31 + Kotlin.hashCode(this.typeMPathTable) | 0;
    result = result * 31 + Kotlin.hashCode(this.optTypeMPathTable) | 0;
    result = result * 31 + Kotlin.hashCode(this.rootDirectoryRecord) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeSetId) | 0;
    result = result * 31 + Kotlin.hashCode(this.publisherId) | 0;
    result = result * 31 + Kotlin.hashCode(this.preparerId) | 0;
    result = result * 31 + Kotlin.hashCode(this.applicationId) | 0;
    result = result * 31 + Kotlin.hashCode(this.copyrightFileId) | 0;
    result = result * 31 + Kotlin.hashCode(this.abstractFileId) | 0;
    result = result * 31 + Kotlin.hashCode(this.bibliographicFileId) | 0;
    result = result * 31 + Kotlin.hashCode(this.creationDate) | 0;
    result = result * 31 + Kotlin.hashCode(this.modificationDate) | 0;
    result = result * 31 + Kotlin.hashCode(this.expirationDate) | 0;
    result = result * 31 + Kotlin.hashCode(this.effectiveDate) | 0;
    result = result * 31 + Kotlin.hashCode(this.fileStructureVersion) | 0;
    result = result * 31 + Kotlin.hashCode(this.pad5) | 0;
    result = result * 31 + Kotlin.hashCode(this.applicationData) | 0;
    result = result * 31 + Kotlin.hashCode(this.pad6) | 0;
    return result;
  };
  ISO2$PrimaryVolumeDescriptor.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.volumeDescriptorHeader, other.volumeDescriptorHeader) && Kotlin.equals(this.pad1, other.pad1) && Kotlin.equals(this.systemId, other.systemId) && Kotlin.equals(this.volumeId, other.volumeId) && Kotlin.equals(this.pad2, other.pad2) && Kotlin.equals(this.volumeSpaceSize, other.volumeSpaceSize) && Kotlin.equals(this.pad3, other.pad3) && Kotlin.equals(this.volumeSetSize, other.volumeSetSize) && Kotlin.equals(this.volumeSequenceNumber, other.volumeSequenceNumber) && Kotlin.equals(this.logicalBlockSize, other.logicalBlockSize) && Kotlin.equals(this.pathTableSize, other.pathTableSize) && Kotlin.equals(this.typeLPathTable, other.typeLPathTable) && Kotlin.equals(this.optType1PathTable, other.optType1PathTable) && Kotlin.equals(this.typeMPathTable, other.typeMPathTable) && Kotlin.equals(this.optTypeMPathTable, other.optTypeMPathTable) && Kotlin.equals(this.rootDirectoryRecord, other.rootDirectoryRecord) && Kotlin.equals(this.volumeSetId, other.volumeSetId) && Kotlin.equals(this.publisherId, other.publisherId) && Kotlin.equals(this.preparerId, other.preparerId) && Kotlin.equals(this.applicationId, other.applicationId) && Kotlin.equals(this.copyrightFileId, other.copyrightFileId) && Kotlin.equals(this.abstractFileId, other.abstractFileId) && Kotlin.equals(this.bibliographicFileId, other.bibliographicFileId) && Kotlin.equals(this.creationDate, other.creationDate) && Kotlin.equals(this.modificationDate, other.modificationDate) && Kotlin.equals(this.expirationDate, other.expirationDate) && Kotlin.equals(this.effectiveDate, other.effectiveDate) && Kotlin.equals(this.fileStructureVersion, other.fileStructureVersion) && Kotlin.equals(this.pad5, other.pad5) && Kotlin.equals(this.applicationData, other.applicationData) && Kotlin.equals(this.pad6, other.pad6)))));
  };
  function ISO2$VolumeDescriptorHeader(type, id, version) {
    this.type = type;
    this.id = id;
    this.version = version;
  }
  function ISO2$VolumeDescriptorHeader$TypeEnum(id) {
    ISO2$VolumeDescriptorHeader$TypeEnum$Companion_getInstance();
    this.id = id;
  }
  function ISO2$VolumeDescriptorHeader$TypeEnum$Companion() {
    ISO2$VolumeDescriptorHeader$TypeEnum$Companion_instance = this;
    this.BootRecord = new ISO2$VolumeDescriptorHeader$TypeEnum(0);
    this.VolumePartitionSetTerminator = new ISO2$VolumeDescriptorHeader$TypeEnum(255);
    this.PrimaryVolumeDescriptor = new ISO2$VolumeDescriptorHeader$TypeEnum(1);
    this.SupplementaryVolumeDescriptor = new ISO2$VolumeDescriptorHeader$TypeEnum(2);
    this.VolumePartitionDescriptor = new ISO2$VolumeDescriptorHeader$TypeEnum(3);
  }
  ISO2$VolumeDescriptorHeader$TypeEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ISO2$VolumeDescriptorHeader$TypeEnum$Companion_instance = null;
  function ISO2$VolumeDescriptorHeader$TypeEnum$Companion_getInstance() {
    if (ISO2$VolumeDescriptorHeader$TypeEnum$Companion_instance === null) {
      new ISO2$VolumeDescriptorHeader$TypeEnum$Companion();
    }
    return ISO2$VolumeDescriptorHeader$TypeEnum$Companion_instance;
  }
  ISO2$VolumeDescriptorHeader$TypeEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TypeEnum',
    interfaces: []
  };
  ISO2$VolumeDescriptorHeader$TypeEnum.prototype.component1 = function () {
    return this.id;
  };
  ISO2$VolumeDescriptorHeader$TypeEnum.prototype.copy_za3lpa$ = function (id) {
    return new ISO2$VolumeDescriptorHeader$TypeEnum(id === void 0 ? this.id : id);
  };
  ISO2$VolumeDescriptorHeader$TypeEnum.prototype.toString = function () {
    return 'TypeEnum(id=' + Kotlin.toString(this.id) + ')';
  };
  ISO2$VolumeDescriptorHeader$TypeEnum.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  ISO2$VolumeDescriptorHeader$TypeEnum.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  ISO2$VolumeDescriptorHeader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VolumeDescriptorHeader',
    interfaces: []
  };
  function ISO2$ISO2$VolumeDescriptorHeader_init(s, $this) {
    $this = $this || Object.create(ISO2$VolumeDescriptorHeader.prototype);
    ISO2$VolumeDescriptorHeader.call($this, new ISO2$VolumeDescriptorHeader$TypeEnum(readU8_0(s)), readStringz_1(s, 5, ISO2_getInstance().CHARSET), readU8_0(s));
    return $this;
  }
  ISO2$VolumeDescriptorHeader.prototype.component1 = function () {
    return this.type;
  };
  ISO2$VolumeDescriptorHeader.prototype.component2 = function () {
    return this.id;
  };
  ISO2$VolumeDescriptorHeader.prototype.component3 = function () {
    return this.version;
  };
  ISO2$VolumeDescriptorHeader.prototype.copy_fk1k6j$ = function (type, id, version) {
    return new ISO2$VolumeDescriptorHeader(type === void 0 ? this.type : type, id === void 0 ? this.id : id, version === void 0 ? this.version : version);
  };
  ISO2$VolumeDescriptorHeader.prototype.toString = function () {
    return 'VolumeDescriptorHeader(type=' + Kotlin.toString(this.type) + (', id=' + Kotlin.toString(this.id)) + (', version=' + Kotlin.toString(this.version)) + ')';
  };
  ISO2$VolumeDescriptorHeader.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    result = result * 31 + Kotlin.hashCode(this.version) | 0;
    return result;
  };
  ISO2$VolumeDescriptorHeader.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.type, other.type) && Kotlin.equals(this.id, other.id) && Kotlin.equals(this.version, other.version)))));
  };
  function ISO2$IsoDate(data) {
    this.data = data;
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5;
    this.year = (tmp$ = toIntOrNull(this.data.substring(0, 4))) != null ? tmp$ : 0;
    this.month = (tmp$_0 = toIntOrNull(this.data.substring(4, 6))) != null ? tmp$_0 : 0;
    this.day = (tmp$_1 = toIntOrNull(this.data.substring(6, 8))) != null ? tmp$_1 : 0;
    this.hour = (tmp$_2 = toIntOrNull(this.data.substring(8, 10))) != null ? tmp$_2 : 0;
    this.minute = (tmp$_3 = toIntOrNull(this.data.substring(10, 12))) != null ? tmp$_3 : 0;
    this.second = (tmp$_4 = toIntOrNull(this.data.substring(12, 14))) != null ? tmp$_4 : 0;
    this.hsecond = (tmp$_5 = toIntOrNull(this.data.substring(14, 16))) != null ? tmp$_5 : 0;
  }
  ISO2$IsoDate.prototype.toString = function () {
    return format_0('IsoDate(%04d-%02d-%02d %02d:%02d:%02d.%d)', [this.year, this.month, this.day, this.hour, this.minute, this.second, this.hsecond]);
  };
  ISO2$IsoDate.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IsoDate',
    interfaces: []
  };
  function ISO2$ISO2$IsoDate_init(s, $this) {
    $this = $this || Object.create(ISO2$IsoDate.prototype);
    ISO2$IsoDate.call($this, readString(s, 17, lang.ASCII));
    return $this;
  }
  ISO2$IsoDate.prototype.component1 = function () {
    return this.data;
  };
  ISO2$IsoDate.prototype.copy_61zpoe$ = function (data) {
    return new ISO2$IsoDate(data === void 0 ? this.data : data);
  };
  ISO2$IsoDate.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.data) | 0;
    return result;
  };
  ISO2$IsoDate.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.data, other.data))));
  };
  function ISO2$DateStruct(year, month, day, hour, minute, second, offset) {
    this.year = year;
    this.month = month;
    this.day = day;
    this.hour = hour;
    this.minute = minute;
    this.second = second;
    this.offset = offset;
    this.fullYear = 1900 + this.year | 0;
  }
  ISO2$DateStruct.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DateStruct',
    interfaces: []
  };
  function ISO2$ISO2$DateStruct_init(s, $this) {
    $this = $this || Object.create(ISO2$DateStruct.prototype);
    ISO2$DateStruct.call($this, readU8_0(s), readU8_0(s), readU8_0(s), readU8_0(s), readU8_0(s), readU8_0(s), readU8_0(s));
    return $this;
  }
  ISO2$DateStruct.prototype.component1 = function () {
    return this.year;
  };
  ISO2$DateStruct.prototype.component2 = function () {
    return this.month;
  };
  ISO2$DateStruct.prototype.component3 = function () {
    return this.day;
  };
  ISO2$DateStruct.prototype.component4 = function () {
    return this.hour;
  };
  ISO2$DateStruct.prototype.component5 = function () {
    return this.minute;
  };
  ISO2$DateStruct.prototype.component6 = function () {
    return this.second;
  };
  ISO2$DateStruct.prototype.component7 = function () {
    return this.offset;
  };
  ISO2$DateStruct.prototype.copy_ui44o2$ = function (year, month, day, hour, minute, second, offset) {
    return new ISO2$DateStruct(year === void 0 ? this.year : year, month === void 0 ? this.month : month, day === void 0 ? this.day : day, hour === void 0 ? this.hour : hour, minute === void 0 ? this.minute : minute, second === void 0 ? this.second : second, offset === void 0 ? this.offset : offset);
  };
  ISO2$DateStruct.prototype.toString = function () {
    return 'DateStruct(year=' + Kotlin.toString(this.year) + (', month=' + Kotlin.toString(this.month)) + (', day=' + Kotlin.toString(this.day)) + (', hour=' + Kotlin.toString(this.hour)) + (', minute=' + Kotlin.toString(this.minute)) + (', second=' + Kotlin.toString(this.second)) + (', offset=' + Kotlin.toString(this.offset)) + ')';
  };
  ISO2$DateStruct.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.year) | 0;
    result = result * 31 + Kotlin.hashCode(this.month) | 0;
    result = result * 31 + Kotlin.hashCode(this.day) | 0;
    result = result * 31 + Kotlin.hashCode(this.hour) | 0;
    result = result * 31 + Kotlin.hashCode(this.minute) | 0;
    result = result * 31 + Kotlin.hashCode(this.second) | 0;
    result = result * 31 + Kotlin.hashCode(this.offset) | 0;
    return result;
  };
  ISO2$DateStruct.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.year, other.year) && Kotlin.equals(this.month, other.month) && Kotlin.equals(this.day, other.day) && Kotlin.equals(this.hour, other.hour) && Kotlin.equals(this.minute, other.minute) && Kotlin.equals(this.second, other.second) && Kotlin.equals(this.offset, other.offset)))));
  };
  function ISO2$DirectoryRecord(length, extendedAttributeLength, extent, size, date, flags, fileUnitSize, interleave, volumeSequenceNumber, rawName) {
    ISO2$DirectoryRecord$Companion_getInstance();
    this.length = length;
    this.extendedAttributeLength = extendedAttributeLength;
    this.extent = extent;
    this.size = size;
    this.date = date;
    this.flags = flags;
    this.fileUnitSize = fileUnitSize;
    this.interleave = interleave;
    this.volumeSequenceNumber = volumeSequenceNumber;
    this.rawName = rawName;
    this.name = substringBefore(this.rawName, 59);
    this.offset = Kotlin.Long.fromInt(this.extent).multiply(Kotlin.Long.fromInt(2048));
    this.isDirectory = (this.flags & 2) !== 0;
  }
  function ISO2$DirectoryRecord$Companion() {
    ISO2$DirectoryRecord$Companion_instance = this;
  }
  ISO2$DirectoryRecord$Companion.prototype.invoke_39qel5$ = function (_s) {
    var length = readU8_0(_s);
    if (length <= 0) {
      return null;
    }
     else {
      var s = readStream(_s, Kotlin.Long.fromInt(length - 1 | 0));
      var dr = new ISO2$DirectoryRecord(length, readU8_0(s), ISO2_getInstance().readU32_le_be_ucmi9i$(s), ISO2_getInstance().readU32_le_be_ucmi9i$(s), ISO2$ISO2$DateStruct_init(s), readU8_0(s), readU8_0(s), readU8_0(s), ISO2_getInstance().readU16_le_be_ucmi9i$(s), ISO2_getInstance().readTextWithLength_ucmi9i$(s));
      return dr;
    }
  };
  ISO2$DirectoryRecord$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ISO2$DirectoryRecord$Companion_instance = null;
  function ISO2$DirectoryRecord$Companion_getInstance() {
    if (ISO2$DirectoryRecord$Companion_instance === null) {
      new ISO2$DirectoryRecord$Companion();
    }
    return ISO2$DirectoryRecord$Companion_instance;
  }
  ISO2$DirectoryRecord.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DirectoryRecord',
    interfaces: []
  };
  ISO2$DirectoryRecord.prototype.component1 = function () {
    return this.length;
  };
  ISO2$DirectoryRecord.prototype.component2 = function () {
    return this.extendedAttributeLength;
  };
  ISO2$DirectoryRecord.prototype.component3 = function () {
    return this.extent;
  };
  ISO2$DirectoryRecord.prototype.component4 = function () {
    return this.size;
  };
  ISO2$DirectoryRecord.prototype.component5 = function () {
    return this.date;
  };
  ISO2$DirectoryRecord.prototype.component6 = function () {
    return this.flags;
  };
  ISO2$DirectoryRecord.prototype.component7 = function () {
    return this.fileUnitSize;
  };
  ISO2$DirectoryRecord.prototype.component8 = function () {
    return this.interleave;
  };
  ISO2$DirectoryRecord.prototype.component9 = function () {
    return this.volumeSequenceNumber;
  };
  ISO2$DirectoryRecord.prototype.component10 = function () {
    return this.rawName;
  };
  ISO2$DirectoryRecord.prototype.copy_hg16wv$ = function (length, extendedAttributeLength, extent, size, date, flags, fileUnitSize, interleave, volumeSequenceNumber, rawName) {
    return new ISO2$DirectoryRecord(length === void 0 ? this.length : length, extendedAttributeLength === void 0 ? this.extendedAttributeLength : extendedAttributeLength, extent === void 0 ? this.extent : extent, size === void 0 ? this.size : size, date === void 0 ? this.date : date, flags === void 0 ? this.flags : flags, fileUnitSize === void 0 ? this.fileUnitSize : fileUnitSize, interleave === void 0 ? this.interleave : interleave, volumeSequenceNumber === void 0 ? this.volumeSequenceNumber : volumeSequenceNumber, rawName === void 0 ? this.rawName : rawName);
  };
  ISO2$DirectoryRecord.prototype.toString = function () {
    return 'DirectoryRecord(length=' + Kotlin.toString(this.length) + (', extendedAttributeLength=' + Kotlin.toString(this.extendedAttributeLength)) + (', extent=' + Kotlin.toString(this.extent)) + (', size=' + Kotlin.toString(this.size)) + (', date=' + Kotlin.toString(this.date)) + (', flags=' + Kotlin.toString(this.flags)) + (', fileUnitSize=' + Kotlin.toString(this.fileUnitSize)) + (', interleave=' + Kotlin.toString(this.interleave)) + (', volumeSequenceNumber=' + Kotlin.toString(this.volumeSequenceNumber)) + (', rawName=' + Kotlin.toString(this.rawName)) + ')';
  };
  ISO2$DirectoryRecord.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.length) | 0;
    result = result * 31 + Kotlin.hashCode(this.extendedAttributeLength) | 0;
    result = result * 31 + Kotlin.hashCode(this.extent) | 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.date) | 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    result = result * 31 + Kotlin.hashCode(this.fileUnitSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.interleave) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeSequenceNumber) | 0;
    result = result * 31 + Kotlin.hashCode(this.rawName) | 0;
    return result;
  };
  ISO2$DirectoryRecord.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.length, other.length) && Kotlin.equals(this.extendedAttributeLength, other.extendedAttributeLength) && Kotlin.equals(this.extent, other.extent) && Kotlin.equals(this.size, other.size) && Kotlin.equals(this.date, other.date) && Kotlin.equals(this.flags, other.flags) && Kotlin.equals(this.fileUnitSize, other.fileUnitSize) && Kotlin.equals(this.interleave, other.interleave) && Kotlin.equals(this.volumeSequenceNumber, other.volumeSequenceNumber) && Kotlin.equals(this.rawName, other.rawName)))));
  };
  ISO2.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ISO2',
    interfaces: []
  };
  var ISO2_instance = null;
  function ISO2_getInstance() {
    if (ISO2_instance === null) {
      new ISO2();
    }
    return ISO2_instance;
  }
  function readUdfDString($receiver, bytes) {
    var ss = readStream_0($receiver, bytes);
    var count = readU16_le(ss) / 2 | 0;
    return readUtf16_le(ss, count);
  }
  function readUtf16_le($receiver, count) {
    var s = '';
    for (var n = 0; n < count; n++) {
      s += String.fromCharCode(toChar(readS16_le_0($receiver)));
    }
    return s;
  }
  function MountableVfsSync$ObjectLiteral(closure$logger) {
    this.closure$logger = closure$logger;
    Vfs$Proxy.call(this);
    this._mounts_0 = ArrayList_init();
  }
  Object.defineProperty(MountableVfsSync$ObjectLiteral.prototype, 'mounts', {
    get: function () {
      return toMap(this._mounts_0);
    }
  });
  MountableVfsSync$ObjectLiteral.prototype.mount_hem4eq$ = function (folder, file) {
    this._unmount_0(folder);
    var $receiver = this._mounts_0;
    var element = to(vfs.VfsUtil.normalize_61zpoe$(folder), file);
    $receiver.add_11rb$(element);
    this.resort_0();
    return this;
  };
  MountableVfsSync$ObjectLiteral.prototype.unmount_61zpoe$ = function (folder) {
    this._unmount_0(folder);
    this.resort_0();
    return this;
  };
  MountableVfsSync$ObjectLiteral.prototype.unmountAll = function () {
    this._mounts_0.clear();
    return this;
  };
  function MountableVfsSync$ObjectLiteral$_unmount$lambda(closure$folder) {
    return function (it) {
      return equals(it.first, vfs.VfsUtil.normalize_61zpoe$(closure$folder));
    };
  }
  MountableVfsSync$ObjectLiteral.prototype._unmount_0 = function (folder) {
    removeAll(this._mounts_0, MountableVfsSync$ObjectLiteral$_unmount$lambda(folder));
  };
  function MountableVfsSync$ObjectLiteral$resort$lambda(it) {
    return -it.first.length;
  }
  var sortWith = Kotlin.kotlin.collections.sortWith_nqfjgj$;
  var compareBy$lambda_3 = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  function Comparator$ObjectLiteral_3(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_3.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_3.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  MountableVfsSync$ObjectLiteral.prototype.resort_0 = function () {
    var $receiver = this._mounts_0;
    if ($receiver.size > 1) {
      sortWith($receiver, new Comparator$ObjectLiteral_3(compareBy$lambda_3(MountableVfsSync$ObjectLiteral$resort$lambda)));
    }
  };
  MountableVfsSync$ObjectLiteral.prototype.transform_phxig4$ = function (out, continuation) {
    return out;
  };
  MountableVfsSync$ObjectLiteral.prototype.access_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$access_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$access_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$rpath = void 0;
    this.local$res = void 0;
    this.local$$this = void 0;
    this.local$level = void 0;
    this.local$tmp$_0 = void 0;
    this.local$closure$continuation = void 0;
    this.local$path = path_0;
  }
  Coroutine$access_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$access_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$access_61zpoe$.prototype.constructor = Coroutine$access_61zpoe$;
  Coroutine$access_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$rpath = vfs.VfsUtil.normalize_61zpoe$(this.local$path);
            this.local$tmp$ = this.$this._mounts_0.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 6;
              continue;
            }

            var tmp$ = this.local$tmp$.next();
            var base = tmp$.component1()
            , file = tmp$.component2();
            if (startsWith(this.local$rpath, base)) {
              var startIndex = base.length;
              var nnormalizedPath = this.local$rpath.substring(startIndex);
              var subpath = trim(vfs.VfsUtil.normalize_61zpoe$(nnormalizedPath), Kotlin.charArrayOf(47));
              var $this = this.$this.closure$logger;
              var level = LogLevel.WARN;
              if ($this.isEnabled_ci8eq1$(level)) {
                $this.actualLog_t189ph$(level, 'Accessing ' + file + ' : ' + subpath + ' (' + nnormalizedPath + ')');
              }
              this.local$res = file.get_61zpoe$(subpath);
              this.local$$this = this.$this.closure$logger;
              this.local$level = LogLevel.WARN;
              if (this.local$$this.isEnabled_ci8eq1$(this.local$level)) {
                this.local$tmp$_0 = this.local$$this.actualLog_t189ph$;
                this.local$closure$continuation = this;
                this.state_0 = 3;
                this.result_0 = this.local$res.exists(this.local$closure$continuation);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                break;
              }
               else {
                this.state_0 = 4;
                continue;
              }
            }
             else {
              this.state_0 = 5;
              continue;
            }

          case 3:
            this.local$tmp$_0.call(this.local$$this, this.local$level, ' --> ' + this.local$res + ' (' + this.local$closure$continuation.result_0 + ')');
            this.state_0 = 4;
            continue;
          case 4:
            return this.local$res;
          case 5:
            this.state_0 = 2;
            continue;
          case 6:
            var $this_0 = this.$this.closure$logger;
            var level_0 = LogLevel.WARN;
            if ($this_0.isEnabled_ci8eq1$(level_0)) {
              var tmp$_0 = $this_0.actualLog_t189ph$;
              var tmp$_1 = "Can't find " + this.local$rpath + ' in mounted ';
              var $receiver = this.$this._mounts_0;
              var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
              var tmp$_2;
              tmp$_2 = $receiver.iterator();
              while (tmp$_2.hasNext()) {
                var item = tmp$_2.next();
                destination.add_11rb$(item.first);
              }
              tmp$_0.call($this_0, level_0, tmp$_1 + destination);
            }

            throw new FileNotFoundException(this.local$path);
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  MountableVfsSync$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [MountableSync, Vfs$Proxy]
  };
  function MountableVfsSync(callback) {
    var logger = Logger.Companion.invoke_61zpoe$('MountableVfsSync');
    var mount = new MountableVfsSync$ObjectLiteral(logger);
    callback(mount);
    return mount.root;
  }
  function MountableSync() {
  }
  MountableSync.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'MountableSync',
    interfaces: []
  };
  function ZipVfs2$normalizeName($receiver) {
    return trim($receiver, Kotlin.charArrayOf(47)).toLowerCase();
  }
  function ZipVfs2$ZipEntry(path, compressionMethod, isDirectory, time, offset, inode, headerEntry, compressedSize, uncompressedSize) {
    this.path = path;
    this.compressionMethod = compressionMethod;
    this.isDirectory = isDirectory;
    this.time = time;
    this.offset = offset;
    this.inode = inode;
    this.headerEntry = headerEntry;
    this.compressedSize = compressedSize;
    this.uncompressedSize = uncompressedSize;
  }
  ZipVfs2$ZipEntry.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ZipEntry',
    interfaces: []
  };
  function ZipVfs2$toStat($receiver, file) {
    var tmp$;
    var vfs = file.vfs;
    if ($receiver != null) {
      tmp$ = vfs.createExistsStat_sjl0ub$(file.path, $receiver.isDirectory, $receiver.uncompressedSize, void 0, $receiver.inode, void 0, void 0, void 0, $receiver.time.utcTimestamp);
    }
     else {
      tmp$ = vfs.createNonExistsStat_4w9ihe$(file.path);
    }
    return tmp$;
  }
  function ZipVfs2$Impl(closure$files, closure$normalizeName, closure$toStat, closure$filesPerFolder, closure$zipFile) {
    this.closure$files = closure$files;
    this.closure$normalizeName = closure$normalizeName;
    this.closure$toStat = closure$toStat;
    this.closure$filesPerFolder = closure$filesPerFolder;
    this.closure$zipFile = closure$zipFile;
    Vfs.call(this);
    this.vfs = this;
  }
  ZipVfs2$Impl.prototype.open_j4ip3x$ = function (path_0, mode_0, continuation_0, suspended) {
    var instance = new Coroutine$open_j4ip3x$_0(this, path_0, mode_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$open_j4ip3x$_0($this, path_0, mode_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$entry = void 0;
    this.local$base = void 0;
    this.local$closure$continuation = void 0;
    this.local$block$result = void 0;
    this.local$uncompressedSize = void 0;
    this.local$fileNameLength = void 0;
    this.local$extraLength = void 0;
    this.local$path = path_0;
    this.local$mode = mode_0;
  }
  Coroutine$open_j4ip3x$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$open_j4ip3x$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$open_j4ip3x$_0.prototype.constructor = Coroutine$open_j4ip3x$_0;
  Coroutine$open_j4ip3x$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            tmp$ = this.$this.closure$files.get_11rb$(this.$this.closure$normalizeName(this.local$path));
            if (tmp$ == null) {
              throw new FileNotFoundException("Path: '" + this.local$path + "'");
            }

            this.local$entry = tmp$;
            if (this.local$entry.isDirectory)
              throw new IOException("Can't open a zip directory for " + this.local$mode);
            this.state_0 = 2;
            this.result_0 = slice_1(this.local$entry.headerEntry, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$base = this.result_0;
            this.local$closure$continuation = this;
            var tmp$_0;
            this.state_0 = 3;
            this.result_0 = this.local$base.getAvailable(this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            if (this.local$closure$continuation.result_0.compareTo_11rb$(Kotlin.Long.fromInt(16)) < 0)
              throw IllegalStateException_init('Chunk to small to be a ZIP chunk');
            this.state_0 = 4;
            this.result_0 = readS32_be_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            if (this.local$closure$continuation.result_0 !== 1347093252)
              throw IllegalStateException_init('Not a zip file');
            this.state_0 = 5;
            this.result_0 = readU16_le_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 5:
            var version = this.local$closure$continuation.result_0;
            this.state_0 = 6;
            this.result_0 = readU16_le_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 6:
            var flags = this.local$closure$continuation.result_0;
            this.state_0 = 7;
            this.result_0 = readU16_le_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 7:
            var compressionType = this.local$closure$continuation.result_0;
            this.state_0 = 8;
            this.result_0 = readU16_le_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 8:
            var fileTime = this.local$closure$continuation.result_0;
            this.state_0 = 9;
            this.result_0 = readU16_le_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 9:
            var fileDate = this.local$closure$continuation.result_0;
            this.state_0 = 10;
            this.result_0 = readS32_le(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 10:
            var crc = this.local$closure$continuation.result_0;
            this.state_0 = 11;
            this.result_0 = readS32_le(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 11:
            var compressedSize = this.local$closure$continuation.result_0;
            this.state_0 = 12;
            this.result_0 = readS32_le(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 12:
            this.local$uncompressedSize = this.local$closure$continuation.result_0;
            this.state_0 = 13;
            this.result_0 = readU16_le_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 13:
            this.local$fileNameLength = this.local$closure$continuation.result_0;
            this.state_0 = 14;
            this.result_0 = readU16_le_0(this.local$base, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 14:
            this.local$extraLength = this.local$closure$continuation.result_0;
            this.state_0 = 15;
            this.result_0 = readString_0(this.local$base, this.local$fileNameLength, void 0, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 15:
            var name = this.local$closure$continuation.result_0;
            this.state_0 = 16;
            this.result_0 = readBytes_0(this.local$base, this.local$extraLength, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 16:
            var extra = this.local$closure$continuation.result_0;
            this.state_0 = 17;
            this.result_0 = readSlice_0(this.local$base, this.local$entry.compressedSize, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 17:
            var compressedData = this.local$closure$continuation.result_0;
            tmp$_0 = this.local$entry.compressionMethod;
            if (tmp$_0 === 0) {
              this.local$block$result = compressedData;
              this.state_0 = 20;
              continue;
            }
             else {
              if (tmp$_0 === 8) {
                this.state_0 = 18;
                this.result_0 = readAll(new InflateAsyncStream(compressedData, new KorioNative$Inflater(true), Kotlin.Long.fromInt(this.local$uncompressedSize)), this.local$closure$continuation);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                break;
              }
               else {
                throw new NotImplementedError_init('An operation is not implemented: ' + ('Not implemented zip method ' + this.local$entry.compressionMethod));
              }
            }

          case 18:
            this.local$block$result = openAsync(this.local$closure$continuation.result_0);
            this.state_0 = 19;
            continue;
          case 19:
            this.state_0 = 20;
            continue;
          case 20:
            return this.local$block$result;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ZipVfs2$Impl.prototype.stat_61zpoe$ = function (path, continuation) {
    return this.closure$toStat(this.closure$files.get_11rb$(this.closure$normalizeName(path)), this.get_61zpoe$(path));
  };
  function ZipVfs2$Impl$list$lambda(closure$filesPerFolder_0, closure$path_0, closure$normalizeName_0, this$Impl_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$ZipVfs2$Impl$list$lambda(closure$filesPerFolder_0, closure$path_0, closure$normalizeName_0, this$Impl_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ZipVfs2$Impl$list$lambda(closure$filesPerFolder_0, closure$path_0, closure$normalizeName_0, this$Impl_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$filesPerFolder = closure$filesPerFolder_0;
    this.local$closure$path = closure$path_0;
    this.local$closure$normalizeName = closure$normalizeName_0;
    this.local$this$Impl = this$Impl_0;
    this.local$tmp$_0 = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ZipVfs2$Impl$list$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ZipVfs2$Impl$list$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ZipVfs2$Impl$list$lambda.prototype.constructor = Coroutine$ZipVfs2$Impl$list$lambda;
  Coroutine$ZipVfs2$Impl$list$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.local$tmp$_0 = ((tmp$ = this.local$closure$filesPerFolder.get_11rb$(this.local$closure$normalizeName(this.local$closure$path))) != null ? tmp$ : LinkedHashMap_init()).entries.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$tmp$_0.hasNext()) {
              this.state_0 = 4;
              continue;
            }

            var tmp$_0 = this.local$tmp$_0.next();
            var name = tmp$_0.key;
            var entry = tmp$_0.value;
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.yield_11rb$(this.local$this$Impl.vfs.get_61zpoe$(entry.path), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ZipVfs2$Impl.prototype.list_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$list_61zpoe$_1(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$list_61zpoe$_1($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$list_61zpoe$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$list_61zpoe$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$list_61zpoe$_1.prototype.constructor = Coroutine$list_61zpoe$_1;
  Coroutine$list_61zpoe$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = getCoroutineContext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 1:
            throw this.exception_0;
          case 2:
            return asyncGenerate(this.result_0, ZipVfs2$Impl$list$lambda(this.$this.closure$filesPerFolder, this.local$path, this.$this.closure$normalizeName, this.$this));
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ZipVfs2$Impl.prototype.toString = function () {
    return 'ZipVfs(' + toString(this.closure$zipFile) + ')';
  };
  ZipVfs2$Impl.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Impl',
    interfaces: [Vfs]
  };
  function ZipVfs2(s_0, zipFile_0, continuation_0, suspended) {
    var instance = new Coroutine$ZipVfs2(s_0, zipFile_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$ZipVfs2(s_0, zipFile_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$tmp$_0 = void 0;
    this.local$endBytes = void 0;
    this.local$PK_END = void 0;
    this.local$pk_endIndex = void 0;
    this.local$chunkSize = void 0;
    this.local$normalizeName = void 0;
    this.local$toStat = void 0;
    this.local$files = void 0;
    this.local$filesPerFolder = void 0;
    this.local$closure$continuation = void 0;
    this.local$entriesInDirectory = void 0;
    this.local$ds = void 0;
    this.local$tmp$_1 = void 0;
    this.local$tmp$_2 = void 0;
    this.local$n = void 0;
    this.local$compressionMethod = void 0;
    this.local$compressedSize = void 0;
    this.local$uncompressedSize = void 0;
    this.local$headerOffset = void 0;
    this.local$name = void 0;
    this.local$isDirectory = void 0;
    this.local$normalizedName = void 0;
    this.local$baseName = void 0;
    this.local$folder = void 0;
    this.local$s = s_0;
    this.local$zipFile = zipFile_0;
  }
  Coroutine$ZipVfs2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ZipVfs2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ZipVfs2.prototype.constructor = Coroutine$ZipVfs2;
  Coroutine$ZipVfs2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$zipFile === void 0)
              this.local$zipFile = null;
            this.local$endBytes = stream.EMPTY_BYTE_ARRAY;
            this.local$PK_END = new Int8Array([80, 75, 5, 6]);
            this.local$pk_endIndex = -1;
            this.local$tmp$ = listOf([22, 256, 4096, 65536]).iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 8;
              continue;
            }

            this.local$chunkSize = this.local$tmp$.next();
            this.local$tmp$_0 = Kotlin.Long.ZERO;
            this.state_0 = 3;
            this.result_0 = this.local$s.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.local$s.setPosition_s8cxhz$(max_0(Math_0, this.local$tmp$_0, this.result_0.subtract(Kotlin.Long.fromInt(this.local$chunkSize))), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$s.getAvailable(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 5:
            var b = toIntClamp(this.result_0);
            this.state_0 = 6;
            this.result_0 = readBytesExact(this.local$s, Math_0.max(this.local$chunkSize, b), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 6:
            this.local$endBytes = this.result_0;
            this.local$pk_endIndex = indexOf_0(this.local$endBytes, this.local$PK_END);
            if (this.local$pk_endIndex >= 0) {
              this.state_0 = 8;
              continue;
            }
             else {
              this.state_0 = 7;
              continue;
            }

          case 7:
            this.state_0 = 2;
            continue;
          case 8:
            if (this.local$pk_endIndex < 0)
              throw IllegalArgumentException_init('Not a zip file');
            var $receiver = this.local$endBytes;
            var fromIndex = this.local$pk_endIndex;
            var toIndex = this.local$endBytes.length;
            var data = openSync($receiver.slice(fromIndex, toIndex));
            this.local$normalizeName = ZipVfs2$normalizeName;
            this.local$toStat = ZipVfs2$toStat;
            this.local$files = LinkedHashMap_init();
            this.local$filesPerFolder = LinkedHashMap_init();
            this.local$closure$continuation = this;
            if (readS32_be(data) !== 1347093766)
              throw IllegalStateException_init('Not a zip file');
            var diskNumber = readU16_le(data);
            var startDiskNumber = readU16_le(data);
            var entriesOnDisk = readU16_le(data);
            this.local$entriesInDirectory = readU16_le(data);
            var directorySize = readS32_le_0(data);
            var directoryOffset = readS32_le_0(data);
            var commentLength = readU16_le(data);
            this.state_0 = 9;
            this.result_0 = sliceWithSize_1(this.local$s, Kotlin.Long.fromInt(directoryOffset), Kotlin.Long.fromInt(directorySize), this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 9:
            this.state_0 = 10;
            this.result_0 = readAvailable(this.local$closure$continuation.result_0, this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 10:
            this.local$ds = openSync(this.local$closure$continuation.result_0);
            var tmp$;
            this.local$n = 0;
            this.state_0 = 11;
            continue;
          case 11:
            if (this.local$n >= this.local$entriesInDirectory) {
              this.state_0 = 14;
              continue;
            }

            if (readS32_be(this.local$ds) !== 1347092738)
              throw IllegalStateException_init('Not a zip file record');
            var versionMade = readU16_le(this.local$ds);
            var versionExtract = readU16_le(this.local$ds);
            var flags = readU16_le(this.local$ds);
            this.local$compressionMethod = readU16_le(this.local$ds);
            var fileTime = readU16_le(this.local$ds);
            var fileDate = readU16_le(this.local$ds);
            var crc = readS32_le_0(this.local$ds);
            this.local$compressedSize = readS32_le_0(this.local$ds);
            this.local$uncompressedSize = readS32_le_0(this.local$ds);
            var fileNameLength = readU16_le(this.local$ds);
            var extraLength = readU16_le(this.local$ds);
            var fileCommentLength = readU16_le(this.local$ds);
            var diskNumberStart = readU16_le(this.local$ds);
            var internalAttributes = readU16_le(this.local$ds);
            var externalAttributes = readS32_le_0(this.local$ds);
            this.local$headerOffset = readS32_le_0(this.local$ds);
            this.local$name = readString(this.local$ds, fileNameLength);
            var extra = readBytes(this.local$ds, extraLength);
            this.local$isDirectory = endsWith(this.local$name, '/');
            this.local$normalizedName = this.local$normalizeName(this.local$name);
            var baseFolder = substringBeforeLast(this.local$normalizedName, 47, '');
            this.local$baseName = substringAfterLast(this.local$normalizedName, 47);
            var tmp$_0;
            var value = this.local$filesPerFolder.get_11rb$(baseFolder);
            if (value == null) {
              var answer = LinkedHashMap_init();
              this.local$filesPerFolder.put_xwzc9p$(baseFolder, answer);
              tmp$_0 = answer;
            }
             else {
              tmp$_0 = value;
            }

            this.local$folder = tmp$_0;
            this.local$tmp$_1 = new DosFileDateTime(fileTime, fileDate);
            this.local$tmp$_2 = Kotlin.Long.fromInt(this.local$n);
            this.state_0 = 12;
            this.result_0 = sliceWithStart_0(this.local$s, toUInt(this.local$headerOffset), this.local$closure$continuation);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            break;
          case 12:
            var entry = new ZipVfs2$ZipEntry(this.local$name, this.local$compressionMethod, this.local$isDirectory, this.local$tmp$_1, this.local$headerOffset, this.local$tmp$_2, this.local$closure$continuation.result_0, toUInt(this.local$compressedSize), toUInt(this.local$uncompressedSize));
            var components = plus_0(listOf_0(''), (new PathInfo(this.local$normalizedName)).getFullComponents());
            tmp$ = components.size;
            for (var m = 1; m < tmp$; m++) {
              var f = components.get_za3lpa$(m - 1 | 0);
              var c = components.get_za3lpa$(m);
              var tmp$_1;
              if (!(Kotlin.isType(tmp$_1 = this.local$files, Map) ? tmp$_1 : throwCCE()).containsKey_11rb$(c)) {
                var tmp$_2;
                var value_0 = this.local$filesPerFolder.get_11rb$(f);
                if (value_0 == null) {
                  var answer_0 = LinkedHashMap_init();
                  this.local$filesPerFolder.put_xwzc9p$(f, answer_0);
                  tmp$_2 = answer_0;
                }
                 else {
                  tmp$_2 = value_0;
                }
                var folder2 = tmp$_2;
                var entry2 = new ZipVfs2$ZipEntry(c, 0, true, new DosFileDateTime(0, 0), 0, Kotlin.Long.ZERO, openAsync(new Int8Array([])), Kotlin.Long.ZERO, Kotlin.Long.ZERO);
                var key = (new PathInfo(c)).basename;
                folder2.put_xwzc9p$(key, entry2);
                this.local$files.put_xwzc9p$(c, entry2);
              }
            }

            this.local$folder.put_xwzc9p$(this.local$baseName, entry);
            var key_0 = this.local$normalizeName(this.local$normalizedName);
            this.local$files.put_xwzc9p$(key_0, entry);
            this.state_0 = 13;
            continue;
          case 13:
            this.local$n++;
            this.state_0 = 11;
            continue;
          case 14:
            var value_1 = new ZipVfs2$ZipEntry('', 0, true, new DosFileDateTime(0, 0), 0, Kotlin.Long.ZERO, openAsync(new Int8Array([])), Kotlin.Long.ZERO, Kotlin.Long.ZERO);
            this.local$files.put_xwzc9p$('', value_1);
            return (new ZipVfs2$Impl(this.local$files, this.local$normalizeName, this.local$toStat, this.local$filesPerFolder, this.local$zipFile)).root;
        }
      }
       catch (e) {
        if (this.state_0 === 1)
          throw e;
        else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DosFileDateTime(dosTime, dosDate) {
    this.dosTime = dosTime;
    this.dosDate = dosDate;
    this.date_ui42e0$_0 = lazy(DosFileDateTime$date$lambda(this));
    this.utcTimestamp_ff6w1o$_0 = lazy(DosFileDateTime$utcTimestamp$lambda(this));
  }
  Object.defineProperty(DosFileDateTime.prototype, 'seconds', {
    get: function () {
      return 2 * getBits(this.dosTime, 0, 5) | 0;
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'minutes', {
    get: function () {
      return getBits(this.dosTime, 5, 6);
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'hours', {
    get: function () {
      return getBits(this.dosTime, 11, 5);
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'day', {
    get: function () {
      return getBits(this.dosDate, 0, 5);
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'month1', {
    get: function () {
      return getBits(this.dosDate, 5, 4);
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'fullYear', {
    get: function () {
      return 1980 + getBits(this.dosDate, 9, 7) | 0;
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'date', {
    get: function () {
      var $receiver = this.date_ui42e0$_0;
      new PropertyMetadata('date');
      return $receiver.value;
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'utcTimestamp', {
    get: function () {
      var $receiver = this.utcTimestamp_ff6w1o$_0;
      new PropertyMetadata('utcTimestamp');
      return $receiver.value;
    }
  });
  function DosFileDateTime$date$lambda(this$DosFileDateTime) {
    return function () {
      return DateTime.Companion.createAdjusted_ui44o2$(this$DosFileDateTime.fullYear, this$DosFileDateTime.month1, this$DosFileDateTime.day, this$DosFileDateTime.hours, this$DosFileDateTime.minutes, this$DosFileDateTime.seconds);
    };
  }
  function DosFileDateTime$utcTimestamp$lambda(this$DosFileDateTime) {
    return function () {
      return this$DosFileDateTime.date.unix;
    };
  }
  DosFileDateTime.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DosFileDateTime',
    interfaces: []
  };
  function openAsZip2($receiver, file, continuation) {
    if (file === void 0)
      file = null;
    return ZipVfs2($receiver, file, continuation);
  }
  function max_1(a, b, c) {
    var a_0 = Math_0.max(a, b);
    return Math_0.max(a_0, c);
  }
  function max_2(a, b, c, d) {
    var a_0 = Math_0.max(a, b);
    var a_1 = Math_0.max(a_0, c);
    return Math_0.max(a_1, d);
  }
  function max_3(a, b, c, d, e) {
    var a_0 = Math_0.max(a, b);
    var a_1 = Math_0.max(a_0, c);
    var a_2 = Math_0.max(a_1, d);
    return Math_0.max(a_2, e);
  }
  function max_4(a, b, c) {
    var a_0 = Math_0.max(a, b);
    return Math_0.max(a_0, c);
  }
  function max_5(a, b, c, d) {
    var a_0 = Math_0.max(a, b);
    var a_1 = Math_0.max(a_0, c);
    return Math_0.max(a_1, d);
  }
  function max_6(a, b, c, d, e) {
    var a_0 = Math_0.max(a, b);
    var a_1 = Math_0.max(a_0, c);
    var a_2 = Math_0.max(a_1, d);
    return Math_0.max(a_2, e);
  }
  function withOptTimeout$lambda$lambda(closure$c) {
    return function () {
      closure$c.cancel_tcv7n7$(new CancellationException(''));
      return Unit;
    };
  }
  function withOptTimeout$lambda$lambda_0(closure$cancelled, closure$timer, closure$c) {
    return function (it) {
      closure$cancelled.v = true;
      closure$timer != null ? (closure$timer.close(), Unit) : null;
      closure$c.cancel_tcv7n7$();
      return Unit;
    };
  }
  function withOptTimeout$lambda$ObjectLiteral(closure$cancelled, closure$timer, closure$c) {
    this.closure$cancelled = closure$cancelled;
    this.closure$timer = closure$timer;
    this.closure$c = closure$c;
    this.context_opzthk$_0 = closure$c.context;
  }
  Object.defineProperty(withOptTimeout$lambda$ObjectLiteral.prototype, 'context', {
    get: function () {
      return this.context_opzthk$_0;
    }
  });
  withOptTimeout$lambda$ObjectLiteral.prototype.resume_11rb$ = function (value) {
    var tmp$;
    if (this.closure$cancelled.v)
      return;
    (tmp$ = this.closure$timer) != null ? (tmp$.close(), Unit) : null;
    this.closure$c.resume_11rb$(value);
  };
  withOptTimeout$lambda$ObjectLiteral.prototype.resumeWithException_tcv7n7$ = function (exception) {
    var tmp$;
    if (this.closure$cancelled.v)
      return;
    (tmp$ = this.closure$timer) != null ? (tmp$.close(), Unit) : null;
    this.closure$c.resumeWithException_tcv7n7$(exception);
  };
  withOptTimeout$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Continuation]
  };
  function withOptTimeout$lambda(closure$ms, closure$callback) {
    return function (c) {
      var tmp$;
      var cancelled = {v: false};
      if (closure$ms == null)
        tmp$ = null;
      else if (closure$ms >= 0)
        tmp$ = get_eventLoop_0(c).setTimeout_n53o35$(closure$ms, withOptTimeout$lambda$lambda(c));
      else
        tmp$ = null;
      var timer = tmp$;
      c.onCancel_4m4org$(withOptTimeout$lambda$lambda_0(cancelled, timer, c));
      korioStartCoroutine(closure$callback, new withOptTimeout$lambda$ObjectLiteral(cancelled, timer, c));
      return Unit;
    };
  }
  function suspendCancellableCoroutine$lambda_1(closure$block) {
    return function (c) {
      closure$block(new CancellableContinuation_init(c));
      return Unit;
    };
  }
  function suspendCoroutineEL$lambda_1(closure$block) {
    return function (c) {
      closure$block(toEventLoop(c));
      return Unit;
    };
  }
  function _korioSuspendCoroutine$lambda_1(closure$block) {
    return function (c) {
      closure$block(c);
      return Unit;
    };
  }
  function suspendCoroutine$lambda_1(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(c);
      closure$block(safe);
      return safe.getResult();
    };
  }
  function withOptTimeout(ms, name, callback, continuation) {
    if (name === void 0)
      name = 'timeout';
    Kotlin.suspendCall(suspendCoroutine$lambda_1(_korioSuspendCoroutine$lambda_1(suspendCoroutineEL$lambda_1(suspendCancellableCoroutine$lambda_1(withOptTimeout$lambda(ms, callback)))))(Kotlin.coroutineReceiver().facade));
    Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
  }
  function KPspEmuNative() {
    KPspEmuNative_instance = this;
  }
  KPspEmuNative.prototype.getCurrentDirectory = function () {
    return '.';
  };
  Object.defineProperty(KPspEmuNative.prototype, 'documentLocationHash', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = document.location) != null ? tmp$.hash : null) != null ? tmp$_0 : '#';
    }
  });
  KPspEmuNative.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'KPspEmuNative',
    interfaces: []
  };
  var KPspEmuNative_instance = null;
  function KPspEmuNative_getInstance() {
    if (KPspEmuNative_instance === null) {
      new KPspEmuNative();
    }
    return KPspEmuNative_instance;
  }
  Object.defineProperty(AGRenderer$RenderMode, 'AUTO', {
    get: AGRenderer$RenderMode$AUTO_getInstance
  });
  Object.defineProperty(AGRenderer$RenderMode, 'NORMAL', {
    get: AGRenderer$RenderMode$NORMAL_getInstance
  });
  Object.defineProperty(AGRenderer$RenderMode, 'DIRECT', {
    get: AGRenderer$RenderMode$DIRECT_getInstance
  });
  AGRenderer.RenderMode = AGRenderer$RenderMode;
  $$importsForInline$$['korag-js'] = $module$korag_js;
  AGRenderer.TextureSlot = AGRenderer$TextureSlot;
  $$importsForInline$$['klogger-js'] = $module$klogger_js;
  AGRenderer.ProgramLayout = AGRenderer$ProgramLayout;
  AGRenderer.Stats = AGRenderer$Stats;
  var package$com = _.com || (_.com = {});
  var package$soywiz = package$com.soywiz || (package$com.soywiz = {});
  var package$kpspemu = package$soywiz.kpspemu || (package$soywiz.kpspemu = {});
  package$kpspemu.AGRenderer = AGRenderer;
  Object.defineProperty(package$kpspemu, 'DebugBitmapFont', {
    get: DebugBitmapFont_getInstance
  });
  $$importsForInline$$['korge-js'] = $module$korge_js;
  DebugScene.GprView = DebugScene$GprView;
  $$importsForInline$$.kpspemu = _;
  DebugScene.GprListView = DebugScene$GprListView;
  DebugScene.HexdumpLineView = DebugScene$HexdumpLineView;
  DebugScene.HexdumpView = DebugScene$HexdumpView;
  DebugScene.DissasemblerLineView = DebugScene$DissasemblerLineView;
  DebugScene.DissasemblerView = DebugScene$DissasemblerView;
  DebugScene.ThreadView = DebugScene$ThreadView;
  DebugScene.ThreadListView = DebugScene$ThreadListView;
  package$kpspemu.DebugScene = DebugScene;
  package$kpspemu.Emulator = Emulator;
  package$kpspemu.WithEmulator = WithEmulator;
  package$kpspemu.AddressInfo = AddressInfo;
  package$kpspemu.get_mem_gja2zf$ = get_mem;
  package$kpspemu.get_imem_gja2zf$ = get_imem;
  package$kpspemu.get_ge_gja2zf$ = get_ge;
  package$kpspemu.get_gpu_gja2zf$ = get_gpu;
  package$kpspemu.get_controller_gja2zf$ = get_controller;
  package$kpspemu.get_coroutineContext_gja2zf$ = get_coroutineContext;
  package$kpspemu.get_display_gja2zf$ = get_display;
  package$kpspemu.get_deviceManager_gja2zf$ = get_deviceManager;
  package$kpspemu.get_memoryManager_gja2zf$ = get_memoryManager;
  package$kpspemu.get_timeManager_gja2zf$ = get_timeManager;
  package$kpspemu.get_fileManager_gja2zf$ = get_fileManager;
  package$kpspemu.get_rtc_gja2zf$ = get_rtc;
  package$kpspemu.get_threadManager_gja2zf$ = get_threadManager;
  package$kpspemu.get_callbackManager_gja2zf$ = get_callbackManager;
  package$kpspemu.get_breakpoints_gja2zf$ = get_breakpoints;
  Object.defineProperty(package$kpspemu, 'Kpspemu', {
    get: Kpspemu_getInstance
  });
  Object.defineProperty(package$kpspemu, 'KpspemuAssets', {
    get: KpspemuAssets_getInstance
  });
  Object.defineProperty(package$kpspemu, 'KPSPEMU_VERSION_8be2vx$', {
    get: function () {
      return KPSPEMU_VERSION;
    }
  });
  package$kpspemu.main_kand9s$ = main;
  Object.defineProperty(package$kpspemu, 'Main', {
    get: Main_getInstance
  });
  Object.defineProperty(package$kpspemu, 'KpspemuModule', {
    get: KpspemuModule_getInstance
  });
  package$kpspemu.SceneWithProcess = SceneWithProcess;
  Object.defineProperty(KpspemuMainScene, 'Companion', {
    get: KpspemuMainScene$Companion_getInstance
  });
  $$importsForInline$$['korma-js'] = $module$korma_js;
  package$kpspemu.KpspemuMainScene = KpspemuMainScene;
  package$kpspemu.FpsCounter = FpsCounter;
  package$kpspemu.preload_g5ykjz$ = preload;
  package$kpspemu.preloadSmall_dqczag$ = preloadSmall;
  package$kpspemu.LoadProcess = LoadProcess;
  package$kpspemu.loadExecutableAndStart_qa36on$ = loadExecutableAndStart;
  var package$battery = package$kpspemu.battery || (package$kpspemu.battery = {});
  package$battery.PspBattery = PspBattery;
  Object.defineProperty(ChargingEnum, 'NotCharging', {
    get: ChargingEnum$NotCharging_getInstance
  });
  Object.defineProperty(ChargingEnum, 'Charging', {
    get: ChargingEnum$Charging_getInstance
  });
  Object.defineProperty(ChargingEnum, 'Companion', {
    get: ChargingEnum$Companion_getInstance
  });
  package$battery.ChargingEnum = ChargingEnum;
  Object.defineProperty(BatteryStatusEnum, 'VeryLow', {
    get: BatteryStatusEnum$VeryLow_getInstance
  });
  Object.defineProperty(BatteryStatusEnum, 'Low', {
    get: BatteryStatusEnum$Low_getInstance
  });
  Object.defineProperty(BatteryStatusEnum, 'PartiallyFilled', {
    get: BatteryStatusEnum$PartiallyFilled_getInstance
  });
  Object.defineProperty(BatteryStatusEnum, 'FullyFilled', {
    get: BatteryStatusEnum$FullyFilled_getInstance
  });
  Object.defineProperty(BatteryStatusEnum, 'Companion', {
    get: BatteryStatusEnum$Companion_getInstance
  });
  package$battery.BatteryStatusEnum = BatteryStatusEnum;
  var package$cpu = package$kpspemu.cpu || (package$kpspemu.cpu = {});
  package$cpu.Breakpoints = Breakpoints;
  package$cpu.EmulatorControlFlowException = EmulatorControlFlowException;
  package$cpu.BreakpointException = BreakpointException;
  Object.defineProperty(CpuBreakException, 'Companion', {
    get: CpuBreakException$Companion_getInstance
  });
  package$cpu.CpuBreakException = CpuBreakException;
  package$cpu.get_K0_he8x89$ = get_K0;
  package$cpu.set_K0_shbxjr$ = set_K0;
  package$cpu.get_K1_he8x89$ = get_K1;
  package$cpu.set_K1_shbxjr$ = set_K1;
  package$cpu.get_GP_he8x89$ = get_GP;
  package$cpu.set_GP_shbxjr$ = set_GP;
  package$cpu.get_SP_he8x89$ = get_SP;
  package$cpu.set_SP_shbxjr$ = set_SP;
  package$cpu.get_FP_he8x89$ = get_FP;
  package$cpu.set_FP_shbxjr$ = set_FP;
  package$cpu.get_RA_he8x89$ = get_RA;
  package$cpu.set_RA_shbxjr$ = set_RA;
  package$cpu.get_V0_he8x89$ = get_V0;
  package$cpu.set_V0_shbxjr$ = set_V0;
  package$cpu.get_V1_he8x89$ = get_V1;
  package$cpu.set_V1_shbxjr$ = set_V1;
  package$cpu.get_A0_he8x89$ = get_A0;
  package$cpu.set_A0_shbxjr$ = set_A0;
  package$cpu.get_A1_he8x89$ = get_A1;
  package$cpu.set_A1_shbxjr$ = set_A1;
  package$cpu.get_A2_he8x89$ = get_A2;
  package$cpu.set_A2_shbxjr$ = set_A2;
  package$cpu.get_A3_he8x89$ = get_A3;
  package$cpu.set_A3_shbxjr$ = set_A3;
  package$cpu.RegInfo = RegInfo;
  Object.defineProperty(CpuState, 'Companion', {
    get: CpuState$Companion_getInstance
  });
  $$importsForInline$$['kmem-js'] = $module$kmem_js;
  CpuState.VFPRI_Class = CpuState$VFPRI_Class;
  CpuState.VFPRF_Class = CpuState$VFPRF_Class;
  Object.defineProperty(CpuState, 'VFPU_CTRL', {
    get: CpuState$VFPU_CTRL_getInstance
  });
  Object.defineProperty(CpuState, 'VCondition', {
    get: CpuState$VCondition_getInstance
  });
  package$cpu.CpuState = CpuState;
  package$cpu.VfpuPrefix = VfpuPrefix;
  package$cpu.VfpuSourceTargetPrefix = VfpuSourceTargetPrefix;
  package$cpu.VfpuDestinationPrefix = VfpuDestinationPrefix;
  Object.defineProperty(VfpuSingleRegisters, 'S000', {
    get: VfpuSingleRegisters$S000_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S010', {
    get: VfpuSingleRegisters$S010_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S020', {
    get: VfpuSingleRegisters$S020_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S030', {
    get: VfpuSingleRegisters$S030_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S100', {
    get: VfpuSingleRegisters$S100_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S110', {
    get: VfpuSingleRegisters$S110_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S120', {
    get: VfpuSingleRegisters$S120_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S130', {
    get: VfpuSingleRegisters$S130_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S200', {
    get: VfpuSingleRegisters$S200_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S210', {
    get: VfpuSingleRegisters$S210_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S220', {
    get: VfpuSingleRegisters$S220_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S230', {
    get: VfpuSingleRegisters$S230_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S300', {
    get: VfpuSingleRegisters$S300_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S310', {
    get: VfpuSingleRegisters$S310_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S320', {
    get: VfpuSingleRegisters$S320_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S330', {
    get: VfpuSingleRegisters$S330_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S400', {
    get: VfpuSingleRegisters$S400_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S410', {
    get: VfpuSingleRegisters$S410_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S420', {
    get: VfpuSingleRegisters$S420_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S430', {
    get: VfpuSingleRegisters$S430_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S500', {
    get: VfpuSingleRegisters$S500_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S510', {
    get: VfpuSingleRegisters$S510_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S520', {
    get: VfpuSingleRegisters$S520_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S530', {
    get: VfpuSingleRegisters$S530_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S600', {
    get: VfpuSingleRegisters$S600_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S610', {
    get: VfpuSingleRegisters$S610_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S620', {
    get: VfpuSingleRegisters$S620_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S630', {
    get: VfpuSingleRegisters$S630_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S700', {
    get: VfpuSingleRegisters$S700_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S710', {
    get: VfpuSingleRegisters$S710_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S720', {
    get: VfpuSingleRegisters$S720_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S730', {
    get: VfpuSingleRegisters$S730_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S001', {
    get: VfpuSingleRegisters$S001_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S011', {
    get: VfpuSingleRegisters$S011_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S021', {
    get: VfpuSingleRegisters$S021_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S031', {
    get: VfpuSingleRegisters$S031_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S101', {
    get: VfpuSingleRegisters$S101_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S111', {
    get: VfpuSingleRegisters$S111_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S121', {
    get: VfpuSingleRegisters$S121_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S131', {
    get: VfpuSingleRegisters$S131_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S201', {
    get: VfpuSingleRegisters$S201_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S211', {
    get: VfpuSingleRegisters$S211_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S221', {
    get: VfpuSingleRegisters$S221_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S231', {
    get: VfpuSingleRegisters$S231_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S301', {
    get: VfpuSingleRegisters$S301_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S311', {
    get: VfpuSingleRegisters$S311_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S321', {
    get: VfpuSingleRegisters$S321_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S331', {
    get: VfpuSingleRegisters$S331_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S401', {
    get: VfpuSingleRegisters$S401_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S411', {
    get: VfpuSingleRegisters$S411_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S421', {
    get: VfpuSingleRegisters$S421_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S431', {
    get: VfpuSingleRegisters$S431_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S501', {
    get: VfpuSingleRegisters$S501_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S511', {
    get: VfpuSingleRegisters$S511_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S521', {
    get: VfpuSingleRegisters$S521_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S531', {
    get: VfpuSingleRegisters$S531_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S601', {
    get: VfpuSingleRegisters$S601_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S611', {
    get: VfpuSingleRegisters$S611_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S621', {
    get: VfpuSingleRegisters$S621_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S631', {
    get: VfpuSingleRegisters$S631_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S701', {
    get: VfpuSingleRegisters$S701_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S711', {
    get: VfpuSingleRegisters$S711_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S721', {
    get: VfpuSingleRegisters$S721_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S731', {
    get: VfpuSingleRegisters$S731_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S002', {
    get: VfpuSingleRegisters$S002_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S012', {
    get: VfpuSingleRegisters$S012_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S022', {
    get: VfpuSingleRegisters$S022_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S032', {
    get: VfpuSingleRegisters$S032_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S102', {
    get: VfpuSingleRegisters$S102_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S112', {
    get: VfpuSingleRegisters$S112_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S122', {
    get: VfpuSingleRegisters$S122_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S132', {
    get: VfpuSingleRegisters$S132_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S202', {
    get: VfpuSingleRegisters$S202_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S212', {
    get: VfpuSingleRegisters$S212_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S222', {
    get: VfpuSingleRegisters$S222_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S232', {
    get: VfpuSingleRegisters$S232_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S302', {
    get: VfpuSingleRegisters$S302_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S312', {
    get: VfpuSingleRegisters$S312_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S322', {
    get: VfpuSingleRegisters$S322_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S332', {
    get: VfpuSingleRegisters$S332_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S402', {
    get: VfpuSingleRegisters$S402_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S412', {
    get: VfpuSingleRegisters$S412_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S422', {
    get: VfpuSingleRegisters$S422_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S432', {
    get: VfpuSingleRegisters$S432_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S502', {
    get: VfpuSingleRegisters$S502_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S512', {
    get: VfpuSingleRegisters$S512_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S522', {
    get: VfpuSingleRegisters$S522_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S532', {
    get: VfpuSingleRegisters$S532_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S602', {
    get: VfpuSingleRegisters$S602_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S612', {
    get: VfpuSingleRegisters$S612_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S622', {
    get: VfpuSingleRegisters$S622_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S632', {
    get: VfpuSingleRegisters$S632_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S702', {
    get: VfpuSingleRegisters$S702_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S712', {
    get: VfpuSingleRegisters$S712_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S722', {
    get: VfpuSingleRegisters$S722_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S732', {
    get: VfpuSingleRegisters$S732_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S003', {
    get: VfpuSingleRegisters$S003_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S013', {
    get: VfpuSingleRegisters$S013_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S023', {
    get: VfpuSingleRegisters$S023_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S033', {
    get: VfpuSingleRegisters$S033_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S103', {
    get: VfpuSingleRegisters$S103_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S113', {
    get: VfpuSingleRegisters$S113_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S123', {
    get: VfpuSingleRegisters$S123_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S133', {
    get: VfpuSingleRegisters$S133_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S203', {
    get: VfpuSingleRegisters$S203_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S213', {
    get: VfpuSingleRegisters$S213_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S223', {
    get: VfpuSingleRegisters$S223_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S233', {
    get: VfpuSingleRegisters$S233_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S303', {
    get: VfpuSingleRegisters$S303_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S313', {
    get: VfpuSingleRegisters$S313_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S323', {
    get: VfpuSingleRegisters$S323_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S333', {
    get: VfpuSingleRegisters$S333_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S403', {
    get: VfpuSingleRegisters$S403_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S413', {
    get: VfpuSingleRegisters$S413_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S423', {
    get: VfpuSingleRegisters$S423_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S433', {
    get: VfpuSingleRegisters$S433_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S503', {
    get: VfpuSingleRegisters$S503_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S513', {
    get: VfpuSingleRegisters$S513_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S523', {
    get: VfpuSingleRegisters$S523_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S533', {
    get: VfpuSingleRegisters$S533_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S603', {
    get: VfpuSingleRegisters$S603_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S613', {
    get: VfpuSingleRegisters$S613_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S623', {
    get: VfpuSingleRegisters$S623_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S633', {
    get: VfpuSingleRegisters$S633_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S703', {
    get: VfpuSingleRegisters$S703_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S713', {
    get: VfpuSingleRegisters$S713_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S723', {
    get: VfpuSingleRegisters$S723_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'S733', {
    get: VfpuSingleRegisters$S733_getInstance
  });
  Object.defineProperty(VfpuSingleRegisters, 'Companion', {
    get: VfpuSingleRegisters$Companion_getInstance
  });
  package$cpu.VfpuSingleRegisters = VfpuSingleRegisters;
  Object.defineProperty(VfpuPairRegisters, 'C000', {
    get: VfpuPairRegisters$C000_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C010', {
    get: VfpuPairRegisters$C010_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C020', {
    get: VfpuPairRegisters$C020_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C030', {
    get: VfpuPairRegisters$C030_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C100', {
    get: VfpuPairRegisters$C100_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C110', {
    get: VfpuPairRegisters$C110_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C120', {
    get: VfpuPairRegisters$C120_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C130', {
    get: VfpuPairRegisters$C130_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C200', {
    get: VfpuPairRegisters$C200_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C210', {
    get: VfpuPairRegisters$C210_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C220', {
    get: VfpuPairRegisters$C220_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C230', {
    get: VfpuPairRegisters$C230_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C300', {
    get: VfpuPairRegisters$C300_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C310', {
    get: VfpuPairRegisters$C310_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C320', {
    get: VfpuPairRegisters$C320_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C330', {
    get: VfpuPairRegisters$C330_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C400', {
    get: VfpuPairRegisters$C400_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C410', {
    get: VfpuPairRegisters$C410_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C420', {
    get: VfpuPairRegisters$C420_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C430', {
    get: VfpuPairRegisters$C430_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C500', {
    get: VfpuPairRegisters$C500_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C510', {
    get: VfpuPairRegisters$C510_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C520', {
    get: VfpuPairRegisters$C520_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C530', {
    get: VfpuPairRegisters$C530_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C600', {
    get: VfpuPairRegisters$C600_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C610', {
    get: VfpuPairRegisters$C610_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C620', {
    get: VfpuPairRegisters$C620_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C630', {
    get: VfpuPairRegisters$C630_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C700', {
    get: VfpuPairRegisters$C700_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C710', {
    get: VfpuPairRegisters$C710_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C720', {
    get: VfpuPairRegisters$C720_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C730', {
    get: VfpuPairRegisters$C730_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R000', {
    get: VfpuPairRegisters$R000_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R001', {
    get: VfpuPairRegisters$R001_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R002', {
    get: VfpuPairRegisters$R002_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R003', {
    get: VfpuPairRegisters$R003_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R100', {
    get: VfpuPairRegisters$R100_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R101', {
    get: VfpuPairRegisters$R101_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R102', {
    get: VfpuPairRegisters$R102_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R103', {
    get: VfpuPairRegisters$R103_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R200', {
    get: VfpuPairRegisters$R200_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R201', {
    get: VfpuPairRegisters$R201_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R202', {
    get: VfpuPairRegisters$R202_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R203', {
    get: VfpuPairRegisters$R203_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R300', {
    get: VfpuPairRegisters$R300_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R301', {
    get: VfpuPairRegisters$R301_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R302', {
    get: VfpuPairRegisters$R302_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R303', {
    get: VfpuPairRegisters$R303_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R400', {
    get: VfpuPairRegisters$R400_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R401', {
    get: VfpuPairRegisters$R401_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R402', {
    get: VfpuPairRegisters$R402_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R403', {
    get: VfpuPairRegisters$R403_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R500', {
    get: VfpuPairRegisters$R500_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R501', {
    get: VfpuPairRegisters$R501_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R502', {
    get: VfpuPairRegisters$R502_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R503', {
    get: VfpuPairRegisters$R503_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R600', {
    get: VfpuPairRegisters$R600_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R601', {
    get: VfpuPairRegisters$R601_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R602', {
    get: VfpuPairRegisters$R602_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R603', {
    get: VfpuPairRegisters$R603_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R700', {
    get: VfpuPairRegisters$R700_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R701', {
    get: VfpuPairRegisters$R701_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R702', {
    get: VfpuPairRegisters$R702_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R703', {
    get: VfpuPairRegisters$R703_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C002', {
    get: VfpuPairRegisters$C002_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C012', {
    get: VfpuPairRegisters$C012_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C022', {
    get: VfpuPairRegisters$C022_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C032', {
    get: VfpuPairRegisters$C032_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C102', {
    get: VfpuPairRegisters$C102_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C112', {
    get: VfpuPairRegisters$C112_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C122', {
    get: VfpuPairRegisters$C122_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C132', {
    get: VfpuPairRegisters$C132_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C202', {
    get: VfpuPairRegisters$C202_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C212', {
    get: VfpuPairRegisters$C212_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C222', {
    get: VfpuPairRegisters$C222_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C232', {
    get: VfpuPairRegisters$C232_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C302', {
    get: VfpuPairRegisters$C302_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C312', {
    get: VfpuPairRegisters$C312_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C322', {
    get: VfpuPairRegisters$C322_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C332', {
    get: VfpuPairRegisters$C332_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C402', {
    get: VfpuPairRegisters$C402_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C412', {
    get: VfpuPairRegisters$C412_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C422', {
    get: VfpuPairRegisters$C422_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C432', {
    get: VfpuPairRegisters$C432_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C502', {
    get: VfpuPairRegisters$C502_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C512', {
    get: VfpuPairRegisters$C512_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C522', {
    get: VfpuPairRegisters$C522_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C532', {
    get: VfpuPairRegisters$C532_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C602', {
    get: VfpuPairRegisters$C602_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C612', {
    get: VfpuPairRegisters$C612_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C622', {
    get: VfpuPairRegisters$C622_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C632', {
    get: VfpuPairRegisters$C632_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C702', {
    get: VfpuPairRegisters$C702_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C712', {
    get: VfpuPairRegisters$C712_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C722', {
    get: VfpuPairRegisters$C722_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'C732', {
    get: VfpuPairRegisters$C732_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R020', {
    get: VfpuPairRegisters$R020_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R021', {
    get: VfpuPairRegisters$R021_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R022', {
    get: VfpuPairRegisters$R022_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R023', {
    get: VfpuPairRegisters$R023_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R120', {
    get: VfpuPairRegisters$R120_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R121', {
    get: VfpuPairRegisters$R121_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R122', {
    get: VfpuPairRegisters$R122_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R123', {
    get: VfpuPairRegisters$R123_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R220', {
    get: VfpuPairRegisters$R220_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R221', {
    get: VfpuPairRegisters$R221_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R222', {
    get: VfpuPairRegisters$R222_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R223', {
    get: VfpuPairRegisters$R223_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R320', {
    get: VfpuPairRegisters$R320_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R321', {
    get: VfpuPairRegisters$R321_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R322', {
    get: VfpuPairRegisters$R322_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R323', {
    get: VfpuPairRegisters$R323_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R420', {
    get: VfpuPairRegisters$R420_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R421', {
    get: VfpuPairRegisters$R421_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R422', {
    get: VfpuPairRegisters$R422_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R423', {
    get: VfpuPairRegisters$R423_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R520', {
    get: VfpuPairRegisters$R520_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R521', {
    get: VfpuPairRegisters$R521_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R522', {
    get: VfpuPairRegisters$R522_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R523', {
    get: VfpuPairRegisters$R523_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R620', {
    get: VfpuPairRegisters$R620_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R621', {
    get: VfpuPairRegisters$R621_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R622', {
    get: VfpuPairRegisters$R622_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R623', {
    get: VfpuPairRegisters$R623_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R720', {
    get: VfpuPairRegisters$R720_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R721', {
    get: VfpuPairRegisters$R721_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R722', {
    get: VfpuPairRegisters$R722_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'R723', {
    get: VfpuPairRegisters$R723_getInstance
  });
  Object.defineProperty(VfpuPairRegisters, 'Companion', {
    get: VfpuPairRegisters$Companion_getInstance
  });
  package$cpu.VfpuPairRegisters = VfpuPairRegisters;
  Object.defineProperty(VfpuTripletRegisters, 'C000', {
    get: VfpuTripletRegisters$C000_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C010', {
    get: VfpuTripletRegisters$C010_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C020', {
    get: VfpuTripletRegisters$C020_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C030', {
    get: VfpuTripletRegisters$C030_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C100', {
    get: VfpuTripletRegisters$C100_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C110', {
    get: VfpuTripletRegisters$C110_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C120', {
    get: VfpuTripletRegisters$C120_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C130', {
    get: VfpuTripletRegisters$C130_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C200', {
    get: VfpuTripletRegisters$C200_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C210', {
    get: VfpuTripletRegisters$C210_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C220', {
    get: VfpuTripletRegisters$C220_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C230', {
    get: VfpuTripletRegisters$C230_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C300', {
    get: VfpuTripletRegisters$C300_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C310', {
    get: VfpuTripletRegisters$C310_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C320', {
    get: VfpuTripletRegisters$C320_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C330', {
    get: VfpuTripletRegisters$C330_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C400', {
    get: VfpuTripletRegisters$C400_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C410', {
    get: VfpuTripletRegisters$C410_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C420', {
    get: VfpuTripletRegisters$C420_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C430', {
    get: VfpuTripletRegisters$C430_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C500', {
    get: VfpuTripletRegisters$C500_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C510', {
    get: VfpuTripletRegisters$C510_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C520', {
    get: VfpuTripletRegisters$C520_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C530', {
    get: VfpuTripletRegisters$C530_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C600', {
    get: VfpuTripletRegisters$C600_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C610', {
    get: VfpuTripletRegisters$C610_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C620', {
    get: VfpuTripletRegisters$C620_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C630', {
    get: VfpuTripletRegisters$C630_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C700', {
    get: VfpuTripletRegisters$C700_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C710', {
    get: VfpuTripletRegisters$C710_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C720', {
    get: VfpuTripletRegisters$C720_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C730', {
    get: VfpuTripletRegisters$C730_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R000', {
    get: VfpuTripletRegisters$R000_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R001', {
    get: VfpuTripletRegisters$R001_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R002', {
    get: VfpuTripletRegisters$R002_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R003', {
    get: VfpuTripletRegisters$R003_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R100', {
    get: VfpuTripletRegisters$R100_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R101', {
    get: VfpuTripletRegisters$R101_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R102', {
    get: VfpuTripletRegisters$R102_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R103', {
    get: VfpuTripletRegisters$R103_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R200', {
    get: VfpuTripletRegisters$R200_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R201', {
    get: VfpuTripletRegisters$R201_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R202', {
    get: VfpuTripletRegisters$R202_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R203', {
    get: VfpuTripletRegisters$R203_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R300', {
    get: VfpuTripletRegisters$R300_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R301', {
    get: VfpuTripletRegisters$R301_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R302', {
    get: VfpuTripletRegisters$R302_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R303', {
    get: VfpuTripletRegisters$R303_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R400', {
    get: VfpuTripletRegisters$R400_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R401', {
    get: VfpuTripletRegisters$R401_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R402', {
    get: VfpuTripletRegisters$R402_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R403', {
    get: VfpuTripletRegisters$R403_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R500', {
    get: VfpuTripletRegisters$R500_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R501', {
    get: VfpuTripletRegisters$R501_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R502', {
    get: VfpuTripletRegisters$R502_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R503', {
    get: VfpuTripletRegisters$R503_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R600', {
    get: VfpuTripletRegisters$R600_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R601', {
    get: VfpuTripletRegisters$R601_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R602', {
    get: VfpuTripletRegisters$R602_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R603', {
    get: VfpuTripletRegisters$R603_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R700', {
    get: VfpuTripletRegisters$R700_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R701', {
    get: VfpuTripletRegisters$R701_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R702', {
    get: VfpuTripletRegisters$R702_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R703', {
    get: VfpuTripletRegisters$R703_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C001', {
    get: VfpuTripletRegisters$C001_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C011', {
    get: VfpuTripletRegisters$C011_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C021', {
    get: VfpuTripletRegisters$C021_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C031', {
    get: VfpuTripletRegisters$C031_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C101', {
    get: VfpuTripletRegisters$C101_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C111', {
    get: VfpuTripletRegisters$C111_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C121', {
    get: VfpuTripletRegisters$C121_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C131', {
    get: VfpuTripletRegisters$C131_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C201', {
    get: VfpuTripletRegisters$C201_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C211', {
    get: VfpuTripletRegisters$C211_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C221', {
    get: VfpuTripletRegisters$C221_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C231', {
    get: VfpuTripletRegisters$C231_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C301', {
    get: VfpuTripletRegisters$C301_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C311', {
    get: VfpuTripletRegisters$C311_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C321', {
    get: VfpuTripletRegisters$C321_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C331', {
    get: VfpuTripletRegisters$C331_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C401', {
    get: VfpuTripletRegisters$C401_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C411', {
    get: VfpuTripletRegisters$C411_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C421', {
    get: VfpuTripletRegisters$C421_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C431', {
    get: VfpuTripletRegisters$C431_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C501', {
    get: VfpuTripletRegisters$C501_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C511', {
    get: VfpuTripletRegisters$C511_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C521', {
    get: VfpuTripletRegisters$C521_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C531', {
    get: VfpuTripletRegisters$C531_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C601', {
    get: VfpuTripletRegisters$C601_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C611', {
    get: VfpuTripletRegisters$C611_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C621', {
    get: VfpuTripletRegisters$C621_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C631', {
    get: VfpuTripletRegisters$C631_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C701', {
    get: VfpuTripletRegisters$C701_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C711', {
    get: VfpuTripletRegisters$C711_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C721', {
    get: VfpuTripletRegisters$C721_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'C731', {
    get: VfpuTripletRegisters$C731_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R010', {
    get: VfpuTripletRegisters$R010_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R011', {
    get: VfpuTripletRegisters$R011_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R012', {
    get: VfpuTripletRegisters$R012_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R013', {
    get: VfpuTripletRegisters$R013_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R110', {
    get: VfpuTripletRegisters$R110_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R111', {
    get: VfpuTripletRegisters$R111_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R112', {
    get: VfpuTripletRegisters$R112_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R113', {
    get: VfpuTripletRegisters$R113_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R210', {
    get: VfpuTripletRegisters$R210_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R211', {
    get: VfpuTripletRegisters$R211_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R212', {
    get: VfpuTripletRegisters$R212_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R213', {
    get: VfpuTripletRegisters$R213_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R310', {
    get: VfpuTripletRegisters$R310_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R311', {
    get: VfpuTripletRegisters$R311_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R312', {
    get: VfpuTripletRegisters$R312_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R313', {
    get: VfpuTripletRegisters$R313_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R410', {
    get: VfpuTripletRegisters$R410_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R411', {
    get: VfpuTripletRegisters$R411_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R412', {
    get: VfpuTripletRegisters$R412_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R413', {
    get: VfpuTripletRegisters$R413_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R510', {
    get: VfpuTripletRegisters$R510_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R511', {
    get: VfpuTripletRegisters$R511_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R512', {
    get: VfpuTripletRegisters$R512_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R513', {
    get: VfpuTripletRegisters$R513_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R610', {
    get: VfpuTripletRegisters$R610_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R611', {
    get: VfpuTripletRegisters$R611_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R612', {
    get: VfpuTripletRegisters$R612_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R613', {
    get: VfpuTripletRegisters$R613_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R710', {
    get: VfpuTripletRegisters$R710_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R711', {
    get: VfpuTripletRegisters$R711_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R712', {
    get: VfpuTripletRegisters$R712_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'R713', {
    get: VfpuTripletRegisters$R713_getInstance
  });
  Object.defineProperty(VfpuTripletRegisters, 'Companion', {
    get: VfpuTripletRegisters$Companion_getInstance
  });
  package$cpu.VfpuTripletRegisters = VfpuTripletRegisters;
  Object.defineProperty(GlobalCpuState, 'Companion', {
    get: GlobalCpuState$Companion_getInstance
  });
  package$cpu.GlobalCpuState = GlobalCpuState;
  package$cpu.InstructionDecoder = InstructionDecoder;
  package$cpu.InstructionDispatcher = InstructionDispatcher;
  package$cpu.dispatch_jlbamt$ = dispatch;
  package$cpu.InstructionEvaluator = InstructionEvaluator;
  Object.defineProperty(package$cpu, 'InstructionOpcodeDecoder', {
    get: InstructionOpcodeDecoder_getInstance
  });
  Object.defineProperty(package$cpu, 'Instructions', {
    get: Instructions_getInstance
  });
  Object.defineProperty(package$cpu, 'ADDR_TYPE_NONE', {
    get: function () {
      return ADDR_TYPE_NONE;
    }
  });
  Object.defineProperty(package$cpu, 'ADDR_TYPE_REG', {
    get: function () {
      return ADDR_TYPE_REG;
    }
  });
  Object.defineProperty(package$cpu, 'ADDR_TYPE_16', {
    get: function () {
      return ADDR_TYPE_16;
    }
  });
  Object.defineProperty(package$cpu, 'ADDR_TYPE_26', {
    get: function () {
      return ADDR_TYPE_26;
    }
  });
  Object.defineProperty(package$cpu, 'INSTR_TYPE_PSP', {
    get: function () {
      return INSTR_TYPE_PSP;
    }
  });
  Object.defineProperty(package$cpu, 'INSTR_TYPE_SYSCALL', {
    get: function () {
      return INSTR_TYPE_SYSCALL;
    }
  });
  Object.defineProperty(package$cpu, 'INSTR_TYPE_B', {
    get: function () {
      return INSTR_TYPE_B;
    }
  });
  Object.defineProperty(package$cpu, 'INSTR_TYPE_LIKELY', {
    get: function () {
      return INSTR_TYPE_LIKELY;
    }
  });
  Object.defineProperty(package$cpu, 'INSTR_TYPE_JAL', {
    get: function () {
      return INSTR_TYPE_JAL;
    }
  });
  Object.defineProperty(package$cpu, 'INSTR_TYPE_JUMP', {
    get: function () {
      return INSTR_TYPE_JUMP;
    }
  });
  Object.defineProperty(package$cpu, 'INSTR_TYPE_BREAK', {
    get: function () {
      return INSTR_TYPE_BREAK;
    }
  });
  package$cpu.ValueMask = ValueMask;
  package$cpu.InstructionType = InstructionType;
  package$cpu.kescape_pdl1vz$ = kescape;
  package$cpu.Syscalls = Syscalls;
  package$cpu.TraceSyscallHandler = TraceSyscallHandler;
  var package$dis = package$cpu.dis || (package$cpu.dis = {});
  package$dis.NameProvider = NameProvider;
  Object.defineProperty(package$dis, 'DummyNameProvider', {
    get: DummyNameProvider_getInstance
  });
  Object.defineProperty(package$dis, 'Disassembler', {
    get: Disassembler_getInstance
  });
  package$dis.disasm_iry899$ = disasm;
  package$dis.disasmMacro_iry899$ = disasmMacro;
  package$dis.getPrintInstructionAt_iry899$ = getPrintInstructionAt;
  package$dis.printInstructionAt_iry899$ = printInstructionAt;
  var package$dynarec = package$cpu.dynarec || (package$cpu.dynarec = {});
  package$dynarec.DynarekMethodBuilder = DynarekMethodBuilder;
  package$dynarec.InstructionInfo = InstructionInfo;
  $$importsForInline$$['dynarek-js'] = $module$dynarek_js;
  package$dynarec.BaseDynarecMethodBuilder = BaseDynarecMethodBuilder;
  var package$interpreter = package$cpu.interpreter || (package$cpu.interpreter = {});
  package$interpreter.CpuInterpreter = CpuInterpreter;
  $$importsForInline$$['korio-js'] = $module$korio_js;
  InstructionInterpreter.prototype.MatrixContext = InstructionInterpreter$MatrixContext;
  InstructionInterpreter.prototype.VfpuContext = InstructionInterpreter$VfpuContext;
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_ZERO', {
    get: InstructionInterpreter$VfpuConstants$VFPU_ZERO_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_HUGE', {
    get: InstructionInterpreter$VfpuConstants$VFPU_HUGE_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_SQRT2', {
    get: InstructionInterpreter$VfpuConstants$VFPU_SQRT2_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_SQRT1_2', {
    get: InstructionInterpreter$VfpuConstants$VFPU_SQRT1_2_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_2_SQRTPI', {
    get: InstructionInterpreter$VfpuConstants$VFPU_2_SQRTPI_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_2_PI', {
    get: InstructionInterpreter$VfpuConstants$VFPU_2_PI_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_1_PI', {
    get: InstructionInterpreter$VfpuConstants$VFPU_1_PI_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_PI_4', {
    get: InstructionInterpreter$VfpuConstants$VFPU_PI_4_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_PI_2', {
    get: InstructionInterpreter$VfpuConstants$VFPU_PI_2_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_PI', {
    get: InstructionInterpreter$VfpuConstants$VFPU_PI_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_E', {
    get: InstructionInterpreter$VfpuConstants$VFPU_E_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_LOG2E', {
    get: InstructionInterpreter$VfpuConstants$VFPU_LOG2E_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_LOG10E', {
    get: InstructionInterpreter$VfpuConstants$VFPU_LOG10E_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_LN2', {
    get: InstructionInterpreter$VfpuConstants$VFPU_LN2_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_LN10', {
    get: InstructionInterpreter$VfpuConstants$VFPU_LN10_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_2PI', {
    get: InstructionInterpreter$VfpuConstants$VFPU_2PI_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_PI_6', {
    get: InstructionInterpreter$VfpuConstants$VFPU_PI_6_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_LOG10TWO', {
    get: InstructionInterpreter$VfpuConstants$VFPU_LOG10TWO_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_LOG2TEN', {
    get: InstructionInterpreter$VfpuConstants$VFPU_LOG2TEN_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'VFPU_SQRT3_2', {
    get: InstructionInterpreter$VfpuConstants$VFPU_SQRT3_2_getInstance
  });
  Object.defineProperty(InstructionInterpreter$VfpuConstants, 'Companion', {
    get: InstructionInterpreter$VfpuConstants$Companion_getInstance
  });
  InstructionInterpreter.prototype.VfpuConstants = InstructionInterpreter$VfpuConstants;
  Object.defineProperty(package$interpreter, 'InstructionInterpreter', {
    get: InstructionInterpreter_getInstance
  });
  PspController.Frame = PspController$Frame;
  var package$ctrl = package$kpspemu.ctrl || (package$kpspemu.ctrl = {});
  package$ctrl.PspController = PspController;
  Object.defineProperty(PspCtrlButtons, 'none', {
    get: PspCtrlButtons$none_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'select', {
    get: PspCtrlButtons$select_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'start', {
    get: PspCtrlButtons$start_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'up', {
    get: PspCtrlButtons$up_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'right', {
    get: PspCtrlButtons$right_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'down', {
    get: PspCtrlButtons$down_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'left', {
    get: PspCtrlButtons$left_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'leftTrigger', {
    get: PspCtrlButtons$leftTrigger_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'rightTrigger', {
    get: PspCtrlButtons$rightTrigger_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'triangle', {
    get: PspCtrlButtons$triangle_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'circle', {
    get: PspCtrlButtons$circle_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'cross', {
    get: PspCtrlButtons$cross_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'square', {
    get: PspCtrlButtons$square_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'home', {
    get: PspCtrlButtons$home_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'hold', {
    get: PspCtrlButtons$hold_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'wirelessLanUp', {
    get: PspCtrlButtons$wirelessLanUp_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'remote', {
    get: PspCtrlButtons$remote_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'volumeUp', {
    get: PspCtrlButtons$volumeUp_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'volumeDown', {
    get: PspCtrlButtons$volumeDown_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'screen', {
    get: PspCtrlButtons$screen_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'note', {
    get: PspCtrlButtons$note_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'discPresent', {
    get: PspCtrlButtons$discPresent_getInstance
  });
  Object.defineProperty(PspCtrlButtons, 'memoryStickPresent', {
    get: PspCtrlButtons$memoryStickPresent_getInstance
  });
  package$ctrl.PspCtrlButtons = PspCtrlButtons;
  var package$debug = package$kpspemu.debug || (package$kpspemu.debug = {});
  package$debug.BaseBreakpoints = BaseBreakpoints;
  Object.defineProperty(PspDisplay, 'Companion', {
    get: PspDisplay$Companion_getInstance
  });
  var package$display = package$kpspemu.display || (package$kpspemu.display = {});
  package$display.PspDisplay = PspDisplay;
  package$display.DisplayTimes = DisplayTimes;
  Object.defineProperty(Cso, 'Companion', {
    get: Cso$Companion_getInstance
  });
  var package$format = package$kpspemu.format || (package$kpspemu.format = {});
  package$format.Cso = Cso;
  package$format.openAsCso_g5ykjz$ = openAsCso;
  package$format.openAsCso_93ma6j$ = openAsCso_0;
  Object.defineProperty(Pbp, 'Companion', {
    get: Pbp$Companion_getInstance
  });
  package$format.Pbp = Pbp;
  Object.defineProperty(Psf$DataType, 'Companion', {
    get: Psf$DataType$Companion_getInstance
  });
  Psf.DataType = Psf$DataType;
  Object.defineProperty(Psf$HeaderStruct, 'Companion', {
    get: Psf$HeaderStruct$Companion_getInstance
  });
  Psf.HeaderStruct = Psf$HeaderStruct;
  Psf.IEntryStruct = Psf$IEntryStruct;
  Object.defineProperty(Psf$EntryStruct, 'Companion', {
    get: Psf$EntryStruct$Companion_getInstance
  });
  Psf.EntryStruct = Psf$EntryStruct;
  Object.defineProperty(Psf, 'Companion', {
    get: Psf$Companion_getInstance
  });
  package$format.Psf = Psf;
  Object.defineProperty(PspFileFormat, 'ELF', {
    get: PspFileFormat$ELF_getInstance
  });
  Object.defineProperty(PspFileFormat, 'ENCRYPTED_ELF', {
    get: PspFileFormat$ENCRYPTED_ELF_getInstance
  });
  Object.defineProperty(PspFileFormat, 'PBP', {
    get: PspFileFormat$PBP_getInstance
  });
  Object.defineProperty(PspFileFormat, 'CSO', {
    get: PspFileFormat$CSO_getInstance
  });
  Object.defineProperty(PspFileFormat, 'ISO', {
    get: PspFileFormat$ISO_getInstance
  });
  Object.defineProperty(PspFileFormat, 'ZIP', {
    get: PspFileFormat$ZIP_getInstance
  });
  Object.defineProperty(PspFileFormat, 'Companion', {
    get: PspFileFormat$Companion_getInstance
  });
  package$format.PspFileFormat = PspFileFormat;
  package$format.detectPspFormat_964n91$ = detectPspFormat;
  package$format.detectPspFormat_93ma6j$ = detectPspFormat_0;
  package$format.detectPspFormat_igl5gt$ = detectPspFormat_1;
  CryptedElf$Keys.prototype.TagInfo = CryptedElf$Keys$TagInfo;
  Object.defineProperty(CryptedElf.prototype, 'Keys', {
    get: CryptedElf$Keys_getInstance
  });
  var package$elf = package$format.elf || (package$format.elf = {});
  Object.defineProperty(package$elf, 'CryptedElf', {
    get: CryptedElf_getInstance
  });
  Object.defineProperty(Elf, 'Companion', {
    get: Elf$Companion_getInstance
  });
  Object.defineProperty(Elf$Header, 'Companion', {
    get: Elf$Header$Companion_getInstance
  });
  Elf.Header = Elf$Header;
  package$elf.Elf = Elf;
  Object.defineProperty(ElfProgramHeaderType, 'Companion', {
    get: ElfProgramHeaderType$Companion_getInstance
  });
  package$elf.ElfProgramHeaderType = ElfProgramHeaderType;
  Object.defineProperty(ElfSectionHeaderType, 'Companion', {
    get: ElfSectionHeaderType$Companion_getInstance
  });
  package$elf.ElfSectionHeaderType = ElfSectionHeaderType;
  Object.defineProperty(ElfSectionHeaderFlags, 'Companion', {
    get: ElfSectionHeaderFlags$Companion_getInstance
  });
  package$elf.ElfSectionHeaderFlags = ElfSectionHeaderFlags;
  Object.defineProperty(ElfProgramHeaderFlags, 'Companion', {
    get: ElfProgramHeaderFlags$Companion_getInstance
  });
  package$elf.ElfProgramHeaderFlags = ElfProgramHeaderFlags;
  Object.defineProperty(ElfType, 'Executable', {
    get: ElfType$Executable_getInstance
  });
  Object.defineProperty(ElfType, 'Prx', {
    get: ElfType$Prx_getInstance
  });
  Object.defineProperty(ElfType, 'Companion', {
    get: ElfType$Companion_getInstance
  });
  package$elf.ElfType = ElfType;
  Object.defineProperty(ElfMachine, 'ALLEGREX', {
    get: ElfMachine$ALLEGREX_getInstance
  });
  Object.defineProperty(ElfMachine, 'Companion', {
    get: ElfMachine$Companion_getInstance
  });
  package$elf.ElfMachine = ElfMachine;
  Object.defineProperty(ElfPspModuleFlags, 'User', {
    get: ElfPspModuleFlags$User_getInstance
  });
  Object.defineProperty(ElfPspModuleFlags, 'Kernel', {
    get: ElfPspModuleFlags$Kernel_getInstance
  });
  Object.defineProperty(ElfPspModuleFlags, 'Companion', {
    get: ElfPspModuleFlags$Companion_getInstance
  });
  package$elf.ElfPspModuleFlags = ElfPspModuleFlags;
  Object.defineProperty(ElfPspLibFlags, 'DirectJump', {
    get: ElfPspLibFlags$DirectJump_getInstance
  });
  Object.defineProperty(ElfPspLibFlags, 'Syscall', {
    get: ElfPspLibFlags$Syscall_getInstance
  });
  Object.defineProperty(ElfPspLibFlags, 'SysLib', {
    get: ElfPspLibFlags$SysLib_getInstance
  });
  Object.defineProperty(ElfPspLibFlags, 'Companion', {
    get: ElfPspLibFlags$Companion_getInstance
  });
  package$elf.ElfPspLibFlags = ElfPspLibFlags;
  Object.defineProperty(ElfPspModuleNids, 'MODULE_INFO', {
    get: ElfPspModuleNids$MODULE_INFO_getInstance
  });
  Object.defineProperty(ElfPspModuleNids, 'MODULE_BOOTSTART', {
    get: ElfPspModuleNids$MODULE_BOOTSTART_getInstance
  });
  Object.defineProperty(ElfPspModuleNids, 'MODULE_REBOOT_BEFORE', {
    get: ElfPspModuleNids$MODULE_REBOOT_BEFORE_getInstance
  });
  Object.defineProperty(ElfPspModuleNids, 'MODULE_START', {
    get: ElfPspModuleNids$MODULE_START_getInstance
  });
  Object.defineProperty(ElfPspModuleNids, 'MODULE_START_THREAD_PARAMETER', {
    get: ElfPspModuleNids$MODULE_START_THREAD_PARAMETER_getInstance
  });
  Object.defineProperty(ElfPspModuleNids, 'MODULE_STOP', {
    get: ElfPspModuleNids$MODULE_STOP_getInstance
  });
  Object.defineProperty(ElfPspModuleNids, 'MODULE_STOP_THREAD_PARAMETER', {
    get: ElfPspModuleNids$MODULE_STOP_THREAD_PARAMETER_getInstance
  });
  Object.defineProperty(ElfPspModuleNids, 'Companion', {
    get: ElfPspModuleNids$Companion_getInstance
  });
  package$elf.ElfPspModuleNids = ElfPspModuleNids;
  Object.defineProperty(ElfRelocType, 'None', {
    get: ElfRelocType$None_getInstance
  });
  Object.defineProperty(ElfRelocType, 'Mips16', {
    get: ElfRelocType$Mips16_getInstance
  });
  Object.defineProperty(ElfRelocType, 'Mips32', {
    get: ElfRelocType$Mips32_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsRel32', {
    get: ElfRelocType$MipsRel32_getInstance
  });
  Object.defineProperty(ElfRelocType, 'Mips26', {
    get: ElfRelocType$Mips26_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsHi16', {
    get: ElfRelocType$MipsHi16_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsLo16', {
    get: ElfRelocType$MipsLo16_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsGpRel16', {
    get: ElfRelocType$MipsGpRel16_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsLiteral', {
    get: ElfRelocType$MipsLiteral_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsGot16', {
    get: ElfRelocType$MipsGot16_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsPc16', {
    get: ElfRelocType$MipsPc16_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsCall16', {
    get: ElfRelocType$MipsCall16_getInstance
  });
  Object.defineProperty(ElfRelocType, 'MipsGpRel32', {
    get: ElfRelocType$MipsGpRel32_getInstance
  });
  Object.defineProperty(ElfRelocType, 'StopRelocation', {
    get: ElfRelocType$StopRelocation_getInstance
  });
  Object.defineProperty(ElfRelocType, 'Companion', {
    get: ElfRelocType$Companion_getInstance
  });
  package$elf.ElfRelocType = ElfRelocType;
  Object.defineProperty(ElfReloc, 'Companion', {
    get: ElfReloc$Companion_getInstance
  });
  package$elf.ElfReloc = ElfReloc;
  Object.defineProperty(ElfProgramHeader, 'Companion', {
    get: ElfProgramHeader$Companion_getInstance
  });
  package$elf.ElfProgramHeader = ElfProgramHeader;
  Object.defineProperty(ElfSectionHeader, 'Companion', {
    get: ElfSectionHeader$Companion_getInstance
  });
  package$elf.ElfSectionHeader = ElfSectionHeader;
  package$elf.ElfDwarf = ElfDwarf;
  Object.defineProperty(ElfPspModuleInfo, 'Companion', {
    get: ElfPspModuleInfo$Companion_getInstance
  });
  package$elf.ElfPspModuleInfo = ElfPspModuleInfo;
  Object.defineProperty(ElfPspModuleImport, 'Companion', {
    get: ElfPspModuleImport$Companion_getInstance
  });
  package$elf.ElfPspModuleImport = ElfPspModuleImport;
  Object.defineProperty(ElfPspModuleExport, 'Companion', {
    get: ElfPspModuleExport$Companion_getInstance
  });
  package$elf.ElfPspModuleExport = ElfPspModuleExport;
  Object.defineProperty(ElfPspModuleInfoAtributesEnum, 'Companion', {
    get: ElfPspModuleInfoAtributesEnum$Companion_getInstance
  });
  package$elf.ElfPspModuleInfoAtributesEnum = ElfPspModuleInfoAtributesEnum;
  package$elf.InstructionReader = InstructionReader;
  package$elf.loadElf_9qh7za$ = loadElf;
  package$elf.loadElfAndSetRegisters_eqrnj5$ = loadElfAndSetRegisters;
  Object.defineProperty(PspElf, 'Companion', {
    get: PspElf$Companion_getInstance
  });
  PspElf.Res1 = PspElf$Res1;
  package$elf.PspElf = PspElf;
  package$elf.Bits = Bits;
  package$elf.Instruction = Instruction;
  var package$ge = package$kpspemu.ge || (package$kpspemu.ge = {});
  package$ge.Ge = Ge;
  package$ge.GeCallback = GeCallback;
  Object.defineProperty(PrimAction, 'NOTHING', {
    get: PrimAction$NOTHING_getInstance
  });
  Object.defineProperty(PrimAction, 'FLUSH_PRIM', {
    get: PrimAction$FLUSH_PRIM_getInstance
  });
  package$ge.PrimAction = PrimAction;
  Object.defineProperty(ListSyncKind, 'DONE', {
    get: ListSyncKind$DONE_getInstance
  });
  Object.defineProperty(ListSyncKind, 'QUEUED', {
    get: ListSyncKind$QUEUED_getInstance
  });
  Object.defineProperty(ListSyncKind, 'DRAWING_DONE', {
    get: ListSyncKind$DRAWING_DONE_getInstance
  });
  Object.defineProperty(ListSyncKind, 'STALL_REACHED', {
    get: ListSyncKind$STALL_REACHED_getInstance
  });
  Object.defineProperty(ListSyncKind, 'CANCEL_DONE', {
    get: ListSyncKind$CANCEL_DONE_getInstance
  });
  package$ge.ListSyncKind = ListSyncKind;
  Object.defineProperty(package$ge, 'PspGeSyncType', {
    get: PspGeSyncType_getInstance
  });
  package$ge.GeBatchData = GeBatchData;
  package$ge.GeBatch = GeBatch;
  package$ge.toMatrix4_7tjwd1$ = toMatrix4;
  package$ge.GeBatchBuilder = GeBatchBuilder;
  Object.defineProperty(CullingDirection, 'COUNTER_CLOCK_WISE', {
    get: CullingDirection$COUNTER_CLOCK_WISE_getInstance
  });
  Object.defineProperty(CullingDirection, 'CLOCK_WISE', {
    get: CullingDirection$CLOCK_WISE_getInstance
  });
  Object.defineProperty(CullingDirection, 'Companion', {
    get: CullingDirection$Companion_getInstance
  });
  package$ge.CullingDirection = CullingDirection;
  Object.defineProperty(SyncType, 'WAIT_FOR_COMPLETION', {
    get: SyncType$WAIT_FOR_COMPLETION_getInstance
  });
  Object.defineProperty(SyncType, 'PEEK', {
    get: SyncType$PEEK_getInstance
  });
  Object.defineProperty(SyncType, 'Companion', {
    get: SyncType$Companion_getInstance
  });
  package$ge.SyncType = SyncType;
  Object.defineProperty(DisplayListStatus, 'COMPLETED', {
    get: DisplayListStatus$COMPLETED_getInstance
  });
  Object.defineProperty(DisplayListStatus, 'QUEUED', {
    get: DisplayListStatus$QUEUED_getInstance
  });
  Object.defineProperty(DisplayListStatus, 'DRAWING', {
    get: DisplayListStatus$DRAWING_getInstance
  });
  Object.defineProperty(DisplayListStatus, 'STALLING', {
    get: DisplayListStatus$STALLING_getInstance
  });
  Object.defineProperty(DisplayListStatus, 'PAUSED', {
    get: DisplayListStatus$PAUSED_getInstance
  });
  Object.defineProperty(DisplayListStatus, 'Companion', {
    get: DisplayListStatus$Companion_getInstance
  });
  package$ge.DisplayListStatus = DisplayListStatus;
  Object.defineProperty(IndexEnum, 'VOID', {
    get: IndexEnum$VOID_getInstance
  });
  Object.defineProperty(IndexEnum, 'BYTE', {
    get: IndexEnum$BYTE_getInstance
  });
  Object.defineProperty(IndexEnum, 'SHORT', {
    get: IndexEnum$SHORT_getInstance
  });
  Object.defineProperty(IndexEnum, 'Companion', {
    get: IndexEnum$Companion_getInstance
  });
  package$ge.IndexEnum = IndexEnum;
  Object.defineProperty(NumericEnum_0, 'VOID', {
    get: NumericEnum$VOID_getInstance
  });
  Object.defineProperty(NumericEnum_0, 'BYTE', {
    get: NumericEnum$BYTE_getInstance
  });
  Object.defineProperty(NumericEnum_0, 'SHORT', {
    get: NumericEnum$SHORT_getInstance
  });
  Object.defineProperty(NumericEnum_0, 'FLOAT', {
    get: NumericEnum$FLOAT_getInstance
  });
  Object.defineProperty(NumericEnum_0, 'Companion', {
    get: NumericEnum$Companion_getInstance
  });
  package$ge.NumericEnum = NumericEnum_0;
  Object.defineProperty(ColorEnum, 'VOID', {
    get: ColorEnum$VOID_getInstance
  });
  Object.defineProperty(ColorEnum, 'INVALID1', {
    get: ColorEnum$INVALID1_getInstance
  });
  Object.defineProperty(ColorEnum, 'INVALID2', {
    get: ColorEnum$INVALID2_getInstance
  });
  Object.defineProperty(ColorEnum, 'INVALID3', {
    get: ColorEnum$INVALID3_getInstance
  });
  Object.defineProperty(ColorEnum, 'COLOR5650', {
    get: ColorEnum$COLOR5650_getInstance
  });
  Object.defineProperty(ColorEnum, 'COLOR5551', {
    get: ColorEnum$COLOR5551_getInstance
  });
  Object.defineProperty(ColorEnum, 'COLOR4444', {
    get: ColorEnum$COLOR4444_getInstance
  });
  Object.defineProperty(ColorEnum, 'COLOR8888', {
    get: ColorEnum$COLOR8888_getInstance
  });
  Object.defineProperty(ColorEnum, 'Companion', {
    get: ColorEnum$Companion_getInstance
  });
  package$ge.ColorEnum = ColorEnum;
  Object.defineProperty(LightTypeEnum, 'DIRECTIONAL', {
    get: LightTypeEnum$DIRECTIONAL_getInstance
  });
  Object.defineProperty(LightTypeEnum, 'POINT_LIGHT', {
    get: LightTypeEnum$POINT_LIGHT_getInstance
  });
  Object.defineProperty(LightTypeEnum, 'SPOT_LIGHT', {
    get: LightTypeEnum$SPOT_LIGHT_getInstance
  });
  Object.defineProperty(LightTypeEnum, 'Companion', {
    get: LightTypeEnum$Companion_getInstance
  });
  package$ge.LightTypeEnum = LightTypeEnum;
  Object.defineProperty(LightModelEnum, 'SINGLE_COLOR', {
    get: LightModelEnum$SINGLE_COLOR_getInstance
  });
  Object.defineProperty(LightModelEnum, 'SEPARATE_SPECULAR_COLOR', {
    get: LightModelEnum$SEPARATE_SPECULAR_COLOR_getInstance
  });
  Object.defineProperty(LightModelEnum, 'Companion', {
    get: LightModelEnum$Companion_getInstance
  });
  package$ge.LightModelEnum = LightModelEnum;
  Object.defineProperty(TextureProjectionMapMode, 'GU_POSITION', {
    get: TextureProjectionMapMode$GU_POSITION_getInstance
  });
  Object.defineProperty(TextureProjectionMapMode, 'GU_UV', {
    get: TextureProjectionMapMode$GU_UV_getInstance
  });
  Object.defineProperty(TextureProjectionMapMode, 'GU_NORMALIZED_NORMAL', {
    get: TextureProjectionMapMode$GU_NORMALIZED_NORMAL_getInstance
  });
  Object.defineProperty(TextureProjectionMapMode, 'GU_NORMAL', {
    get: TextureProjectionMapMode$GU_NORMAL_getInstance
  });
  Object.defineProperty(TextureProjectionMapMode, 'Companion', {
    get: TextureProjectionMapMode$Companion_getInstance
  });
  package$ge.TextureProjectionMapMode = TextureProjectionMapMode;
  Object.defineProperty(TextureMapMode, 'GU_TEXTURE_COORDS', {
    get: TextureMapMode$GU_TEXTURE_COORDS_getInstance
  });
  Object.defineProperty(TextureMapMode, 'GU_TEXTURE_MATRIX', {
    get: TextureMapMode$GU_TEXTURE_MATRIX_getInstance
  });
  Object.defineProperty(TextureMapMode, 'GU_ENVIRONMENT_MAP', {
    get: TextureMapMode$GU_ENVIRONMENT_MAP_getInstance
  });
  Object.defineProperty(TextureMapMode, 'Companion', {
    get: TextureMapMode$Companion_getInstance
  });
  package$ge.TextureMapMode = TextureMapMode;
  Object.defineProperty(TextureLevelMode, 'AUTO', {
    get: TextureLevelMode$AUTO_getInstance
  });
  Object.defineProperty(TextureLevelMode, 'CONST', {
    get: TextureLevelMode$CONST_getInstance
  });
  Object.defineProperty(TextureLevelMode, 'SLOPE', {
    get: TextureLevelMode$SLOPE_getInstance
  });
  Object.defineProperty(TextureLevelMode, 'Companion', {
    get: TextureLevelMode$Companion_getInstance
  });
  package$ge.TextureLevelMode = TextureLevelMode;
  Object.defineProperty(TestFunctionEnum, 'NEVER', {
    get: TestFunctionEnum$NEVER_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'ALWAYS', {
    get: TestFunctionEnum$ALWAYS_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'EQUAL', {
    get: TestFunctionEnum$EQUAL_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'NOT_EQUAL', {
    get: TestFunctionEnum$NOT_EQUAL_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'LESS', {
    get: TestFunctionEnum$LESS_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'LESS_OR_EQUAL', {
    get: TestFunctionEnum$LESS_OR_EQUAL_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'GREATER', {
    get: TestFunctionEnum$GREATER_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'GREATER_OR_EQUAL', {
    get: TestFunctionEnum$GREATER_OR_EQUAL_getInstance
  });
  Object.defineProperty(TestFunctionEnum, 'Companion', {
    get: TestFunctionEnum$Companion_getInstance
  });
  package$ge.TestFunctionEnum = TestFunctionEnum;
  Object.defineProperty(ShadingModelEnum, 'FLAT', {
    get: ShadingModelEnum$FLAT_getInstance
  });
  Object.defineProperty(ShadingModelEnum, 'SMOOTH', {
    get: ShadingModelEnum$SMOOTH_getInstance
  });
  Object.defineProperty(ShadingModelEnum, 'Companion', {
    get: ShadingModelEnum$Companion_getInstance
  });
  package$ge.ShadingModelEnum = ShadingModelEnum;
  Object.defineProperty(GuBlendingFactor, 'GU_SRC_COLOR', {
    get: GuBlendingFactor$GU_SRC_COLOR_getInstance
  });
  Object.defineProperty(GuBlendingFactor, 'GU_ONE_MINUS_SRC_COLOR', {
    get: GuBlendingFactor$GU_ONE_MINUS_SRC_COLOR_getInstance
  });
  Object.defineProperty(GuBlendingFactor, 'GU_SRC_ALPHA', {
    get: GuBlendingFactor$GU_SRC_ALPHA_getInstance
  });
  Object.defineProperty(GuBlendingFactor, 'GU_ONE_MINUS_SRC_ALPHA', {
    get: GuBlendingFactor$GU_ONE_MINUS_SRC_ALPHA_getInstance
  });
  Object.defineProperty(GuBlendingFactor, 'GU_DST_ALPHA', {
    get: GuBlendingFactor$GU_DST_ALPHA_getInstance
  });
  Object.defineProperty(GuBlendingFactor, 'GU_ONE_MINUS_DST_ALPHA', {
    get: GuBlendingFactor$GU_ONE_MINUS_DST_ALPHA_getInstance
  });
  Object.defineProperty(GuBlendingFactor, 'GU_FIX', {
    get: GuBlendingFactor$GU_FIX_getInstance
  });
  Object.defineProperty(GuBlendingFactor, 'Companion', {
    get: GuBlendingFactor$Companion_getInstance
  });
  package$ge.GuBlendingFactor = GuBlendingFactor;
  Object.defineProperty(GuBlendingEquation, 'ADD', {
    get: GuBlendingEquation$ADD_getInstance
  });
  Object.defineProperty(GuBlendingEquation, 'SUBSTRACT', {
    get: GuBlendingEquation$SUBSTRACT_getInstance
  });
  Object.defineProperty(GuBlendingEquation, 'REVERSE_SUBSTRACT', {
    get: GuBlendingEquation$REVERSE_SUBSTRACT_getInstance
  });
  Object.defineProperty(GuBlendingEquation, 'MIN', {
    get: GuBlendingEquation$MIN_getInstance
  });
  Object.defineProperty(GuBlendingEquation, 'MAX', {
    get: GuBlendingEquation$MAX_getInstance
  });
  Object.defineProperty(GuBlendingEquation, 'ABS', {
    get: GuBlendingEquation$ABS_getInstance
  });
  Object.defineProperty(GuBlendingEquation, 'Companion', {
    get: GuBlendingEquation$Companion_getInstance
  });
  package$ge.GuBlendingEquation = GuBlendingEquation;
  Object.defineProperty(StencilOperationEnum, 'KEEP', {
    get: StencilOperationEnum$KEEP_getInstance
  });
  Object.defineProperty(StencilOperationEnum, 'ZERO', {
    get: StencilOperationEnum$ZERO_getInstance
  });
  Object.defineProperty(StencilOperationEnum, 'REPLACE', {
    get: StencilOperationEnum$REPLACE_getInstance
  });
  Object.defineProperty(StencilOperationEnum, 'INVERT', {
    get: StencilOperationEnum$INVERT_getInstance
  });
  Object.defineProperty(StencilOperationEnum, 'INCREMENT', {
    get: StencilOperationEnum$INCREMENT_getInstance
  });
  Object.defineProperty(StencilOperationEnum, 'DECREMENT', {
    get: StencilOperationEnum$DECREMENT_getInstance
  });
  Object.defineProperty(StencilOperationEnum, 'Companion', {
    get: StencilOperationEnum$Companion_getInstance
  });
  package$ge.StencilOperationEnum = StencilOperationEnum;
  Object.defineProperty(WrapMode, 'REPEAT', {
    get: WrapMode$REPEAT_getInstance
  });
  Object.defineProperty(WrapMode, 'CLAMP', {
    get: WrapMode$CLAMP_getInstance
  });
  Object.defineProperty(WrapMode, 'Companion', {
    get: WrapMode$Companion_getInstance
  });
  package$ge.WrapMode = WrapMode;
  Object.defineProperty(TextureEffect, 'MODULATE', {
    get: TextureEffect$MODULATE_getInstance
  });
  Object.defineProperty(TextureEffect, 'DECAL', {
    get: TextureEffect$DECAL_getInstance
  });
  Object.defineProperty(TextureEffect, 'BLEND', {
    get: TextureEffect$BLEND_getInstance
  });
  Object.defineProperty(TextureEffect, 'REPLACE', {
    get: TextureEffect$REPLACE_getInstance
  });
  Object.defineProperty(TextureEffect, 'ADD', {
    get: TextureEffect$ADD_getInstance
  });
  Object.defineProperty(TextureEffect, 'Companion', {
    get: TextureEffect$Companion_getInstance
  });
  package$ge.TextureEffect = TextureEffect;
  Object.defineProperty(TextureFilter, 'NEAREST', {
    get: TextureFilter$NEAREST_getInstance
  });
  Object.defineProperty(TextureFilter, 'LINEAR', {
    get: TextureFilter$LINEAR_getInstance
  });
  Object.defineProperty(TextureFilter, 'NEAREST_MIPMAP_NEAREST', {
    get: TextureFilter$NEAREST_MIPMAP_NEAREST_getInstance
  });
  Object.defineProperty(TextureFilter, 'LINEAR_MIPMAP_NEAREST', {
    get: TextureFilter$LINEAR_MIPMAP_NEAREST_getInstance
  });
  Object.defineProperty(TextureFilter, 'NEAREST_MIPMAP_LINEAR', {
    get: TextureFilter$NEAREST_MIPMAP_LINEAR_getInstance
  });
  Object.defineProperty(TextureFilter, 'LINEAR_MIPMAP_LINEAR', {
    get: TextureFilter$LINEAR_MIPMAP_LINEAR_getInstance
  });
  Object.defineProperty(TextureFilter, 'Companion', {
    get: TextureFilter$Companion_getInstance
  });
  package$ge.TextureFilter = TextureFilter;
  Object.defineProperty(TextureColorComponent, 'RGB', {
    get: TextureColorComponent$RGB_getInstance
  });
  Object.defineProperty(TextureColorComponent, 'RGBA', {
    get: TextureColorComponent$RGBA_getInstance
  });
  Object.defineProperty(TextureColorComponent, 'Companion', {
    get: TextureColorComponent$Companion_getInstance
  });
  package$ge.TextureColorComponent = TextureColorComponent;
  Object.defineProperty(PrimitiveType, 'POINTS', {
    get: PrimitiveType$POINTS_getInstance
  });
  Object.defineProperty(PrimitiveType, 'LINES', {
    get: PrimitiveType$LINES_getInstance
  });
  Object.defineProperty(PrimitiveType, 'LINE_STRIP', {
    get: PrimitiveType$LINE_STRIP_getInstance
  });
  Object.defineProperty(PrimitiveType, 'TRIANGLES', {
    get: PrimitiveType$TRIANGLES_getInstance
  });
  Object.defineProperty(PrimitiveType, 'TRIANGLE_STRIP', {
    get: PrimitiveType$TRIANGLE_STRIP_getInstance
  });
  Object.defineProperty(PrimitiveType, 'TRIANGLE_FAN', {
    get: PrimitiveType$TRIANGLE_FAN_getInstance
  });
  Object.defineProperty(PrimitiveType, 'SPRITES', {
    get: PrimitiveType$SPRITES_getInstance
  });
  Object.defineProperty(PrimitiveType, 'Companion', {
    get: PrimitiveType$Companion_getInstance
  });
  package$ge.PrimitiveType = PrimitiveType;
  Object.defineProperty(package$ge, 'ClearBufferSet', {
    get: ClearBufferSet_getInstance
  });
  Object.defineProperty(package$ge, 'PspRGB_565', {
    get: PspRGB_565_getInstance
  });
  Object.defineProperty(package$ge, 'PspRGBA_5551', {
    get: PspRGBA_5551_getInstance
  });
  Object.defineProperty(PixelFormat, 'RGBA_5650', {
    get: PixelFormat$RGBA_5650_getInstance
  });
  Object.defineProperty(PixelFormat, 'RGBA_5551', {
    get: PixelFormat$RGBA_5551_getInstance
  });
  Object.defineProperty(PixelFormat, 'RGBA_4444', {
    get: PixelFormat$RGBA_4444_getInstance
  });
  Object.defineProperty(PixelFormat, 'RGBA_8888', {
    get: PixelFormat$RGBA_8888_getInstance
  });
  Object.defineProperty(PixelFormat, 'PALETTE_T4', {
    get: PixelFormat$PALETTE_T4_getInstance
  });
  Object.defineProperty(PixelFormat, 'PALETTE_T8', {
    get: PixelFormat$PALETTE_T8_getInstance
  });
  Object.defineProperty(PixelFormat, 'PALETTE_T16', {
    get: PixelFormat$PALETTE_T16_getInstance
  });
  Object.defineProperty(PixelFormat, 'PALETTE_T32', {
    get: PixelFormat$PALETTE_T32_getInstance
  });
  Object.defineProperty(PixelFormat, 'COMPRESSED_DXT1', {
    get: PixelFormat$COMPRESSED_DXT1_getInstance
  });
  Object.defineProperty(PixelFormat, 'COMPRESSED_DXT3', {
    get: PixelFormat$COMPRESSED_DXT3_getInstance
  });
  Object.defineProperty(PixelFormat, 'COMPRESSED_DXT5', {
    get: PixelFormat$COMPRESSED_DXT5_getInstance
  });
  Object.defineProperty(PixelFormat, 'Companion', {
    get: PixelFormat$Companion_getInstance
  });
  package$ge.PixelFormat = PixelFormat;
  package$ge.GeList = GeList;
  Object.defineProperty(package$ge, 'GeOpCodes', {
    get: GeOpCodes_getInstance
  });
  package$ge.bool1_za3lpa$ = bool1;
  package$ge.parambool_vux9f0$ = parambool;
  package$ge.param1_vux9f0$ = param1;
  package$ge.param2_vux9f0$ = param2;
  package$ge.param3_vux9f0$ = param3;
  package$ge.param4_vux9f0$ = param4;
  package$ge.param5_vux9f0$ = param5;
  package$ge.param8_vux9f0$ = param8;
  package$ge.param10_vux9f0$ = param10;
  package$ge.param16_vux9f0$ = param16;
  package$ge.param24_za3lpa$ = param24;
  package$ge.float1_za3lpa$ = float1;
  package$ge.VertexState = VertexState;
  package$ge.ViewPort = ViewPort;
  package$ge.Region = Region;
  Object.defineProperty(Light, 'Companion', {
    get: Light$Companion_getInstance
  });
  package$ge.Light = Light;
  package$ge.Lightning = Lightning;
  package$ge.MipmapState = MipmapState;
  package$ge.ClutReader = ClutReader;
  package$ge.ClutState = ClutState;
  package$ge.TextureState = TextureState;
  package$ge.CullingState = CullingState;
  package$ge.DepthTestState = DepthTestState;
  Object.defineProperty(Color, 'Companion', {
    get: Color$Companion_getInstance
  });
  package$ge.Color = Color;
  package$ge.Blending = Blending;
  package$ge.AlphaTest = AlphaTest;
  package$ge.Rectangle = Rectangle;
  package$ge.ClipPlane = ClipPlane;
  package$ge.StencilState = StencilState;
  package$ge.PatchState = PatchState;
  package$ge.Fog = Fog;
  package$ge.LogicOp = LogicOp;
  package$ge.LineSmoothState = LineSmoothState;
  package$ge.PatchCullingState = PatchCullingState;
  package$ge.OffsetState = OffsetState;
  Object.defineProperty(GeState, 'Companion', {
    get: GeState$Companion_getInstance
  });
  package$ge.GeState = GeState;
  package$ge.SkinningState = SkinningState;
  package$ge.ColorTestState = ColorTestState;
  package$ge.DitheringState = DitheringState;
  package$ge.GpuFrameBufferState = GpuFrameBufferState;
  Object.defineProperty(VertexType, 'Companion', {
    get: VertexType$Companion_getInstance
  });
  package$ge.VertexType = VertexType;
  package$ge.init_333mji$ = init;
  package$ge.VertexRaw = VertexRaw;
  package$ge.VertexReader = VertexReader;
  package$ge.setTo_dtqz75$ = setTo;
  package$ge.unswizzleInline_q840pi$ = unswizzleInline;
  package$ge.Gpu = Gpu;
  package$ge.GpuRenderer = GpuRenderer;
  package$ge.DummyGpuRenderer = DummyGpuRenderer;
  var package$hle = package$kpspemu.hle || (package$kpspemu.hle = {});
  package$hle.registerNativeModules_m3jm4f$ = registerNativeModules;
  package$hle.registerNativeModules_c03h7v$ = registerNativeModules_0;
  package$hle.RegisterReader = RegisterReader;
  package$hle.NativeFunction = NativeFunction;
  package$hle.BaseSceModule = BaseSceModule;
  package$hle.SceSubmodule = SceSubmodule;
  var package$error = package$hle.error || (package$hle.error = {});
  package$error.SceKernelException = SceKernelException;
  var package$manager = package$hle.manager || (package$hle.manager = {});
  package$manager.WaitObject = WaitObject;
  package$hle.SceModule = SceModule;
  package$error.sceKernelException_za3lpa$ = sceKernelException;
  Object.defineProperty(package$error, 'SceKernelErrors', {
    get: SceKernelErrors_getInstance
  });
  package$manager.CallbackManager = CallbackManager;
  package$manager.PspCallback = PspCallback;
  ConfigManager.StringConfig = ConfigManager$StringConfig;
  package$manager.ConfigManager = ConfigManager;
  package$manager.DeviceManager = DeviceManager;
  Object.defineProperty(FileManager, 'Companion', {
    get: FileManager$Companion_getInstance
  });
  package$manager.FileManager = FileManager;
  package$manager.FileDescriptor = FileDescriptor;
  package$manager.DirectoryDescriptor = DirectoryDescriptor;
  Object.defineProperty(SceIoStat, 'Companion', {
    get: SceIoStat$Companion_getInstance
  });
  package$manager.SceIoStat = SceIoStat;
  Object.defineProperty(HleIoDirent, 'Companion', {
    get: HleIoDirent$Companion_getInstance
  });
  package$manager.HleIoDirent = HleIoDirent;
  Object.defineProperty(package$manager, 'IOFileModes', {
    get: IOFileModes_getInstance
  });
  Object.defineProperty(package$manager, 'SeekType', {
    get: SeekType_getInstance
  });
  Object.defineProperty(package$manager, 'FileOpenFlags', {
    get: FileOpenFlags_getInstance
  });
  InterruptManager.InterruptHandler = InterruptManager$InterruptHandler;
  InterruptManager.InterruptKind = InterruptManager$InterruptKind;
  package$manager.InterruptManager = InterruptManager;
  Object.defineProperty(package$manager, 'PspInterrupts', {
    get: PspInterrupts_getInstance
  });
  package$manager.ResourceNotFoundException = ResourceNotFoundException;
  package$manager.Manager = Manager;
  package$manager.Resource = Resource;
  package$manager.MemoryManager = MemoryManager;
  Object.defineProperty(MemoryPartitions, 'Companion', {
    get: MemoryPartitions$Companion_getInstance
  });
  package$manager.MemoryPartitions = MemoryPartitions;
  Object.defineProperty(MemoryAnchor, 'Low', {
    get: MemoryAnchor$Low_getInstance
  });
  Object.defineProperty(MemoryAnchor, 'High', {
    get: MemoryAnchor$High_getInstance
  });
  Object.defineProperty(MemoryAnchor, 'Address', {
    get: MemoryAnchor$Address_getInstance
  });
  Object.defineProperty(MemoryAnchor, 'LowAligned', {
    get: MemoryAnchor$LowAligned_getInstance
  });
  Object.defineProperty(MemoryAnchor, 'HighAligned', {
    get: MemoryAnchor$HighAligned_getInstance
  });
  Object.defineProperty(MemoryAnchor, 'Companion', {
    get: MemoryAnchor$Companion_getInstance
  });
  package$manager.MemoryAnchor = MemoryAnchor;
  package$manager.OutOfMemoryError = OutOfMemoryError;
  Object.defineProperty(MemoryPartition, 'Companion', {
    get: MemoryPartition$Companion_getInstance
  });
  package$manager.MemoryPartition = MemoryPartition;
  package$manager.ModuleManager = ModuleManager;
  package$manager.SyscallManager = SyscallManager;
  Object.defineProperty(package$manager, 'INSTRUCTIONS_PER_STEP', {
    get: function () {
      return INSTRUCTIONS_PER_STEP;
    }
  });
  package$manager.ThreadManager = ThreadManager;
  WaitObject.COROUTINE = WaitObject$COROUTINE;
  Object.defineProperty(WaitObject, 'VBLANK', {
    get: WaitObject$VBLANK_getInstance
  });
  Object.defineProperty(PspThread$Phase, 'STOPPED', {
    get: PspThread$Phase$STOPPED_getInstance
  });
  Object.defineProperty(PspThread$Phase, 'RUNNING', {
    get: PspThread$Phase$RUNNING_getInstance
  });
  Object.defineProperty(PspThread$Phase, 'WAITING', {
    get: PspThread$Phase$WAITING_getInstance
  });
  Object.defineProperty(PspThread$Phase, 'DELETED', {
    get: PspThread$Phase$DELETED_getInstance
  });
  PspThread.Phase = PspThread$Phase;
  package$manager.PspThread = PspThread;
  $$importsForInline$$['kds-js'] = $module$kds_js;
  package$manager.get__thread_he8x89$ = get__thread;
  package$manager.set__thread_fh26zs$ = set__thread;
  package$manager.get_thread_he8x89$ = get_thread;
  package$manager.PspEventFlag = PspEventFlag;
  Object.defineProperty(package$manager, 'EventFlagWaitTypeSet', {
    get: EventFlagWaitTypeSet_getInstance
  });
  Object.defineProperty(package$manager, 'ThreadStatus', {
    get: ThreadStatus_getInstance
  });
  Object.defineProperty(SceKernelThreadInfo, 'Companion', {
    get: SceKernelThreadInfo$Companion_getInstance
  });
  package$manager.SceKernelThreadInfo = SceKernelThreadInfo;
  Object.defineProperty(package$manager, 'PspThreadAttributes', {
    get: PspThreadAttributes_getInstance
  });
  package$manager.TimeManager = TimeManager;
  $$importsForInline$$['klock-js'] = $module$klock_js;
  package$manager.get_microseconds_rcaex3$ = get_microseconds;
  Object.defineProperty(ScePspDateTime, 'Companion', {
    get: ScePspDateTime$Companion_getInstance
  });
  package$manager.ScePspDateTime = ScePspDateTime;
  var package$modules = package$hle.modules || (package$hle.modules = {});
  package$modules.ExceptionManagerForKernel = ExceptionManagerForKernel;
  package$modules.InterruptManager = InterruptManager_0;
  Object.defineProperty(IoFileMgrForUser, 'Companion', {
    get: IoFileMgrForUser$Companion_getInstance
  });
  IoFileMgrForUser.AsyncHandle = IoFileMgrForUser$AsyncHandle;
  package$modules.IoFileMgrForUser = IoFileMgrForUser;
  package$modules.check_igl5gt$ = check;
  package$modules.cached_igl5gt$ = cached;
  package$modules.Kernel_Library = Kernel_Library;
  package$modules.LoadCoreForKernel = LoadCoreForKernel;
  package$modules.LoadExecForUser = LoadExecForUser;
  package$modules.ModuleMgrForUser = ModuleMgrForUser;
  StdioForUser.StdioStream = StdioForUser$StdioStream;
  package$modules.StdioForUser = StdioForUser;
  SysMemUserForUser.Partition = SysMemUserForUser$Partition;
  package$modules.SysMemUserForUser = SysMemUserForUser;
  package$modules.ThreadManForUser = ThreadManForUser;
  Object.defineProperty(SceKernelSemaInfo, 'Companion', {
    get: SceKernelSemaInfo$Companion_getInstance
  });
  package$modules.SceKernelSemaInfo = SceKernelSemaInfo;
  Object.defineProperty(K0Structure, 'Companion', {
    get: K0Structure$Companion_getInstance
  });
  package$modules.K0Structure = K0Structure;
  package$modules.ThreadManForUser_Alarm = ThreadManForUser_Alarm;
  package$modules.ThreadManForUser_Callback = ThreadManForUser_Callback;
  package$modules.ThreadManForUser_EventFlags = ThreadManForUser_EventFlags;
  package$modules.ThreadManForUser_Fpl = ThreadManForUser_Fpl;
  package$modules.ThreadManForUser_Mbx = ThreadManForUser_Mbx;
  package$modules.ThreadManForUser_Mutex = ThreadManForUser_Mutex;
  ThreadManForUser_Sema.PspSemaphore = ThreadManForUser_Sema$PspSemaphore;
  ThreadManForUser_Sema.SemaphoreManager = ThreadManForUser_Sema$SemaphoreManager;
  package$modules.ThreadManForUser_Sema = ThreadManForUser_Sema;
  package$modules.ThreadManForUser_Thread = ThreadManForUser_Thread;
  package$modules.ThreadManForUser_Time = ThreadManForUser_Time;
  Object.defineProperty(ThreadManForUser_Vpl, 'Companion', {
    get: ThreadManForUser_Vpl$Companion_getInstance
  });
  ThreadManForUser_Vpl$PspVpl.WaitHandle = ThreadManForUser_Vpl$PspVpl$WaitHandle;
  ThreadManForUser_Vpl.PspVpl = ThreadManForUser_Vpl$PspVpl;
  Object.defineProperty(ThreadManForUser_Vpl$SceKernelVplInfo, 'Companion', {
    get: ThreadManForUser_Vpl$SceKernelVplInfo$Companion_getInstance
  });
  ThreadManForUser_Vpl.SceKernelVplInfo = ThreadManForUser_Vpl$SceKernelVplInfo;
  package$modules.ThreadManForUser_Vpl = ThreadManForUser_Vpl;
  package$modules.UtilsBase = UtilsBase;
  package$modules.UtilsForKernel = UtilsForKernel;
  package$modules.UtilsForUser = UtilsForUser;
  sceAtrac3plus.AtracID = sceAtrac3plus$AtracID;
  package$modules.sceAtrac3plus = sceAtrac3plus;
  Object.defineProperty(sceAudio, 'AudioFormat', {
    get: sceAudio$AudioFormat_getInstance
  });
  sceAudio.AudioChannel = sceAudio$AudioChannel;
  package$modules.sceAudio = sceAudio;
  package$modules.sceCtrl = sceCtrl;
  package$modules.sceDisplay = sceDisplay;
  package$modules.sceDmac = sceDmac;
  package$modules.sceGe_user = sceGe_user;
  Object.defineProperty(sceHprm, 'Companion', {
    get: sceHprm$Companion_getInstance
  });
  package$modules.sceHprm = sceHprm;
  Object.defineProperty(sceImpose, 'Companion', {
    get: sceImpose$Companion_getInstance
  });
  package$modules.sceImpose = sceImpose;
  package$modules.sceMp3 = sceMp3;
  package$modules.sceMpeg = sceMpeg;
  package$modules.sceNet = sceNet;
  package$modules.sceNetAdhoc = sceNetAdhoc;
  package$modules.sceNetAdhocMatching = sceNetAdhocMatching;
  package$modules.sceNetAdhocctl = sceNetAdhocctl;
  package$modules.sceNetInet = sceNetInet;
  package$modules.scePower = scePower;
  package$modules.sceReg = sceReg;
  Object.defineProperty(RegParam, 'Companion', {
    get: RegParam$Companion_getInstance
  });
  package$modules.RegParam = RegParam;
  package$modules.sceRtc = sceRtc;
  Object.defineProperty(sceSasCore, 'Companion', {
    get: sceSasCore$Companion_getInstance
  });
  Object.defineProperty(sceSasCore$WaveformEffectType, 'OFF', {
    get: sceSasCore$WaveformEffectType$OFF_getInstance
  });
  Object.defineProperty(sceSasCore$WaveformEffectType, 'ROOM', {
    get: sceSasCore$WaveformEffectType$ROOM_getInstance
  });
  Object.defineProperty(sceSasCore$WaveformEffectType, 'UNK1', {
    get: sceSasCore$WaveformEffectType$UNK1_getInstance
  });
  Object.defineProperty(sceSasCore$WaveformEffectType, 'UNK2', {
    get: sceSasCore$WaveformEffectType$UNK2_getInstance
  });
  Object.defineProperty(sceSasCore$WaveformEffectType, 'UNK3', {
    get: sceSasCore$WaveformEffectType$UNK3_getInstance
  });
  Object.defineProperty(sceSasCore$WaveformEffectType, 'HALL', {
    get: sceSasCore$WaveformEffectType$HALL_getInstance
  });
  Object.defineProperty(sceSasCore$WaveformEffectType, 'SPACE', {
    get: sceSasCore$WaveformEffectType$SPACE_getInstance
  });
  Object.defineProperty(sceSasCore$WaveformEffectType, 'ECHO', {
    get: sceSasCore$WaveformEffectType$ECHO_getInstance
  });
  Object.defineProperty(sceSasCore$WaveformEffectType, 'DELAY', {
    get: sceSasCore$WaveformEffectType$DELAY_getInstance
  });
  Object.defineProperty(sceSasCore$WaveformEffectType, 'PIPE', {
    get: sceSasCore$WaveformEffectType$PIPE_getInstance
  });
  Object.defineProperty(sceSasCore$WaveformEffectType, 'Companion', {
    get: sceSasCore$WaveformEffectType$Companion_getInstance
  });
  sceSasCore.WaveformEffectType = sceSasCore$WaveformEffectType;
  sceSasCore.SasCore = sceSasCore$SasCore;
  sceSasCore.SoundSource = sceSasCore$SoundSource;
  sceSasCore.Sample = sceSasCore$Sample;
  sceSasCore.Voice = sceSasCore$Voice;
  sceSasCore.PcmSoundSource = sceSasCore$PcmSoundSource;
  sceSasCore.Envelope = sceSasCore$Envelope;
  Object.defineProperty(sceSasCore$OutputMode, 'STEREO', {
    get: sceSasCore$OutputMode$STEREO_getInstance
  });
  Object.defineProperty(sceSasCore$OutputMode, 'MULTICHANNEL', {
    get: sceSasCore$OutputMode$MULTICHANNEL_getInstance
  });
  Object.defineProperty(sceSasCore$OutputMode, 'Companion', {
    get: sceSasCore$OutputMode$Companion_getInstance
  });
  sceSasCore.OutputMode = sceSasCore$OutputMode;
  Object.defineProperty(sceSasCore$AdsrCurveMode, 'LINEAR_INCREASE', {
    get: sceSasCore$AdsrCurveMode$LINEAR_INCREASE_getInstance
  });
  Object.defineProperty(sceSasCore$AdsrCurveMode, 'LINEAR_DECREASE', {
    get: sceSasCore$AdsrCurveMode$LINEAR_DECREASE_getInstance
  });
  Object.defineProperty(sceSasCore$AdsrCurveMode, 'LINEAR_BENT', {
    get: sceSasCore$AdsrCurveMode$LINEAR_BENT_getInstance
  });
  Object.defineProperty(sceSasCore$AdsrCurveMode, 'EXPONENT_REV', {
    get: sceSasCore$AdsrCurveMode$EXPONENT_REV_getInstance
  });
  Object.defineProperty(sceSasCore$AdsrCurveMode, 'EXPONENT', {
    get: sceSasCore$AdsrCurveMode$EXPONENT_getInstance
  });
  Object.defineProperty(sceSasCore$AdsrCurveMode, 'DIRECT', {
    get: sceSasCore$AdsrCurveMode$DIRECT_getInstance
  });
  Object.defineProperty(sceSasCore$AdsrCurveMode, 'Companion', {
    get: sceSasCore$AdsrCurveMode$Companion_getInstance
  });
  sceSasCore.AdsrCurveMode = sceSasCore$AdsrCurveMode;
  Object.defineProperty(sceSasCore, 'AdsrFlags', {
    get: sceSasCore$AdsrFlags_getInstance
  });
  package$modules.sceSasCore = sceSasCore;
  package$modules.sceSuspendForUser = sceSuspendForUser;
  package$modules.sceUmdUser = sceUmdUser;
  Object.defineProperty(sceUtility, 'Companion', {
    get: sceUtility$Companion_getInstance
  });
  package$modules.sceUtility = sceUtility;
  Object.defineProperty(PspLanguages, 'JAPANESE', {
    get: PspLanguages$JAPANESE_getInstance
  });
  Object.defineProperty(PspLanguages, 'ENGLISH', {
    get: PspLanguages$ENGLISH_getInstance
  });
  Object.defineProperty(PspLanguages, 'FRENCH', {
    get: PspLanguages$FRENCH_getInstance
  });
  Object.defineProperty(PspLanguages, 'SPANISH', {
    get: PspLanguages$SPANISH_getInstance
  });
  Object.defineProperty(PspLanguages, 'GERMAN', {
    get: PspLanguages$GERMAN_getInstance
  });
  Object.defineProperty(PspLanguages, 'ITALIAN', {
    get: PspLanguages$ITALIAN_getInstance
  });
  Object.defineProperty(PspLanguages, 'DUTCH', {
    get: PspLanguages$DUTCH_getInstance
  });
  Object.defineProperty(PspLanguages, 'PORTUGUESE', {
    get: PspLanguages$PORTUGUESE_getInstance
  });
  Object.defineProperty(PspLanguages, 'RUSSIAN', {
    get: PspLanguages$RUSSIAN_getInstance
  });
  Object.defineProperty(PspLanguages, 'KOREAN', {
    get: PspLanguages$KOREAN_getInstance
  });
  Object.defineProperty(PspLanguages, 'TRADITIONAL_CHINESE', {
    get: PspLanguages$TRADITIONAL_CHINESE_getInstance
  });
  Object.defineProperty(PspLanguages, 'SIMPLIFIED_CHINESE', {
    get: PspLanguages$SIMPLIFIED_CHINESE_getInstance
  });
  Object.defineProperty(PspLanguages, 'Companion', {
    get: PspLanguages$Companion_getInstance
  });
  package$modules.PspLanguages = PspLanguages;
  Object.defineProperty(PspUtilitySavedataMode, 'Autoload', {
    get: PspUtilitySavedataMode$Autoload_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'Autosave', {
    get: PspUtilitySavedataMode$Autosave_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'Load', {
    get: PspUtilitySavedataMode$Load_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'Save', {
    get: PspUtilitySavedataMode$Save_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'ListLoad', {
    get: PspUtilitySavedataMode$ListLoad_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'ListSave', {
    get: PspUtilitySavedataMode$ListSave_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'ListDelete', {
    get: PspUtilitySavedataMode$ListDelete_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'Delete', {
    get: PspUtilitySavedataMode$Delete_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'Sizes', {
    get: PspUtilitySavedataMode$Sizes_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'AutoDelete', {
    get: PspUtilitySavedataMode$AutoDelete_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'SingleDelete', {
    get: PspUtilitySavedataMode$SingleDelete_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'List', {
    get: PspUtilitySavedataMode$List_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'Files', {
    get: PspUtilitySavedataMode$Files_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'MakeDataSecure', {
    get: PspUtilitySavedataMode$MakeDataSecure_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'MakeData', {
    get: PspUtilitySavedataMode$MakeData_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'ReadSecure', {
    get: PspUtilitySavedataMode$ReadSecure_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'Read', {
    get: PspUtilitySavedataMode$Read_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'WriteSecure', {
    get: PspUtilitySavedataMode$WriteSecure_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'Write', {
    get: PspUtilitySavedataMode$Write_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'EraseSecure', {
    get: PspUtilitySavedataMode$EraseSecure_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'Erase', {
    get: PspUtilitySavedataMode$Erase_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'DeleteData', {
    get: PspUtilitySavedataMode$DeleteData_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'GetSize', {
    get: PspUtilitySavedataMode$GetSize_getInstance
  });
  Object.defineProperty(PspUtilitySavedataMode, 'Companion', {
    get: PspUtilitySavedataMode$Companion_getInstance
  });
  package$modules.PspUtilitySavedataMode = PspUtilitySavedataMode;
  Object.defineProperty(PspUtilitySavedataFocus, 'PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN', {
    get: PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN_getInstance
  });
  Object.defineProperty(PspUtilitySavedataFocus, 'PSP_UTILITY_SAVEDATA_FOCUS_FIRSTLIST', {
    get: PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_FIRSTLIST_getInstance
  });
  Object.defineProperty(PspUtilitySavedataFocus, 'PSP_UTILITY_SAVEDATA_FOCUS_LASTLIST', {
    get: PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LASTLIST_getInstance
  });
  Object.defineProperty(PspUtilitySavedataFocus, 'PSP_UTILITY_SAVEDATA_FOCUS_LATEST', {
    get: PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LATEST_getInstance
  });
  Object.defineProperty(PspUtilitySavedataFocus, 'PSP_UTILITY_SAVEDATA_FOCUS_OLDEST', {
    get: PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_OLDEST_getInstance
  });
  Object.defineProperty(PspUtilitySavedataFocus, 'PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN2', {
    get: PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN2_getInstance
  });
  Object.defineProperty(PspUtilitySavedataFocus, 'PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN3', {
    get: PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_UNKNOWN3_getInstance
  });
  Object.defineProperty(PspUtilitySavedataFocus, 'PSP_UTILITY_SAVEDATA_FOCUS_FIRSTEMPTY', {
    get: PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_FIRSTEMPTY_getInstance
  });
  Object.defineProperty(PspUtilitySavedataFocus, 'PSP_UTILITY_SAVEDATA_FOCUS_LASTEMPTY', {
    get: PspUtilitySavedataFocus$PSP_UTILITY_SAVEDATA_FOCUS_LASTEMPTY_getInstance
  });
  Object.defineProperty(PspUtilitySavedataFocus, 'Companion', {
    get: PspUtilitySavedataFocus$Companion_getInstance
  });
  package$modules.PspUtilitySavedataFocus = PspUtilitySavedataFocus;
  Object.defineProperty(PspUtilityDialogCommon, 'Companion', {
    get: PspUtilityDialogCommon$Companion_getInstance
  });
  package$modules.PspUtilityDialogCommon = PspUtilityDialogCommon;
  Object.defineProperty(PspUtilitySavedataSFOParam, 'Companion', {
    get: PspUtilitySavedataSFOParam$Companion_getInstance
  });
  package$modules.PspUtilitySavedataSFOParam = PspUtilitySavedataSFOParam;
  Object.defineProperty(PspUtilitySavedataFileData, 'Companion', {
    get: PspUtilitySavedataFileData$Companion_getInstance
  });
  package$modules.PspUtilitySavedataFileData = PspUtilitySavedataFileData;
  Object.defineProperty(SceUtilitySavedataParam, 'Companion', {
    get: SceUtilitySavedataParam$Companion_getInstance
  });
  package$modules.SceUtilitySavedataParam = SceUtilitySavedataParam;
  Object.defineProperty(PspUtilityMsgDialogMode, 'PSP_UTILITY_MSGDIALOG_MODE_ERROR', {
    get: PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_ERROR_getInstance
  });
  Object.defineProperty(PspUtilityMsgDialogMode, 'PSP_UTILITY_MSGDIALOG_MODE_TEXT', {
    get: PspUtilityMsgDialogMode$PSP_UTILITY_MSGDIALOG_MODE_TEXT_getInstance
  });
  Object.defineProperty(PspUtilityMsgDialogMode, 'Companion', {
    get: PspUtilityMsgDialogMode$Companion_getInstance
  });
  package$modules.PspUtilityMsgDialogMode = PspUtilityMsgDialogMode;
  Object.defineProperty(PspUtilityMsgDialogOption, 'PSP_UTILITY_MSGDIALOG_OPTION_ERROR', {
    get: PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_ERROR_getInstance
  });
  Object.defineProperty(PspUtilityMsgDialogOption, 'PSP_UTILITY_MSGDIALOG_OPTION_TEXT', {
    get: PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_TEXT_getInstance
  });
  Object.defineProperty(PspUtilityMsgDialogOption, 'PSP_UTILITY_MSGDIALOG_OPTION_YESNO_BUTTONS', {
    get: PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_YESNO_BUTTONS_getInstance
  });
  Object.defineProperty(PspUtilityMsgDialogOption, 'PSP_UTILITY_MSGDIALOG_OPTION_DEFAULT_NO', {
    get: PspUtilityMsgDialogOption$PSP_UTILITY_MSGDIALOG_OPTION_DEFAULT_NO_getInstance
  });
  Object.defineProperty(PspUtilityMsgDialogOption, 'Companion', {
    get: PspUtilityMsgDialogOption$Companion_getInstance
  });
  package$modules.PspUtilityMsgDialogOption = PspUtilityMsgDialogOption;
  Object.defineProperty(PspUtilityMsgDialogPressed, 'PSP_UTILITY_MSGDIALOG_RESULT_UNKNOWN1', {
    get: PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_UNKNOWN1_getInstance
  });
  Object.defineProperty(PspUtilityMsgDialogPressed, 'PSP_UTILITY_MSGDIALOG_RESULT_YES', {
    get: PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_YES_getInstance
  });
  Object.defineProperty(PspUtilityMsgDialogPressed, 'PSP_UTILITY_MSGDIALOG_RESULT_NO', {
    get: PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_NO_getInstance
  });
  Object.defineProperty(PspUtilityMsgDialogPressed, 'PSP_UTILITY_MSGDIALOG_RESULT_BACK', {
    get: PspUtilityMsgDialogPressed$PSP_UTILITY_MSGDIALOG_RESULT_BACK_getInstance
  });
  Object.defineProperty(PspUtilityMsgDialogPressed, 'Companion', {
    get: PspUtilityMsgDialogPressed$Companion_getInstance
  });
  package$modules.PspUtilityMsgDialogPressed = PspUtilityMsgDialogPressed;
  Object.defineProperty(DialogStepEnum, 'NONE', {
    get: DialogStepEnum$NONE_getInstance
  });
  Object.defineProperty(DialogStepEnum, 'INIT', {
    get: DialogStepEnum$INIT_getInstance
  });
  Object.defineProperty(DialogStepEnum, 'PROCESSING', {
    get: DialogStepEnum$PROCESSING_getInstance
  });
  Object.defineProperty(DialogStepEnum, 'SUCCESS', {
    get: DialogStepEnum$SUCCESS_getInstance
  });
  Object.defineProperty(DialogStepEnum, 'SHUTDOWN', {
    get: DialogStepEnum$SHUTDOWN_getInstance
  });
  Object.defineProperty(DialogStepEnum, 'Companion', {
    get: DialogStepEnum$Companion_getInstance
  });
  package$modules.DialogStepEnum = DialogStepEnum;
  Object.defineProperty(PspUtilityMsgDialogParams, 'Companion', {
    get: PspUtilityMsgDialogParams$Companion_getInstance
  });
  package$modules.PspUtilityMsgDialogParams = PspUtilityMsgDialogParams;
  package$modules.sceVaudio = sceVaudio;
  package$modules.sceWlanDrv = sceWlanDrv;
  LibDoc.prototype.Entry = LibDoc$Entry;
  LibDoc.prototype.Function = LibDoc$Function;
  LibDoc.prototype.Variable = LibDoc$Variable;
  LibDoc.prototype.Library = LibDoc$Library;
  LibDoc.prototype.Prx = LibDoc$Prx;
  LibDoc.prototype.Doc = LibDoc$Doc;
  var package$psplibdoc = package$hle.psplibdoc || (package$hle.psplibdoc = {});
  Object.defineProperty(package$psplibdoc, 'LibDoc', {
    get: LibDoc_getInstance
  });
  package$psplibdoc.dump_i1u5gc$ = dump;
  package$psplibdoc.dump_xaol4r$ = dump_0;
  package$psplibdoc.dump_67zrc0$ = dump_1;
  package$psplibdoc.dump_687hwi$ = dump_2;
  Object.defineProperty(Kirk$KirkMode, 'Invalid0', {
    get: Kirk$KirkMode$Invalid0_getInstance
  });
  Object.defineProperty(Kirk$KirkMode, 'Cmd1', {
    get: Kirk$KirkMode$Cmd1_getInstance
  });
  Object.defineProperty(Kirk$KirkMode, 'Cmd2', {
    get: Kirk$KirkMode$Cmd2_getInstance
  });
  Object.defineProperty(Kirk$KirkMode, 'Cmd3', {
    get: Kirk$KirkMode$Cmd3_getInstance
  });
  Object.defineProperty(Kirk$KirkMode, 'EncryptCbc', {
    get: Kirk$KirkMode$EncryptCbc_getInstance
  });
  Object.defineProperty(Kirk$KirkMode, 'DecryptCbc', {
    get: Kirk$KirkMode$DecryptCbc_getInstance
  });
  Object.defineProperty(Kirk$KirkMode, 'Companion', {
    get: Kirk$KirkMode$Companion_getInstance
  });
  Kirk.prototype.KirkMode = Kirk$KirkMode;
  Object.defineProperty(Kirk$CommandEnum, 'DECRYPT_PRIVATE', {
    get: Kirk$CommandEnum$DECRYPT_PRIVATE_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'ENCRYPT_SIGN', {
    get: Kirk$CommandEnum$ENCRYPT_SIGN_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'DECRYPT_SIGN', {
    get: Kirk$CommandEnum$DECRYPT_SIGN_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'ENCRYPT_IV_0', {
    get: Kirk$CommandEnum$ENCRYPT_IV_0_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'ENCRYPT_IV_FUSE', {
    get: Kirk$CommandEnum$ENCRYPT_IV_FUSE_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'ENCRYPT_IV_USER', {
    get: Kirk$CommandEnum$ENCRYPT_IV_USER_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'DECRYPT_IV_0', {
    get: Kirk$CommandEnum$DECRYPT_IV_0_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'DECRYPT_IV_FUSE', {
    get: Kirk$CommandEnum$DECRYPT_IV_FUSE_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'DECRYPT_IV_USER', {
    get: Kirk$CommandEnum$DECRYPT_IV_USER_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'PRIV_SIG_CHECK', {
    get: Kirk$CommandEnum$PRIV_SIG_CHECK_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'SHA1_HASH', {
    get: Kirk$CommandEnum$SHA1_HASH_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'ECDSA_GEN_KEYS', {
    get: Kirk$CommandEnum$ECDSA_GEN_KEYS_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'ECDSA_MULTIPLY_POINT', {
    get: Kirk$CommandEnum$ECDSA_MULTIPLY_POINT_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'PRNG', {
    get: Kirk$CommandEnum$PRNG_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'INIT', {
    get: Kirk$CommandEnum$INIT_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'ECDSA_SIGN', {
    get: Kirk$CommandEnum$ECDSA_SIGN_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'ECDSA_VERIFY', {
    get: Kirk$CommandEnum$ECDSA_VERIFY_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'CERT_VERIFY', {
    get: Kirk$CommandEnum$CERT_VERIFY_getInstance
  });
  Object.defineProperty(Kirk$CommandEnum, 'Companion', {
    get: Kirk$CommandEnum$Companion_getInstance
  });
  Kirk.prototype.CommandEnum = Kirk$CommandEnum;
  Object.defineProperty(Kirk$KIRK_AES128CBC_HEADER, 'Companion', {
    get: Kirk$KIRK_AES128CBC_HEADER$Companion_getInstance
  });
  Kirk.prototype.KIRK_AES128CBC_HEADER = Kirk$KIRK_AES128CBC_HEADER;
  Object.defineProperty(Kirk$AES128CMACHeader, 'Companion', {
    get: Kirk$AES128CMACHeader$Companion_getInstance
  });
  Kirk.prototype.AES128CMACHeader = Kirk$AES128CMACHeader;
  var package$kirk = package$kpspemu.kirk || (package$kpspemu.kirk = {});
  Object.defineProperty(package$kirk, 'Kirk', {
    get: Kirk_getInstance
  });
  Object.defineProperty(package$kirk, 'KirkKeys', {
    get: KirkKeys_getInstance
  });
  Object.defineProperty(package$kirk, 'SHA1', {
    get: SHA1_getInstance
  });
  Object.defineProperty(Memory, 'Companion', {
    get: Memory$Companion_getInstance
  });
  Memory.MemorySegment = Memory$MemorySegment;
  var package$mem = package$kpspemu.mem || (package$kpspemu.mem = {});
  package$mem.Memory = Memory;
  Object.defineProperty(package$mem, 'DummyMemory', {
    get: DummyMemory_getInstance
  });
  package$mem.trace_w7fru8$ = trace;
  package$mem.TraceMemory = TraceMemory;
  package$mem.ListenerMemory = ListenerMemory;
  package$mem.FastMemoryBacked = FastMemoryBacked;
  package$mem.NormalMemory = NormalMemory;
  package$mem.SmallMemory = SmallMemory;
  package$mem.openSync_qe2j2c$ = openSync_0;
  package$mem.PtrArray = PtrArray;
  package$mem.BasePtr = BasePtr;
  package$mem.Ptr32 = Ptr32;
  package$mem.Ptr64 = Ptr64;
  package$mem.PtrStruct = PtrStruct;
  package$mem.Ptr = Ptr;
  Object.defineProperty(package$mem, 'DummyPtr', {
    get: DummyPtr_getInstance
  });
  Object.defineProperty(package$mem, 'nullPtr', {
    get: function () {
      return nullPtr;
    }
  });
  package$mem.read_n8zybn$ = read;
  package$mem.write_6lso8t$ = write;
  package$mem.openSync_jk65or$ = openSync_1;
  var package$util = package$kpspemu.util || (package$kpspemu.util = {});
  package$util.read_316kh2$ = read_0;
  package$util.write_qawobk$ = write_0;
  package$mem.capture_r3ciq9$ = capture;
  package$mem.MemPtr = MemPtr;
  package$mem.array_jk65or$ = array;
  package$mem.ptr_w2yn32$ = ptr;
  package$mem.get_isNotNull_gbg6tg$ = get_isNotNull;
  package$mem.get_isNull_gbg6tg$ = get_isNull;
  package$mem.writeBytes_yjewl3$ = writeBytes_0;
  package$mem.readBytes_gdi75l$ = readBytes_1;
  package$mem.readStringz_3jkzkn$ = readStringz_2;
  var package$native = package$kpspemu.native || (package$kpspemu.native = {});
  Object.defineProperty(package$native, 'CurrentVfs', {
    get: get_CurrentVfs
  });
  var package$ui = package$kpspemu.ui || (package$kpspemu.ui = {});
  package$ui.PromptConfigurator = PromptConfigurator;
  package$ui.simpleButton_p55u7q$ = simpleButton;
  package$util.Resetable = Resetable;
  package$util.PoolItem = PoolItem;
  package$util.AsyncPool2 = AsyncPool2;
  package$util.AutoArrayList = AutoArrayList;
  package$util.p_void = p_void;
  package$util.p_base = p_base;
  package$util.p_u8 = p_u8;
  package$util.p_u32 = p_u32;
  package$util.memcpy_537deq$ = memcpy;
  package$util.memset_1b934m$ = memset;
  package$util.memcmp_537deq$ = memcmp;
  package$util.p_u8_c57rbv$ = p_u8_0;
  package$util.p_u8_964n91$ = p_u8_1;
  package$util.p_u32_c57rbv$ = p_u32_0;
  package$util.p_u32_964n91$ = p_u32_1;
  package$util.p_u8_9z33bt$ = p_u8_2;
  package$util.p_u32_9z33bt$ = p_u32_2;
  package$util.openSync_dqtzuj$ = openSync_2;
  package$util.unsigned_964n91$ = unsigned;
  package$util.DyAccess = DyAccess;
  package$util.get_dy_mzud1t$ = get_dy;
  package$util.toDyAccess_mzud1t$ = toDyAccess;
  package$util.EventFlag = EventFlag;
  package$util.waitAllBits_ul0uki$ = waitAllBits;
  package$util.waitAnyBits_ul0uki$ = waitAnyBits;
  package$util.EventStatus = EventStatus;
  package$util.FloatArray2 = FloatArray2;
  package$util.IntArray2 = IntArray2;
  package$util.sumByFloat_v16v6p$ = sumByFloat;
  package$util.get_pspSign_81szk$ = get_pspSign;
  package$util.get_pspAbs_81szk$ = get_pspAbs;
  package$util.get_pspSat0_81szk$ = get_pspSat0;
  package$util.get_pspSat1_81szk$ = get_pspSat1;
  package$util.pspAdd_yni7l$ = pspAdd;
  package$util.pspSub_yni7l$ = pspSub;
  package$util.FloatIntBuffer = FloatIntBuffer;
  package$util.toFloat_jwfjvd$ = toFloat;
  package$util.toHalfFloat_81szk$ = toHalfFloat;
  Object.defineProperty(HalfFloat, 'Companion', {
    get: HalfFloat$Companion_getInstance
  });
  package$util.HalfFloat_init_mx4ult$ = HalfFloat_init;
  package$util.HalfFloat = HalfFloat;
  package$util.SmallCompanion2 = SmallCompanion2;
  package$util.copyOfIntArray_tlvhdp$ = copyOfIntArray;
  package$util.copyOfShortArray_tlvhdp$ = copyOfShortArray;
  package$util.setBits_z3q3t4$ = setBits;
  package$util.asNull_dqglrj$ = asNull;
  package$util.currentTimeMicroInt_llmgxl$ = currentTimeMicroInt;
  package$util.currentTimeMicroDouble_llmgxl$ = currentTimeMicroDouble;
  package$util.currentTimeMicro_llmgxl$ = currentTimeMicro;
  package$util.millisecondsToMicroseconds_vgaf26$ = millisecondsToMicroseconds;
  package$util.millisecondsToMicroseconds_tjmtcn$ = millisecondsToMicroseconds_0;
  package$util.millisecondsToMicroseconds_lmwxhz$ = millisecondsToMicroseconds_1;
  package$util.cosv1_mx4ult$ = cosv1;
  package$util.sinv1_mx4ult$ = sinv1;
  package$util.nsinv1_mx4ult$ = nsinv1;
  package$util.asinv1_mx4ult$ = asinv1;
  package$util.clampf_wj6e7o$ = clampf;
  package$util.isNanOrInfinitef_81szk$ = isNanOrInfinitef;
  package$util.scalab_vjorfl$ = scalab;
  package$util.nullIf_ujn5f2$ = nullIf;
  Object.defineProperty(package$util, 'PspEmuKeys', {
    get: PspEmuKeys_getInstance
  });
  package$util.ResourceItem = ResourceItem;
  package$util.ResourceList = ResourceList;
  Signal2.Node = Signal2$Node;
  package$util.Signal2 = Signal2;
  package$util.mapSignal_j7rffy$ = mapSignal;
  package$util.invoke_jkf2xv$ = invoke;
  package$util.waitOne_5vrvbf$ = waitOne_0;
  package$util.waitOnePromise_mn2xl0$ = waitOnePromise;
  package$util.waitOneTimeout_h7z9g6$ = waitOneTimeout;
  package$util.waitOneOptTimeout_xhc6jt$ = waitOneOptTimeout;
  package$util.get_shex_s8ev3n$ = get_shex;
  Struct.Item = Struct$Item;
  package$util.Struct = Struct;
  package$util.AS_66kbsz$ = AS;
  package$util.StructType = StructType;
  Object.defineProperty(package$util, 'UINT8', {
    get: UINT8_getInstance
  });
  Object.defineProperty(package$util, 'UINT16', {
    get: UINT16_getInstance
  });
  Object.defineProperty(package$util, 'INT32', {
    get: INT32_getInstance
  });
  Object.defineProperty(package$util, 'INT32_be', {
    get: INT32_be_getInstance
  });
  package$util.map_wzxiik$ = map;
  package$util.asEnum_cych8e$ = asEnum;
  Object.defineProperty(package$util, 'INT64', {
    get: INT64_getInstance
  });
  Object.defineProperty(package$util, 'FLOAT32', {
    get: FLOAT32_getInstance
  });
  package$util.STRINGZ_init_s8ev37$ = STRINGZ_init;
  package$util.STRINGZ = STRINGZ;
  package$util.ARRAY = ARRAY;
  package$util.INTLIKEARRAY = INTLIKEARRAY;
  package$util.BYTEARRAY = BYTEARRAY;
  package$util.SHORTARRAY = SHORTARRAY;
  package$util.CHARARRAY = CHARARRAY;
  package$util.INTARRAY = INTARRAY;
  package$util.BaseEnum = BaseEnum;
  package$util.INT32_ENUM = INT32_ENUM;
  package$util.UINT8_ENUM = UINT8_ENUM;
  package$util.TimeoutException = TimeoutException;
  package$util.mkdirsSafe_93ma6j$ = mkdirsSafe;
  Object.defineProperty(Dropbox, 'Companion', {
    get: Dropbox$Companion_getInstance
  });
  Dropbox.Entry = Dropbox$Entry;
  var package$dropbox = package$util.dropbox || (package$util.dropbox = {});
  package$dropbox.Dropbox = Dropbox;
  package$dropbox.overlapsWith_h4y4nt$ = overlapsWith;
  package$dropbox.Option = Option;
  Object.defineProperty(DropboxVfs, 'Companion', {
    get: DropboxVfs$Companion_getInstance
  });
  package$dropbox.DropboxVfs = DropboxVfs;
  package$dropbox.main_kand9s$ = main_0;
  ExprNode.EvalContext = ExprNode$EvalContext;
  ExprNode.VAR = ExprNode$VAR;
  ExprNode.LIT = ExprNode$LIT;
  ExprNode.ARRAY_LIT = ExprNode$ARRAY_LIT;
  ExprNode.OBJECT_LIT = ExprNode$OBJECT_LIT;
  ExprNode.ACCESS = ExprNode$ACCESS;
  ExprNode.CALL = ExprNode$CALL;
  ExprNode.BINOP = ExprNode$BINOP;
  ExprNode.TERNARY = ExprNode$TERNARY;
  ExprNode.UNOP = ExprNode$UNOP;
  Object.defineProperty(ExprNode, 'Companion', {
    get: ExprNode$Companion_getInstance
  });
  ExprNode$Token.TId = ExprNode$Token$TId;
  ExprNode$Token.TNumber = ExprNode$Token$TNumber;
  ExprNode$Token.TString = ExprNode$Token$TString;
  ExprNode$Token.TOperator = ExprNode$Token$TOperator;
  ExprNode$Token.TEnd = ExprNode$Token$TEnd;
  Object.defineProperty(ExprNode$Token, 'Companion', {
    get: ExprNode$Token$Companion_getInstance
  });
  ExprNode.Token = ExprNode$Token;
  var package$expr = package$util.expr || (package$util.expr = {});
  package$expr.ExprNode = ExprNode;
  package$expr.tryRead_g2rue5$ = tryRead;
  package$expr.expectPeek_g2rue5$ = expectPeek;
  package$expr.expect_g2rue5$ = expect;
  package$expr.parseExpr_nzu0aw$ = parseExpr;
  package$expr.parseId_nzu0aw$ = parseId;
  package$expr.parseIdList_nzu0aw$ = parseIdList;
  Object.defineProperty(package$expr, 'Dynamic2', {
    get: Dynamic2_getInstance
  });
  package$expr.toDynamicString_ntq51o$ = toDynamicString;
  package$expr.toDynamicBool_ntq51o$ = toDynamicBool;
  package$expr.toDynamicInt_ntq51o$ = toDynamicInt;
  package$expr.toDynamicList_ntq51o$ = toDynamicList;
  var package$io = package$util.io || (package$util.io = {});
  package$io.IsoVfs2_phxig4$ = IsoVfs2;
  package$io.IsoVfs2_axnxby$ = IsoVfs2_0;
  package$io.openAsIso2_g5ykjz$ = openAsIso2;
  package$io.openAsIso2_93ma6j$ = openAsIso2_0;
  ISO2.prototype.IsoReader = ISO2$IsoReader;
  ISO2.prototype.IsoFile = ISO2$IsoFile;
  Object.defineProperty(ISO2$UdfDescriptorTag$TagId, 'Companion', {
    get: ISO2$UdfDescriptorTag$TagId$Companion_getInstance
  });
  ISO2$UdfDescriptorTag.TagId = ISO2$UdfDescriptorTag$TagId;
  ISO2.prototype.UdfDescriptorTag_init_39qel5$ = ISO2$ISO2$UdfDescriptorTag_init;
  ISO2.prototype.UdfDescriptorTag = ISO2$UdfDescriptorTag;
  ISO2.prototype.UdfExtent_init_39qel5$ = ISO2$ISO2$UdfExtent_init;
  ISO2.prototype.UdfExtent = ISO2$UdfExtent;
  ISO2.prototype.UdfAnchorVolumeDescriptorPointer_init_39qel5$ = ISO2$ISO2$UdfAnchorVolumeDescriptorPointer_init;
  ISO2.prototype.UdfAnchorVolumeDescriptorPointer = ISO2$UdfAnchorVolumeDescriptorPointer;
  ISO2.prototype.UdfCharspec_init_39qel5$ = ISO2$ISO2$UdfCharspec_init;
  ISO2.prototype.UdfCharspec = ISO2$UdfCharspec;
  ISO2.prototype.UdfEntityId_init_39qel5$ = ISO2$ISO2$UdfEntityId_init;
  ISO2.prototype.UdfEntityId = ISO2$UdfEntityId;
  ISO2.prototype.UdfTimestamp_init_39qel5$ = ISO2$ISO2$UdfTimestamp_init;
  ISO2.prototype.UdfTimestamp = ISO2$UdfTimestamp;
  ISO2.prototype.UdfPrimaryVolumeDescriptor_init_39qel5$ = ISO2$ISO2$UdfPrimaryVolumeDescriptor_init;
  ISO2.prototype.UdfPrimaryVolumeDescriptor = ISO2$UdfPrimaryVolumeDescriptor;
  ISO2.prototype.PrimaryVolumeDescriptor_init_39qel5$ = ISO2$ISO2$PrimaryVolumeDescriptor_init;
  ISO2.prototype.PrimaryVolumeDescriptor = ISO2$PrimaryVolumeDescriptor;
  Object.defineProperty(ISO2$VolumeDescriptorHeader$TypeEnum, 'Companion', {
    get: ISO2$VolumeDescriptorHeader$TypeEnum$Companion_getInstance
  });
  ISO2$VolumeDescriptorHeader.TypeEnum = ISO2$VolumeDescriptorHeader$TypeEnum;
  ISO2.prototype.VolumeDescriptorHeader_init_39qel5$ = ISO2$ISO2$VolumeDescriptorHeader_init;
  ISO2.prototype.VolumeDescriptorHeader = ISO2$VolumeDescriptorHeader;
  ISO2.prototype.IsoDate_init_39qel5$ = ISO2$ISO2$IsoDate_init;
  ISO2.prototype.IsoDate = ISO2$IsoDate;
  ISO2.prototype.DateStruct_init_39qel5$ = ISO2$ISO2$DateStruct_init;
  ISO2.prototype.DateStruct = ISO2$DateStruct;
  Object.defineProperty(ISO2$DirectoryRecord, 'Companion', {
    get: ISO2$DirectoryRecord$Companion_getInstance
  });
  ISO2.prototype.DirectoryRecord = ISO2$DirectoryRecord;
  Object.defineProperty(package$io, 'ISO2', {
    get: ISO2_getInstance
  });
  package$io.readUdfDString_hsu5ns$ = readUdfDString;
  package$io.readUtf16_le_hsu5ns$ = readUtf16_le;
  package$io.MountableVfsSync_d8a1fi$ = MountableVfsSync;
  package$io.MountableSync = MountableSync;
  package$io.ZipVfs2_960o6l$ = ZipVfs2;
  package$io.openAsZip2_9q8ax6$ = openAsZip2;
  package$util.max_y2kzbl$ = max_1;
  package$util.max_7b5o5w$ = max_2;
  package$util.max_s2l86p$ = max_3;
  package$util.max_qt1dr2$ = max_4;
  package$util.max_tjonv8$ = max_5;
  package$util.max_4qozqa$ = max_6;
  package$util.withOptTimeout_a8wvfh$ = withOptTimeout;
  Object.defineProperty(package$native, 'KPspEmuNative', {
    get: KPspEmuNative_getInstance
  });
  ElfProgramHeaderType.prototype.hasFlag_89au20$ = Flags.prototype.hasFlag_89au20$;
  ElfSectionHeaderType.prototype.hasFlag_89au20$ = Flags.prototype.hasFlag_89au20$;
  ElfSectionHeaderFlags.prototype.hasFlag_89au20$ = Flags.prototype.hasFlag_89au20$;
  DummyPtr.prototype.sdw_6svq3l$ = Ptr.prototype.sdw_6svq3l$;
  DummyPtr.prototype.ldw_za3lpa$ = Ptr.prototype.ldw_za3lpa$;
  MemPtr.prototype.sdw_6svq3l$ = Ptr.prototype.sdw_6svq3l$;
  MemPtr.prototype.ldw_za3lpa$ = Ptr.prototype.ldw_za3lpa$;
  KPSPEMU_VERSION = '0.5.0-SNAPSHOT';
  ADDR_TYPE_NONE = 0;
  ADDR_TYPE_REG = 1;
  ADDR_TYPE_16 = 2;
  ADDR_TYPE_26 = 3;
  INSTR_TYPE_PSP = 1 << 0;
  INSTR_TYPE_SYSCALL = 1 << 1;
  INSTR_TYPE_B = 1 << 2;
  INSTR_TYPE_LIKELY = 1 << 3;
  INSTR_TYPE_JAL = 1 << 4;
  INSTR_TYPE_JUMP = 1 << 5;
  INSTR_TYPE_BREAK = 1 << 6;
  errorLogger = Logger.Companion.invoke_61zpoe$('SceKernelException');
  INSTRUCTIONS_PER_STEP = 5000000;
  _thread = new Extra$Property(void 0, _thread$lambda);
  MEMORY_MASK = 268435455;
  MASK = MEMORY_MASK;
  LWR_MASK = new Int32Array([0, (new Kotlin.Long(-16777216, 0)).toInt(), (new Kotlin.Long(-65536, 0)).toInt(), (new Kotlin.Long(-256, 0)).toInt()]);
  LWR_SHIFT = new Int32Array([0, 8, 16, 24]);
  LWL_MASK = new Int32Array([16777215, 65535, 255, 0]);
  LWL_SHIFT = new Int32Array([24, 16, 8, 0]);
  SWL_MASK = new Int32Array([(new Kotlin.Long(-256, 0)).toInt(), (new Kotlin.Long(-65536, 0)).toInt(), (new Kotlin.Long(-16777216, 0)).toInt(), 0]);
  SWL_SHIFT = new Int32Array([24, 16, 8, 0]);
  SWR_MASK = new Int32Array([0, 255, 65535, 16777215]);
  SWR_SHIFT = new Int32Array([0, 8, 16, 24]);
  nullPtr = DummyPtr_getInstance();
  CurrentVfs = lazy(CurrentVfs$lambda);
  main([]);
  Kotlin.defineModule('kpspemu', _);
  return _;
}));

//# sourceMappingURL=kpspemu.js.map
